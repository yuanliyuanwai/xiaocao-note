From: =?gb2312?B?08kgV2luZG93cyBJbnRlcm5ldCBFeHBsb3JlciA4ILGjtOY=?=
Subject: =?gb2312?B?SlByb2ZpbGVyILzgv9hUb21jYXQgLSDQobWltcSyqb/N16jAuCAtIA==?=
	=?gb2312?B?sqm/zca1tcAgLSBDU0ROLk5FVA==?=
Date: Tue, 6 Dec 2016 10:31:08 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01D24FAB.DB890E40"
X-MimeOLE: Produced By Microsoft MimeOLE V6.1.7600.16543

这是 MIME 格式的多方邮件。

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://blog.csdn.net/catoop/article/details/48755581

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" =
"http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<HTML xmlns=3D"http://www.w3.org/1999/xhtml"><HEAD><TITLE>JProfiler =
=E7=9B=91=E6=8E=A7Tomcat - =
=E5=B0=8F=E5=8D=95=E7=9A=84=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F - =
=E5=8D=9A=E5=AE=A2=E9=A2=91=E9=81=93 - CSDN.NET</TITLE>
<SCRIPT type=3Dtext/javascript charset=3Dutf-8=20
src=3D"http://c.csdnimg.cn/pubfooter/js/tracking.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript>
        var protocol =3D window.location.protocol;
        document.write('<script type=3D"text/javascript" src=3D"' + =
protocol + '//csdnimg.cn/pubfooter/js/repoAddr2.js?v=3D' + Math.random() =
+ '"></' + 'script>');
    </SCRIPT>

<META content=3Dno-siteapp http-equiv=3DCache-Control><LINK =
rel=3Dalternate href=3D"#"=20
media=3Dhandheld>
<META content=3D"text/html; charset=3Dutf-8" http-equiv=3DContent-Type>
<META name=3Ddescription=20
content=3D"Axis =
1.4=E4=BE=9D=E8=B5=96=E7=9A=84jar=E5=8C=85Maven=E9=85=8D=E7=BD=AE=E6=96=87=
=E4=BB=B6                    org.apache.axis            axis            =
1.4">
<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/jquery.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/jquery-version.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/ad.js?v=3D1.1"></SCRIPT>
<!--new top--><LINK rel=3Dstylesheet=20
href=3D"http://c.csdnimg.cn/public/common/toolbar/css/index.css"><!--new =
top--><!-- ad begin -->
<SCRIPT language=3Djavascript type=3Dtext/javascript=20
src=3D"http://ads.csdn.net/js/tracking.js"></SCRIPT>
<!-- ad end--><LINK rel=3DStylesheet type=3Dtext/css=20
href=3D"http://static.blog.csdn.net/skin/skin-yellow/css/style.css?v=3D1.=
1"><LINK=20
id=3DRSSLink title=3DRSS rel=3Dalternate type=3Dapplication/rss+xml=20
href=3D"/catoop/rss/list"><LINK rel=3D"shortcut icon"=20
href=3D"http://c.csdnimg.cn/public/favicon.ico"><LINK rel=3Dstylesheet =
type=3Dtext/css=20
href=3D"http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/defa=
ult.css">
<SCRIPT>
    var _hmt =3D _hmt || [];
    (function () {
        var hm =3D document.createElement("script");
        hm.src =3D =
"//hm.baidu.com/hm.js?6bcd52f51e9b3dce32bec4a3997715ac";
        var s =3D document.getElementsByTagName("script")[0];
        s.parentNode.insertBefore(hm, s);
    })();
</SCRIPT>

<META name=3DGENERATOR content=3D"MSHTML 8.00.7600.16385"></HEAD>
<BODY><!-- =E5=B9=BF=E5=91=8A=E4=BD=8D=E5=BC=80=E5=A7=8B --><INS =
data-revive-id=3D"8c38e720de1c90a6f6ff52f3f89c4d57"=20
data-revive-zoneid=3D"149"></INS><!-- =
=E5=B9=BF=E5=91=8A=E4=BD=8D=E7=BB=93=E6=9D=9F --><!--new top-->
<SCRIPT id=3Dtoolbar-tpl-scriptId type=3Dtext/javascript=20
src=3D"http://c.csdnimg.cn/public/common/toolbar/js/html.js" =
skin=3D"black"=20
prod=3D"blog" fixed=3D"true"></SCRIPT>
<!--new top-->
<DIV id=3Dcontainer>
<DIV id=3Dheader>
<DIV class=3Dheader>
<DIV id=3Dblog_title>
<H2><A =
href=3D"http://blog.csdn.net/catoop">=E5=B0=8F=E5=8D=95=E7=9A=84=E5=8D=9A=
=E5=AE=A2=E4=B8=93=E6=A0=8F</A></H2>
<H3></H3>
<DIV class=3Dclear></DIV></DIV>
<DIV class=3Dclear></DIV></DIV></DIV>
<DIV id=3Dnavigator>
<DIV class=3Dnavigator_bg></DIV>
<DIV class=3Dnavigator>
<UL>
  <LI id=3DbtnContents><A=20
  href=3D"http://blog.csdn.net/catoop?viewmode=3Dcontents"><SPAN=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_mulu'])"><IMG=20
  =
src=3D"http://static.blog.csdn.net/images/ico_list.gif">=E7=9B=AE=E5=BD=95=
=E8=A7=86=E5=9B=BE</SPAN></A></LI>
  <LI id=3DbtnView><A =
href=3D"http://blog.csdn.net/catoop?viewmode=3Dlist"><SPAN=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_zhaiyao'])"><IMG=20
  =
src=3D"http://static.blog.csdn.net/images/ico_summary.gif">=E6=91=98=E8=A6=
=81=E8=A7=86=E5=9B=BE</SPAN></A></LI>
  <LI id=3DbtnRss><A href=3D"http://blog.csdn.net/catoop/rss/list"><SPAN =

  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_RSS'])"><IMG=20
  =
src=3D"http://static.blog.csdn.net/images/ico_rss.gif">=E8=AE=A2=E9=98=85=
</SPAN></A></LI></UL></DIV></DIV>
<SCRIPT type=3Dtext/javascript>
    var username =3D "catoop";
    var _blogger =3D username;
    var blog_address =3D "http://blog.csdn.net/catoop";
    var static_host =3D "http://static.blog.csdn.net";
    var currentUserName =3D ""; =20
</SCRIPT>

<DIV id=3Dbody>
<DIV id=3Dmain>
<DIV class=3Dmain>
<DIV class=3Dad_class>
<DIV class=3D"notice tracking-ad" data-mod=3D"popu_3"><A=20
href=3D"http://geek.csdn.net/news/detail/126445"><FONT =
color=3Dred>=E8=81=9A=E7=84=A6=E8=A1=8C=E4=B8=9A=E6=9C=80=E4=BD=B3=E5=AE=9E=
=E8=B7=B5=EF=BC=8CBDTC=20
2016=E5=AE=8C=E6=95=B4=E8=AE=AE=E7=A8=8B=E5=85=AC=E5=B8=83 =
</FONT></A>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A=20
href=3D"http://huiyi.csdn.net/activity/product/goods_list?project_id=3D32=
87"><FONT=20
color=3Dblue>=E5=BE=AE=E4=BF=A1=E5=B0=8F=E7=A8=8B=E5=BA=8F=E5=AE=9E=E6=88=
=98=E9=A1=B9=E7=9B=AE=E2=80=94=E2=80=94=E7=82=B9=E9=A4=90=E7=B3=BB=E7=BB=9F=
 </FONT></A>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A=20
href=3D"http://blog.csdn.net/turingbooks/article/details/53079366"><FONT =

color=3Dred>=E7=A8=8B=E5=BA=8F=E5=91=9811=E6=9C=88=E4=B9=A6=E8=AE=AF=EF=BC=
=8C=E8=AF=84=E8=AE=BA=E5=BE=97=E4=B9=A6=E5=95=A6 =
</FONT></A>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A=20
href=3D"http://geek.csdn.net/news/detail/110921"><FONT color=3Dblue>Get=20
IT=E6=8A=80=E8=83=BD=E7=9F=A5=E8=AF=86=E5=BA=93=EF=BC=8C50=E4=B8=AA=E9=A2=
=86=E5=9F=9F=E4=B8=80=E9=94=AE=E7=9B=B4=E8=BE=BE=20
</FONT></A></FONT></A></FONT></A></DIV></DIV><!-- =
=E5=B9=BF=E5=91=8A=E4=BD=8D=E5=BC=80=E5=A7=8B --><INS=20
data-revive-id=3D"8c38e720de1c90a6f6ff52f3f89c4d57" =
data-revive-zoneid=3D"72"></INS><!-- =
=E5=B9=BF=E5=91=8A=E4=BD=8D=E7=BB=93=E6=9D=9F --><LINK rel=3Dstylesheet =
type=3Dtext/css=20
href=3D"http://static.blog.csdn.net/css/comment1.css"><LINK =
rel=3Dstylesheet=20
type=3Dtext/css href=3D"http://static.blog.csdn.net/css/style1.css">
<SCRIPT language=3DJavaScript type=3Dtext/javascript=20
src=3D"http://download.csdn.net/js/jquery.cookie.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://c.csdnimg.cn/rabbit/search-service/main.js"></SCRIPT>
<LINK rel=3Dstylesheet=20
href=3D"http://static.blog.csdn.net/public/res-min/markdown_views.css?v=3D=
1.0"><LINK=20
rel=3Dstylesheet =
href=3D"http://static.blog.csdn.net/css/category.css?v=3D1.0">
<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/public/res/bower-libs/MathJax/MathJax.=
js?config=3DTeX-AMS_HTML"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/web-storage-cache.min.js"></SC=
RIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/replace.min.js"></SCRIPT>

<SCRIPT type=3Dtext/ecmascript>
      window.quickReplyflag =3D true;
          =20
            var isBole =3D false;
           =20
         =20
    </SCRIPT>

<DIV id=3Darticle_details class=3Ddetails>
<DIV class=3Darticle_title><SPAN class=3D"ico ico_type_Original"></SPAN>
<H1><SPAN class=3Dlink_title><A=20
href=3D"http://blog.csdn.net/catoop/article/details/48755581">JProfiler =
=E7=9B=91=E6=8E=A7Tomcat=20
</A></SPAN></H1></DIV>
<DIV class=3D"article_manage clearfix">
<DIV class=3Darticle_r><SPAN class=3Dlink_postdate>2015-09-26 =
22:21</SPAN> <SPAN=20
class=3Dlink_view =
title=3D=E9=98=85=E8=AF=BB=E6=AC=A1=E6=95=B0>6442=E4=BA=BA=E9=98=85=E8=AF=
=BB</SPAN> <SPAN class=3Dlink_comments=20
title=3D=E8=AF=84=E8=AE=BA=E6=AC=A1=E6=95=B0><A=20
onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_pinglun'])"=20
href=3D"http://blog.csdn.net/catoop/article/details/48755581#comments">=E8=
=AF=84=E8=AE=BA</A>(4)</SPAN>=20
<SPAN class=3D"link_collect tracking-ad" data-mod=3D"popu_171"><A =
title=3D=E6=94=B6=E8=97=8F=20
onclick=3D"javascript:collectArticle('JProfiler =
=E7=9B=91=E6=8E=A7Tomcat','48755581');return false;"=20
href=3D"javascript:void(0);">=E6=94=B6=E8=97=8F</A></SPAN> <SPAN =
class=3Dlink_report><A title=3D=E4=B8=BE=E6=8A=A5=20
onclick=3D"javascript:report(48755581,2);return false;"=20
href=3D"http://blog.csdn.net/catoop/article/details/48755581#report">=E4=B8=
=BE=E6=8A=A5</A></SPAN>=20
</DIV></DIV>
<DIV style=3D"DISPLAY: none" id=3Dembody class=3Dembody><SPAN=20
class=3Dembody_t>=E6=9C=AC=E6=96=87=E7=AB=A0=E5=B7=B2=E6=94=B6=E5=BD=95=E4=
=BA=8E=EF=BC=9A</SPAN>=20
<DIV id=3Dlib class=3Dembody_c =
value=3D'{"err":0,"msg":"ok","data":[]}'></DIV></DIV>
<STYLE type=3Dtext/css>.embody {
	BORDER-BOTTOM: #ededed 1px solid; PADDING-BOTTOM: 10px; MARGIN: 0px =
-20px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; PADDING-TOP: 10px
}
.embody_b {
	PADDING-BOTTOM: 10px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 10px
}
.embody .embody_t {
	DISPLAY: inline-block; MARGIN-RIGHT: 10px
}
.embody .embody_c {
	DISPLAY: inline-block; MARGIN-RIGHT: 10px
}
.embody_t {
	COLOR: #999; FONT-SIZE: 12px
}
.embody_c {
	FONT-SIZE: 12px
}
.embody_c IMG {
	DISPLAY: inline-block; VERTICAL-ALIGN: middle
}
.embody_c EM {
	DISPLAY: inline-block; VERTICAL-ALIGN: middle
}
.embody_c IMG {
	WIDTH: 30px; HEIGHT: 30px
}
.embody_c EM {
	FONT-STYLE: normal; MARGIN: 0px 20px 0px 10px; COLOR: #333
}
</STYLE>

<SCRIPT type=3Dtext/javascript>
        $(function () {
            try
            {
                var lib =3D eval("("+$("#lib").attr("value")+")");
                var html =3D "";
                if (lib.err =3D=3D 0) {
                    $.each(lib.data, function (i) {
                        var obj =3D lib.data[i];
                        //html +=3D '<img src=3D"' + obj.logo + '"/>' + =
obj.name + "&nbsp;&nbsp;";
                        html +=3D ' <a href=3D"' + obj.url + '" =
target=3D"_blank">';
                        html +=3D ' <img src=3D"' + obj.logo + '">';
                        html +=3D ' <em><b>' + obj.name + '</b></em>';
                        html +=3D ' </a>';
                    });
                    if (html !=3D "") {
                        setTimeout(function () {
                            $("#lib").html(html);                     =20
                            $("#embody").show();
                        }, 100);
                    }
                }     =20
            } catch (err)
            { }
           =20
        });
    </SCRIPT>

<DIV class=3D"category clearfix">
<DIV class=3Dcategory_l><IMG=20
src=3D"http://static.blog.csdn.net/images/category_icon.jpg"> =
<SPAN>=E5=88=86=E7=B1=BB=EF=BC=9A</SPAN>=20
</DIV>
<DIV class=3Dcategory_r><LABEL=20
onclick=3D"GetCategoryArticles('1135096','catoop','top','48755581');"><SP=
AN=20
onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_fenlei']);">=E5=BA=94=E7=94=A8=E9=83=A8=E7=BD=B2<EM>=EF=BC=
=8826=EF=BC=89</EM></SPAN>=20
<IMG style=3D"DISPLAY: inline" class=3Darrow-down=20
src=3D"http://static.blog.csdn.net/images/arrow_triangle%20_down.jpg"> =
<IMG=20
style=3D"DISPLAY: none" class=3Darrow-up=20
src=3D"http://static.blog.csdn.net/images/arrow_triangle_up.jpg">=20
<DIV class=3DsubItem>
<DIV class=3DsubItem_t><A=20
href=3D"http://blog.csdn.net/catoop/article/category/1135096"=20
target=3D_blank>=E4=BD=9C=E8=80=85=E5=90=8C=E7=B1=BB=E6=96=87=E7=AB=A0</A=
><I class=3DJ_close>X</I></DIV>
<UL id=3Dtop_1135096 class=3DsubItem_l></UL></DIV></LABEL></DIV></DIV>
<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/category.js"></SCRIPT>

<DIV class=3Dbog_copyright>
<P =
class=3Dcopyright_p>=E7=89=88=E6=9D=83=E5=A3=B0=E6=98=8E=EF=BC=9A=E6=9C=AC=
=E6=96=87=E4=B8=BA=E5=8D=9A=E4=B8=BB=E5=8E=9F=E5=88=9B=E6=96=87=E7=AB=A0=EF=
=BC=8C=E6=9C=AA=E7=BB=8F=E5=8D=9A=E4=B8=BB=E5=85=81=E8=AE=B8=E4=B8=8D=E5=BE=
=97=E8=BD=AC=E8=BD=BD=E3=80=82</P></DIV>
<DIV id=3Darticle_content class=3Darticle_content>
<H2><SPAN style=3D"FONT-SIZE: 14px">=E4=BB=8B=E7=BB=8D</SPAN></H2><SPAN=20
style=3D"FONT-SIZE: =
14px"><BR>JProfiler=E6=98=AF=E4=B8=80=E4=B8=AA=E5=85=A8=E5=8A=9F=E8=83=BD=
=E7=9A=84Java=E5=89=96=E6=9E=90=E5=B7=A5=E5=85=B7=EF=BC=88profiler=EF=BC=89=
=EF=BC=8C=E4=B8=93=E7=94=A8=E4=BA=8E=E5=88=86=E6=9E=90J2SE=E5=92=8CJ2EE=E5=
=BA=94=E7=94=A8=E7=A8=8B=E5=BA=8F=E3=80=82<BR>JProfiler=E6=98=AF=E4=B8=80=
=E4=B8=AA=E5=95=86=E4=B8=9A=E6=8E=88=E6=9D=83=E7=9A=84Java=E5=89=96=E6=9E=
=90=E5=B7=A5=E5=85=B7=EF=BC=8C=E7=94=B1EJ=E6=8A=80=E6=9C=AF=E6=9C=89=E9=99=
=90=E5=85=AC=E5=8F=B8=EF=BC=8C=E9=92=88=E5=AF=B9Java=20
EE=E5=92=8CJava=20
SE=E5=BA=94=E7=94=A8=E7=A8=8B=E5=BA=8F=E5=BC=80=E5=8F=91=E7=9A=84=E3=80=82=
=E5=AE=83=E5=85=81=E8=AE=B8=E4=B8=A4=E4=B8=AA=E5=86=85=E5=AD=98=E5=89=96=E9=
=9D=A2=E8=AF=84=E4=BC=B0=E5=86=85=E5=AD=98=E4=BD=BF=E7=94=A8=E6=83=85=E5=86=
=B5=E5=92=8C=E5=8A=A8=E6=80=81=E5=88=86=E9=85=8D=E6=B3=84=E6=BC=8F=E5=92=8C=
CPU=E5=89=96=E6=9E=90=EF=BC=8C=E4=BB=A5=E8=AF=84=E4=BC=B0=E7=BA=BF=E7=A8=8B=
=E5=86=B2=E7=AA=81=E3=80=82JProfiler=E7=9B=B4=E8=A7=89=E5=BC=8F=E7=9A=84G=
UI=E8=AE=A9=E4=BD=A0=E5=8F=AF=E4=BB=A5=E6=89=BE=E5=88=B0=E6=80=A7=E8=83=BD=
=E7=93=B6=E9=A2=88=E3=80=81=E6=8A=93=E5=87=BA=E5=86=85=E5=AD=98=E6=BC=8F=E5=
=A4=B1(memory=20
leaks)=E3=80=81=E5=B9=B6=E8=A7=A3=E5=86=B3=E6=89=A7=E8=A1=8C=E7=BB=AA=E7=9A=
=84=E9=97=AE=E9=A2=98=E3=80=82<BR><BR></SPAN>
<H2><SPAN style=3D"FONT-SIZE: =
14px">=E7=8E=AF=E5=A2=83=EF=BC=9A</SPAN></H2><SPAN=20
style=3D"FONT-SIZE: 14px">1=E3=80=81jdk 1.7<BR></SPAN>
<P><SPAN style=3D"FONT-SIZE: 14px">2=E3=80=81jprofiler 9.0.3</SPAN></P>
<P><SPAN style=3D"FONT-SIZE: 14px">3=E3=80=81Tomcat =
7<BR></SPAN></P><SPAN=20
style=3D"FONT-SIZE: 14px"><BR></SPAN>
<H2><SPAN style=3D"FONT-SIZE: =
14px">=E4=B8=8B=E8=BD=BD=E5=9C=B0=E5=9D=80=EF=BC=9A</SPAN></H2><SPAN=20
style=3D"FONT-SIZE: =
14px">http://www.ej-technologies.com/download/jprofiler/files<BR><BR></SP=
AN>
<H2><SPAN style=3D"FONT-SIZE: 14px">=E8=BF=9C=E7=A8=8BLinux =
=E6=9C=8D=E5=8A=A1=E5=99=A8=E9=85=8D=E7=BD=AE</SPAN></H2><SPAN=20
style=3D"FONT-SIZE: 14px">=E8=A7=A3=E5=8E=8B=EF=BC=9A<BR>tar -zxvf=20
jprofiler_linux_9_0_3.tar.gz<BR><BR>=E6=8B=B7=E8=B4=9D=EF=BC=9A<BR>cd =
jprofiler9/bin/<BR>cp jprofiler=20
/usr/local/<BR><BR>=E9=85=8D=E7=BD=AE=E7=8E=AF=E5=A2=83=E5=8F=98=E9=87=8F=
=EF=BC=9A<BR>=E4=BF=AE=E6=94=B9/etc/profile=E7=B3=BB=E7=BB=9F=E9=85=8D=E7=
=BD=AE=E6=96=87=E4=BB=B6=EF=BC=9A<BR>JPROFILER_HOME=3D/opt/shanhy/jprofil=
er9/bin/linux-x64<BR>export=20
LD_LIBRARY_PATH=3D$LD_LIBRARY_PATH:$JPROFILER_HOME<BR>=E4=BD=BF=E9=85=8D=E7=
=BD=AE=E6=96=87=E4=BB=B6=E7=94=9F=E6=95=88=EF=BC=9Asource=20
/etc/profile<BR><BR></SPAN>
<H2><SPAN style=3D"FONT-SIZE: 14px">=E6=9C=AC=E5=9C=B0 =
Windows=E5=AE=89=E8=A3=85</SPAN></H2><SPAN=20
style=3D"FONT-SIZE: =
14px">=E7=9B=B4=E6=8E=A5=E8=BF=90=E8=A1=8C=E4=B8=8B=E8=BD=BD=E7=9A=84 =
jprofiler_windows-x64_9_0_3.exe<BR>=E4=B8=80=E7=9B=B4 Next=20
=E5=88=B0=E8=BE=93=E5=85=A5=E6=B3=A8=E5=86=8C=E7=A0=81=E7=9A=84=E5=9C=B0=E6=
=96=B9=EF=BC=8C=E4=B8=8B=E9=9D=A2=E6=98=AF=E5=8F=AF=E4=BB=A5=E4=BD=BF=E7=94=
=A8=E7=9A=84=E6=B3=A8=E5=86=8C=E7=A0=81<BR>L-Larry_Lau@163.com#36573-fdks=
cp15axjj6#25257=EF=BC=88=E4=BA=B2=E6=B5=8B=E5=8F=AF=E7=94=A8=EF=BC=89<BR>=
L-Larry_Lau@163.com#5481-ucjn4a16rvd98#6038<BR>L-Larry_Lau@163.com#99016-=
hli5ay1ylizjj#27215<BR>L-Larry_Lau@163.com#40775-3wle0g1uin5c1#0674<BR>L-=
Larry_Lau@163.com#7009-14frku31ynzpfr#20176<BR>L-Larry_Lau@163.com#49604-=
1jfe58we9gyb6#5814<BR>L-Larry_Lau@163.com#25531-1qcev4yintqkj#23927<BR>L-=
Larry_Lau@163.com#96496-1qsu1lb1jz7g8w#23479<BR>L-Larry_Lau@163.com#20948=
-11amlvg181cw0p#171159<BR><BR></SPAN>
<P><SPAN style=3D"FONT-SIZE: =
14px">=E5=AE=89=E8=A3=85=E5=88=B0=E6=9C=80=E5=90=8E=EF=BC=8C=E8=BF=90=E8=A1=
=8CjProfiler=E3=80=82</SPAN></P>
<P><BR></P>
<H2><SPAN style=3D"FONT-SIZE: =
14px">=E7=94=9F=E6=88=90=E8=84=9A=E6=9C=AC<BR></SPAN></H2>
<P><SPAN style=3D"FONT-SIZE: =
14px">=E5=9C=A8=E6=9C=AC=E6=9C=BA=E7=94=9F=E6=88=90startup_jprofiler.sh=E8=
=84=9A=E6=9C=AC=EF=BC=8C=E6=AD=A5=E9=AA=A4=E5=A6=82=E4=B8=8B=EF=BC=9A</SP=
AN></P>
<P><IMG alt=3D""=20
src=3D"http://img.blog.csdn.net/20150926220620152?watermark/2/text/aHR0cD=
ovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA=3D=3D/d=
issolve/70/gravity/Center"></P>
<P><IMG alt=3D""=20
src=3D"http://img.blog.csdn.net/20150926220634124?watermark/2/text/aHR0cD=
ovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA=3D=3D/d=
issolve/70/gravity/Center"></P>
<P><IMG alt=3D""=20
src=3D"http://img.blog.csdn.net/20150926220644390?watermark/2/text/aHR0cD=
ovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA=3D=3D/d=
issolve/70/gravity/Center"></P>
<P><IMG alt=3D""=20
src=3D"http://img.blog.csdn.net/20150926220654007?watermark/2/text/aHR0cD=
ovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA=3D=3D/d=
issolve/70/gravity/Center"></P>
<P><IMG alt=3D""=20
src=3D"http://img.blog.csdn.net/20150926220702923?watermark/2/text/aHR0cD=
ovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA=3D=3D/d=
issolve/70/gravity/Center"></P>
<P><IMG alt=3D""=20
src=3D"http://img.blog.csdn.net/20150926220713777?watermark/2/text/aHR0cD=
ovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA=3D=3D/d=
issolve/70/gravity/Center"></P>
<P><IMG alt=3D""=20
src=3D"http://img.blog.csdn.net/20150926220722900?watermark/2/text/aHR0cD=
ovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA=3D=3D/d=
issolve/70/gravity/Center"></P>
<P><IMG alt=3D""=20
src=3D"http://img.blog.csdn.net/20150926220732996?watermark/2/text/aHR0cD=
ovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA=3D=3D/d=
issolve/70/gravity/Center"></P>
<P><IMG alt=3D""=20
src=3D"http://img.blog.csdn.net/20150926220741337?watermark/2/text/aHR0cD=
ovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA=3D=3D/d=
issolve/70/gravity/Center"></P>
<P><BR></P>
<P><SPAN style=3D"FONT-SIZE: =
14px">=E8=87=B3=E6=AD=A4=EF=BC=8Cstartup_jprofiler.sh =
=E5=B7=B2=E7=BB=8F=E7=94=9F=E6=88=90=EF=BC=8C=E7=94=9F=E6=88=90=E4=BD=8D=E7=
=BD=AE=E4=B8=8E=E6=88=91=E4=BB=AC=E9=80=89=E6=8B=A9=E7=9A=84=20
startup.sh =
=E5=9C=A8=E5=90=8C=E4=B8=80=E4=B8=AA=E7=9B=AE=E5=BD=95=E3=80=82</SPAN></P=
>
<P><SPAN style=3D"FONT-SIZE: 14px">=E6=88=91=E4=BB=AC=E6=8A=8A =
startup_jprofiler.sh=20
=E4=B8=8A=E4=BC=A0=E5=88=B0=E8=BF=9C=E7=A8=8BLinux=E6=9C=8D=E5=8A=A1=E5=99=
=A8=E7=9A=84Tomcat/bin=E7=9B=AE=E5=BD=95=E4=B8=8B=E3=80=82</SPAN></P>
<P><SPAN style=3D"FONT-SIZE: =
14px">=E4=B8=8E=E5=BE=80=E5=B8=B8=E5=90=AF=E5=8A=A8Tomcat=E4=B8=8D=E5=90=8C=
=E7=9A=84=E6=98=AF=EF=BC=8C=E6=88=91=E4=BB=AC=E4=B8=8D=E4=BD=BF=E7=94=A8 =
startup.sh =E8=80=8C=E6=98=AF=E7=9B=B4=E6=8E=A5=E4=BD=BF=E7=94=A8=20
startup_jprofiler.sh =E5=90=AF=E5=8A=A8Tomcat=E3=80=82<BR></SPAN></P>
<P><SPAN style=3D"FONT-SIZE: =
14px">=E8=BF=99=E9=87=8C=E9=9C=80=E8=A6=81=E8=AF=B4=E4=B8=80=E4=B8=8B=E7=9A=
=84=E6=98=AF=EF=BC=8C=E9=BB=98=E8=AE=A4startup_jprofiler.sh =
=E6=9C=80=E5=90=8E=E5=90=AF=E5=8A=A8Tomcat =E6=96=B9=E5=BC=8F=E4=B8=BA=20
run=EF=BC=8C=E6=88=91=E4=BB=AC=E9=9C=80=E8=A6=81=E4=BF=AE=E6=94=B9=E4=B8=80=
=E4=B8=8B=EF=BC=8C=E4=BF=AE=E6=94=B9=E4=B8=BA =
start=EF=BC=8C=E4=B8=8B=E9=9D=A2=E6=88=91=E4=BB=AC=E5=AF=B9=E6=AF=94=E4=B8=
=80=E4=B8=8Bstartup.sh =E5=92=8C startup_jprofiler.sh =
=E7=9A=84=E4=B8=8D=E5=90=8C=EF=BC=9A</SPAN></P>
<P><SPAN style=3D"FONT-SIZE: 14px"></SPAN><IMG alt=3D""=20
src=3D"http://img.blog.csdn.net/20150926221445774?watermark/2/text/aHR0cD=
ovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA=3D=3D/d=
issolve/70/gravity/Center"><BR></P>
<P><BR></P>
<P><SPAN style=3D"FONT-SIZE: =
14px">=E5=85=B6=E5=AE=9E=E5=B7=AE=E5=88=AB=E4=B9=9F=E5=B0=B1=E6=98=AF=E5=A2=
=9E=E5=8A=A0=E4=BA=862=E8=A1=8C=E9=85=8D=E7=BD=AE=EF=BC=8C<SPAN=20
style=3D"FONT-SIZE: 14px"><SPAN style=3D"COLOR: =
#ff0000">=E6=8E=A8=E8=8D=90=E5=A4=A7=E5=AE=B6=E7=9B=B4=E6=8E=A5=E5=9C=A8=E6=
=9C=8D=E5=8A=A1=E5=99=A8=E4=B8=8A=E5=A4=8D=E5=88=B6startup.sh =E4=B8=BA=20
startup_jprofiler.sh</SPAN>=EF=BC=8C=E7=84=B6=E5=90=8E=E6=B7=BB=E5=8A=A0=E5=
=A6=82=E4=B8=8B=E4=B8=A4=E8=A1=8C=E5=8D=B3=E5=8F=AF=EF=BC=9A</SPAN></SPAN=
></P>
<P><SPAN=20
style=3D"FONT-SIZE: =
14px">CATALINA_OPTS=3D"-agentpath:/opt/jprofiler9/bin/linux-x64/libjprofi=
lerti.so=3Dport=3D8849,nowait=20
$CATALINA_OPTS"<BR>export CATALINA_OPTS</SPAN></P>
<P><BR></P>
<P><SPAN style=3D"COLOR: #ff0000; FONT-SIZE: =
14px">=E5=A6=82=E6=9E=9C=E6=98=AF=E7=94=A8=E5=B7=A5=E5=85=B7=E7=94=9F=E6=88=
=90=E7=9A=84<SPAN=20
style=3D"COLOR: rgb(255,0,0); FONT-SIZE: =
14px">startup_jprofiler.sh=EF=BC=8C</SPAN>=E6=B3=A8=E6=84=8F=E6=88=91=E4=BB=
=AC=E8=A6=81=E6=8A=8A=E7=94=9F=E7=9A=84startup_jprofiler.sh=E7=9A=84=E6=9C=
=80=E5=90=8E=E4=B8=80=E8=A1=8C=E7=9A=84=20
run =E4=BF=AE=E6=94=B9=E4=B8=BA start =
=E5=90=8E=EF=BC=8C=E5=86=8D=E5=90=AF=E5=8A=A8Tomcat=EF=BC=8C=E5=90=AF=E5=8A=
=A8=E5=A6=82=E5=9B=BE=E6=89=80=E7=A4=BA=EF=BC=9A</SPAN></P>
<P><SPAN style=3D"COLOR: #ff0000; FONT-SIZE: 14px"></SPAN><IMG alt=3D""=20
src=3D"http://img.blog.csdn.net/20150926221725807?watermark/2/text/aHR0cD=
ovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA=3D=3D/d=
issolve/70/gravity/Center"><BR></P>
<P><BR></P>
<H2><SPAN style=3D"FONT-SIZE: =
14px">=E6=9C=80=E5=90=8E=EF=BC=8C=E5=90=AF=E5=8A=A8jProfiler =
=E7=9B=91=E6=8E=A7</SPAN></H2>
<P><IMG alt=3D""=20
src=3D"http://img.blog.csdn.net/20150926221856324?watermark/2/text/aHR0cD=
ovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA=3D=3D/d=
issolve/70/gravity/Center"></P>
<P><IMG alt=3D""=20
src=3D"http://img.blog.csdn.net/20150926221905684?watermark/2/text/aHR0cD=
ovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA=3D=3D/d=
issolve/70/gravity/Center"></P>
<P><BR></P>
<P><SPAN style=3D"FONT-SIZE: 14px">=E7=82=B9=E5=87=BBOK =
=E5=90=8E=EF=BC=8C=E6=88=91=E4=BB=AC=E5=B0=B1=E5=8F=AF=E4=BB=A5=E6=9F=A5=E7=
=9C=8B=E6=9C=8D=E5=8A=A1=E5=99=A8Tomcat=E7=9A=84=E5=90=84=E7=A7=8D=E6=83=85=
=E5=86=B5=E4=BA=86=E3=80=82</SPAN></P>
<P><BR></P>
<P><SPAN style=3D"FONT-SIZE: 14px"></SPAN><BR></P>
<P><BR></P>
<P><BR></P>
<P><SPAN style=3D"FONT-SIZE: 14px"><BR></SPAN></P></DIV><!-- Baidu =
Button BEGIN -->
<DIV style=3D"FLOAT: right" class=3D"bdsharebuttonbox tracking-ad"=20
data-mod=3D"popu_172"><A=20
style=3D"BACKGROUND-IMAGE: =
url(http://bdimg.share.baidu.com/static/api/img/share/icons_0_16.png?v=3D=
d754dcc0.png) !important; BACKGROUND-POSITION: 0px 0px"=20
class=3Dbds_more =
href=3D"http://blog.csdn.net/catoop/article/details/48755581#"=20
data-cmd=3D"more"></A><A style=3D"BACKGROUND-POSITION: 0px -52px" =
class=3Dbds_qzone=20
title=3D=E5=88=86=E4=BA=AB=E5=88=B0QQ=E7=A9=BA=E9=97=B4 =
href=3D"http://blog.csdn.net/catoop/article/details/48755581#"=20
data-cmd=3D"qzone"></A><A style=3D"BACKGROUND-POSITION: 0px -104px" =
class=3Dbds_tsina=20
title=3D=E5=88=86=E4=BA=AB=E5=88=B0=E6=96=B0=E6=B5=AA=E5=BE=AE=E5=8D=9A =
href=3D"http://blog.csdn.net/catoop/article/details/48755581#"=20
data-cmd=3D"tsina"></A><A style=3D"BACKGROUND-POSITION: 0px -260px" =
class=3Dbds_tqq=20
title=3D=E5=88=86=E4=BA=AB=E5=88=B0=E8=85=BE=E8=AE=AF=E5=BE=AE=E5=8D=9A =
href=3D"http://blog.csdn.net/catoop/article/details/48755581#"=20
data-cmd=3D"tqq"></A><A style=3D"BACKGROUND-POSITION: 0px -208px" =
class=3Dbds_renren=20
title=3D=E5=88=86=E4=BA=AB=E5=88=B0=E4=BA=BA=E4=BA=BA=E7=BD=91 =
href=3D"http://blog.csdn.net/catoop/article/details/48755581#"=20
data-cmd=3D"renren"></A><A style=3D"BACKGROUND-POSITION: 0px -1612px"=20
class=3Dbds_weixin title=3D=E5=88=86=E4=BA=AB=E5=88=B0=E5=BE=AE=E4=BF=A1 =

href=3D"http://blog.csdn.net/catoop/article/details/48755581#"=20
data-cmd=3D"weixin"></A></DIV>
<SCRIPT>window._bd_share_config =3D { "common": { "bdSnsKey": {}, =
"bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", =
"bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) =
0[(getElementsByTagName('head')[0] || =
body).appendChild(createElement('script')).src =3D =
'http://bdimg.share.baidu.com/static/api/js/share.js?v=3D89860593.js?cdnv=
ersion=3D' + ~(-new Date() / 36e5)];</SCRIPT>
<!-- Baidu Button END --><LINK rel=3Dstylesheet=20
href=3D"http://static.blog.csdn.net/css/blog_detail.css"><!--172.16.140.1=
2--><!-- Baidu Button BEGIN -->
<SCRIPT id=3Dbdshare_js type=3Dtext/javascript=20
data=3D"type=3Dtools&amp;uid=3D1536434"></SCRIPT>

<SCRIPT id=3Dbdshell_js type=3Dtext/javascript></SCRIPT>

<SCRIPT type=3Dtext/javascript>
    document.getElementById("bdshell_js").src =3D =
"http://bdimg.share.baidu.com/static/js/shell_v2.js?cdnversion=3D" + =
Math.ceil(new Date()/3600000)
</SCRIPT>
<!-- Baidu Button END -->
<DIV id=3Ddigg ArticleId=3D"48755581">
<DL id=3DbtnDigg class=3D"digg digg_disable" onclick=3Dbtndigga();>
  <DT>=E9=A1=B6</DT>
  <DD>1</DD></DL>
<DL id=3DbtnBury class=3D"digg digg_disable" onclick=3Dbtnburya();>
  <DT>=E8=B8=A9</DT>
  <DD>0</DD></DL></DIV>
<DIV class=3Dtracking-ad data-mod=3D"popu_222"><A =
href=3D"javascript:void(0);"></A>=20
</DIV>
<DIV class=3Dtracking-ad data-mod=3D"popu_223"><A=20
href=3D"javascript:void(0);"></A>&nbsp;</DIV>
<SCRIPT type=3Dtext/javascript>
                function btndigga() {
                    $(".tracking-ad[data-mod=3D'popu_222'] a").click();
                }
                function btnburya() {
                    $(".tracking-ad[data-mod=3D'popu_223'] a").click();
                }
            </SCRIPT>

<UL class=3Darticle_next_prev>
  <LI class=3Dprev_article><SPAN=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_shangyipian']);location.href=3D'/catoop/article/details/48=
621157';">=E4=B8=8A=E4=B8=80=E7=AF=87</SPAN><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_shangyipian'])"=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/48621157">android=E7=BB=
=99=E6=9C=AA=E7=AD=BE=E5=90=8D=E7=9A=84apk=E7=AD=BE=E5=90=8D</A></LI>
  <LI class=3Dnext_article><SPAN=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_xiayipian']);location.href=3D'/catoop/article/details/4875=
6913';">=E4=B8=8B=E4=B8=80=E7=AF=87</SPAN><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_xiayipian'])"=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/48756913">Tomcat=E8=BD=
=AF=E8=BF=9E=E6=8E=A5=E8=AE=BF=E9=97=AE=E9=85=8D=E7=BD=AE=EF=BC=88symbol =

  link=EF=BC=89</A></LI></UL>
<DIV style=3D"HEIGHT: 10px; CLEAR: both"></DIV>
<DIV style=3D"DISPLAY: none" class=3Dsimilar_article>
<H4>=E6=88=91=E7=9A=84=E5=90=8C=E7=B1=BB=E6=96=87=E7=AB=A0</H4>
<DIV style=3D"MARGIN: 20px 0px 0px" class=3Dsimilar_c>
<DIV class=3Dsimilar_c_t><LABEL class=3Dsimilar_cur><SPAN =
style=3D"CURSOR: pointer"=20
onclick=3D"GetCategoryArticles('1135096','catoop','foot','48755581');">=E5=
=BA=94=E7=94=A8=E9=83=A8=E7=BD=B2<EM>=EF=BC=8826=EF=BC=89</EM></SPAN>=20
</LABEL></DIV>
<DIV style=3D"MAX-HEIGHT: 195px" class=3D"similar_wrap tracking-ad"=20
data-mod=3D"popu_141"><A style=3D"DISPLAY: none"=20
href=3D"http://blog.csdn.net/">http://blog.csdn.net/</A>=20
<UL class=3D"similar_list fl"></UL>
<UL class=3D"similar_list fr"></UL></DIV></DIV></DIV>
<SCRIPT type=3Dtext/javascript>
        $(function () {
            GetCategoryArticles('1135096', 'catoop','foot','48755581');
        });
    </SCRIPT>
</DIV>
<DIV id=3Dsuggest></DIV>
<SCRIPT language=3Djavascript type=3Dtext/javascript>    =20
             $(function(){
                 =
$.get("/catoop/svc/GetSuggestContent/48755581",function(data){
                     $("#suggest").html(data);
                 });    =20
             });            =20
         </SCRIPT>

<STYLE>.blog-ass-articl DD {
	PADDING-BOTTOM: 0px; MARGIN: 0px 30px 0px 0px; PADDING-LEFT: 10px; =
WIDTH: 99%; PADDING-RIGHT: 0px; FONT: 12px/23px "SimSun"; BACKGROUND: =
url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) =
no-repeat 0px 10px; FLOAT: left; HEIGHT: 23px; COLOR: #369; OVERFLOW: =
hidden; PADDING-TOP: 0px
}
</STYLE>
<LINK rel=3Dstylesheet =
href=3D"http://static.blog.csdn.net/css/replace.css">
<DIV id=3Drelate class=3Dtracking-ad data-mod=3D"popu_218">
<DIV class=3Drelate_t>
<H3><SPAN>=E5=8F=82=E8=80=83=E7=9F=A5=E8=AF=86=E5=BA=93</SPAN></H3></DIV>=

<DIV class=3Drelate_c></DIV></DIV>
<DL id=3Dres-relatived class=3Dblog-ass-articl>
  <DIV style=3D"DISPLAY: none" id=3Dlibkeyparent class=3D"embody =
embody_b"><SPAN=20
  =
class=3Dembody_t>=E6=9B=B4=E5=A4=9A=E8=B5=84=E6=96=99=E8=AF=B7=E5=8F=82=E8=
=80=83=EF=BC=9A</SPAN>=20
  <DIV id=3Dlibkey class=3Dembody_c></DIV></DIV>
  <DT><SPAN>=E7=8C=9C=E4=BD=A0=E5=9C=A8=E6=89=BE</SPAN></DT>
  <DIV style=3D"WIDTH: 42%; FLOAT: left" id=3DadCollege>
  <SCRIPT type=3Dtext/javascript=20
  src=3D"http://csdnimg.cn/jobreco/job_reco.js"></SCRIPT>

  <SCRIPT type=3Dtext/javascript>
            csdn.position.showEdu({
                sourceType: "blog",
                searchType: "detail",
                searchKey: "48755581",
                username: "",
                recordcount: "5",
                containerId: "adCollege" =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82=20
            });
        </SCRIPT>
  </DIV>
  <DIV style=3D"WIDTH: 42%; FLOAT: left; MARGIN-RIGHT: 30px" id=3Dres=20
  class=3Dtracking-ad data-mod=3D"popu_36"></DIV></DL>
<SCRIPT type=3Dtext/javascript>
    $(function () {
        setTimeout(function () {
            var searchtitletags =3D 'JProfiler =E7=9B=91=E6=8E=A7Tomcat' =
+ ',' + $("#tags").html();
            searchService({
                index: 'blog',
                query: searchtitletags,
                from: 5,
                size: 5,
                appendTo: '#res',
                url: 'recommend',
                his: 2,
                client: "blog_cf_enhance",
                tmpl: '<dd =
style=3D"background:url(http://static.blog.csdn.net/skin/default/images/b=
log-dot-red3.gif) no-repeat 0 10px;"><a href=3D"#{ url }" title=3D"#{ =
title }" strategy=3D"#{ strategy }">#{ title }</a></dd>'
            });
        }, 500);
    });   =20

 </SCRIPT>

<DIV id=3Dad_cen>
<SCRIPT type=3Dtext/javascript>
                        =
/*=E5=8D=9A=E5=AE=A2=E5=86=85=E5=AE=B9=E9=A1=B5=E4=B8=8B=E6=96=B9Banner-7=
28*90=EF=BC=8C=E5=88=9B=E5=BB=BA=E4=BA=8E2014-7-3*/
                        var cpro_id =3D "u1607657";
                    </SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://cpro.baidustatic.com/cpro/ui/c.js"></SCRIPT>
</DIV>
<DIV class=3Dcomment_class>
<DIV id=3Dcomment_title class=3Dpanel_head><SPAN =
class=3Dsee_comment>=E6=9F=A5=E7=9C=8B=E8=AF=84=E8=AE=BA</SPAN><A=20
name=3Dcomments></A></DIV>
<DIV id=3Dcomment_list></DIV>
<DIV id=3Dcomment_bar></DIV>
<DIV id=3Dcomment_form></DIV>
<DIV class=3Dannounce>* =
=E4=BB=A5=E4=B8=8A=E7=94=A8=E6=88=B7=E8=A8=80=E8=AE=BA=E5=8F=AA=E4=BB=A3=E8=
=A1=A8=E5=85=B6=E4=B8=AA=E4=BA=BA=E8=A7=82=E7=82=B9=EF=BC=8C=E4=B8=8D=E4=BB=
=A3=E8=A1=A8CSDN=E7=BD=91=E7=AB=99=E7=9A=84=E8=A7=82=E7=82=B9=E6=88=96=E7=
=AB=8B=E5=9C=BA<A name=3Dreply></A><A=20
name=3Dquote></A></DIV></DIV>
<SCRIPT type=3Dtext/javascript>
    var fileName =3D '48755581';
    var commentscount =3D 4;
    var islock =3D false
</SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/comment.js"></SCRIPT>

<DIV id=3Dad_bot></DIV>
<DIV id=3Dreport_dialog></DIV>
<DIV style=3D"BOTTOM: 60px" id=3Dd-top><A style=3D"DISPLAY: none" =
id=3Dquick-reply=20
class=3D"btn btn-top q-reply" =
title=3D=E5=BF=AB=E9=80=9F=E5=9B=9E=E5=A4=8D><IMG =
alt=3D=E5=BF=AB=E9=80=9F=E5=9B=9E=E5=A4=8D=20
src=3D"http://static.blog.csdn.net/images/blog-icon-reply.png"> </A><A=20
style=3D"DISPLAY: none" id=3Dd-top-a class=3D"btn btn-top backtop" =
title=3D=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8=20
onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_huidaodingbu'])"><IMG=20
alt=3DTOP src=3D"http://static.blog.csdn.net/images/top.png"> </A></DIV>
<SCRIPT type=3Dtext/javascript>
    $(function ()
    {
        $("#ad_frm_0").height("90px");
       =20
        setTimeout(function(){
            $("#ad_frm_2").height("200px");
        },1000);   =20
    });
 =20
</SCRIPT>

<STYLE type=3Dtext/css>.tag_list {
	LIST-STYLE: none none outside; BORDER-BOTTOM: #d7cbc1 1px solid; =
BORDER-LEFT: #d7cbc1 1px solid; PADDING-BOTTOM: 1px; LINE-HEIGHT: 20px; =
MARGIN: 10px 2% 0px 1%; PADDING-LEFT: 1px; PADDING-RIGHT: 1px; =
BACKGROUND: #ffffff 0px 0px; COLOR: #000000; FONT-SIZE: 12px; =
BORDER-TOP: #d7cbc1 1px solid; BORDER-RIGHT: #d7cbc1 1px solid; =
PADDING-TOP: 1px
}
.tag_list H5 {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 24px; MARGIN: 0px; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; BACKGROUND: #e0dbd3 0px 0px; HEIGHT: 24px; COLOR: =
#47381c; FONT-SIZE: 12px; PADDING-TOP: 0px
}
.tag_list H5 A {
	COLOR: #47381c
}
.classify {
	PADDING-BOTTOM: 8px; MARGIN: 10px 0px; PADDING-LEFT: 12px; =
PADDING-RIGHT: 12px; PADDING-TOP: 4px
}
.classify A {
	WHITE-SPACE: nowrap; MARGIN-RIGHT: 20px
}
</STYLE>

<DIV style=3D"DISPLAY: none" class=3Dtag_list></DIV>
<SCRIPT language=3Djavascript type=3Dtext/javascript>    =20
      $(function(){
              setTimeout(function(){
                  $.get("/catoop/svc/GetTagContent",function(data){
                      $(".tag_list").html(data).show();
                  });    =20
              });
          },500);                      =20
 </SCRIPT>

<DIV=20
style=3D"Z-INDEX: 10000; BORDER-BOTTOM: rgb(220,220,220) 1px solid; =
POSITION: absolute; BORDER-LEFT: rgb(220,220,220) 1px solid; DISPLAY: =
none; BACKGROUND: rgb(255,255,255) 0px 0px; BORDER-TOP: rgb(220,220,220) =
1px solid; TOP: 222.5px; BORDER-RIGHT: rgb(220,220,220) 1px solid; LEFT: =
630px; opacity: 1"=20
id=3Dpop_win></DIV>
<DIV id=3Dpopup_mask></DIV>
<STYLE>#popup_mask {
	Z-INDEX: 9999; POSITION: absolute; FILTER: alpha(opacity=3D30); WIDTH: =
100%; DISPLAY: none; BACKGROUND: #000; HEIGHT: 100%; TOP: 0px; LEFT: =
0px; opacity: 0.3
}
</STYLE>

<SCRIPT type=3Dtext/javascript>
    $(function(){
        setTimeout(function(){
            =
$(".comment_body:contains('=E5=9B=9E=E5=A4=8D')").each(function(index,ite=
m){
                var =
u=3D$(this).text().split('=EF=BC=9A')[0].toString().replace("=E5=9B=9E=E5=
=A4=8D","")
                var thisComment=3D$(this);
                if(u)
                {
                    =
$.getJSON("https://passport.csdn.net/get/nick?callback=3D?", {users: u}, =
function(a) {
                        if(a!=3Dnull&&a.data!=3Dnull&&a.data.length>0)
                        {
                            nick=3Da.data[0].n;=20
                            if(u!=3Dnick)
                            {
                                =
thisComment.text(thisComment.text().replace(u,nick)); =20
                            }
                        }      =20
                    }); =20
                }
            });        =20

        },200); =20

        setTimeout(function(){
            =
$(".math").each(function(index,value){$(this).find("span").last().css("co=
lor","#fff"); })
        },5000);

        setTimeout(function(){
            =
$(".math").each(function(index,value){$(this).find("span").last().css("co=
lor","#fff"); })
        },10000);

        setTimeout(function(){
            =
$(".math").each(function(index,value){$(this).find("span").last().css("co=
lor","#fff"); })
        },15000);
       =20
        setTimeout(function(){
            $("a =
img[src=3D'http://js.tongji.linezing.com/stats.gif']").parent().css({"pos=
ition":"absolute","left":"50%"});
        },300);
    });

    function loginbox(){
        var $logpop=3D$("#pop_win");
        $logpop.html('<iframe =
src=3D"https://passport.csdn.net/account/loginbox?service=3Dhttp://static=
.blog.csdn.net/callback.htm" frameborder=3D"0" height=3D"600" =
width=3D"400" scrolling=3D"no"></iframe>');

        $('#popup_mask').css({
            opacity: 0.5,
            width: $( document ).width() + 'px',
            height:  $( document ).height() + 'px'
        });
        $('#popup_mask').css("display","block");
=20
        $logpop.css( {
            top: ($( window ).height() - $logpop.height())/ 2  + $( =
window=20
       ).scrollTop() + 'px',
            left:($( window ).width() - $logpop.width())/ 2
        } );
=20
        setTimeout( function () {
            $logpop.show();
            $logpop.css( {
                opacity: 1
            } );
        }, 200 );
=20
        $('#popup_mask').unbind("click");
        $('#popup_mask').bind("click", function(){
            $('#popup_mask').hide();
            var $clopop =3D $("#pop_win");
            $("#common_ask_div_sc").css("display","none");
            $clopop.css( {
                opacity: 0
            } );
            setTimeout( function () {
                $clopop.hide();
            }, 350 );
            return false;
        });
    }  =20

</SCRIPT>

<SCRIPT language=3Djavascript type=3Dtext/javascript=20
src=3D"http://ads.csdn.net/js/async_new.js"></SCRIPT>

<DIV class=3Dclear></DIV></DIV></DIV>
<DIV id=3Dside>
<DIV class=3Dside>
<DIV id=3Dpanel_Profile class=3Dpanel>
<UL =
class=3Dpanel_head><SPAN>=E4=B8=AA=E4=BA=BA=E8=B5=84=E6=96=99</SPAN></UL>=

<UL class=3D"panel_body profile">
  <DIV id=3Dblog_userface><A href=3D"http://my.csdn.net/catoop" =
target=3D_blank><IMG=20
  style=3D"MAX-WIDTH: 90%" =
title=3D=E8=AE=BF=E9=97=AE=E6=88=91=E7=9A=84=E7=A9=BA=E9=97=B4=20
  src=3D"http://avatar.csdn.net/3/0/1/1_catoop.jpg"> </A><BR><SPAN><A=20
  class=3Duser_name href=3D"http://my.csdn.net/catoop"=20
  target=3D_blank>catoop</A></SPAN> </DIV>
  <DIV class=3Dinteract><A id=3Dspan_add_follow class=3Dattent =
title=3D[=E5=8A=A0=E5=85=B3=E6=B3=A8]=20
  href=3D"javascript:void(0);"></A><A class=3Dletter =
title=3D[=E5=8F=91=E7=A7=81=E4=BF=A1]=20
  =
onclick=3D"window.open('http://msg.csdn.net/letters/model?receiver=3Dcato=
op','_blank','height=3D350,width=3D700');_gaq.push(['_trackEvent','functi=
on', 'onclick', 'blog_articles_sixin'])"=20
  href=3D"javascript:void(0);"></A></DIV>
  <DIV id=3Dblog_medal>
  <DIV=20
  style=3D"WIDTH: 60px; BACKGROUND: =
url(http://c.csdnimg.cn/jifen/images/xunzhang/xunzhang/bokezhuanjiamiddle=
.png) no-repeat; HEIGHT: 60px; CURSOR: pointer"=20
  class=3Dico_expert title=3DCSDN=E8=AE=A4=E8=AF=81=E4=B8=93=E5=AE=B6=20
  =
onclick=3D"javascript:location=3D'http://blog.csdn.net/experts/rule.html'=
"></DIV>
  <DIV id=3Dbms_box><A target=3D_blank><IMG =
onmouseover=3Dm_over_m(this,2)=20
  onmouseout=3Dm_out_m() alt=3D2=20
  =
src=3D"http://c.csdnimg.cn/jifen/images/xunzhang/xunzhang/zhuanlandaren.p=
ng">=20
  </A><A target=3D_blank><IMG onmouseover=3Dm_over_m(this,4) =
onmouseout=3Dm_out_m()=20
  alt=3D1=20
  =
src=3D"http://c.csdnimg.cn/jifen/images/xunzhang/xunzhang/chizhiyiheng.pn=
g">=20
  </A></DIV></DIV>
  <UL id=3Dblog_rank>
    <LI>=E8=AE=BF=E9=97=AE=EF=BC=9A<SPAN>1760297=E6=AC=A1</SPAN></LI>
    <LI>=E7=A7=AF=E5=88=86=EF=BC=9A<SPAN>16535</SPAN> </LI>
    <LI>=E7=AD=89=E7=BA=A7=EF=BC=9A <SPAN=20
    style=3D"Z-INDEX: 1; POSITION: relative; DISPLAY: inline-block"><IMG =

    style=3D"VERTICAL-ALIGN: middle" id=3DleveImg alt=3D""=20
    =
src=3D"http://c.csdnimg.cn/jifen/images/xunzhang/jianzhang/blog7.png">=20
    <DIV=20
    style=3D"Z-INDEX: 999; BORDER-BOTTOM: #dddddd 2px solid; POSITION: =
absolute; TEXT-ALIGN: center; BORDER-LEFT: #dddddd 2px solid; =
LINE-HEIGHT: 32px; BACKGROUND-COLOR: #fff; WIDTH: 101px; DISPLAY: none; =
HEIGHT: 32px; BORDER-TOP: #dddddd 2px solid; TOP: 25px; BORDER-RIGHT: =
#dddddd 2px solid; LEFT: -24px"=20
    id=3DsmallTittle>
    <DIV=20
    style=3D"BORDER-BOTTOM: #eaeaea 8px solid; POSITION: absolute; =
BORDER-LEFT: transparent 10px solid; WIDTH: 0px; HEIGHT: 0px; TOP: -8px; =
BORDER-RIGHT: transparent 10px solid; LEFT: =
42%"></DIV>=E7=A7=AF=E5=88=86=EF=BC=9A16535=20
    </DIV></SPAN></LI>
    =
<LI>=E6=8E=92=E5=90=8D=EF=BC=9A<SPAN>=E7=AC=AC444=E5=90=8D</SPAN></LI></U=
L>
  <UL id=3Dblog_statistics>
    <LI>=E5=8E=9F=E5=88=9B=EF=BC=9A<SPAN>238=E7=AF=87</SPAN></LI>
    <LI>=E8=BD=AC=E8=BD=BD=EF=BC=9A<SPAN>40=E7=AF=87</SPAN></LI>
    <LI>=E8=AF=91=E6=96=87=EF=BC=9A<SPAN>10=E7=AF=87</SPAN></LI>
    =
<LI>=E8=AF=84=E8=AE=BA=EF=BC=9A<SPAN>624=E6=9D=A1</SPAN></LI></UL></UL></=
DIV>
<DIV id=3Dpanel_Search class=3Dpanel>
<UL =
class=3Dpanel_head><SPAN>=E6=96=87=E7=AB=A0=E6=90=9C=E7=B4=A2</SPAN></UL>=

<UL class=3Dpanel_body>
  <FORM id=3DfrmSearch class=3Dform_search =
action=3Dhttp://so.csdn.net/search=20
  target=3D_blank><SPAN><INPUT id=3DinputSearch class=3Dblogsearch =
title=3D=E8=AF=B7=E8=BE=93=E5=85=A5=E5=85=B3=E9=94=AE=E5=AD=97=20
  type=3Dtext></SPAN> <INPUT id=3DbtnSubmit title=3D"search in blog" =
value=3D=E6=90=9C=E7=B4=A2 type=3Dbutton> <INPUT=20
  id=3DinputQ type=3Dhidden name=3Dq> <INPUT value=3Dblog type=3Dhidden =
name=3Dt> <A=20
  id=3DbtnSearchBlog target=3D_blank></A></FORM></UL></DIV>
<SCRIPT type=3Dtext/javascript>
    $(function () {
        $("#btnSubmit").click(function () {          =20
            search();
        });

        $("#frmSearch").submit(function () {
            search();
            return false;
        });

        function search()
        {
            var url =3D "http://so.csdn.net/so/search/s.do?q=3D" + =
encodeURIComponent($("#inputSearch").val()) + "&u=3D" + username + =
"&t=3Dblog";
            window.location.href =3D url;
        }  =20
    });
</SCRIPT>

<DIV id=3Dpanel_Category class=3Dpanel>
<UL =
class=3Dpanel_head><SPAN>=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F</SPAN></UL>=

<UL id=3Dsp_column class=3Dpanel_body>
  <TABLE cellSpacing=3D0 cellPadding=3D0>
    <TBODY>
    <TR>
      <TD=20
      style=3D"PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
10px; PADDING-TOP: 10px"><A=20
        href=3D"http://blog.csdn.net/column/details/spring-boot.html"=20
        target=3D_blank><IMG style=3D"WIDTH: 75px; HEIGHT: 75px"=20
        src=3D"http://img.blog.csdn.net/20160127143219936"></A> </TD>
      <TD=20
      style=3D"PADDING-BOTTOM: 10px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; VERTICAL-ALIGN: top; PADDING-TOP: 10px"><A=20
        href=3D"http://blog.csdn.net/column/details/spring-boot.html"=20
        target=3D_blank>Spring Boot =E5=AD=A6=E4=B9=A0</A>=20
        =
<P>=E6=96=87=E7=AB=A0=EF=BC=9A22=E7=AF=87</P><SPAN>=E9=98=85=E8=AF=BB=EF=BC=
=9A281725</SPAN> </TD></TR></TBODY></TABLE></UL></DIV>
<DIV id=3Dpanel_Category class=3Dpanel>
<UL =
class=3Dpanel_head><SPAN>=E6=96=87=E7=AB=A0=E5=88=86=E7=B1=BB</SPAN></UL>=

<UL class=3Dpanel_body>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/catoop/article/category/1133741">Android</A>=
<SPAN>(73)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/catoop/article/category/1135096">=E5=BA=94=E7=
=94=A8=E9=83=A8=E7=BD=B2</A><SPAN>(27)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/catoop/article/category/1143017">=E5=85=B6=E4=
=BB=96=E4=B8=AD=E9=97=B4=E4=BB=B6</A><SPAN>(19)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/catoop/article/category/1151711">Linux</A><S=
PAN>(43)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/catoop/article/category/1153789">=E8=A7=82=E7=
=82=B9=E8=AE=BA</A><SPAN>(3)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/catoop/article/category/1155645">=E5=BC=80=E5=
=8F=91=E5=B7=A5=E5=85=B7</A><SPAN>(5)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/catoop/article/category/1157507">Ant</A><SPA=
N>(8)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/catoop/article/category/1253513">=E8=BD=AF=E4=
=BB=B6=E6=B5=8B=E8=AF=95</A><SPAN>(2)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/catoop/article/category/1268853">=E6=95=B0=E6=
=8D=AE=E5=BA=93</A><SPAN>(21)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/catoop/article/category/1305587">=E7=BA=BF=E7=
=A8=8B</A><SPAN>(7)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/catoop/article/category/1510443">Java=E5=BC=80=
=E5=8F=91</A><SPAN>(41)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/catoop/article/category/2017705">JavaScript<=
/A><SPAN>(6)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/catoop/article/category/5757035">ApacheServe=
r</A><SPAN>(5)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/catoop/article/category/5789635">Spring</A><=
SPAN>(33)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/catoop/article/category/5818477">Maven</A><S=
PAN>(4)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/catoop/article/category/6050199">Gradle</A><=
SPAN>(2)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/catoop/article/category/6056655">=E6=9C=AA=E5=
=88=86=E7=B1=BB</A><SPAN>(0)</SPAN>=20
  </LI></UL></DIV>
<DIV id=3Dpanel_Archive class=3Dpanel>
<UL =
class=3Dpanel_head><SPAN>=E6=96=87=E7=AB=A0=E5=AD=98=E6=A1=A3</SPAN></UL>=

<UL class=3Dpanel_body>
  <DIV id=3Darchive_list><!--=E5=BD=92=E6=A1=A3=E7=BB=9F=E8=AE=A1-->
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2016/12">2016=E5=B9=B41=
2=E6=9C=88</A><SPAN>(1)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2016/11">2016=E5=B9=B41=
1=E6=9C=88</A><SPAN>(1)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2016/09">2016=E5=B9=B40=
9=E6=9C=88</A><SPAN>(2)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2016/04">2016=E5=B9=B40=
4=E6=9C=88</A><SPAN>(10)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2016/03">2016=E5=B9=B40=
3=E6=9C=88</A><SPAN>(12)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2016/02">2016=E5=B9=B40=
2=E6=9C=88</A><SPAN>(10)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2016/01">2016=E5=B9=B40=
1=E6=9C=88</A><SPAN>(25)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2015/12">2015=E5=B9=B41=
2=E6=9C=88</A><SPAN>(17)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2015/11">2015=E5=B9=B41=
1=E6=9C=88</A><SPAN>(17)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2015/10">2015=E5=B9=B41=
0=E6=9C=88</A><SPAN>(10)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2015/09">2015=E5=B9=B40=
9=E6=9C=88</A><SPAN>(13)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2015/08">2015=E5=B9=B40=
8=E6=9C=88</A><SPAN>(21)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2015/07">2015=E5=B9=B40=
7=E6=9C=88</A><SPAN>(12)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2015/06">2015=E5=B9=B40=
6=E6=9C=88</A><SPAN>(5)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2015/05">2015=E5=B9=B40=
5=E6=9C=88</A><SPAN>(1)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2015/01">2015=E5=B9=B40=
1=E6=9C=88</A><SPAN>(9)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2014/12">2014=E5=B9=B41=
2=E6=9C=88</A><SPAN>(4)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2014/11">2014=E5=B9=B41=
1=E6=9C=88</A><SPAN>(6)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2014/10">2014=E5=B9=B41=
0=E6=9C=88</A><SPAN>(8)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2014/09">2014=E5=B9=B40=
9=E6=9C=88</A><SPAN>(2)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2014/08">2014=E5=B9=B40=
8=E6=9C=88</A><SPAN>(3)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2014/07">2014=E5=B9=B40=
7=E6=9C=88</A><SPAN>(2)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2014/06">2014=E5=B9=B40=
6=E6=9C=88</A><SPAN>(5)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2014/05">2014=E5=B9=B40=
5=E6=9C=88</A><SPAN>(2)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2014/04">2014=E5=B9=B40=
4=E6=9C=88</A><SPAN>(6)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2014/03">2014=E5=B9=B40=
3=E6=9C=88</A><SPAN>(4)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2013/11">2013=E5=B9=B41=
1=E6=9C=88</A><SPAN>(2)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2013/10">2013=E5=B9=B41=
0=E6=9C=88</A><SPAN>(1)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2013/09">2013=E5=B9=B40=
9=E6=9C=88</A><SPAN>(2)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2013/08">2013=E5=B9=B40=
8=E6=9C=88</A><SPAN>(1)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2013/07">2013=E5=B9=B40=
7=E6=9C=88</A><SPAN>(2)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2013/04">2013=E5=B9=B40=
4=E6=9C=88</A><SPAN>(1)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2013/01">2013=E5=B9=B40=
1=E6=9C=88</A><SPAN>(7)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2012/12">2012=E5=B9=B41=
2=E6=9C=88</A><SPAN>(14)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2012/10">2012=E5=B9=B41=
0=E6=9C=88</A><SPAN>(7)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2012/09">2012=E5=B9=B40=
9=E6=9C=88</A><SPAN>(5)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2012/08">2012=E5=B9=B40=
8=E6=9C=88</A><SPAN>(3)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2012/07">2012=E5=B9=B40=
7=E6=9C=88</A><SPAN>(1)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2012/06">2012=E5=B9=B40=
6=E6=9C=88</A><SPAN>(2)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2012/05">2012=E5=B9=B40=
5=E6=9C=88</A><SPAN>(19)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2012/04">2012=E5=B9=B40=
4=E6=9C=88</A><SPAN>(9)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/month/2012/03">2012=E5=B9=B40=
3=E6=9C=88</A><SPAN>(3)</SPAN></LI></DIV></UL></DIV>
<DIV id=3Dhotarticls class=3Dpanel>
<UL class=3Dpanel_head><SPAN>=E9=98=85=E8=AF=BB=E6=8E=92=E8=A1=8C =
</SPAN></UL>
<UL class=3D"panel_body itemlist">
  <LI><A =
title=3D=E5=AE=89=E5=8D=93=E9=A6=96=E9=A1=B5=E5=9B=BE=E7=89=87=E8=BD=AE=E6=
=92=AD=E6=95=88=E6=9E=9C(=E6=B7=98=E5=AE=9D=E3=80=81=E4=BA=AC=E4=B8=9C=E9=
=A6=96=E9=A1=B5=E5=B9=BF=E5=91=8A=E6=95=88=E6=9E=9C)=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/39993075">=E5=AE=89=E5=
=8D=93=E9=A6=96=E9=A1=B5=E5=9B=BE=E7=89=87=E8=BD=AE=E6=92=AD=E6=95=88=E6=9E=
=9C(=E6=B7=98=E5=AE=9D=E3=80=81=E4=BA=AC=E4=B8=9C=E9=A6=96=E9=A1=B5=E5=B9=
=BF=E5=91=8A=E6=95=88=E6=9E=9C)</A><SPAN>(76683)</SPAN>=20
  </LI>
  <LI><A title=3D"httppost 302 =
=E9=94=99=E8=AF=AF=EF=BC=8CHttpPost=E3=80=81HttpGet=E5=85=B3=E4=BA=8EURL=E9=
=87=8D=E5=AE=9A=E5=90=91=E5=8C=BA=E5=88=AB"=20
  href=3D"http://blog.csdn.net/catoop/article/details/40188775">httppost =
302=20
  =
=E9=94=99=E8=AF=AF=EF=BC=8CHttpPost=E3=80=81HttpGet=E5=85=B3=E4=BA=8EURL=E9=
=87=8D=E5=AE=9A=E5=90=91=E5=8C=BA=E5=88=AB</A><SPAN>(43778)</SPAN> </LI>
  <LI><A =
title=3D=E4=BF=AE=E6=94=B9Tomcat=E5=86=85=E5=AD=98=E5=A4=A7=E5=B0=8F=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/7938061">=E4=BF=AE=E6=
=94=B9Tomcat=E5=86=85=E5=AD=98=E5=A4=A7=E5=B0=8F</A><SPAN>(41540)</SPAN> =

  </LI>
  <LI><A title=3D"=E4=BD=BF=E7=94=A8 Linux =E6=90=AD=E5=BB=BA VPN"=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/7537012">=E4=BD=BF=E7=
=94=A8 Linux =E6=90=AD=E5=BB=BA=20
  VPN</A><SPAN>(39745)</SPAN> </LI>
  <LI><A =
title=3D=E5=AE=89=E5=8D=93ProgressBar=E6=B0=B4=E5=B9=B3=E8=BF=9B=E5=BA=A6=
=E6=9D=A1=E7=9A=84=E9=A2=9C=E8=89=B2=E8=AE=BE=E7=BD=AE=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/39667841">=E5=AE=89=E5=
=8D=93ProgressBar=E6=B0=B4=E5=B9=B3=E8=BF=9B=E5=BA=A6=E6=9D=A1=E7=9A=84=E9=
=A2=9C=E8=89=B2=E8=AE=BE=E7=BD=AE</A><SPAN>(34503)</SPAN>=20
  </LI>
  <LI><A =
title=3D"Linux=E9=85=8D=E7=BD=AE=E5=AE=9A=E6=97=B6=EF=BC=8C=E4=BD=BF=E7=94=
=A8 crontab -e =E4=B8=8E =E7=9B=B4=E6=8E=A5=E7=BC=96=E8=BE=91 =
/etc/crontab =E7=9A=84=E5=8C=BA=E5=88=AB"=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/41821395">Linux=E9=85=
=8D=E7=BD=AE=E5=AE=9A=E6=97=B6=EF=BC=8C=E4=BD=BF=E7=94=A8=20
  crontab -e =E4=B8=8E =E7=9B=B4=E6=8E=A5=E7=BC=96=E8=BE=91 /etc/crontab =
=E7=9A=84=E5=8C=BA=E5=88=AB</A><SPAN>(31409)</SPAN> </LI>
  <LI><A =
title=3Dredis=E7=BC=93=E5=AD=98=E7=9A=84=E5=AE=89=E8=A3=85=E5=92=8C=E4=BD=
=BF=E7=94=A8=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/7549911">redis=E7=BC=93=
=E5=AD=98=E7=9A=84=E5=AE=89=E8=A3=85=E5=92=8C=E4=BD=BF=E7=94=A8</A><SPAN>=
(31131)</SPAN>=20
  </LI>
  <LI><A=20
  =
title=3D=E5=AE=89=E5=8D=93=E5=9C=A8=E4=BB=A3=E7=A0=81=E4=B8=AD=E8=AE=BE=E7=
=BD=AETextView=E7=9A=84drawableLeft=E3=80=81drawableRight=E3=80=81drawabl=
eTop=E3=80=81drawableBottom=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/39959175">=E5=AE=89=E5=
=8D=93=E5=9C=A8=E4=BB=A3=E7=A0=81=E4=B8=AD=E8=AE=BE=E7=BD=AETextView=E7=9A=
=84drawableLeft=E3=80=81drawableRight=E3=80=81drawableTop=E3=80=81drawabl=
eBottom</A><SPAN>(30947)</SPAN>=20
  </LI>
  <LI><A =
title=3D=E6=89=8B=E6=9C=BAdpi=E6=8D=A2=E7=AE=97=E6=96=B9=E6=B3=95=EF=BC=8C=
=E4=BB=A5iPhone4=E4=B8=BA=E4=BE=8B=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/7793202">=E6=89=8B=E6=
=9C=BAdpi=E6=8D=A2=E7=AE=97=E6=96=B9=E6=B3=95=EF=BC=8C=E4=BB=A5iPhone4=E4=
=B8=BA=E4=BE=8B</A><SPAN>(30584)</SPAN>=20
  </LI>
  <LI><A title=3D"linux=E4=B8=8B=E9=85=8D=E7=BD=AEandroid sdk"=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/7618099">linux=E4=B8=8B=
=E9=85=8D=E7=BD=AEandroid=20
  sdk</A><SPAN>(30293)</SPAN> </LI></UL></DIV>
<DIV id=3Dhotarticls2 class=3Dpanel>
<UL =
class=3Dpanel_head><SPAN>=E8=AF=84=E8=AE=BA=E6=8E=92=E8=A1=8C</SPAN></UL>=

<UL class=3D"panel_body itemlist">
  <LI><A =
title=3D=E5=AE=89=E5=8D=93=E9=A6=96=E9=A1=B5=E5=9B=BE=E7=89=87=E8=BD=AE=E6=
=92=AD=E6=95=88=E6=9E=9C(=E6=B7=98=E5=AE=9D=E3=80=81=E4=BA=AC=E4=B8=9C=E9=
=A6=96=E9=A1=B5=E5=B9=BF=E5=91=8A=E6=95=88=E6=9E=9C)=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/39993075">=E5=AE=89=E5=
=8D=93=E9=A6=96=E9=A1=B5=E5=9B=BE=E7=89=87=E8=BD=AE=E6=92=AD=E6=95=88=E6=9E=
=9C(=E6=B7=98=E5=AE=9D=E3=80=81=E4=BA=AC=E4=B8=9C=E9=A6=96=E9=A1=B5=E5=B9=
=BF=E5=91=8A=E6=95=88=E6=9E=9C)</A><SPAN>(69)</SPAN>=20
  </LI>
  <LI><A title=3D"Spring Boot Shiro =
=E6=9D=83=E9=99=90=E7=AE=A1=E7=90=86"=20
  href=3D"http://blog.csdn.net/catoop/article/details/50520958">Spring =
Boot Shiro=20
  =E6=9D=83=E9=99=90=E7=AE=A1=E7=90=86</A><SPAN>(22)</SPAN> </LI>
  <LI><A title=3D"Spring Boot =
=E4=BA=8B=E5=8A=A1=E7=9A=84=E4=BD=BF=E7=94=A8"=20
  href=3D"http://blog.csdn.net/catoop/article/details/50595702">Spring =
Boot=20
  =E4=BA=8B=E5=8A=A1=E7=9A=84=E4=BD=BF=E7=94=A8</A><SPAN>(21)</SPAN> =
</LI>
  <LI><A title=3DAndroid=E2=80=94=E2=80=94=E6=91=87=E4=B8=80=E6=91=87=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/8051835">Android=E2=80=
=94=E2=80=94=E6=91=87=E4=B8=80=E6=91=87</A><SPAN>(21)</SPAN>=20
  </LI>
  <LI><A title=3D"Spring Boot Controller"=20
  href=3D"http://blog.csdn.net/catoop/article/details/50501676">Spring =
Boot=20
  Controller</A><SPAN>(20)</SPAN> </LI>
  <LI><A title=3D"Spring Boot MyBatis =
=E8=BF=9E=E6=8E=A5=E6=95=B0=E6=8D=AE=E5=BA=93"=20
  href=3D"http://blog.csdn.net/catoop/article/details/50553714">Spring =
Boot=20
  MyBatis =
=E8=BF=9E=E6=8E=A5=E6=95=B0=E6=8D=AE=E5=BA=93</A><SPAN>(16)</SPAN> </LI>
  <LI><A title=3D"Android =
=E9=A1=B9=E7=9B=AE=E7=9A=84=E4=BB=A3=E7=A0=81=E6=B7=B7=E6=B7=86=EF=BC=8CA=
ndroid proguard =E4=BD=BF=E7=94=A8=E8=AF=B4=E6=98=8E"=20
  href=3D"http://blog.csdn.net/catoop/article/details/47208833">Android=20
  =
=E9=A1=B9=E7=9B=AE=E7=9A=84=E4=BB=A3=E7=A0=81=E6=B7=B7=E6=B7=86=EF=BC=8CA=
ndroid proguard =
=E4=BD=BF=E7=94=A8=E8=AF=B4=E6=98=8E</A><SPAN>(16)</SPAN> </LI>
  <LI><A title=3D"Spring Boot =
=E5=8A=A8=E6=80=81=E6=95=B0=E6=8D=AE=E6=BA=90=EF=BC=88=E5=A4=9A=E6=95=B0=E6=
=8D=AE=E6=BA=90=E8=87=AA=E5=8A=A8=E5=88=87=E6=8D=A2=EF=BC=89"=20
  href=3D"http://blog.csdn.net/catoop/article/details/50575038">Spring =
Boot=20
  =
=E5=8A=A8=E6=80=81=E6=95=B0=E6=8D=AE=E6=BA=90=EF=BC=88=E5=A4=9A=E6=95=B0=E6=
=8D=AE=E6=BA=90=E8=87=AA=E5=8A=A8=E5=88=87=E6=8D=A2=EF=BC=89</A><SPAN>(15=
)</SPAN> </LI>
  <LI><A title=3D"Spring Boot =
=E8=BF=87=E6=BB=A4=E5=99=A8=E3=80=81=E7=9B=91=E5=90=AC=E5=99=A8"=20
  href=3D"http://blog.csdn.net/catoop/article/details/50501688">Spring =
Boot=20
  =
=E8=BF=87=E6=BB=A4=E5=99=A8=E3=80=81=E7=9B=91=E5=90=AC=E5=99=A8</A><SPAN>=
(11)</SPAN> </LI>
  <LI><A title=3D"Spring Boot =E9=9B=86=E6=88=90Shiro=E5=92=8CCAS"=20
  href=3D"http://blog.csdn.net/catoop/article/details/50534006">Spring =
Boot=20
  =E9=9B=86=E6=88=90Shiro=E5=92=8CCAS</A><SPAN>(10)</SPAN> =
</LI></UL></DIV>
<DIV id=3DhomepageArticles class=3D"panel tracking-ad" =
data-mod=3D"popu_4">
<UL =
class=3Dpanel_head><SPAN>=E6=8E=A8=E8=8D=90=E6=96=87=E7=AB=A0</SPAN></UL>=

<UL id=3Dad_commend class=3Dpanel_body>
  <UL>
    <LI><A =
href=3D"http://blog.csdn.net/elwingao/article/details/53410750"=20
    target=3D_blank>* =
=E5=8C=BA=E5=9D=97=E9=93=BE=E7=9A=84=E8=B7=A8=E9=93=BE=E6=8A=80=E6=9C=AF=E4=
=BB=8B=E7=BB=8D=E5=AE=8C=E6=95=B4=E7=89=88</A></LI>
    <LI><A =
href=3D"http://blog.csdn.net/u011068702/article/details/53208825"=20
    target=3D_blank>* =
Android=E6=8F=92=E4=BB=B6=E5=8C=96=E5=BC=80=E5=8F=91=E4=B9=8BHook =
StartActivity=E6=96=B9=E6=B3=95</A></LI>
    <LI><A =
href=3D"http://blog.csdn.net/lijiajun95/article/details/53391455"=20
    target=3D_blank>* =
2016=E5=B9=B411=E6=9C=88=E5=89=8D=E7=AB=AF=E9=9D=A2=E8=AF=95=E9=A2=98=E6=95=
=B4=E7=90=86=E6=B1=87=E6=80=BB</A></LI>
    <LI><A href=3D"http://blog.csdn.net/lfdfhl/article/details/53332936" =

    target=3D_blank>* =
=E6=B7=B1=E5=85=A5=E6=8E=A2=E8=AE=A8Android=E5=BC=82=E6=AD=A5=E7=B2=BE=E9=
=AB=93Handler</A></LI>
    <LI><A =
href=3D"http://blog.csdn.net/melodev/article/details/53406019"=20
    target=3D_blank>* =E6=AD=BB=E7=A3=95 Fragment =
=E7=9A=84=E7=94=9F=E5=91=BD=E5=91=A8=E6=9C=9F</A></LI></UL></UL></DIV>
<DIV id=3Dnewcomments class=3Dpanel>
<UL =
class=3Dpanel_head><SPAN>=E6=9C=80=E6=96=B0=E8=AF=84=E8=AE=BA</SPAN></UL>=

<UL class=3D"panel_body itemlist">
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/50352334#comments">Ht=
tp=E8=AF=B7=E6=B1=82=E8=BF=9E=E6=8E=A5=E6=B1=A0=20
  - HttpClient =E7=9A=84 PoolingHttpClientConnectionManager</A>=20
  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/poterban">poterban</A>: =
=E5=BD=93=E5=B9=B6=E5=8F=91=E9=87=8F=E9=AB=98=E7=9A=84=E6=97=B6=E5=80=99=EF=
=BC=8C=E8=B0=83=E7=94=A8=E6=96=87=E4=B8=ADget(Stirng=20
  =
url)=E4=BC=9A=E5=87=BA=E7=8E=B0=E7=BA=BF=E7=A8=8B=E9=97=AE=E9=A2=98=E5=90=
=97=EF=BC=9F </P></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/50337613#comments">Sp=
ringMVC+MyBatis+JMS+JTA=EF=BC=88=E5=88=86=E5=B8=83=E5=BC=8F=E4=BA=8B=E5=8A=
=A1=EF=BC=89</A>=20

  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/whs99">whs99</A>:=20
  =
=E5=88=86=E5=B8=83=E5=BC=8F=E4=BA=8B=E5=8A=A1=E8=A7=A3=E5=86=B3=E6=96=B9=E6=
=A1=88=E7=9A=84=E6=95=88=E6=9E=9C=E6=BC=94=E7=A4=BA=EF=BC=88=E7=BB=93=E5=90=
=88=E6=94=AF=E4=BB=98=E7=B3=BB=E7=BB=9F=E7=9C=9F=E5=AE=9E=E5=BA=94=E7=94=A8=
=E5=9C=BA=E6=99=AF=EF=BC=89=EF=BC=9Ahttp://www.iqiyi.com/... </P></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/50684676#comments">Sp=
ring=20
  Boot MyBatis =
=E9=80=9A=E7=94=A8Mapper=E6=8F=92=E4=BB=B6=E9=9B=86=E6=88=90</A>=20
  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/q694326243">q694326243</A>: =
=E8=83=BD=E7=BB=99=E4=B8=AAdemo=E5=90=97 =
=EF=BC=9F=E6=AD=A3=E5=9C=A8=E9=9B=86=E6=88=90=E5=87=BA=E4=BA=86=E7=82=B9=E9=
=94=99=20
  </P></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/50067785#comments">ht=
tp://blog.csdn.net/catoop/article/details/50067785#comments</A>=20

  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/yankun55329">yankun55329</A>: =
=E8=AE=B2=E6=98=8E=E7=99=BD=E4=BA=86=EF=BC=8C=E8=B0=A2=E8=B0=A2 =
</P></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/50575038#comments">Sp=
ring=20
  Boot =
=E5=8A=A8=E6=80=81=E6=95=B0=E6=8D=AE=E6=BA=90=EF=BC=88=E5=A4=9A=E6=95=B0=E6=
=8D=AE=E6=BA=90=E8=87=AA=E5=8A=A8=E5=88=87=E6=8D=A2=EF=BC=89</A>=20
  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/u011295637">u011295637</A>: =
=E5=9C=A8jta=E4=BA=8B=E5=8A=A1=E4=B8=AD=E4=BC=9A=E5=88=87=E6=8D=A2=E5=A4=B1=
=E8=B4=A5 </P></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/50575038#comments">Sp=
ring=20
  Boot =
=E5=8A=A8=E6=80=81=E6=95=B0=E6=8D=AE=E6=BA=90=EF=BC=88=E5=A4=9A=E6=95=B0=E6=
=8D=AE=E6=BA=90=E8=87=AA=E5=8A=A8=E5=88=87=E6=8D=A2=EF=BC=89</A>=20
  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/u011295637">u011295637</A>: =
=E5=9C=A8jta=E4=BA=8B=E5=8A=A1=E4=B8=AD=E4=BC=9A=E5=88=87=E6=8D=A2=E5=A4=B1=
=E8=B4=A5 </P></LI>
  <LI><A =
href=3D"http://blog.csdn.net/catoop/article/details/49300853#comments">=E2=
=80=A6=E2=80=A6=20
  are only available on JDK 1.5 and higher =
=E9=94=99=E8=AF=AF=EF=BC=88spring =
=E7=9A=84jdk=E7=89=88=E6=9C=AC=E6=A3=80=E6=B5=8B=E5=9C=A8jdk =
8=E4=B8=8B=E7=9A=84=E4=BF=AE=E8=AE=A2=EF=BC=89</A>=20
  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/dong6618">dong6618</A>: =
=E7=BB=99=E5=8A=9B=EF=BC=8C=E7=89=B9=E5=9C=B0=E7=99=BB=E9=99=86=E6=9D=A5=E6=
=84=9F=E8=B0=A2=E4=B8=80=E4=B8=8B </P></LI>
  <LI><A =
href=3D"http://blog.csdn.net/catoop/article/details/49300853#comments">=E2=
=80=A6=E2=80=A6=20
  are only available on JDK 1.5 and higher =
=E9=94=99=E8=AF=AF=EF=BC=88spring =
=E7=9A=84jdk=E7=89=88=E6=9C=AC=E6=A3=80=E6=B5=8B=E5=9C=A8jdk =
8=E4=B8=8B=E7=9A=84=E4=BF=AE=E8=AE=A2=EF=BC=89</A>=20
  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/dong6618">dong6618</A>: =
=E7=BB=99=E5=8A=9B=EF=BC=8C=E7=89=B9=E5=9C=B0=E7=99=BB=E9=99=86=E6=9D=A5=E6=
=84=9F=E8=B0=A2=E4=B8=80=E4=B8=8B </P></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/50501688#comments">Sp=
ring=20
  Boot =
=E8=BF=87=E6=BB=A4=E5=99=A8=E3=80=81=E7=9B=91=E5=90=AC=E5=99=A8</A>=20
  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/u013519708">u013519708</A>: public void=20
  sessionDestroyed(HttpSessionEvent se) ... </P></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/catoop/article/details/50520958#comments">Sp=
ring=20
  Boot Shiro =E6=9D=83=E9=99=90=E7=AE=A1=E7=90=86</A>=20
  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/u013065874">u013065874</A>: =
=E4=B9=8B=E5=89=8D=E6=9C=89=E4=B8=AA=E9=A1=B9=E7=9B=AE=E6=98=AF =
jfinal+shiro=20
  =
=E4=BB=96=E7=94=A8=E7=9A=84=E6=98=AFredis=E5=81=9Ashiro=E7=9A=84=E7=BC=93=
=E5=AD=98=EF=BC=8C=E6=88=91=E6=83=B3=E6=94=B9=E9=80=A0=E6=88=90 spr... =
</P></LI></UL></DIV></DIV>
<DIV class=3Dclear></DIV><!-- =
=E5=B9=BF=E5=91=8A=E4=BD=8D=E5=BC=80=E5=A7=8B --><INS=20
data-revive-id=3D"8c38e720de1c90a6f6ff52f3f89c4d57"=20
data-revive-zoneid=3D"189"></INS><!-- =
=E5=B9=BF=E5=91=8A=E4=BD=8D=E7=BB=93=E6=9D=9F --></DIV>
<DIV class=3Dclear></DIV></DIV>
<SCRIPT type=3Dtext/javascript=20
src=3D"http://c.csdnimg.cn/rabbit/cnick/cnick.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/newblog.min.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://medal.blog.csdn.net/showblogmedal.ashx?blogid=3D647202"></S=
CRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/JavaScript1.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://passport.csdn.net/content/loginbox/login.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript>document.write("<img =
src=3Dhttp://counter.csdn.net/pv.aspx?id=3D24 border=3D0 width=3D0 =
height=3D0>");</SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://www.csdn.net/ui/scripts/Csdn/counter.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://ad.csdn.net/scripts/ad-blog.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript>
    $(function () {
        function __get_code_toolbar(snippet_id) {
            return $("<span class=3D'tracking-ad' =
data-mod=3D'popu_167'><a href=3D'https://code.csdn.net/snippets/"
                    + snippet_id
                    + "' target=3D'_blank' =
title=3D'=E5=9C=A8CODE=E4=B8=8A=E6=9F=A5=E7=9C=8B=E4=BB=A3=E7=A0=81=E7=89=
=87'  style=3D'text-indent:0;'><img =
src=3D'https://code.csdn.net/assets/CODE_ico.png' width=3D12 height=3D12 =
alt=3D'=E5=9C=A8CODE=E4=B8=8A=E6=9F=A5=E7=9C=8B=E4=BB=A3=E7=A0=81=E7=89=87=
' style=3D'position:relative;top:1px;left:2px;'/></a></span>"
                    + "<span class=3D'tracking-ad' =
data-mod=3D'popu_170'><a href=3D'https://code.csdn.net/snippets/"
                    + snippet_id
                    + "/fork' target=3D'_blank' =
title=3D'=E6=B4=BE=E7=94=9F=E5=88=B0=E6=88=91=E7=9A=84=E4=BB=A3=E7=A0=81=E7=
=89=87' style=3D'text-indent:0;'><img =
src=3D'https://code.csdn.net/assets/ico_fork.svg' width=3D12 height=3D12 =
alt=3D'=E6=B4=BE=E7=94=9F=E5=88=B0=E6=88=91=E7=9A=84=E4=BB=A3=E7=A0=81=E7=
=89=87' style=3D'position:relative;top:2px;left:2px;'/></a></span>");
        }
       =20
        $("[code_snippet_id]").each(function () {
            __s_id =3D $(this).attr("code_snippet_id");
            if (__s_id !=3D null && __s_id !=3D "" && __s_id !=3D 0 && =
parseInt(__s_id) > 70020) {
                __code_tool =3D __get_code_toolbar(__s_id);
                $(this).prev().find(".tools").append(__code_tool);
            }
        });

        $(".bar").show();
    });
</SCRIPT>
</DIV><!--new top-->
<SCRIPT id=3Dcsdn-toolbar-id type=3Dtext/javascript=20
src=3D"http://c.csdnimg.cn/public/common/toolbar/js/toolbar.js" =
subCount=3D"5"=20
count=3D"5" wrapId=3D"note1" btnId=3D"header_notice_num"></SCRIPT>
<!--new top--><LINK rel=3Dstylesheet type=3Dtext/css=20
href=3D"http://c.csdnimg.cn/comm_ask/css/ask_float_block.css">
<SCRIPT language=3DJavaScript type=3Dtext/javascript=20
src=3D"http://c.csdnimg.cn/comm_ask/js/libs/wmd.js"></SCRIPT>

<SCRIPT language=3DJavaScript type=3Dtext/javascript=20
src=3D"http://c.csdnimg.cn/comm_ask/js/libs/showdown.js"></SCRIPT>

<SCRIPT language=3DJavaScript type=3Dtext/javascript=20
src=3D"http://c.csdnimg.cn/comm_ask/js/libs/prettify.js"></SCRIPT>

<SCRIPT language=3DJavaScript type=3Dtext/javascript=20
src=3D"http://c.csdnimg.cn/comm_ask/js/apps/ask_float_block.js"></SCRIPT>=


<DIV style=3D"WIDTH: 1px; DISPLAY: none; HEIGHT: 1px" id=3Da52b5334d>
<SCRIPT id=3DadJs52b5334></SCRIPT>

<SCRIPT>document.getElementById("adJs52b5334").src =3D =
"http://ads.csdn.net/js/opt/52b5334.js?t=3D" + Math.random();</SCRIPT>
</DIV><LINK rel=3Dstylesheet =
href=3D"http://static.blog.csdn.net/css/blog_code.css">
<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/saveToCode.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://csdnimg.cn/rabbit/tracking-ad/main.js?75eacd8"></SCRIPT>
</BODY></HTML>

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/ico_list.gif

R0lGODlhEAAQAIAAAGZmZv///yH5BAEAAAEALAAAAAAQABAAAAIejI+pmwDnojQOysmy3rvSG30W
+HDmqXkB6alsicYFADs=

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/ico_summary.gif

R0lGODlhEAAQAIAAAGZmZv///yH5BAEAAAEALAAAAAAQABAAAAIajI+pmwDnojQOysmyVrfHDW6e
F5bL2JnqGhQAOw==

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/ico_rss.gif

R0lGODlhHAAQAOYAAP///v/+/P737f3s1v716f/68/758v/8+PaUHfaVH/aWIfaXIvaXJPaYJvaZ
KPaaKfebK/ecLfeeM/egN/ehOPeiOvekP/imRPinRvipSPipSviqTPirT/iuVfiwWPmyXfmzX/m1
Y/m2Zvm3Z/m5bPm7b/m9c/q+dvq+d/q/ePrAefrCfvrGhvrHiPrHifrIi/rIjPvMlPvNlfvNlvvO
mPvPmfvQm/vQnfvTo/vUpfvVpvzZrvzasfzasvzbtPzctfzfvP3iwf3jxP3kxv3lx/3nzP3ozv3p
0f7u2/7v3P7v3f7w3/7x4f7y4/7z5f727P737v/69P/79v3lyf7t2v7u3P7v3v7w4P7y5P716/74
8f/58//69f/79//8+f/9+//+/f///////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAEAAGIALAAAAAAcABAAAAfTgGJiCISFhoeIhYKDiY2OCIyPko8XKi4rFYUcNzQfCQgQLTgnEo5F
AFpeBygIL18HX1gNFk9fUl4wjldYChlQBRFdSAwTHQhTXxsIHpmNSkmEP18UX0WGVAcPk1UEHStc
1kBhTCaEJAFRNw6PA2ACYAbaCTNaYEILCCJJYFAhjklYLMQIwMLQjzApCpUAk8WREiuEniwxVAFA
DUNPvDhq4oTQkC8ajvCwkRHDjiIyiAAI4qiHD3NUQBjhIoXACAQ6CkjZkoPBpJ+JIgF1tGgoUTGB
AAA7

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/category_icon.jpg

/9j/4QAYRXhpZgAASUkqAAgAAAAAAAAAAAAAAP/sABFEdWNreQABAAQAAABkAAD/4QN6aHR0cDov
L25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENl
aGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4
OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjMtYzAxMSA2Ni4xNDU2NjEsIDIwMTIvMDIvMDYtMTQ6
NTY6MjcgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5
OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHht
bG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0i
aHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1w
PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9
InhtcC5kaWQ6Y2MxNTQ4NjUtYmQ3NC02YTRjLTliYmYtNDMyNmUxMDBlZjY0IiB4bXBNTTpEb2N1
bWVudElEPSJ4bXAuZGlkOkJDRjYxODRDOEU2MzExRTU4MTZEQTgxMjlCOUE4QzUzIiB4bXBNTTpJ
bnN0YW5jZUlEPSJ4bXAuaWlkOkJDRjYxODRCOEU2MzExRTU4MTZEQTgxMjlCOUE4QzUzIiB4bXA6
Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDQyAoV2luZG93cykiPiA8eG1wTU06RGVyaXZl
ZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpmMDM5MTA2Yi0wMmI3LWMyNGMtODkwOC00
NWEyYzdjY2Q4NmUiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6Y2MxNTQ4NjUtYmQ3NC02YTRj
LTliYmYtNDMyNmUxMDBlZjY0Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4
bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+/+4ADkFkb2JlAGTAAAAAAf/bAIQAAQEBAQEBAQEB
AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgICAwMDAwMDAwMDAwEB
AQEBAQECAQECAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
AwMDAwMD/8AAEQgADQAPAwERAAIRAQMRAf/EAGIAAQEAAAAAAAAAAAAAAAAAAAYIAQEAAAAAAAAA
AAAAAAAAAAAAEAAAAwUFCAMAAAAAAAAAAAACAwUBEwQGBwARNjcIEhU1VmZnCjoyFiYRAQAAAAAA
AAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/ALalMDuhKSFz5RJF+pPUwPYoO2+oQnsFRk19VBron8zE
7bxDZc26YBTOzaF8mg0pbiZT9urLmsOaWGcpJ34Z3G5O6u3bYDiKUgFUPQgy7G+U1HwYtQ+o8cWZ
RpLgkmpBSwNOow1YhakkQKwtFREmw6g8DLx4jCjTl77OIZJQrw2BHS3Eyn7dWXNYc0sM5STvwzuN
yd1du2wf/9k=

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/arrow_triangle%20_down.jpg

/9j/4QAYRXhpZgAASUkqAAgAAAAAAAAAAAAAAP/sABFEdWNreQABAAQAAABGAAD/4QN6aHR0cDov
L25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENl
aGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4
OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjMtYzAxMSA2Ni4xNDU2NjEsIDIwMTIvMDIvMDYtMTQ6
NTY6MjcgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5
OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHht
bG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0i
aHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1w
PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9
InhtcC5kaWQ6Y2MxNTQ4NjUtYmQ3NC02YTRjLTliYmYtNDMyNmUxMDBlZjY0IiB4bXBNTTpEb2N1
bWVudElEPSJ4bXAuZGlkOjEzMjQzMjREOERERDExRTVBNzNBOEFDRjdFQTYxODYzIiB4bXBNTTpJ
bnN0YW5jZUlEPSJ4bXAuaWlkOjEzMjQzMjRDOERERDExRTVBNzNBOEFDRjdFQTYxODYzIiB4bXA6
Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDQyAoV2luZG93cykiPiA8eG1wTU06RGVyaXZl
ZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpmMDM5MTA2Yi0wMmI3LWMyNGMtODkwOC00
NWEyYzdjY2Q4NmUiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6Y2MxNTQ4NjUtYmQ3NC02YTRj
LTliYmYtNDMyNmUxMDBlZjY0Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4
bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+/+4ADkFkb2JlAGTAAAAAAf/bAIQABAMDAwMDBAMD
BAYEAwQGBwUEBAUHCAYGBwYGCAoICQkJCQgKCgwMDAwMCgwMDQ0MDBERERERFBQUFBQUFBQUFAEE
BQUIBwgPCgoPFA4ODhQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU
FBQUFBQU/8AAEQgABQAKAwERAAIRAQMRAf/EAF8AAQAAAAAAAAAAAAAAAAAAAAcBAQAAAAAAAAAA
AAAAAAAAAAAQAAADBQUJAAAAAAAAAAAAAAECAwAREhMEIUFxoSJi0jNjNAUlFgcRAQAAAAAAAAAA
AAAAAAAAAAD/2gAMAwEAAhEDEQA/AHeoJ8v95jBaoDsc1yiJEiDRTn2iVQFI5L7gTw0sD94/k8HY
6fcyYP/Z

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/arrow_triangle_up.jpg

/9j/4QAYRXhpZgAASUkqAAgAAAAAAAAAAAAAAP/sABFEdWNreQABAAQAAABGAAD/4QN6aHR0cDov
L25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENl
aGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4
OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjMtYzAxMSA2Ni4xNDU2NjEsIDIwMTIvMDIvMDYtMTQ6
NTY6MjcgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5
OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHht
bG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0i
aHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1w
PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9
InhtcC5kaWQ6Y2MxNTQ4NjUtYmQ3NC02YTRjLTliYmYtNDMyNmUxMDBlZjY0IiB4bXBNTTpEb2N1
bWVudElEPSJ4bXAuZGlkOjEzMjQzMjQ5OERERDExRTVBNzNBOEFDRjdFQTYxODYzIiB4bXBNTTpJ
bnN0YW5jZUlEPSJ4bXAuaWlkOjEzMjQzMjQ4OERERDExRTVBNzNBOEFDRjdFQTYxODYzIiB4bXA6
Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDQyAoV2luZG93cykiPiA8eG1wTU06RGVyaXZl
ZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpmMDM5MTA2Yi0wMmI3LWMyNGMtODkwOC00
NWEyYzdjY2Q4NmUiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6Y2MxNTQ4NjUtYmQ3NC02YTRj
LTliYmYtNDMyNmUxMDBlZjY0Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4
bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+/+4ADkFkb2JlAGTAAAAAAf/bAIQABAMDAwMDBAMD
BAYEAwQGBwUEBAUHCAYGBwYGCAoICQkJCQgKCgwMDAwMCgwMDQ0MDBERERERFBQUFBQUFBQUFAEE
BQUIBwgPCgoPFA4ODhQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU
FBQUFBQU/8AAEQgABQAJAwERAAIRAQMRAf/EAFgAAQEAAAAAAAAAAAAAAAAAAAcIAQEAAAAAAAAA
AAAAAAAAAAAAEAABAwIHAQAAAAAAAAAAAAABEQISAAMiMlOTBAUH0xEBAAAAAAAAAAAAAAAAAAAA
AP/aAAwDAQACEQMRAD8AprkH1Q+iW3NY0YVtW2veerHDUSBfEFVzGM5IgRKBbn2GhZ3n/Kg//9k=

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://img.blog.csdn.net/20150926220620152?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center

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
KzA4OjAwdwxL7QAAAABJRU5ErkJggg==

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://img.blog.csdn.net/20150926220634124?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center

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
EARBkLgD5RlBEARB4g6UZwRBEASJO1CeEQRBECTuQHlGEARBkLgD5RlBEARB4g6UZwRBEASJO1Ce
EQRBECTuQHlGEARBkLgD5RlBEARB4g6UZwRBEASJO1CeEQRBECQQYdCVAAATUElEQVTuQHlGEARB
kLgD5RlBEARB4g6UZwRBEASJO1CeEQRBECTuQHlGEARBkLgD5RlBEARB4g6UZwRBEASJO1CeEQRB
ECTuQHlGEARBkLgD5RlBEARB4g6UZwRBEASJO1CeEQRBECTuQHlGEARBkLgD5RlBEARB4g6UZwRB
EASJO1CeEQRBECTuQHlGEARBkLgD5RlBEARB4g6UZwRBEASJO1CeEQRBECTuQHlGEARBkLgD5RlB
EARB4g6UZwRBEASJO1CeEQRBECTuQHlGEARBkLgD5RlBEARB4g6UZwRBEASJO1CeEQRBECTuQHlG
EARBkLgD5RlBEARB4g6UZwRBEASJO1CeEQRBECTuQHlGEARBkLgD5RlBEARB4g6UZwRBEASJO1Ce
EQRBECTuQHlGEARBkLgD5RlBEARB4g6UZwRBEASJO1CeEQRBECTuQHlGEARBkLgD5RlBEARB4g6U
ZwRBEASJO1CeEQRBECTuQHlGEARBkLgD5RlBEARB4g6UZwRBEASJO1CeEQRBECTuQHlGEARBkLgD
5RlBEARB4g6UZwRBEASJO1CeEQRBECTuQHlGEARBkLgD5RlBEARB4g6UZwRBEASJO1CeEQRBECTu
QHlGEARBkLgD5RlBEARB4g6UZwRBEASJO1CeEQRBECTuQHlGEARBkLgD5RlBEARB4g6UZwRBEASJ
O1CeEQRBECTuQHlGEARBkLgD5RlBEARB4g6UZwRBEASJO1CeEQRBECTuQHlGEARBkLgD5RlBEARB
4g6UZwRBEASJO1CeEQRBECTuQHlGEARBkLgD5RlBEARB4g6UZwRBEASJO1CeEQRBECTuQHlGEARB
kLgD5RlBEARB4g6UZwRBEASJO1CeEQRBECTuQHlGEARBkLgD5RlBEARB4g6UZwRBEASJO1CeEQRB
ECTuQHlGEARBkLgD5RlBEARB4g6UZwRBEASJO1CeEQRBECTuQHlGEARBkLgD5RlBEARB4g6UZwRB
EASJO1CeEQRBECTuQHlGEARBkLgD5RlBEARB4g6UZwRBEASJO1CeEQRBECTuQHlGEARBkLgD5RlB
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

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://img.blog.csdn.net/20150926220644390?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center

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
dT5fZ+czTzdVeTxVtxdB9sqaKo/ngX+VTweAxpY2aGtpjJlUH9oZ0fvI5qVNPl9nZ6evqaq5tHKb
2LvhF1Ajr9SV1ZZWht+3kWoanvsQibH29cX1JT6fr66stt6aOHp9CbbDAAAdiUlEQVQr1jZ7IrXM
IJZ5KO7nBELimTgDadz8fGvMQB2tzfGlFlOQM5ZTXJxjfs0pLs5JzhdE3FU+7cszRCln5xU0trQB
QMfzm2HptdkA4PF4mlsbWps9Hs9AUw/CWPE6723Bu6ispJh1tGxqaZNfi0rKkq99ENuf3wz5uXYZ
idi+obWkZumAM0i2u3foIfFMnIk0bt5seZQtVsHi9e0IAIjeysI1jQAAtaXuoCISHhIMLaqzX6Py
+kq3TCs0/WDi4QQtqsXr2xHjjBUeJliXCq+lysH6Og47rOmYASoqIo5OEL0VGcXr270VutV3vRks
et3DyxMzVrDA+sWIReprynH3Z26+p7m1Q5fOOYwBFBQUNLbUt8DSpQWRusapncN7OVJEdznUVBeF
yLyG+uaq24ugIdT2XmFred0kHpZ7pPaJckfF1/JtLY0F8PxCm/m9Y8Mv4Nqi0KYYkjL3u52TFhLP
xBlHWVWVp7HRMDYitm8oX9MIZXVNVR5oXFO+oR3RYlIrqzMM4MGQvroyI+TAilILJT6fr65gzSNe
RMT2DeWblzb5fL7VLRESR/TW10pTamen97YcxuKLZQ8j61JQ5/P5mqqa673BKgfrG25XDKbTtHRz
+QbDRC9rUVLvdjaolpRJjRKa1y4sbMkzBjEx6h5enpixzPKUlkszr/OAqR8px9nRjOXkFTS2tAV1
ZwAoKSmrra0tyMuLHCu8ne29HCnius5O3+qWwsqGYNz29QvrS7y35RijRpN1IS3fVNW81narR2+f
CHdU6J0QveUBajdDjW6QX7uhHRHb1/8Cvn9bDrPWaIjK3O92TlpIPBNnHnnXLrUaGo15wey8ApAz
haF0dBhvZxmyttRdWusYss+UlRRZv7a1NDauKXS73aW1ERJnrLjaV1Lvdlu0utixnMK0tTSWlRQB
Yzm3eePX+9taGgvysi1WXIda2MnN9zSvXVsL0NjY6MnP7Xfd445VVrdtZd9ftf0rj1Nln/uFRToD
5OZ7wFLvOHDq5cgUlZhTueitkMp07JqG9GA/cL4TorZ8br6nbPXKbABrrDzYXJiRkVG4prG21O24
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

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://img.blog.csdn.net/20150926220654007?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center

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
cYLzyPb63evbNopbWL+XkzIFZ8/iOJL4aDw+Go/H5XhcZoxzPDUMyTUnBgYWLFjwp2denFlIednF
21579YlXZWntZ0bePvmXZw8uWLDgxMCA8XpCgtHu5i1+v9Gwxnm4saqpC0K1fn2KYLKZaUYzJVSx
nhljGQxryh/72D7xR0ODz+fzBbdFHIvgZI4OBoM+c+6mECWiIkxwW0QNCTf4fD6/vzbklLK9XInK
bk/ZSWBfcFtE/dPt5NJoirTnpQnc0GAxUeohCctuTtmxXG5It34c+4ZTjQW3RcINPl9DmEe2bTN3
mGT9EAA6Gv3J+4+bWMnbNDGhWr/fX9VU2d5SDZ2OJbWkzHm40V8bglCtepe5tLenW6sAh3u70h4E
TMHZM+eKQ8lh5WdUTKJzLRiCAAB4Jc+RI0e27vvrk8+8HTsDZ0c4ABQVFjgeC++vagrHYtFoTYd/
jXigqPbAuvZoi7C/cR7e2lTZHo1Go+1Q29ipGM1CtYolTbHXGWMZjIqKhU0NCUFNNNrdDLsfizg9
nhytkevbRMrtoBoVLSHK1KE7Go1u7q3fHhEhW3qau6Oa2dCesqVcYc6dym5NOYHAdZs3LoayikCg
uVuNmxzOI9vrRfbdzT0dplJ0r99dv101ToagJhqN1nT49ZrXQhKW3ZyyvVxuyKB++p36hr3Gauq6
eg8DAPRsWVPVW27uMNaKNcssyt5e2bQ1nKz/JIuVsk0TI2zCoscH7SW1tGDEVGOWOyVl30ivVo2t
5n4xewrOnoUyHhoaGh4aGR4eGRkekWWZyTh7RnLM3Llzjx8/fkXgHQUzfQOPbo/+/cxbx86w324v
nOm7+vKqwcHBuXPnWqKI4TMhwZbo5t6qxoSPvO6KLX6/NhMFAIC69n0b3RjQzNTVVAMsLq9Uns9u
sM8J7CGHe7u6mqr8fn9tSEk59WQiQblSpuyQzh3NPR2d0Lm1qXKz+zo53NtVV1MNhJRuCosHriqz
qX7qaqqd6jBF2S0pZ8IY6idF3yirCPRs2RIC6OrqClSUpSOUvTYyiJW6Td2nbC6pYwtmQAa1WlYR
6Onrh7SGYlNw9swYZ4yfPTs8NDQ8PDQyPDIiFqFzLRgy3SkrLT0ciaxcuuTuT940m48U//K+2b+8
by4ZaflC/XkL5h+ORMpKS43Xcx7Rh8+dHSHbk5KHw6rhundzNOpyA4uIpX+2rwX29/Wk+VROWfSK
gDKzUecWytMqyUpk8nKppbCn7MDijZuh1l/b03xHGsqjrCIQ6ugEAIiEwxElL1XmNOrHseyWlBO3
TmKyWD/W6iqv7OrqCtx2W8Ddqqx7md3FykRmd2TWglmQkJDSjZsrm7Z22r5JdhdMvdkzLC69aGDw
2I93PviT9rafPvK9n/7i+wcP9Xzk1lqOINkmFArFXDMwMPCjUOjJJ5+MxU4+1/Py/z7624d/3Xmo
/29vvfXWk08++aNQaGBgwBLFsrNTC1eeyHXtykfjdatu+5AeI2pMzRKruzkAABAIBAAA6nYO7qxz
ysshBTVxdZep/u/OwZ2WECFDVMkMINDcLUJESg6562KbyqVFtJTdkPLThiJYkupuDmiFMmyOTYaW
e6C525xXwGiWB6WkAHDNNdYQZS+xc9kNKdvLlaDaTeUaQ/0kK360uzkAgebu9joIiC3Nlna3y+xU
GwmzSBnLXmO26NplWj8010wigQ0taKtYh6QS1nz6tWpoL1O3NGTmnNdkpP6ztx8bfP3Zvj9qP2eG
3lqxcim5ZPGFBw4c+OVjOwmllEqE0n941z99+b++/LMftwOCZJV0D/UUx5Kcf/75iy+55LzzzgOA
I0eORPr733jjDcdjSSby2CDOw43+jpp0lj8nC5yHG9f03aHaHi0fkUlHuMEnDPp17dHW4JRtxMl7
aljCQz05AOfAGKcEOOdTtumQSUhJScn111138ODBrgMHjhw5AgALFyxYvHjx9ddd53io58Tq5toQ
QMgPaW1QynPUcgWau/eVarul1mypaNuHunnyEmyNxVpzLcT4M0l1cxKocCgpTgqTJEmSFB9WuRYM
QQAAJElasWLF2g9+8F9vv/1fb7+9pqZmxYoVUgKPauPqD8f4LyHBkPI4CAUJmbB8J6pc4aYqvxpS
2tTVtal06pQR/52q//qm3NozWVx60YEDB37z+G5KJSpRSqXLVv7Dl7/8pZ+EHs61bMhUAz1WIQiC
WEho3CaUEkqLiouoioRnbiMIgiBITvEIlVxcUkSJMGtTSZJQPSMIgiBIDlH8PRcXF2kuMcQKdK4F
QxAEQZDpi4cQSggpKChQXFUBoZQQnD0jCIIgSO7wEAKEEMkjCX9gijtJ3LiNIAiCILnDMkvWHKzk
Wi4EQRAEmcZ4xGmLclwW7rSBAOOMo8dnBEEQBMkdinoeGRlRjNuEMJnJMrrEQBAEQZCc4VE8Vp0Z
EkvOhJC4LDs600UQBEEQZGLwCPeRZ06fIVT5Tx6V4/F4rgVDEARBkOmLh8mMMXb2zJB4n4pSirNn
BEEQBMktHs4ZZ3x4eFgcH0YoZbLMcO0ZQRAEQXIH5Rw45/HReDwux+OyHJc554zhzm1kssJ5uMGn
0RAen9cQJiYXBEGmLVS848xBfeeZAADgsSTI5KeuPRqNxVqrodOgRxVlOvbUCQm2xmLRaHtd4mvM
KtzXEE5PhRtiN4Q55zzcoI4DDCmbRgbGa/KBfJMnt2SxNtQOkCw1yzXj0RaJ+uHYhZ/IdPIWKt51
9kiS5PF4PJLH4xEr0LkWDEGyAyHBFqFEA83dQp329EUm5H5Ws65rj0aj3c09tY1pPcIaa3uau6Ox
WCwWaw0SQkiwNdYaFAcUJBgcGK8Zb+yPe3vIRMqTrVKMH/bacFOHiZJqSTo0tF+TrbYwSuhmkJqZ
8C5zzzidSYHip6qgsED7kSQpkbt7BJnM7K73+2tDde37Npa6e0hFIhE3l40bleWLc5p/cvr7elKG
5D+5lXky1mG+1djURdkOVlRcVFxcWFRUVFRU6PFIkgfVMzLl6OrqMgdEtgXtlmejPbqq/rHDbJ8W
EAwGfemb8gBCtX6/v6qpsr1FtbQ3hJW8VcOj8jG4LaLYIRv9tSEI1fr9Bst2BsZMn8/X0NBgisiN
xU6QoF4JwW2RRBJWNXVBqNbfqGVnD8lMHnvudrRIDWFD5SStVccaM8qcKB3HvCylMMp8mO1rMHQW
0bXsLeimDh1LIVLy+2tDifuc5ZpEbZGyxrih8IkkdOqEvuC2iPpnwk7b0eg312qKWIlyF+kEt0US
1dgkhWr+nouLi4tLioqLi3D2jExNAoGA4RPn4a1NXQB17Qb7GOfhjhCIdevu5kDd5o1ldI1qQKvb
3LY+AAB17TF3RkL1cFyxCi4s1MIcF6qth7bBQRHGeWR7/e713dFo9/rd9dsjnBut4pplOwNjpsgL
aqLRaE2HooEi2+t7N0ejUSX9FntBOA93hBSZY+FNpUYJo5t7rRK2aPb2BCHpyVMNnZbcnSo2vLWp
sj0ajUbbobaxE6r1WlVrzC5z4hpTZDa1jrJxIWFe5lKE7TKvbxMpt0NtY1ivsYS5O4bYS8F5ZPuW
nubuaBKTsv2aRG2RvMY4j2yvF4Xvbu7pCDu1e6Iq3bxxMZRVBALN3QmuBFGH3c09W7b3K7WaIlaC
3EVbtFc2bVV7VIp2nywo6rmkpLiopKiouKiouFDC2TMyNVmvPYnA+IQyzEIMgf6qJqgoUwLvaA4A
hDq29nZBoPmOapf5HTv2d+b8imJd+76NM46/yZg4YOBwb1dl+WKAxeWVXb2Hs1zquhqDvISUfmB9
T63f7/fXQnuSJ2xNh99vmH8c7u3qaqry+/21obFKmEIep9ydJOyu2OL3m2eQlmWLjGXW0zl27O+c
X+2Yl7kUdpmztTBhL4XaW1LEciNAyho73NtVV1MNhJRuCrtdtyYkeEdzT0cndG5tqtycZCGprqZa
7/OuYyVIJ1mNTVaEbZsUFhUWFRUUFhYUFBRIuDUMyWMYY8ePv5lx9HCDbjLtbKwN2WbPjf7aHmUP
WVdTlWJDW7xxcx1AKBSCus2bSl09OEZGhiVJSnQnUeVbCQAYK71s3WBfP0B/X09ADAmsyLIci9GL
33fBGGtPmwuK2Xyia7ZvL2uNxaLRzb1KDZRVBNTZoc1ywMNhix3SHjI0dHZ0dNiNPE65O8RqrNLm
3IlIJrNDmjaZRQsS8njKvNzInG7uaoi9FGUVgR6ltyQre8pr3NRYWUUg1NEJABAJhyOpWllj8cbN
UOuv7XExlDX0+TRiJcs9vXbPZyghhBBSUOD1er1er8fj9YjjSXItGII4MDR09s03/3bmzNvuo6jr
uABdTVViBlRZLsbmZRUBUGfPoVq/L7gtwhdXBPQLoa5Gm2rf0RwA20A9CdHoCZ/vBXUJ2bC46K8N
QWjHpx561jcPAM6ePf3mm+Sa/7x+d5XfX7V7fdvGUkIsa8+/j544efL3e1vC+wv2G1dJ/bb1aWN2
xo+dAKD8UV1TJ6IkWRQsg91VysplXU2QEEJKN7ZVbBGx1MGNNmX0d4DBIKGHCAF+XvTz7Td+8+nX
Do+MPOlOHmvudvkICba0Q60yow3VBhs+Ya5nAHCU2TkpVeZq6DRWYDR6wu+fnyQvrRRhvjilzJbW
sefuWIf2UhBSunFzZVOV31+/GxKsAduv2cf2JeobSWqMkNKNm+tCtX6fz1ffV1Zqk1DspbD0Q+1+
qUs6Ca4I9Ch7MtTL3MRK1F6GHrXYTbtPCsjyyooDBw683H8ACBBCAOCCBUvuvffetu/8KNeyIVON
HTt2rFu3boyJnD791okTRy6+uDzRBeLR84fFF/f3/xUSLJKdOXO6pGSG+0yVx1mguVs1BupaH8Ce
y+joSCw2cM455zmmZvn21KnYqVPRCy5IYYsUNoNEaaZTkC0V3fs2lQr12VGTcGkwm/z1r33z5587
Y8asfJDHTesnb0EkOZyHG9f03eH6FYmxxJoC3HVP431fue/vA/p7IhUXXrZq1SqP+CBJ1HgWyTSr
HGRKQUiwJTp45Mgb5513oeMFnLOTJwddqmeDGg40t+kPDvHGZ2uCWNHoiblzz4GMvh3vyrmjeUtV
lb8JAADq2qO5tf5NvDwuWz+HbTSpUe+XQHP3PvdaNrNYUx4PUQECoPxPlMPDEGQSEo/HT5x4k3OW
wbd2kqvhBFmMAoDH483g2wmgdFM4tilXmedYHpetn/M2mrxkcL9kHGvKo8yecb6MTC5GRoYHBo5y
zuPx0Tlz5s2Z4xfhb711Mh4f5ZyPjo5EoycAQJKk2bNTf3vmzNvCerxw4fmx2AAAkeXR2bP9s2b5
jPnKcvyvfz1UXFxy3nkXJZItGj3h95+T7rcjI8MnTw7Ksjw6OjJ7tm/OnLkuq2J0dHRw8JjH4yUE
RkdH5849x+stMCYbjZ4oKCiIx2XOmSRJJ08OnnfeRcXFqY0HjLGBgWOUEkrp8PDwnDlzi4tLDPmO
nDw5KEkeWY6/9dbJ0dGR8vKVRH2SxOOjx48fIQQIoQUFhVqs4eGhY8f+zpi8aNFFg4PHhfxz5ljr
2RE3cRljAwNHGWOEEFmOz5u3oKCgyE3fcN+CCDIxeMaeBIJMMPF4PBo9sXDhBZTSeHz01Vd7Z86c
JUkeAJg1aw4AnDw5yDn3++dbIib5tqRk5vz55x458vrp02+de+6FAMCY/Le/HQYgIpaAMcaYLGZX
CWQb5Zx5vd60vpXl+MmTg+eccy4AkeX4X//a5/UWlJTMTFkVshx/443+RYsuFipwdHTkjTdeveCC
Uo/HAwCcs7///a8XXLBYTASPHz/COZx77oVGfZkIzvkbb/T7fPOE8hsePvvaa/2lpcu01zqOHHn9
/PMvFpvP585d8PrrkdHREZEyY/Jrr0UWLDh/xoyZADA8PDQwcEzEKiwsmjv3nCNHXo9GBxYsWEQI
leX4q6/2lpTMSnncgou4/I03XvX55okmGx4eeu21/osvXiKKn7xvuGxBBJkw8AUqZPJBKV2wYJHQ
Ex6P1+PxjowMjzlVJeV58xaqf0tz5syNRo8bL/B6C0pLl19wQWmiFDKbOo+Ojsybt0AsKkmSZ+bM
OSdPDroR+MSJozNmzNLUrddbMGPGrIGBI+Lj2bNnKKWakXbGjJmnT58qKZkphjLJOXlykDGuTUwJ
oR6PR31RGwD48PBZba4sWkSLG4sNSpJH6GYAKCwssmg7Suk555xHCBXllaQ0WjBJ3LfeOsk504ZT
hYVFxcUlsdiAy5TdtCCCTBionpHJB6WUmHYyEsay46Hc8sZ/YWHR8PBQ8tyNyHKcMWa0Lbv8tqio
RExDBQUFhfZ8HXn77ZMWM3Vx8Yy33z6lfeTmF0uEVnPD6dOnjPunCgoKL7mkwrAcS2bOnPO3vx2O
xQZkWRZF0EYJZ868nXzvla0FwaD4U5Ak7unTbxUVFRsv9noLhobOukwZUrUggkwkqJ6RKYV4Ifim
m2766le/6vP5fL4bbxyDS0fy1H//5je/WbDgHJcuHcWbsolSS/Zt7GnDsc7h7Tes+8lP9htOgb7x
Rp/vs5/9t89+9t+MOTLGZFm27GDyeDyyLIvdTyUlMz0e7+nTymvip05Fk4hnIR6Xk++NOvfcC+bN
W/j226cikVfefPNvxumvLMfdTNCzTjweF+vK2g/n3I0lXyN5CyLIRILqGZlSiC2g7e1Nl0FVezQa
i+16ZAwuHbds/uvSKz547NhxNy4dZTkuy/FEyiDZt2/u+d+94ujjWHtFXz9Uf/rRL18yFFe/rmuP
PrIrFvvOdzb+M7yn3XAuqTiR17IPWZZlSqk6S+Zeb8Hw8JnBweODg8dnz/Yb19GTI0mSLMeTXzNz
5uwLLlh8ySXlHo/3tdcOj4wMaXGzZc9IC0mSCgqK/P754sfne6a5Ystzrt9dTt6CCDLBoHpGpiCU
AjGcfOdbPNv8LTWafM+cOZ0ondkXvLNkvtVIy5jMnXR8NDrg8yWZOjt/y3lkzwNPLvvgZeJ1z+Cm
TaWEjIzAqb+95aakM2bMHho6YwwZGjo7Y4ZS3rNnz549e3rGjFk+37y5c8+x7DXjnJ89e4YnGK8U
F884e/aMJVBbxz19+i3t7Davt+Ccc86bPXvu228rMhcVlWiqWiAM4G5ILlVyiotnDA8bTNn9fT0E
qNm4naT1k7cggkwwqJ6RKUhBAcxYUAycA8Dbb5PRMz83unT82qp/+MEP/iBc6f3TP33lKUoBgEe2
bbrqqkcffeJHvW8DAOfhprINpwNvbfrgtUaXjpdcctdTh19+/XWrH2ixnbuwsMjozE5z29d5+MHv
3PW5hQs/7zR3P/z6K5fMK9KPpI7HR0+fJq/92dW54vPnLzx1KqbtJI8ffvCnLd+4/PLPitybLrjg
//v/On/969bvfGfnnyKvvP56/+DgcXZ4uzCk/8t3Hn/ttcMDA0cdHfD5fHNHR0fefvuUKMXcuf7N
D79Q/PQ3hHX9/xEycPix98+bp5X04YZ/r67+dpiHG3y+d7/7gciZ09ryuXhhjKsuCzdddVVbW5tw
UChCHm1ru+qqTSKd7/zLzd/73i+//e2bLJ40hQPH/6eKp8n8wik95CPlyx588MEr/7sTVOeDBf/0
yqcvvc9Y7QUFRSMjw1zpGye17eJaC+a68yKIAqpnZDIxMjIUiw2Id3lFSDR6Qpy/aJyuFRbyo88c
L3q9/8iR1xiD00fXGl06fvWV785+Zlf40YWtL7/w2GP/dk1RsXBC976f/n7d1fOf3vqLl46/eezY
is/88QfxR+CB5180unS8Oc64JNkXVqPRAZ9vnsWZneomL/TdbbM++p0HEx3QzzmMLLzg1Kk/ba39
0K23fnjTpoci58lnB5TiEIl4oyei0eOnT5N5y/xedUlVfOv1Fpx33kUDA8cGBo4ODr64+weR4rr7
+h9//+767f1Q/V/9O5dHH//T7Ls2bZq374af9M2ac/r0a7/Y8SfhIvDaV/7vOKUez6CjAz5J8lx4
Yelbb518882lXzi466vX/df7ry8tWHyhcPb3HunNl5+J/vsTf+n9y+0Hv/WTVwYvvXXbp66InAKo
bom2rz85MnT+JSdOHHnzzb8dPfoGIaSoqPitt04ODfX+4K6WK7656/bbb97Gu4X7v599q2fZzXW7
f3T9E3d9vx+qb91ev2g0cvYdDwl3jUYHjkePXtt/109fHxkeHOwRMkcinx8+8HJ/9MTwcO/2+qal
/3vsy1/e8G9nX/rjG68eO7biCwd3rXotsK232VjthYVFs2f7X389cuTIa4wxTR+LFsx1B0cQHXzv
GZlMFBQUnX/+JcYQscpov/LVJ16vvLD0XEI4f8Xp29KaX3yo0uRKr/L68wFO+Dw/+eMb3751BSGc
vxR79ZQl4sjbo2cXL1tk1rKEsdHR4aKiBZwf7u3qCilHVNbVACwGkAo/0fifV5QbDvQwU+Yr3PLy
ibvfV3rNv+1kjf6Omuima6Dz1+rXXOaj/vl+Qnw+ufVbz9Z8+Ta/OfeCgsKFC88HAM6f//O2kZr7
CwDKK7s6DgPQQfpm15K1/0skgFOvvR2f7Z/r6X77zFXCReBHv/sFAOA8bJFZe2nM6y1QD0a96AP/
+LWtf/o31tFUuTlaSggveHXvHT010U+eA38jOzpeb/3YMjAZBlihqaXE6R+ch18M19TsvLicXFL+
rX8AAM4P/98Ob01r5fnw5vnhPx8GWDyH/+m+YzVRy6ksdTXVUAD8hZ+8ctG36/3QaZS5PXpdJXQK
14cesuSmr9yhVB1/6aTTGsG8eQvmzVtgklZtwex0UwTJBjh7RhAQDvj+9gbnJ2OJXDomhauPewdn
doSQ0XkJn/uKc6GtnbZvMnMI2GN0TFlYyP1LTHvBhofPK4z/wuwi0JUDPpuzP2teOikcHYZsufck
d6aZIJ3suD60tSCC5AuUA3AAbgR4ZvsyECTnKC8+qRrC7jgvkSu927fd8ua3N+954sQnt954CWcW
l46O7ho1V3o3zZt/zjl3hYUDPoMzu8NsX6O/9vtD379xwV1J1AMJtkZrOnw+n1/110RI8I5maKrS
18sd3fZZ0yGlG9vWa44pF0Pn1y+95c9Ff/r+h1v/EKUXvbe3rfaB52HBh2uWGl0Eune8aHT2Z8mr
VJG5p9af0tFhnS13k8w2F4E33eTCaWBK14fCwWVDgqqjVPJ6ccM2kl+Q5SuXHjhwoPdv3VrQovml
6FASGQ+y4lAyOeEGn3AvVdcebQ3iSfJZY9o6+0OQ8SaxQ0lltozTZWQqgI5vxglCgq3hYK6lQJBp
hLI1zKidubB3IwiCIAiSI1T1bFLIOJVGEARBkFyCO7cRBEEQJO9A9YwgCIIgeYdi3CZg3I2JWzMR
BEEQJJeo6tmgkAkBQP2MIAiCILnDA4QAIQQnzAiCIAiSN+DaM4IgCILkHR5hyTbOnsVsOteCIQiC
IMj0BWfPCIIgCJJ3oHpGEARBkLwD1TOCIAiC5B2onhEEQRAk70D1jCAIgiB5hyfXAiBIMmRZPtjb
++qrrx4/fhwAzjnnnEsuuWRpRYUkSbkWDUEQZBxB9YzkL2fOnPntvn2LFi0KrFq1cOFCADh69Gik
v/+Xv/rV+9esKSkpybWACIIg4wUat5E8RZbl3+7bt6SsbNW7Vx0fPPXk/qef3P/0QOytVatWLSkr
++2+fbIsG6/nPNzg02kIp+cW1RC7Icw55+EGX0OYc3PKSsgYseRlDrnxRqe8jPJkEUulGXLP6zrk
kW1BPTGRspajtRTZajUEmWBQPSN5ysHe3kWLFlUsXfaXrmfODo/Mmzdv/vz5ssyee+HlZcuXL1q0
6GBvr/F6QoIt0fY6qGuPRqPdzT21je4fypyHG2t7mrujsVgsFmvg67+ZAAAioklEQVQNEkJIsDXW
GiREpNwai0Wj7XXZKJc9L3PIrl1OeRnlySKGotW1R6Ox2K5H8r4OeWTbmnpoi0ZjsVh7RV8/VLeY
kq1rjz6yy1So7Nebm9oYj+HUlJEHcQOqZyRP6Y9EykpLD0X+OmPGzNmzZhd4vTNLihcumH/OvLlH
jx4tKy3tj0SymmFl+eIJK5w9r4nMfSLLlWU4j2yv372+bWMpIQAQ3LSpND+POOzv68m1CHktD+IC
VM9InnJiYGDBggXRkyfnzJ5VVOidNaNozsziWTOKz5k/Nx6XFyxYcGJgwCleqNbv91c1Vba3VEOn
YvZUbKGqoVX5GNwWUeyujf7aEIRq/X6zjTTFbMOSjptrHPOyhDgkYpZH+9jQYBLSjTzuyE0d6lHM
eZk53NuVtUGA0UguQkxWc1s9u6x5zsONVU1dEKr1JzM/2HN3rI10c7en7FIeJN9A9YzkNYVeb0lx
4awZxbNnlsyYUVJYWFhYWDhjRoll4dmAsGcK66owd4dqFVuosCRHttfvXt8djXav312/PcK50Squ
WWVbUplh9XSim3vrt0ec1ar7vJKZYS3yaOWCmmg0WtPhbwxz7kYe1+SmDlUztSmvxHHHupjNeWR7
fVOlYsfvEPpvqwiItkNtY6cqj1bP9hBTzTvURkuiIjjlbkqnP93c1Xa3p+xGHiQPQfWM5Clz5849
fvz4/Hl+Fh8tLiooKCjwer1er5dzNmvmzMHBwblz57pLqa5930aDCVSdfi0ur+zqPZy5gId7u7qa
qvx+f20oYTrZysu5XDXV6cqTeV4TWIeWvCyUVQR6+vohGyrncG9XXU01EFK6KawOKbortvj9fn9t
KGE9O9Z8BrVhzT1BOm5yt9ShPWVkUoLqGclTykpLD0ciF56/aGjo7NDwsPCiFo/HZVkuKSk5HImU
lZZmlrB4vkN/X0+gomwMAlYElFlm4nletvLKljxZzGvC6tAEIaUbN1c2be20faPKk17uoY5OAIBI
OBwRCw1VvZuj0TS3sCWrDR4OJ5jcW3PPtFbtdWhP2Y08SN6B6hnJU5YuXfrGG2+8/PJLZaWlhJC3
3z59+swZWWZFRUXPPffcG2+8sXTpUuP1huXPRm2N1hIC4vnetn53ld9fpewwSroe3Kit+fnN1xBS
urGtYovfr60V2ouQZl5+n69hH9tnz8suj/axEwCUPxZb5Em5WVe/QNVqua3Dw2yfPS+HWg22Rms6
fD6f399RE20Rs947mqGpyrRe7k+1ok9I6cbNdaFav8/nq+8rKxWz53aoVWbPodpgwyes9XzTTc41
b6oNUBYgajr8fn8HJFiwsOduqtXF0NnoNndTu9tTdiMPkoeQFSuXHjhwoPe1Z7SgRfNK7/3ivQ9+
+4e5lg2ZauzYsWPdunXurxfHkpx//vmLL7nkvPPOA4AjR45E+vvfeOMNPJYkJZyHG9f03ZHMUAzh
Bp8w49a1R1uD+NRGkBxw1z2N933lvr8P6K+iVFx42apVq/DUMCR/KSkpuf666w4ePNh14MCRI0cA
YOGCBYsXL77+uuvwUM/kcB7ZvmZLRdu+5O8dBVtjsdZcy4ogiBOonpG8RpKkFStWrFixIteCTDII
Kd0UDudaCgRBMgfXnhEEQRAk70D1jCAIgiB5B6pnBEEQBMk7UD0jCIIgSN6B6hlBEARB8g5UzwiC
IAiSd6B6RhAEQZC8A9UzgiAIguQdqJ4RBEEQJO9A9YwgCIIgeQeqZwRBEATJO1A9IwiCIEjegeoZ
QRAEQfIOVM/IVIPzcINPoyHMea4lmvqSIwiSdVA9I1OVuvZoNBZrDRICuuYLbouYdJ5BI+ZAHVpy
JyTYGotFo+11LqIEg8GxiK2mM0UGAYaBTUOYc87DDflUtPyRZxK1uxtRc1uc8c4d1TMyPejsCAEA
dO1+rN8YLDRiMn04nmSQOyHBlvY6CDS37WtrDgSau1vE+CODrFui41juiVRInIcba3uau6OxWEwM
yAgJtqojswnIPWVJJ1Ke5BK6b/ecDynciJrymnEtxXjfRKiekWlBf1+P+KNr92ORvJ83pKD6jmbY
/dj2rU2w/gOLcy1MIrQanyAqy3NVFRNd0omSMP/LNdVLgeoZmRYc7u1S/jLMnzWLaG0IwLz0G9y2
TbEhb4sAQGRb0LQmbFok9vl8weC/bxNan5svVTLSA3XruiV39xBSunFzZVNTqG7zxlJ1QqZmEdwW
4QabW2rjW0ejXyumsaTGYga3RcTf4jJjXo5pch5urGrqglCtv1HLOmUsU0VZq85UroYGvVCchxv9
tSEI1fr9Bsu2tdSmdvHdeKO5fvaxfUoU5TI18TRLqmdtSMeFPA1hzhOHmNvULKGxyzqOOx3bInm7
J4llTNZljblsU2s64Qafz+f3J7s57Ne4KYXlGkec7gJTr3Mp4RhB9YxMfTiP9PUAQOC22wIAXb2H
lcDtW0IAde2qeYqQYEt3cwAAoG7zB6AHINDcHd5Uynl4a1OX9Url70Bzd3sddHXt6D0s0qxv6oJA
c3d3cwAg1BHmXA0U0bua6rdHRKA59/SorqmDuppqvYDb63ev745Gu9fvrt/eD9WqeNWpjG8hqIlG
o+2VTVuFItnaVNkejUaj7VDb2AnVLd3NAajbvHEx9Pf1BJrbNi7W84pu7q3f7qgS1Pqpa4+2qGv/
JgkTKJLI9nqRfXdzj1Z19nIJmWs6/I1iwV7NK6pZti2l5jyyvb53czQaVa585BFz/ahRQrX10Kam
k0FJHdNxIU9LNfQ7hei5a2U3SxjuCImCx2LhTaVOxnN7W6Rsd3OtOq+euKwx921qTWdLT3N3NMk+
DPs1bkphv8YpZdtdYOt1biQcO55xSxlB8ob+x3Z3AUDXjh0AAKGOztZg0Dij1iClmzbXNdWGQlu+
dRsItaQ+icBfW+sPAUCdKUZl+WLo1T+KNCvLFy8OhmObAACAcxEYEtHF8GCxU+5j4HBvV2XNYgAo
r+zqOAzg2tCr63ilpN19a/z+WvGVUiG+LdvvgN6mys3RUkI4P9zb1RWq8jep15RmJGGp8zV1NdVA
SOmmcKtadfZymWR2AyGlH1jfU+X3A0BdezRISAJrQl37vo0GJZdZSe3ppJYHwC6hNffFtpQJCbZE
odHvr4VAc/e+TaXu17ZTtLv7dJLX2GLXbWpLR1yTBOs1bkoxhmssvc6NhGMFZ8/INECowkBztxjq
hjrCnAOUVQQAoKev07Q6VX1HcwCga8eOrroabd7Q2VgbcjXTFWmGOjohsi2o2htFoDrLUbYIOeee
KWUVgZ6+foD+vp5ARZnxm3TW3jgPN1Zpczi9QqCpqran+Y5qLS9LWZKmGQ6rtZ1AQlMpQh2dAACR
cDjiNparcon5kJDY9F2y+smspJnI4yRh6tw5D2/fXtYai0Wjm3urGlPmnkhCx3bPoFxOMmfWpoZr
kuVlusZNKZJf46Y20pFwzKxYufTM0FvP9v1R+zk2+Hr9Z2/nCJJtQqFQbPxRbyrlMWG8x+rq9D/b
He4+JYoWX0tTsXlrrLrtQw43kzVNLYWoMX6guVsIliB3i/yJC2i6Rs0ioG5gVmUOBAJOqZkT0XM0
SaWKKuyDelytOOoFyeSsa08koUMUNfdAc7c9lqPMOwd3GiSua49GHevH3CxRW/1cc40tSgYldW4a
d/LYQ4y5P60X05iyoWOp9ZyOhCna3dKCKTuhY42l06aGdJS1I+fem+gaN6VwvCZRPwQw3uxONZZU
QpfUf/b2Y4OvG7XwmaG3VqxcSlasXHrgwIHe157RhFk0r/TeL9774Ld/CAiSVXbs2LFu3brxzkXd
KyRIuHiWh0xeyfMczsON/i0V3fs2lRLOw43+jpqc1q1dnrWDa/fO/Xr+SIhMJHfd03jfV+77+0BE
C6m48LJVq1bh2jMy1RAvE7fmWoxpJXmeQ0jwjuYtVcqaqLbcm0fyrKFkSfPX80dCJB9A9YwgyNSn
dJO6VS8/sMuTbxIiOQe3hiEIgiBI3oHqGUEQBEHyDlTPCIIgCJJ3oHpGEARBkLwD1TOC5JKJ9IiX
b84E802esQiW3DNSZiXNuH5sZ8KLM8Z9Kc+adk4tsbPO7Ppj5aajrvWyq3+bSuGYY279w2YdVM8I
kkvG28FfPjsTHG9/fBMpmN1l5NhrPuP6MTgOF8dl7HpE/Tva3dxTm/p8MaM8SZx1uvFQ7jajyLY1
yrHbsfaKvn7rcfF17dFHdpkK5XCSmnt5cu4u0w2onhFkkjCRbgEnsxu+fGHq1Py4O+tU/GS0Kcdu
BzdtKh3v177zsZ6toHpGphp2F3tZcZJoSfmw6oLQ4mYusSs63XmfoxNAi4M/izyOrvFy5UzQLKHu
KNCNGz5HhDya0TUd15N2R5POdZjQLaDdAWJSR4Gchxt8wW2RcIPP1xDmkW3bHF1Guqz5zNrLTf04
Ear1+/1VTZXtLdXQ6cYdpEtnnS5bx5KXmcO9XeM4CHDTw9OXOWEsN33eDaiekSmF3cVetpwkWlIu
o2uc3MwldkXX3Qy7H4twnsAJoMXBn9X9oqNrvFw5EwRn54+p3fAlaDSlfnq2aC4IU7ZFYkeTej1H
HB0yWt0C2h0gJnUUSEiwpk7xSdqzZU1Vb7mjy0g3NZ9pe6WunwTUaS43UriDdOh1CZ1jJmudxK4w
k9y/WV88dudoMhOZ3Tg8HYvkqJ6RKQUhwZZoTYffr80ACAm2dFds8fu1+RAp3bS5LrRle3/n1qbK
zcKedri3q6upyu/314aUZ2/qlAHAyTGfKS/9msXllV29h92lo08m1Fiu5XGDG5lTYnIUqDy4E5Xd
jTx6SVO3RYL6cZOOvZ4t16SexpVVBHq2bAkBdHV1pelGK21XmO5kzhgHN47Je507nGs+qZNNxQGU
m6Fhurjr4RnIDMn6YTZA9YxMKewu9rLlJNGN875kruhU93nunAAmc7qnucbLqTNBq6NAd274EqOX
1I0bx6QONNNLx+4AMYWjwMXllV1dXYHbbgu4W5VNxyGjy5pPw81lOmTHfWcGEhJSunFzZdPWTts3
WXDa6K6HZ1ar2aqxBKBDSWTCmACHko4u9rLiJNGSskvHfAY/gEp2btNxcr9odI2XQ2eCllrVHQW6
cMNnl605EDDWj5u2iNncU5rchjqlY3bIaK9nmwPExI4Co93NAQg0d7fXOeRu9oqYquYzbK+k9RM1
bNIOJPCwmcodpEOtOjrrtCk8t64wk/Yo/TItGSf/r87dyVkeN44mM5PZlcPTFImgQ0kk90yMQ8m8
Ap0DTgxYz0bCDT5hxq1rj7YGsULyHXQoiSA5gJBgayyYaymmPljPRtAv6dQA154RBEEQJO9A9Ywg
CIIgeQeqZwRBEATJO1A9IwiCIEjegeoZQRAEQfIOVM8IgiAIknegekYQBEGQvAPVM4IgCILkHaie
EQRBECTvQPWMIAiCIHkHqmcEQRAEyTtQPSMIgiBI3oHqGUEQBEHyDlTPCIIgCJJ3oHpGEARBkLwD
1TOCIAiC5B2onhEEQRAk70D1jCAIgiB5B6pnBEEQBMk7UD0jCIIgSN6B6hlBEARB8g5UzwiCIAiS
d6B6RhAEQZC8A9UzgiAIguQdqJ4RBEEQJO9A9YwgCIIgeQeqZwRBEATJO1A9IwiCIEjegeoZQRAE
QfIOVM8IgiAIknegekYQBEGQvAPVM4IgCILkHaieEQRBECTvQPWMIAiCIHkHqmcEQRAEyTtQPSMI
giBI3oHqGUEQBEHyDlTPCIIgCJJ3oHpGEARBkLwD1TOCIAiC5B2onhEEQRAk70D1jCAIgiB5B6pn
BEEQBMk7UD0jCIIgSN6B6hlBEARB8g5UzwiCIAiSd6B6RhAEQZC8A9UzgiAIguQdqJ4RBEEQJO9A
9YwgCIIgeQeqZwRBEATJO1A9IwiCIEjegeoZQRAEQfIOVM8IgiAIknegekYQBEGQvAPVM4IgCILk
HaieEQRBECTvQPWMIAiCIHkHqmcEQRAEyTtQPSMIgiBI3oHqGUEQBEHyDlTPCIIgCJJ3oHpGEARB
kLwD1TOCIAiC5B2onhEEQRAk70D1jCAIgiB5B6pnBEEQBMk7UD0jCIIgSN6B6hlBEARB8g5UzwiC
IAiSd6B6RhAEQZC8A9UzgiAIguQdqJ4RBEEQJO9A9YwgCIIgeQeqZwRBEATJO1A9IwiCIEjegeoZ
QRAEQfIOVM8IgiAIknegekYQBEGQvAPVM4IgCILkHaieEQRBECTvQPWMIAiCIHkHqmcEQRAEyTtQ
PSMIgiBI3oHqGUEQBEHyDlTPCIIgCJJ3oHpGEARBkLwD1TOCIAiC5B2onhEEQRAk70D1jCAIgiB5
h4cDcADOOQAAECC5lghBEARBpj0e4Bw4Z4wDIQQ4AHBNWSMIgiAIkguU2XOccUI40VQ0oH5GcsCj
jz6aaxEQBEHGl3Xr1rm5zMM5cA6jcZkSQgihlIgQBJl4brvttlyLgCAIMr6cPHnSzWUezjnnfGSU
SZRQSigjnKFxG8kNLnstgiDIlMfDGGeMDw3HJYlIlEoSYZyjfkYQBEGQHKLMnodH4pJEPRL3MMIY
Z6ieEQRBECR3eBgHxmF4NO5hlDHKOGUc1TOCIAiC5BJt7VkWO8I4AGOcM1TPCIIgCJIzlBerZJkT
IhPgROwMw9kzgiAIguQOj/oHBy5eqcJTSRBkGhEKhd58883h4eFcC5JNCgsLzzvvvLq6uulWTAtP
dXUPDQ8zxnItaSZQSosKCy8PVGkhk7oRUzaWHQ8BIACUEkoJoXiqJ4JMI7Y/+GBJcXFjY+P8+fNz
LUs2OXHixMMPP7z9wQc3fvrT06eYFv7w5/1zZs/+p39cNaOkJNeSZsLpM2eeee7FP/x5/5XvWQ2T
vxGTN5YjHkIIIeD1SJJEJEo84u3nXJcEQZAJYHBg4BOf+5zP5ztz5kyuZckmc+fO/chHPvL1r399
WhXTgsxY1TvfUVxcNDQ0lGtJM6GkuLjqne/o/MOT4uNkb8TkjeWIhxAghBQWSOJYEokSSgihOIdG
kKnP6Ojo3LlzJ+nzLglDQ0Nz584dHR2dVsW0wDkvKSmepLoZAIaHh0tKirW11sneiMkbyxEPJYQS
UlzopQQoJZQQSgnOnxFkmsCn6FZQS6GmSTGnNpO9EdMV3iNWnYsKPIQAJYQQkCilqJ0RZNow9kfe
s88++653vSvX5Rj3YmaRSVFjeUheNeJ4I9aeSWGBRAghAECAUkJw9owg04YxPvKeffbZ973vfdFo
NNflGN9iZperrrrqiSeeQA2dLnnViOONWHsGr0cCAEJA/ItLzwgyTeCcj+XFm+eee+7qq68GgHx7
e8du3M43Cd/3vvc9/vjj73znO7NYzKlNHjZiuvKndT0VL1ZJEpEkKlEqUUoIvl2FIEhqNN2cHM7D
d87Tef/2iJvE1Vh3hidQA6mZvn97RJN5HAW4+uqrn3vuuQkrXeJS93U88ECLygMdfYbwjr6kxU9+
jUj5gVSJjAd6n7sznL2KmoheoUGBECCEEkKJ+BMAFDs3giDTAZ4Rzz77rFE3J7kSoPobx3/+cfj4
z48fP971Vbjn22HGUqavxuKZyZdZMdVMDzz62zJV5m9Uu4vLWLhxXqObohnFu/rqq5999tmMiuhc
zAwgpHxt43UVvOLahobGxsbbKmCAcxFec2dNeVJ1kPwakfLSCe+rke3v3/vB4ydOnDhx4sTPyw9F
3DWKm+7xzRMnjmfaLdMtrHIsiVEfo2ZGkGlFBg+O5557rrq62n0i4lvlIbWqvNRdlnqsCSwm5xzg
4yv4Y/18SVq58/6+lwA+mL6011xzTWdn5xit3FniUMcDvRWNa8vzdYbmpnY573/s0RUf3Ktce019
vcuIacmQtcFRYjxjTwJBkMlLPB4/depUWlFefPHFG264wRKYPBHOzwzD/3xkwf/Au+7+3SO3z3vr
rVMAr/7wxmvufxYAbvnBoearCADwV394kxp0uPkqzs8Mw/CZU6ee/5EIvuUHh+6/yp3mmDFjRmbF
FJmuWTS05wUl91OEqIK96+7fPXL7xX+4e8knHr7lB4c2RG665v5n4ZYfHLr/SvjD3f9w7wGAjywY
di+kRnV19Z49e1auXJlu81mKOTYO/rq1l0NFhVIPfXtbfnUQll7XuLacEO3j0qUHDx60Bl5n0Oh9
HQ/8upcAAJ93+W23/uNcAADo3dvy614y7/KPf3z1vIzlc9mInL/w4oHhRadOnTK3grG/3X/lH+5e
8omH4ZZbbnn44Yf1fmXpgYaQd939u0f+9RICag85Y0s/642FO7QRZLrD0mTFihW7d+9ONxGAW77X
29v7Df4fN/2wX5Zl+fGH7l/6vd7e3t7vwSfuflyWZbn/h/8hgjqbDu57XJbFPiDGXv1dx7Pvaurs
6/vqFZy7FHIsxQQA9t73XRI5LGLJcv8P/6NjbWdvb+9nDv3HD19l772vt7Pp4CfufujQs3DL93rv
u4Jzzq+4r/d7t6gf0xVv9+7dK1asSLchsr1Paum1DddqhmiLXVr9eBAqGhsbK3pb9vZxbrddc97X
e3CpMJLf+fHV8xQFdhAqGhsarp33l/1jXIROowXNWPrbE+y99/V+7xZ4GKp7e3ur9y1x7oGWpu+X
5UTpj0dj4ewZQaY7GVjpKisrf/GLX3zoQx9ymQjnwMVy3YWLK54N93N+EbnyK+HILRUVnwIAuLma
cw79h569OXgFB7iobud9aqyD3725+tlnb/7ewxeO0Zro2rgtRL3wEjh0EEAV7Nmd1RXNqqgXkYtu
+/oXbgn+5gvhh6/UrZ1qGdMU7Be/+EVlZeX420rdsKTmzvKkFyytWJLsa0LK1zbC3paWX8H8f7rt
1tXziJtY7nFn3L6k9F32hrD3N+Bwc/AKbmg4ew+0Nf0YGjpdcPaMINMa7no+amHFihW7du3S0kl5
PQfOGGOvHj74ztKLGJPlJ+4JHtr48ssvv9xWK75iF5W+c+e+3zPGWP8TT4iZCodnyze+/HIb/9Q9
v09LPO70YpXbuMAZYxdcVMp1wWrbXn75lVdeeeWVr7yXc1nu/9F//nd5bfl/B+95Qp1RaRHlJ54w
BiafSO3atSuzebNjMXMO533/7//NrbnzzsbGywd27M3uhm2Xjcj5hVd9gB9+Vfn4xA+Ftcbe39Q+
qf9h74HWprdEHNfGQvWMIEiGVFZWGjV0Ijj/wxeX17dDe/3y5cvf/7WKTbddTAghV36lDeqXL18u
vvrwjr/BRbdtqm2vX75s2bLN/ZdcBH/84vL6doD2+i/u6O+F9vply+79wzhrI4OoX/zjRe/74DsB
AAi5+LYtZduWL1+2bNmyW0Kvst9/cfn7v/bcO8uqy94J7fXLv/gHZZ/zlV95ubpz+fLlnXClu1XJ
Xbt2VVZWTkBLpSp1396WX/WS3l+16ArVEmj8eAgA4OCvWvb2sl5bxLnQu6OlpaW19dcHl1YsgUP2
WBPwktVFt30SNi9ftmzZsmXLOhc79bdbvvgfWkMDgPKHqQdeTIi96e9dtmy52pnHu0OSFSuXHjhw
oPe1Z7SgRfNK7/3ivQ9++4fjXYPIdGPHjh3r1q3LtRSIzpe//OX777//r3/961gS6enpqa2tfeml
l3JdGhMXX3zx3Xff/eUvfzlbxcwuK1asaG9vH7tuNhbTwu/++Ocb1r5/8rrEAICioqI9e397zRXv
gbxsxHRJ1Fh33dN431fu+/uAfh5AxYWXrVq1CteeEWRaw8d8EtPy5ct37tw5xkTGo1zZLWZ22blz
5/Lly8cuUr4Zt8eVfGvEDORP63qPFs+YCEynJkeQac7YH3nLli3L/+dmXkk4KWosD5lWlebhAOJH
w/IRQZApTBYPn8or7LPn6VDMqc1kb8T0Z8+cg9liILaZIwgy5fF6vdFo9Pzzz3/ttddyLUs2ufDC
C6PRqNfrnVbFtEAIOXPmbHFx0fDwcK4lzYTCwsIzZ85qJ1pO9kZM3liOKMZtk8VgIl7oQhAk98yb
N2/Xrl21tbVLlmTpvdT84OTJk7t27Zo3b960KqYFKtHu515497suLS4uyrWkmXD27FD3cy9QSXm9
aLI3YvLGcsQjzAWyrKtnxjlD9Ywg04BPf/rT3/3ud7/1rW+Njo7mWpZs4vV6fT7fZz7zmWlVTAtX
/dPq3/95f/j3f5yk0y1CCKX0qvesFh8neyMmbyxHlLVnWZa1IM7z7lV3BEHGibSeF5OXaVJMC5pu
mxpMt0ZU1p6Ns2fO0LiNIAiCILlEmT2btoZNhKcsBEEQBEES4hHvURn1Me7cRhAEQZDcouzcNp4P
m6duuBEEQRBk2uAhBAgBYjzAnRBU0QiCIAiSQ9TZs0E9x+XR1f+4+l83fCzXsiGTEp406Pd/Cuda
wKxCjAVUnP7aq4HbYuQtmqjE+JuYfoF+eJNhUUx550O8lykcIAOor8dQiVIqUfGBEKLOAQjJ/ypB
MoTrzq84Y5wzxjhjjHEmM85k5ZMSqlzMQfQHSiihQAkFAkTpZpwQInoSpZLym0qUUkKo2p0mZV/6
x3/4R5k5vC2mqWc96K3T0Q98cM2119bkWmZkcmPczgBT7qRY5Y4hBIRrdkNJYWodtag/8tS/1AKb
zgIWxw9yBkw9N0FcRgiVlCeqUM9EeebqmnlSPlKRlBhuC1U1616SZZMfZMaYtueJAxAixnCEEqMx
lxCgkqRpZipJqnom6kBvUvYlmY2eHnrLHu4pLpz58MM733358tNnla9PvT146u3BXAuMTCZsU0Wh
nsQuQ/0/Z/L5hkomsz6m1UprBLg1gXwuqL3EqvIUjz4dtcSijBwI10JkWZbjTJZlxjhXm59SyVvg
LSjwer0FHo8kEA9YwNnzlEa7Lxhj8fhoXGF0dHRkND4SHx0dHR0djY/GR+Px0bgsM/FOL2dACJEk
quthZQUWJI9UUFDgVfpTgcdb4PV6PQUFEvVo3TTXhc4CRQUzfv7zh4sLZ3re8Y53PPBAS+fjv4m8
nl/uWpFJhPGe4ARMmkmdaHHblWqEXEufDlqhiJgpE2JVy0b1TJzi5rU24tpv0Y4ECFfVs1Co4msu
9G9+FwbJS9SXhTjjnHExdWaMMZkzzhkwxgkQ4BQ4BYkCp0AJIUApAU65OuZXk5pkDxA3zJt97gPf
fOCiCy/xzJkzh7H4bzrCV1y9+tjg67kWDJms6LMuzsVT3bQuKb5SfhHTx7zHaKUnVlOBMvZwUM8A
wC2Tw3wf23PQy8cNwytOgFJgjFFKxYDEcAGCuEfYXDQ05SwzYXSROWNMV8+ccmXfAgGgjAl1zrXD
ObQ+yIFPUsu2hbmzF/56z2OMy7Nnz6bnnXfeP//Tlffcfc8fH9+/+PzlM4pn51o8ZPKhj2XFrEq4
DDfcQ/qTnBACQISmEr/y/Ud5lcFkzzY/YMSWKMY4Y4aps+Hpoc4/AfL7RxTX2LBa4TgzjT30xXVU
0ohLuG5J41qnYmIOrWhomcWZLMtyXJbjsizLslDbsvHuArAPEK0bFScjxYUzzp9f9rvf/Onuu+9Z
Wr7i/PPPJ1u3bh0YGHjjjTf+9Jc/UOq5s7Hxlg/fkms5kcmL+Y6x3y+TeYhrLpFl6xvApFxdT1ZW
rXTaOjQktAAoj0vj01MrPiFEbNfWVrJBTWgyVg3iEqMdxmZdYrYQ0yYVou57MPYZZbcYFRvHlN1j
hBLD+wWTuEP9/Gc/f+CBFsblpeUrLr744tmzZ5Mf/vCHsVjs5MmTr7322qlTp17oeS7XQiKTF/sW
MdPX+W7bdVlIm4ZOrJ6T6LO8htvX9gwrEk56FdUzYsW1emZc3cygToqFpiV2JU1U5WxUz2RKqGcA
uOiCxbNnz77gggtmzpw5c+bM/x9rexOgccOJ6QAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNi0xMi0w
NFQyMjozMDo1OCswODowMGsBC3QAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTYtMTItMDRUMjI6MzA6
NTgrMDg6MDAaXLPIAAAAAElFTkSuQmCC

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://img.blog.csdn.net/20150926220702923?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center

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
MjI6MjIrMDg6MDBtr3ryAAAAAElFTkSuQmCC

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://img.blog.csdn.net/20150926220713777?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center

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

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://img.blog.csdn.net/20150926220722900?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center

iVBORw0KGgoAAAANSUhEUgAAAooAAAHCCAIAAADn9X9HAAAABGdBTUEAALGPC/xhBQAAACBjSFJN
AAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QA/wD/AP+gvaeTAAAA
CXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH4AwBDSoFsAWQsgAAgABJREFUeNrsnXlgVNX1+M+9
7yUkbCYsSUBcyAYCRk3N9xe0rhBrExBtBZeWGlFJ1S6EVm0RFEVji98SaysYRBq/tLWFtoiSlBJc
0Cppo7EiQciGVVAIywQQyDLv3d8f9+3LzJvJhJmE83EMM+/d5dz7lvPOuffdQ957770jR44cPnz4
8OHDbW1tr25cD6FDCAn0E0hoxSF9AQYAjKnfmRWZMabtZgAAhKOcHowBU/7XIXoynoZpabSClWSG
00r5lyi5DWWYyuFo5yIhhFBKKaGUGotkjMmyLMu8DXpzCRBCKSGEUgJKQqVsWWayLKtNZkrvENDl
Uf5ThFSzAgAzim3sDaK2xJCeMTAUYjkcWv8wY6foHWI4bCbZqNoPhFDlAIE5i/GIAzP+wwwnABgO
qOWoEqXnCC+VqNUbxIw+asfp/RngJ+IR0znDjOeMcgl4PWdILJ4zEefaqwuGDx+elpZ21llnDRky
RDx8+PCBAwd8Pt/vXlpFifDTn/z0O9/9bphln2EnMHP8GrlC7cWGXo2nHCHeeWwiqtce1w2MMQYy
k5ls0L6MMaJdZoQQAP2CNFava1cw3vDVf/R7qEVL2TSz/i/wmwCXR1ObAMSgb426SH22kJUcWp1c
fVFCgBKi3F3U5waZa2jb0wYxaGajjrTeiowHQ63NoJ6N9zTifHdyVM/WxwKTbPpTDOV/DHdDpxzA
DP+Yb7WgHy1wudUSAtZbrfbnzCGE5hKvaUPrQhJ4WySPB7HfIw1XsP6AyvRnPuUPAeUsUZ/mLNdP
BBCoeEfR9S9V/SOCDQ6bO4q+8VL1pv/7v8ply8plJn3zG9PGjBnj9/vFw4cP+3y+8meWPVn2xLdv
/tbJjqMHjnwWcvHM/lRjODaR7NWAUoSjMb2pQBYgGXPawZzKYOpt3SWpqVBmTMJMxbjVp3eAuSsY
uAjMXKRlDvLblThjsnJTliTJ75e6+X/d3d1d3V1d3V1d3ZLf75dkWZYl2U8JFQUxLk4U4+MIIXyr
LMuMyVprCSGCQAmllFLGmNQtdfv9fr9fkvySxGRJkmSJMaCUKxNKKb+QgVuAgiCKoiAKghAnxsXF
xcWJcXFxANDd1dXV5e/q7pIlWesMQRQSBgwYkDAgISFBiBP4OUqA+CWps6Ozs6Ozo7PT3+1XLGlZ
pgKNi4+Lj4uPHxBHKZWZDDKTGfi7uzs7Ozs7ujo7O/1+WVGUAJQQQRCoQKggCJQqyp0SYCAp2lwm
AJQKAqVUEAiAJPPaZAAQqCAIgiBQICBLTJYlSZK5eta8AhqyLHf7u6VuqdvfLcuMUkJAcQxQgVAq
UIESILoLgRBeuihQMT6O98OAhPg4MY5SSgXFmradv8pBl2T+n8yfS4C7DyTZ7/dLEj9KsqaoKRXE
eDE+Li4uLl4QKW8XrwJiwBwyX2jAgBEg+iVDjFeU/aJwkNz2HOT0YGRJRcDJxWh/rCLmf4ipAOdM
hjTEUoLxjzEHseY0VMhPQKdWuzxtqU9x/IGde6UYk0H5n0mSciNgsu6QI4QKoiiKgiiKAuUIhF9D
jt1MbJIEY/jQUUz2H93x/snPPhWI0mgKQAEAmABAALhXjQAAyIbvDjDzLgbACMgAAJTbBDIAA5AA
AIgMfBcwBhKDgeeez2R/R9fJwhsKbp5181//8reHFyy87dbbAUA8ePDg715a9eSTT9xwY1H7V21e
GmY5LsaDrv2rnOVuZ0CkYdozF5jcd8HzGdK55jObLIZkthwMGHEsRt9ospSMSRlTCzW0RS1Nq44x
7epQdimKTc3k2BXMJLBSm3KgbN0IzCI9c2iSYokymQB/OqOUCZLAKBOoIFFZEGRRlBmDOCJJEiFA
KCGiGCeIgkBFSolMGCOS7hFWLW1uaVGgjDCZMH5lAgMCskwIlQUlDdcgqn6mBCilgiCIoiAIohgn
iHFx8XGiGBenGnaEAchUUo07JlBREESBCpRQgQhGs04SZSmOxcuMAJUliWtNAoQAZQxkmctKeEfx
auPimCyDIEiqEgNKCaWCIFBBFFQzXfEKSIpek0HJTgVKgYAk8UcBCYBQQdHbAMCoLMmCQGWm3R2N
pjUQWZYpIX4iEUqZzLhi5v5BgVKBNxEUBwSTGSFABVEQqCAI/CFGFONEIU4QRKo8+1AX65kxyhgA
YQQIZbJE+GMnowRkxoCADED4rUk9XwVRULpaaZOi/ynAaXt0D4Q6XqL7AxgBYECVS4Gfl0y9upgl
q+XisF4s6pVm6UaTNuPFWu+TSv8ZcuuXPDGXrF/11ky6OIxp1zvRZWD2mwZTy9RENFXoeKdUSmDW
2zwzNlLJaLQW1I3Mnt7cwZoMzrdoo6yGtgTEL4Psl8DfLamaWCYyAD/uwE9lQU0sa9sDnEUGZEMP
yYqzUPku86tIVdKyX/LLAABd/s6ur9puuLEIGDz9v0u/+Y1p4qeffkqJ8O2Z3wpdN6s+Su0c0TYQ
oPwpxPSk1XsXouGkYN4VM1guKtd85rKZqQRDiYw5nRS6/Wu8xqyKGex622KtMtPFqBetDqYSxzKt
Yqh7mJOgzOXW4tZzTCZMYIzJDChhMqMUqMwoYQKVZYHJMgNGZUkQCJMFmRAixomiKIpxAiVUZjJj
IpOZLPNna5Blrq64uiUMGNf7BPwyERgoGo2rem4ZAgXNk00FKnJ7U6SiEBcXJ4qiEBcnMv4oC5QA
laisjIoDE6gginGCEMc1hzraBYRQpjzfEkq7Jb8kSZJfkgCA63JgmpOW6zASJwK3lmVJBkULAiWE
CpQKVKQCEShRHHYEAGQmM4lJTLGeKSWCIACALMkSk5ksAxAqEIEKVKB8uzocrh8Q5Q6sjpf7BUEQ
JbFb4k/GvHMEQoliqQrquDqTeQKBClQQRCqKYlxcXHxcnCjEifxJQvVyOx14xmQAIAxkkBkjhBLg
AwGUMAAig0wIlYny+AaMUUJFIU4UREGIU8xmrqMpMTYlqhicrER7TlRnKjB1oIUo+sdpHNrhfgKh
K2kAYFYVZzApTTcQ1SwKRUkbHsqJoUItk/bNeq8x3l0c1LcuKwOTeW3x29k8jbq+5vdPY/l6FpuO
dj+MhgeeoBqayX7w+/1dXYKqfYGCrOhpBgACgKK5CRAAGRh1KUo229Yy722r3QyMEUVVy4btfj+T
/VpRJzqOfnvmt371q199+umnYm1t7fz5pSc6jkIoGIwz48wTyyiB4U+vDTRZHb0h6GZLi+ypnHWT
8XFS28pc5usA2E91mySGhz6bvasX4lSCxTNnSO+qmK0WsylVEMVsUvn8VibLMlBGgVDCKGECEWUB
BIkxCjIlVJQYBQYyY4wSKsSJcaIgiCKlVJl8JcugTq2SZZkpM5WU5zxKJEplKgmKja3e8wkVFNc2
BQBlRhOhRBAEgVKBG9GiwJ1jAIwA94tRWVL9a7JMBUEU40RBFKhIqaDNkKIyA24OUsFPBUmQ/H5J
8PsZY1SglFCqyqi4qymjRKBUFAWJP2toDmRuAQvcL6eNv/IxAVlWnud4YwRKuBpmjPHHFEEglAiE
AgGtf7Q5ZfzoUKKMHzOZCYIkSpIsyozJxqlxguoc5MmYehtUPIaUCnFifJz23CSoY9DEdkJr89kY
EMIII0RmMpWJ2hgiEyASyEQWGDU5txVHpSAadTOJDec2qMP1ikOEMWUQABgBxa0DhjseI4wQuxnt
chU5XlXeLGmbdmF2S1p7yiZuSpowXZEblDQxOPkYv9+oUuiKzXznclLz4HjP5RNNHKxgppo3xpPY
0FEBZsHo1UROQ8uS5Pf75a4O3nDu2dYeGjXdzAvje7m9+38f731jzxG+49qxw7534Rj7FtWDTWQA
megaWgaQmWJDAwMZwO/3y5JkFOxEx9H580uf++3z4qnOr2bdMuvI8f3gGUObNd2sbVOHxYwzQNXz
ILKOrFDsX5cDaCjHlsp5Do5dN7t4UiyPr0afkr1WzbvG7BWo3m0XxUzUvIYyHVzZzoXYnXM2y17r
DTA/L3DrggABIjMGjFDKKAWZMkEWmMAYI3GMMlnQxKWUiGKcqKhnompnZWSX/wuMAVEMTQbcCpe5
0lJmifExIapoZ0XjEQBCKFHv/OqwLVfTDADAT4BSIsiSJKsKmhASJ8SJYpw2Fqoa5YoDiFLaTUVJ
8AuCXxAE7iRQ5pxRoqoYyhgIVBIFPndb1p8kCBHUmeFcWM3cVmaeAQA3srnSB9AeHYBb1YKeXpZ4
Hn2KnKqaCSGEMRYny5LEm6eekAT0yimlhDDN886H6ikhlAqiEMfdGoLInz+AT36zqwfNWGPcRqeM
SIQPcTA+ekAJyIRIjKiTxIBRQgXu3BZE7VmB97Z6TkVTPfMrSNHK3DnAgBFZnWXHfS9Msav5eanr
GeciLRdQKEoatGuXqc/uPXJ3c9OfgOF2ZizEmF190ueOK6Ov25jUWKl9jy4oA4sR7GBIWD2RzHGn
aYuHU8WsocHx9gwAAHK3n/m7pc4OrnQFAFlT0moaAZis/pRVkd7Yc+Qvf67g32++pUT2+9/6/Jhx
y+1Zw7UxZgYgAeGucll3bqv2NADzd8vdfqNg3f7OWbfM+t9f/a8IAHFx8cHbrGPQzQajWVfI+mQ7
YjCjIz/07GHQOOChC5TPqpuZW2FGM9Vci12/m7Sm+epycCFp3myb2Fr7mclIZlb/tkFIm3xMK8Te
zACK2ZyayYolxQgjTOD2BqjDx5JAlYlY/EShil0riFQkFLgik43/qVqTZ+EzqLXZJKrzkamzjRUf
rHG+tn7vV52ogsBdVlQikiAJinKWuXULgiiKokFtEEop5YqHEkmmgiDIfsEviH7RL3F9qp3xioam
fBa3+m6VNkdctYzVIWA+mKu8lMVUM1Z7sOB6WNadBKBNJuOngtIR3PRWTw5t1jUwkHV0dyBRJVDU
oXKLZNpUbf5MIygT6pQZZNojj/V4q+cIYUQGpniyuXoGxr2yMsh8/NtgPVNBEERlpF/XzTGintWn
CNXrAYTx/0BmqhnNmKyPOxPC/d+KpnYv1nIxeVPStouYGbzPhoRB3N36Dqb7uo051HsUqL5uk/Pa
YRaL2S2ulmCozdGMtveIxXB2/EK0jAH6N+AhtXWh0zkmdXV2d3Z0Hv+Kn+sCAKHcSmaaJa1pbgJA
1PvtVaMSb76lhOvjv/y5QvsOADffUnLVqMTuE8cZEKvFrGhoIgMwmUiq335AZ4fU1WmRjStl0a2B
Gzd9sLuxmRJBFCihRPHRcWe6LFOB8jtdHCFAyLhx6ddefYk6uEZUxWzU0+Zh6J7RA4d2UGPbWWUT
p1SMOJahKE2nKWCmwg1PjPpIMNHVqdN7p8xSoH4F6K6pgKKrz9RBm+2svy0lEcYY1aYBAgGZawKZ
yoIgqVpQeUGC8vu0YrXps4hl3Y5m+sxkZYRGNr1BrfSVppX4LV5R0AZvM6FU9RkLlAFQIgiCJMky
k/SHAQAiCIIgUoGf46r1zAAIUIEKkiALkiyKIp+Xzo1araO0d6b5bVpRzEyXGbij3iir+iyhWhfa
s4v2frZivYFR9YLlpXKlIn6SUaN6Vgxsw8tsRHt/VC1LPaxGza2MQwu845SHbMcjDsAYBWCEACOM
ApEJH5FgjAGfPScTJstEUwiMENWZwatQOk6dexZ15zYwza3NCNOmJgAhwJ8/+bgkk7WnZkb49ca1
OAsovpN7yvRbu9BcHtjBeLexWDnMVUkbirVoWZcBaaZuIkrtuoPcOLNHT2o0Gxx0t7WHXX4ovW/v
NGburfAObBANLUuSLEn+ri7NXCZUlrlSJAAAMlEUpPasypPdcs5AJstGDc0LvPmWkitTB9xyzkCp
uxvUUwcA/KD4sWUAv3Jno7oxLUkW57aGq3re3fLZsLPHxsfFJcbHDRgQNyAuPj5epIQwgG6/nxDy
1akOMT4u/c2/jt/51rJTd0+5OpcQCkR1jIF6W1ZPHz5bpkfdrRKaQ/vAG3dlv3zr7pUFaRAkH/NS
HIDzpbKzIrmAvbPv+xMJmK4Wo8D6Iy2YvNnGR2oCcPDNOV97+fb3X5g60tpuYsirZCeOVTie2Uxx
dtnvFfZmH3rjrvw/3177/JSRTsVwYRiRiUxUpyafUcHVsyALssineqn2IVCgRND8rIRZUL3C2oQF
xabRFgdRb/iqead6RzU/DQV1Frf6Eq9qMlJCZZlSmclU1h4KtInN2ntEyjvQABSIzCilTKKyYoQL
ynvc2tog5iVNlGFxPsquvmOtTlujQAzPFPoZoNhioHqewGAYq4+3hL/owU1ifQUHXf0rPa91FZ+6
pT3RADUMJgMB+OT3E24g65u/c4H2fjjVvQ7GoSkbRDsMFEAmjPJrmjL+kKYOzBCQCVCTeuZj3Opo
AFUH4iM/4BUGfMjCYM9RbchZBlDnDOkaWvFyc3c3IboqCdKQ0Ixp7Tlcv1xVJe00Jg0QzJIOadaY
Xrvd1w2W247JUrA5ujW1yAxKVynDMvjMjEPloL4a4qqhw3F0W7pOliRZ8ktdXZpwhMrUOOlatZ7t
rqRZo+KZJN18S8mLK5fyLXfNffCKEeKsUfFyV5esVq7MzQZVPfO/xKKe/SGrZ5nQR+79Lm+VrI68
AIDMmF+S+KXOGMC0KQDE/2S5aQoYkJ0rzrl6AQOAJ9798t5JqgXds4ehcGGuP0w7mEu2nRXJU//9
5w9fvC4VGAAceH3OJbeyNTt+d20qAAA0rBhz9b//b8fv0hio00js9ehbLbXYn4VdZbRPpdDOZACA
trdKJtwJf/p3haJQiXPGAN3gmCpQ5ylDxMAnCrNDb93/9TkbzUm++dt3fvP1kUR5atMMJ8VY4XcK
/v6joI3YgnaXkg0+bXPNBpNTS6+NrRBCyKGt37/yTrMwD/9j550XUM0CBQCiPCsoNiNoL/vy164Z
I4TIhMiyLFBlsFgVhhi1nto3h7bef83dVVqFBRW1T181UhNKG/oxHEAwGatU0fFMf75Vn9qpWT0z
rRsUb6tqYiupVDk/+f0F08mG1tkXqFO9iEgBiCiKIlBdMKINFARwOKt1qo+x6rDHwa33XXN39YOv
tn4nCwghcPDtBdfOheXvlF0+4tA78wp/wBd+KHruveVXpSrFHnrjnq8XvwYAADNWffjC1fozYMPv
xlwLmw/cOQEAAHY+n3ndow9rPwGgbcsPc2//+/SXt60wPzjufD7zukcK1+x49poU/l3fZUv8yQsp
0x/jjVny2mcl4zXXbNuWeXnf+ceiLQ13TlCnZ6meP9CGcEGd7qEqadDVXoSVtHaeGJW005g0WOxi
B0vaWUkb7WAAfdaYXgpx83Vbp4w5m9FGLWzWtrbbkprUpnj126LzaKHnLrc8Zxz7cm97c/O+bW8T
dchZBCZQEIAJIFMCIgFRHYoWbJV1xp0DQkpHR4e+5cAXR/Z+rlUrgW4x+xnIDCSgEhBJBj8h2iA0
GZJ07Mu9jrK7qmcqiAAgyTI3dNrbj65avfofNf84efJUYmLCtddOybtm2rst7V2S9JMbLqGCaF6q
DybeV/+nuktevv0/907iz5tG5a2wY3nalez1I/dPDN7FzjrGnR0rR1zO3jo6dxIApF774tFrTcfZ
8fjZnknV3xOuKCMLmw/Ddfzecrj5FQDWcqhySioAQNv+OnbD7ZNSIeX7R/YZijRbsbptq3uv7W5o
0wlvG5QCIBYtZbSYG/5652sAcOurPz501wRjIma7jB0aa+8AdTzCqE2cxpa4H5oyYDRlysrdexiD
tq33X/K3b3+w7MoRSjeqrz6BxcGrWMWU8f/VicHm1zJM2lnTSpoyBoDdq8fcBJs/uWui2muEEEi9
9oXGz7QFRD9efe6v02+8UBBV41N3IKsKSltoTDsY6uMC19Wyova0aVnGV6UU8URKoPD/3v7N1cMZ
Y5+smjR9SW3tiitG6vaoycFs6mu1m5l1o75DNa13rR5zE/xj55wJ+hMJgEkt63LGCQBEiBNF7Sy4
cM6ez7XnGV0urTWOB1rtE+WYgz4zlwGkXPPY8m9W3ff81uuXXZnMoHHT3NcffOXfV4yEtq3LfrC5
9C+7vjNB8P3zxwWXv/i3lrnjCRx6s+SKO//ntb0vXmA789reKH9y+h9rJ/AtB9569hEAePI3r083
6FcCAK/dXvVDg85WU+pGDlmy8fOSC5Qy75485vaFqo7/5IWU6fUv1+7VC1RV7IG3F39nE39g0lYd
UOaAKe5sojRfdWkbxkuZ3h8OV5P1urGk8ObxDjrBW/NYGC1poitetUzLC1QWZ7VlG7P5uo15A5rR
Dp48bbad2lBmaq+WxGjMMWMCi0r29ExkyacdLM161pwgBBi3HQjIQJTRYu3QGKupShxbJ6Q886tF
3d3dfMszv1o07ydLmCwXndoDqumsfxg3nakMRJJBAsILZyyQ9ez2HpeOzNhXx7+67ZZZH7d8Puv+
Rwt+uOy67/20ce+hJxY9dEFqPAPgb7cYmkCM+kBzVqg+yHA+jGhXjfdsYN9IHD7239a0I7Omw4J/
7uSbd7y7aMb0GbD4nR1AAMiBHS+vh7xRqZbDZ6jV1BuGRwGHN1eMpwHRH96NohL97mFsKHzy7iJ4
bOvfH4Mn3m0w12jrAx1bf7nj3MmqIPqkLIEKlAoEiLKAl6it/cPfq1EHn9WBaOU9KB1RsCIKIl9m
RClNjOOLj4haBqqsvSWoQ6hqDYpNeGjrs09Nu21SmqAMfouGWqi6gpW6ThZX06qpT7VCdUni9All
gqgMqaqFESDKe0TihVf+DKo+9ampBMoTU3V1DvWjjMka6tEbov9QfwqiIBAAYuwhapRBlVP5QwGI
oVdF5Zs+3KytEaIPkjteJ9r5ovsCtHMx9apFld+ovnPTbiC7K29dWvjrwgsIIcS3Zwv5Wd54QggZ
mZarni+fVBeTVR/MvcBwOqoFte1c+2rRrJyR/OfBHX/dOGN1zcuFr/1p50HjFXrDw4unP/GbNw5q
Wz555S5Y8vA0UK83on8hJGXKi9vWTH/iGys/IQQOvr788Sc2Pj91pF6acjIfen3h3Evf2LBIOd/1
t06IfjNRnq+MV65hKEt/C0tVKkE1BguyiZn8RkxXb/omdYa5ORszuuKY7ioGMDzqqhmZUQEyTc1r
7zGqeZ0WJVQltHgNtVWG9EINlVhGn8HWLmYq01Syi5fPAxZXunY0+TRF5ZVJCoQCIUAoUOVDqP6d
f6oSx9bFpT39i591d3d3d3fP+8kS/uXpX/ysLi6tKnGsc15DyXx2jPrCJzirgqDqmXfSD+eVZnzt
iseWPn3V/8s57/yUjw7DkkUPn5M5bvvWjXOuStcGlI01GDVEW03J8Dte37IibdjQ1GFDU4c91wDQ
tqU49cqfMfj5tcOGpq74mCebqyQYek+N8p5X25bi1GFDU4cPTR3+XMXzZ6U+/zEQaHg+KfX55ypG
nJU6/I4tbQAHa+YOPyt1+Fmpw8+qaOA/L1/E4NGrzkob/lwDOfDGXWdpBTY8n5Q2/Cz+qdjBJd3x
woizVm6pKRl+1qjhZ40accfrbUalxSDlwltuhA++3E8ASMM7i2+4fcn8p8j7X7QxAHaw5VVYfMWF
AGRnxbDRzzcQaFiVknz2SP3zwg4AgE8qho1JSR6TMmzM3VvagAAcfPOeYd9/fsW9qcPOSV2xEwDa
ttybOuyc1GHnpA7LvX2D9lCiPUgaFLuu9dXn6Yb3HoVFl0+64PIn4NF3PuH9T9q2loz4wZtbXhw9
YuzoEWNHj7j/DXXhmZ0rxo4eMXb0yPTRd21tU4v85Pn0s0fyz+pPlFoaXlC2pL/QoKZrWH22vtGg
6fWZ04q71DAfqPHF0ePOHZV97qisc1Ird/ELYufvzkmtfOvNH5+blnXuqOzVnwhH3pp3/uhx548e
d96qRlXjHHm7ZNz5o8edP3r8+SX/PCwI9PA/7x89nidbvUsQDv3zvlE3PA7w+NTsc0e9tEt9N0rx
1vI7cMPG2a8+/OOpKYRog5+Ht35/3Hnf/+dhSinZtSo165yKXaoOUv588nzmmJTMc1Izz0nNevET
IlBBEBpXjx63+q1/3n/2+PPPHn/+6HlbDxveE1KaDsoSmsKRrc/+Ah67fCJvyaF/3q/0QPZ9bx6i
lNBPKs8dVbn1zR+dm5Z1blrWqk/oId4VaVnnvrBLnaa2e1Vq1jmpWeekZZ2bVrmLEnronftG3bAE
YMnUceeN/r/dVKD08NaSrHNHZZ07Kvu8kn8eVjudKlqYAiivmilvHH/y0rmjX9pFKT249b60eW+9
WXlOatY5qZljUis/IQBw8I27Mr7/+iH1+P/u7JTf7QSy8/mMs1N+9wkAgYNv3JN57ty3D+rPtkAA
Uq/92arCpTPSL77pyesqFn59JBAAMn7as9c9dftP3z5ycOsDNzzxjRdvGAeE7PrnU9NuhQ2pmWNS
MsakZL7QoJ/UbR//deOMb09K4T8P7ni5evptEydcePO0DX/d0WZ4jCQZl99W+NrLO5VT98DWXy8q
uuWKDMP1YbhQgACkTrqtkC2q3QkHd7z890cz20pGZpw9MuPskT96o0150Gh7fcmdeRvummh0XNkc
CXb3kvM9MwwlzeybDL/dlLRBWwZR0mBStMzoj1KHWZixGj2h/t3kzrc006iNLcaxVa0yWy9ZB+1c
fxrzQuCUrp1thAo0XoSB8TQxniTEC4nxdOAASBxAEhNJ4kA6YCDED4SEgSxhICQmQmIiJCbwT11c
2lNP/NTv9/v9/gd+9os8duiBn/2C/3zqiZ/WxaVBYgLPwhIGQsJAiB9IBwwkiQNJYiIkDqADBwiJ
8SQhnibGQ2I8jReBCo7yBlHPS1+pf2fXvoadu3LyLn9x04e//Nu///72jnFpQ4cPFC+YlPu3v/71
X5/sc+grgxnJ5+/AK9/5Y+b2I8fajry7hPz8mZr9qVMr297+BYGn3jxyrO3eC0lbzdzxv7/lk2Nt
R4617forueWh1w8A2bE8Z9bfHn/72IEjxw7syvrgYUM9D/87Y+fRA0dempp64PWfNf74yNEDR45+
vPamR658riGloOLIu48TeOzto/uP3D/RkKnh+aQp/1770eGj+w8f3b/1qcVX3fH6AWXXo7c0/vjw
0S8PN/7hxle++7cd5rMgddKtN7328vYDAG1f/ptdOjp1ZOb0DX/8uA1g5zuLWdnXJxlbPPHuNt++
g759B3evmQHTXt51zySAnSt+nfHJ3jbf3rZ3Fr8265EtB/iJsvER+GHbkc/b7p3QtuW+C2fBH3d9
fuDI5wfefsR0LisjXSYT13DWE4BDbyxbAk9cPhFg4hWLYOFv39DXf6v6zsuZ/zn06ReHPt2ypPq7
E1bvBICGF3+d9e8vDu354lD14lfvXPT6QSAH37h77NT3f/efQ3u+ONT6xaE5EwgAgddu/UvmztYv
DrVuWQKLy99qIwA7V4++GrYcbP3iYOsXby1cfPXqBkVAxaYgVHll1qCydq9Km17/cu2+gy37DrbU
LHmy4O6tys0WnpzdfN++gy0f/qnwsWszc5vv39vWsvfNh+GRFW8dJJTsejF18vfyNu5ta9nb1rL3
xWtS6eGtC/f8uK1lb1vLhy8XPnbt7z5Ju7ri4MbFAIvfatl3cM5ESpQnVIOlt/OfT0770/QJinjc
REyZsmrj4lfv2vAJOfjmisduWP3hvReA4Rl25/MZBe+v/vBg676DLfveevixa3/05iFlLtPjt3MB
atfc8Pfvrd+lFKh+AGDj7ZPPScs8N+2y1vkte++dQCklh96+N+evt+xo2XewZV/Darh9yZuH+JSv
J2e33K80/5qMS5rv49XBIyvePEQI/WRVyrQP/qT323X3vH1Qbe+jb7bsa5szkRx6857Jf76dp6ld
A3c98sYh5Z0p7XlBHSZXzGOqXJWEEoCq2X/K+PBgy76DGxezJ559/ZDbfWDC92vXTH/i2TcOws6N
33vt4X+svCpF7y/+uDjy6h8+AADfXP3gFSPVs3Xk5T9bOXXTPQVX3lVTWPmzq1IIgYP7P4CNt/8t
c0fzvoMtH778zcXX/G6nUsknG277++LSq1OUi3Xj7FeLZl04ElIn3HJD1ffWf2KUZ8TU+xdvuGtD
AwDAzvVzqp6479oRge5jKaNyAQDgcMurbPFtrT8+2LrvYGvNkqrZC946SAhp2/rod3L/UXKBmxuJ
2H8ZW++Eg5IO0Zj2oKTBm5IGsyVtsnBNojopaYt5rCtptU5zVW4PJsZxAGbIp691w9TfpmzMVWOH
r6HVhJSKJC5BHDhYGDhYHDiYJg6mCYOEhEF04EAyKIEMTqCDE2BgAh2cAIMSYVAiDBrIP3li+88X
/i//5IntRYk+yxYYNJBn0UoggxPIoAQ6cKCQMIgmDKKJg7V6iZhAqfMos+jaBv4vAQCSkDDgmksn
iPFiPANBJIIg+mWWcd458XFxkiTxqaJBuOkPv/hGKjCAC7/+BFnUfBCM86gB2rb/YQOs33DBem3L
1w6+lPbOz9mT75ZMAgAGKQU/fpJs0HY/+cBUPjMLUqesvr9hRVKqorzzbH4TjR3vLmSPvXWdkm/S
t/9w489f3r5/SgEAwGNb758AAJA66bab4I9fHLh3Yqohb0rO7Tfc2nToxYsO/Gn9Y6W/YykjZ904
s/kQXPjlv9mSn0wwOmXUbzsrxs++9J19U1MZAEy49/kRW+5NGc8nw0xTh4Sm/fFbPO/Bj//42g1r
66ekAAMGk2b8ccbjL1tO7x0vpF21hH99bOt/504ydl7DnzbAY/PHAwOYeNljsORP2xdfO3UkAwAo
+v1Tyv1uwrd/N33Ruv1tcyZMvKti5FslI+7k0kwHgLaGP28o/P3Oq1LMHTb9T49emwIAMOHKhbCo
9dCLVx96+wkAmDryCTVJ4f62OROUG6rZi6J5ABu2PQYP10zl92yY8K3V0xb9ZUfb1dcCAVhY8/0J
AJBy4c3TAG759gWEAEyavBiebDn0m2sPbVsMD9fce4HhBjjy2hfn7Hw+Y4zigsw1W0tOtL3160WF
tzSkmDYSBnDBPW89fPbVGYthYc3Bq827P3l3ESx+i28kMPGGNTc8+eePH712ChCAxW/NmUgAYOSk
2wvhj21tMMGQlwDAtD/VVkwZufP5jILyrTe+eFUKQNuOv2yE6o2TqrV0lx78rUPzvzUBAGDiZYvh
yZaDv732YO1iWFgzRSle77cU3esKbTv//CpsfDX/bK3ovEPEOOHfaA0qv43GZdGaMt7MCZcvgcea
D8GU4c7dCCnXlr3450n5Z0PRmh2/nuDwSL77d9c//c3C6/4+Z+mN7/3i6yMAAHZXfu3b/3l2a+PS
VMH3zo+uydyzfs/cEQAw/Y8Lr0kBAEiZet9iNv3dhjkTJgI0bFtMHq5RJ6LsfOcJmLF6UgoApEy6
rZDdvm1nyQWGSRUXXL6EXffPT+4ZceDXi4r+r+ECYAfAnbYv6+GGm0cAAJDFb87h5Uy4afW0RX/d
8dQEtuDur73R5NSonqIpF31kmgTLoR02w299k9MEb8tbWC5j0uppo2hodZBeH0LWh5fBNmtMeZnM
OCBtzwj6sLMmsGmVO1ujtE6y6mRzBzhO1XHqzlCGogEEGkcHDYxPSgK/nwCIFAgBAYAQpswIoyAS
BgAikcEwO2wGnJoBpwzFDb7BvIXBYAlABPAzKgL4lbFs8AMQRggAY+CXgQKAKNJBAwUa5yim6Ci3
9vXBGy5hjI0Zc86Gf/7n/QPyF74TXX7IOX/4r27LGyofS0wYmHv+MGo3wZnhbJI1VwgzVGB8BlIU
0Yy/bP+dqjsBAKDhHaeDaWHH8rQrfz79z7sPHEljO5aPutLdURICtke2lJxbbpz57o4rYUPZ5S8A
sNRJt9703bd3fJ28sviK3ykNNVS6s2JYQd2fP1w1iTEAaHvznnGzNzy5uc23gh14c+74P2tno3HN
WWZ9UjTr50l3f3n4boftAG0frX0N4LWrzn9U2/TyjgNTr07R+tbU8QffmPM/33114ZaDeyrg4Bt3
/c+ftYvD8XnX/ndJ1b7vXwDBIeYvHq4ZU0onvduw+uyrn5j2p3/tOzgSGlaffXXwEts+/svGJfdX
pDhVNDJjGsDG4GU4ihc4GZnw/arFi4oWvf4vZSL9Das/fNH8ENAQQsUBu7dwTcNvr00JnMxL5wcj
NfVS3l1M969q580nL3z7yWkr3v1N9o33Tyl5YvrW8suGQ+O/niIPvXLZCAYMhl/9gwdY4b92zi1O
+xpsbD68YopV4p3vPEGWVKkK+JN3FwHAnEv0B/K/K1pcZcJNq4smPVfy7+qNM1YvSQEIqJ13vFw9
/fZHU4Bl3MDW7j94z0T9CYZtf232qwxezXxM2zRl/Ad/ePs31+hPKg7Kxdh6D4Q1dwzsejqYkiZa
ai9KGozLjVmndmvLHGnvX5lWA1X/YapON2QEUOeGqcVrtzjT+LJmbStD4GZL3DR8rlVv7ylbRwZ/
COIknzVIThyaOCJNOvUVgKqJAShlIlWXD6MyAIgEgAB1L9dSpdZs3jKqvkZFZZBldeyEEQAQEgfL
iUOTzxqkJDZXQK2VmCEMGIObv31Tw1sbLxgzZOpVX5t8zf+8v+fwJ5988vs//eWia294d/cB27t6
6unhdso5kJLznRkbbl5Ysx8YAPt45Z2bDzCY+PUy8vDTW/YDMIADNb9+2DB/QNU8bV/+m81Y98TU
NMag4Z0FhqESO5Muf4I8etVzO3iSHX/9zis33nJhmmFSoNnLY/qkpl5K3l/2v49OzxwOjAEbmZZH
6v73mYUzMkZYB3LaXp9TsOiJzaumjlRyH2h5FR55494LGGNt29fqNxx9CGnkpNumvTZrQwM/Dz9+
5fYNym7lo70LpK8zqC1VsXP9rVWwpPqLQ3uUz9aFsOHOV5S7f/V3/7oTuFQ/v/O1G26emHKw+VVY
/NacC4Cxth1/ehUYAEuZOOuG6u/+/C3udG94XnFZGz9cnguueBgWFb3QwPv+rZLndzr0lX68GQCD
ifmL4YkCNeXOv83ZeMPNk1ICZuHfTRnb3nj+rZ376+GG1UumjABgO995wpre4bNzw63Vi68Yr29p
ePHskS/uBAaw84WJcy59q6VmyRMFd73VZso1/vIlsPhqnoxBw6uzXy285cIRtorAqV5ty/h73np4
462PvdHGUi68edqrcxa93sZFesFanZfmW/pNTZwy4ZYbqmf/XClw5/M/eKONuXSFo5C2SmFkWh68
9nJDGzCAA28se0LdfuCNu6Z98HJt/R/l2Tm/2wnqG+B8gvjO/5v2+DdWPXr5CDb8yoW/+Ub1j6p3
MYDk869nS//VyDXFJ+8+DUVjRzA2/us/Z4+seINXsGX5YvLw5RMZHHjz14uK/u8m5Ui1bXluMRSt
aWjhjv19B7etuYEtLufNVPsq9YJbbqje+CpZXHpVSqB27XxhZP5ssvrxKSMARk66rfC1217jR3bn
+jkbZ3x70rVzPm9r/vxA02cHGj87sGERkEe2fPLba42H2/EOFvLDf+hzxxwSmX47jUmb5lg5uLsZ
2NzdTFXdTgPSoFseprzMWKmDr1sfjVZ3GQatLe1RlLOWzNgAa4c7dJlTR3o6Onl5eR82to6YeNGg
1NEJSUni4CEJg4cMGDokfsjQ+MFDxcFD4gYPEYecFT9kqDhkqDh4cPzgwXEun3jbT3HwYHHI0Pgh
Q8UhZ8UNHiIOHhI/eGj8kKEDhg5JGDxEHDwkISlpUOroERMv+rCxNS8vz1FwMXCLZGAM2JRrr67Z
8vqezX/oPufSAyf853Z/teL5f9z6nZv/+KsHzrr2GsNKzvox27ki99b1AOsvznv3y29pR864AiaD
SVc8Ti6/dtjP4cl3D9w7deXbT6VdmZ0KAHDjH3a+lAKMTbpvy5MLpkw4CwAAyh57gmwwX34AMHLq
Tx+/9fKc4QAA02fcqJwXMOmyJWTqVWc9CmVbDt2sPpqxCSW7/lA3burwBQAAcOPvGyqvTWXaWAjT
Th3bNcEALvj6kxsXLpj28i9UZ+MVj762YPENax9PUZ+ieZaG5bm3rQdYf13KwzzhI28cufEPN+Ze
O+xxAIAZRdNVaXguWWnG4j/MuHTKcJ5m0WMz4H3Te/vup1/De4uhcM23xuuPnhOmr7nhidlv77zn
W4xB4WJ4bvRI7lZVvLgz/lR4ydXpiwEACqfdwMsaee2LtWvuyr9kJAB3zzK2H/QrVluqmU2Y8+HL
H15ydcZiAICHN7dd5eAQ1JS5suuCu3esfn/StLO5R/qG1R+uumok03uN2bKoT9oX3N22kaUoGR99
s+WaiSmP3jpNEfKGQjX7BZc9DtddnbEYHt7cNsf4UtnB15cvvmH1h0avpVLpJytTpj32+Ma9EwAm
bHx00bRLVmzca3AJXFBSu6Yuv2DkkwAAULhmx2+uGamLanEDWTtASzBh+pobnpz985s/XHXV828+
POYa7oIuXLPjN16b79hv5vZes2rjoylqn7xc+/xI61sqAE+qDQF4fOPeK9R6LZWqfy+48cVpi7jZ
Sh59/GF4DRhre/3uyd8jL344ZfhItuil6ZddP/f8uuevGMGLadv6w2/8kjzylytHgiwzNvLyuT9n
357xs/P/+dTXn/njT8ffPukpAAAgD7726ddHAIML7qj7fWnehZkAAOThzQeKL2BwYPtfN864eYki
fNvHL1eTJRuv0duSck3pw3DNX3c8edVEvdtTril9GEjGjAmGecmaDlw07eyFSqOn89eoGDCAkVN+
s/mxjAI+OjNj9YcvXKUeWL44teGSVzWTyfukLi9rOKHC0dNgdHdzghvTAS1psBjTtlelvbm7e+br
dng92voCmmKTGIeYjfpYkdexM5jeHuLBZLZ2moXjp3y3P/nUj6dN65xxY37+10YlxIO/CzQPNgWB
KHZu4EjPgQ8bM4V2pnzZbuUlKjH+UEfX1toP/r7hlWerNp44ddTeEjJh0rgP6/9z4Mh/LUX/amV1
+aJ5Xd0S7+TDPt+6v/zlrbe2Hj58OCUl9ZorLn39r7/77ZMljz7yi2/c9iN/au41kzPV1ya1NRiI
tsWwmIH3ppk58MZd2d+59N0v750UOBsLWpjDLxZigQDGu6C78nRYsM74EGMWgQVOBR7vBVqVbVtL
Jv3llh2/uSYleKYAxfUkM9I/sLodZW11cHVVN8YYkyVZZjLjf0G7kROqvdilrrdNtQXUCJ8ufvdl
626zrjRymprGFbO+5rbWKMMXZTV02bBFWwOmRxeIVc94ukG6zyC3+X6ts9ccgh8Qcz6iZ9DWANDV
hWGvKaN5O9H+UXtHZhKTQWaS1pdq2DZZkmU9lIsSrFONbsejqGnv/lGqnzPO76U69Z9rn1IixgsD
//LgvI+2bz9w/CSAYX0eqi6Hr71qqGhtQ5FcoTEALaCk4SeA5mBSTyQApp9GMgCkDhl4UU7OzKef
6fZ3yGCKipE67NxLci8WXV0GAARInCgQQhiTU0cM//5dd33vO7d1d/plJhGBzpz53Ye/k1s6b075
M8/+v28WQ34GM/aFemj42rUA/EL1qJ4VcdpqSn7GHl99XSoA7Pjrd1+Bx0onBZi/EcZ1oj14uhXA
XH4zxzSBVLb6FKt/d5eHeZDEuin4bSJYAuY9KXKmYXRfMnXgWXNgykazSPNj6pNymdG1TqymTsPG
77328OZVI6Jy3qneVF03W94dMmxkqq+YGQz2ntWuFmIypoNPHwvBkvY4ccyykgnRSnNaxsRsRisD
0ob1unUz2uge18xku2vClJDproxATz8uQ9HgYEY7d6jM/ED9xc+t6vlx7AlfdRyVoNsxaIdo9F4a
SUlNmbek3NIdWjw7AJicd8lVN80tf2blLd8u+PNfK4u+N0eZkUYoKOsSE0YIUQJHEADiaY63gRFT
H7/tzouHz+S/Fr/VfvcEZaaZC0GGIOyGMgtaAAuW0MkDzQz/2yu2qkFLfmfz3/EZwD0DAF8SE2RZ
kkPp9TCcdciZgL6kBAN1hXRZWeiUKaG01IhZ2nYAYIQwQkBWglCDLANQSphMVb8oTCj+bD9AqHeH
yLVMVu+BDAx2M5jNZSZrU+JYwGs1TCHsHu9Q5o7Z3N+KZjUktbq7zcaSceFuo651VtLmJbvt63Vr
QQkMLlN1nRN1XTvQnthMgwVcDkOjDBPK7A5svZmW3vGooTu6TnZ0nTRtsvgaThemE0BF1HaC+WS7
ffrXHEvR1lkmAPLXZgLp/PNfX5r+/UeZLCuxhEBihBDga7cz5Ts4m87BlMHwa178/MCLqoShKhrj
P+D0K7Cuc1LNNn1q18nGUh0fDwK7vi1lBigpUDMAAIZf9tt9lwH4XRaMC1gggpjQZ+wYnNuy+sCu
uO1kWZYlWVJDgvD/KVVCXHHfH189nABhPKKJfjeOUsN0M41pihlUfWzwTJr2qpd7hK8bkzEd+rB0
ACWt7tWVtBp6xWRJB1LS6tRuW1wNpVr1aQzMStpgKavOF234Xr9nMsPcJKaZ0czYEs3rYlW2nmZ0
e/JLWHI6j3L3JpYaRS6P7NlXo5rCSpdcedPsq26aDYQoQweqoaxGGORxwInqYunp2eyizry4oIOb
pabiXDabs1jf1jNXbv5t083GLy6PEgzc9nnqGeYldWgZkTMW3epheuhK3UxWxhElWZZlSVfPwKhM
GTCgfEoMZUAZUAqUaLf+GFDPTH+ckIGBEnnMPMasa249S+9KFaIxbX2Dxv0tLLMlbYsn7ayk3WeN
GaVkhgW3mapPtbEP8x1QNZ21eyNTotMa3N6G2ykj2stVDg8iEXznKmY0tKh6cUKwS1VTmMn80Ul5
huKBc7QVHkEdwie62tbbHJ7gXvKZlZqDnRnMYjXrV4t/mjkX5aprLavj6GkcpHAzmt31M3PZ7rGD
vXrJkTMd3QrimkqSZWBMkvXxZu7clmS/6t42WM8CI0AoVwmUgcCAMZAJ8AXMILrq2axu1XcUDJrY
8B1Oj242dHv4Str6O4CSVk1d9xBYLPCAtJOvm2mhynUXu8lvqL8jCvr7ZsozoJ7D+a5HTCI5NdC5
R/Tswbtey+nodu5VtPu/qHeXB2kNv5k6DUDxZ6hPL8T8HwEglPD55OFNTQ+wJwT1YpsXbZqLCiYd
6KSpda1vUd5mXexajvl1fLOwZlEcG8Ecfjq7Bry5QFAxIyFhOL+Z6t2Wmaw6LfnkZlmWZUlSHNza
jZcSiQFTBiYJFUBmIDCg1BQNKPrN0+aIGRS1NlBqeov39Ohmg3A2JR2ozxyUtCd3t3qPM4xCGl3Y
rr5uUFbYsPu6maqtdevY0JNa0zQ9rWhyULrY9NgEJrPSRUMbBLP0SF90dAOAqM68DKjaLL/1DYaB
Bs1WVlZkUyajMwCJ6LtNhRFP1bmZjQHEAkd1xSzKz2LFmpzRzLrN/ixnGmBmxpSWuu0DyEY97lym
m83s8vqVR63sJRGCOKH5trl2VhS0alEDAFfOkixLflmWeQR67vsUgDJC+fCzoAQPBcqYZj1HvWn6
vwYlDeozuOF5mgGL0mUU4hxvkxoP6u42rjjG31V2mdrt4OsGTXUx48peWoGqO0K9har/6O/8qzPk
Db1vfpUmoJXmpKHBwYzui45ukbdG9u7cNitBPrpATA92Bn+VIVaWcgY4LTHmVHiA/QFcuvatlucO
xpyqME4NtKlkY2J7QuP/pm3MWr9xjzEMnXmvpSj3pjDHry54eeRBkACY/L/qJG3tugBgsswkSTGe
ZZNzmxGJx9CjIDMAgb/GAZQbhRBd69k2GKY/iNt2xMRV0/NhabuSNpnRWmMDzRozLOoZyIxm+ou1
oL30o95Fma6X1d/a8hj6eaW5L9QnAIuFbDbrwVhY5BzdBg0NAKdNSYvavAfj1uFJqQIVgp6NAfeb
Xm2PzACT21tOQYQMcFm5GNzMLZHFELaZyQF7RtHNRD/7CNgKcOwlV8UcTif2KDdyZmIeqDG4e03P
uExZwkM2OoIJoYJAlNDZPJoWoaCvWATRVc+mVkbwOjv9BO9FElpyJV3g1T+I7V+ngpWXckH3V+uj
/KC+uqbrZeUsUaOwUzUqODGcLySAUKFti/7pJzP52InD9u0OY88jktKqq/7+5tbXQ64kwPkcsF/P
KAxPKrHg2EOQENCtH8as6hkM7wkbzE8lDjhf/In/UNdhgliYGob0IpqhbFg1Q1lSTtfL+hp0cIae
M1d+/erCokK7hja998yhVHjzrdcrV/0h2jIj/Y2XXnrpxhtvjLYUCIIgMcRDC0unTZtm366oZ33G
nPkngiAIgiCnH1ENYsHX+mbqS8qonxEEQRAkaoh8Mh6l6vRqvrAIqmcEQRAEiR6iMrOaKpGy+Lxx
iuoZQRAEQaKHNvZM1NfglN/RFgxBEARBzly0mdvmdbhO76p1CIIgCIIY0d97Nix/ZV2lBEEQBEGQ
0wnlb4T7/X7J75ckvyRJTIk3gyBIxGhdXpBUsLwVH3wRBPEG5Yu1cO3MPzJjsix5yNtcPrmkOsT6
qkuIQkm1+ivkQiJKdUnEBIiF5vRt5iVpzKvpL5qMsZp5SUm5C+qiLUifh7HW5QVJSUlJ+KCDnAlQ
HlW924AsSZIUNEJGdQnJml8bWmXN5ZM3zFCWb6sav7sZCitY1dwo90BhBasojFhRUW9O36bct64Y
AKB4na+8oL/MTySkQG0XgiCIVyhf7dTf7Vc/ksyYHFw9h6GKml9bmzND1YSFpaWZ0W48gnDTNoLG
esQLjBExYqFdhKTfV9Pe3t7eXnNfeihPb7EgPIKECuXr2ivDzpKkjj17ji8ZAo27XKztDSWEEDK5
vFn53Vw+2bzBvkV3kmvb7LlMVJeQyeXN1SWElFRDc3l5tV6M0R2tlEIM27VNJdWGLMpWNa8iUNHK
03HUkIixZ8XSytgu0Dutra0x3i6jhKeTKB4UBAkbCjyiphYzhJkicJ4WVsIMxlhVzvynqwEAmstn
r53VxFjTrLWzuaq1b6nesHJuFZd2G7fC1TRs0a7Zjgq6cMbc2l2NAADbl0zO2jWuEMDJB9A4bhFj
rGou5C9r4k7v6qfn51QxxlgVFJVUK1lWFs2GNYwxxTHeXL5k+7ImnhHpRWoMo9NJ82qMu5hpX9K8
GjVKpzpeqVKwvJWHzDEOCVfOTE62WFemfB4GO4MWCHULcpOTjUWGXZdTu5Jyn20JKoZjbzBj382r
0X/wnUHbFaKEbsfLixj2qQnMUpDhEHs6KAgSq1AAIAQIpTygJg/B3TuDftnj8x23z51hGvtt3FWb
My4TIHNcjqJP7VsKK9iMDSZbuXFXbe38LEJI0UoljUP125csWQlQW1ubPz7bRcjCwkKoLimCqm2q
872womn8EqtlPFffb5QQ6U1alxfMrITidb729vb6sjyonKlpuNblBckzKwGK1/l8Pt+6YoDKmaU1
jDFWU5q7oA6K1/l87e3tPt+6Yqhbv2kPABBS8IyyBUBJ8Iw24N26vCB3QR2vy1dflle3ILd0S2Dx
AheokFdW7/P56svyAOoWPMv1RBh1qe3KK6vX2gXQ0NTKWAAx3HrDlKVy5szKvLL6dcUAUNfY4rFd
oUjodry2wFTPYpi6XRvazyurb29vry+DBbnJ/NwIT3gEiQUoIQSACAIVBYF/CCH6Gp+RJHP6LLZb
806XuzihIXt8/vbdzQDNu7crWtS+pbq8PLuCMcYW7cri7uXs8fmqPe0y1StzXE5tbW3+PffkAwTQ
pc3lk4ugqqIQoLpacYBn7VrEAlvGBgl7oeMQAGCsddP6OoDioqkAAGPvfbAYoG79plbG1F15ZfXl
BYTwOzK/C2vfoTQ5KSkpOXlmZQh1QeXM5KSkpGRufFVW9djqKl63+d50QmBs1sSe1pWRnQdgftQI
OiLrsTeK122+L13vw3Ab6yphgOPVMzGKH7x3LACMvf6mPPXc6NnxQpBowsNcgyjGCaLIP5QSQQiq
nqtLSNFKWFmkD9wGf0Mps/RBmK2M624YV5ppLYR/ySxdM2ttFiFZa2et4RaqfUs2rM1SxnoV2zuz
dA23cd1Hn7PH50P+rAdvzAHNeHZoxdPza2FlESGELNmdDQBQWFEFRYr1vLIof+6t1iwAkFm6KGd+
FiGz14J1FxIpWhrtrybVNbbouyZmjXXIxn2fMyu53epxBjUvULEyVXrJ6gqnLj5JyldfBgtyHV39
bnjoDeUBqIcElDDQ8YqAGPzpRzk3EKSvQgklhJD4OJF/4uJEKgiCIATLWFhhNVW9vKGUWbrNmM1Y
CP9eUainMriPrVv0cvQ6tW3bXOaEZ5ZuY9tKMwsrmMFx7dAKFXsqxljtyj852ug8zbZt29zNdyQM
WpcXqIOF3Bozk5edAaDuamjaY93PWE2p4kTdfF96QOW6Z4/B2HItMARMBQYg/Lq0iczc1e88aG0Q
I4TeiEC7AkgYie4NJGFTA2jnRvjCI0h0oZRSQogYL4rxosjVM/FiPSNIr8Nal5csqIPiogJCCEm/
/qY8gMoqPiy7paoSIO+m69MJISSdu7oXPLsFtMUrTLrKlKtuQa5hWpaqKjY9m5tcyl3Kal2KY9ap
wAA4FBiA8OpS5kOpybg712wvBhAjQG9ErF0BJPRwvMKjcumKPYy1rihZUAdQ/OC9Bld/aMIjSCxA
xk/I+s+HH32+X/cHD08a9cBDP1m14qVoy4b0N1566aUbb7wxQIJ5SUmVto15ZfU196UDAGOtK67T
V9/StnMYqynVB1P1hU1YzTyHMda8svrNyu2bz8yyF6httxQYFEuBNsGKqmxyhlqXpSu0bM8UEDcx
lIyOvXHpHd96/6W/WQuzyuDWUeFJaD9eU2FLqVU4w3E0pTftte4yHNzwhEeQ08lDC0uX/uJ/2786
qG1JG3beJbkXkwsmZn/44X/2temPz8OGpj740E9XLq+MtsxIfyOoekaQMFDUs5NWRpDYx009UwAg
QKgBQgiheIojCNIH0E3nugXouEb6LgwYA9PZK/KXnInhkZPg4yeCIH0E/l7WM9EWA0EiAgNGQFHB
ovKvWSOjhkYQBEGQ049mQ1P7HgRBEARBTis25UtN+7zrZkPkCM9rcGhhLHq4akekykEQBEGQmMGs
hRX1TJiy4jYBL27t5vKlPCAEY1VzVxZ5VJM8mMTcqp6u2sFXAIn94BPBl1FDEARBEADQVDBhihYO
b/mRxl0vqGEnCmfEvJqMErj+NoIgCBIuovJvaFPBCiuYagBXb9i+7IGKnojQXD45a34t5C9rUlfR
VLaAZmnbNoRRMl9ee25V0/glWfNrnUtySWMtZ8n2/NraWjDJY21FdUnW/FqAIgJ6RfaWImZeeeWV
aIuAIAjSuzgv/2DTwmLwkgLQXD55w4xtFT1RNUqc5m1QPnl2+fRtpZnQXD57fk4V21bYXD756Woo
LFQiLm8r5O5irwraWnIFqwJSVDR7WRNjLhIXOqVRy8msLplc3rRtHADMWlOVk7VhBpuxQZHH3gpe
1IYZurSmcppRQTtxxx13RFsEBEGQ3uXo0aNekvVAPVeXkCXjm7b1MPpD467anBmZADAup3ZDI0Am
NO6q5VGoMku3cbO8sKJp92RCigAA5s4Iv2SwxWl2xB7LuXZlFpkPADD3BhjHw1HuCl6XXR69nBnO
ac50PJ61CIIg/Z4wQ180l08mG2bwmE7N5eXhTYCqLi9vco7uvHJDNQBAc3V1M4C3iMt27CWHhymS
dFEYdSlxo4NHpEYQBEEQTnjq2RAUmZCstZAN4GGishZcWaFo17gsx+jOi+byRLN3Z2cCOEVcVr8H
er3KUrI9tHMACc2xnA2RpJs81cUprGAzNhBCNoDXiNQIgiAIAgAAZMKkcR/W/2f/kc+0TUmDRzz4
s58+/5vV0ZYN6W9gSAwEQRALakiMQ9qWtGHnXpJ7sagFajemZrisPIIgCIKcPphl9nbPZm4jCIIg
CNJjCIBFQ4uq3Yz2MoIgCIJEF11Di+oGYk2AIAiCIMhpgC/oqf8E0GZu80DQ6ge1MxId5iXpzKth
jNXMM/zq1apPZ12hyBMTwvRO6yLTNP249aBAxmrmJRUsbw1fnrCPV435pO95h4Rfe8Hy1rA60Evb
Y+366hOE+d4zgvQG5b51xVC8zufz1Zc1zCzdAlOfaW/3+dYV937VhBREsK7w1I8xFyEF5ZFreM/l
iSyEFDzT/kxBwLjyXmpnrKZ0ZkNZva+9vb09WIGB2FJVCXXrN+3pSYvCOF6MtUJRvU897euLIDwF
GV4fMtbalL2uvb29vb3d56uvr7g3PawO9NL2yF5f/RK7YaxGrDJ/EATpEXuaGk5brr4oTyRrn5g1
NgJV5d1xB6zfFFntGBRC0gsK0rWf6QUF4SnIQA0LWPt99xUoP7Zs2nQ6W47YsCtfaviifYKfIIZw
z2HEew4rVrOem2c1roISUgRontgtpUlIQr75TbVctcnf/KayrgjfgCEjI07lzOTk5NwFE9eVuxlD
rHV5geqM41uUDUlJ82qULbrXTnXZ2XN5wZ6LGSpzrJ2xmtLcBXVQOTO5VDNcgtbumAsAqkqTeTaP
5djb7liyUWbdOalsnVfjkitoXZb+cSvZ6AvVfs6bl6S11EvtjNWUJs+shMqZycl6aYb+cazdsaiW
xrqJ0358E6zftMdZHsdzzH4mhHe8Ap913PFeUJAUtHYv56FLT7auaMq6L5047aqZx0sM1oda220S
Bmq7vaXLW2vmKRUuP8Pc4FYzWbWeibaN2SeK2ah+eu2sJr48ZdOy7SHHew4pl1JjSdH2ZU3GFTEL
K/SlMUOKAM3FCLCXF8UX4Pz735uW5ecve6AQMkvXLMvP/1XjD88FgNpdjdC4q7YXDhACxet8Pu6p
dNzNWOuKkvU31ft8vgcbS1Zw9fPsgonrfD6fbx3MLOUKoKpSKae95r50Quy5vIii56q/ab1SV+uK
El5ZfVlDVY1T7aqvr3idT3nC8FK7PRcAAFRCkc/nWzdxwbM1Su1ByrG33Ukek8xbYGq5b10xVM4s
gQqfj3uJXeQJUpelfwKWbGl4JRT5fPVl3IT1UrshjVKy5Xjtcard8Sg3NeRlZ4y9/iZYv2mPozxO
55j1TAjveHk56wDgpgreUtfavZyHrmzZBNdPde/k+rKGmaXPNtYFKUrpsYal2pUS9Fy1Hq+i4rrG
FgCAhqXX5TZmhT9a0S+g3FQm3GTW/wlMYYUxaAQPYNHr5IyLShCJzHE5tbsaAaD5tbUwa3oWAOTn
52/fXb17e35+fjQkOuNpaayrW5CbnJw8s7KusYXfQeqzlyYnJyfPrAQA5Z5SVJWcbHhyt+byXNfE
rLEAY7MmKrlaGuuKi6YCIen31ajKxly7F5k9U1w0NbRynNrulMZB5uJ1m0MbfXTpZ1P/eC65uGiq
sZ/Dw368PNS+Z9P6uroFucm5C+rqdP+2SR6nHnNuaajHy1sr7A788M5DZ7ZUNQYYICAk/d6KsobK
hrL6wGrecgS9tN3a0ozsvIalSysB6urq8rIzQmxHf4MCABBCCAHVn+t58Lm6hBAyG9aEFt9hZREh
JGt+TlVFoeZnVhzHqj2t/NRWpjYu1q15tj04lq3laK7ropUhCKyEu9C1M+Tk5NTu2rALZs3K6b0j
g7iSkZ2nWmyKzVRTmtv4oM+nTTxhrGbFioxn2tt9vgcbc7lnz5rLc10NTXv44CS/W2Rk51VWbQEA
aK2pUV3HptqNsJqaMGpXcwVvu0Neh7ZbSw4ss3d5XPrZ1D+hHVu9n730hpfj5YGWxrq8snreG5b5
YWo5Tj3mpaWROusc04RxHjrAWE1VZSBpFEu9eOKC3NLgB8J0pQRtu7WlY7Mm1tXV5d1xR15E5hT0
HQiAcVRV2Tph0rjO7o7P25q0z7ETR0p+cCfziOYGDjN11VwAyFf91txdnp+/rEn/1z1j4C1a/qq5
SjmGLUGENiWomgtzq8x5q+YC8H9CaDxSWVnZHpBi5axUrmrbjUbdXl+WxzfkldXzLcaEeWUfHHlf
TQFQrM5NteUyEqyuPHV6sF5XXlm9ZYtJJL7VW+1WMYrXGeQpXqd8V+a0By7HkEKv3UEeo8yX3vEt
c6vdcnmpy9g/5lb4TGW6HOjidT7PtRvb4HC8HGt3K8TQ5cVrj6y1y2M/yu4tDel4OXWRtRW8TO2v
6ZwP6Tx0EcBydOwHK69sHRfJuSd9vnVleXnWHjO0/QNDlwa4vnz1ZXmQV1a/rljbYpanX1LygzuP
nThi1MKd3R0TJo0jEyaN+/DDj9p8nyudxthZg0c88NBPPIfEqC4hG2Z4jZBoTxxgi3FXSBm1n5qV
PLfKVGBQmU0Jmssnz/7kQvj4gjXbeOSrDTOaxi/JWjuradGuLO9tRzAkBuIMYzWlyVVFQYdIz1R5
kP7NQwtLn/7lr45+dUiblp2SfM4ll1xkfu/ZqwepukR3PG9Y2aNoynZ6JU5zoaXkUArKHJdT+8IL
MGt6pnFTvvE3giBhYpiA7cF3eubJg5xBmM83VT0rb0R7fO258IFZa7OUoM1QpUwT8x7v2fhClGN8
ZUvsZMexZ2NGPqRsSWOPr5xZuihnfhYhs9eCc+BntQkW/Z09Ph8s2jh7/KzozFRDkH4GX7Civb29
R+uK9F95kDMG/d0p5feESeP+Y3RuAwwdNDwU53a/QnOIc284ElnQuY0gCGKBO7ePnTisbUlJPufi
Sy7SAkoaHxLP3AfGwgrGKqItBIIgCHJm4eC6tq65jSMtCIIgCHKasStfxXom6u4z13BGEARBkChB
DH85arxnoiloBEEQBEFOLwTAvKS20bmNuhlBEARBooiuiI3ObQLA+C6Gb/shCIIgyGmBANjX0xYN
31EnIwiCIEhMYHBuMwKMAI8T6llTB12LxERYYaJjA29BOBAEQRAkdAhYQ2KIiiZmhCmrlTBgnp3b
1SVLtufnzPBYe3VJ1tpZTWwbXwmsvLwZCtVFwcJYuTq8XGFTWMGqgGw4TbUhvQltaYETJywbSUsL
tW3kyIMGsQxb3KBBg+SMMz3gHYIgEYIw/j/os7c157ZiNXPNzGQv6rm5fPeMNbO2Px2CBHrM5sLS
UrWY3dsBvKp4vfKwciFnAseP0z17yP79tK0NDHo3gALuCZry1r+kpLC0NHnsWBgyJNp9gSBIX4Bo
4TD0F6xErocZ92jL/Icn53Zz+VKYvhJeW+K5/sKKpt2TCSkyrZhZXZI1vxagiECVIUJU1vxaUFbW
5Otszq1qGr8ka36tFnvKlEtNw2ZsIEUrYe5GNuNVUrQS5s6du3LlSshf1qSsC26iuoQs2Z5fW1sL
YFzFU6nekEmPfTV3BrikQaIEbWkhBw7Q1lbYv19oaxO2hxTuJBICnDgB27cDgAAA27ZZ9ko5OVJK
CqSlyenpLDUVDW4EQVxQXm/W5oiJirnMGPB/ZQYAclDrubl8KTy4MhOaQ6o9s3QbKwWoLiGTdyuK
TXEaGwNBPj0/p4ptK+Tj2qyiglUBKSqavayJMc32NufSPM/KF6J8KYIZjD1QPnn2a82lzmp01pqq
nKwNM9iMDaSkmlUUQnP57LWzmtg2KJ88u3z6ttJMaC5fsn1ZEyvNrC5RnNtqmszqksnlzaigTy/k
wAH60Ud0+3ahtVVobQ2jBOnCCx025uQEyOKo9YWPPw5al7B9u2CpKD1dzsmR0tPliy5iqamnte8Q
BIl1iKZ9RcbUwWauoPm7VYodHYBxsDaLzFeKg9ACSBRWMChR1KHTXsXIBt1ahblV4WjBuTMKAWBc
Tu2GRgCn7DnjMmGXaUvjrtqcGZnGXNoWY5ralUrr585wLhmJJLSlhbS00O3bhe3bhba2wInZoEFy
erqcns4GDwYA45ewvc3dAfYdP05bWwGAfPWV8QttbSVOvnT+VBEHAABSSoqUkyPn5LCMDDSsEeSM
hQBxeLFKcWPLilpmQJiX954zC1duYysBmssnPz1umzfd3Fxe3lhaWgigRIl+wLK/urq6sLAQqkuy
di1irBA0azUgSi6tEtuYdPPu7fa6XFFiQheClsuwRSk5e3z+3CqPjUZCoeb1d4w/0xp3pzXvHt3c
GN/Z6ZalfcRIf0LiwXPOPZmUdHLoWUdHpvoTE00pOmToOAYAcOg/vd6A0ecrX7InAYB46tRZBw8M
PHZ0YHv7yM8/EztOJR06aEwutLUJW7bAli0A0DVgwBeZ2fszx+3PHncauhpB+j0FU66ItgjeYfYl
tUU+KUwxlhnhXz1O3FYHibn1HHQqdea4XVla+NS5VUZPNZQQUjS3ihUCQGFF1QZtZvnKfHbLv174
M8BKq4luzfXAsiVZhEB+fj7UFhHYyGYArCwiK811BSWzdM2syVlkPuQva+JzzDNLF+WQLDJfLbmK
VZSuGa/Y9zj6HGlu/tY0eetW+e23odr5LTY2aBDJzSVZWSQ3l37tayMAACAt2mJ7R/7gA1Zfz+rr
WVOT0byO7+w8v+Hj8xs+ZoMHkyuvpFdeSa+6KtrCIkhf5S9/28i/3Lf6n/uOyVK01/UQCDl7KF0+
5+su+x3iXZCscRk7Pm7Yf3ivYkEzljxkxA9/fP9Lq1+ObmN6zGl+8woJTpB4z8ePf1b+7PjWJrJ/
v2WPopJzc2luLsnOjnY7IgZrbJS5qq6vt3vCWVoaLSqis2aRoUOjLSmC9DH+8reNBVOuKF7+Jgwb
cenVFw05a1B05Tl+9MT7b30ERw5V3neNZddDC0t/tfSZr075AIDr6WFD0y6+JMewqCcjDBgh/WPp
bWWy9cpQh8WRaEAOHBDXrInfsuUC83aWkUFzc+m0af1JJZsanp0tZGfDrbcCV9UbN8r19aSlRdm7
fz978UXpxRehsFC4+24yalS05UWQPsahTvrNay9+OHvIkeMnhw0ZGM2/o4Y+2Xj87394w11Yw+gz
AQAQleW2CeFbGAPNsdyXKaxgrCLaQiDBOX5cfOWVAX/4g3EbS0ujV1xBb7vtjFJIJDtbmD9fAGBf
fim//LL8zju6F6G6WqquJnfdhZY0goTK4MEDjxw/CQBR/7vm+ICAkirGsTZJjPIvhAAhBAhV9DTt
BxoaiXVoS0vC/fcbdfPBc86lTz0Vt369MH/+GaWbjZBRo4T58+PWr6dPPQWXXKJtZy++6L/jDtbY
GG0BEaSPMWzIQHVRzKh9hg0ZGEhEAkAYj4yhObApV8yEUiCEECBE2RLt/kT6OcLmzYn336+9JSXl
5JxauvTdW2fTq6/2XEZ1eXloL973LejVV4vLl9PnntOUNNm/X7rjDrmqKtqiIUifgQEcPHZCZiy6
n4PHTgQYOCbqumHEMEmMguLWJpQSyq1nw5LcCNIbCJs3Jyxbxr+zQYM6f/KTjqVLZcPCIIYAJAGC
kRSO2/V0nwpSEk5gFZqbKy5fThcuZIOUuS3yE0+ghkYQjzBgI4cO4itvRfEzcugg5mlml66gFS+2
GiXD+BdBegWyf7+mm/3p6ScrK/0FBZY0Faxqrv5rrtv8vsIHxu8OrutCC6vWs1yBKTS3KwRoUZG4
Zg3LyuI/5SeeYF98EWHpEKQ/IjP2xZHjfkmO7ueLI8dlFtB+Vmxj7r0mAEA1RR3tt8KQM4X48nL+
xZ+e3vnLX4aykpdNZWZOh6D6uXl3OMtwh5erNyGjRom//a2moaWysmhLhCB9AQajhw2JunN79LAh
gY1ndeEw3TamfFkSQyRJNXRVILiPLtTQzaZck2No1NDucsTozr0F2b9f/OgjAGCDBnU98khA3byy
iBCiRiMBAIDCCqsZnTkdXjGeSvpJppxhPHrKyiLD0dTCjpdUg36sla2qR92USzsflC9V6peSkiAn
s00eAIANwXK59t7QoeIvfqF4uT/4AA1oBAlKtyz/579th77qiO7nP/9t65aDrpYNAPrcL8r/kRlj
jDGZyTIAY8FDYsDcKqbh8cVi7tmbW8UYa1oG83s4ahhB36Pd5Ri+ExIJDFVjS/gvuoilBV7si59j
QQ5EZumN8Jqm56o3rFTPTGU1N+2ss8RcYYxVQVFJtZJgZdFsWKOfzJZc2vmgfCFqLpjBWNMyWPua
i6a1ywPAc7GqnLAuATJ6NLn0Uv6dffjh6TpuCNJXYTK7+LyUKNvOqgzuYhLdu61CFUNZZrIsM/6X
gexNyUeT2PM9Il4gB5VFpyMXAcI4Qaywgs3YEMQ0LaxoGr/Eapf3IOZK5ric2l0ubzs5ysMjtfSg
D9VFWtiBAxHqQwTpz7zf+qXE5Oh+3m/9MpCIypxsYoyNQZnMgDFJkmWJ/5WZzGRJCtrgDarXLkQb
dmURISRrfk6Vas0oTkV+/6ouIZMnT7aVbEoDjh5LWxoHzF5NpSRiuVMbtjBnz6dDXXYfpqNXE2Ej
R/IvVF0bq+cYJohVl5dnVzDG2KJdWbYTs7padVzvWuTBLjfnUrE/Fzbv3p4/3mVVs4DyhN2H6qvP
BONRIkgwGLBL00f5/XJ0P5emjwowc9txMjaVmcwAmCwzmSl/AaQg1nNhBZsxYwbjt7iVS0JSP3Or
WNVc0O5nSuxkxhbtml3eBAAAs9ZwvyL3PRrSNM1aO5vXZfdYmspx8zSavZoAaixnw53atIU4ez7t
ddl9mI5eTQS0t6eEjz6yr62tUWIybY1jwE5KTp8glg1rs5SnK91GVU3YDaB4qqtAHdVeWZQ/91b+
xVqyNdcDy7YXEUJmr+XyVCmCEZI1P2eRctBt4lnk4WvNanXZKw0O++IL9sEH/DsxLFqCIIgjjLF3
d3/uxcD1y1vKsh/4pyyFtMXj593dnweZ1EU0C9pkPYMkyZIsyTKTmMwYk6WgY89qEMfCGXNdPXuu
eR/Qh54bd9XWzs8ihBStVMrJGWfVZo27anPGZQb2ItrLcajX5tVUS7bXZcLi+bTXZfdhevGynomw
tDR/Tg4A0BMn4pcsgePHHZNVmIaBjd8dJzpkToclJdUAkFm6zXFGRGGFcQsvklO78k+uUyhMuZSi
t23bxhhjFTweeZUpp8PMNbM8WsUVhaZ2ee69Y8f8P/85+eorAIDcXDJ6dBQPJYL0CRiDy8edI0ly
0I8sX/3TnU/9j8xC2uLxc/m4c4JMuebvRwPo7z0zxpQJ2wz4XwBgLLD1XF2iu5k3rHT17LmSWbpI
Nbqzx+drs8z4Lc+OEnHZ2Yuo+B5N5bjc8uxeTUPJrlsc5bHUZfdh9opXs3/QNX8+/yK2tAz42c9I
JAZQM0tPc/xtix18OmBffun/4Q+J6tkWHn74dDYYQfoqDLY2fMqizdaGTwO+WEUMi20r6agpPTGv
+OlKYcWiXdxnR4q2L1vj5tmzYLyjFT6wDOZnlVRDZukabtESMllxbtvILF0za20WIVlrZ60pNUSJ
NvoeTeW42Ktmr+bk8mbILF2UMz9L91hWW7d885sOd2F7XXafqqOXFQEAYGlpHQYNnXDffcLmzdEW
KlSMdvDpQK6q8n/ve5pupgsXoumMIMEhcOqrU1dNPF9mLOp/T311CtxX/FKmhRlefSZjM87btXP3
vi8/A1VlD0saMff7c9a+vD7a/Yr0N4zxno3regKA/8ILu2fP/sfBozd/a1q0xYwt5Pp6edUqMLxD
RRcupEVFPSgSQfo/PN7zXSve6ho67MIrJiYOSoiuPKdOdHz8TkP8sSMv3nu1ZddDC0vL//c3pzq/
AkUzk6GDhuVcPElUAldRosaT5OPTNLotQfo90nXXncrIGPD44/TAAQAQP/5YfPDBy8ecKw8fQq+6
KtrSxQTy1q3yn/9sVMwsLU385S/7a/RrBIk4L9579R0r3nznr/+M+qqYBGBYgvzivde47SfqHw2R
G9SCKII67kwopQKuuY30OnJGxqnf/jZuw4b43/+ebxm59zP5Zz87PvSsLzOzWy79n1NnJUVbxiiQ
eLQ94/1/j2puHHTsqHH7J5dd0ZKb59/RCDswpiSCeOUlV40YQ2iBnBkwzbktEkoJAUEQ+JwxBkAJ
EQQh2tIiZwZDhnR/97v+goK43/8+rqaGbxt07GhmfV1mfZ2Uni7n5PgLCiK3hknsQltaxJoa+t57
WpBNje6Cgu7vfvfc1NRzoy0kgiC9hBaeCkCZIibyEJKCIPC1tvluQUDnNnL6YKmpXT/5SdfcuXEb
Nog1NVSdyy20tgqtrXGvvCIPGiTl5Eg5OSwnpz+patrSQrZvF7ZvF7ZvpydOWPbKqan+goLuGTNC
iRqCIEjfhRiMZxAJJUBAoIIWs4pQStF6Rk4/Q4Z0f/e73d/9rvDuu0Jtrfjee0TVWPTECbptW9y2
bQAgDxrEMjK4tjaGiO4rUFUfk5YWu0oGADZokP+yy6T8fOnyy6MtLIIgpwWiRcLQR5ZFvsgnFShj
yjtVhBCBovWMRA3p8sulyy/v+slP7HoaAOiJE7B9u6CG1pDS02HwYCknR05JYWlp8tixMWRrHj9O
9+wh+/fTtjZh+3b46iuhtdUtLWplBDljMYWSVCeIifpuAsr4NAAATg1Doo+mp2lLC21t5XYnNS9j
whWepq1BM69TUiAtDQDk9HQ2eDAA9JbmPn6c7tkDAOSrryjXvvv3C21tbsaxETk1lfsA5PT0/uS0
RxAkZHTVq0wzF/kGSigAGBbsDj4LnS8yYlr32lsOTv6ypmisRV1dQjbMiPBSElq7tL6wb4mKhFwM
o1QRb/tpQs7IkDMyoKAAAMiBA8L27bS5mW7fLuzZY0+smNfupXGD21qFqsXt6HrXSEBTOADS2LFy
To6cmSnl5DCMaYEgCOhaWP8NIDIGwLQYGMrk7SArdwM0l0/eMIOxiuoSsqG6otB7vGfgGqK5fHLW
09WlPVEV4SmbwgoWRp2B6yqsYKwCqkvIBvct3ksOT0I3warAJFVESo6ymmepqf6CAq6qgc+u2r+f
traStja6f7/w8cdBS3BUq0b7O4JIF14op6WxlBQ5PZ2lpaGJjCCIA6Y4zoTrYpHxCNHK/8prV7IU
eM3t5tfWwvg1EFFdEiLNu7cDzOjrdZ3OVvRTmeWMDMjIMI3XHj9OW1tpWxuPiEVbW3kMCdraSoJ5
m8OADRokp6cDABs8WPmSlianpMjp6TE0Co4gSExDCKHqYp7K/6KsxJOU+aJhhAAAk4Ko58ZdtTnj
X5tM5tdCyA7clUVkJc+lx3vOml+reLurS8iS7fm1tbVgKtmUBtR4z1BEQK/cmsaO3dlbtBLmzp27
cuVKvSrdBa+U5FCXUlWIbbflspdskdCxfxxkdm0rAMDcGe5tr2oavyRrfq223d6HVqGD9ry15I1s
xqukaCVA/rKm7w8L/aQNgyFD5IsuCnAG05YW4EGfjBtVLW5H07smBg8OagqT/fvp9u3SddedlmYj
CNKHIbYZXyKTZWDAZKYMSTNgDCRZClbUyrXQxFgmNJdPnl3eXOh9GHluFZuxgSyxxHvellldMrm8
ads4AJi1piona8MMNmMDKalmFYVaGiifPLt8+rbSTKOfHBzKaXZW0HZnbxWQIlC89CXAKgqVOM0W
b7OlLh43elshjwLiVUHbc9lLtkhoaJfadieZ7ShRq0szNQe7c9uLZi9rYizTUpfeh83ls7nQzeWT
n66GwsIAPW+W0FhyEc9SmnnwpXe9nia9iaNalS+6KOIV0dbWhGXLTvGBcwRBEDeI6R8OlWXGAGQl
/I6y1eAEdyR7fP5cJQJ9oBjMbkQr3rMjlnhSXuI02+NGe2p1WLkc2x40BpZj1GqHtgeLY924q5bX
FSBgo7OE5pILH1i2fcOZF1aTfvwxAMQ//rhbWGsEQRCOMV6VEgtDi/TMZMOcsCAzwzLH5axU7raO
MZiDEaV4z14IGKdZqcseN9pTyYFyKSWH2HZXvEStdsxl6cPs8fnKgW6urrY+rug9H1zCzNJFUHTG
va3H53sLBw4MeOKJaMuCIEhMo2td1c1NGWPaWp8AhBBP91DNEjTEYI79eM9GAew/VxaRkirnOM2W
usxxo/Pn3qp9J4SQkiqoLjFvqbbnUoS0lGwRyd52B5md+twax7oqSNu1uix9mFm6aC5vw+zd2e49
H0BC/ZR5YFl+T8/fvob40Ufal7iKimiLgyBIjEK48lVCPqsbzx97TmNjyxHfISBACSGEDkwcfHdJ
8R//b220BUb6E9Ulk3df9v1hWrznfg/96KPEhx4ybjn1yCPyZZdFWy4EQWKLhxaWPrtsRZe/Q9sy
cMDgCy+aSLm9TCkVqECpQCmlFCgu6olEDO5LWDJ+TWm0JTmtENuSKQN+9Sva0hJtuRAEiT24+azC
t1FCKRBCFXgcK4xYhUSQwgrGGIvGGnFRxb7OCT1xIm7ZMpwmhiBIALRJ2pRSCoxJsl+S/ZLkZ7LE
GKOonhGkZzgaymJLS3x5ebRFQxAktmCyLEndkuSXJL8sS3yBbZFS4pe6D/n2c9OZqm7uaEuLIH0Y
sn+/YA7doRH33nvS+vXSTTdFW0YEQWKFzu5Tvq8OAgCfpJ0wYCAAUEKoLEsnu46d6Dx6qvP4iY6j
3VIXQfWMRIN5SUlJSQXLW2vmJXHm1QRb/j1SMMYrjUyNNGC0jISKCmp2fau1n9Yme+oWTS4PgkW2
D2MNxmrmRaJpkSoH6U90+TtPnDp64tTRE6favzp1VJYlAKB8MrcgUEopoYRSAgAeX69CkMhS7ltX
DHXrN2WU+9YVQ/E6X3mB06nYGzdKQgrKfeuKI9QQGiwyx4DHHuNLgnMIKXimvd0XOQEiAmM1pTMb
yup97e3t7e3PBD0Wke3D8I5y7yk/QgqecemEkGr3Ug5yxsGMyPwMovw9K+PUMAJ44iBRpHgibNoT
OMmepoZgpXi6TXsoJzxosFiT9MSJ+CVLeqfyyDIxa2zA/b3Wh2GW3HvyxH7tSF/GHihScWJzJc0A
gHlSzfxdGZ0AK2AGyV1y5i312EvwXu0P/VmUZdLPrHV5geL0ZsBNutwFdVA5M7lU076WNODBRnEs
BwCqSpN5QW4lWwpR3bkmv662IEkAxJaWtbm5PI+XbtHqmjfP5EBWBOSbWM28pIKCAt0f7aUVrv2c
PLMSKmcmJ7v5qyPShxzdiV6wvJUxx5JtLU1KSppXo2ydV+OSK2hdBgl5Mc4lG4+v+VgoLfVSu6P/
3y4PcmZi0dDaGDMPiKGkCVZI8+7tAMr6j03L8kFdgNsjhRXKwpYhBrsKTm+oqB6Wedq0Jn9/yUt/
xrwin3p9VouyghxjrStK1t9U7/PV37S+ZEUrY6oHVXd962l8DzaWrPB4g7OXAwAAlVDk8/nWTVzw
bA1jQUs2uHOnan5d8p8XA1d9IiWla+rE37WMGl1d7fOtg5mlXpyxal1cwqKq5FKuNp5dMHGdz2cs
56YK3i5li5f+CdjPPjfPdkT6EAAYq6mq5BW1t9fcl06I01E2tXSL0uGVM0ugQpXQRZ4gdTHWuqKE
F11f1lAVsGSnY1FfBus3OZ6Z7j0WSB4vZy/SX2EG/Uu1TTLj0aoYC66fM0u3qYqg+un5sOyBKAV9
thLaEtMBS2pW3QE9LDOs7HrtvUHkeqnXGJsBu1UnYUtj3cSssQBjsybWNbos6tHSWFe3IDc5OXlm
pWsajxQXTe1pyfTT4YET/POXv+z+6a9m/iPvsfHjk5NnVvZAQkIKyuuzlyYnG8qxu6O9tMJLP/dW
HxJSUO4rqkpODmBhO7UUAIrXbb43JJXmVFdLY11x0VQgJP2+Gu1BxEvJxUVTe9pjXtqOnBkw/kfT
0Kp61h9pQzo/msuXrMyfNT1iC040l0+2u8v1jbrJ57RNCUVsXYnasUwnjD73rNmvNbuXaatdzTp5
8mSTUC4iea3dXpN7RdbBArfxhxBEiiJjM8apXzOy8xqa9gDsaWrIy7bEZWQ1NTWMAWRk56n2R1iT
btRy7IRSsjruKGzfEri6s1pbGaspzW180Ofr4XQwb+V4aUWgfu7tPmSsZsWKjGfa232+Bxtzrb4E
XnKoPeYmj1NdGdl5lVVbAABaa2pCdi8HOjM9yBmw7ciZAzP/Aa6eDadDiKdG9dPzayOonZvLZ8+v
hblVTcvyoXb+bK5P+Mb8ZU1Ny/IBlPhJ1U/PrwWYW2WK/uToM1fLZFVz9TKdG7NhJc/LmpZp8TId
y7TXriarrYVlTYaIT97d+I6129setCKn3mhalg9Qu/a15tBEigLqYGfplrHX35QHAEBI+r0VN63P
TU7OXX9ThWLNaAZHchUUEEJI+r0V2UuTk02jid7m0GrlTIUteu0AoHwZay/ZXsiPyhpmJicnl6zn
uXxfkQ+kLy/dvn1PR4djvX+fu2ILTC1fBzMVW7ByZsG8OUlJyQHHeg2DwUYJTeXMuq7qGNg98Oke
WmHtZy9jz5HqQ4AMWJ+bxHuguKjA+SgXWHrsLrUuo2yWXF7qIiT93geLK2cmJyUllTRljDW0Qp/c
YOh8Q3WVM5OTk3MXTHzQ+cy01+1UjkPbkTMTy7VBLpiY/cEHHzR+9pGmm0ePGLto4cKK534XtKzq
ElK0Mry7PI9rZMmrbZyxQd/rmFJLDGDSM2ripgeyMzMzzcmsaV2lAoD8ZU3aIpT2Mh1rDyynJbvH
2gP3kktFhscIp/4MSaQI89JLL505ITEAIG7ZsvjNm+3b/Rdd1PnLX0ZbOqRHMFZTmlxV5D7MjCAe
eWhh6RNLnvjyyKf8JwGScXbOpZd+TZ0aRhh/oYrwqdvepm9vWOklmYeCSng0yezx+QCwckP57u0A
oAQPVjdWQ3P5ZIOLlusbl4jLjU9nKZ5bnt1LKOjqElK0fVkT43a2PdizXmaw2oOI5L1257aHTLOx
P72LhPQUedIkx+20V+cWIL2PizGNID1Ac9XoY8+KT0YJk9GzBUk8TgnWzEQeSpgUrQTIGZcFmaVr
luUDrJw/vxbylymhnTNLF83lSbPm12pTxLPH5wOsLCJFK3kpWvjkpmX5sLKoaGW+Ml+Nl6lUFFDD
ZY/Ph9r5WVwcMAZ7tpZpqz1/7q16i6xxju3ZPddub7ux64wVuW0HgJVFWfNrwTi73qNISE+Rc3Ic
t9MTJ4xrkiB9Dr6MTNhzHRDEGfMkMHLBpHEfvP9+096PtH2jho9duGhhxW+DO7eR2Ka6hBStNPrp
o82Z5twGgITvfU9oa7Nv73jkEQljPyMIAvDQwtIlS57Yf3gPAF9yGzLPzrn00kspf/DTTWeihJ2M
tsBID1Ht6dr56MGOItLFFztut0eDRhDkTEabhahtUceecfikv8FXKQk64o70LnJ+vuN2ezRoBEEQ
AF0dmyJTMcu/CIL0DOnCCx234+wwBEEMMLCpXsp/G4NlAHNYmxtBkHAYMsSf4bDIB84OQxDEjlH1
UttWVMwIEklc528Hi2qFIMiZhDXoBeVublkPM8kYamgEiRyym387WExoBEHOMEzKVwRQ42CYFveM
tpAI0l9wHX5G6xlBECtMWxdMj1jFlL9eIlaZAi6E9NaOnk8P8NAXXvsxyw1QXeIQfMLSEGMa5AzG
ZfjZS0xoBEHOWIwzt72bzNUlfAFKxljTsu1FXpVQc/nkDTMUN3rV+N3NDoEcYhNDe/UQFBX6smKM
MYeGGNNEQ2Z8OIgZXIefcf42giBWrC9WheTZ5mtBAwBA5rgc+2LOzjS/tjZHXyqzNFaWsvJGzrg+
JW5fCOp8BuE2/EzQv40gCDirXUU9K6uFASGMkOARMTJLty3alUXI5LlzJ2+Y4XXNyMZdtc47NpSY
18NWghzbQz7rW3Rns7bNnsuE4kgv0etSXetKRksoaa0cvvwWX7XbGFw5sG1qSWOs3TEWtWOBdpnt
Ejq2ggd1jumIzmcUrsPPuHYYgiAcm4amAEblDIpyDqafm8uXQBVja268cRZ49m27sRJmMMaqcuY/
Xc3Lnr12VhNjTbPW6iGfLVuqN6xUg1Bt00Ijr53VxBhbtMs5qDN3pK+EGYw1LYO1r6mu9ZVFs2GN
7rW218WT8ercgiu7VedUO5uxQdGazeWzdy1SHOOOkS7tMtsldGyFJjOuFxYbuL39jNYzgiAuUFBX
2yZEWW7bQ67qp+fnzCgEyCwsLJ0xd+UGb/rZ4BI3oQeHAgCAxl21OeMyATLH5dTuanTeUljBZmww
mZSNu2pr52cRQopWKmnc69LLAYC5VSbr315XBLG0NHP6rO1FhBBSBFUB9KhFZkcJLa1AYg7H4Wec
HYYgiI7ZgKaWHZ5felZ1cghjnJnTZ7Hdmne63C22Y/b4/O27mwGad2/XQz5btlSXl2dXMMbYol16
aGQvQZ1VmV3Hy+119R7VT8/PqfK4KHag3ghcSTX6t2MBGVf3RBDEHabqYA01YhW3m9V/gtnQhRVN
y7jdR7LWzmriyiX4VOHM0gdhtmKobxinRS/Whkj5l8zSNbPWZhGStXaWFvLZuiUb1mYpoaK10Mhr
xi8JHtR5ZREhJGt+ziJ77aqM1rocx56NGfnob9A09pYWzpirBqIO1HVGme0SOrYCdAfDBkD/dizg
Fj4SZ4chCMKxaGgyYdK4999/v+nz/2h28+jh6YseWfT8b1ZHW9SIU11CNsyIoeHY6hKyZLwSjdlN
tliTuUecgfGejQx46CG7N7vrppu6S0qiLRqCIFHjoYWlSx5f8sVh5UmdAMk65+JLL71UX5Yk2hL2
Nm5WZhQpfGAZzOdeAOfh5xiUGQkfyWn4GWeHIQhiRFPHYrQlOW0UVjBWEW0hLGSWbmOlfUxmJGzk
SZPsG8WPPuqMtmAIgsQgtOdFIEhMwVjNvKSkpKR5NWHFRe1h9gDIF13kuJ3i/G0EQWygekb6Ca2a
l3hPU0NPCuph9oD4nTQ0wcVJEASxgeoZ6cNwO5eTW7KplTHGakpzF9QBAFTOTC7VLODW5QVaynk1
TDWRk5IKCgqMm23Z9ZQ68zbLmy0bC5a3epFzycaN9r1/fPzxpHk10e5LBEFiC1TPSF+FsZqqSgAo
Xufz1ZflFT94bzohhBSU+9YVA99eXkAIT/nsgjqA4nXKLtCT1dVBWX17e3t7+zMFTtkJKSj31Zfl
gXN2KF5XX5YHULd+U6uLM9wo5/dmjbYnuHbgwGj3JYIgMQeqZ6SvourIypnJybkLINu+aOaePVxl
GlLOrLQmKn7w3rHOFajZgzA2ayIA1DW2eJBzfLlDgvMHD452XyIIEnOEq571WA6hvfMTiXjPEY8S
bQ9fYSs8ULznHlaNL02FCWM1pckzG8rqfb51xVC3ILfUOpmr5dlc1b+9pXRmpcH89YQhOwAANDRt
cRqW5mPVeQ6PB45yvnHUwVa+6sRn0e5OBEFii/DUc3P5bHU5yqoQQmJEKN5zxKNE28NXWF5BDhzv
2Tt2ZRzdmNB9nYzsPKhbkJvMbeLiIu7KJqSgvL4sDypnzqzMK/sR35iRnQeq9Vw5Mzlp6o/vUixp
0xC1Y3ZC0q+/KQ+gbsFM+6h25czcBXUA3LXuMuvbJOfWjIvtLZn0ztNJSfOi3Z8IgsQQ4b333Lir
Vo3uUDhjbtGG6opCDzqm+bW1OTO2KT8KS0uD54ghIhHvuXn3doAZ0W5Jv4GQ9Ptq2u9z3GXb45T0
124L43nJzlhNNQDkldVvvjddXQSXkIJn2tufCSgnbW6GH7xnqXHp3LlPzp8f7R5FECSGCM96zh6f
r4TEaC5fstJrrp7He7a6tNXNjpGSJ0+2+9/tJSte66KVpt/GAr3Fe7ZJaNtgj8EcoBxTLGdLlGiH
WNfI6YX7qysBoG6B2QEeHDkzkw0aZNlIW1q8l4AgyJlAeOo5s3SREsxhNszqsZ/ZJd6zHrlZ86U3
LdtuDF7Z/Nra2vxlTW4Bn2at4TGPNf+7UyTpJdxrrTm37Z5zL/Ge7RJq0ai02u0xmB3LcYjlbI4S
bY91jZxuuJWs8kyBpzCsOva3n0VUzwiCmAl3alhhhaIgpoPnwIve4z1bIjdrvvTM0m2abtu+ZHLW
/Nq5i1w1lN0d7R5JuqfYJSysaOIRtIo8exfALZazuX/ssa6RPobz4tu4dhiCIAbCfrFKmeXU/Npa
mDXdm4LzHu/ZErnZ4EuvrlZz1eYsCm1iWpBI0j3qRruE1SVZuxYxo11u7Dy3GMxeYjnbY10jfQzm
tPg2rh2GIIiRsNWzEqtYD0McyXjPlsjNBl/67mw1F6wsKinfvR1WFnl+ycopkvSinPlZhMxey2uv
cggSFTTes11CACisqIIiLQ600hBLDGancgLFcuYS2mNdI30Mx+FnYXvPHhERBOlfKPGeGz//UNvU
f+M9I1HmDI/3bCT+8cfj3jPN35ZSUzteeinaciEIcrqxxHsGgOxzLtHjPSMIcjqxDz8LBw7A8ePR
lgtBkFgB1TOCRAHH4Wfa2hp6SQiC9E9QPSNIFHB++3nHjmjLhSBIrIDqGUGig/3tZ1ycBEEQDbt6
ZgAMQlkFCUGQMLAPP6N6RhBEw6CelVeNuX5GEKR3kfOty/Tg7DAEQTQoV8aKapZlWZYZQ+sZQXod
lpYmpaRYNuLsMARBOBQYA0Uvy7Isy5LEZCZ7Us/N5ZON64GoMSBCWGtSD+5ArEEfgq40EjhNSDGh
Ix5AGkE8IV18sWULzg5DEISjOLdlSfL7Jb9f8nf7ZVmWJTlYxuoSkjXfEIGquXw2X8SSrYGlXhW0
MdoEa5oBzfr2oFGQA6cJKSZ0xANII4gnZNvrVTj8jCAIh3Kvdne339/d3d3V3d3V7U09W1Ra82tr
c5QVJjPHkbWvhRisobqElDQWFmL8JeSMQsbZYQiCuECZzJjMujq7Oju7ujo7Ozu7JL8kSVKI5Zhj
OevRlrywssgU1snianaMeezgjnaMghw8krQ13jOCnD7sw884OwxBEA6VmSwzubOzs7Ozs6Ojs6Oj
wy9Jfn+o6rknzK0yGeIWu9wx5rHdHe0YBdlDJGlrvGcEOa3Yh5+Fjz+OtlAIgkQfxXru7Ojq7Ojs
7OjsPNXJR6FDLMccy9lrBGiNoIPNQWMzOUZB9hJJOiLxnhEkTOzDzxhZEkEQAKAyYzJjXZ1dXZ3d
XZ1dnV1dkiSH7tzOnD5rOw94DNUbtnuNAB1BvERBdowkHZF4zwgSJvbhZ4wsiSAI8KlhwJjf7/f7
/d1+v7/bz2RZloO+WGWNVaxHaV4yfo3XCND2gMf2jY4xj+0ZLVGQvUeSNsV7xnerokvNvCSdeTWM
8Q3zanr2In6kyukN7MPPtDnEiZW9Jxurmdc7nWYsWT06+gGyb+nlNvZuRZYqHHtVb3HSvBrGPPZ8
GMIzVjMvqWB5a8xdCDFL710FQSFjM8774P33//HmelmWJUmWJenSi7++cNHC9X/ZGO1uQfobQeM9
19S0Tp3aUppcVeQrz9iyBaZOHQtb+M8CQnpSNWM1ESmnNwSIW7YsfvNm45aTlZUsLS0WxO5Ju3pY
Tu+V3EtNCFsGxmpKk5dm12++Lz1kAUIVntXMS55ZmVdWX3Nfei81NoLS9iRX7LdLwzXeMwEAAoJA
KaWCQAVBIJTQWO0FpH9TUKDfMtILCtL703m4p6nBZY/D28/a2mHuuWIFlDAyTMwaezqq2dPUkHfH
HbB+U2tUPEnhHYvYP4K9IyEllBBC4uLj4+Pj4uPj4uLjBIFSQYh2cxFEp6o0OSkpqWC5orRY6/KC
JL7B9RajpklKmlfjvRzdxViwnN+/jGk0X+K8eUE8ipZyGKspzV1QB5Uzk0u1XJqAi49eaMn+1D3L
a2y5DJ5M5ctmebNBHr1dQeWx9I9esrJxnrk6o8PZVJdju0xHQXGl1sxLSppXw1qXL7eXHB5ux8Jy
TINKaDk35tU4l+PYroIC3R/tlouLmZw8s9Isti4wqylNnlkJlTOTkx173mPJHmlprJs47cc3wfpN
ThMQvfSq4zH1ctYFvgrm1TC387CvXwVhQwmhhNABA+IHJAwYkDAgITFBEAVRRPWMxA6VUOTz+dZN
XPBsDWOMta4oWX9Tvc/ne7CxZEWrs1ZoXVGyYOI6n89XX9ZQpV4zLuXU37S+ZAW/fVRVFq/z+drb
29tr7ksnxFLXHpha7ltXrJRTVOWukyzlEFJQ7ltXDMXrVPcXYzXPcgF96w7f80tfRoaxhEXTzi6w
5VJ/AihigLqlEop8vvoyN5PIpV16/2xR2zWzBCp8vvb2Z8zVAbjUZW+XBUIKiorrGlsAABqWXpfb
mGUvOTxM8qjHwn5Mg0poOsfqyxqW8jMh+DkGADdV8JLXwcxSlzOqdcXShrJ6n09tr73tBgmde149
n03y2Ev2AmOtTQ152Rljr3fRz0F6Vb0K7MfUy1kX+CqAmaUBz8M+fBWEDaWUUEq4bh6QkJCQMEAU
REEUI1gHgvSM4qKpxp8tjXV1C3KTk5NnVip3CTstjXXFRVOBkPT7ap5Rrxl7OROzxgKMzZpY19ii
XHtFVcnJBhvFsS5LOVacynFKU5+9NDmZWz+HzPO3Q5wdVlw0VW+FN3mc+2fd5nuDDSgEqctORnZe
w9KllQB1dXV52RneMoXYdh3rMQ23D72cY3Z3tL12dUtPscsTVsl7Nq2vq1uQm5y7oK4ukH87yBXn
5ZiGcRVotXs4D11kjtWrIDwon8gcFx8XHx8/YEB8/IB4QUDrGYllMrLz1Kfg9mdcHlczsvMqq7YA
ALTW1LjchjKy8xqa9vDhuOwMAMZqVqzIeKa93ed7sDGXW8Ze6rLiVI5hb02N6rJrfNCnWD+HzcPP
9MQJsn+/PZf+2z7WpbbCmzxe+scdp7qsEqqMzZpYV1eXd8cdeadjfNV6TL1I6NSucI67U+2GLT1t
l0WesEpuaazLK6vnZ12ds3/bS+1ejmkYV0FQ+u5VECbjJ2R9dfLoe//Z9O6Hf//nB9Vvv1+1d3/r
nfd8hyFIpKmsrGwPiOEqLV5numiL1ynfi7kvKo9vziurV+4atqLUrHll9cHKySur97W3txvKBShe
p5RjqOuDI2sdy7G1wqEcvXVayYY7UtLXvtOdn2/8HK+udsylipyXBwBQvFYXCYrXuXSFY7tc+8fn
eCzMW0x1WSS01l5flgd5ZfXrivV+djvKykZjoyxSuZwqrsfUk4S+dWV5eZZ2BT7HfIoz0/jXZ8il
166I5nC8HHrV6bR3lcepZIeOsvdY8TrT11B6Vandfkw9nnWBrwK49I5vuRzxvn4VBKbkB3e2Hdn7
n6a3tc/JjuMTJo0j4ydkvf/++x831TLGeCjJsWdf8Mgji16sWAMIElGCvlh1JjPg/vtFQzyMztmz
/d/5TtBcp/Odk9h/vwU5M+nrV4Hri1X8hxbumckyQOyt3YAg/R3L8mFe1g4zTPqN8JTR6NaFIN7p
x1eByL2O/m4/Y4wxYIzJMmPBVw1DECSSyBdeCOvXaz/Fjz7qDJaFkIJn2tufOS3inc66EMQ7/fgq
oNynzQNKdnZ2dXZ2cyP6dAmAIAgAgHSh9e3n2FndE0GQ0w/lyrijo6Ozg4d87pIkSZbQekaQ08uQ
IX7z28+ktTXcshAE6fNQWWayzE6d6uzo6Ozs6Ors6uKD0NEWDEHOOCzDzxQjSyLIGQxlssxkubOj
q6uzq7uru7vbL0uM4dQPBDntyGb/NkXrGUHOYCifGtbd3d3t9/slSZJkviXagiFnLpbgetGtPXDo
QyVLhELOWYafxY8+6nngxVgOphkGQZvT82MRsz3mJTBl7NBLwWHPKCgDYAxkWZm2HW15kDMdxmpK
Zzaoax14X7Cpt2onpOAZVQw+b9O+wpExTY8YMsR/0UXGDULL2AC1u8ljka3nC1yfBjwqm6DNCe9Y
GGuP2R6zr/8ckbOuN9Q8Y61QVK8u3uKrLwJ1vfpIlR+OzDH+QGNHCShJlYCSgiAoMayiLRhyJnOa
guvFYO2Sefj5DJodFt2ggbEfsrBPtZ2Q9N4NDttfA1OaoYQQSogaTVKMi4ujlFKK6hmJAvbgeuAS
0tEY9M1eiCXom1suh+CDHkL7uVXnFHLOHpLP2RetBel79uc/N25z/HiiAAA5wklEQVR/+6c/jZQ/
MKSAiW4yewmv6eV4GeP4gUtIvjBCKHo8Fg5nnVNAwDDCmNpDFtoCJnoKQ+kgZMDAlB7PcNMxnVfj
peftJasBHJMKlreqoyshnKI979WIBKb0KG10oYRSQmlCYkJC4oCEhAEJCfGCQCml0RYMOROxB9ez
BOnb4xT0zaUQPeibY66AwQddQ/u5y+xUuykkn7b0v0PgOS3wYuOxY8bt137z/wWu3TMhB0y0yzwV
9gQNr+kWgtPc86YwgjVOIfnCC6Ho5VgEPOuMxyWMMKb2kIXWlkKAMJSBj0XAwJRaS53PcGMfmgOt
Bup5lyvuOnodz/LgvWMhIzsvr6w+hBUuI9CrEQlMGZmrqpehnMSBCYmJCQmJAwYkDBAEAdUzEjM4
hggML+ibJVfYwQe9YArJR0j69Tc1zExOTk6eCeuc7w5akL43jh7VNooffR5JeUIJmOgks5fwms5p
jD3vEkbQQoRCKDpIGF4uLz1mDVno1FLHMJReAqR6abv9DLf3oT2Eoktd7tcOIQU/Kmuo2gJbnl0w
8cGQgj9GoFed00QsMGUMocR7TjRZz4IgoHpGYoRAIQKDEyhXz0oOBe3pns83c0yjBelrNhvQ5ww8
FTE5QgmY6CSzx1CewUsOEEZQDckXoRCKIeIeENBTuywhC70FTPTYq2G03bEPXUMoGno++HUx9t4H
YWbyzIayH4Xz6NOjXrXL3NPAlDHLuAuyjp9o/2f939/98O/v/mfTe//5xxdtn971/e9FO/Yg0g8J
JaAkgFOQPsegb4HLKV7nmssWUDJIaD976MOAaUwh+Qw5nSXXgvSVDc0zRpa8Py2tJ4EX28MKmMix
y+wlvKZ7GkPPG5uiRUi0hBoMFkIxWJRJ12MR6JwxHavQwpgGDlkIwAMm3uEehtJDgFSXwJTBznBb
HwLkldXb226/LgJccfVlefrpZGhOSMcivF5tj1BgyhghWEDJ5n/xVzcIwLlp2YseWfTC8pcAQSLK
aQsoGWuhDxmrKU1eml2/+b504kW2Qddfr33vuu667vnzY19m5IyCsZrS65p+1Me9xzFCkICSKtrU
vWjLiyDhEoOhDwkp+FEZLMhN5pNv3YafNYxvP9OWSA+L947MyBkCnxednLw0uwJ1c++iBJSU/BJf
+QAIyExmsXFTQ5AwiM3Qh+n31bTf5zWxlJMjfvQR/y62tASNLBkLMiNnCLF5ffVLlEU9u7q6ujq7
urq6uru6ZUmWJAyJgSBRQ540yfiTqqoaQZAzBzVi1cmOU6c6O051dJzq8EuSJEnRFgxBzlxk89Ke
BENXIciZB+XhI0+eOHny5MlTJztOneqQuiW/3x9twRDkjKb7ssu07xi6CkHOQKgsybIsnzrZ0XGy
49Spjo5TnWg9I0jUMS6+Ha3ZYQiCRBHKmMxk1tnZ2dnZ1dXZ1dnZJUuSjGPPSJ+ir4cRtNfODMPP
YjD1fBpCcGJAwP5B4CslUkcZz5aIQHkcSX+33++X/H5J8kuMMVnGPkX6El6C6wW+MUU2jGCojwv2
2uXMTDZokPYzwOyw3gvBGWthFmMtIGCsyeMF+5XSG0e5t8+W6Pb8aaud8necedATAAACAIAvsyH9
kNMZTi4SdRnffg42O6x3gmDGWgA+lAdbEQsyn67aKX/XWRQEQRRFURBFkVCMWIVEDXtIPmaKFecc
Ks49jKASus57ODlLwDtL6ENHCS14DI8YoHZel3H4efdHzrPDLEEw1WB/gQILuoU19NIKCDEgoJdA
hx7DLIbdq5YQikFrDxSQ1HCmhRGK0Yu9peayhmt0LjmYD9neh9YxlNCPckjtCnA1mVrKauZpl2qw
YxrGmeDlHLP3qnY1GQOSeryT2O8bYUAJJZSQ+AHx2kcQBEEQwi4RQcLGKSSfKQRewFBxCvaAkq1O
gfNcsAS8swYEtEtoLyJokL5W16vaFPZRnpik7Rj13jutQYIhGoP9BQmdCbawhl5a4dQ/QQICegx0
CAHCLDqE+3QNOul0RllDKAbtjS3GQJmmgKQA+hcIKo+X4KcBut0YrlEP5WkK8miSx6Xtpv6x+5zD
OMqhtCvQ1bQFppbXl+Xxlu5pasgrq7h3rJdjGvb1Ffgcs/eqY0BSL3cSx0CiYUCpGu85MXFAQkJC
QsIAURQEEdUzEgWcgsc5hsALL6CkFyyBIK2B6ryEt3PCY/BKk8xyZvdJ9RXHFHLqv8ePe29FsNCZ
YTvDQw4I6CKPJZdjmMWgPeYxFKPl/PHYG2GcP8GDaXrBKVxjeMFPPR4dl7ZHoF3Brqb0+x4srly6
Yo+5pWHI7KV/wjvH7L0RHG8hU4NjjPecyKM+o/WMRAun4HGBQuAFxykonvdwcvZAdYHD29nzBwjS
57p0riHs4+c0Sds8JfzFSXoaOrMnYRbDzRVIZvegk47lWM6fEHqD7Wm2pnEadwxFHk/YwjW6yxxo
HDQ0eSJ9lG3lO4V9nPqjMliQa25pGDKHd4aH16vBeyzUAJduKOp54MDEhIEJCYkJCYkDBLSekaiR
AetzeQyGyuKiAkIISb/3weLKmclJSUklTRljYYs93IVLDIzKmcnJybl6uHjN8E2uAvtlbyxki5K9
dAtMLV8HM5Wn4MqZ161oZWMtEjo2g9fVPGf2qH+A0oqKm9bnJifnrr9JDSTQ1vaFLJsWGMjOazDK
TEj6ebecr+09umOHvSL72LO9Kxxr94Kxx6Yaet7QP2PvrchempzsNhLveGgISQ+cy01myxH0Wo7h
/El3ORZOVM5MTp7z+D8vemhuOiHcop2ZnJxcsh7U5gSWp8XpWHic9EtIwY/K8or1U9cqs6M8Tn1o
6h+XwxHaUXZsV7hXEyPp9z1YDOaWBjmmLmdCyGe4h169+WZbK+zH3Vk8W0s9XnSmcsZdkPn+++9/
+Mm7lBJCKCHk/NHjFj3yyKoVGFASiTARCSgpy/LhwwdGjhwVIE0sBEDs6uo8dsw3YkRa0L2SJHV0
nBw0aIg9GW1uTvzBDwBAio8/VPiNzpkzhw9PiVaLekJHxylBoHFxA6ItiCf4+TP9wC8uOt7udgTD
L9lDHEYM13hG4RZQUiSEEELi4+P4FyB84jaeE0gs0tFx6vDhA35/d4A06pM7VCZDsIlgvYjPd2jE
iNSge0+dOnH48AEA4qie+dvPh88ZzSj1xYsJct9bzk+WJZ/v0JEjB0ePPq9PqGft/DlyT/r3Vt8b
4rBj4JJbV1y3NLticwClq9aeV1a/GXXzGY6inkVRBAKEuxcoIXhaIDFJQkJiUtLwQ4f2B0jDA96V
nTwxcOAgtzQnA+7tOd3dXZRSQRCD7k1MHDR06LBjx3yuRV1++YjNmwHAnzCgs6Oj92TuJSgVhg9P
/eqrY9EWRCfw0efnz9PdXe3th0eKcRGsl5D0+2pqgqXBcI2IgvJ+syBQQRCo+sYzamekT8OYfPTo
kfD2RgSf71By8ojw9lowBpckBw/2qthnAh6PfkjHCEF6A0p0QPtXWTwMQfogfr//wIF9jMlh7I2Q
AN0AILoYXoH32pGNsTH27es9sc8EPB79UI8RgvQGqvMN7WWkT9HV1Xn48AHGmN/ffdZZw886K5lv
P378qN/fzRjr7u7y+Q4BgCAIQ4cG33vy5FcHD34JAKmpZ7e3HwYgktQ9dGjykCFJxnolyf/f/zYn
Jg4cNepcN9l8vkPJySND3dvV1Xn06BFJkrq7u4YOTTrrrGF8O0tLk1JShLY2cLGeu7u7jxxpE8U4
QqC7u3vYsJFxcfHGYn2+Q/Hx8X6/xJgsCMLRo0dGjTo3MTG4b1+W5cOH2ygllNLOzs6zzhqWmDjQ
UG/X0aNHBEGUJP/x40e7u7uysiZp42J+f/fBg/v5bJb4eH3IubOzg09ZHz363CNHDnL5zzrL2s+O
eMnLZw7KskwIkST/8OEp8fEJXs4N70cQQU4PYs+LQJDTjN/v9/kOpaaOoZT6/d2ffto4ePAQPpQ7
ZMhZAHD06BHGmN05GWDvwIGDR4xI279/74kTx9PSzgEAWZY++6wFgPBcHFmWZVkKMDfN7+9mTI6L
iwtpryT5jx49MnJkGgCRJP9//9sUFxc/cOBgZe/FFwubNwMAaWuzZ9y3b8/o0edxFdjd3bVv36dj
xqSLoggAjMlffPHfMWPGckPw4MH9jEFa2jlGfekGY2zfvj1JScO58uvsPPX553vS08drK/7u37/3
7LPPo1QAgGHDUvbube3u7uIly7L0+eetKSlnDxo0GAA6OzsOH1YkHzAgYdiwkfv37/X5DqekjCaE
SpL/008bBw4cEnS5BQ952b59nyYlDeeHrLOz4/PP95x3XiZvfuBzw+MRRJDTBq6tjfQ9KP3yFxP+
93VCAEAU40QxrqurM0B6p6WGm+fp6+8yQ8l0+PBU9btw1lnDfD6TwRoXF5+efsHZZ7e6rXXMDS+3
11vdzLLu7q7hw1P4oJIgiIMHn2UcH9WGn+mxY2BeO+zQoQODBg3R1G1cXPygQUMOH1amzp06dZKQ
vT8dMZKLOmjQ4BMnjg0cONhtzpqRo0ePyDLTDFNCqCiKhhe1WWfnKc1WppSmpIzW8ra3HxEEketm
ABgwIMGi7SilI0eOIoTy9gpCkCPoMe/x40cZk7XHqQEDEhITB7a3H/ZYcuBjFPv0xQhaNvkjEBc1
UuVEHVTPSN+D0nPKD+tvTBFCZHlbSMEiCcl8pr3dvqaPJRjMgAEJnZ3WydKUUkqd4+VJkl+W5bi4
eMcAl9peu4QJCQO5GcqJjx/A6+U33K0XXqjtEj7+2Jjxq6+OWtzUiYmDjh9vNPTGOeYFyb1e8idO
HDNOb46PH3D++dmG4VgyePBZn33W0t5+WJIk3gTtKeHkya+MeRmrebvinX+Z+9D4egghIHt+ZyxA
3hMnjickJBoTx8XFd3ScspTAWLPb2RLgGMU+gYNFuhE7Sp3PWu/hSlsRLCfqoHpG+gX7PuuNEG+U
CowxWfY6jyxSE7YpFZRK9zQ1AJxKS5NSlNVIjJElZVmWJMkyg0kURfmrE7vjKAAMHDhYFONOnlTu
18eO+bzPRvb7pcBzo9LSxvA3plpbd3355WdG81eS/CYDfU9T706U12X283Fl7cMYc/Dk+w67nS39
bcK2l8Up+2JAyTMDVM9IDDEvqWB5a828pKR5Nax1+XKX8Ij/eruiwuy2+vxX33nOEuLtyL9+Zw/o
xsPbVdS7GwrHPjaGpZNlidriq3LPGV/s3hhcb9ro0Q88sG5rXLxjgMvRo0f/ZuuBuLi37YHzNnxp
lUeWJUEQjKHrPr/4Yr5L+NffNQm5bJZ5yH7/e9u3bN/WvXpmcmkNk+Pi4js6yDlXjP64vKio6IZv
rVE8vUED8L3xzDP33PNS4ECQC8d8+847L/nGN6bNmzd/Q11LV1cHT7P218/OmfOEMRDkAdj50NW/
0g+ZuZ8dcQwEed/VV1dUvGIMBFlRUXH11VfzAIXVjy/5yU9eeeyxzLFjM2e9fCwp6cOy7AnZ2UvN
gSDrq5fXOIYjHD162tYDfn6MvARMDC/MoocAl47hLK0hJu2HzGOwSEuusIIzhhzy0i3UqRfs8tj7
MCIBHGMNVM9IDFFUrASOaVh6XW5jlmN4RID/d2VJYbEp3zk/eeuXxhBvhNTXvp6mBHSbVfrGya8A
QAvX2Pzya0e0WwMB4dQJtZx9H7/Ragxm19Fx0uI6Zqy14pnGp+qP+Mwh52aWwNPb659//h7nAJf1
Zd+Z/JMri7IdA+ftXfaqz2ygd3Z2JCQMNIauS1OHn7t3HzQGzhs0aGhHx0lz3pzLv5PPc329o+PU
qRODBrEv/vX0ZxdWvf/+UmOIwG/VH/nii4eavu8cCHL6wzdNO/+/lkCQf1z2MZf58JLKphMAADdV
rLvhyIy7/1Ty5bP/eO+rY7zkc+9Z8NwTlxkDQeYMzPnlWz9R/a77Pn6jxS1oIGPs1KmTsuwcCPKa
P7xVcluGMRDkBTDhl2/9kgconLX09m+MbrUEgvzh2YONgRcF4dLCh2/VzpaTJ09ox2L79tL6x/7u
MWCiSzhCL7kCBbjc4xrO0hRi0l6452CRjrlCCM4YXshLx9CiXu4Jdnmc+jAyARxjDVTPSAyRkZ3X
sHRpJUBdXZ0hhEzIIfkGDPj6lLlpTw8fnpw8898XDGPKsK4SInDk1sb2rg4eMGqkvhcA9naBvOrm
S3gwu9burvb2I5Y1rru7W0ZO+e4k0RI8qvgvm+Ym+/0DBiQ4ysPOL5le8NEvVn/pGDhv067Pj3We
6u5WnMN+f/fJk18NG2ZysWpvPycSkpO4XwuBN2JE6rFj7dpMcknyf/XV0eHDFWWfkJAYFxf/+ef0
6wt/c3PG7n37hHOvPBuYzGt/++FbVq36cF9Sh2MovaQkOTH50r+t/67a8+zw4T0NmzZzmf/64Z4D
RygRJmlB+qhI5AEDeZC+4ZnDTyWM+J//7uUlHz1K4gaKoN809/oOHHALGnjo0P7PP285fHiPYyDI
c88GGJrkFghy6FAWNzB3xv9r1/rH56NSl2lUOz4+oauLEEoA4KuvjgqCwHvj8ctGPfTQS89tbvAc
MNExHKGXXEEDXIIlnKVTiMneI3iYxR6EvAz5WnYq2dqHkQrgGGugekZiiLFZE+vq6vLuuCPPJQZv
V1dHe/vhri4Yc7kSEsPnO9Td3eXz0UEpiaCGeIuPf2fDo82L/lP3ySd/vSFBkI1ac0/Tv88dM3xI
8t69rfv3U8G0d0w8jPjV61uam3ft3v3ABQe/HDXqnISEgUYBKB07cNChQ8dEy4id2H44KWm4W7t8
vsN5U650C5y3ceMPctLOOX786KFD+9vavjh48MvRo8/VlqcmAonzHTq8q+FIZvqxMaMPThjX/Z9m
LdBhXFz8qFHnHj7cdvjwgSNHDqpLWyv1Hn/r9SYxLjNTevep9ztHnTNkiDwsOym+7Ute+9wVzxcW
Fr7wQrGjHSMI8OELDeLx9i+++OzAgX0HDnwxaNCYMWOnc5n//e+HUzvo//zo4viD9JzLR8UdoV/t
PykNHMQfsRo/jztbbh0y55LRX35+4MA+QuD4FyfE4+0dr295vbOjvX14SnbuK61NPGjgpe2Hu7u7
2tsPc994fPwASmlc3Ch7IMhJBXuP7Tnc5TvB7vgaf3aL89GBIxLi1KNPCHy0uoGePPFFQ/vQH+Wf
3bYvIYGdPHiKH3d+vAYMSBgyhF1898QB+/dKdXVvxw/gvfGnho+ee64ixLCY4QUx9Bzg0rDFFmIy
NLwEUQ0pOGOEQl6G18/WPoxUAMeYY8KkcSc7jv+n6W3t03Zkb8kP7mQIEmkqKyvbA+KrL8uDvLL6
dcWQV1ZvvNi0ELDtjhv17cXrlJ/G6zSv7IMja8vy8vRs1su4eJ3Pt2/f5x+9szpPzVJvKNwkJM+a
x4ubMgVgwID4m29+wk3CI0eO7Nr1cXt7O/chmhsbpC5ju0788pfd+fnd+fnPnX02zxOoJ33rigF+
9NzfDhz4i0GYdfPSz7/77qe5XzBA7a6dbMj1wZG1xVC8TnGN8r8+QxqThNaj46Htmgh5ZfXmXNq5
Ya3deFi1rlYz8eOlCmmW5/AHT5XePMPQLoe2u5yuRnm85QrYLnPnm06Y+rI840+vh8zc0sDnmKM8
bljksecy9/yUKcH6x/GqdCzZoQ+NWS+941tO5cQsJT+4s+3IXqMWPtlxfMKkcWTCpHHvv/9+4+cf
ak0ZPTx90SOLnv/N6tB1PYIEIiIBJXuPEyeOHzq0/7zzskLNKMuSJPndwjEF3usd4b33Eh5/HAD8
F13U+ctfesny5ZefJSYOMpr1Pt8hANZH3+sNStiBRCN1jHqvFbEWYjLW5OnTuAWUpAyAAZhsHGCs
vwytI4hHOjpOtbcf5muFen8Hl0OpEODOHnivdyT17Wfa3OwxS1raGEmSDh7cz/3ePNJXv9bNMysD
TlR2I1LHqDdawWdBJycvza6ICV0Ya/L0Y3BRTwQBAEhISDz77POjLUVAhgzxZ2SILS30xAmyfz9L
SwuagxBqmdrWj+kfoRjtrYi1dsWaPP0YCoq1bDCeEQSJSbT527S1tWclIQgS6ygztxkzfQB1NILE
HrLq3zauHYYgSL9EVc8G7QyAFjSCxCLa8LOwfXu0ZUEQpHfB954RpO8wZIg/IwMAxI8+irYoCIL0
LqieEeR0Y18e2Tv68LPn+dv9mPCiLfU8RlNPjmBvlBMV9LCNymLmgXo1QJDHPt0JvYqingkQ7QOA
k+WRfkh0A+cZa7cvj+xdZn34uS/PDovUsQgvhKJjuM+QZPZ+BIPKH5FyvMgc2VyM1ZTObFDXCVFW
1gzQqwGCPPZ2J/RdVPVMTB9A/Yz0P6IbOC+82m259Lef+/TssN47Fn2x5N4jQmedC44L7yIRg3KF
bCTaIiFnNB7C7RUUFBh9am4B+OaZwwgGCZznPSCg7tIrWN5qC7Po3CiX0H48wCWPLwm2oHjOudTh
Z9raGl5oP++BDo3ymPs5kGnlHh5Rj7AZkWMRdghFe7jPoO3yeASDngngEvqQl6NtceoN/dy2BCQN
6axzKHleDTP0s9cwlMraKckGz7a1A730hjE8K2IBx56RGCJouD0tjCBfaZmHEXQJwAfGMIKBAuf5
HmwMISBgTVWluoRvzX3phAQNwAeuof0qocjn861Tgzxag+K5BQTkw8/iRx+FF9rPc8+b5DH1s6+o
yuXe7darxlyROhY9C6Fo+RmkXd6OoKkVrS6PFE6hD5Wzt2GpFjDRfATry/L4UXYKSNro+axz6uf6
soaZpc821qnJQgxD6dM825Zj4a03WlcsbTCvWI7oUO7JNpvPaEMj0cJLuD1Hl5opAJ/nuupsYQ2D
BLwjpKDcV1SVnGywCTyG0nOR2Viyt6B4Un4+/0Kbm3sQ2i9Iz7vIY5LZe6+Glyv04INhE1RCL7kc
W2EiUK+aAiaajiBJv+/B4sqlK/Y4BiSt7ME5T0j6vRVlDZUNZfUhL1Qeal0uadBD7gpaz0hMEUq4
PTvegtkZAudpoWy8B4evWbEi45n2dp/vwcbcUu8B+Gy1O5QcICieMZd80UX8C58dFqHQfpEK0hda
r/bkWITXz71ZcvBWBOpVU8BE6xGc+qMyt4CkPelnxWtSPHFBroPboGd96EVCQ0t741D1cVA9IzEE
Ien3PlhcOTM5KSmppCkjnRBC0u+tuGl9bnJy7vqbAi3BXzkzOTk5V7EtuE05Mzk5uWQ9qKNomuGb
XAUFSsnZS5OT+ehYi7zZW0CFDFifq4yWFRcVeJbQWPtU2KLVtUURvnQLTC1fBzMVu6py5nUrWm0y
a6X5L7oI1NlhhBT8qCyvWDGqwC6PY2946PkCkzwF8+6yyexcjkuvGnNF5Fg4xsBw6zG3XMafAdrl
7QiONbbC1eFsO8rZeQ3ms9fhjCLp9z1YDOajHKQue2849XPugrq87KLsPEPDQ+lDfezZcizsdc1T
xpj1XISk3/vgxAW5+pm5Wd4cxdcrYg0MKImcPnopoGTYYQT7LuIf/jBgzRoeWRJD+yFIn8Y1oGS0
BUOQHtGTMIJ9F3nSJAAQP/oIQ/shSH8FA0oifZszM7ydNvz87PvvP5OZGW1xEASJPGg9I0ifhA8/
kx07oi0IgiC9AqpnBOmTSDk5gIGfEaT/guoZQfokfPiZtoTyojWCIH0HVM8I0ifhw88iqmcE6aeg
ekaQvory9jPGfkaQ/giqZwTpq/gnTwYA0qdDVyEI4gKqZwTpqzA+/IyzwxCkP4LqGUH6KnJmJhs0
CGeHIUi/BNUzgvRh/BddhLPDEKRfguoZQfowytvPODsMQfodqJ4RpA/Dh59xdhiC9D9QPSNIH0YZ
fsbZYQjS70D1jCB9G/9FFwno3EaQfgeqZwTp20g5OcKBA3D8eLQFQRAkkqB6RpC+Db79jCD9ElTP
CNK3UYafMbIkgvQvUD0jSJ/Hf9FFuDgJgvQzUD0jSJ9Hys9H9Ywg/QxUzwjS55FxdhiC9DtQPSNI
n4elpUkpKTg7DEH6E6ieEaQ/IF18Mc4OQ5D+BKpnBOkPyJMm4fAzgvQnUD0jSH9AzslB9Ywg/QlU
zwjSH2BpaR0vvRRtKRAEiRionhEEQRAk5kD1jCAIgiAxB6pnBEEQBIk5UD0jCIIgSMyB6hlBEARB
Yg5UzwiCIAgSc6B6RhAEQZCYA9UzgiAIgsQcqJ4RBEEQJOZA9YwgCIIgMQeqZwRBEASJOcRoC4Ag
PWXQ9def2LTJ/j3G8SLqoOuvN/48sWmTfUtPyu/HWDrKzunsHMuxOHMOjceWnrH9ExhUz0h/w3hf
drvm7fdux9sBT2ZXivaSjdu9FM7TeElplzlAK/oLtQOuX8NWPdcFaxPv3iqteq5rTDilBH52CfAz
QDke+7yfa5e9Xo8Lvxw89gZqZQuonpG+iv1iDmxGG+8Uge8CdkUIwe7RfK9jRntiTesHbk4vITx9
fcLrjnsyusNVhBGm9h0x46pTYwD2uiTYuzbx7v92bXpAilCF3hV5GEfNMY3bQ+QZCGplN1A9I30V
y4M5/27825OSoddsU002jz55N+0eNtIDm048wL/WDrh+MZ2z6tSsKOlkFyNMeOd1+apVcoCMY2ad
ivT9vPcON5if2+yO3FD7Jwjh5Ypoe4NuDHq2Oz7pnmmgekb6CZpZHEDV9eRSD+P27ZhFk8HoBvcu
sF219ztqxdczpFUR0C0hHTLvj0ehYnwI69cHztpYL54Goz7uizNIehVUz0gfxvFqD6rA3G649jFd
zQsd6hwuN/Es6S01eneTevQQeJ9HZkF3gGfMOfXcLBm4TbZanjOHrl7N3/eQ56w6ddl7iXfznybH
OF17f+LqFuXHlMUnHsg3e9R54toBd6+mAPTu6+MAAKZ0cGd17TsinN9h1M5716q1qGm4c3vVefF3
b5XmnB+3+nWwyeCl/wMcuwAHK/ChCUygNLVPD1qs9lHGnFPPnRtn6x9w6EbNXJ5N7l6s3dD1XLyX
tJ7RbGs+rr/4KmGxuW+DCzZLcWy89/Qgl573iObrCtq9ZyaonpH+gxeVrOnaAIo8DAvV4g9304tu
5rLj0HVQP2HQ+1p4tzzh6esTPp1zatMsGfbG33934tPnnnggn+8St8KpTZtkRQHfPWjrHP3n3U9L
mx6QlF3QvWpT1xgAqB1w/2cU8tltq048oNy/tcSdq+ZQmxtWeOd1mLLYoCda4tZcdWrTJi5Mwv3n
6eqB7916lV2GkAjwkBdSIT2aA7V3beLi1/2LN3Xm80PwNIFZ9v6hTt0o8X64+52OTZs6webc3rvW
XZDAfesmmKeedxx7CtrziBFUz0jfxqIR3bRXeMPJRhVu2RX4zmK8NwWYBGS5ZznqbHvKXnb91Yqv
g38xv02P6Zo9JW7xO8ID+RIAQEb3z5Xbt3zZVfJqkLSf554P8KmwF6QxtXGrW+Q5q1SNkt/5XD4A
wBhdA8uXXSWv3irsBSc9ulf4FPyz8w1btEq5MFvFvbO6HPYaig3LL+7Wq957201DO548TikzmCq5
9MADjlXIrt2Y0b0qjIlyTn3r0HuOgkWs5xE3UD0jfZgAzrEe6jDjK1V2g9stvfeS3X663dwtWrwX
/YF7P6OQod9nx5wng5sqNTDmPBk+1bNf5nCftvi3nQvc+57QMqUrH5zRavFGqGPPbjMNe9ijnl6E
G3OuDC1xd18fB6CZqo546sYwcOtbz4IF6NIwBmJwZjugekb6Lh7nnvSkQPB8a3Azst085457He9Q
jgIYq+sDNy8+eJzBHeaK99UxIX1vK50y+/S/LqWlD3V033uNwVLmd27a1Ll3beLdq8XF14uOI8Ge
uzGieBAsYDPDGJXHqWEcXNQT6as4qlKPBlPg699R8WvOc+17UPFCrcWxgVqNFgF6SzePOVeGFqK9
cLz3v6HdI8acK0OL8J75heW9/6UwpcM+rmllr7i1xX+Fu4G2978Uzu89D6p9rOF0L/wyZtapTZtO
rJojw+tirWPzvXRjWATu28CCuWP0byGhguoZ6VeEsYIgv30EdqZp/m3+xXstbjemkEY0LTV6lyEs
8v1TQFyzlgIA7I1f8zpMmR3KpNx8/xSgq18WlJ+1A+5fS8ecZ7ytCy8rc7+tunzve0KLPsypoiWo
HbD4dZhyRcTcuWbcfCenSbXUPp24VuuH/1I+3GvpH7dutGDNZfipz4G3Vj9g8evynNskVZhB118/
oNZdsBC7FDV0eKBzGzlTCDAMFnFVF9hHGuO+O+mBVd333514/WoAgIw5px7IDzH7pg64PuF6dYB0
yuLOMfmdc7YmLr6e3278c+bIwL2y+Z2LpwxafPeg1QAwpXvOpzTjqk7r3T8DtvIEyjta3iXx7kqB
gK+e99BR4UmM/CvkxWozAfyL+bx3U/90bHrApRutZVlzrZqTeLf6c9WceN0lrgwqK33ruDqNo2Bu
q7m5dym+QBUGZMKkce+//37j5x9qm0YPT1/0yKLnf7O6B8UiiAMvvfTSjTfeGPFi3UZwvS+4reGY
JfB70pZkQfVxgMm9QSf9BgiJ0Q/Wghaevj7+vIgtYRbeyEKoi1UFfdIKcOijrK56Z3GxoI2yJ+hz
z68R56GFpUseX/LF4VZtS/Y5l1x66aWonpHTRy+pZ6RfoIbBwJdzTg9RXfsTMeKmntG5jSBILJDf
uSk0LzqC9G9QPSMIgpx5jJl1atOsaAuBBAJnbiMIgiBIzIHqGUEQBEFiDlTPSN8m4uGQw6s0JAF6
T0K33ghpzVGP664ESNOTBoa9PGrPUwZebxVBTjM49oz0W0KIew8AwV5S6qU3PcKO+RgSbq97eWxm
2AE5glbhuOhpxN+r6Wk4KQSJBqiekf6DY2h3Ix4XYT7NYeFDfXfZYycEWOvbS4dYkoXXFUGjCoZd
cgRDVrjJhiDRBdUz0lexK2PjOiE9v9vaA0J7DBfouNExIHRv6APjSt12YSJSo71k+xOG1kCPYYtC
ClgUNHBFSAclpAYiyGkD1TPSV3FctItjHHANcAv2uKpUYNXi5jEOHGmqN273Fi3opa7A9ro9FnVQ
L7djpV46MIAODrzdsfAAQgZW56cxrjaCBAHVM9JPiOBdNdTpVMaMIcW47aV+sJj73p8tvBQehkgB
wnKHV5Tlew97O4LiIUgEQfWM9CsiohTtCiCCk3g13R9ZTdB7zwRGf0BILmgwOzDsMaodfeNuRn94
gSuCDn4DqmQkVkH1jPR5LEo04kOtHssJ1aMbWVVqtyM9GpeBA36Ak1oFD08DfJejpWupwnK8wpjW
5zEBgvQtUD0jfRWL7RV4Apc9r8cRWY+TgwJEC7a/R9R7flS3TgjVxR22t8DLZLHAJfTGg4t314J3
9wA6w5HeBtUz0lexWMxhzLoKaqh5LM27lRz22K2XvIE7IYJqL6imt2u1UF877iUN7SWll2aGd74h
SEjgqmFIf8ByV3Vc+sptSpG9BC+1GKszvsukPS5o3+1Dtr2Bl4cAj7rHe0XGjZFtRWQ7zei0QJC+
AlrPSL8i6DJhIXl9wYNz264UA7znE1iYANm9LHkW+EXtiNh5jr0XtOvsP8N+Y6onMkfQKMeZ3shp
ANUzcgbhfYTYuDfaUoesWbUWWV6DdnPJelkk3E23BRDMi7FuLDnic6rtGjSCajUWTgykf4PqGemr
BLXb7Bqo5yPEEfe42sUImsxjaQEIatxbJsd5cTiH8QZaSCWH2rduGR0noiNIDEImTBr3/vvvN37+
obZp9PD0RY8sev43q6MtG9LfeOmll2688cZoS4EgCBJDPLSwdMnjS7443KptyT7nkksvvRSnhiEI
giBIzIHqGUEQBEFiDlTPCIIgCBJzoHpGEARBkJgD1TOCIAiCxByonhEEQRAk5kD1jCAIgiAxB6pn
BEEQBIk5UD0jCIIgSMyB6hlBEARBYg5UzwiCIAgSc6B6RhAEQZCYA9UzgiAIgsQcqJ4RBEEQJOZA
9YwgCIIgMQeqZwRBEASJOVA9IwiCIEjMgeoZQRAEQWIOVM8IgiAIEnOgekYQBEGQmAPVM4IgCILE
HKieEQRBECTmQPWMIAiCIDEHqmcEQRAEiTlQPSMIgiBIzIHqGUEQBEFiDlTPCIIgCBJzoHpGEARB
kJgD1TOCIAiCxByonhEEQRAk5kD1jCAIgiAxB6pnBEEQBIk5UD0jCIIgSMyB6hlBEARBYg5UzwiC
IAgSc6B6RhAEQZCYA9UzgiAIgsQcqJ4RBEEQJOZA9YwgCIIgMQeqZwRBEASJOVA9IwiCIEjMgeoZ
QRAEQWIOVM8IgiAIEnOgekYQBEGQmAPVM4IgCILEHKieEQRBECTmQPWMIAiCIDEHqmcEQRAEiTlQ
PSMIgiBIzIHqGUEQBEFiDlTPCIIgCBJzoHpGEARBkJgD1TOCIAiCxByonhEEQRAk5kD1jCAIgiAx
B6pnBEEQBIk5UD0jCIIgSMyB6hlBEARBYg5UzwiCIAgSc6B6RhAEQZCYA9UzgiAIgsQcqJ4RBEEQ
JOZA9YwgCIIgMQeqZwRBEASJOVA9IwiCIEjMgeoZQRAEQWIOVM8IgiAIEnOgekYQBEGQmAPVM4Ig
CILEHKieEQRBECTmQPWMIAiCIDEHqmcEQRAEiTlQPSMIgiBIzCEyAAbAGAMAAAIk2hIhCIIgyBmP
CIwBY7LMgBACDACYpqwRBEEQBIkGivXslxkhjGgqGlA/I1HglVdeibYICIIgvcuNN97oJZnIGDAG
3X6JEkIIoZTwLQhy+rnjjjuiLQKCIEjvcvToUS/JRMYYY6yrWxYooZRQmTAZndtIdPB41iIIgvR7
RFlmssw6Ov2CQARKBYHIjKF+RhAEQZAooljPnV1+QaCiwESZyDKTUT0jCIIgSPQQZQYyg85uvyhT
WaYyozJD9YwgCIIg0UQbe5b4jDAGIMuMyaieEQRBECRqKC9WSRIjRCLACJ8ZhtYzgiAIgkQPUf3C
gPFXqnBVEgQ5g6isrPzyyy87OzujLUgkGTBgwKhRo4qLi8+0ZlrYVlff0dkpy3K0JQ0HSmnCgAGT
83K1LX36IAY9WHZEAkAAKCWUEkJxVU8EOYNY8fzzAxMTS0tLR4wYEW1ZIsmhQ4f+/Oc/r3j++Xu/
//0zp5kWtr5be9bQoZf9v0sHDRwYbUnD4cTJkx9+tGPru7VXXZ4Pff8gBj5YjoiEEEIgThQEgQiU
iPzt52i3BEGQ08CRw4fveuCBpKSkkydPRluWSDJs2LDbbrvt6aefPqOaaUGS5dyLLkxMTOjo6Ii2
pOEwMDEx96ILt2x9h//s6wcx8MFyRCQECPn/7Z17UFtVGsC/c5JAaRl0iOOuUqAPCEmoCzt2LNVt
eTS19uHUcaXRmbWsdhW1/zR0xx2FMp1W1NlV8DFdtzLFrf9sAdPaaaEqFNqOOjrbccP2QXOhULe6
f2yp2FRpGbj37B/3kZsE0jxJQr5fGJJ77j0n33e/L+e753UvSU3RiLcl0VBCCSEU29AIMvuZmJjI
zMxM0PrODzdv3szMzJyYmEgqNb1gjM2dm5agsRkAxsfH585NU8ZaE92I/o01JVpKCCUkLVVHCVBK
KCGUEmw/I0iSwGbpVFAvpZJEzdlNohsxWOG14qjznBQtIUAJIQQ0lFKMzgiSNIRf5TkcjuLi4ljr
EXU1I0hCnLE4JK6MGG3EsWeSmqIhhBAAIEApIdh6RpCkIcwqz+FwlJeXj46OxlqP6KoZWcrKynp7
ezFCB0tcGTHaiGPPoNNqAIAQEP/j0DOCJAmMsXAW3vT19VVUVABAvK3e8e3cjjcJy8vLe3p6ioqK
Iqjm7CYOjRis/EEdT8WFVRoN0WiohlINpYTg6ioEQW6NEpv9w1hXjd7NmveGAilczlXTNYMRSP7S
Ne8NKTJHUYCKioq+vr4Z0256rQc6GhubZBo7BlTpHQN+1fd/jFhy460KiQZun6vpityJmgmvUKBA
CBBCCaFE/AgAUj83giDJAAsJh8Ohjs1+jgSwvHHlwGbYfODKlSv/fAXq3u0ShFuWL+diockXmpry
l57++NPFssxvWALLKwhdNr0tENXU4lVUVDgcjpBUnFrNECAkf53tYQMzbNi2zWazVRngKmNi+vqa
9fl+w4H/Y8SSC2bcV4feW9O59srIyMjIyMiB/MGhwIwSiHu8OTJyJVS3DFZZ6bYk6niMkRlBkooQ
Ko6+vj6LxRJ4IeJeqZJamr8osK9055pBNRljAJvN7JNhlhfUt7PhgfMAa4OXdtWqVd3d3WH2ckeI
wY5GzmBblx+vLbRAzi5jw598bF7bKR27qro6wIxByRCxi6Pp0YZfBIIgicvk5KTL5Qoqy9mzZzdu
3OiV6L8QxsbG4cMn7vwQimuPf/SU/vp1F8Cllt+uanAAgHXf4KtlBADYpZbH5KSLr5YxNjYO42Mu
178/EJOt+wYbygKLHPPmzQtNTfFLH7z75uEz0re7CJEFK649/tFTuSdr87a0WvcNPjv02KoGB1j3
DTaUwsna+3acBnjizvHAhVSwWCyHDx9esmRJsObzUjM8nEff4hgYDNJ5GOhsOuKEgodt6/IJUTYL
CpxOp3fiw6qIPtDReJQjAMD0y6ueXJYJAABcZ9NRjuiXb95cog9ZvgCNyNiZs6fH73a5XJ5WUPtb
Q+nJ2rwtrWC1WltbW91+5eWBqpTi2uMfPb2AgOwhYz7lR9xYOEMbQZIdIUjMZvOhQ4eCLQTA2sxx
3Bts+2MtwzzP8z3vNxQ0cxzHNcOW2h6e5/nhlu1iUvfLzs96eF6cByQIl453OIpf7h4YeGUlYwEK
GY6aACCsKF8wdFHMxfPDLds71nVzHLd1cHvLJWHFbq77ZeeW2vcHHWBt5navZIyxlbu5Zqu8Gax4
hw4dMpvNwRoi0vOkCjZs26B0RHv1S8ubTjDYbDYD19Q5wJhv3zVjA5yzQOwkr9lcopcCmBMMtm3b
Nui//CrMQeggLOiJl7/1Cit2c81WaAULx3GWz/Km9kAv0w/z/HTlR8NY2HpGkGQnhF66wsLCgwcP
PvroowEWwhgwcbgue6HB0TXMWA4p3dU1ZDUYngEA2GRhjMHwoGPT6pUMIOf3bbvlXM49mywOx6bm
1uwwexMD7twWRc1eAINOAFkwR5vF8Kosag7JqfrLS9bVx17qai1193bKOgYp2MGDBwsLC6PfVxoI
eetr8v0eUGDI87ebkPx1NuhsajoCd9xf9WSJngSSK3AC69xesKjY1xC+/gYMNq1eyVSG8/VAH9OH
YehgwdYzgiQ1LOD2qBdms9lutyvl3PJ4BkwQBOHSRWfRohxB4PneutWDz/f39/fvrRR3CTmLito+
OyEIgjDc2yu2VBg48p/v79/Lnqk7EZR4bKqFVYHmBSYIwvycRcwtWOXe/v4LFy5cuLBrBWM8P/zB
H1/Lr8x/bXVdr9yiUjLyvb3qRP8NKbvdHlq7eUo1Yw5jA19/nbm+psZmW351f2dkJ2wHaETGssse
YhcvSZu9LWJvja+/yT7p/uDrgd6m98oYVWNheEYQJEQKCwvVEXo6GDtZb6puh/Zqk8m05nXDC1W5
hBBSumsvVJtMJnHX4/v/AzlVL1S2V5uMRuOLwwty4FS9qbodoL26fv8wB+3VRuOOk1GORipR60/l
lK8tAgAgJLfqz4v/ajIZjUaj9e+XhBP1pjWv9xUttiwugvZqU/1JaZ5z6a5+S7fJZOqG0sBGJe12
e2Fh4QxY6lZaD3Q2HeEId6TJHVC9EtWbgwAAziNNnZzA+WTMBG5/U1PTW28ddRYY8mDQN9cMLLLK
qfoDvGgyGo1Go7F74VT+Zq3frhgaAKQPHh6YS4iv6XcYjSbZmaPtkMS8pOD06dPc5X8pSXfrF+2o
3/G3d1uifQaRZGP//v2PPPJIrKVA3OzcubOhoeHbb78Np5Bz585VVlaeP38+1tp4kJubW1tbu3Pn
zkipGVnMZnN7e3v4sVmtphfHT32xcd2axH0kBgDMmTPncOenq1Y+AHFpxGCZzlh/qrPt3rX7v1fd
9wMwZP966dKlOPaMIEkNC/tOTCaTqa2tLcxCoqFXZNWMLG1tbSaTKXyR4q1zO6rEmxFDkD+o47VK
PnUhkEwmR5AkJ/wqz2g0xn+9GVcSJsQZi0OS6qRpGYD4p+C1iSDILCaCN5+KK3xbz8mg5uwm0Y0Y
fOuZMfDsMRCnmSMIMuvR6XSjo6NZWVmXL1+OtSyRJDs7e3R0VKfTJZWaXhBCxsZupKXNGR8fj7Wk
oZCamjo2dkO5o2WiG9G/saZE6tz26DGYiQVdCILEHr1eb7fbKysr8/IitC41Prh27Zrdbtfr9Uml
phdUQ7/pO3Nv8a/S0ubEWtJQuHHj5jd9Z6hGWl6U6Eb0b6wp0YrdBTzvDs8CYwKGZwRJAp577rk9
e/a8/fbbExMTsZYlkuh0uttvv33r1q1JpaYXZfeXnPjiq64TpxK0uUUIoZSWPVAibia6Ef0ba0qk
sWee55UkxuJuqTuCIFEiqPoicUkSNb1QYtvsINmMKI09q1vPTMDObQRBEASJJVLr2WNq2Ew8KQtB
EARBkGnRiuuo1PEYZ24jCIIgSGyRZm6r7w8bp4/hRhAEQZCkQUsIEAJEfQN3QjBEIwiCIEgMkVvP
qvA8yU+ULCt5+tnfxVo2JCFhfpNOfN4VawEjClErKD301/c0MJ8ccYsiKlG/E483cN+8STUoJq35
ENdlig9ABpCXx1ANpVRDxQ1CiNwGICT+TwkSMm43kd2CMSYwaY/kMOKTFiWXSkqfWXbfMl6YYrWY
Ep7dSdd/Hn1o7YMbNqyPtcxIYqOezgCz7k6x0i+GEBAfza7SFGbXrRbd1+7yJ1lhj3sBS9WtAIJ8
3wTxMEKoRkMppVQjVrWEEgpyjx1RnUtk1qH6Paiu3BhjIN2uEgSmvACS1Wd4YeLnm9d907Vpqemt
rW33Ljf9fEPa7frpB9dPP8RaYCSR8GkqSlfCjIH6NTXx/EPzJ7P7mlbRVg0w7wLiWVFfjeWKkIiD
XwqyxqKODAhTUnie5ycFnucFQayAGTCgVKNL0aWk6HS6FK1WI0I1lFIKs7ElhKiQfxkC4wXxJTCB
FwSBMUFggsALk5M8Pzk5yfMCjz4jMSdl3oEDrWmp6dp77rmnsbGpu+fY0Hfx9bhWJIFQ/1YYAY/I
JDe0mM+RcoZYSx8MilJEbBkQ4h2W1eGZTJU3rmsWpryLdiRAmByexcpR3C03gOJaGQRJRPQZv2x8
szEne4H2tttuE4TJYx1dKytK/vfDd7EWDElU3K0uxsRa3WNcUtwlvRGPzbhH3UtPvLsKpGuPKcIz
ADCvC30S5yozcOvHVJdXjAClIAgCpVS8IFEdgCBIxMjM+MXRw58IjM/IyKB33XXXb+4vrautO9Xz
1cIs07y0jFiLhyQe7ulQYqtKfGS4coMbdaQmhAAQMVKJb/H+Jy1l8OjPVoVhgSkzXJh7jov0WFbl
ukTuGI7vP1FdtWEV5Zjg2TXAmKftEQQJi7TUeVl3LD5+7PPa2rqCfHNWVhZ55513rl69+v3333/+
5UlKtTU2m/Vxa6zlRBIXzyazb92dyKv2PDXymvoGkJCj6/50VbRTxqFh2h4AqT3tnnSgUp8QIk69
VUayQS4oEU8NEjjKHEEAL99w9ztJ1/RJ7zMH/nGgsbFJYHxBvjk3NzcjI4O0tLT8+OOP165du3z5
ssvlOnOuL9ZCIomL7xQxj93x3rcboJI+EXr68OwnnsU1Hhp5zBpQR2qPHIDhGfEBw3NQ5MxfmJGR
MX/+/PT09PT09P8DOKK8rasEyuAAAAAldEVYdGRhdGU6Y3JlYXRlADIwMTYtMTItMDFUMTM6NDI6
MDUrMDg6MDC0VoAmAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDE2LTEyLTAxVDEzOjQyOjA1KzA4OjAw
xQs4mgAAAABJRU5ErkJggg==

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://img.blog.csdn.net/20150926220732996?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center

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
eKyY/gAAAABJRU5ErkJggg==

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://img.blog.csdn.net/20150926220741337?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center

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
AElFTkSuQmCC

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://img.blog.csdn.net/20150926221445774?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center

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
88MPH37605/pb+v+7exsj42NjY+f7Lr1059+5vOf/9L779/vkNsXv/hlEfnkk8cHV+CDc+LEiS9/
eeLBg18MuyANfq5+5ysIAMBRFbC1ErZz37pYe9vvzqHJSCxrNMl16wHHc/a+BUmYU3n95AMAQUUg
PVx7e3vvv3+vv60Dcf/+z7/0pa/0t/VIOrhnS3vl8+ofw2sEAIAEalRiZabxcvjNldduhl7wfWj8
QiTT08vhdbV598hkf/kAQKAQSIflk08+uXv333p9e0LnrQPx6NGOiJw8eaqPrThQPq8+1wgAcGyN
D7sADVPXKzITjS6IiMiZucp1a9Xx2nx07qb58WZ0wdw01XJsPGdsqIpjxXCqYOTiUkwriSUrxVxP
bKaLSDnTWGCcKhjxjvkAwGggkB6o7e2Pf/7znxnG3qNHj77whec///kvmukPHrz/6NGjvT1jZ2fb
fFnD+PjJ5577Qtetv/zl1s9+9neKokxMfOO9936uKMonn3zy3HNf+NznvuA87+PHn/zt364//fSn
v/GNsFfZ+lsosbOz/d577+7u7u7sbD/33Bc+//kv+WyKR4923n3370+ePKUosrOz8/zzX33iiSed
2d67984TTzz5+PEne3u74+Mn33vv3osvhvw8wLK3t/vzn/9sbGxsbGxse/vjz3/+S5/61DPO877/
/r0TJ8Z3dx9/8MF7jx49+of/8N8bG7OmWD755NHPfva2osjY2AlneT7++Febm2/t7e2++GL43Xf/
3szn85//0uc+9/mu5fFz7N7e7jvvbO7t7SmK8vjx4y9/+deefPIpP/eG/ysIAMARFqBRCRFxPA/d
cO5ypXK5+7FayXym2SmeM4yc3507bZqdnV1cXOycAgBBQCA9IJ988ujevXe+9rVvnDhx4pNPHv3N
3/zo2Wc/a74C4LOf/byIvPfeuyJG+x+WHbY+88yzX/3qC2+//dOHDx98/eshEdnd3d3YWFcUxTzK
tLe39/jx408+edShbHt7e6dOPdHT1sePP3nvvXe/+tUXFEV5/PiTn/zkzVOnnnjmmWe7NsXjx5/8
9Kc/+eY3f8P8y//Ro52f/vQnodDpkydPmqX9t//2b0Ohf2BO+//9379tGMbXvx6y/1DvwDCMWu0n
X/zi8+a4zMcff1St/s1v/dbv2t9J8Xd/V/vmN3/T/PH5579arf7NJ588Mouxu7tbrd752te+YVbh
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
hvvuAAAAAElFTkSuQmCC

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://img.blog.csdn.net/20150926221725807?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center

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
cuT/vI+Twrs+D9975Bd+YblITsMMoZVMzc+3/++rH7jqhNrNVEtvf/vdV111Iiv+qled/u3PiRYM
PcT/231/+ch9/4wcjqrsvgXz/vffs08smCNHiNHXUcYIAMDUyI6my9DSenzD35Ii/+0MFp3emLGg
5fTGzFt2BmeSkIrj3pmBszzx2ri70m42u4mxsdVtNtvCLUZuPSVoNRqLw/ZW4SN+FnR6cdjeKrr0
ugv99bRx+Ru6dTukwNhxN3kn0WvvzGCnjqpGaQVBq8PbKwYT5v4L7NTpzODxlsvCUhY0lAo/i3G3
V93kmIfYprDf5p17fyfpuxNHL9cV8oGXvOMdrUvZt0jhj136/UuarSNHjhS1U3mGSPPz6quvuvnG
n/2XTz5FdvPqq6+Kouipp8zWg3GIH/ujT3x6usNx2Dhx4iXveEfJ6DObMQLgUGL3bt6o09iLmMXj
bb4zOFPRRPDCrfZwsWFVaNxbG/EFlzEys+uf6/JOwwkYY17I9/MleueC1fCMt7mz4C44o8HAWfYW
nMoByA8a0xvi66+/7s1vfsNll1129au+/+zlJ7Mp9YrjzzSuP33ZX192lL14+W13LjbY00+/LCt1
+vTCyeNPsxcue+lLr11cvJMx9vTTT3/xi3/BGDv6fPQ3P+C9/wc/+MQn7nNf9u1LnJ9/97uv/OIX
//zP5XaPvOTKf/TeX33kkZsKZFt89//163/nW51Gg+zm4uKdW1vn9VLHrntZ6/V/64orrnjZj3//
2WM3G34kBNdcc/VP/dTik08+FUXs2muv/vSnx48//kT27XXXvcx173j88SeuvPL45ZcfefrpZ177
2tc886nvHn/kJaU1X3HF5W960xteeOGF559/4YYbrvv857/4V3/1NbHd1772Nc8+++yxY8d+4idu
v+aaq//ZP/s/Xnzxxfjbq6666m1v++ko+sHzz7/w7W8/npV6+ctvePvb777iiss/+tHfecMb3EaD
XXPN1Z///Bf/4i8eKJXHpuzll1/+1re+6ciRy77//R8cP37sv/23z3zzm9/KRv/qq6+67DJi9NUR
NIwRAIcceQ1mqR8vcvj9pco3t2CTt1eyv1bafHNymyfY5N2z9o/0rs+jaJ11Cm0eeTdKuosnz5H5
ZgUbJZ3w+0vlzevF7RhvDJ1+IpJ3tnQpwFmIx4iv5zI1u/kpoaKVlWCTnzrXZhc2ekPWLx8imx4Z
x52ScwItVcayoUpDrDDuDZ3+B3+CnThxYnHxjpf9vf/8m6//+v/7T+57dKF95ZXJics73vz1j/+v
57/85a8+xy67+OD5ra3zX/zit7MK7r9/+8GLV0Xf+erjjz+xtRV/m9zAnru88Zd/+MkTJ06cOnXL
h//1+VuW37Kx8TtvetMbPvS//IowQ5zb7rrs+PFj7/if2ibpT5w4cekl7NL/8rtkN39wy+lLL730
O9/5RUVLl/yA/dDrXnPffX/48Y9/4j/+z6NHF5ZuueVmbYgJrrzyyn+8/nsf/ej/9xunPvOpT33m
U5/aeve7/+6JE4l1cuTIkV/6pV/45Cf/+DOf+ewf/MF/ef75Fy655JKPfWzzisePlir70ksvPXPm
lx599Bv/9b9++jOf+ez58//9Xe/6xSuuyF8tfuc7lz/zmfHW1vk/+qNP/qt/FTz66Deuvvqq+Kuj
R6/41V991xe+8Gcf+9jv/t7vhTs7X7n22mvirx577Juf/vTWiRMnXPf1w+F9H//4729sfPznfu7u
Y8eOlYpUWvaSSxrvetcvfu1rX//d3w1///fv+9Sntt7znl/JpLr//u2trfNf/jIx+uoIXnrpd77z
ZOX5CcCBRzoHkx0QyS9mwnm/LNFVjue6enKaKB+qlA4bKnnJRCU59Eytx4mFJ0iKhRebUs4MR+kJ
0tCrVJzoUVpaeE1d6VMYhsW9IM78eiH3c7EK7YL4tAaTzkMYNK/1KPmT+8wkPFVYOZusK7mok+Wq
sxXelJMYYnOdpELvf/KJBx74wg9+8IOsj//io5+6ePEpsfCZ3/rCV77ykEn4b33rG1/5ykP6r+PJ
J5944IFP+YuNTMnf/OajX7rvE6F8GvfFF1/kg1TJ2vy8++63vvSl11LdZIyxf3Hfw88996yipccf
/9af/dnnXnzxxSz53nOf++pXL4g9cn3+yCN/+cgjv6/M5He8o/WBf/85sYm3ve2ty8tvjz/fcsvN
733v38+Ud8stN//6r/8aszsHc8cdrxXf+br++uu63fdlR0MuuaRx9mz/yJF8UflHfuSm7H3pN75x
0fPeI9YmnoNxnFv+4T/8wKWX5o9z/+AfdH70R3+EWVBc9id+4vR73/urYv5f/uWVt771zWLK6173
ml/6pV8oaCIeQRthADh00Cd5wV5R5+VaL7Qx3cBscJxblLep9VOixXcp07d6zbfccvNv/svftp8h
L3nJle94R7vqt6961en3vEd6m/qOO157773vVbK97W1v1d+m/tCHPnjbbbeKKbfdduuHPvTB+PMr
X3kyNlmy7sSGhc0l6N3v/rvFL2//7b/987/+6792xx2v1ZdP3vOeX/7Zn32LmKJYMKUjaKK47Dvf
ufxzPyctei0t/Yzypnrx3CgeQQAOOfBRvT/wwijZbNkZLPYqFfX5+lKTRVF3j04rgV3BC6P1pWee
efrChT8Ju/+3ZSHXvWM8/pMa30aR9Odzz33v8ssvL23u8suPHD16VDlwevHid48ePXrkyJEXXnjh
q1/9y4sXv9tsvnJn5yuNRuNv/s1X2R/veMlLrvzyl79akOF3fuf3fuzHbr3jjte+7W0//dBDO3/0
R5/MzrscO3bsu999erIBqMOVVx4/fvzYXXe9Pku59NJL//qvv21fQ/EIAnDIgQWzPwhajbrGR89p
9PZafDBzglYjYLfccvMv//LKP//jF2xKHD9+/Morj3/rW39d41uFY8eOPvfcc6XZnn/+heeff/7y
y6U3a44fP/b888+/8MILjLFGg33724/fdNONN974csYaX/jCnxUbJSLPPvtc8dmUKGIPPvjQgw8+
9NKXXvu61/0tz3vPv/23/yE+Nvvcc98TT8zsGs8++9xTTz312c9+rl7xSmMEwCEEcZEAmDnf+97z
l1yS/NYajYbiwazg20ajIeb8G3/jpocf/itlgeTo0aOXXnqp3uhdd71+PDbeO4u/Vd7vveGG68S3
fgp46CF+000/LKbcdNMPP/QQT+X/GydP/uiFC1/+kz/5/B//8VgxX6JLoh/90R/JVKHw8MN/dfKk
dDal0Wi8/vV/K/58663OK195Mv78+ONP/MEf/NGf/ukXb701OfT8ta99/YYbrhMKsuPHj9t0hzF2
6aWXFEhVzMMP/+UP//CNssxM0U/B6BePEQAAFgwAM+exx755ww3Xxzeq22679ZlnnrX89oYbrs9u
zC996bWve91rPvnJT4tlr7nm6t/4je6v/uq7lBaPHj16zTVXPfbYN0l5ir9ljN1448uzY7BXXXVV
s3nL1pbVXsYf/uEnX/Wq01ddlbxuc/z48dtv/7E//MNPxn9+/etff+KJJ3/t186cPfsb/+gf3Xvm
zC+98Y1uZi196ycfveeedysHXTP+5E8+f+211/7Yj52K/7zkksZP//RPfeUrD8d/fu9733vzm98o
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

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://img.blog.csdn.net/20150926221856324?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center

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

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://img.blog.csdn.net/20150926221905684?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center

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
KSmpr6/XFrYVK1bsrQjY/4yqrlix4tVXX+3YseP27duzwKS7p+XnVCpVVlb25ptvFhYW7rtKupTo
mUzGVUlDjqqqqh49etTU1BQVFX366aca9/qbaxAEeiEfd9xxe1iNsrKyGTNmvPnmm88999yhhx5a
Xl5eXl6+ZcuWjRs3fvTRR4WFhYceemifPn10bcMw/Ne//qWNuqtWrQqCoGPHjrNnz+7bt+/+zxK0
du3aYguBtCOG7qVkMhmGYWNj47vvvjtq1Kh99HZfBaaHRpuMtCIg64b90Btvz13Yb8CAJ1/6U/dD
OjZmGhOJ4Mje44Z1Pbw5vd2GdYAKFSJMHHTKjnDbW8tfCtNhUU98+p0HTzvhwjffnz/5mNH7qG7v
vvtueXl5EATz58/v1KnT2rVrDz/88FNOOeXBBx8kIqXUQQcddNxxxzU1NT388MPMPHbs2JqaGu3S
ue9IQ0Gl1Ntvv71o0aKCgoJkMllaWgoA27Zt69ixY0NDQ3l5eWFhoQ4VQcQdO3a88cYb9fX12iC/
f+Int23btnXrVrcvl5SUNDQ0pNPpjh076ghwBzU1DNa3MfO+tofnKU/tJyJEpMCL8CJEQjr22GM6
derUoUMHbVQvKirS6ejy+Xh2iRoaGj5T+fPz5FOAiL6EhFq70ibVfrhocLfMpm1bNtWvb9iiMqJT
p5oiyDSojPzo/Q+2N9Q3bNne3JQCEfTq23v4qEMBiEgAbUNQFTWFFTUHDT5k+OMP/m1vtSGTycyf
P3/p0qVhGCaTyYKCgvLycm2H2bp1a11dnXbpYeZUKpVMJhsbG4loypQpe+Xtvukg66KmnP6u+9Y+
yZiSCkUQKkbCf54wMTl0aMWV313yxz+Ou/HGVCojpVTJRCJZqJgU7qswzvZQc3NzMpmsrKzctGmT
VthrUbWoqKipqUlKKYRoamoKw7CkpGTr1q1NTU2dO3des2bN/seTn+Wqzpo1q2PHjs3NzVmZhKFF
OihNGikBQCqV6tChw6uvvrpPK6nlVP0ZEXX85NFHH92tWze3NyxevJiIUqmUz450JYcMGZLlfbd7
lEwmx44du27dupUrV3700UepVKq0tLSiomLkyJE9e0bJWsIwfPzxxwFA7/Q6+E0p1djYqJTa/3iy
X79+W7ZsWbduXVlZmWMm2hcjCAJErK2t3Xd4Ek2shwmbdL7TTgbS132r8r4Dltt2NG3YuqU51SR6
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
yllmEgocjgLBlFfv5pxZSu3WGrlGjVXJlWXnpwNp5o1WwBouuceYZePmzgJBkdNlr3E4CsqcnDvL
ChyOGnuXZu+hpFnXOwqUXI2jMrNcvhZvLBEEk8lUgP3+iGVEibs+T64udw1AbYWzLJBAcxQI5aG2
lzk5d9trHI6a8vIah6PGbm9yHGpsdq9cpdYnxFI9dgW8EeSu0FYhVmjq02UuCdjVlF+bwzTGVO15
reFKQ2OmYld6hT8jOtLPqrEI9mqTtcTCmK4xVc0xXZ7nPLiO5hzTmISqcefcWS7rLwjB/h+tlZIA
FjJdFfJmRVWJ/y0WKb5Ve0zDGxpzXj06aWjMvO222/bs+YVcIntezk/6PZ+GxsysrPU/+clz29ZU
lFrY+WOO//MpW3CuMilpzuDgZTmOunChLzgTODh4+dIlJegaGhr0eHoXLlwSbMvQ0GBX19/eey90
OsmHviYna++7i/wqgIGBgaGhy/Jjr3fo0qULKSm6VsYuWrT03DlP4LxZn897/vz5RYuUA2mMxqT+
/oFlyxalpl5jsaywWtMyPrU2sJJ28JK3v++yp1f7NoUmUwpjrK9PCREZ+M1XvPvR4FWKH7hh7RXv
G9iwVw2Qzvi3UB7rX7o06ZwpUQl0b5j78Rw2ZND3zZt55TtfSunMuPJdPZVDcPcvnmPwmucMn167
Zt6HQ3zExYPonWdK7Jfj1evm9AYOlU1ivvkJg6JXVxhPEARBTFOYTxrgbPgnT8bnVFVV7dzxb/JT
zrnX6/V6vYODgwMDA+fPnz99+vQzz/ynfXe9xPo4vD7e7x08l8iWfLfyX7ZX1evs9X3xYnrqsr6+
vnibT8xq/KfUDJ+/oi4hxg55dYozODhw+vRHly5dWLToankvoiieOXv247lz5y9efHVS0nDAdvbs
qUuXzhuNSfPmXRG4/2TkVy9ePH/mzEcLFqR4vUM+n8/rHUpJWRySn/R6ve+8c2LOnLnLRm7OPHv2
1Pz5V86Zo71UMvKr5897ADY0dFk+N8/n86akLE5OnrtgwYLOng+WmeZ5PGcBLod2CxYIADOZFgZW
tA4OXhbFMwZDwq9/3bh582aT6QqAyd+DHs+FhoYGk2mxwWCQJO/lywOevrP33XffB57uJKOR+zB0
ybv82tTHf/jDmsfq1Iq1tDSvW5fxH4ekAcnIwE/0LwkcumNK7P/qwrfP+5LfvSxckpISIV2Sko73
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
FEu5Yt7U32/9bR1R6ryf3nUh55SiTdkqf7otYDrzzvv9f/12d2rqKPp2Sxnd9B+TD//+b+pu2VQf
MM8XTd2y9bd1RMT5lGUP3JBNVn5wY9mbjIj41Jtu9PZ/eosfwTcRhEkeNap91qzE/fuJKPXZZw+/
/37Ansk+I0zOg+mfJKLRd/xCXmZe/AER0aI/d93LSabMJet+uGq++Rmac+cbu0fLrz6VceMOolcn
8IeabuD07K8m8DWN17+XuXQH0asTniW686Gmp2fRjgrvbko0uOiyW2/41QRlldo7H2p6ejZbtHTN
o/dMMNP35kymd3814fPvUc0HvQ4hoswl67JXTTD/ioi+V77hpZ+fH/wrs6/aOH3a6LnyyuGMGRNG
JBCdJCLGkot+NjH/l8+XkrXssRsy6IuSn7xuY8z2E1JmTnr2Sc7/yfMFjFH6jNpeXZcAAACgMybJ
XZx1eu/zuDVr1pT+56+Vu5xzl8vlcrmcTmdXV1d7e/vJkyf/d9PzGzZscLF2TpyTLEsuI41YvXr1
6gd+E+RZv3KcmTrx/NbWVr2Lf67ivKbEWp7tXUEnQNg24PKqOqrZ9a/rrv3+559/7snq4erybXWM
cT5l6aolk4dfhkPA+eHq8rdSf/rvc1MZ54ery+uz/YoWlQWPJoaTJzP+4z+U253jxzffcUfPhAk+
+0yYMOHlV1/LWzhPu3HJut1/e2DJW1879c0/569WZv02/bU3rp/IOH+1Muufcxr+76yhfJldNdZ4
0++qq0sWaDcKDQ3GJ54wNDQQEU9I6Hz6aT5mjF51kpSUdOjo8XHWhGB2lmX5scd+u2bNGknqdDpd
PT09XV1dnZ3S6tWrL7/8SiLq7Ow8depU9cv/2L9//wefvmUyGkWDKAhCetqFDz30UPmj6/3TfPXV
V1esWKFX8QEAIPps2rRpxYoVZyGw+uV//p+1a9d+2XxE3TIlY/bs2bPD7p/kNBT9k9A/xvJ+XlY+
0z1fMcAUyoB9qsOKtn+S6MLFv/zlYs8DcpQM/Lzw8qve+vOfHnuLiIguuvG+CwMULSoLHj16UlO/
vuOOsX/+MxFZvvhiwsMPn7z++lM33qjdp6/+Sc6Dmj85xBbdUFr2s+9bniMiotxnO2Z4JkkOEd+0
T582bNtm/utf1Q13skv++5c7wjxLy3/fPnRFAAAAgEEJPZ7staArvgefdZnFNS3FfT7KWN76lpb1
emeyf0Gua3Luss65/Rdz1Htc1j+6gEFrueIKl8Vy/p//LHZ2EtF5//xn0p49315/fevcuf0fyGlo
I7cgjb7jjU13eO8OdZa0qYs7dxr/53/E5mb3QwkJXffd99TcuU/pXScAAAAQQSHGk9pQ0nP5Sf2/
OcE5xL2ME8Cwd3r69IbVq9M3bLAcO0ZEpu++O99mS/3HP1rnzj31/e8HfBkLAmtuOTPrPMu+Ez16
Z//syUkzNbecGeHqMvz3fxtqatRIkohcmZk9v/oVT0vTO48AAAAQYYHjSc3Cm74C7Kx3GeBc5HA4
xo0bd+zYMb0zAjCwnpSUhtLS5L17x2zebOjqIiLzqVOjq6tHV1d35uSkp6bRZTNoxAh1/wss0pPb
P1q5ZMY1F1j0zvvZ0tbWs/2VU/945R+fH9RultPSnD/+sSsvT+/8AQAAwJAIpX+Sq38QTEKotm7d
WlBQMGnSJL0zAhC0SZOcN94o19QY/vY34YT7UoqWfftmEdGr1c4rrpCmTZPnzuVpaRX/3zV3/9dr
xRtfj/o5sWmdLXNPfDbD8cX85noiGqt5SE5Lcy5d6srN1UbaAAAAEGUicr0QIgSWMEgXjJ+0990P
9M4FwOCNSKXbfpr+yUdjPzt8/pHP1M3GvXuNe/fSxo3S6NHStGnPTpvGsybIWVl6ZzfyhIYGduCA
0NAgHjigHdSqcl1xhTR3LvokAQAAYkHE4kmA4PlcXAHg3LNwHhF1nDgh7tlj2LlTbGpSHxGbm0W7
nex2IpITEnhWljRtmjRtmjxtmt6ZDp1w4IB44IB44ABraBDOnAm4j5SR4crPl+bOxTxJAACA2BGx
eHLYXY8CAGCI8bQ01003uW66iZ04IR44IO7ZY9i7V7uDcOYMHTggHjig3JVGj6YxY+TMTJ6YKE2b
xtPShmHoxU6cUIrD2tuFxkb65puAnZAqpTdSKY7eeQcAAICzLSLxJNP8BQCIOTwtzZWX58rL6yYS
PvpIaGwUDxwQGhvVaZYKsbmZmpvV8FIhZWZSYmLPj3+s3D3L3ZiCJzOm//kfam8XGxsHPEROS5Mz
M6Vp0+TMTHn69LOZWwAAABhuwo0nGTHGGHGGcBIAgIjk6dPl6dNdN91EREpHn3DkiHDggHZMrJYS
wllWrfLZLvUbWCpdnX0+PFCnok9MOyApI0OeNk2eNAn9kAAAAKAVof5JxhBQAgD4UPotybMyDTtx
gn3zjTqUlDU3+3RgavUf8olDlmc5LY2PHu0dlDtmDAJIAAAA6EvI8aQaPSr9k4TxrgAA/VMmTPqM
ERUaGqi9XY0evTc+/njociJdeqn7hqcXVJo2jRITo3JBWgAAABg6YfdPMiLOGGPEEE8CAAyaEsKp
QabTbwcl4PTZ6F4sp680MzN5YqLvVoSLAAAAEGnhxJOMlHmTjLlDSgAAiLS+gkDpyiv1zhoAAADE
unDiSe7+r3vyJOJJAAAAAACAGCKEdBT3BpMe6J8EAAAAAACIKaHFk71gZVcAAAAAAIAYFHi8K+dc
veEv0BEY7woAAAAAABBbItA/CQAAAAAAADEo9PV4eMhHAgAAAAAAwLkP/ZMAAAAAAAAQCsSTAAAA
AAAAEArEkwAAAAAAABAKfeLJyelph44e17vsAAAQWw4dPT45PU3vXAAAAESP0NfjCUd7e/vk9LTD
x07oXXwAAIghk9PT2tvb9c4FAABA9NAnniSi9vb2qRPP17v4AAAQQ1pbW/XOAgAAQFSJVDzJQ7iA
CD7XAQAAAAAAzl3hxZOciLgSSnJcjxIAAAAAACCWhBFPck7eiJL44PsnAQAAAAAA4NwVejyphI9c
QRwdlAAAAAAAADElnP5J4sQ557LMOeOyrHdRAAAAAAAA4CwK9fqTnKvBpCTJMucyAkoAAAAAAIBY
Erh/knsGr/JAyL0AD1cCSkmWZCbLHPEkAAAAAACAPvbuq+3q7g6tn08QhDiz+YqcmYM9MKTxrpzI
E0/KnEuSLAtckjF/EgAAAAAAQAe7334naeTIuXNmJ8THh3D4mY6ODz76ZPfb7yy48vJBHRja/En3
qq6ckyxzWeZc5hzxJAAAAAAAgB4kWZ45/VKLJa6rqyuEw+MtlpnTL7Xv/tdgDwxl/qT3OiGeLkpO
JGN9VwAAAAAAAD1wzuPjLd3d3aEd3t3dHR9v4YOP6UJcj4d7+ic9EynDL3/NymSvlTWDS1Fz9Moa
RLYAAAAAAAAaVVVVL7zwQsSTDXV9VzdvLBlmDMdY3jpHVSEVVjkcjtqygwUlwYeFnNeUFBwsq3W0
tLS0tKzPYyzi1QQAAAAAAHCOqqqqEgShp6fnxRdfjGzKYVx/0i304O0rxxnlxjhrQtjZuPjCjIhV
SvjUogEAwPARiY8bAACAc0xVVRVjTBTF+Pj4rq6uF1988ZZbbolU4uHHkxRaSPmV48zUiecrt1tb
Wz2bbQVWGxEVVjmUbkbeWJE/s3Qf5ZTV7izKsJdYC2xUWFWbXT6zdB8VVjnW5ZKykWxWG1FhlWNd
HmP9H7X51HUvpzx2MGffvn2knGt9HiOixoq8maX7lC3rct1HFRbabDZ3spr8EBVWtazP88lhcaa7
KtSiAQDA8HHo6HGElAAAEFM2b97MOTeZTD09PZxzURRlWd60adOKFSsikn6Y8SQjRlyZTjmYqFIJ
JjVhpMobuRER542Vd//tplrHzgx7SX5l086idY4qshYU3F1W63BkunfLW+eoIuv2xWrIpx5Flfl3
V17rdxTnNS8T3bSx6uKZ2xc7Fm+3ltQ41uWS/Y+lF1c5duaSvcRaYnesU46ixQ7HOnuJtYQc63Kp
qfJuZaemyvw/1vDcXGrS5rBxZ5GSq0BFAwAAnU2deD5CSgAAiB0vvviiJEkWi6Wnp4cxJkmS0+k0
GAyc882bN998883hnyK8+ZOaEJKHO4MyoIb6fftKZ1qt1gLbvvoG98bCKk/Y1vdRF1+YQZRx4cV9
HuU7PpaxvHW12eVWq9VaYPNuLlyc65Ny4eJcYiyzuEaZqBkwhwAAAAAAAHp64YUXenp6LBb3qq2c
c0mSiEiSJFmWGWNVVVXhnyXM9XiI3JHkEC2pmpWdU1jlGOxCO1nZOQc/ayJq+uxgTnZWkKXgNSUz
61c5HA5HVWF/Kdu224mIGmtqGjkPNYcAAAAAAABDZevWrR0dHZIktba2Go1G7kFELperu7u7vb29
vb29uro6zBOFMd6VEXNfiZJzIk5yOPngvMYzDZLUIa+MZRZtzM63WguIKKds/45JT6Xc7LOP5kCb
Z7hsZtHGm/JnWkspp6x2Z4Z3giVpB9P6loblravabrValbu2PL7s/edfch+1mMhWYKUqx7qiVYXW
AquNKKestiaPEfXKYe0AHacAAAAAAABD7oc//KFyY/PmzYwxtYuSiGRZtlgs//Zv/xaRE0VgPZ6I
9E8ylre+pWW9//bM4pqWYvWu/z4BD+x9lO8OjOWtb8kjojzNXyLyS+nJ59Qk1Af8zuaTQwAAAAAA
gGHCYDDIsqyNJxljJpMpYumHnQInkjnxMPsnAQAAAAAAIOLUka7KbRbRAZVhxpPKgFdOJBPiSQAA
AAAAgGHGp39SECKwho4qcDypjV/Vc2sncXr3dAeTQ7S+KwAAAAAAAIROjSeJSLkEZQQTD6d/krv/
MpkY+icBAAAAAACGHf/5kxEc8hqB9XjIvR4P+icBAAAAAACGFx3GuwZFiR8ZIkkAAAAAAIBhSokn
GWMGg0G9dkikhHX9SeKk6ShFVAkAAAAAADCMiKLY1tamjSEZY4mJiZFKPyLjXQEAAAAAAGDYufHG
G4c0/dDHzjLP/5n7ZiQvYwIAAAAAAABBYox1dHSazebQDjebzR0dnSGs0xNO/yRjxJmyQJAnqgQA
AAAAAICzTBCF2o8+njVjmsUSF8LhnZ1dtR99LIiD7m4Mc7wrY4wJJDASIrjmLAAAAAAAAATv6rmX
v/H2OzVvvBnacjuMMUEQrr7y8sEeGGI8ydzL8RBjgiAIjDGRRfKymAAAAAAAABC8EKLB8IWzvitj
RIyYyESBCYxF8jIm5yiz2XzgwIETJ07onREAgFiUlpY2bdq07u5uvTMCAAAQK0KNJz0XCxEYE5go
MCYiniTas2dPenp6dna2KHp7azESGABgiGiH9EiSdPLkyT179syaNUvvfAEAAOhg777aru5uWZZD
OFYQhDiz+YqcmYM9MPT+SUbEGWOMiYIgMEEQEE9Sa2vrZZddZjabBUH4SPxI7+zAOWy6NF3vLACc
Y2RZNhgMn3zyid4ZAQAA0MHut99JGjly7pzZCfHxIRx+pqPjg48+2f32OwsGOWg23OtPMsaUwa5C
ROdPct5YmT+zdB9RTlntzqLMkLr4OK8psRbYqLDKsS5v8CmEcLgkST09PcpQq66RrghWCMSa02dO
650FgGFN6ZnU/iUixpgkSXpnDQAAQAeSLM+cfqnFEtfV1RXC4fEWy8zpl9p3/2uwB4Z7vRAipqzH
E9lRnU2VT9JGR0sm4zUr8yubaoozQ8pf3jpHFVm3h1q8QR8uSVJXV5fL5SKib8yOCFYIxJqMzk69
swAwrHEP9TYRGQwGxJMAABCbOOfx8ZbQgkki6u7ujo+3hLA2bOB4Uk2I+/HuxIg4I0aMBBbpWYKv
/o1dWERERLmLLy5/tbEoxC7KCOK8psS6fXG/fZWSJDmdzq6uLsaYo6dd3wzDOS3ktgAgdmg/mGRZ
5pzHxcUhngQAANDavn37t99+q93COU9JSbnhhhsikn54410ZMU7KVSgZRTLeq99HF6p39tUf4TV/
tN5sc49+bSixFhwsq60pzuSNFfkzS/cpmzPs7uGptdnlM0v3UWGVY12uUokl1gIb5ZTVKv2c2qOK
MxkRNVbkzSzdR0SFVY71eYyIeM1Ka4GNiIgKFytlZXnrW/L6z7bL5ZIkqbu7WxCEu46viWCFQKyp
j/uH3lkAGNY450oMqfxVbhiNRmWECAAAAChEUYyPjxdFUfmIFAThzJkzEVz7Jtz5k0SMMa6ElENX
C4zlrastOzizflVRBjW9ejCnbGNRBueNlXf/7aZax84Me0l+ZdPOonWOKrIWFNxdVutwKP2ZnBOR
jRY7HOvsJdY/1hSty6Um7VGNO4syyP7H0ourHDtzyV5iLalxrMulpsryg2W1jqIMe8lgxrv29PS0
t7d/++23giAY0rCsK4SutbVV7ywADGuSJMl+iKinp0fvrAEAAAwvjDGXy9XV1cU5j3jUFn48SRTR
nklFdo7mTk52FhHLLF5VmFxe+XOqL714lSOTMc4b6vfts820lhIpvYgZRESFVb7r9xQuztWm7XtU
JstbV/tZvtVa4NlC1FC/7+LFGYPOtsvlYowJgiAIQkJcROoWYpTQhQWTAQbg/4mofF7qnS8AAIBh
JOIr3fgIO+ZhRIOetDmwa286+Ec75eUR2bcfvOnnSnyY+/Oy8pkzC3LKatcpe2Vl5xRW7fROaAxu
+qj/UTUlM+tXORy5pPZGZmXnHPysiXLps4NEi4POtiRJStAvCEKiaIx8vUDM0F7CFACCoYx6xfxJ
AAAAH4wxn/VxIph4JPrQmOdf5GQUbczOtyYXKDMm3R2FLLN4VWHp9sXu7kfGMos2Zrv7FXPK9u+Y
9FTKzTYim5WUK3x4LvihbFlMZCuwUpVjnfao2p1FmSxvXdV2q9WqnMWWn127s6ho1cXWmdbSnJwc
2qccpUSbA67HIwiCKIqCIFQd/7/KDeWvwYDuShgMvF4ABuL/a6sgCIgnAQAA/CmdXtorbEUq5WH6
pZWxzOKalmK/7T5L4vjstb6lZX2vRPK0W/LU235p997RcyafLTTwejzJycktLS0XXHCBeg0VZeyr
ckPvSgUAiB7qYjza9Xi+/PLL5ORkvbMGAAAwjChRic8VmyNomMaT56hly5ZVVVW9++67emcEACAW
paSkFBQUoIsSAABApY0ntRsjlT7iyUiSJGnZsmV65wIAIHYhmAQAANDq7Oyk3uNdBUGI4KXOEU8C
AAAAAABElddff/3o0aPKMi4JCQna/knGWEdHx1/+8hen05mZmXnNNdeEcyJM6gMAAAAAAIgq11xz
TVJSkizLgiB0dnYqaw0IgqCsOEBEsixbrdYwg0lCPAkAAAAAABB9li1blpSU1NXV5XK5lHhSmTbJ
Oe/q6kpKSorITL2Q4knexz8AAAAAAAAYHpSQUrmooRJSGo1GWZZTU1NvuummiJwC/ZMAAAAAAADR
admyZSNHjnS5XEaj0Wg0Op3OlJSUSAWThHgSAAAAAAAgiikhZU9PT09Pj9VqjWAwSeHFkxjqCgAA
AAAAMNwtW7YsOTk54sEk9XW9EHU9Wa6h3tW7NgAAAAAAAGAQli5dOhTJYrwrAAAAAADAuY0x1tHR
aTabQzvcbDZ3dHQqC8AOimGwBxAGuQIAAAAAAAwngijUfvTxrBnTLJa4EA7v7Oyq/ehjQRx0d2Mo
8SQAAACEZtOmTXpnAQAAotDVcy9/4+13at54M7T5iYwxQRCuvvLywR4YiXiSEw26XxQAACDmrFix
Qu8sAABA1AohGgxf2PEkD3ALAIYUb6iobCoqzo22H3KitVzRCs9XCFpbW/XOAgAAQCRFZD0eTsQR
ThIRb6jIT1blVzTwhor85JV2vfIT5tm5fWVy8kp73z3m+pZu6MoVuKTJycnJySvtfR5lr6ho8KQ5
pDVjX5lsnVVaH8KBmhxGtn6C4V+HPrUUsFxn8zXmXz/+W3R/zQ/47OB1CAAAAGdTGPGkZ00eTsQR
TiqaaOl+h2NLYeEWh2P/UmqizKJVhfplJ8yzs9z1W/o9Pqt4Z8v6XP3KN1Tl8sF5w476pfsdjpaW
lvV9dMVwbq/e5r07pM977voWx6AKECiHEayf4M4eoA59Xj8By3XWXmP+9ROwxnR/zff/7OB1CAAA
AGdZuP2T3HOtSsSTRMRyi4uz3N+VWVaxZxhYvbtjJt/9qzy3r1R7MPtKSu3MUfZRjvD0eCYrfQ4+
6SiP5FfY3f9t4EGe3bMhWe3K8Jw9v/xQn4VVjtL213l7Z/P77H9o0OTGv6ScN1TkJ+fn5ycnu/+u
tCt9vCtXBs6htxT+Z/cvaTDl8kmZN1Qsss4qtZXOslr76urh9pVW63Lbe6WzrFbNcxrW8z6oo/op
qVLPAXMYQv34PxcBX3XB1KH/62fA11hDRX7yygp32n6vhH6qaMBa9a+fgDUWWn6CeV/4vAf7TbnP
Zyd2XocAAAAwfIQ93pUT99C7LMOVbRtVOhyO/WVU30TEub2keklLS0tLS0slPaWGVVq8oaKofpWy
z6r6oooGnru+ZUth4aqiTJZVvKqsbP+6hf7pZBXvdOwvo9JyqnS0tOx0R7YDnZ03VFRn729paVH2
aeBcPbvDUbm072L59E5w3rCD3Hlu2VmcFejaNbyhomjb0v0Oh2P/0m1P7fIvaWVjZtGqQlpa6dji
/nuovjGzaFWhjZY4HC0tLfuzy1fauX/9+J89YEkHLJd/yiyreIdjf1lh2X6Ho6+OKZa73uHZZ2dx
VujPexClCHRUoJL2rmf/HIZWP/7Phf+rLsg6DKZ3y2efzKJVhWqtHqq2c865/Sl3nrcUFm7xVv4g
a9W/fgI+pyHkJ8j3hc97MEDKQTw7sfM6BAAAgOEjzHiScyIllEQ82afCVcVZjLGs7KlERNRYf8i2
XPk9flaprb4pwBGNO7ZNXbJQub1wydRtOxqJaOESKq9s5A0V9dlFWYz1lc7Uskq1jzSYs7Os4nXZ
TyUnJ1uts0qV3oCmeuXs3qOCwFhWUXa1T9+jr6b6qauKshhjWcU71+f2VdKp2ZnqX08pluQyRkSZ
2VMP1Tf6HxXg7P71E0S5AubnrD3vQZUiQKYDlbR3PQd7VDDPe+/nQtmmfdVFsg4HqlXGcn+WXZ6c
nGy1LifPSSNTqxHKTzDviwDvQb+UQ3tXBkgnal6HAAAAMDyEHk9yTzApy5xzLiOeDFJm9tTCLS0e
AefjZS5aeqh6l3J7V/WhpYsyiYgW/mzptqdKnqrPXhhsOsGcndtXWquXuPtGlG9vGdnK2Tm3V9uC
LRbn9sr6nym9ClS0KPBXZ0/K5FmTI3BJ/R2qVwbd7aq2Tc3O9D8qwNn96yeIcgWbnz4y2V9gEsTz
FVQpgknZr54D5DCk+vF/LiJch4PEecOObVO3DDS1Ndha9X8GDw0u2PTPTzDviwDvQX/Bvytj5HUI
AAAAw0PI8aR70qQSSXJOXNa7KMMDb6hYtNxmW+7+4thYWW6zLV9p59y+crnNVl7ZyFjuuiXV3slS
geJwllVcmV2u7FGe7e75YSyraBUdyv6Z0jvkn05DRb4ySU2d8hTU2TOyL7Mtd/eN2EpnlexSz261
VlOhrbwycP+SfWWydbnNtlydEZdB22a505m6qlcfaaByVWe7Oy60JS3KbKwst9nKS0rKbbb2p7VX
AAAqO0lEQVTyyspq23vbdjRwTrStyGpNTk5eTlvW57JA9eN7dv+SBlMu/5Q5t5d45v71M9mPsaxF
Sw8tt1qVyg/teQ+mFL1qPr+igfN+SqrWs38OQ6sfIvJ5LvxfdUHWod/rx7dc/vv41yo17qBVS6qt
VrUYIdeqT/0E3BJSfgZ+X/i/BwO8foJ7dmLpdQgAAADDApPkLs46vfd53Jo1a+6/r1S5yzl3uVyS
JPX09HR3d58+ffq77757oeq/N2yo7JJaOXFJ4k6XFG9MfvDB1b956NEgz/qV48zUiefjMlwQjIaK
/Fml711Wtj/g7Dg4m4bbc8G5vcS63Oa+V7jFsS6X6XktxOGWH/CXlJR06OjxcdaEYHaWZfmxx367
Zs0aSep0Ol09PT1dXV2dndLq1asvv/xKIurs7Dx16lT1y//Yv3//B5++ZTIaRYMoCEJ62oUPPfRQ
+aPr+0rZZrN9/fXX3d3detdHJJnN5rFjxxYWFuqdEQDQ07baL1/+8KvjrV16ZyQyzk+Ku27GuKUz
Lwj4aJQ15gM247/8z/+zdu3aL5uPqFumZMyePXu2IaTTcfKs7Ooe7ypjvCsMlazinS3FemcCiGj4
PReM5a5vaVmvdzaGbX5geKrcsCHeYikpKRk1apTeeYmkb7/9dtOmTZUbNhTdc4/eeQEAfbz0/rHn
P3WY512eOCJe77xERsvpjj+/+5Es82Wz030eir7GPORmPLR4ksizFI/MuSTLMnEuI54EAAAYwKnv
vrvzl79MTk7u6OjQOy+RlJKScuuttz722GN6ZwQAdFN94Cvz/CsmWeN+d15n+KkNBw+cjDty+fTq
N/f6x5PR15iH3IyHtb4r18yfRP8kAADAgJxOZ0pKSldXlAwGU3V1daWkpDidTr0zAgC6aW7tFhLi
f3delIz/JKLfndctJMQ3twYoUfQ15iE344H7J9WLf/DevA8pl50kzjkp411xvRAAAIBgROtFm6Oy
UAAwWLHTFERfYx5acUIc78rdp/QEnIT5kwAAAMEK4TP786+Ov3/wcFePkzFOnBEji8k4+5Ip6WPH
6F0aAACvKAuxUNgBhTd/0h1Sei5GCeCHN1RUNhUVB3l5TAAA8NPV0/PKW3sZZye+rD/l+PpUm0OW
XcmJyWNGTdgvGPYf/uzauXPiTCa9swkAALEovPmTxNWIEs4Obl+pvWpcQ0W+evm+s6+hIt/nun8+
+bGvTLbOKq3XtcYAAIYhHrTO7u4tO18zE318uCZhojTnhhk33r7o2h9//8JrLnAkN7134CUz0ZYd
r3V2dwef5hDRu1IBQH96t0Nnu3HTO2tnr6T9CL1/kogYodPpbGO567cUrlTvZhXvbNEpJ5w37Khf
ut+xI0tzhT2f/OSub3EsWVmiUw4BAIYnzrksy0Hu/Mpbe1NHjni/cftFV2U55Z5T3c0y506pq4Od
MY1iaaNG2g/+Nf/S217Z886N86/SvVz6ZgAAhoPg27dz3aAa83NCaM14WP2TRESMMWKMEFkSefrr
8ivs7v82cHL3KCYr97W7qTtotrj3CZiOelT5IffplIR79w1WuPfydBKqKWsz4JvnlStXJnuP6vfs
7kR4Q8Ui66xSW+ksq1U9l09+AvKvDQAA6MvRL4+TYDz4ze6R2QaHs1k2OudnL/rJZffcccXKG6b9
KCk5qY2fMkzsfvfzl4mMX35zQu/8AgBAzAk9nlSCSKbeQEBJlFW807G/jErLqdLR0rKzOItxbi+p
XtLS0tLS0lJJT1U0cN5QUbRt6X6Hw7F/6bandhERb6goql+l7LOqvqiigQdIx7OPw1G51HO63PUt
ji2F6tkzi1YV2rZRpcPh2F92qNrOOef2p9xHbSks3LKzOMs/z5lFqwpttMThaGlp2Z9dvtLe39nV
HLKs4h2O/WWFZfsdjpb1uQHz48+/NvR+xgAA9BHk0KPauk9F0dU9qtkldjuNPfMmLUpPzvjbwb/8
+f0nxlszrr/kR0I8F+Po1MjPRNH5/id16oGyXFOSmpqaWlIjy9rb2sQ92wM8dDYHSgFANOFDMwJU
lhsrF6WmpqamLqps9DZr7uarsXJRpNqxQE1bhMe7qllPLamJXP1Epj0P7UkPq3+SETHGBIEpdHzt
DitTyyqLszy10Vh/yLZc6ZGbVWqrbyJqqp+6qiiLMZZVvHN9LhE17tg2dclCZfeFS6Zu29EYIJ2m
emUfxrKyp/Z97sJVxVlM3Yex3J9llycnJ1uty8lzikBHLclljIgys6ceqg9w9r5yOGj+tQEAEJOC
/Ghvc8rfdh1xmjp5nEsydZ+XOEYi5/aTf3nrdLWT98SZzafYCRYvC/F0vONgS4+k+U6w8PHmF27z
Lmd/2wvNjy/sfV6ihX84ebJZs1uY9K5UABgGhiagbNrwJK9oPnnyZPN99UUbmjxN3G0vND/+fft9
OdtufM+viYuUfsPJQZ+xsfLal3/QfPLkyZMnT75w4WeNEYqBI9Weh/achzh/0t0tSUxgJDCm/NP5
5Ts8ZWZPLdyy09ODR0S8IfvQU7soN5eI7BUVGUVFmYuWqlt2VR9a+rPMAOlkuI/i3F5toyXrgjo5
5w07tk3d4tiR2/+zc6i+gS/MYmxXtW1qoKSDymFItQEAEINcLldbW1tQu3KhjZ3kZqfL3P15d929
r18vCmKiNeGuSasZY/u+efM0O+ngUorlfEfr8TTK1ibLeUc3dXe0tbWR50agzwLvbmF/jickJOhd
tQCgs0G0b0Hj/Ojftzozb21ra2M8Z0HW7/9+4NY7JlBHN3V/8mT+rY/Sg7seSj19OsJn9ZYoPlKF
5fzo37dmLdjS1tbGiOiyH/2IIprt8Nvz0JrxUPsnGbkHujImKB2UAuJJaqjIVyYVJudXNHBORIzl
rltS7ZnAuNLOOcsqrswuV+5XZ7s7KtUt5dmVxVksQDqefazWaiq0lVc2krJ66nKbbbl7BmNjZbnN
tnylnXP7yuU2W3llIzXuoFVLqq1Wn1VY/WwrslqTk5OX05b1uf2dXc0h5/YSz/xJNVmf/PTakl/R
wLl/bfCGinzNPFIAANDq6e5iJnIanJ/3HJaNrhHnxY8cbbkr+8FLknPead7192PPGSwGc4LRKXbI
Rt7T1emXwKY7J02aNOnOTZ77/OhzP8zKysr64XNHAzS8nL9RmpWVlVVaWureSe8KAAAgoqNHPtTc
+/DIUfetTY8++uGMB//w7xPPlTCkd0HUrUrDnJVV+gbv3Q6XvuHpM+SanXpvCdyen02hr+/KiDhj
TGCiwARGIvonldVNi303stz1LS3r+9/NZ0vAdDQb3an5JKzdQXmA8+z6Wctt7scLA454bawst733
3mVl+1s8sysHOjsREfMvlV9+Am5hfWcaACB2BLkkYEfbKeu4UYf5cWZkRpPBZDIIoiEzcaqLXC8d
2yiOYAIZ4uSEDrkj1Tm2o9WhTZZzmWjFM/VrF9DuNdl2WZYl+sJ23/br7PWbx+9ec/NzTZsLJzDG
uazkR2aMaP7a+mco+y7Kra+/y3bz/buabi+cgM93AAgaH4IlT7XNlPc2yUQrnrFnPT3ELVX/o0AH
Vdje7a268Y3/enTyM/WbF9DuNdkPvl6/1tsOr929ZtKDcv3aBfSF7T5lpy9sNz/zmjRvwcDt+dkT
xvVCGDFOgjp/Ev2Tw0/AqM8HAjoAgLMvyGkqFoGdJ09ud7YlJVgFURBNBlEUfn3oDlnihiQycYMg
mS3yiOaWr8ex6V8ZjmqT5Zy4MpOJ1BtNRz78cHNudhkR0c25nI/vvZvnqJvz5nNOGdkf1jRxPl7v
ugKAc0vI0/D6TnBi5gxPa8aJz8icqLZs6bc/9oMV9//5ms13TBj+hdUWRGPBIzWNK7Kz7yJSWmZO
nnaYa1vvm/Pmc6LxhZvXEhHnA7fnZ00Y67u6/0eCgPmTAAAAwVJ+vw/GjKmTa/fUfk+8jgsuJhAR
MSaUT6t6/HtbDGZDvCkhyZjSLjsuYQs/2FM789KpPodz4r1vjM+cXrCxru7TTz/99NNH5nGfR3sf
dbTh8PTM8UFmVDkQS/IAxDyf9iQiOE+/+trDO9+QZVmW39h5+Nqr0zlXG6sLbiu68Lf3P9ckRfy8
apPYZ2GDbsw1BeENR913X3/uuSZJkqTXV+cdKaqrq6vbWODbaGtb781KDTS9/nqTJAXZng++qkNp
xsPon1R6KBl5uicRTwIAAERS5oQJAn8zrXGmdGn713F1jAlE7NXmF0QSRwpWzoSWnpPndWeOaZx9
lD6bMG6ceiDnux+acncVFXgWQKu6ewptrHvk9vKsW6ZMuZuIpj/w6gsT/zT1nirl4SlVRAUb6x6Z
7965iogKNtZhsCsADAfjby/PumXKRXcTTX9gx4vjPU0cVU2hjRupij6iRQ9l1D2yYNg3WeNv/ynd
MuWij4iICjbWrWWMaMEjG+1TpkxRdqhaQdcdqHpZKVpdrrf1Li6YcveUKqLpD+zYtIARTRiwPT9r
tRFWPEmeS4YwRrheCAAAQJDkoKfc/Gj5st8+/oerOucn5aR+RnstlqT3WuycZG50tnScmnx6Xtz7
k15/Z8d/3n9f7zTnPXzo0MOkDMbS3E6/7YVDt6k7uberOJe5TFRQefDXCxgj4rKMLkcAGAw+uCmF
QdM0XtpmjYiI3Dc5l4dilES/SQ6+sNpW2NPGzvNpjB9+3HPqeWrrrdnHfdKB2/Oz1ICHG0+qw14R
TgIAAARjUOtVmM3mVb8oefbZ506+/t2ixT8WprQLI51EJH9nlD8dsaPaPnpsx6pflJjN5vC/w3H+
r4cvLdpCVHUxr/z4V/MG+dGO8a4AMBTr8eheIhS2fxHonyQiRgz9kwAAAEMh3mL5+c/uraurq7Hv
+vT5OsYZEXHGL5oy+Se33ZKdnR2pEzE279effPJrvcsLAADnkLD7J8kTUwIAAEBwQvhJe/LkyZMn
T45IUgAAQyemGqWYKmxfAseTal8nD0TdS+/MAwAAnHt6f5hGj6gsFAAMSvS1b/2Pd42dwvYj3P7J
qKpCAACAIWY0Gh0Ox7hx444dO6Z3XiIpPT3d4XAYjUa9MwIAuhmdZP62o6s8fuz9wld65yUyHpfH
UUfX6CSz/0PR15iH3IyHHk8ikgQAABis1NTUrVu3FhQUTJo0Se+8RFJra+vWrVtTU1P1zggA6GbJ
tHHP1dZ9MWvKzy0ZeuclQjq7eW3dkmnj/B+JvsY85GY8EvMnAQAAopp2CFCYo5vuueeep59++skn
n3Q6nXoXK5KMRmNycvK9996rd0YAQDfLZqdLnL+8t/Zke4/eeYmM8xJN180Yt2x2uv9D0deYh9yM
6xNPTk5PO3T0+Dhrgi5nBwCA2HTo6PHJ6Wnt7e2hHR6peTIIugAgWhXkjC/IGa93Ls4SNOaKSMST
g/94bW9vn5yedvjYCb2LDwAAMSScYBIAAAD8hRRPcs+/MLS3t0+deL7exQcAgBjS2tqqdxYAAACi
ip7zJ/G5DgAA5xDGcMFlAACAXgS9MwAAADDcaSNJRJUAAAAqxJMAAAB96id6ZIwhtgQAgBiHeBIA
AAAAAABCgXgSAAAgKOiQBAAA8KHnejwAAADnIiWqZIwJQoCfZSXZNWfOnP9YvZIIwSdAFOCcE3Hi
nHPinBOXufseKdc7UK55wNW9OeeyLCs31MeVFkMQBUEQBeWO8hMVUx4ltBi9aa74665pHubVJSBM
c+bMkWSn/3bEkwAAAP1Ro0dyd1ESEQmCIAiCKIr++5/pbP3BdYuuX7IE3w4BogLnSnCjhpSy+57n
QdJcRo9zTjJX/6c8xokTY4IouhsOgTEmMIEJxDxtCxFajN684aQ3tEQ8qStJdrZ3tPlvRzwJAADQ
H+YhCAJjnIipwaTBYIiPS9y8afOMyy9yujqV/U93tJzpamWM4dshQFTg7r5GmcuyLLn/L8uyEmby
3ldm57Isu1yS5HK5JEmWvLGoIIhGk9FkMhqNJoNBVAiioAxzQP+kH08HsLtX2F2NMHxYzIkvvrjJ
Yk7E/EkAAICBafsnlfDSYDCYTKZLLrnkiSfWjT1vvN4ZBAAAOHtGJY994ol1o0ePRjwJAADQJyWM
9HQgKBMmGWNMFEWj0Wg2m0eOHCnJzh3b7aNTxumdWQDQF7rPIFaMSh67/Z87ZNk1cuTIiMSTHO8f
AACIMkyDPBMm1YGvymBXs9k8ZsyY+Vdd8+CDq3fvenfCmMnxcSP0zjgAAMBQiY9LTE+78LWdb69+
cHX2pCnnn39+OPMnueb/WHEJAACilhJICoIgit54UokzZVkeN27cDdff+Nhjv3/iD3/4xX2/uOWW
FcSIYSoUQLTwLgfD1XvaLeTTs9Jryp+X0nooP1G5R84rmwlTJwPxqWIYJl58cdMTTxTKsitn9pzx
48cnJCQEjic1b5sAlA5J9e3jecfoXTgAAIAhoPZJCoIgCFyNJ93LaXjW5pl/1TWnT59+/PHHHn/8
McSTANEE8aQuEE8OW+njJo4cOXLcuHGJiYmJiYmh9E9yn25J7WrJAAAA0cKzpqtIRJIkC4IgCLIm
thQYYyaTiYgEQZg4cWJHR8fYsWO7u7udTqfL5ZIkSb3+HHm+Wbq/QQLAuezAJ59Ou+Qi7ZYPP6yd
MWMGkazZJrzzzrvp6eNNJpPRaDQYDMo4ebX10LsQ55Kenh6DAZel0JmydoAoiiaTyWw2x8XFGY1G
QRDCfmI4aTotAQAAopMgKJ+j7sV4lK+GjDFJkpS7yvI8Foulp6enp6dHkiSXy+W9njl+dgWIIvHx
8SkpKdotFktcSoq19/dhwWw2JyYmxsXFaUNKdVyD3oU4l3R3dyOe1Je6lICyHJ0SUprNZpPJFNb8
Se4NJgf4pLTZbF9//XV3d7feVRFJZrN57NixhYWFemcEAPQUZe1b/y1bTBVW7T3QjHflosgEwbse
jyAIBoNBlmWDwaBcPiQuLq6np0ftn5Td163jiCcBook5Li4pKanXFrM5KSmpd/+kaDIZExIS4uLi
3F+7DQaj0Yh4MgRdXV1Go1HvXMQ0dYE65eNP+chz/w05Ufc1RolkTv1/TlZu2BBvsZSUlIwaNUrv
qoikb7/9dtOmTZUbNhTdc4/eeQEAfURf+9ZPyxZThfXgjBHnnDFijARBmfskqB2Soigq+7lcLqPR
6HQ6lV9tXS6XGk8qISVhvCtAFDGbzSNG9FrM2WQyJSaOYMwbT3IumExGi8VisVjULkql3XAPdUBr
EDQlbtE7F7FOne6hvIaVz8Ew+yd7dVD2E1Ce+u67O3/5y+Tk5I6ODr3rIZJSUlJuvfXWxx57TO+M
AIBuoq9966dli6nCqjwrZzBBEDjnoiioE0iU0WvKbgaDQZIkJaRUOicRTwJEMaPRFB8f33uLMT7e
0juedF9VKC4uTumiVOJJdbQ8WoNBQTypO208qXRRhhdPcu9/BwwonU5nSkpK1Hz/UHV1daWkpDid
Tr0zAgC6ib72rZ+WLaYK66GsDiAzxpV/gsAEgdTfZZUhr4wxzrkkScqcSXXypBpPkme9dHx9BIgO
JpMpISFBu8VoNCYkJPjHk3FxcUr/pDLk1WQyqVMo0SAMitls1jsLMU17KWZ1EQH3xOCQE/XMmwxq
eddonToSlYUCgEGJvvatn+LEVGG9mPsvc493Je1Ps8pXQ6VmlDDSaDRqg0l1CqXeZQWAiDGazH3E
k5K6hXODwWBUOifVIa/KlDPEkyFAPKmv3pfOErS/q4a3UBL3XH6SD3y9kBA+Sj//6vj7Bw939TgZ
48QZMbKYjLMvmZI+doye1QkA0FtMhQqxVVjlHyOZc86IM2KCQJ4FCbRD14hIWetV7ZlUF+NBPAkQ
fcwm3/mTZrNpxIgRveNJUZk/GR8fHx8fr3ZRqkvyIJ4MHmMsLi5O71zENDWe9B/1GpHrhXhuRU5X
T88rb+1lnJ34sv6U4+tTbQ5ZdiUnJo8ZNWG/YNh/+LNr586JwyhqAAAYSpyU30tlYpyIM4GUHzeV
lQYFQZBlWZIkJaRUgkZth6SW3kUBgEgyBh7vGu/XP+ke76pQrq+gfANHPDkosiwjntSXTzyp/Cbi
vqpqeCnzALf62jXoT9Ounp6tNa+nxFv2H64Zf9HYC+fNMImmTmfnd63NXxxr+uJA3bzvLduy47Uf
5l+DkBIAhoOYihZiq7DEiZFMnJi7rzLgT7Mmk0ldWkO5dogaVWo7J7EeD0DU6GP+ZCJjLnWLEk8q
6/Goq7wqq/IgnhwsSZIsFoveuYh12pBSiSfdC72GmW6QXyuUz9Qg03zlrb2pI0e837j9oquynHLP
qe5mmXOn1NXBzphGsbRRI+0H/5p/6W2v7HnnxvlX6VmpMfa9CgACGlT7dk7of/5k7BTWu4/yWeeZ
Rck1a9wpv84qlK+GShVJkqQNJhFPAkSZPtZ3jQ8ynlQGOKA1CJ7L5UI8qTv1EpTakFIQhLDHu6oh
ZYQCq6NfHifBePCb3SOzDQ5nc3xcwjUXXpeeNJETHWtpevnTTV87vjRM7H7385cvGXfdl9+cuGBM
mn61CgAA0Y2rl6AkIsaUT1NSVkg3mUxmD+U3WuUYJZ5ULxOiRuCIJ0EvLpcrAlOcwMPlchmMBp/h
l8rQVsa860VzbjQYRJOH0lbExcVpLxmid1HOGd3d3RjvOhwIgkCeH1XVy95EqHEJIpgMsiuvtu5T
U7ype1QzE81Oozhv0rL05Iy/ffK8o/Pbf8/5xfWX/OjZ/b8XZTo18jNRdL7/Sd24tNGe9O33nXfL
X+i2F0/+YSHtUm/nat6rnn2I/B4CAAjZUAxV4Lxp4w9yVr9PNPs3+165e6K7WSOl+cra+IOc1VN1
acdCKKz9F6OUrNNtL377RG6EsnFW23PliiDkiQbVH2jVazqrFygnzZBX8qyIi8EsoC9BEIxGo965
iB6CIBhEg89yo6JoMJtNjAnqFs4NguBeuMvUG+LJwVKicb1zEeu0F01VZ39ELp4MQpCfpm1OmbqO
OOM7zXGiZOo+L3GMRM7tJ/8ic/kn/P+PM5tPsRNx8fGCTMc7DpqckzTJLny8+QUa/Yqy3CzRbS80
P77Q97wL/3Dy5OPcfr97NwCACBiK5qRpw5O8ovlkBuP2+67b0PTKPe4m7gfNj3/fft/obTe+13x3
hh6j7gd7xqYNP3j5B80n/8CIyL5hQ6P8/YzIfIU62+25NqTULpsuagiCwDlX1uYhT88kPm1Ad4gn
I0sQBNHgG08aDKLZbGZMVLdwbhBFQRtMKkER4skQKBWody7AexVK7d+IxJMDf1K6XK62trbgEhPa
2EludrrM3Z931937+vWiICZaE+6atJoxtu+bN0+zkw4upVjOd7QeT6NsbbKcd3RTd0dbWxt5bgR6
o3p3C/tt7DMVGwBi0CDat6BxfvTvW52Zt7a1tTGesyDr938/cOsdE6ijm7o/eTL/1kfpwV0PpZ4+
HeGzevTTsg22sJwf/fvWrAVb2traGBFd9qMfUUSzHX57PqhmnDGmfuKpXwS1fZXKh6s6W1IZAYv+
SRgOMN41spQrBmm3KEG7tini3KidYq0Mc1X/Ip4cFKWbV+9cxDpt/6R2tM6wa1x6urtYEjkNzuae
w4KRjTgv3iAKd2Y8eMnInL0n7H8/9pzBYhBNgrOjQzbynjOdfglsunPSJiIiWpFPRET86HPLFz76
Ic14cNeWf5/o+77l/I0HJ925iVasWLFp0yaa8eCurf8+Ue86AAA4euRDylTvfXjkKNEEIqJNjz5K
Mx7c5d+aDVe9C6Jufe6HCx/9kIhW/OnIowt2a9rhFX868ujVysI27tabaMWfGsqupoHa87ND+/1P
uyqP2lepPoowEoYVfBePLGUgq3aLEmH6x5Pea/RpgknEk4Ol1JveuQA3n8AyEvFkcAvyBLkkYEfb
Keu4UYf5cWZkRpPBZDIIoiEzcaqLXC8d2yiOYAIZ4uSEDrkj1Tm2o9WhTZZzmWjFM/VrF9DuNdl2
WZYl+sJ23/br7PWbx+9ec/NzTZsLJzDGuazkR2aMaP7a+mco+y7Kra+/y3bz/buabi+cgLc3AAxG
xJc81TZT3tskE614xp71tK4t1aAK27u9VTe+8V+PTn6mfvMC2r0m+8HX69d62+G1u9dMelCuX7uA
vrDdp+z0he3mZ16T5i0YuD0fCszzr/dWzUcpaboolf5JTzERTMJwIcuy9scOCJMsyz6/HxGRstwl
Y9rvpaLPwHifEfKIJ4OnXfMMhoNIx5PBCfKT1SKw8+TJ7c62pASrIAqiySCKwq8P3SFL3JBEJm4Q
JLNFHtHc8vU4Nv0rw1FtspwTJ66cyXOj6ciHH27OzS4jIro5l/PxvXfzHHVz3nzOKSP7w5omzsef
tUoBgKgQ8ciB84mZMzytGSc+I3Oi2rKl3/7YD1bc/+drNt8xYfgXVlsQjQWP1DSuyM6+i0hpmTl5
2mGubb1vzpvPicYXbl5LRJwP3J6fZUxDWZNAG2cinoThw+fHDgiTuhKJdqOnHdD+qCT4NA4+IxoQ
TwYPr+HhLMR4knv+Bbt/0JcsmzF1cs3ud773/esahH8xwUhEjAnl014kotVHbzHLRrMr/lTnyUvY
wg/21F678Cqf/klOXPkV33NjfOb0go0vPrJAecdyLnPu3c19rTDP3S8aDk/PvHMwv3Pj6wIADM0l
GdOvvvbws2/I8xYwvnvn4Wt/ms657GmsLrit6MIp9z939YuFE4bku0hErz+ZfvW1/PWj8rwJjIh2
22wTb799PL35UN6Rorq6+fTmQ1PsvRttbeu9eecbD89bwD7fvZvmzx8fRHse2cIOlk88qa7fA6A7
nx51CJM6c8xno189M+0cs4D0Lso5A9U1nA27+ZOZEyYI/M20xpnSpe1fx9UxJhCxV5tfEEkcKVg5
E1p6Tp7XnTmmcfZR+mzCuHHqgZzvfmjK3VVU4FmKvuruKbSx7pHby7NumTLlbiKa/sCrL0z809R7
qpSHp1QRFWyse2S+e+cqIirYWIfBrgAwHIy/vTzrlikX3U00/YEdL473NHFUNYU2bqQq+ogWPZRR
5wmuhrHxt/+Ubply0UdERAUb69YyRrTgkY32KVOmKDtUraDrDlS9rBStLtfbehcXTLl7ShXR9Ad2
bFrAiCYM2J4Pt9rAtx8YJvBdPLL6igb940nqN5jEkxI8VNdwFjieVH9S5X6IfPolOQXXURn8T9o/
Wr7st4//4arO+Uk5qZ/RXosl6b0WOyeZG50tHacmn54X9/6k19/Z8Z/339c7zXkPHzr0sDv3mtvp
t71w6DZ1J/d2TVFlLhMVVB789QLGiLgs4+dkABicIeifJCJN46Vt1oiIyH2Tc/ms94ANvrDaVtjT
xs7zaYwfftz9OM1TW2/NPu6TDtyeR7w23COOh7BCAQAAzmVh9E+6Zx+Sf4gZYN/BDJEym82rflHy
7LPPnXz9u0WLfyxMaRdGOolI/s4ofzpiR7V99NiOVb8oMZvN4X+H4/xfD19atIWo6mJe+fGv5g3y
lw+MZQKAoRnvqnOJUFj3o+5/3GcLAAAAKMIZ78ppyH6zjbdYfv6ze+vq6mrsuz59vo5xRkSc8Yum
TP7JbbdkZ2dH6kSMzfv1J5/8emhKAQAA5zROnJMyjEWzDRElAACAx9mbPxnCT9qTJ0+ePHlyRJIC
ABg6MdUoxVRhlYke2niSM1xVEgAAwCu8eJKpV+YaYJhotF7WOSoLBQCDEn3tW//jXWOnsETEZc5l
LmkXEhejrQYAAADCEU48yYg4MTWW7DOkNBqNDodj3Lhxx44d07u8kZSenu5wOIxGo94ZAQDdRF/7
1k/LFlOFVSiTJ3tdmEpAPAkAAOAVRjzJiHH3f4lRPwvZpKambt26taCgYNKkSXqXN5JaW1u3bt2a
mpqqd0YAQDfR177107LFVGEVSnesdt1vzolzcmk4nU6DwaAsZC/LMla0h+HJ6XTqnQUAiE6hx5OM
iBMx5vnXd//kPffc8/TTTz/55JNR1pYZjcbk5OR7771X74wAgG6ir33rp2WLqcL2758v74qzWOLi
4owmk9FgNBhNoiiKoogrpAHEMCzWBTEqzPmTjHFSPjz7/wBF0AUA0Sqm2reYKiyRe/CNf4h4S8EN
Vqt15MiRCQkJFovFYrGYTCaj0aiElHrnGgB0hJASYk6I8SQjz3hXRgJj+EUWAACiD2PEGBMEptmC
zzsA6AfvfRvhJUS/cMa7Ms6453dbfLwCAEC0UaJHQRB8tuidLwAYhrjnH5oIiC1hjXdlniVelV9w
9S4LAABAZDEiJjCh13298wQAwxv6JCG2hDd/0t0vyQnBJAAARB3PmnPazziGjzwA6AvHeFeIPeHG
k0Tqejz4fAUAgKjiHu+q6ZJU1p97e897CYmJFkt8XFycyWQymUwGg1EURUEQ8GkIcA5ZvmzJUJ/i
m2++6ezsbGtrs1gscXFxcXFxRqPRaDSiucjMzNQ7CxAZg44nY/ylDwAAsYZpxrsSZ0TsyrmXYX1X
gHPdlpeqz8JZxowZg+bCX2Njo95ZgIgZRDwZyy96AACIQcpwV5G88aRATKBeq5rjwxEAVNrrsXNM
uIbYEGw8OdDnpTznsjlrf/tQwMc4EfEBho/j83jQWO8/Q4v39QRyn5kCpPmexZh6GOeccyWZXkkp
E5Pcq/ErV54hxnoPLePaswWaiKCtBBZWbahZ4/2fZaDrrQaqpaDy38eD3jt4mwCcVXMumyMwRpp4
0j3i1bOyOT68AKJSw+df7Png4zOdXZxLxJkgComWuCtnzZh4wbggjkazAEPu4X3r6h0N33aeCieR
UZaUbGvWr3JKwszMwPGk9sPSZ9l0lUvuWXL9dUuuH/Ix6OAVOJRkfd4JGg94U3u/1x4B40lSIi7u
2YF79Trec+1SJgiMMc+lTL3RmjvK4p6zqkdyzol54yu1Mnpv6bfuepdME0kqJ+odQiuThN3HurPH
gkrck5rmLN5K8yY7cG79n/Agnl8W4mMAoGBEJIm94kn3HeUDEfEkQJTp7O5+qeY1V4/r+Od1pxxf
n2pzyLIrOTF5zKgJuyW+58AnNy282mI293E0OiThbFi15zc3Z19fMvOuUZaUcNL5tvNUvaNh1Z7f
lM9dHU46QfVPqhfgEkVRFEXuMrz91t5ZV1wic5eyg1PucspdZ6sOwbdzknkiKeb/WEg0oZu2i1F9
1B1zcc9fdxc0J2IkCIIgCEwQiIjLssw5l7ksy5IkKX+1gZrAmGgQRdFgMCgvLkEQRZGJgiZsIyKZ
ZE6cE5eVDk5PtMe0iDESBE/3ZhCXf/Km740hSZZJlrisZFzNqfuLoyAImlOocW+vwNMvfU5cJlkm
mZMsu2uEZM6V4jNBEARtl2yvmF1zIiU19dRExPrq9Gd+95g3P9ovv/jMAwiSGk8Ku998m8hkMBiU
YFKNKhFYAkSBzu7u5//2zySz6ePD9vEXjb1w3gyTaOp0dn7X2vzFsaYvDtTN+96y51/65+3Lrg8U
Uvr/2ozwEiJv1Z7fPLHg19oLWYVslCVllCXl8rGzVr7x0ONXPhRyOoOIJ5VPTaPROG/evL/+9X/m
XPlEj+Q6a3UHPjTBJCPv/8g3sKTBN2VcSVeJFpkyatUTnrn7BT0beO/jvKM23Udz8oSTXlz2Lp/N
BYEkxkiSNCNJmciIBKYJCTlxmcucc3eU58mRluDtF+2ni9L/IW0gx92xnyxJLknmSuDMSLn8HOci
Kd8q1UG53DuMVQ0AvcGbtz7ckaosS2odyJyIBFEQOOfck3dNfWpDWU2XrzaqDBxOeh5Qc6KNrJnP
qN1QX30AMUv83//93+99b7bBYFBCSiWYVG7onTcACNdLNa8lJ8S/37j9oquynHLPqe5mmXOn1NXB
zphGsbRRI+0H/5p/6W0v7Xr93667tu9k8PEKQ+X+tx+569Ifq8FkdWPN+ycOfH3mxGDTGZuQNjtt
2pLMPCISmHDnJT8Kp5cy2PGuyldapSNpxIgRMpfe2/NBztwZTqlTxzqNWb17Jsl9dTRvZOnthQql
SWPugIQpcSFnxLgSQbqDSM59w5m+Z1dyzrknCFSCSZnL6g6CLMuMSYyR5Dm5kn+BK12OykZPRKqk
RX4RJTHGZEEQmCwLAXoJ/KNHT4+fegp3YMjJ3ZUquSRJlsk9ZJcJjAmiyDkXRZELrFf8Tt6BvNrg
XiCBEROIeYNJSVI6aJWokogJsiCIgigIyvUI1JBSHR3L1F8MvJfl8VSMT0cmeStQGzeq8aeSJc2L
x6eW8OEHMCDxzTf3EvFLLrmEMaYOq1AXaUQXJcA57cjRL3pcvPHk7pHZBoezOT4u4ZoLr0tPmsiJ
jrU0vfzppq8dXxomdr/7+cuXjLvu6Jdf9TGXEu0ADKHG1i8yk8YTkUt2Pfj27xtbPh9pTDQyg3dG
WK+pW54Rh8rYPnVoIdGnXUc+OPHxv75679Er/8MgGCYlTzzScjTkXP0/okIfNIgep+EAAAAldEVY
dGRhdGU6Y3JlYXRlADIwMTYtMTItMDNUMTM6NDk6MjcrMDg6MDAerEjmAAAAJXRFWHRkYXRlOm1v
ZGlmeQAyMDE2LTEyLTAzVDEzOjQ5OjI3KzA4OjAwb/HwWgAAAABJRU5ErkJggg==

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/blog-icon-reply.png

iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAIAAAADnC86AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAyJpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdp
bj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6
eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2LjE0
NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJo
dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlw
dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAv
IiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RS
ZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpD
cmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNiAoV2luZG93cykiIHhtcE1NOkluc3RhbmNl
SUQ9InhtcC5paWQ6MDU3N0IzQUZCQkMzMTFFMzhERUQ4NDA5QTM1Njc1MTYiIHhtcE1NOkRvY3Vt
ZW50SUQ9InhtcC5kaWQ6MDU3N0IzQjBCQkMzMTFFMzhERUQ4NDA5QTM1Njc1MTYiPiA8eG1wTU06
RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDowNTc3QjNBREJCQzMxMUUzOERF
RDg0MDlBMzU2NzUxNiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDowNTc3QjNBRUJCQzMxMUUz
OERFRDg0MDlBMzU2NzUxNiIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1w
bWV0YT4gPD94cGFja2V0IGVuZD0iciI/PrioHQwAAAFUSURBVHjaYkxPT2cYCMDEMEBg1OJRi0ct
HrV41OJRi2licXxPT62goOAA+JiHR7q9rTXdyYmJiYnuQc3IZBgW1tdaIScnR5o+klogjIyMOjo6
ZmZmmgYmPKyMKHL//+3bf2Djxo0/f/4kxigW4m3l5OTMympUVeXD5XUnJydDQ8MVK1ZcvHiRakEN
jMWMylactsKAoKCAKxcXNX3s4JCqLkbIxD/fm9q6nz17Rk2Lnfz14OyPd5dMWHL33TuPiRPN4YLf
Xx8vb17+69cvIg0kymI2NjYRdmYg4+7ixd1Hj8KE/8HT1amFi+YdP05SqmYhLr+6AUlgit2OsBVm
+a9PLR0TiAxeki3+8+ffu3cPdu7ciSr8+MEDhr4+EoIXGTCbmJgQVPT//8MHD56/efMGVfj+kSMX
//79S8MiE+inW7dujdZOoxaPWjxq8ajFI81igAADACNfcOuEJwsaAAAAAElFTkSuQmCC

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: image/png
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/images/top.png

=89PNG
=1A=0A=
=00=00=00=0DIHDR=00=00=00(=00=00=00(=08=02=00=00=00=03=9C/:=00=00=00=19tE=
XtSoftware=00Adobe =
ImageReadyq=C9e<=00=00=03"iTXtXML:com.adobe.xmp=00=00=00=00=00<?xpacket =
begin=3D"=EF=BB=BF" id=3D"W5M0MpCehiHzreSzNTczkc9d"?> <x:xmpmeta =
xmlns:x=3D"adobe:ns:meta/" x:xmptk=3D"Adobe XMP Core 5.3-c011 66.145661, =
2012/02/06-14:56:27        "> <rdf:RDF =
xmlns:rdf=3D"http://www.w3.org/1999/02/22-rdf-syntax-ns#"> =
<rdf:Description rdf:about=3D"" =
xmlns:xmp=3D"http://ns.adobe.com/xap/1.0/" =
xmlns:xmpMM=3D"http://ns.adobe.com/xap/1.0/mm/" =
xmlns:stRef=3D"http://ns.adobe.com/xap/1.0/sType/ResourceRef#" =
xmp:CreatorTool=3D"Adobe Photoshop CS6 (Windows)" =
xmpMM:InstanceID=3D"xmp.iid:44FC3851BBC411E3905BE64DDF9843EE" =
xmpMM:DocumentID=3D"xmp.did:44FC3852BBC411E3905BE64DDF9843EE"> =
<xmpMM:DerivedFrom =
stRef:instanceID=3D"xmp.iid:44FC384FBBC411E3905BE64DDF9843EE" =
stRef:documentID=3D"xmp.did:44FC3850BBC411E3905BE64DDF9843EE"/> =
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket =
end=3D"r"?>=0F=1B=FB=F5=00=00=00=9DIDATx=DA=EC=D7=ED	=80 =
=10=06`=ADfq=02=C7h=0F=17t=1A=A7I=12D=B2=F3=E3,=8Cx=EF=87=88=C8=3Dx=CA=81=
=D2=18#f=C4"&=05`=C0=80=01=03=FE-=BC=9F1=02o=83=AA=B5=96=07=AFZk=B6=AA=94=
=F2=A3s=EEu8=AF0=DB=EE=80=A9{=E5=D9=ADp=F951=EC&8W=FD=9B=F2L=F0xv=1D=BEU=03=
=1C=3D=86]=81)5=CCG=EC=BE=06=92=AA=D4=CA3=A5N=CFD=19-{8=9D+&*dl=D9s	=
=89=9F=04`=C0=80=01=03=FE=1C|=080=00=B6=1Ea=A5{=B0=C2=D5=00=00=00=00IEND=AE=
B`=82
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://avatar.csdn.net/3/0/1/1_catoop.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD//gA7Q1JFQVRPUjogZ2QtanBlZyB2MS4wICh1c2luZyBJSkcg
SlBFRyB2NjIpLCBxdWFsaXR5ID0gOTAK/9sAQwADAgIDAgIDAwMDBAMDBAUIBQUEBAUKBwcGCAwK
DAwLCgsLDQ4SEA0OEQ4LCxAWEBETFBUVFQwPFxgWFBgSFBUU/9sAQwEDBAQFBAUJBQUJFA0LDRQU
FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU/8AAEQgAlgCW
AwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMF
BQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkq
NDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqi
o6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/E
AB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMR
BAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVG
R0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKz
tLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A
+p/iN8Mvh14u+Kt1Z6nd6/4TM2liaR7O5nsozN5xAdeqMSA+eCMKPXnovC37OHgmx1HStR0XxrrV
xd6eFWMtqiSpJhiRvQAAnnrweBXT+N/hdF8RPEdr4ihuntNQtIfsf2WTGx0DsSc9QcO3r0H1rx34
ofAPx7efFiDXtDsTNpEeiQ2RMN4iN56QzLnYWGfmaM5/wrWGqtexpNU0o8jvda+Tu9Pusdr8cf2a
fEfxN1PR77RfGjaSNO05LH7KyyKkxDMfMLI/BIIH3T0rwbxJ+yX8adLU/YtR/tgDp9i1dlJ/CUpX
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

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://c.csdnimg.cn/jifen/images/xunzhang/xunzhang/zhuanlandaren.png

iVBORw0KGgoAAAANSUhEUgAAABUAAAAYCAYAAAAVibZIAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz
AAALEgAACxIB0t1+/AAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtzIENTNXG14zYAAAAW
dEVYdENyZWF0aW9uIFRpbWUAMDkvMTAvMTSoU35bAAACHElEQVQ4jbWVv2tTURTHP+82iRUyNENN
NRZihJulVVtwdC0kgzWLuPkDK+oadKvSFgR/4SCIUnHxHxAp7+HiYqOlTjqIRlKt1FSSBtImaWiS
vjjkNSTp47YN6Xe775z34XvOu+8crVqt0mlpqqDUDTdwC7gCHAWWgFfAw3g4lN8TVOqGA7gKTACH
bFJSwF3gZTwcquwIlbpxFngABFVVWPoB3I6HQ29toVI3TgOPgTO7gLXqAxCNh0OfATSr1GfAWBuw
Vk0DNwUw3gi80N+PS4h2oWPAuCZ1IwX0AtwbHCTiO0IiX+Di/DyZUoloUHItEFCSvmSznP80t3VM
O7aAAHOZDOHDfSQKeTKlEgAzyWV+5QtK6IqVa6lXk7pRv/09Tif5SoUel4uVjY3dlrxNjsZDtlwm
GpS8SCzUnzmF4GBXlxJSNk2Km5v20KfDQ4x4vUR8PkZnY7WeSsnlY34l9NvaGpHYR3vou+V/SLeb
r6ur9Z6+XlzkfSqlhOYqzT9VU0+dQlAxTZxCUDJNJUilJqdOTePR0CmexH/yu1D74h6Xi77ubrXT
cpmlYtEeev/kCUa8XoY9Hs5ZPb1+PMAlv18J/Z7LMToba4Kmse7qTDLJASH4s75e7+nzxAJv/iZ3
dNqgtCZ1YwK4o3xrb5oUwBS1QdAJTQNT+zP6WqOdGNLbZpyVMADcoLY27JSy4gOtQFunLa7bW3z7
saL/AxYTzWdL9R0nAAAAAElFTkSuQmCC

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://c.csdnimg.cn/jifen/images/xunzhang/xunzhang/chizhiyiheng.png

iVBORw0KGgoAAAANSUhEUgAAABUAAAAYCAYAAAAVibZIAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz
AAALEgAACxIB0t1+/AAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtzIENTNXG14zYAAAAW
dEVYdENyZWF0aW9uIFRpbWUAMDkvMTAvMTSoU35bAAACHklEQVQ4jbWVTU8TURSGn4GpdGCwNf3y
o1aEWLGBGDWEjSYuXLioJl34B4wsYGu0KzQuq3ErC4xrExc1pksWRuOCaFQSY7DIh0qqtkhTNDjI
dC4LWtNOZ0YQOLv7nvc+OSc591xJCMF2h+SUzCTTKnANuAyEgXngAXAnnkr82hQ0k0zLwBXgFhC0
sOSBm8D9eCqh/xOaSaYvAreBo05dVOIDcD2eSjyxhGaS6T7gLnBmAzBzPAeuxlOJlwBSpdV7wEDV
ETq2l4N9hyj/KfPm4Sui57ptaWXdYPpptnocBYZkYLgK3L3fQyzey8LHAqHYPnRtFYAjDlBdW62F
DgBfZWCwqrjcLnydfhZnFuouTjx6bQs1yoZZGpSBgN0F2e0idqEX1a+iBtstPcUvRXJv52ulgGxb
AiCEQCtp+Dr9KHtaLT3LxeXGYpyg5RWdmWdTHDgRBmBqbJLs2CQAxy+dJHwqYnnPEWqOrrNRDp/u
AqDZ1Wzr2xR05af2t1012E6L2rJ1aCGb59P4LADd52MEoqGtQyP9HUT6O+o0Q28YqY1Bv7//xlKu
1KALIfg8PtegNwEFJ6DiVVC8imVOkiSrCSjIwAhwA0Ar/Wb2xXTdK3G17rIdHVh/pu8eT9RKI5YL
xe1RaPO1IQzBUq6EJ+y1hQpDsDj3o3ocBYZ2ZvWZs9uxpJvMroqhh/XtlbeB5Sv5HjPQslJT1f/3
8e3EF70G9jy7w7WEojMAAAAASUVORK5CYII=

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://c.csdnimg.cn/jifen/images/xunzhang/jianzhang/blog7.png

iVBORw0KGgoAAAANSUhEUgAAADAAAAAQCAYAAABQrvyxAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz
AAALEgAACxIB0t1+/AAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtzIENTNXG14zYAAAAW
dEVYdENyZWF0aW9uIFRpbWUAMDkvMTAvMTSoU35bAAAB7ElEQVRIicWWv0/bUBDHPwYn4GCplqoK
VCxFahKkIIZ2qrKwsYSta5nZjJA6eo7EwhR1KHOXLlXHjvkLOnSJ1EyRSCuYDMK8NuXXgGzs5+fg
gOt+pQw537v3vbvvna0dOW+vKQjlRhPLcfG6HcaDfi4xZ3KJMiUsx6XcaOYSq9AExoM+XrcD5JdE
4R3ImsTl1RW+EMpfFFp0BjSjQsmuJoL9PRxSsqsJ3d7nryIfIJgHQDkTvhCMvFPM2goAs/MGxnOb
wy+fWK3X1AnMrb3iyfa7xMVet4PluBzvbMXsaf4nB/tKu3x+UhK+EJw8XeLl3vvYmV67FUtAjz68
/vM7dlH0AhXS/GV7GgI5WY6L5bicff7Iee9r+Nz7/o1eu4W+YLK0sUl9ezcRIz4D5fmQSLnRRF9O
yiBvjAd9vA/7AJhv7hJeMAxW67UY+V67lTgf64D+bBFgYtUfgmBWVLtfMyrhvSqYtZUY+ah8QOrA
xWgI3Lb+eGcr3BaPRcmuKouiGRWM1+th5aOS84Xgx68jzBeN0CaTB6kD2tydhIBQQrJ9Wn+VFCeR
DyBXXwXlEMvVSrNH93kW/2nIy1BVH6Q1WgSykveFYDj6Gf5PS0BXWv8hSnY1U+WDLXQfCv2UiL5X
ssgmC/7L12he5AFuAMQE1wfxk/E0AAAAAElFTkSuQmCC

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://img.blog.csdn.net/20160127143219936

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
/wHKnEVB9iJBkgAAAABJRU5ErkJggg==

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/public/common/toolbar/css/index.css

.csdn-toolbar {
	BORDER-BOTTOM: #e9e9e9 1px solid; PADDING-BOTTOM: 0px; LINE-HEIGHT: =
1.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: "Helvetica", =
"Tahoma, Arial", "sans-serif"; BACKGROUND: #fff; COLOR: #333; FONT-SIZE: =
0.75em; PADDING-TOP: 0px
}
.csdn-toolbar * {
	BOX-SIZING: content-box; -webkit-box-sizing: content-box; =
-moz-box-sizing: content-box
}
.csdn-toolbar *:before {
	BOX-SIZING: content-box; -webkit-box-sizing: content-box; =
-moz-box-sizing: content-box
}
.csdn-toolbar *:after {
	BOX-SIZING: content-box; -webkit-box-sizing: content-box; =
-moz-box-sizing: content-box
}
.csdn-toolbar DIV {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar DL {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar DT {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar DD {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar UL {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar LI {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar H1 {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar H2 {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar H3 {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar H4 {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar H5 {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar H6 {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar PRE {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar CODE {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar FORM {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar FIELDSET {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar LEGEND {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar INPUT {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar TEXTAREA {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar P {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar BLOCKQUOTE {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar TH {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar TD {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar TABLE {
	BORDER-SPACING: 0; BORDER-COLLAPSE: collapse; TABLE-LAYOUT: fixed
}
.csdn-toolbar FIELDSET {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
.csdn-toolbar IMG {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
.csdn-toolbar ADDRESS {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.csdn-toolbar CAPTION {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.csdn-toolbar CITE {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.csdn-toolbar CODE {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.csdn-toolbar DFN {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.csdn-toolbar EM {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.csdn-toolbar STRONG {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.csdn-toolbar TH {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.csdn-toolbar VAR {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.csdn-toolbar UL {
	LIST-STYLE-TYPE: none; LIST-STYLE-IMAGE: none
}
.csdn-toolbar CAPTION {
	TEXT-ALIGN: left
}
.csdn-toolbar TH {
	TEXT-ALIGN: left
}
.csdn-toolbar .clearfix:before {
	DISPLAY: table; CONTENT: " "
}
.csdn-toolbar .clearfix:after {
	DISPLAY: table; CONTENT: " "
}
.csdn-toolbar .clearfix:after {
	CLEAR: both
}
.csdn-toolbar .clearfix {
	OVERFLOW: visible
}
.csdn-toolbar .col-sm-2 {
	FLOAT: left
}
.csdn-toolbar H1 {
	TEXT-ALIGN: left; LINE-HEIGHT: 1.5em; MARGIN: 0px; FONT-FAMILY: =
"Helvetica", "Tahoma, Arial", "sans-serif"; BACKGROUND: none transparent =
scroll repeat 0% 0%; COLOR: #333; FONT-WEIGHT: bold
}
.csdn-toolbar H2 {
	TEXT-ALIGN: left; LINE-HEIGHT: 1.5em; MARGIN: 0px; FONT-FAMILY: =
"Helvetica", "Tahoma, Arial", "sans-serif"; BACKGROUND: none transparent =
scroll repeat 0% 0%; COLOR: #333; FONT-WEIGHT: bold
}
.csdn-toolbar H3 {
	TEXT-ALIGN: left; LINE-HEIGHT: 1.5em; MARGIN: 0px; FONT-FAMILY: =
"Helvetica", "Tahoma, Arial", "sans-serif"; BACKGROUND: none transparent =
scroll repeat 0% 0%; COLOR: #333; FONT-WEIGHT: bold
}
.csdn-toolbar H4 {
	TEXT-ALIGN: left; LINE-HEIGHT: 1.5em; MARGIN: 0px; FONT-FAMILY: =
"Helvetica", "Tahoma, Arial", "sans-serif"; BACKGROUND: none transparent =
scroll repeat 0% 0%; COLOR: #333; FONT-WEIGHT: bold
}
.csdn-toolbar H5 {
	TEXT-ALIGN: left; LINE-HEIGHT: 1.5em; MARGIN: 0px; FONT-FAMILY: =
"Helvetica", "Tahoma, Arial", "sans-serif"; BACKGROUND: none transparent =
scroll repeat 0% 0%; COLOR: #333; FONT-WEIGHT: bold
}
.csdn-toolbar H6 {
	TEXT-ALIGN: left; LINE-HEIGHT: 1.5em; MARGIN: 0px; FONT-FAMILY: =
"Helvetica", "Tahoma, Arial", "sans-serif"; BACKGROUND: none transparent =
scroll repeat 0% 0%; COLOR: #333; FONT-WEIGHT: bold
}
.csdn-toolbar H1 {
	FONT-SIZE: 3em
}
.csdn-toolbar H2 {
	FONT-SIZE: 2.5em
}
.csdn-toolbar H3 {
	FONT-SIZE: 2em
}
.csdn-toolbar H4 {
	FONT-SIZE: 1.5em
}
.csdn-toolbar H5 {
	FONT-SIZE: 1.16em
}
.csdn-toolbar H6 {
	FONT-SIZE: 1em
}
.csdn-toolbar TEXTAREA {
	resize: none
}
.csdn-toolbar A:link {
	COLOR: #333; TEXT-DECORATION: none
}
.csdn-toolbar A:visited {
	COLOR: #333; TEXT-DECORATION: none
}
.csdn-toolbar A:hover {
	COLOR: #c00; TEXT-DECORATION: none
}
.csdn-toolbar H1 A:link {
	COLOR: #333
}
.csdn-toolbar H1 A:visited {
	COLOR: #333
}
.csdn-toolbar H2 A:link {
	COLOR: #333
}
.csdn-toolbar H2 A:visited {
	COLOR: #333
}
.csdn-toolbar H3 A:link {
	COLOR: #333
}
.csdn-toolbar H3 A:visited {
	COLOR: #333
}
.csdn-toolbar H4 A:link {
	COLOR: #333
}
.csdn-toolbar H4 A:visited {
	COLOR: #333
}
.csdn-toolbar H5 A:link {
	COLOR: #333
}
.csdn-toolbar H5 A:visited {
	COLOR: #333
}
.csdn-toolbar H6 A:link {
	COLOR: #333
}
.csdn-toolbar H6 A:visited {
	COLOR: #333
}
.csdn-toolbar H1 A:hover {
	COLOR: #c00
}
.csdn-toolbar H2 A:hover {
	COLOR: #c00
}
.csdn-toolbar H3 A:hover {
	COLOR: #c00
}
.csdn-toolbar H4 A:hover {
	COLOR: #c00
}
.csdn-toolbar H5 A:hover {
	COLOR: #c00
}
.csdn-toolbar H6 A:hover {
	COLOR: #c00
}
.csdn-toolbar A:focus {
	OUTLINE-STYLE: none; OUTLINE-COLOR: invert; OUTLINE-WIDTH: medium
}
.csdn-toolbar A.f-blue:link {
	COLOR: #2981a9; TEXT-DECORATION: none
}
.csdn-toolbar A.f-blue:visited {
	COLOR: #2981a9; TEXT-DECORATION: none
}
.csdn-toolbar A.f-blue:visited {
	COLOR: #025d87; TEXT-DECORATION: none
}
.csdn-toolbar A.f-undline:link {
	TEXT-DECORATION: underline
}
.csdn-toolbar A.f-undline:visited {
	TEXT-DECORATION: underline
}
.csdn-toolbar A.f-undline:visited {
	TEXT-DECORATION: underline
}
.csdn-toolbar .col-sm-1 {
	FLOAT: left
}
.csdn-toolbar .col-sm-2 {
	FLOAT: left
}
.csdn-toolbar .col-sm-3 {
	FLOAT: left
}
.csdn-toolbar .col-sm-4 {
	FLOAT: left
}
.csdn-toolbar .col-sm-5 {
	FLOAT: left
}
.csdn-toolbar .col-sm-6 {
	FLOAT: left
}
.csdn-toolbar .col-sm-7 {
	FLOAT: left
}
.csdn-toolbar .col-sm-8 {
	FLOAT: left
}
.csdn-toolbar .col-sm-9 {
	FLOAT: left
}
.csdn-toolbar .col-sm-10 {
	FLOAT: left
}
.csdn-toolbar .col-sm-11 {
	FLOAT: left
}
.csdn-toolbar .form-horizontal .form-group:after {
	CLEAR: both
}
.csdn-toolbar .form-horizontal .form-group:before {
	DISPLAY: table; CONTENT: " "
}
.csdn-toolbar .form-horizontal .form-group:after {
	DISPLAY: table; CONTENT: " "
}
.csdn-toolbar .col-sm-12 {
	WIDTH: 100%
}
.csdn-toolbar .col-sm-11 {
	WIDTH: 91.66%
}
.csdn-toolbar .col-sm-10 {
	WIDTH: 86.33%
}
.csdn-toolbar .col-sm-9 {
	WIDTH: 75%
}
.csdn-toolbar .col-sm-8 {
	WIDTH: 66.66%
}
.csdn-toolbar .col-sm-7 {
	WIDTH: 58.33%
}
.csdn-toolbar .col-sm-6 {
	WIDTH: 50%
}
.csdn-toolbar .col-sm-5 {
	WIDTH: 41.66%
}
.csdn-toolbar .col-sm-4 {
	WIDTH: 33.33%
}
.csdn-toolbar .col-sm-3 {
	WIDTH: 25%
}
.csdn-toolbar .col-sm-2 {
	WIDTH: 16.66%
}
.csdn-toolbar .col-sm-1 {
	WIDTH: 8.33%
}
.csdn-toolbar .pull-left {
	FLOAT: left
}
.csdn-toolbar .pull-right {
	FLOAT: right
}
.csdn-toolbar A {
	COLOR: #999; FONT-SIZE: 12px; FONT-WEIGHT: normal; TEXT-DECORATION: =
none
}
.csdn-toolbar A:hover {
	COLOR: #333
}
.csdn-toolbar DL {
	MARGIN: 0px; FONT-SIZE: 12px
}
.csdn-toolbar UL {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.csdn-toolbar LI {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.csdn-toolbar LI {
	BORDER-BOTTOM: #eee 0px solid; POSITION: relative; BORDER-LEFT: #eee =
1px solid; LIST-STYLE-TYPE: none; WIDTH: 40px; BACKGROUND: none =
transparent scroll repeat 0% 0%; FLOAT: left; HEIGHT: 40px; BORDER-TOP: =
#eee 0px solid; LIST-STYLE-IMAGE: none; BORDER-RIGHT: #fff 1px solid
}
.csdn-toolbar .hide {
	DISPLAY: none
}
.csdn-toolbar .open .dropdown-menu {
	MIN-WIDTH: 70px; DISPLAY: block; TOP: 23px; border-radius: 0
}
.csdn-toolbar .open .dropdown-menu LI {
	BORDER-BOTTOM: 0px; TEXT-ALIGN: center; BORDER-LEFT: 0px; WIDTH: 100%; =
PADDING-RIGHT: 10px; FLOAT: left; HEIGHT: auto; COLOR: #333; BORDER-TOP: =
0px; BORDER-RIGHT: 0px
}
.csdn-toolbar INPUT:focus {
	BORDER-BOTTOM-COLOR: #9cf; BORDER-TOP-COLOR: #9cf; BORDER-RIGHT-COLOR: =
#9cf; BORDER-LEFT-COLOR: #9cf; box-shadow: none
}
.csdn-toolbar TEXTAREA:focus {
	BORDER-BOTTOM-COLOR: #9cf; BORDER-TOP-COLOR: #9cf; BORDER-RIGHT-COLOR: =
#9cf; BORDER-LEFT-COLOR: #9cf; box-shadow: none
}
.csdn-toolbar .form-horizontal .form-group {
	MARGIN: 0px 0px 10px
}
.csdn-toolbar .form-horizontal .form-group .ft {
	PADDING-LEFT: 12px; WIDTH: 362px; MARGIN-LEFT: 25px
}
.csdn-toolbar .form-horizontal .control-label {
	BOX-SIZING: border-box; TEXT-ALIGN: right; PADDING-BOTTOM: 0px; =
PADDING-LEFT: 0px; WIDTH: 38px; PADDING-RIGHT: 10px; PADDING-TOP: 7px; =
-webkit-box-sizing: border-box; -moz-box-sizing: border-box
}
.csdn-toolbar .form-control {
	BACKGROUND-IMAGE: none; BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: =
#ccc 1px solid; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.4285; =
BACKGROUND-COLOR: #fff; PADDING-LEFT: 7px; WIDTH: 100%; PADDING-RIGHT: =
7px; DISPLAY: block; HEIGHT: 28px; COLOR: #555; FONT-SIZE: 14px; =
VERTICAL-ALIGN: middle; BORDER-TOP: #ccc 1px solid; BORDER-RIGHT: #ccc =
1px solid; PADDING-TOP: 0px; border-radius: 0; box-shadow: none; =
-webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); =
-webkit-transition: border-color ease-in-out 0.15s, box-shadow =
ease-in-out 0.15s; transition: border-color ease-in-out 0.15s, =
box-shadow ease-in-out 0.15s
}
.csdn-toolbar TEXTAREA.form-control {
	HEIGHT: 70px; PADDING-TOP: 5px
}
.csdn-toolbar .nobg {
	BACKGROUND: none transparent scroll repeat 0% 0%
}
.csdn-toolbar .icon-hasnotes-sm {
	BACKGROUND-IMAGE: url(../images/f_icon.png)
}
.csdn-toolbar .icon-enter-sm {
	BACKGROUND-IMAGE: url(../images/f_icon.png)
}
.csdn-toolbar .write-icon {
	BACKGROUND-IMAGE: url(../images/f_icon.png)
}
.csdn-toolbar .icon-enter-sm {
	BACKGROUND-POSITION: 0px -192px
}
.csdn-toolbar .icon {
	BACKGROUND-IMAGE: url(../images/f_icon.png); Z-INDEX: 1001; POSITION: =
relative; MARGIN: 10px auto 0px; WIDTH: 20px; BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: 1px 1px; HEIGHT: 20px; FONT-SIZE: 16px
}
.csdn-toolbar .icon .wrap {
	BORDER-BOTTOM: #ccc 1px solid; POSITION: absolute; BORDER-LEFT: #ccc =
1px solid; PADDING-BOTTOM: 7px; PADDING-LEFT: 7px; PADDING-RIGHT: 7px; =
DISPLAY: none; BACKGROUND: #fff; FONT-SIZE: 12px; BORDER-TOP: #ccc 1px =
solid; TOP: 30px; BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 7px; =
box-shadow: 0px 3px 2px rgba(0, 0, 0, 0.15)
}
.csdn-toolbar .icon .curr-icon-wrap {
	BORDER-BOTTOM: #fff 1px solid; POSITION: absolute; WIDTH: 41px; HEIGHT: =
3px; TOP: -4px
}
.csdn-toolbar .on {
	BORDER-BOTTOM-COLOR: #ccc; BORDER-RIGHT-WIDTH: 1px; BACKGROUND-COLOR: =
#fff; BORDER-TOP-COLOR: #ccc; BORDER-TOP-WIDTH: 0px; =
BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-COLOR: #ccc; BORDER-LEFT-COLOR: =
#ccc; BORDER-LEFT-WIDTH: 1px
}
.csdn-toolbar .on .wrap {
	DISPLAY: block
}
.csdn-toolbar .container {
	MARGIN: 0px auto; WIDTH: 960px
}
.csdn-toolbar .container:before {
	DISPLAY: table; CONTENT: " "
}
.csdn-toolbar .container:after {
	DISPLAY: table; CONTENT: " "
}
.csdn-toolbar .btn {
	BACKGROUND-IMAGE: none; BOX-SIZING: border-box; BORDER-BOTTOM: =
transparent 1px solid; TEXT-ALIGN: center; BORDER-LEFT: transparent 1px =
solid; PADDING-BOTTOM: 0px; LINE-HEIGHT: 28px; PADDING-LEFT: 0px; WIDTH: =
80px; PADDING-RIGHT: 0px; DISPLAY: inline-block; WHITE-SPACE: nowrap; =
MARGIN-BOTTOM: 0px; HEIGHT: 28px; COLOR: #fff; FONT-SIZE: 14px; =
VERTICAL-ALIGN: middle; BORDER-TOP: transparent 1px solid; CURSOR: =
pointer; FONT-WEIGHT: normal; BORDER-RIGHT: transparent 1px solid; =
PADDING-TOP: 0px; -webkit-box-sizing: border-box; -moz-box-sizing: =
border-box; border-radius: 0; -webkit-user-select: none; =
-moz-user-select: none; -ms-user-select: none; -o-user-select: none; =
user-select: none
}
.csdn-toolbar .btn:focus {
	OUTLINE-STYLE: dotted; OUTLINE-COLOR: #333; OUTLINE-WIDTH: thin; =
outline-offset: -2px
}
.csdn-toolbar .btn:hover {
	COLOR: #333; TEXT-DECORATION: none
}
.csdn-toolbar .btn:focus {
	COLOR: #333; TEXT-DECORATION: none
}
.csdn-toolbar .btn:active {
	BACKGROUND-IMAGE: none; OUTLINE-STYLE: none; OUTLINE-COLOR: invert; =
OUTLINE-WIDTH: 0px; box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125); =
-webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125)
}
.csdn-toolbar .disabled.btn {
	CURSOR: not-allowed; box-shadow: none; -webkit-box-shadow: none; =
pointer-events: none; opacity: 0.65
}
.csdn-toolbar [disabled].btn {
	CURSOR: not-allowed; box-shadow: none; -webkit-box-shadow: none; =
pointer-events: none; opacity: 0.65
}
.csdn-toolbar FIELDSET[disabled] .btn {
	CURSOR: not-allowed; box-shadow: none; -webkit-box-shadow: none; =
pointer-events: none; opacity: 0.65
}
.csdn-toolbar .btn:hover {
	COLOR: #fff
}
.csdn-toolbar .btn:focus {
	COLOR: #fff
}
.csdn-toolbar .btn-default:hover {
	BORDER-BOTTOM-COLOR: #adadad; BACKGROUND-COLOR: #ebebeb; =
BORDER-TOP-COLOR: #adadad; COLOR: #eee; BORDER-RIGHT-COLOR: #adadad; =
BORDER-LEFT-COLOR: #adadad
}
.csdn-toolbar .btn-default:focus {
	BORDER-BOTTOM-COLOR: #adadad; BACKGROUND-COLOR: #ebebeb; =
BORDER-TOP-COLOR: #adadad; COLOR: #eee; BORDER-RIGHT-COLOR: #adadad; =
BORDER-LEFT-COLOR: #adadad
}
.csdn-toolbar .btn-default:active {
	BORDER-BOTTOM-COLOR: #adadad; BACKGROUND-COLOR: #ebebeb; =
BORDER-TOP-COLOR: #adadad; COLOR: #eee; BORDER-RIGHT-COLOR: #adadad; =
BORDER-LEFT-COLOR: #adadad
}
.csdn-toolbar .active.btn-default {
	BORDER-BOTTOM-COLOR: #adadad; BACKGROUND-COLOR: #ebebeb; =
BORDER-TOP-COLOR: #adadad; COLOR: #eee; BORDER-RIGHT-COLOR: #adadad; =
BORDER-LEFT-COLOR: #adadad
}
.csdn-toolbar .open .btn-default.dropdown-toggle {
	BORDER-BOTTOM-COLOR: #adadad; BACKGROUND-COLOR: #ebebeb; =
BORDER-TOP-COLOR: #adadad; COLOR: #eee; BORDER-RIGHT-COLOR: #adadad; =
BORDER-LEFT-COLOR: #adadad
}
.csdn-toolbar .btn-default:hover {
	BACKGROUND-COLOR: #666
}
.csdn-toolbar .btn-default:focus {
	BACKGROUND-COLOR: #666
}
.csdn-toolbar .btn-default {
	BACKGROUND-COLOR: #999
}
.csdn-toolbar .btn-primary {
	BACKGROUND-COLOR: #dc3c00
}
.csdn-toolbar .btn-primary:hover {
	BACKGROUND-COLOR: #b43200
}
.csdn-toolbar .btn-primary:focus {
	BACKGROUND-COLOR: #b43200
}
.csdn-toolbar .loginlink {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 10px; =
PADDING-LEFT: 13px; PADDING-RIGHT: 13px; DISPLAY: none; BACKGROUND: none =
transparent scroll repeat 0% 0%; HEIGHT: 20px; BORDER-TOP: 0px; =
BORDER-RIGHT: 0px; PADDING-TOP: 10px
}
.csdn-toolbar .logo {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; WIDTH: auto; PADDING-RIGHT: =
0px; HEIGHT: 40px; FONT-SIZE: 12px; PADDING-TOP: 0px
}
.csdn-toolbar .logo .icon {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 0px; PADDING-LEFT: 0px; =
WIDTH: 40px; PADDING-RIGHT: 0px; DISPLAY: block; BACKGROUND-POSITION: =
0px 0px; FLOAT: left; HEIGHT: 40px; PADDING-TOP: 0px
}
.csdn-toolbar .logo .img {
	BACKGROUND-IMAGE: url(../images/f_name.png); WIDTH: 120px; FLOAT: left; =
HEIGHT: 40px; MARGIN-LEFT: 10px
}
.csdn-toolbar .none {
	BACKGROUND-POSITION: 0px 45px
}
.csdn-toolbar .blog-icon {
	BACKGROUND-POSITION: 0px -52px
}
.csdn-toolbar .down-icon {
	BACKGROUND-POSITION: 0px -102px
}
.csdn-toolbar .bbs-icon {
	BACKGROUND-POSITION: 0px -152px
}
.csdn-toolbar .space-icon {
	BACKGROUND-POSITION: 0px -202px
}
.csdn-toolbar .code-icon {
	BACKGROUND-POSITION: 0px -252px
}
.csdn-toolbar .share-icon {
	BACKGROUND-POSITION: 0px -305px
}
.csdn-toolbar .tag-icon {
	BACKGROUND-POSITION: 0px -354px
}
.csdn-toolbar .dashboard-icon {
	BACKGROUND-POSITION: 0px -403px
}
.csdn-toolbar .news-icon {
	BACKGROUND-POSITION: 0px 16px
}
.csdn-toolbar .tag-icon {
	BACKGROUND-POSITION: 0px -354px
}
.csdn-toolbar .notify-icon {
	BACKGROUND-POSITION: 0px -456px
}
.csdn-toolbar .ask-icon {
	BACKGROUND-POSITION: 0px -503px
}
.csdn-toolbar .search .icon {
	BACKGROUND-POSITION: 0px -130px
}
.csdn-toolbar .search .wrap {
	PADDING-BOTTOM: 10px; PADDING-LEFT: 10px; WIDTH: 400px; PADDING-RIGHT: =
10px; PADDING-TOP: 10px
}
.csdn-toolbar .search .wrap .border {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; BORDER-TOP: =
#ccc 1px solid; BORDER-RIGHT: #ccc 1px solid
}
.csdn-toolbar .search .wrap INPUT {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: =
22px; PADDING-LEFT: 5px; WIDTH: 356px; PADDING-RIGHT: 5px; HEIGHT: 26px; =
BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar .search .wrap INPUT:focus {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; OUTLINE-STYLE: =
none; OUTLINE-COLOR: invert; OUTLINE-WIDTH: medium; BORDER-TOP: medium =
none; BORDER-RIGHT: medium none
}
.csdn-toolbar .search .wrap .btn {
	HEIGHT: 26px
}
.csdn-toolbar .search .wrap .icon-enter-sm {
	POSITION: absolute; MARGIN-TOP: 4px; WIDTH: 20px; HEIGHT: 18px; RIGHT: =
15px
}
.csdn-toolbar .on .on-search-icon {
	BACKGROUND-POSITION: -20px -130px
}
.csdn-toolbar .on .on-search-icon .wrap {
	RIGHT: -221px
}
.csdn-toolbar .on .on-search-icon .curr-icon-wrap {
	RIGHT: 209px
}
.csdn-toolbar .unlogin .search {
	BORDER-RIGHT-WIDTH: 1px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: =
0px; BORDER-LEFT-WIDTH: 1px
}
.csdn-toolbar .unlogin .search .wrap {
	RIGHT: -53px
}
.csdn-toolbar .unlogin .search .curr-icon-wrap {
	RIGHT: 41px
}
.csdn-toolbar .favor .icon {
	BACKGROUND-POSITION: 0px -111px
}
.csdn-toolbar .favor .favor-btns {
	TEXT-ALIGN: right; PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar .favor .favor-btns .btn {
	MARGIN-LEFT: 4px
}
.csdn-toolbar .favor .wrap {
	PADDING-BOTTOM: 20px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; =
PADDING-TOP: 20px
}
.csdn-toolbar .favor .checkbox LABEL {
	DISPLAY: block
}
.csdn-toolbar .favor .share {
	POSITION: static; MARGIN: 2px 5px 0px 0px; HEIGHT: 14px; =
VERTICAL-ALIGN: middle
}
.csdn-toolbar .on .on-favor-icon {
	BACKGROUND-POSITION: -20px -111px
}
.csdn-toolbar .on .on-favor-icon .wrap {
	WIDTH: 400px; HEIGHT: 230px; RIGHT: -179px
}
.csdn-toolbar .on .on-favor-icon .curr-icon-wrap {
	RIGHT: 167px
}
.csdn-toolbar .on .on-favor-icon .last {
	MARGIN-RIGHT: 0px
}
.csdn-toolbar .on .on-favor-icon .favor-form .alert {
	DISPLAY: none
}
.csdn-toolbar .on .on-favor-icon .favor-form .error .alert {
	MARGIN: 5px 0px 0px 81px; WIDTH: 300px; DISPLAY: block
}
.csdn-toolbar .on .on-favor-icon .favor-failed {
	TEXT-ALIGN: center; MARGIN-TOP: 60px
}
.csdn-toolbar .on .on-favor-icon .favor-success {
	TEXT-ALIGN: center; MARGIN-TOP: 60px
}
.csdn-toolbar .on .on-favor-icon .favor-failed .msg {
	LINE-HEIGHT: 40px; FONT-SIZE: 18px; VERTICAL-ALIGN: top
}
.csdn-toolbar .on .on-favor-icon .favor-success .msg {
	LINE-HEIGHT: 40px; FONT-SIZE: 18px; VERTICAL-ALIGN: top
}
.csdn-toolbar .on .on-favor-icon .favor-failed .btns {
	TEXT-ALIGN: center; MARGIN-TOP: 10px
}
.csdn-toolbar .on .on-favor-icon .favor-success .btns {
	TEXT-ALIGN: center; MARGIN-TOP: 10px
}
.csdn-toolbar .on .on-favor-icon .favor-failed .btns A {
	MARGIN-LEFT: 10px
}
.csdn-toolbar .on .on-favor-icon .favor-success .btns A {
	MARGIN-LEFT: 10px
}
.csdn-toolbar .notify .on-notify-icon {
	DISPLAY: block !important
}
.csdn-toolbar .notify .icon {
	BACKGROUND-POSITION: 0px -90px
}
.csdn-toolbar .notify .icon-hasnotes-sm {
	Z-INDEX: 1002; POSITION: absolute; WIDTH: 10px; BACKGROUND-POSITION: =
-23px -196px; HEIGHT: 10px; TOP: 9px; LEFT: 23px
}
.csdn-toolbar .notify .number {
	Z-INDEX: 1002; POSITION: absolute; TEXT-ALIGN: center; LINE-HEIGHT: =
14px; WIDTH: 12px; BACKGROUND: #dc3c00 0px 0px; HEIGHT: 13px; COLOR: =
#fff; FONT-SIZE: 12px; TOP: 9px; LEFT: 24px
}
.csdn-toolbar #header_notice_num {
	DISPLAY: none; BACKGROUND: none transparent scroll repeat 0% 0%
}
.csdn-toolbar .csdn_note {
	DISPLAY: block !important
}
.csdn-toolbar .csdn_note .close1 {
	DISPLAY: none
}
.csdn-toolbar .csdn_note .go_all {
	BACKGROUND: none transparent scroll repeat 0% 0%; FLOAT: right
}
.csdn-toolbar .csdn_note .read_all {
	BACKGROUND: none transparent scroll repeat 0% 0%; FLOAT: right
}
.csdn-toolbar .csdn_note .go_back {
	LINE-HEIGHT: 39px
}
.csdn-toolbar .csdn_note .detail_con {
	MIN-HEIGHT: 312px !important
}
.csdn-toolbar .csdn_note .notifications .count_down {
	COLOR: #ccc
}
.csdn-toolbar .csdn_note .notifications .list DT {
	LINE-HEIGHT: 27px
}
.csdn-toolbar .csdn_note .notifications .menu_title A {
	MARGIN-RIGHT: 5px
}
.csdn-toolbar .on .on-notify-icon {
	BACKGROUND-POSITION: -20px -90px
}
.csdn-toolbar .on .on-notify-icon .wrap {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; WIDTH: 450px !important; =
PADDING-RIGHT: 0px; RIGHT: -137px !important; PADDING-TOP: 0px; LEFT: =
auto !important
}
.csdn-toolbar .on .on-notify-icon .curr-icon-wrap {
	RIGHT: 125px
}
.csdn-toolbar .on .on-notify-icon .csdn_note .box {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; TOP: 0px; =
BORDER-RIGHT: 0px; LEFT: 0px; box-shadow: none
}
.csdn-toolbar .on .on-notify-icon .last {
	MARGIN-RIGHT: 0px
}
.csdn-toolbar .ugc .icon {
	BACKGROUND-POSITION: 0px -70px
}
.csdn-toolbar .ugc .p-news .icon {
	BACKGROUND-POSITION: -42px -52px
}
.csdn-toolbar .ugc .p-news:hover .icon {
	BACKGROUND-POSITION: -62px -52px
}
.csdn-toolbar .ugc .p-down .icon {
	BACKGROUND-POSITION: -42px -72px
}
.csdn-toolbar .ugc .p-down:hover .icon {
	BACKGROUND-POSITION: -62px -72px
}
.csdn-toolbar .ugc .p-doc .icon {
	BACKGROUND-POSITION: -42px -72px
}
.csdn-toolbar .ugc .p-doc:hover .icon {
	BACKGROUND-POSITION: -62px -72px
}
.csdn-toolbar .ugc .p-ask .icon {
	BACKGROUND-POSITION: -42px -131px
}
.csdn-toolbar .ugc .p-ask:hover .icon {
	BACKGROUND-POSITION: -62px -131px
}
.csdn-toolbar .ugc .c-obj .icon {
	BACKGROUND-POSITION: -42px -92px
}
.csdn-toolbar .ugc .c-obj:hover .icon {
	BACKGROUND-POSITION: -62px -92px
}
.csdn-toolbar .ugc .c-code .icon {
	BACKGROUND-POSITION: -42px -191px
}
.csdn-toolbar .ugc .c-code:hover .icon {
	BACKGROUND-POSITION: -62px -191px
}
.csdn-toolbar .ugc .p-src .icon {
	BACKGROUND-POSITION: -42px -170px
}
.csdn-toolbar .ugc .p-src:hover .icon {
	BACKGROUND-POSITION: -62px -170px
}
.csdn-toolbar .ugc .p-blog .icon {
	BACKGROUND-POSITION: -42px -111px
}
.csdn-toolbar .ugc .p-blog:hover .icon {
	BACKGROUND-POSITION: -62px -111px
}
.csdn-toolbar .ugc .p-bbs .icon {
	BACKGROUND-POSITION: -42px -132px
}
.csdn-toolbar .ugc .p-bbs:hover .icon {
	BACKGROUND-POSITION: -62px -132px
}
.csdn-toolbar .ugc .c-grop .icon {
	BACKGROUND-POSITION: -42px -152px
}
.csdn-toolbar .ugc .c-grop:hover .icon {
	BACKGROUND-POSITION: -62px -152px
}
.csdn-toolbar .on .on-ugc-icon {
	BACKGROUND-POSITION: -20px -70px
}
.csdn-toolbar .on .on-ugc-icon .wrap {
	PADDING-BOTTOM: 12px; PADDING-LEFT: 0px; WIDTH: 161px; PADDING-RIGHT: =
0px; RIGHT: -95px; PADDING-TOP: 12px
}
.csdn-toolbar .on .on-ugc-icon DL {
	MARGIN: 0px
}
.csdn-toolbar .on .on-ugc-icon DL DT {
	WIDTH: 100%; FONT-WEIGHT: normal
}
.csdn-toolbar .on .on-ugc-icon DL DT EM.icon {
	MARGIN: 0px 8px 0px 0px; WIDTH: 16px; FLOAT: left; HEIGHT: 16px
}
.csdn-toolbar .on .on-ugc-icon DL DT SPAN {
	LINE-HEIGHT: 12px; MARGIN-TOP: 3px; DISPLAY: block; FLOAT: left; =
HEIGHT: 12px
}
.csdn-toolbar .on .on-ugc-icon DL DT A {
	TEXT-ALIGN: left; PADDING-BOTTOM: 10px; PADDING-LEFT: 13px; =
PADDING-RIGHT: 13px; DISPLAY: block; PADDING-TOP: 10px
}
.csdn-toolbar .on .on-ugc-icon DL DT A:hover {
	BACKGROUND: #eee; COLOR: #333
}
.csdn-toolbar .on .on-ugc-icon .curr-icon-wrap {
	RIGHT: 83px
}
.csdn-toolbar .on .on-ugc-icon .last {
	MARGIN-RIGHT: 0px
}
.csdn-toolbar .profile .icon {
	BACKGROUND-POSITION: 0px 1px
}
.csdn-toolbar .profile .curr-icon-img {
	MARGIN: 0px; WIDTH: 20px; DISPLAY: block; HEIGHT: 20px
}
.csdn-toolbar .on .settings {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
BACKGROUND-POSITION: 0px -150px; MARGIN-RIGHT: 2px; PADDING-TOP: 0px
}
.csdn-toolbar .on .quit {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
BACKGROUND-POSITION: 0px -170px; PADDING-TOP: 0px
}
.csdn-toolbar .on .on-profile-icon {
	BACKGROUND-POSITION: -20px 0px; FONT-SIZE: 12px
}
.csdn-toolbar .on .on-profile-icon .wrap {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; WIDTH: 251px; PADDING-RIGHT: =
0px; RIGHT: -53px; PADDING-TOP: 0px
}
.csdn-toolbar .on .on-profile-icon .curr-icon-wrap {
	RIGHT: 41px
}
.csdn-toolbar .on .on-profile-icon .bd {
	PADDING-BOTTOM: 20px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; =
PADDING-TOP: 20px
}
.csdn-toolbar .on .on-profile-icon .bd .write-icon {
	PADDING-BOTTOM: 3px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
BACKGROUND-POSITION: -78px -50px; PADDING-TOP: 3px
}
.csdn-toolbar .on .on-profile-icon .bd .img {
	WIDTH: 100px; MARGIN-RIGHT: 7px
}
.csdn-toolbar .on .on-profile-icon .bd .info {
	TEXT-ALIGN: left; WIDTH: 103px; WORD-WRAP: break-word; FLOAT: right
}
.csdn-toolbar .on .on-profile-icon .bd .info .nickname {
	FONT-SIZE: 14px
}
.csdn-toolbar .on .on-profile-icon .bd .info A {
	PADDING-BOTTOM: 5px; DISPLAY: block
}
.csdn-toolbar .on .on-profile-icon .bd .info .fill-dec {
	COLOR: #666
}
.csdn-toolbar .on .on-profile-icon .ft {
	POSITION: relative; PADDING-BOTTOM: 0px; LINE-HEIGHT: 40px; =
BACKGROUND-COLOR: #f5f5f5; PADDING-LEFT: 20px; PADDING-RIGHT: 12px; =
PADDING-TOP: 0px
}
.csdn-toolbar .on .on-profile-icon .ft .icon-cog {
	MARGIN-TOP: -1px; WIDTH: 16px; DISPLAY: inline-block; BACKGROUND: =
url(../images/f_icon.png) no-repeat -2px -152px; HEIGHT: 16px; =
VERTICAL-ALIGN: middle; MARGIN-RIGHT: 2px
}
.csdn-toolbar .on .on-profile-icon .ft .icon-signout {
	MARGIN-TOP: -1px; WIDTH: 16px; DISPLAY: inline-block; BACKGROUND: =
url(../images/f_icon.png) no-repeat -2px -152px; HEIGHT: 16px; =
VERTICAL-ALIGN: middle; MARGIN-RIGHT: 2px
}
.csdn-toolbar .on .on-profile-icon .ft .icon-signout {
	BACKGROUND-POSITION: -2px -172px
}
.csdn-toolbar .on .on-profile-icon .ft A {
	LINE-HEIGHT: 40px
}
.csdn-toolbar .on .on-profile-icon .ft .pull-right {
	MARGIN-TOP: 13px
}
.csdn-toolbar .on .on-profile-icon .ft .pull-right .out {
	DISPLAY: none
}
.csdn-toolbar .on .on-profile-icon .ft .pull-right:hover .out {
	BORDER-BOTTOM: #999 1px solid; POSITION: absolute; TEXT-ALIGN: center; =
BORDER-LEFT: #999 1px solid; PADDING-BOTTOM: 2px; LINE-HEIGHT: 16px; =
PADDING-LEFT: 2px; WIDTH: 32px; PADDING-RIGHT: 2px; DISPLAY: block; =
BACKGROUND: #f5f5f5; HEIGHT: 16px; COLOR: #666; BORDER-TOP: #999 1px =
solid; TOP: -12px; RIGHT: -10px; BORDER-RIGHT: #999 1px solid; =
PADDING-TOP: 2px; border-radius: 5px
}
.csdn-toolbar .on .on-profile-icon .ft A:hover .settings {
	BACKGROUND-POSITION: -20px -150px
}
.csdn-toolbar .on .on-profile-icon .ft A:hover .quit {
	BACKGROUND-POSITION: -20px -170px
}
.csdn-toolbar .apps {
	BORDER-RIGHT-WIDTH: 1px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: =
0px; BORDER-RIGHT-COLOR: #eee; BORDER-LEFT-WIDTH: 1px
}
.csdn-toolbar .apps .icon {
	BACKGROUND-POSITION: 0px -51px
}
.csdn-toolbar .on.apps {
	BORDER-RIGHT-WIDTH: 1px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: =
0px; BORDER-RIGHT-COLOR: #ccc; BORDER-LEFT-WIDTH: 1px
}
.csdn-toolbar .hasnew {
	BACKGROUND-IMAGE: url(../images/f_icon.png); Z-INDEX: 1002; POSITION: =
absolute; WIDTH: 10px; BACKGROUND-POSITION: -23px -196px; HEIGHT: 10px; =
TOP: 9px; LEFT: 23px
}
.csdn-toolbar .on .on-apps-icon {
	BACKGROUND-POSITION: -20px -51px
}
.csdn-toolbar .on .on-apps-icon .wrap {
	PADDING-BOTTOM: 20px; PADDING-LEFT: 20px; WIDTH: 310px; PADDING-RIGHT: =
20px; RIGHT: -11px; PADDING-TOP: 0px
}
.csdn-toolbar .on .on-apps-icon .curr-icon-wrap {
	RIGHT: 0px
}
.csdn-toolbar .on .on-apps-icon .detail {
	WIDTH: 90px; FLOAT: left; FONT-SIZE: 14px; MARGIN-RIGHT: 20px
}
.csdn-toolbar .on .on-apps-icon .detail DT {
	BORDER-BOTTOM: #666 1px solid; LINE-HEIGHT: 31px; MARGIN-TOP: 15px; =
COLOR: #333; FONT-WEIGHT: bold
}
.csdn-toolbar .on .on-apps-icon .detail DD {
	BORDER-BOTTOM: #ddd 1px solid; LINE-HEIGHT: 31px
}
.csdn-toolbar .on .on-apps-icon .detail DD A {
	COLOR: #333
}
.csdn-toolbar .on .on-apps-icon .last.detail {
	MARGIN-RIGHT: 0px
}
.csdn-toolbar .unlogin .loginlink {
	LINE-HEIGHT: 24px; WIDTH: 60px; DISPLAY: block; HEIGHT: 20px; =
FONT-SIZE: 12px; BORDER-RIGHT: medium none
}
.csdn-toolbar .unlogin .favor {
	DISPLAY: none
}
.csdn-toolbar .unlogin .notify {
	DISPLAY: none
}
.csdn-toolbar .unlogin .ugc {
	DISPLAY: none
}
.csdn-toolbar .unlogin .profile {
	DISPLAY: none
}
.csdn_notice_tip {
	DISPLAY: none !important
}
.csdn-toolbar-skin-black {
	BORDER-BOTTOM: medium none; BACKGROUND: #48525e; HEIGHT: 40px
}
.csdn-toolbar-skin-black LI {
	BORDER-LEFT: #74797e 1px solid; HEIGHT: 40px; BORDER-RIGHT: #48525e 1px =
solid
}
.csdn-toolbar-skin-black LI.on {
	WIDTH: 40px; HEIGHT: 40px; BORDER-RIGHT: #fff 1px solid
}
.csdn-toolbar-skin-black .icon .wrap {
	TOP: 30px
}
.csdn-toolbar-skin-black .icon .curr-icon-wrap {
	WIDTH: 41px
}
.csdn-toolbar-skin-black .apps {
	BORDER-RIGHT-COLOR: #74797e
}
.csdn-toolbar-skin-black .on .on-apps-icon .wrap {
	RIGHT: -12px
}
.csdn-toolbar-skin-black .loginlink {
	BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: #ddd
}
.csdn-toolbar-skin-black .loginlink A {
	COLOR: #ddd
}
.csdn-toolbar-skin-black .loginlink A:hover {
	COLOR: #fefefe
}
.csdn-toolbar-skin-black .blog-icon {
	BACKGROUND-POSITION: -162px -52px
}
.csdn-toolbar-skin-black .down-icon {
	BACKGROUND-POSITION: -162px -102px
}
.csdn-toolbar-skin-black .bbs-icon {
	BACKGROUND-POSITION: -162px -152px
}
.csdn-toolbar-skin-black .space-icon {
	BACKGROUND-POSITION: -162px -202px
}
.csdn-toolbar-skin-black .code-icon {
	BACKGROUND-POSITION: -162px -252px
}
.csdn-toolbar-skin-black .share-icon {
	BACKGROUND-POSITION: -162px -305px
}
.csdn-toolbar-skin-black .tag-icon {
	BACKGROUND-POSITION: -162px -354px
}
.csdn-toolbar-skin-black .dashboard-icon {
	BACKGROUND-POSITION: -162px -403px
}
.csdn-toolbar-skin-black .news-icon {
	BACKGROUND-POSITION: -162px -3px
}
.csdn-toolbar-skin-black .tag-icon {
	BACKGROUND-POSITION: -162px -354px
}
.csdn-toolbar-skin-black .notify-icon {
	BACKGROUND-POSITION: -162px -456px
}
.csdn-toolbar-skin-black .ask-icon {
	BACKGROUND-POSITION: -162px -503px
}
.navbar-fixed-top {
	Z-INDEX: 1030; POSITION: fixed; RIGHT: 0px; LEFT: 0px
}
.navbar-fixed-bottom {
	Z-INDEX: 1030; POSITION: fixed; RIGHT: 0px; LEFT: 0px
}
.navbar-fixed-top {
	TOP: 0px
}
.csdn-toolbar .icon-signout {
	LINE-HEIGHT: 40px
}
.csdn-toolbar .on .on-profile-icon .ft .icon-cog:before {
	DISPLAY: none
}
.csdn-toolbar .on .on-profile-icon .ft .icon-signout:before {
	DISPLAY: none
}

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://blog.csdn.net/css/common.css

BODY {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
FORM {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H1 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H2 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H3 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H4 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.side LI {
	LIST-STYLE-TYPE: none; LIST-STYLE-IMAGE: none
}
.side UL {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
IMG {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none
}
PRE {
	WORD-WRAP: break-word; WHITE-SPACE: pre-wrap
}
.share_buttons {
	TEXT-ALIGN: right; MARGIN: 5px 0px; WIDTH: 170px; FONT: 12px/24px =
Arial, Helvetica, sans-serif; FLOAT: right
}
.share_buttons SPAN {
	LINE-HEIGHT: 30px; DISPLAY: inline-block; COLOR: green; VERTICAL-ALIGN: =
middle; FONT-WEIGHT: bold
}
.share_buttons A {
	WIDTH: 25px; DISPLAY: inline-block; BACKGROUND-POSITION: 0px 5px; =
HEIGHT: 30px; VERTICAL-ALIGN: middle; CURSOR: pointer
}
.share_douban {
	BACKGROUND-IMAGE: url(../images/ico_douban.gif)
}
.share_renren {
	BACKGROUND-IMAGE: url(../images/ico_renren.gif)
}
.share_sina {
	BACKGROUND: url(../images/ico_sina.gif) no-repeat center center
}
.share_qq {
	BACKGROUND: url(../images/ico_qq.gif) no-repeat center center
}
.article_description {
	TEXT-INDENT: 2em
}
.list_opended {
	BACKGROUND-IMAGE: url(../images/dir_arr.gif); BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: 0px 7px
}
.list_opended:hover {
	BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: 0px -15px
}
.list_closed {
	BACKGROUND-IMAGE: url(../images/dir_arr.gif); BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: 0px -45px
}
.list_closed:hover {
	BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: 0px -69px
}
.comment_item {
	MARGIN: 2px 10px; FONT: 12px/26px Arial, Helvetica, sans-serif
}
.comment_item FIELDSET {
	BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; FONT: 12px/26px =
Arial, Helvetica, sans-serif; BORDER-TOP: 1px solid; BORDER-RIGHT: 1px =
solid
}
.comment_reply {
	MARGIN-LEFT: 50px
}
.comment_list {
	CLEAR: both
}
.comment_list DL {
	DISPLAY: block; CLEAR: both; OVERFLOW: hidden
}
.comment_item .user {
=09
}
.comment_item_reply {
	MARGIN-LEFT: 50px
}
.comment_userface {
	MARGIN: 4px; FLOAT: left
}
.comment_userface IMG {
	WIDTH: 40px; HEIGHT: 40px
}
.comment_body {
	PADDING-BOTTOM: 5px; LINE-HEIGHT: 20px; MIN-HEIGHT: 35px; PADDING-LEFT: =
5px; PADDING-RIGHT: 5px; MARGIN-LEFT: 50px; PADDING-TOP: 5px
}
.commentform {
=09
}
.commentform UL {
	MARGIN: 0px 20px 5px; FONT: 12px/24px Arial, Helvetica, sans-serif; =
CLEAR: both
}
.commentform .left {
	WIDTH: 80px; DISPLAY: block; FLOAT: left
}
.commentform .right {
	DISPLAY: block; MARGIN-LEFT: 90px
}
.commentform TEXTAREA {
	BORDER-BOTTOM: #ddd 1px solid; BORDER-LEFT: #ddd 1px solid; =
PADDING-BOTTOM: 5px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; FONT: =
14px/24px Arial, Helvetica, sans-serif; COLOR: #555; BORDER-TOP: #ddd =
1px solid; BORDER-RIGHT: #ddd 1px solid; PADDING-TOP: 5px
}
.guest_link {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 10px; BACKGROUND-COLOR: #f5f5f5; MARGIN: 10px; =
PADDING-LEFT: 10px; PADDING-RIGHT: 10px; FONT-SIZE: 12px; BORDER-TOP: =
#ccc 1px solid; BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 10px
}
#lang_list {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
BACKGROUND-COLOR: #ffffff; FONT-SIZE: 12px; BORDER-TOP: #ccc 1px solid; =
BORDER-RIGHT: #ccc 1px solid
}
#lang_list A {
	TEXT-ALIGN: center; PADDING-BOTTOM: 0px; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; DISPLAY: inline-block; FLOAT: left; CURSOR: pointer; =
BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 0px
}
#lang_list A:hover {
	BACKGROUND-COLOR: #666; COLOR: #fff
}
A.cmt_btn {
	PADDING-BOTTOM: 1px; TEXT-INDENT: -2000px; PADDING-LEFT: 1px; WIDTH: =
16px; PADDING-RIGHT: 1px; DISPLAY: inline-block; BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: left top; MARGIN-BOTTOM: -5px; HEIGHT: =
16px; OVERFLOW: hidden; PADDING-TOP: 1px; _margin-bottom: 4px
}
A.cmt_btn:hover {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: =
#ccc 1px solid; BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 0px
}
A.reply {
	BACKGROUND-IMAGE: url(../images/ico_reply.png)
}
A.quote {
	BACKGROUND-IMAGE: url(../images/ico_quote.png)
}
A.report {
	BACKGROUND-IMAGE: url(../images/ico_report.png)
}
A.delete {
	BACKGROUND-IMAGE: url(../images/ico_del.png)
}
#report_dialog {
	Z-INDEX: 99; POSITION: absolute; TOP: 33%; RIGHT: 33%; LEFT: 30%
}
#panel_report {
	BORDER-BOTTOM: #ddd 1px solid; BORDER-LEFT: #ddd 1px solid; =
PADDING-BOTTOM: 20px; PADDING-LEFT: 8px; WIDTH: 440px; PADDING-RIGHT: =
8px; BACKGROUND: #fff; BORDER-TOP: #ddd 1px solid; BORDER-RIGHT: #ddd =
1px solid; PADDING-TOP: 8px; border-radius: 5px; -moz-border-radius: =
5px; -webkit-border-radius: 5px
}
#panel_report .pop_table {
	LINE-HEIGHT: 20px; MARGIN: 10px 0px 0px 12px
}
#panel_report TH {
	PADDING-BOTTOM: 4px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
VERTICAL-ALIGN: top; PADDING-TOP: 4px
}
#panel_report TD {
	PADDING-BOTTOM: 4px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
VERTICAL-ALIGN: top; PADDING-TOP: 4px
}
#panel_report TH {
	TEXT-ALIGN: right; FONT-WEIGHT: normal
}
#panel_report H3 {
	LINE-HEIGHT: 60px
}
#report_other_content {
	BORDER-BOTTOM: #999 1px solid; BORDER-LEFT: #999 1px solid; =
PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; HEIGHT: =
16px; BORDER-TOP: #999 1px solid; BORDER-RIGHT: #999 1px solid; =
PADDING-TOP: 0px
}
#btnSubmitReport {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
#bms_box {
	TEXT-ALIGN: left; PADDING-BOTTOM: 4px; MARGIN-TOP: 4px; PADDING-LEFT: =
0px; PADDING-RIGHT: 4px; DISPLAY: block; BORDER-TOP: #ccc 1px dashed; =
PADDING-TOP: 14px
}
#bms_box IMG {
	MARGIN-LEFT: 6px; CURSOR: pointer
}
.medal_intro {
	Z-INDEX: 100; BORDER-BOTTOM: #dddddd 2px solid; POSITION: absolute; =
TEXT-ALIGN: center; BORDER-LEFT: #dddddd 2px solid; PADDING-BOTTOM: =
20px; BACKGROUND-COLOR: #fff; MIN-HEIGHT: 100px; PADDING-LEFT: 20px; =
WIDTH: 252px; PADDING-RIGHT: 20px; DISPLAY: block; FONT-FAMILY: =
"=CE=A2=C8=ED=D1=C5=BA=DA"; VERTICAL-ALIGN: top; BORDER-TOP: #dddddd 2px =
solid; TOP: 33px; BORDER-RIGHT: #dddddd 2px solid; PADDING-TOP: 20px; =
LEFT: -55px; box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.1); _padding-top: =
26px
}
.medal_intro:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
.medal_intro DL {
	MARGIN: 0px
}
.medal_intro DT {
	FLOAT: left; MARGIN-RIGHT: 18px
}
.medal_intro DD {
	TEXT-ALIGN: left; LINE-HEIGHT: 18px; MARGIN: 0px; WIDTH: 180px; FLOAT: =
left; COLOR: #666666
}
.medal_intro DD STRONG {
	PADDING-BOTTOM: 10px; DISPLAY: block; COLOR: #004279; FONT-SIZE: 18px
}
#sp_column IMG {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; BORDER-TOP: =
#ccc 1px solid; BORDER-RIGHT: #ccc 1px solid
}
#sp_column P {
	PADDING-BOTTOM: 6px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 6px
}
.interact {
	TEXT-ALIGN: center; PADDING-BOTTOM: 15px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.interact .attent {
	WIDTH: 59px; DISPLAY: inline-block; HEIGHT: 20px; OVERFLOW: hidden; =
CURSOR: pointer
}
.interact .attented {
	WIDTH: 59px; DISPLAY: inline-block; HEIGHT: 20px; OVERFLOW: hidden; =
CURSOR: pointer
}
.interact .letter {
	WIDTH: 59px; DISPLAY: inline-block; HEIGHT: 20px; OVERFLOW: hidden; =
CURSOR: pointer
}
.interact .attent {
	BACKGROUND: url(../images/btn_attent.gif) no-repeat 0px 0px
}
.interact .attented {
	BACKGROUND: url(../images/btn_attented.gif) no-repeat 0px 0px
}
.interact .letter {
	MARGIN: 0px 10px 0px 0px; BACKGROUND: url(../images/btn_sendletter.gif) =
no-repeat 0px 0px
}
.panel_body LI SPAN {
	POSITION: relative; PADDING-LEFT: 6px
}
.itemlist LI A {
	WIDTH: 130px; DISPLAY: inline-block; WHITE-SPACE: nowrap; HEIGHT: 15px; =
OVERFLOW: hidden
}
.itemlist LI SPAN {
	DISPLAY: inline-block; FLOAT: right; HEIGHT: 14px; _margin-top: -18px
}
#newcomments .itemlist LI A {
	WIDTH: 98%
}
#newcomments .itemlist LI A.user_name {
	WIDTH: auto; DISPLAY: inline
}
#side #blog_userface A {
	COLOR: #333
}
#d-top {
	Z-INDEX: 10; POSITION: fixed; BOTTOM: 10px; FLOAT: right; RIGHT: 10px
}
#d-top IMG {
	FILTER: alpha(opcity=3D30); WIDTH: 42px; opacity: 0.3; -moz-opacity: =
0.3; -khtml-opacity: 0.3
}
#d-top A:hover IMG {
	FILTER: alpha(opcity=3D100); opacity: 1; -moz-opacity: 1; =
-khtml-opacity: 1
}
.article_next_prev {
	MARGIN-TOP: 30px
}
.tag2box {
	MARGIN: 10px 0px
}
.tag2box A {
	BORDER-BOTTOM: #eee 1px solid; BORDER-LEFT: #eee 1px solid; =
PADDING-BOTTOM: 4px; LINE-HEIGHT: 100%; BACKGROUND-COLOR: #eee; =
PADDING-LEFT: 10px; PADDING-RIGHT: 10px; DISPLAY: inline-block; =
BORDER-TOP: #eee 1px solid; MARGIN-RIGHT: 10px; BORDER-RIGHT: #eee 1px =
solid; PADDING-TOP: 4px; border-radius: 10px
}

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/skin/skin-yellow/css/style.css?v=1.1

@import url( ../../../css/common.css );
.interact .attented {
	BACKGROUND: url(../images/btn_attented2.gif) no-repeat 0px 0px
}
HTML {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H1 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H2 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H3 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H4 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H5 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H6 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
P {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
BODY {
	MARGIN: 0px; FONT-FAMILY: "microsoft yahei"
}
BODY .pub_footerall {
	BORDER-TOP-COLOR: #a7b9c4
}
BODY .csdn-toolbar .container {
	WIDTH: 1265px
}
BODY A {
	TEXT-DECORATION: none
}
BODY > A > IMG {
	POSITION: absolute; LEFT: 50%
}
#header:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
'.'
}
#header .header {
	MARGIN: 0px auto; WIDTH: 1265px
}
.side UL {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
PADDING-TOP: 0px
}
.article_next_prev UL {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
PADDING-TOP: 0px
}
#navigator UL {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
PADDING-TOP: 0px
}
.side UL LI {
	LIST-STYLE-TYPE: none; LIST-STYLE-IMAGE: none
}
.article_next_prev UL LI {
	LIST-STYLE-TYPE: none; LIST-STYLE-IMAGE: none
}
#navigator UL LI {
	LIST-STYLE-TYPE: none; LIST-STYLE-IMAGE: none
}
#navigator {
	MARGIN-TOP: -45px
}
#navigator .navigator {
	PADDING-BOTTOM: 15px; MARGIN: 0px auto; PADDING-LEFT: 0px; WIDTH: =
1265px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
#navigator .navigator:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
'.'
}
#navigator UL {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; FLOAT: right; PADDING-TOP: 0px
}
#navigator UL:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
'.'
}
#navigator UL LI {
	BORDER-BOTTOM: #ccc 1px solid; TEXT-ALIGN: center; BORDER-LEFT: #ccc =
1px solid; LINE-HEIGHT: 26px; WIDTH: 88px; BACKGROUND: #fff; FLOAT: =
left; HEIGHT: 26px; MARGIN-LEFT: 10px; FONT-SIZE: 12px; BORDER-TOP: #ccc =
1px solid; BORDER-RIGHT: #ccc 1px solid
}
#navigator UL LI A {
	COLOR: #666; TEXT-DECORATION: none
}
#navigator UL LI A IMG {
	VERTICAL-ALIGN: text-bottom; MARGIN-RIGHT: 6px
}
#body {
	MARGIN: 0px auto 40px; WIDTH: 1265px; FONT-SIZE: 12px
}
#body:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
'.'
}
.panel_head {
	FONT-WEIGHT: bold
}
.blog-ass-articl DT {
	FONT-WEIGHT: bold
}
#side {
	MARGIN: 0px auto; WIDTH: 270px; FLOAT: left
}
#side .panel {
	BORDER-BOTTOM: #fff 1px solid; BORDER-LEFT: #fff 1px solid; =
MARGIN-BOTTOM: 9px; BACKGROUND: #fff; BORDER-TOP: #fff 1px solid; =
BORDER-RIGHT: #fff 1px solid
}
#side .panel_head {
	LINE-HEIGHT: 29px; PADDING-LEFT: 11px; BACKGROUND: #f5f5f5; HEIGHT: =
29px; COLOR: #333
}
#side .panel_body {
	PADDING-BOTTOM: 17px; PADDING-LEFT: 16px; PADDING-RIGHT: 16px; =
WORD-BREAK: break-all; PADDING-TOP: 15px
}
#side .panel_body IFRAME {
	MAX-WIDTH: 240px
}
#side .panel_body HR {
	BORDER-BOTTOM: #eee 1px dotted; BORDER-LEFT: 0px; HEIGHT: 0px; =
BORDER-TOP: 0px; BORDER-RIGHT: 0px
}
#side .panel_body .list_closed {
	PADDING-RIGHT: 20px; DISPLAY: inline-block; BACKGROUND: =
url(../images/icon-arrow.png) no-repeat right bottom; COLOR: #666; =
CURSOR: pointer
}
#side .panel_body .list_opended {
	PADDING-RIGHT: 20px; DISPLAY: inline-block; BACKGROUND: =
url(../images/icon-arrow.png) no-repeat right bottom; COLOR: #666; =
CURSOR: pointer
}
#side .panel_body .list_opended {
	BACKGROUND-POSITION: right top
}
#side DIV[id^=3Dcustom_column] UL.panel_body UL {
	LINE-HEIGHT: 2em
}
#side DIV[id^=3Dcustom_column] UL.panel_body UL * {
	TEXT-DECORATION: none
}
#side .profile {
	PADDING-BOTTOM: 5px; PADDING-TOP: 29px
}
#side .profile #blog_userface {
	TEXT-ALIGN: center
}
#side .profile #blog_userface A {
	DISPLAY: inline-block
}
#side .profile #blog_userface .user_name {
	FONT: 16px/20px "microsoft yahei"; COLOR: #666; TEXT-DECORATION: none
}
#side .profile #blog_userface SPAN {
	MARGIN: 15px 0px; DISPLAY: block
}
#side .profile .interact {
	TEXT-ALIGN: center; PADDING-BOTTOM: 15px; MARGIN-BOTTOM: 7px
}
#side .profile .interact A {
	TEXT-ALIGN: center; LINE-HEIGHT: 25px; BACKGROUND-COLOR: #999; =
PADDING-LEFT: 18px; WIDTH: 50px; DISPLAY: inline-block; =
BACKGROUND-REPEAT: no-repeat; HEIGHT: 25px; COLOR: #fff !important; =
MARGIN-LEFT: 6px; TEXT-DECORATION: none
}
#side .profile .interact .attent {
	BACKGROUND-IMAGE: url(../images/skin-attent.png); BACKGROUND-POSITION: =
15px center
}
#side .profile .interact .attent:after {
	CONTENT: "=B9=D8=D7=A2"
}
#side .profile .interact .letter {
	BACKGROUND-IMAGE: url(../images/skin-email.png); BACKGROUND-POSITION: =
8px center
}
#side .profile .interact .letter:after {
	CONTENT: "=B7=A2=CB=BD=D0=C5"
}
#side .profile #blog_medal {
	MARGIN-BOTTOM: 10px
}
#side .profile #blog_medal .ico_expert {
	MARGIN: 0px auto 10px
}
#side .profile #blog_medal A {
	MARGIN-RIGHT: 10px
}
#side .profile #blog_rank {
	BORDER-BOTTOM: #ccc 1px dashed; PADDING-BOTTOM: 4px; PADDING-LEFT: 4px; =
PADDING-RIGHT: 4px; MARGIN-BOTTOM: 13px; PADDING-TOP: 4px
}
#side .profile #blog_rank LI {
	MARGIN-BOTTOM: 11px
}
#side .profile #blog_statistics:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
'.'
}
#side .profile #blog_statistics LI {
	WIDTH: 114px; MARGIN-BOTTOM: 12px; FLOAT: left; COLOR: #333
}
#side .profile #blog_statistics LI SPAN {
	COLOR: #666
}
#side #panel_Search {
	POSITION: relative
}
#side #panel_Search .blogsearch {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 7px; PADDING-LEFT: 7px; WIDTH: 192px; PADDING-RIGHT: =
30px; BORDER-TOP: #ccc 1px solid; BORDER-RIGHT: #ccc 1px solid; =
PADDING-TOP: 7px
}
#side #panel_Search #btnSubmit {
	BORDER-BOTTOM: 0px; POSITION: absolute; BORDER-LEFT: 0px; TEXT-INDENT: =
-100px; WIDTH: 20px; BACKGROUND: url(../images/skin-search.png) =
no-repeat center 50%; HEIGHT: 20px; BORDER-TOP: 0px; TOP: 50px; CURSOR: =
pointer; RIGHT: 30px; BORDER-RIGHT: 0px
}
#side #panel_Search #btnSubmit:hover {
	opacity: 0.7
}
#side #panel_Category {
	COLOR: #000
}
#side #panel_Category UL {
	MARGIN-BOTTOM: -9px
}
#side #panel_Category #sp_column {
	MARGIN-BOTTOM: -11px
}
#side #panel_Category IMG {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; BORDER-TOP: =
#ccc 1px solid; BORDER-RIGHT: #ccc 1px solid
}
#side #panel_Category TABLE {
	MARGIN-BOTTOM: 11px
}
#side #panel_Category P {
	PADDING-BOTTOM: 8px; PADDING-TOP: 16px
}
#side #panel_Category LI {
	MARGIN-BOTTOM: 9px
}
#side #panel_Category LI SPAN {
	MARGIN-LEFT: 8px
}
#side #archive_list {
	COLOR: #000
}
#side #archive_list UL {
	MARGIN-BOTTOM: -8px
}
#side #archive_list LI {
	MARGIN-BOTTOM: 8px
}
#side #archive_list A {
	MARGIN-RIGHT: 8px
}
#side #archive_list .list_closed {
	MARGIN-TOP: 17px; COLOR: #666
}
#side #hotarticls {
	COLOR: #666
}
#side #hotarticls2 {
	COLOR: #666
}
#side #newcomments {
	COLOR: #666
}
#side #hotarticls UL {
	MARGIN-BOTTOM: -8px
}
#side #hotarticls2 UL {
	MARGIN-BOTTOM: -8px
}
#side #newcomments UL {
	MARGIN-BOTTOM: -8px
}
#side #hotarticls LI {
	MARGIN-BOTTOM: 8px
}
#side #hotarticls2 LI {
	MARGIN-BOTTOM: 8px
}
#side #newcomments LI {
	MARGIN-BOTTOM: 8px
}
#side #hotarticls LI SPAN {
	MARGIN-LEFT: 10px
}
#side #hotarticls2 LI SPAN {
	MARGIN-LEFT: 10px
}
#side #newcomments LI SPAN {
	MARGIN-LEFT: 10px
}
#side #newcomments A {
	MARGIN-RIGHT: 9px
}
.itemlist LI A {
	WIDTH: 170px; TEXT-OVERFLOW: ellipsis
}
#main {
	WIDTH: 990px; FLOAT: right
}
#main .ad_class {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
#main .ad_class .notice {
	BORDER-BOTTOM: #f8cc7e 1px dashed; POSITION: absolute; BORDER-LEFT: =
#f8cc7e 1px dashed; PADDING-BOTTOM: 5px; MARGIN: 10px 10px 0px; =
PADDING-LEFT: 23px; WIDTH: 935px; PADDING-RIGHT: 0px; BACKGROUND: =
url(../images/skin-light.png) #fffce7 no-repeat 8px center; BORDER-TOP: =
#f8cc7e 1px dashed; BORDER-RIGHT: #f8cc7e 1px dashed; PADDING-TOP: 5px
}
#main .details {
	PADDING-BOTTOM: 35px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; =
BACKGROUND: #fff; PADDING-TOP: 65px
}
#main .list_item_new {
	PADDING-BOTTOM: 35px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; =
BACKGROUND: #fff; PADDING-TOP: 65px
}
#main .article_title {
	MARGIN-BOTTOM: 21px
}
#main .article_title .ico {
	WIDTH: 19px; DISPLAY: inline-block; HEIGHT: 19px; VERTICAL-ALIGN: =
middle; MARGIN-RIGHT: 10px
}
#main .article_title .ico_type_Repost {
	BACKGROUND-IMAGE: url(../images/skin-type-icon.png); BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: -50px 0px
}
#main .article_title .ico_type_Translated {
	BACKGROUND-IMAGE: url(../images/skin-type-icon.png); BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: -25px 0px
}
#main .article_title .ico_type_Original {
	BACKGROUND-IMAGE: url(../images/skin-type-icon.png); BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: 0px 0px
}
#main .article_title H1 {
	DISPLAY: inline-block; FONT-SIZE: 18px; VERTICAL-ALIGN: middle
}
#main .article_title H1 A {
	COLOR: #000
}
#main .contents .article_title H1 {
	FONT-SIZE: 12px
}
#main .article_manage {
	TEXT-ALIGN: right; MARGIN-BOTTOM: 10px; COLOR: #999
}
#main .article_manage A {
	COLOR: #33a5ba
}
#main .article_manage SPAN {
	MARGIN-RIGHT: 16px
}
#main .article_manage .link_categories {
	FLOAT: left; MARGIN-RIGHT: 0px
}
#main .article_manage .link_view {
	DISPLAY: inline-block
}
#main .article_manage .link_comments {
	DISPLAY: inline-block
}
#main .article_manage .link_collect {
	DISPLAY: inline-block
}
#main .article_manage .link_report {
	DISPLAY: inline-block
}
#main .article_manage .link_view {
	BACKGROUND-IMAGE: url(../images/skin-type-icon.png); PADDING-LEFT: =
24px; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: 0px -25px
}
#main .article_manage .link_comments {
	BACKGROUND-IMAGE: url(../images/skin-type-icon.png); PADDING-LEFT: =
17px; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: 0px -43px
}
#main .article_manage .link_collect {
	BACKGROUND-IMAGE: url(../images/skin-type-icon.png); PADDING-LEFT: =
17px; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: 0px -62px
}
#main .article_manage .link_report {
	BACKGROUND-IMAGE: url(../images/skin-type-icon.png); PADDING-LEFT: =
17px; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: 0px -81px
}
#main .tag2box {
	PADDING-BOTTOM: 20px
}
#main .tag2box A {
	BORDER-BOTTOM: #eee 1px solid; BORDER-LEFT: #eee 1px solid; =
PADDING-BOTTOM: 4px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; DISPLAY: =
inline-block; BACKGROUND: #eee; COLOR: #369; BORDER-TOP: #eee 1px solid; =
MARGIN-RIGHT: 10px; BORDER-RIGHT: #eee 1px solid; PADDING-TOP: 4px; =
border-radius: 10px
}
#main .article_content {
	LINE-HEIGHT: 35px; MARGIN: 35px 0px; COLOR: #555; FONT-SIZE: 15px
}
#main .article_content P > IMG {
	MAX-WIDTH: 602px; HEIGHT: auto
}
#main .article_content A {
	COLOR: #0c89cf
}
#main .article_content .dp-highlighter {
	BORDER-BOTTOM-COLOR: #ccc; BORDER-TOP-COLOR: #ccc; BORDER-RIGHT-COLOR: =
#ccc; OVERFLOW: hidden; BORDER-LEFT-COLOR: #ccc
}
#main .article_next_prev SPAN {
	LINE-HEIGHT: 26px; PADDING-LEFT: 27px; WIDTH: 51px; DISPLAY: =
inline-block; BACKGROUND: #999; HEIGHT: 26px; COLOR: #fff; MARGIN-RIGHT: =
7px
}
#main .article_next_prev A {
	COLOR: #333; TEXT-DECORATION: none
}
#main .article_next_prev .prev_article {
	MARGIN-BOTTOM: 3px
}
#main .article_next_prev .prev_article SPAN {
	BACKGROUND-IMAGE: url(../images/skin-type-icon.png); BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: 8px -111px
}
#main .article_next_prev .next_article SPAN {
	BACKGROUND-IMAGE: url(../images/skin-type-icon.png); BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: 8px -140px; MARGIN-RIGHT: 7px
}
#main .article_next_prev LI:hover SPAN {
	BACKGROUND-COLOR: #3d84b0
}
#main .article_next_prev LI:hover A {
	COLOR: #3d84b0
}
#main #digg {
	TEXT-ALIGN: center; MARGIN-TOP: 44px
}
#main #digg .digg {
	PADDING-BOTTOM: 7px; MARGIN: 0px; PADDING-LEFT: 0px; WIDTH: 72px; =
PADDING-RIGHT: 0px; DISPLAY: inline-block; COLOR: #fff; FONT-SIZE: 27px; =
VERTICAL-ALIGN: middle; CURSOR: pointer; PADDING-TOP: 7px
}
#main #digg .digg DT {
	MARGIN-BOTTOM: 4px
}
#main #digg .digg DD {
	MARGIN: 0px; FONT-SIZE: 15px; OVERFLOW: hidden
}
#main #digg #btnDigg {
	BACKGROUND: #f90
}
#main #digg #btnBury {
	BACKGROUND: #ff7900
}
#main #digg .digg_disable {
	BACKGROUND: #999
}
#main .blog-associat-tag {
	PADDING-BOTTOM: 10px; MARGIN: 0px; PADDING-LEFT: 20px; PADDING-RIGHT: =
20px; BACKGROUND: #f5f5f5; COLOR: #333; CLEAR: both; PADDING-TOP: 25px
}
#main .blog-associat-tag:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
'.'
}
#main .blog-associat-tag DT {
	MARGIN: 0px; FLOAT: left
}
#main .blog-associat-tag DD {
	MARGIN: 0px; FLOAT: left
}
#main .blog-associat-tag DT {
	FONT-SIZE: 14px; MARGIN-RIGHT: 19px
}
#main .blog-associat-tag .blog-tage-red {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 20px; PADDING-LEFT: 14px; =
PADDING-RIGHT: 14px; DISPLAY: inline-block; BACKGROUND: #e7e7e7; HEIGHT: =
20px; COLOR: #333; TEXT-DECORATION: none; PADDING-TOP: 0px; =
border-radius: 10px
}
#main .blog-ass-articl {
	PADDING-BOTTOM: 20px; MARGIN: 0px; PADDING-LEFT: 20px; PADDING-RIGHT: =
20px; BACKGROUND: #f5f5f5; PADDING-TOP: 0px
}
#main .blog-ass-articl:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
'.'
}
#main .blog-ass-articl DT {
	BORDER-BOTTOM: #ccc 2px solid; LINE-HEIGHT: 35px; MARGIN: 0px 0px 15px; =
HEIGHT: 35px; FONT-SIZE: 14px
}
#main .blog-ass-articl DT SPAN {
	BORDER-BOTTOM: #c00 2px solid; DISPLAY: inline-block; HEIGHT: 35px
}
#main .blog-ass-articl DD {
	POSITION: relative; LINE-HEIGHT: 23px; PADDING-LEFT: 10px; WIDTH: 47%; =
TEXT-OVERFLOW: ellipsis; WHITE-SPACE: nowrap; BACKGROUND: none =
transparent scroll repeat 0% 0%; FLOAT: left; HEIGHT: 23px; MARGIN-LEFT: =
0px; OVERFLOW: hidden; MARGIN-RIGHT: 9px
}
#main .blog-ass-articl DD:before {
	POSITION: absolute; WIDTH: 3px; BACKGROUND: #3d84b0; HEIGHT: 3px; =
CONTENT: ''; TOP: 10px; LEFT: 0px
}
#main .blog-ass-articl DD A {
	COLOR: #000; TEXT-DECORATION: none
}
#main #ad_cen {
	PADDING-BOTTOM: 13px; PADDING-LEFT: 29px; PADDING-RIGHT: 38px; =
MARGIN-BOTTOM: 11px; BACKGROUND: #fff; PADDING-TOP: 15px
}
#main .comment_class {
	PADDING-BOTTOM: 20px; PADDING-LEFT: 30px; PADDING-RIGHT: 30px; =
BACKGROUND: #fff; PADDING-TOP: 20px
}
#main .comment_class .panel_head {
	BORDER-BOTTOM: #ccc 2px solid; FONT-SIZE: 14px
}
#main .comment_class .panel_head > SPAN {
	BORDER-BOTTOM: #c00 2px solid; PADDING-BOTTOM: 7px; DISPLAY: =
inline-block; MARGIN-BOTTOM: -2px
}
#main .comment_class #comment_list {
	MARGIN: 20px 0px
}
#main .comment_class #comment_list DL {
	POSITION: relative; MARGIN: 0px; BORDER-TOP: #ccc 1px solid; =
PADDING-TOP: 16px
}
#main .comment_class #comment_list DL:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
'.'
}
#main .comment_class #comment_list DL:first-child {
	MARGIN-TOP: -24px; BORDER-TOP: 0px
}
#main .comment_class #comment_list DL > DT {
	FLOAT: right; COLOR: #999
}
#main .comment_class #comment_list DL > DD {
	FLOAT: left
}
#main .comment_class #comment_list .username {
	POSITION: absolute; COLOR: #3d84b0; FONT-SIZE: 14px; TEXT-DECORATION: =
none; LEFT: 47px
}
#main .comment_class #comment_list .comment_userface {
	MARGIN-BOTTOM: 16px; MARGIN-LEFT: 0px; MARGIN-RIGHT: 7px
}
#main .comment_class #comment_list .comment_head .reply {
	PADDING-LEFT: 17px; DISPLAY: inline-block; COLOR: #999; MARGIN-LEFT: =
10px; TEXT-DECORATION: none
}
#main .comment_class #comment_list .comment_head .quote {
	PADDING-LEFT: 17px; DISPLAY: inline-block; COLOR: #999; MARGIN-LEFT: =
10px; TEXT-DECORATION: none
}
#main .comment_class #comment_list .comment_head .report {
	PADDING-LEFT: 17px; DISPLAY: inline-block; COLOR: #999; MARGIN-LEFT: =
10px; TEXT-DECORATION: none
}
#main .comment_class #comment_list .comment_head .delete {
	PADDING-LEFT: 17px; DISPLAY: inline-block; COLOR: #999; MARGIN-LEFT: =
10px; TEXT-DECORATION: none
}
#main .comment_class #comment_list .comment_head .reply {
	BACKGROUND-IMAGE: url(../images/skin-comment-icon.png); =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: 0px 3px
}
#main .comment_class #comment_list .comment_head .quote {
	BACKGROUND-IMAGE: url(../images/skin-comment-icon.png); =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: 0px -13px
}
#main .comment_class #comment_list .comment_head .report {
	BACKGROUND-IMAGE: url(../images/skin-comment-icon.png); =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: 0px -31px
}
#main .comment_class #comment_list .comment_head .delete {
	BACKGROUND-IMAGE: url(../images/skin-comment-icon.png); =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: 0px -50px
}
#main .comment_class #comment_list .comment_body {
	PADDING-BOTTOM: 16px; MARGIN: 25px 0px 0px; WIDTH: 57%; WORD-BREAK: =
break-all
}
#main .comment_class #comment_list .comment_reply {
	WIDTH: 95%; FLOAT: right; CLEAR: both; BORDER-TOP: #ccc 1px solid; =
PADDING-TOP: 16px
}
#main .comment_class #comment_list .comment_reply .username {
	LEFT: 48px
}
#main .comment_class #comment_list .comment_reply .comment_body {
	WIDTH: 50%
}
#main #comment_form .commentform > UL {
	MARGIN: 0px 0px 0px 29px
}
#main #comment_form .panel_head {
	BORDER-BOTTOM: #ccc 2px solid; POSITION: relative; LINE-HEIGHT: 30px; =
MARGIN-BOTTOM: 15px
}
#main #comment_form .panel_head:after {
	POSITION: absolute; WIDTH: 60px; BOTTOM: -2px; BACKGROUND: #c00; =
HEIGHT: 2px; CONTENT: ""; LEFT: 0px
}
#main #comment_form .comment_btn {
	PADDING-BOTTOM: 5px; MARGIN: 5px 10px 10px 90px; PADDING-LEFT: 40px; =
PADDING-RIGHT: 40px; FONT-SIZE: 14px; PADDING-TOP: 5px
}
#main #comment_form .guest_link {
	LINE-HEIGHT: 41px; MARGIN: 15px -30px; PADDING-LEFT: 29px; BACKGROUND: =
#f5f5f5; HEIGHT: 41px; COLOR: #333
}
#main #comment_form .guest_link A {
	COLOR: #3d84b0; TEXT-DECORATION: none
}
#main #comment_form .comment_content {
	MIN-WIDTH: 90%; MAX-HEIGHT: 120px
}
#main .announce {
	COLOR: #999
}
#main .tag_list {
	PADDING-BOTTOM: 20px; MARGIN: 11px 0px 0px; PADDING-LEFT: 30px; =
PADDING-RIGHT: 30px; PADDING-TOP: 20px
}
#main .tag_list H5 {
	BORDER-BOTTOM: #ccc 2px solid; PADDING-BOTTOM: 0px; LINE-HEIGHT: =
normal; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND: #fff; HEIGHT: =
auto; COLOR: #333; PADDING-TOP: 0px
}
#main .tag_list H5 > A {
	BORDER-BOTTOM: #c00 2px solid; PADDING-BOTTOM: 9px; DISPLAY: =
inline-block; MARGIN-BOTTOM: -2px; FONT-SIZE: 14px; TEXT-DECORATION: =
none
}
#main .tag_list .classify {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 2px
}
#main .tag_list .classify A {
	MARGIN-TOP: 12px; DISPLAY: inline-block; COLOR: #3d84b0; MARGIN-RIGHT: =
25px; TEXT-DECORATION: none
}
#main .list_item_new .list_item {
	BORDER-BOTTOM: #ddd 1px dashed; PADDING-BOTTOM: 15px; MARGIN: 0px 10px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: "microsoft yahei"; =
PADDING-TOP: 20px
}
#main .list_item_new .list_item .article_title {
	TEXT-OVERFLOW: ellipsis; WHITE-SPACE: nowrap; OVERFLOW: hidden
}
#main .list_item_new .list_item H1 {
	FONT-WEIGHT: normal
}
#main .list_item_new .list_item .article_description {
	MARGIN: -10px 0px 10px; FONT: 14px/24px "microsoft yahei"; COLOR: #666
}
#main .list_item_new .list_view.list_item {
	POSITION: relative; PADDING-BOTTOM: 10px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; HEIGHT: 25px; PADDING-TOP: 10px
}
#main .list_item_new .list_view.list_item .article_title {
	WIDTH: 760px
}
#main .list_item_new .list_view.list_item .article_title {
	WHITE-SPACE: nowrap; OVERFLOW: hidden
}
#main .list_item_new .list_view.list_item .article_manage {
	WHITE-SPACE: nowrap; OVERFLOW: hidden
}
#main .list_item_new .list_view.list_item .article_manage {
	POSITION: absolute; WIDTH: 120px; TOP: 15px; RIGHT: -20px
}
#main .pagelist {
	TEXT-ALIGN: center; MARGIN: 20px auto; FONT: 12px/20px "microsoft =
yahei"
}
#main .pagelist > * {
	MARGIN: 0px 2px
}
#main .pagelist SPAN {
	COLOR: #666; MARGIN-RIGHT: 10px
}
#main .pagelist A {
	BORDER-BOTTOM: #dbe5ee 1px solid; BORDER-LEFT: #dbe5ee 1px solid; =
PADDING-BOTTOM: 2px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; COLOR: #333; =
BORDER-TOP: #dbe5ee 1px solid; BORDER-RIGHT: #dbe5ee 1px solid; =
TEXT-DECORATION: none; PADDING-TOP: 2px
}
#main .pagelist STRONG {
	BORDER-BOTTOM: #07519a 1px solid; BORDER-LEFT: #07519a 1px solid; =
PADDING-BOTTOM: 2px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; BACKGROUND: =
#07519a; COLOR: #fff; BORDER-TOP: #07519a 1px solid; BORDER-RIGHT: =
#07519a 1px solid; PADDING-TOP: 2px
}
#main .pagelist A:hover {
	BORDER-BOTTOM: #07519a 1px solid; BORDER-LEFT: #07519a 1px solid; =
PADDING-BOTTOM: 2px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; BACKGROUND: =
#07519a; COLOR: #fff; BORDER-TOP: #07519a 1px solid; BORDER-RIGHT: =
#07519a 1px solid; PADDING-TOP: 2px
}
#main #d-top {
	POSITION: fixed; MARGIN-LEFT: 640px; LEFT: 50%
}
#main #d-top A {
	MARGIN: 1px 0px; DISPLAY: block
}
#main .tag_list H5 > A {
	BORDER-BOTTOM-COLOR: #3d84b0
}
#main .blog-ass-articl DT SPAN {
	BORDER-BOTTOM-COLOR: #3d84b0
}
#main .comment_class .panel_head > SPAN {
	BORDER-BOTTOM-COLOR: #3d84b0
}
#main #comment_form .panel_head:after {
	BACKGROUND: #3d84b0
}
BODY {
	BACKGROUND: url(../images/bg-yellow.png)
}
#header {
	BACKGROUND: url(../images/title-yellow.png) no-repeat center 21px; =
HEIGHT: 345px; COLOR: #fff
}
#header H2 {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 70px; PADDING-RIGHT: 0px; =
PADDING-TOP: 90px
}
#header H2 A {
	FONT: bold 24px/40px "microsoft yahei"; COLOR: #fff
}
#header H3 {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 70px; WIDTH: 275px; PADDING-RIGHT: =
0px; FONT: 16px/20px "microsoft yahei"; MAX-HEIGHT: 40px; OVERFLOW: =
hidden; PADDING-TOP: 0px
}
#navigator {
	MARGIN-TOP: -45px
}
#navigator .navigator {
	PADDING-BOTTOM: 10px; MARGIN: 0px auto; PADDING-LEFT: 10px; WIDTH: =
1245px; PADDING-RIGHT: 10px; BACKGROUND: #454545; PADDING-TOP: 10px
}
#navigator .navigator:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
'.'
}
#navigator UL {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; FLOAT: right; PADDING-TOP: 0px
}
#navigator UL:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
'.'
}
#navigator UL LI {
	BORDER-BOTTOM: #ccc 1px solid; TEXT-ALIGN: center; BORDER-LEFT: #ccc =
1px solid; LINE-HEIGHT: 26px; WIDTH: 88px; BACKGROUND: #fff; FLOAT: =
left; HEIGHT: 26px; MARGIN-LEFT: 10px; FONT-SIZE: 12px; BORDER-TOP: #ccc =
1px solid; BORDER-RIGHT: #ccc 1px solid
}
#navigator UL LI A {
	COLOR: #666; TEXT-DECORATION: none
}
#navigator UL LI A IMG {
	VERTICAL-ALIGN: text-bottom; MARGIN-RIGHT: 6px
}
#side .panel {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; BORDER-TOP: =
#ccc 1px solid; BORDER-RIGHT: #ccc 1px solid
}
#side .panel A:link {
	COLOR: #c88326
}
#side .panel A:visited {
	COLOR: #c88326
}
#side .panel A:hover {
	COLOR: #e63
}
#main .article_manage A {
	COLOR: #c88326
}
#main .article_next_prev LI:hover SPAN {
	BACKGROUND-COLOR: #c88326
}
#main .article_next_prev LI:hover A {
	COLOR: #c88326
}
#main .article_next_prev #btnDigg {
	BACKGROUND: #f90
}
#main .article_next_prev #btnBury {
	BACKGROUND: #ff7900
}
#main .details {
	BORDER-BOTTOM: 0px; BORDER-LEFT: #ccc 1px solid; BORDER-TOP: #ccc 1px =
solid; BORDER-RIGHT: #ccc 1px solid
}
#main .blog-associat-tag {
	BORDER-LEFT: #ccc 1px solid; BORDER-RIGHT: #ccc 1px solid
}
#main .blog-ass-articl {
	BORDER-LEFT: #ccc 1px solid; BORDER-RIGHT: #ccc 1px solid
}
#main #ad_cen {
	BORDER-LEFT: #ccc 1px solid; BORDER-RIGHT: #ccc 1px solid
}
#main #ad_cen {
	BORDER-BOTTOM: #ccc 1px solid
}
#main .comment_class {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; BORDER-TOP: =
#ccc 1px solid; BORDER-RIGHT: #ccc 1px solid
}
#main .tag_list {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; BORDER-TOP: =
#ccc 1px solid; BORDER-RIGHT: #ccc 1px solid
}
#main .comment_head .username {
	COLOR: #c88326 !important
}
#main .comment_head A:hover {
	COLOR: #c88326 !important
}
#main .comment_head A.reply:hover {
	BACKGROUND-IMAGE: url(../images/skin-comment-icon-yellow.png) =
!important
}
#main .comment_head A.quote:hover {
	BACKGROUND-IMAGE: url(../images/skin-comment-icon-yellow.png) =
!important
}
#main .comment_head A.report:hover {
	BACKGROUND-IMAGE: url(../images/skin-comment-icon-yellow.png) =
!important
}
#main .comment_head A.delete:hover {
	BACKGROUND-IMAGE: url(../images/skin-comment-icon-yellow.png) =
!important
}
#main .article_manage A {
	COLOR: #c88326
}
#main .article_manage .link_comments {
	BACKGROUND-IMAGE: url(../images/skin-type-icon-yellow.png) !important
}
#main .article_manage .link_collect {
	BACKGROUND-IMAGE: url(../images/skin-type-icon-yellow.png) !important
}
#main .article_manage .link_report {
	BACKGROUND-IMAGE: url(../images/skin-type-icon-yellow.png) !important
}
#main .tag_list .classify A {
	COLOR: #c88326 !important
}
#main .guest_link A {
	COLOR: #c88326 !important
}
#main .blog-ass-articl DD:before {
	BACKGROUND: #c88326
}
#main .tag_list H5 > A {
	BORDER-BOTTOM-COLOR: #c88326
}
#main .blog-ass-articl DT SPAN {
	BORDER-BOTTOM-COLOR: #c88326
}
#main .comment_class .panel_head > SPAN {
	BORDER-BOTTOM-COLOR: #c88326
}
#main #comment_form .panel_head:after {
	BACKGROUND: #c88326
}
#article_content IMG {
	MAX-WIDTH: 100%; MAX-HEIGHT: 100%
}
#article_content P IMG {
	MAX-WIDTH: 100%; MAX-HEIGHT: 100%
}
#article_content P SPAN IMG {
	MAX-WIDTH: 100%; MAX-HEIGHT: 100%
}

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/default.css

.dp-highlighter {
	TEXT-ALIGN: left; BACKGROUND-COLOR: #e7e5dc; MARGIN: 18px 0px; WIDTH: =
99%; FONT-FAMILY: "Consolas" , "Courier New" , Courier, mono, serif; =
FONT-SIZE: 12px; OVERFLOW: auto; PADDING-TOP: 1px
}
.dp-highlighter OL {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: =
0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px
}
.dp-highlighter OL LI {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: =
0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px
}
.dp-highlighter OL LI SPAN {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: =
0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px
}
.dp-highlighter A {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: =
0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND: =
none transparent scroll repeat 0% 0%; BORDER-TOP: medium none; =
BORDER-RIGHT: medium none; PADDING-TOP: 0px
}
.dp-highlighter A:hover {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: =
0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND: =
none transparent scroll repeat 0% 0%; BORDER-TOP: medium none; =
BORDER-RIGHT: medium none; PADDING-TOP: 0px
}
.dp-highlighter .bar {
	PADDING-LEFT: 45px
}
.collapsed.dp-highlighter .bar {
	PADDING-LEFT: 0px
}
.nogutter.dp-highlighter .bar {
	PADDING-LEFT: 0px
}
.dp-highlighter OL {
	PADDING-BOTTOM: 0px; BACKGROUND-COLOR: #fff; LIST-STYLE-TYPE: decimal; =
MARGIN: 0px 0px 1px 45px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; COLOR: =
#5c5c5c; PADDING-TOP: 0px
}
.nogutter.dp-highlighter OL {
	LIST-STYLE-TYPE: none !important; MARGIN-LEFT: 0px !important; =
LIST-STYLE-IMAGE: none !important
}
.nogutter.dp-highlighter OL LI {
	LIST-STYLE-TYPE: none !important; MARGIN-LEFT: 0px !important; =
LIST-STYLE-IMAGE: none !important
}
.dp-highlighter OL LI {
	LIST-STYLE-POSITION: outside !important; BORDER-LEFT: #6ce26c 3px =
solid; PADDING-BOTTOM: 0px !important; LINE-HEIGHT: 150%; =
BACKGROUND-COLOR: #f8f8f8; LIST-STYLE-TYPE: decimal-leading-zero; =
MARGIN: 0px; PADDING-LEFT: 10px !important; PADDING-RIGHT: 3px =
!important; COLOR: #5c5c5c; PADDING-TOP: 0px !important
}
.dp-highlighter .columns DIV {
	LIST-STYLE-POSITION: outside !important; BORDER-LEFT: #6ce26c 3px =
solid; PADDING-BOTTOM: 0px !important; LINE-HEIGHT: 150%; =
BACKGROUND-COLOR: #f8f8f8; LIST-STYLE-TYPE: decimal-leading-zero; =
MARGIN: 0px; PADDING-LEFT: 10px !important; PADDING-RIGHT: 3px =
!important; COLOR: #5c5c5c; PADDING-TOP: 0px !important
}
.nogutter.dp-highlighter OL LI {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
.nogutter.dp-highlighter .columns DIV {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
.dp-highlighter .columns {
	BACKGROUND-COLOR: #f8f8f8; WIDTH: 100%; COLOR: gray; OVERFLOW: hidden
}
.dp-highlighter .columns DIV {
	PADDING-BOTTOM: 5px
}
.dp-highlighter OL LI.alt {
	BACKGROUND-COLOR: #fff; COLOR: inherit
}
.dp-highlighter OL LI SPAN {
	BACKGROUND-COLOR: inherit; COLOR: black
}
.collapsed.dp-highlighter OL {
	MARGIN: 0px
}
.collapsed.dp-highlighter OL LI {
	DISPLAY: none
}
.printing.dp-highlighter {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none
}
.printing.dp-highlighter .tools {
	DISPLAY: none !important
}
.printing.dp-highlighter LI {
	DISPLAY: list-item !important
}
.dp-highlighter .tools {
	BORDER-LEFT: #6ce26c 3px solid; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: =
#f8f8f8; PADDING-LEFT: 10px; PADDING-RIGHT: 8px; FONT: 9px Verdana, =
Geneva, Arial, Helvetica, sans-serif; COLOR: silver; PADDING-TOP: 3px
}
.nogutter.dp-highlighter .tools {
	BORDER-LEFT: 0px
}
.collapsed.dp-highlighter .tools {
	BORDER-BOTTOM: 0px
}
.dp-highlighter .tools A {
	BACKGROUND-COLOR: inherit; COLOR: #a0a0a0; FONT-SIZE: 9px; =
MARGIN-RIGHT: 10px; TEXT-DECORATION: none
}
.dp-highlighter .tools A:hover {
	BACKGROUND-COLOR: inherit; COLOR: red; TEXT-DECORATION: underline
}
.dp-about {
	PADDING-BOTTOM: 0px; BACKGROUND-COLOR: #fff; MARGIN: 0px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; COLOR: #333; PADDING-TOP: 0px
}
.dp-about TABLE {
	WIDTH: 100%; FONT-FAMILY: Tahoma, Verdana, Arial, sans-serif =
!important; HEIGHT: 100%; FONT-SIZE: 11px
}
.dp-about TD {
	PADDING-BOTTOM: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
VERTICAL-ALIGN: top; PADDING-TOP: 10px
}
.dp-about .copy {
	BORDER-BOTTOM: #aca899 1px solid; HEIGHT: 95%
}
.dp-about .title {
	BACKGROUND-COLOR: inherit; COLOR: red; FONT-WEIGHT: bold
}
.dp-about .para {
	MARGIN: 0px 0px 4px
}
.dp-about .footer {
	TEXT-ALIGN: right; BACKGROUND-COLOR: #eceadb; COLOR: #333; BORDER-TOP: =
#fff 1px solid
}
.dp-about .close {
	BACKGROUND-COLOR: #eceadb; WIDTH: 60px; FONT-FAMILY: Tahoma, Verdana, =
Arial, sans-serif !important; HEIGHT: 22px; COLOR: #333; FONT-SIZE: 11px
}
.dp-highlighter .comment {
	BACKGROUND-COLOR: inherit; COLOR: #008200
}
.dp-highlighter .comments {
	BACKGROUND-COLOR: inherit; COLOR: #008200
}
.dp-highlighter .string {
	BACKGROUND-COLOR: inherit; COLOR: blue
}
.dp-highlighter .keyword {
	BACKGROUND-COLOR: inherit; COLOR: #069; FONT-WEIGHT: bold
}
.dp-highlighter .preprocessor {
	BACKGROUND-COLOR: inherit; COLOR: gray
}
.dp-xml .cdata {
	COLOR: #ff1493
}
.dp-xml .tag {
	COLOR: #993300; FONT-WEIGHT: bold
}
.dp-xml .tag-name {
	COLOR: #993300; FONT-WEIGHT: bold
}
.dp-xml .attribute {
	COLOR: red
}
.dp-xml .attribute-value {
	COLOR: blue
}
.dp-sql .func {
	COLOR: #ff1493
}
.dp-sql .op {
	COLOR: #808080
}
.dp-rb .symbol {
	COLOR: #a70
}
.dp-rb .variable {
	COLOR: #a70; FONT-WEIGHT: bold
}
.dp-py .builtins {
	COLOR: #ff1493
}
.dp-py .magicmethods {
	COLOR: #808080
}
.dp-py .exceptions {
	COLOR: brown
}
.dp-py .types {
	FONT-STYLE: italic; COLOR: brown
}
.dp-py .commonlibs {
	FONT-STYLE: italic; COLOR: #8a2be2
}
.dp-j .annotation {
	COLOR: #646464
}
.dp-j .number {
	COLOR: #c00000
}
.dp-delphi .number {
	COLOR: blue
}
.dp-delphi .directive {
	COLOR: #008284
}
.dp-delphi .vars {
	COLOR: #000
}
.dp-css .value {
	COLOR: black
}
.dp-css .important {
	COLOR: red
}
.dp-c .vars {
	COLOR: #d00
}
.dp-cpp .datatypes {
	COLOR: #2e8b57; FONT-WEIGHT: bold
}
.dp-highlighter .bar A {
	PADDING-BOTTOM: 1px; TEXT-INDENT: -2000px; PADDING-LEFT: 1px; WIDTH: =
16px; PADDING-RIGHT: 1px; DISPLAY: inline-block; BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: left top; HEIGHT: 16px; PADDING-TOP: =
1px; _width: 0px; _overflow: hidden; _padding-left: 16px; _text-indent: =
0px
}
.dp-highlighter .bar A:hover {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
BACKGROUND-REPEAT: no-repeat; BORDER-TOP: #ccc 1px solid; BORDER-RIGHT: =
#ccc 1px solid; TEXT-DECORATION: none; PADDING-TOP: 0px; _padding-left: =
16px
}
.dp-highlighter .bar A.ExpandSource {
=09
}
.dp-highlighter .bar A.ViewSource {
	BACKGROUND-IMAGE: url(images/default/ico_plain.gif)
}
.dp-highlighter .bar A.CopyToClipboard {
	BACKGROUND-IMAGE: url(images/default/ico_copy.gif)
}
.dp-highlighter .bar A.PrintSource {
	DISPLAY: none
}
.dp-highlighter .bar A.About {
	DISPLAY: none
}

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/css/comment1.css

.commentform {
=09
}
.commentform UL {
	MARGIN: 0px 20px 5px; FONT: 12px/24px Arial, Helvetica, sans-serif; =
CLEAR: both
}
.commentform .left {
	WIDTH: 80px; DISPLAY: block; FLOAT: left
}
.commentform .right {
	DISPLAY: block; MARGIN-LEFT: 90px
}
.commentform TEXTAREA {
	BORDER-BOTTOM: #ddd 1px solid; BORDER-LEFT: #ddd 1px solid; =
PADDING-BOTTOM: 5px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; FONT: =
14px/24px Arial, Helvetica, sans-serif; COLOR: #555; BORDER-TOP: #ddd =
1px solid; BORDER-RIGHT: #ddd 1px solid; PADDING-TOP: 5px
}
#lang_list {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
BACKGROUND-COLOR: #ffffff; WIDTH: 388px; FONT-SIZE: 12px; BORDER-TOP: =
#ccc 1px solid; BORDER-RIGHT: #ccc 1px solid
}
#lang_list A {
	BORDER-BOTTOM: #ccc 1px solid; TEXT-ALIGN: center; PADDING-BOTTOM: 0px; =
PADDING-LEFT: 5px; PADDING-RIGHT: 5px; DISPLAY: inline-block; FLOAT: =
left; CURSOR: pointer; BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 0px
}
#lang_list A:hover {
	BACKGROUND-COLOR: #666; COLOR: #fff
}
.long_name {
	WIDTH: 70px
}
.duan_name {
	WIDTH: 25px
}
.zhong_name {
	WIDTH: 48px
}

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: 7bit
Content-Location: http://static.blog.csdn.net/css/style1.css

.commentform UL {
	MARGIN: 0px
}
.commentform LI {
	LIST-STYLE-TYPE: none; MARGIN: 0px
}

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/public/res-min/markdown_views.css?v=1.0

.hljs {
	PADDING-BOTTOM: 0.5em; PADDING-LEFT: 0.5em; PADDING-RIGHT: 0.5em; =
DISPLAY: block; BACKGROUND: #fff; COLOR: #000; PADDING-TOP: 0.5em
}
.hljs-comment {
	COLOR: #800
}
.hljs-template_comment {
	COLOR: #800
}
.hljs-javadoc {
	COLOR: #800
}
.hljs-comment * {
	COLOR: #800
}
.hljs-keyword {
	COLOR: #008
}
.method {
	COLOR: #008
}
.hljs-list .hljs-title {
	COLOR: #008
}
.clojure .hljs-built_in {
	COLOR: #008
}
.nginx .hljs-title {
	COLOR: #008
}
.hljs-tag .hljs-title {
	COLOR: #008
}
.setting .hljs-value {
	COLOR: #008
}
.hljs-winutils {
	COLOR: #008
}
.tex .hljs-command {
	COLOR: #008
}
.http .hljs-title {
	COLOR: #008
}
.hljs-request {
	COLOR: #008
}
.hljs-status {
	COLOR: #008
}
.hljs-envvar {
	COLOR: #660
}
.tex .hljs-special {
	COLOR: #660
}
.hljs-string {
	COLOR: #080
}
.hljs-tag .hljs-value {
	COLOR: #080
}
.hljs-cdata {
	COLOR: #080
}
.hljs-filter .hljs-argument {
	COLOR: #080
}
.hljs-attr_selector {
	COLOR: #080
}
.apache .hljs-cbracket {
	COLOR: #080
}
.hljs-date {
	COLOR: #080
}
.hljs-regexp {
	COLOR: #080
}
.coffeescript .hljs-attribute {
	COLOR: #080
}
.hljs-sub .hljs-identifier {
	COLOR: #066
}
.hljs-pi {
	COLOR: #066
}
.hljs-tag {
	COLOR: #066
}
.hljs-tag .hljs-keyword {
	COLOR: #066
}
.hljs-decorator {
	COLOR: #066
}
.ini .hljs-title {
	COLOR: #066
}
.hljs-shebang {
	COLOR: #066
}
.hljs-prompt {
	COLOR: #066
}
.hljs-hexcolor {
	COLOR: #066
}
.hljs-rules .hljs-value {
	COLOR: #066
}
.css .hljs-value .hljs-number {
	COLOR: #066
}
.hljs-literal {
	COLOR: #066
}
.hljs-symbol {
	COLOR: #066
}
.ruby .hljs-symbol .hljs-string {
	COLOR: #066
}
.hljs-number {
	COLOR: #066
}
.css .hljs-function {
	COLOR: #066
}
.clojure .hljs-attribute {
	COLOR: #066
}
.hljs-class .hljs-title {
	COLOR: #606
}
.haskell .hljs-type {
	COLOR: #606
}
.smalltalk .hljs-class {
	COLOR: #606
}
.hljs-javadoctag {
	COLOR: #606
}
.hljs-yardoctag {
	COLOR: #606
}
.hljs-phpdoc {
	COLOR: #606
}
.hljs-typename {
	COLOR: #606
}
.hljs-tag .hljs-attribute {
	COLOR: #606
}
.hljs-doctype {
	COLOR: #606
}
.hljs-class .hljs-id {
	COLOR: #606
}
.hljs-built_in {
	COLOR: #606
}
.setting {
	COLOR: #606
}
.hljs-params {
	COLOR: #606
}
.hljs-variable {
	COLOR: #606
}
.clojure .hljs-title {
	COLOR: #606
}
.css .hljs-tag {
	COLOR: #000
}
.hljs-rules .hljs-property {
	COLOR: #000
}
.hljs-pseudo {
	COLOR: #000
}
.hljs-subst {
	COLOR: #000
}
.css .hljs-class {
	COLOR: #9b703f
}
.css .hljs-id {
	COLOR: #9b703f
}
.hljs-value .hljs-important {
	COLOR: #f70; FONT-WEIGHT: bold
}
.hljs-rules .hljs-keyword {
	COLOR: #c5af75
}
.hljs-annotation {
	COLOR: #9b859d
}
.apache .hljs-sqbracket {
	COLOR: #9b859d
}
.nginx .hljs-built_in {
	COLOR: #9b859d
}
.hljs-preprocessor {
	COLOR: #444
}
.hljs-preprocessor * {
	COLOR: #444
}
.hljs-pragma {
	COLOR: #444
}
.tex .hljs-formula {
	BACKGROUND-COLOR: #eee; FONT-STYLE: italic
}
.diff .hljs-header {
	COLOR: #808080; FONT-WEIGHT: bold
}
.hljs-chunk {
	COLOR: #808080; FONT-WEIGHT: bold
}
.diff .hljs-change {
	BACKGROUND-COLOR: #bccff9
}
.hljs-addition {
	BACKGROUND-COLOR: #baeeba
}
.hljs-deletion {
	BACKGROUND-COLOR: #ffc8bd
}
.hljs-comment .hljs-yardoctag {
	FONT-WEIGHT: bold
}
.markdown_views {
	FONT-FAMILY: "microsoft yahei"; FONT-SIZE: 14px
}
.markdown_views * {
	BOX-SIZING: border-box
}
.markdown_views H1 {
	MARGIN: 0.8em 0px; FONT-WEIGHT: 100
}
.markdown_views H2 {
	MARGIN: 0.8em 0px; FONT-WEIGHT: 100
}
.markdown_views H3 {
	MARGIN: 0.8em 0px; FONT-WEIGHT: 100
}
.markdown_views H4 {
	MARGIN: 0.8em 0px; FONT-WEIGHT: 100
}
.markdown_views H5 {
	MARGIN: 0.8em 0px; FONT-WEIGHT: 100
}
.markdown_views H6 {
	MARGIN: 0.8em 0px; FONT-WEIGHT: 100
}
.markdown_views P {
	MARGIN: 0px 0px 1.1em
}
.markdown_views PRE {
	MARGIN: 0px 0px 1.1em
}
.markdown_views PRE.prettyprint {
	MARGIN: 0px 0px 1.1em
}
.markdown_views BLOCKQUOTE {
	MARGIN: 0px 0px 1.1em
}
.markdown_views HR {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; MARGIN: 2em 0px; BORDER-TOP: 0px; =
BORDER-RIGHT: 0px
}
.markdown_views DT {
	FONT-WEIGHT: bold
}
.markdown_views ABBR[title] {
	BORDER-BOTTOM: #999 1px dotted; CURSOR: help
}
.markdown_views ABBR[data-original-title] {
	BORDER-BOTTOM: #999 1px dotted; CURSOR: help
}
.markdown_views .initialism {
	TEXT-TRANSFORM: uppercase; FONT-SIZE: 90%
}
.markdown_views BLOCKQUOTE {
	PADDING-BOTTOM: 15px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; =
PADDING-TOP: 15px; border-radius: 0 5px 5px 0
}
.markdown_views BLOCKQUOTE P {
	LINE-HEIGHT: 1.25
}
.markdown_views BLOCKQUOTE SMALL {
	LINE-HEIGHT: 1.45; DISPLAY: block; COLOR: #999
}
.markdown_views BLOCKQUOTE .small {
	LINE-HEIGHT: 1.45; DISPLAY: block; COLOR: #999
}
.markdown_views BLOCKQUOTE SMALL:before {
	CONTENT: "=A1=AA?"
}
.markdown_views BLOCKQUOTE .small:before {
	CONTENT: "=A1=AA?"
}
.markdown_views BLOCKQUOTE.pull-right {
	BORDER-LEFT: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 15px
}
.markdown_views BLOCKQUOTE.pull-right P {
	TEXT-ALIGN: right
}
.markdown_views BLOCKQUOTE.pull-right SMALL {
	TEXT-ALIGN: right
}
.markdown_views BLOCKQUOTE.pull-right .small {
	TEXT-ALIGN: right
}
.markdown_views BLOCKQUOTE.pull-right SMALL:before {
	CONTENT: ""
}
.markdown_views BLOCKQUOTE.pull-right .small:before {
	CONTENT: ""
}
.markdown_views BLOCKQUOTE.pull-right SMALL:after {
	CONTENT: "?=A1=AA"
}
.markdown_views BLOCKQUOTE.pull-right .small:after {
	CONTENT: "?=A1=AA"
}
.markdown_views BLOCKQUOTE:before {
	CONTENT: ""
}
.markdown_views BLOCKQUOTE:after {
	CONTENT: ""
}
.markdown_views ADDRESS {
	LINE-HEIGHT: 1.45; FONT-STYLE: normal; MARGIN-BOTTOM: 21px
}
.markdown_views CODE {
	FONT-FAMILY: "Source Code Pro", monospace
}
.markdown_views KBD {
	FONT-FAMILY: "Source Code Pro", monospace
}
.markdown_views PRE {
	FONT-FAMILY: "Source Code Pro", monospace
}
.markdown_views SAMP {
	FONT-FAMILY: "Source Code Pro", monospace
}
.markdown_views CODE {
	PADDING-BOTTOM: 2px; PADDING-LEFT: 4px; PADDING-RIGHT: 4px; =
WHITE-SPACE: nowrap; COLOR: #3f3f3f; FONT-SIZE: 90%; PADDING-TOP: 2px; =
border-radius: 0
}
.markdown_views PRE {
	PADDING-BOTTOM: 10px; LINE-HEIGHT: 1.45; MARGIN: 0px 0px 10.5px; =
PADDING-LEFT: 10px; PADDING-RIGHT: 10px; DISPLAY: block; WORD-WRAP: =
break-word; COLOR: #333; FONT-SIZE: 14px; WORD-BREAK: break-all; =
PADDING-TOP: 10px; border-radius: 0
}
.markdown_views PRE CODE {
	PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; WORD-WRAP: normal; WHITE-SPACE: pre; COLOR: inherit; =
FONT-SIZE: inherit; PADDING-TOP: 0px; border-radius: 0
}
.markdown_views .pre-scrollable {
	OVERFLOW-Y: scroll; MAX-HEIGHT: 340px
}
.markdown_views .sequence-diagram {
	TEXT-ALIGN: center; MARGIN-BOTTOM: 1.1em
}
.markdown_views .flow-chart {
	TEXT-ALIGN: center; MARGIN-BOTTOM: 1.1em
}
.markdown_views TABLE {
	BORDER-BOTTOM: #eee 1px solid; BORDER-LEFT: #eee 1px solid; =
BACKGROUND-COLOR: transparent; BORDER-SPACING: 0; WIDTH: 100%; =
BORDER-COLLAPSE: collapse; BORDER-TOP: #eee 1px solid; BORDER-RIGHT: =
#eee 1px solid
}
.markdown_views TABLE TH {
	BORDER-BOTTOM: #eee 1px solid; BORDER-LEFT: #eee 1px solid; =
PADDING-BOTTOM: 8px; LINE-HEIGHT: 20px; PADDING-LEFT: 8px; =
PADDING-RIGHT: 8px; VERTICAL-ALIGN: top; BORDER-TOP: #eee 1px solid; =
BORDER-RIGHT: #eee 1px solid; PADDING-TOP: 8px
}
.markdown_views TABLE TD {
	BORDER-BOTTOM: #eee 1px solid; BORDER-LEFT: #eee 1px solid; =
PADDING-BOTTOM: 8px; LINE-HEIGHT: 20px; PADDING-LEFT: 8px; =
PADDING-RIGHT: 8px; VERTICAL-ALIGN: top; BORDER-TOP: #eee 1px solid; =
BORDER-RIGHT: #eee 1px solid; PADDING-TOP: 8px
}
.markdown_views .prettyprint {
	POSITION: relative; PADDING-BOTTOM: 5px; OVERFLOW-X: auto; OVERFLOW-Y: =
hidden; PADDING-LEFT: 60px; PADDING-RIGHT: 5px; WHITE-SPACE: nowrap; =
PADDING-TOP: 5px
}
.markdown_views .prettyprint .pre-numbering {
	POSITION: absolute; TEXT-ALIGN: right; PADDING-BOTTOM: 40px; =
BACKGROUND-COLOR: #eee; LIST-STYLE-TYPE: none; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 50px; PADDING-RIGHT: 0px; TOP: 0px; =
LIST-STYLE-IMAGE: none; BORDER-RIGHT: #ddd 1px solid; PADDING-TOP: 6px; =
LEFT: 0px
}
.markdown_views .prettyprint .pre-numbering LI {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; =
PADDING-TOP: 0px
}

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/css/category.css?v=1.0

.article_manage {
	BORDER-BOTTOM: #ededed 1px solid; TEXT-ALIGN: right; PADDING-BOTTOM: =
5px; MARGIN: 0px -20px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; FONT: =
12px/22px Arial; COLOR: #999; OVERFLOW: hidden; PADDING-TOP: 0px
}
.article_manage SPAN {
	MARGIN: 0px 5px
}
.article_manage .link_postdate {
	MARGIN: 0px 5px 0px 0px
}
.article_manage .link_view {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 14px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../../../images/ico_view.png) no-repeat left center; =
PADDING-TOP: 0px; _background: url(../../../images/ico_view.gif) =
no-repeat left center
}
.article_manage .link_comments {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 14px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../../../images/ico_comm.png) no-repeat left center; =
PADDING-TOP: 0px; _background: url(../../../images/ico_comm.gif) =
no-repeat left center
}
.article_manage .link_categories {
	FLOAT: left
}
.list_view {
	PADDING-BOTTOM: 5px; MARGIN: 0px 20px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; PADDING-TOP: 5px
}
.list_view .article_title {
	MARGIN: 0px; TEXT-OVERFLOW: ellipsis; DISPLAY: inline; FONT: 14px/30px =
Arial; WHITE-SPACE: nowrap; FLOAT: left; HEIGHT: 30px; OVERFLOW: hidden
}
.list_view .article_title:after {
	CONTENT: "..."
}
.list_view .article_title H3 {
	FONT: 12px/30px Arial
}
.list_view .article_title H1 {
	FONT: 12px/30px Arial
}
.list_view .article_manage {
	TEXT-ALIGN: right !important; PADDING-BOTTOM: 0px !important; =
LINE-HEIGHT: 30px !important; PADDING-LEFT: 0px !important; =
PADDING-RIGHT: 0px !important; DISPLAY: inline; WHITE-SPACE: nowrap; =
FLOAT: right; PADDING-TOP: 0px !important
}
.list_view .article_description {
	DISPLAY: none !important
}
.list_view .article_manage SPAN {
	MARGIN: 0px
}
.article_l {
	WIDTH: 100%; FLOAT: left
}
.category_l IMG {
	VERTICAL-ALIGN: middle
}
.category_l SPAN {
	DISPLAY: inline-block; VERTICAL-ALIGN: middle
}
.article_l SPAN A {
	DISPLAY: inline-block; MARGIN-RIGHT: 10px
}
.article_r .fa {
	FONT-WEIGHT: normal
}
.category {
	BORDER-BOTTOM: #ededed 1px solid; PADDING-BOTTOM: 5px; MARGIN: 0px =
-20px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; PADDING-TOP: 5px
}
.category_l {
	DISPLAY: inline-block
}
.category_r {
	DISPLAY: inline-block
}
.category_l {
	LINE-HEIGHT: 28px; WIDTH: 70px; FLOAT: left; COLOR: #333; FONT-SIZE: =
14px
}
.category_r {
	WIDTH: 90%; FLOAT: left; COLOR: #df3434; FONT-SIZE: 14px
}
.category_r .subItem_t .J_close {
	LINE-HEIGHT: 42px; FONT-STYLE: normal; FLOAT: right; COLOR: #ccc; =
FONT-SIZE: 16px; FONT-WEIGHT: normal
}
.category_r EM {
	FONT-STYLE: normal
}
.category_r LABEL {
	POSITION: relative; LINE-HEIGHT: 28px; DISPLAY: inline-block; =
MARGIN-LEFT: 15px; CURSOR: pointer
}
.category_r LABEL .fa {
	COLOR: #999
}
.category_r LABEL .fa-caret-up {
	DISPLAY: none; transform: all 2.2s
}
.subItem {
	Z-INDEX: 9999; BORDER-BOTTOM: #dcdcdc 1px solid; POSITION: absolute; =
BORDER-LEFT: #dcdcdc 1px solid; WIDTH: 400px; DISPLAY: none; BACKGROUND: =
#fff; COLOR: #333; MAX-HEIGHT: 400px; BORDER-TOP: #dcdcdc 1px solid; =
TOP: 46px; BORDER-RIGHT: #dcdcdc 1px solid; LEFT: -10px; box-shadow: 5px =
0 10px #dcdcdc
}
.subItem:after {
	POSITION: absolute; WIDTH: 10px; DISPLAY: block; BACKGROUND: =
url(../images/triangle.png) no-repeat; HEIGHT: 10px; CONTENT: ''; TOP: =
-10px; LEFT: 20px
}
.subItem .subItem_l LI A {
	COLOR: #333
}
.subItem_t {
	BORDER-BOTTOM: #dcdcdc 1px solid; PADDING-BOTTOM: 0px; LINE-HEIGHT: =
42px; PADDING-LEFT: 15px; PADDING-RIGHT: 20px; HEIGHT: 42px; COLOR: =
#999; PADDING-TOP: 0px
}
.category_r .subItem_t .fa-close {
	LINE-HEIGHT: 42px; FLOAT: right; COLOR: #ccc; FONT-SIZE: 16px; =
FONT-WEIGHT: normal
}
.subItem_l {
	PADDING-BOTTOM: 0px; OVERFLOW-Y: auto; LIST-STYLE-TYPE: none; MARGIN: =
0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; MAX-HEIGHT: 358px; =
LIST-STYLE-IMAGE: none; PADDING-TOP: 0px
}
.subItem .subItem_l LI {
	BORDER-BOTTOM: #eeeeee 1px solid; PADDING-BOTTOM: 0px; LINE-HEIGHT: =
52px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; HEIGHT: 52px; =
PADDING-TOP: 0px
}
.subItem_l LI EM {
	DISPLAY: inline-block; VERTICAL-ALIGN: middle; MARGIN-RIGHT: 10px
}
.subItem_l LI A {
	WIDTH: 95%; TEXT-OVERFLOW: ellipsis; DISPLAY: inline-block; =
WHITE-SPACE: nowrap; COLOR: #333; FONT-SIZE: 14px; VERTICAL-ALIGN: =
middle; OVERFLOW: hidden
}
.similar_article {
	OVERFLOW: hidden
}
.similar_article H4 {
	COLOR: #333; FONT-SIZE: 16px
}
.similar_c {
	BORDER-BOTTOM: #bbb 1px solid; BORDER-LEFT: #bbb 1px solid; BORDER-TOP: =
#bbb 1px solid; BORDER-RIGHT: #bbb 1px solid
}
.similar_c_t {
	BORDER-BOTTOM: #dcdcdc 1px solid; LINE-HEIGHT: 45px
}
.similar_c_t LABEL {
	DISPLAY: inline-block; COLOR: #666; MARGIN-LEFT: 25px; FONT-SIZE: 16px
}
.similar_c_t LABEL EM {
	FONT-STYLE: normal
}
.similar_c_t .similar_cur {
	FONT-WEIGHT: bold
}
.fl {
	FLOAT: left
}
.fr {
	FLOAT: right
}
.similar_wrap {
	PADDING-BOTTOM: 10px; OVERFLOW-Y: auto; PADDING-LEFT: 20px; =
PADDING-RIGHT: 20px; BACKGROUND: #fcfcfc; MAX-HEIGHT: 180px; =
PADDING-TOP: 10px
}
.similar_list {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: =
0px; WIDTH: 49%; PADDING-RIGHT: 0px; LIST-STYLE-IMAGE: none; =
PADDING-TOP: 0px
}
.similar_list LI {
	LINE-HEIGHT: 30px; LIST-STYLE-TYPE: none; LIST-STYLE-IMAGE: none
}
.similar_list LI EM {
	FONT-STYLE: normal; DISPLAY: inline-block; VERTICAL-ALIGN: middle; =
MARGIN-RIGHT: 10px
}
.similar_list LI A {
	WIDTH: 50%; TEXT-OVERFLOW: ellipsis; DISPLAY: inline-block; =
WHITE-SPACE: nowrap; COLOR: #333; VERTICAL-ALIGN: middle; OVERFLOW: =
hidden
}
.similar_list LI A:hover {
	COLOR: #fe0000
}
.similar_list LI SPAN {
	DISPLAY: inline-block; COLOR: #bbbbbb; MARGIN-LEFT: 9px; FONT-SIZE: =
12px
}
.similar_list LI LABEL {
	DISPLAY: inline-block; COLOR: #bbbbbb; MARGIN-LEFT: 9px; FONT-SIZE: =
12px
}
.similar_list LI LABEL I {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.similar_list LI LABEL B {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.similar_list LI LABEL B {
	MARGIN-LEFT: 5px
}
.MoreArticle {
	TEXT-ALIGN: center; LINE-HEIGHT: 35px; DISPLAY: block; BACKGROUND: =
#fcfcfc; HEIGHT: 35px; COLOR: #666; CLEAR: both; FONT-SIZE: 12px
}
.MoreArticle:hover {
	BACKGROUND: #f2f2f2
}
.bog_copyright {
	PADDING-BOTTOM: 20px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
PADDING-TOP: 20px
}
.copyright_p {
	BORDER-LEFT: #e41c1e 3px solid; LINE-HEIGHT: 14px; PADDING-LEFT: 10px; =
HEIGHT: 14px; COLOR: #666; FONT-SIZE: 14px
}

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/css/blog_detail.css

.mod_zhuanjia_dianping {
	BORDER-BOTTOM: #fbf5dd 1px solid; BACKGROUND-COLOR: #fffdf5; =
MARGIN-TOP: 80px; COLOR: #656565; FONT-SIZE: 12px; BORDER-TOP: #fbf5dd =
1px solid
}
.mod_zhuanjia_dianping UL {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; LIST-STYLE-IMAGE: none; PADDING-TOP: 0px
}
.mod_zhuanjia_dianping LI {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; LIST-STYLE-IMAGE: none; PADDING-TOP: 0px
}
.mod_zhuanjia_dianping IMG {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none
}
.mod_zhuanjia_dianping .dianping_title {
	BORDER-BOTTOM: #ccc 2px solid; LINE-HEIGHT: 40px; HEIGHT: 40px
}
.mod_zhuanjia_dianping .dianping_title .dianping_title_left {
	BORDER-BOTTOM: #cb0000 2px solid; FLOAT: left; FONT-SIZE: 16px
}
.mod_zhuanjia_dianping .dianping_title .dianping_title_right {
	FLOAT: right; COLOR: #656565; FONT-SIZE: 14px; FONT-WEIGHT: normal
}
.mod_zhuanjia_dianping .dianping_title .dianping_title_right .red {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; COLOR: =
#cb0000; PADDING-TOP: 0px
}
.mod_zhuanjia_dianping .dianping_title .dianping_title_right IMG {
	PADDING-RIGHT: 5px; VERTICAL-ALIGN: -2px
}
.mod_zhuanjia_dianping .dianping_content {
	HEIGHT: 240px; MAX-HEIGHT: 800px; OVERFLOW: hidden
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list {
	PADDING-BOTTOM: 20px; PADDING-LEFT: 0px; WIDTH: 100%; PADDING-RIGHT: =
0px; FLOAT: left; BORDER-TOP: #dedcdd 1px dashed; PADDING-TOP: 20px
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list_left {
	MARGIN-TOP: 20px; WIDTH: 40px; FLOAT: left; MARGIN-LEFT: -100%
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list_left =
.name {
	TEXT-ALIGN: center; MARGIN-TOP: 10px; WIDTH: 40px; DISPLAY: =
inline-block; COLOR: #000
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list =
.dianping_content_list_right {
	PADDING-LEFT: 20px; MARGIN-LEFT: 40px
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list =
.dianping_content_list_right .time {
	COLOR: #7795a5
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list =
.dianping_content_list_right .time .time_desc {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; =
PADDING-TOP: 0px
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list =
.dianping_content_list_right .dianping_content_list_right_content {
	LINE-HEIGHT: 18px; MARGIN-TOP: 10px
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list =
.dianping_content_list_right .time IMG {
	VERTICAL-ALIGN: -2px
}
.mod_zhuanjia_dianping .more {
	POSITION: relative; TEXT-ALIGN: center; WIDTH: 100%
}
.mod_zhuanjia_dianping .more IMG {
	POSITION: relative; BOTTOM: -20px; CURSOR: pointer
}
.mod_more_detail {
	BORDER-BOTTOM: #e8e8e8 1px solid; BORDER-LEFT: #e8e8e8 1px solid; =
MARGIN-TOP: 50px; COLOR: #333; FONT-SIZE: 12px; BORDER-TOP: #e8e8e8 1px =
solid; BORDER-RIGHT: #e8e8e8 1px solid
}
.mod_more_detail UL {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 24px; LIST-STYLE-TYPE: none; MARGIN: =
0px; PADDING-LEFT: 0px; TEXT-OVERFLOW: ellipsis; PADDING-RIGHT: 0px; =
WHITE-SPACE: nowrap; HEIGHT: 24px; OVERFLOW: hidden; LIST-STYLE-IMAGE: =
none; PADDING-TOP: 0px
}
.mod_more_detail LI {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 24px; LIST-STYLE-TYPE: none; MARGIN: =
0px; PADDING-LEFT: 0px; TEXT-OVERFLOW: ellipsis; PADDING-RIGHT: 0px; =
WHITE-SPACE: nowrap; HEIGHT: 24px; OVERFLOW: hidden; LIST-STYLE-IMAGE: =
none; PADDING-TOP: 0px
}
.mod_more_detail LI A {
	COLOR: #333
}
.mod_more_detail .mod_more_detail_title {
	LINE-HEIGHT: 40px; BACKGROUND-COLOR: #f1f1f1; TEXT-INDENT: 10px; =
HEIGHT: 40px
}
.mod_more_detail .mod_more_detail_title .mod_more_detail_left {
	FLOAT: left; COLOR: #000; FONT-SIZE: 16px
}
.mod_more_detail .mod_more_detail_content {
	PADDING-BOTTOM: 20px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; OVERFLOW: =
hidden; PADDING-TOP: 20px
}
.mod_more_detail .mod_more_detail_content .mod_more_detail_content_left =
{
	BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-LEFT: 20px; WIDTH: =
50%; PADDING-RIGHT: 20px; FLOAT: left; BORDER-RIGHT: #e8e8e8 1px solid; =
PADDING-TOP: 0px
}
.mod_more_detail .mod_more_detail_content .mod_more_detail_content_right =
{
	BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-LEFT: 20px; WIDTH: =
50%; PADDING-RIGHT: 20px; FLOAT: left; PADDING-TOP: 0px
}

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/css/replace.css

#relate {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relage_t {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relate_t SPAN {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relate_c {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relate_list {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relate_list DT {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relate_list DT IMG {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relate_list DD {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relate_list DD H4 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relate_list DD P {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relate_list DD P SPAN {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
#relate {
	PADDING-BOTTOM: 20px; MARGIN: 20px 0px; PADDING-LEFT: 20px; =
PADDING-RIGHT: 20px; DISPLAY: none; BACKGROUND: #fff; OVERFLOW: hidden; =
PADDING-TOP: 0px
}
.relate_t {
	BORDER-BOTTOM: #ccc 1px solid; LINE-HEIGHT: 35px; HEIGHT: 35px
}
.relate_t SPAN {
	BORDER-BOTTOM: #cc0000 1px solid; DISPLAY: inline-block; HEIGHT: 35px
}
.relate_c {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
MARGIN-RIGHT: -40px; PADDING-TOP: 0px
}
.relate_list {
	MARGIN: 20px 40px 0px 0px; WIDTH: 285px; FLOAT: left
}
.relate_list DT {
	BORDER-BOTTOM: #dfdfdf 1px solid; BORDER-LEFT: #dfdfdf 1px solid; =
PADDING-BOTTOM: 5px; PADDING-LEFT: 5px; WIDTH: 50px; PADDING-RIGHT: 5px; =
FLOAT: left; HEIGHT: 50px; BORDER-TOP: #dfdfdf 1px solid; BORDER-RIGHT: =
#dfdfdf 1px solid; PADDING-TOP: 5px
}
.relate_list DT IMG {
	WIDTH: 50px; HEIGHT: 50px
}
.relate_list DD {
	MARGIN: 0px; PADDING-LEFT: 20px; FLOAT: left
}
.relate_list DD H4 A {
	WIDTH: 100%; TEXT-OVERFLOW: ellipsis; DISPLAY: block; WHITE-SPACE: =
nowrap; COLOR: #333; FONT-SIZE: 14px; OVERFLOW: hidden; TEXT-DECORATION: =
none
}
.relate_list DD P {
	FONT-SIZE: 12px; PADDING-TOP: 10px
}
.relate_list DD P SPAN {
	FONT-STYLE: normal
}
.relate_list DD P EM {
	FONT-STYLE: normal
}
.relate_list DD P I {
	FONT-STYLE: normal
}
.relate_list DD P SPAN {
	COLOR: #64b1cb; MARGIN-RIGHT: 6px
}
.relate_list DD P I {
	MARGIN: 0px 6px
}
#res-relatived {
	CLEAR: both
}

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/comm_ask/css/ask_float_block.css

@font-face {
	font-family: FontAwesome;
	=
src:url(//ask.csdn.net/assets/fontawesome-webfont-d8970a29b6bda4953188db1=
bf11caa77.eot?#iefix&v=3D3.2.1) format("embedded-opentype"), =
url(//ask.csdn.net/assets/fontawesome-webfont-b6eacf39cdd874409fca9bbfa0f=
d5524.woff?v=3D3.2.1) format("woff"), =
url(//ask.csdn.net/assets/fontawesome-webfont-e6510d64f0dee7530f4c35b4ecc=
be2eb.ttf?v=3D3.2.1) format("truetype"), =
url(//ask.csdn.net/assets/fontawesome-webfont-4bb899176c47fb8cc6662a8929e=
ebc8a.svg#fontawesomeregular?v=3D3.2.1) format("svg");
}
.clearfix:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
'.'
}
BODY > .marker {
	Z-INDEX: 900; POSITION: absolute; WIDTH: 0px; BACKGROUND: #000; HEIGHT: =
0px; TOP: 0px; LEFT: 0px; transition: all 0.5s ease-in; opacity: 0
}
BODY > .pop_edit {
	Z-INDEX: 1000; BORDER-BOTTOM: #dcdcdc 1px solid; POSITION: fixed; =
BORDER-LEFT: #dcdcdc 1px solid; MARGIN-TOP: -270px; FONT-FAMILY: =
"microsoft yahei"; BACKGROUND: #fff; MARGIN-LEFT: -333px; CLEAR: both; =
BORDER-TOP: #dcdcdc 1px solid; TOP: 50%; BORDER-RIGHT: #dcdcdc 1px =
solid; LEFT: 50%; opacity: 0
}
BODY > .pop_edit * {
	BOX-SIZING: border-box
}
BODY > .pop_edit .active.icon-preview:before {
	Z-INDEX: 10002; POSITION: relative; COLOR: #04c !important
}
BODY > .pop_edit .active.icon-preview:after {
	Z-INDEX: 3; POSITION: absolute; MARGIN: -10px 0px 0px -520px; WIDTH: =
600px; HEIGHT: 40px; CONTENT: ''
}
BODY > .pop_edit .cm_box {
	POSITION: relative
}
BODY > .pop_edit .cm_box .cm_dialog {
	Z-INDEX: 10000; POSITION: fixed; WIDTH: 100%; DISPLAY: none; HEIGHT: =
100%; TOP: 0px; LEFT: 0px
}
BODY > .pop_edit .pop_cm {
	Z-INDEX: 10001; BORDER-BOTTOM: #ccc 1px solid; POSITION: absolute; =
BORDER-LEFT: #ccc 1px solid; PADDING-BOTTOM: 10px; MARGIN: -5px 0px 0px =
275px; PADDING-LEFT: 10px; WIDTH: 300px; PADDING-RIGHT: 10px; DISPLAY: =
none; BACKGROUND: #fff; BORDER-TOP: #ccc 1px solid; TOP: 48px; =
BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 10px; box-shadow: 2px 2px =
10px rgba(0, 0, 0, 0.3)
}
BODY > .pop_edit .pop_cm:after {
	BORDER-BOTTOM: #ccc 10px solid; POSITION: absolute; BORDER-LEFT: =
transparent 10px solid; BORDER-TOP: transparent 10px solid; CONTENT: ''; =
TOP: -20px; BORDER-RIGHT: transparent 10px solid; LEFT: 40px
}
BODY > .pop_edit .pop_cm:before {
	BORDER-BOTTOM: #ccc 10px solid; POSITION: absolute; BORDER-LEFT: =
transparent 10px solid; BORDER-TOP: transparent 10px solid; CONTENT: ''; =
TOP: -20px; BORDER-RIGHT: transparent 10px solid; LEFT: 40px
}
BODY > .pop_edit .pop_cm:after {
	BORDER-BOTTOM-COLOR: #fff; TOP: -19px
}
BODY > .pop_edit .cm_add_img.pop_cm {
	MARGIN-LEFT: 310px
}
BODY > .pop_edit .pop_cm .nav-tabs {
	BORDER-BOTTOM: #ddd 1px solid; PADDING-BOTTOM: 5px; MARGIN: -5px -10px =
10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; HEIGHT: 30px; FONT-SIZE: =
12px; PADDING-TOP: 5px
}
BODY > .pop_edit .pop_cm .nav-tabs A {
	BORDER-BOTTOM: transparent 1px solid; BORDER-LEFT: transparent 1px =
solid; PADDING-BOTTOM: 3px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; =
DISPLAY: inline-block; HEIGHT: 25px; COLOR: #999; BORDER-TOP: =
transparent 1px solid; BORDER-RIGHT: transparent 1px solid; =
TEXT-DECORATION: none; PADDING-TOP: 3px
}
BODY > .pop_edit .pop_cm .nav-tabs A.active {
	BORDER-BOTTOM-COLOR: #fff; BORDER-TOP-COLOR: #ddd; COLOR: #666; =
BORDER-RIGHT-COLOR: #ddd; BORDER-LEFT-COLOR: #ddd; border-radius: 3px =
3px 0 0
}
BODY > .pop_edit .pop_cm .up_img_loading {
	Z-INDEX: 2; POSITION: absolute; TEXT-ALIGN: center; LINE-HEIGHT: 100px; =
WIDTH: 100%; DISPLAY: none; HEIGHT: 100%; TOP: 0px; LEFT: 0px
}
BODY > .pop_edit .pop_cm .active.up_img_loading {
	DISPLAY: block
}
BODY > .pop_edit .pop_cm .tab_panel {
	DISPLAY: none
}
BODY > .pop_edit .pop_cm .active.tab_panel {
	DISPLAY: block
}
BODY > .pop_edit .pop_cm .set_img {
	POSITION: relative; MARGIN: 0px; HEIGHT: 101px
}
BODY > .pop_edit .pop_cm .set_img IFRAME {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; WIDTH: 100%; HEIGHT: 101px; =
BORDER-TOP: 0px; BORDER-RIGHT: 0px
}
BODY > .pop_edit .pop_cm .set_img .markdown_file_name {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 5px; WIDTH: 100%; PADDING-RIGHT: =
5px; COLOR: #999; OVERFLOW: hidden; PADDING-TOP: 5px
}
BODY > .pop_edit .pop_cm .set_img LABEL {
	POSITION: absolute; BORDER-LEFT: #ccc 1px solid; PADDING-BOTTOM: 0px; =
LINE-HEIGHT: 28px; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; BACKGROUND: =
#ddd 0px 0px; FONT-SIZE: 12px; TOP: 0px; RIGHT: 0px; FONT-WEIGHT: =
normal; PADDING-TOP: 0px
}
BODY > .pop_edit .pop_cm .markdown_file_msg {
	MARGIN: -10px 0px 10px; FONT-SIZE: 14px
}
BODY > .pop_edit .pop_cm INPUT {
	BORDER-BOTTOM: #ddd 1px solid; BORDER-LEFT: #ddd 1px solid; =
PADDING-BOTTOM: 5px; PADDING-LEFT: 10px; WIDTH: 278px; PADDING-RIGHT: =
10px; MARGIN-BOTTOM: 10px; BORDER-TOP: #ddd 1px solid; BORDER-RIGHT: =
#ddd 1px solid; PADDING-TOP: 5px
}
BODY > .pop_edit .pop_cm .text-right {
	TEXT-ALIGN: right
}
BODY > .pop_edit .pop_cm .btn {
	PADDING-BOTTOM: 2px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; DISPLAY: =
inline-block; FONT: 12px/20px "microsoft yahei"; BACKGROUND: #999; =
COLOR: #fff; CURSOR: pointer; PADDING-TOP: 2px
}
BODY > .pop_edit H3 {
	BORDER-BOTTOM: #f0f0f0 1px solid; POSITION: relative; LINE-HEIGHT: =
50px; MARGIN-TOP: 0px; PADDING-LEFT: 19px; FONT-FAMILY: microsoft yahei; =
MARGIN-BOTTOM: 10px; HEIGHT: 50px; COLOR: #666; FONT-SIZE: 18px; =
FONT-WEIGHT: normal
}
BODY > .pop_edit H3 .err {
	POSITION: absolute; TEXT-ALIGN: left; MARGIN: 0px; PADDING-LEFT: 5px; =
WIDTH: 99%; BOTTOM: -23px; FONT-SIZE: 12px; TOP: inherit; LEFT: 0px
}
BODY > .pop_edit .close {
	POSITION: absolute; BACKGROUND: none transparent scroll repeat 0% 0%; =
COLOR: #555; FONT-SIZE: 30px; TOP: 8px; RIGHT: 19px; TEXT-DECORATION: =
none
}
BODY > .pop_edit .close:hover {
	COLOR: #58c
}
BODY > .pop_edit .ask_float_channel:link {
	COLOR: #458bca; CURSOR: pointer
}
BODY > .pop_edit .ask_float_channel:visited {
	COLOR: #458bca; CURSOR: pointer
}
BODY > .pop_edit .ask_float_channel:hover {
	COLOR: #458bca; CURSOR: pointer
}
BODY > .pop_edit .ask_float_channel:focus {
	COLOR: #458bca; CURSOR: pointer
}
BODY > .pop_edit .ask_float_span {
	POSITION: absolute; FONT-FAMILY: "microsoft yahei"; COLOR: #666; =
FONT-SIZE: 14px; TOP: 14px; LEFT: 70px
}
BODY > .pop_edit .context {
	PADDING-BOTTOM: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; COLOR: =
#333; FONT-SIZE: 16px; PADDING-TOP: 0px
}
BODY > .pop_edit .red {
	POSITION: absolute; PADDING-BOTTOM: 0px; MARGIN-TOP: -10px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: inline-block; COLOR: =
#f00; TOP: 50%; PADDING-TOP: 0px; LEFT: -11px
}
BODY > .pop_edit .success {
	TEXT-ALIGN: right; PADDING-BOTTOM: 20px; PADDING-LEFT: 20px; =
PADDING-RIGHT: 20px; BORDER-TOP: #f0f0f0 1px solid; PADDING-TOP: 15px
}
BODY > .pop_edit .success A {
	TEXT-ALIGN: center; LINE-HEIGHT: 28px; WIDTH: 80px; ZOOM: 1; DISPLAY: =
inline-block; HEIGHT: 28px; COLOR: #fff; MARGIN-LEFT: 10px; FONT-SIZE: =
14px; TEXT-DECORATION: none
}
BODY > .pop_edit .success .cancel {
	BACKGROUND: #999
}
BODY > .pop_edit .success .ok {
	BACKGROUND: #be0000
}
BODY > .pop_edit .success .del {
	DISPLAY: none; BACKGROUND: #999
}
.ask_first {
	POSITION: absolute; TEXT-ALIGN: left; WIDTH: 667px; DISPLAY: none; =
HEIGHT: 560px; TOP: 250px; LEFT: 50%
}
.ask_first .askFirst_desc {
	HEIGHT: 370px
}
.ask_first .askFirst_desc .afd_p {
	LINE-HEIGHT: 21px; COLOR: #333; FONT-SIZE: 14px
}
.ask_first .askFirst_desc .afd_p A {
	COLOR: #2b81a9; CURSOR: pointer
}
.ask_first .askFirst_se {
	MARGIN-BOTTOM: 10px; COLOR: #333; FONT-SIZE: 16px
}
.ask_first .search_div {
	WIDTH: 100%; MARGIN-BOTTOM: 10px; HEIGHT: 35px; MARGIN-RIGHT: 20px
}
.ask_first .search_div INPUT {
	WIDTH: 100%
}
.ask_second {
	TEXT-ALIGN: left; DISPLAY: none
}
.ask_second .err_div {
	BORDER-BOTTOM: #ffdada 1px solid; BORDER-LEFT: #ffdada 1px solid; =
WIDTH: 100%; MARGIN-BOTTOM: 5px; HEIGHT: 28px; BORDER-TOP: #ffdada 1px =
solid; BORDER-RIGHT: #ffdada 1px solid
}
.ask_second .err_div .err_ico {
	MARGIN-TOP: 6px; WIDTH: 16px; DISPLAY: inline-block; BACKGROUND: =
url(../images/ph_pop_err_icon.fw.png) no-repeat 0px 0px; FLOAT: left; =
HEIGHT: 16px; MARGIN-LEFT: 5px; MARGIN-RIGHT: 10px
}
.ask_second .err_div .err_txt {
	MARGIN-TOP: 2px; DISPLAY: inline-block; FLOAT: left; HEIGHT: 16px; =
COLOR: #b74d46; FONT-SIZE: 12px
}
.ask_second .input_div {
	WIDTH: 100%; MARGIN-BOTTOM: 10px; HEIGHT: 35px; MARGIN-RIGHT: 20px
}
.ask_second .input_div INPUT {
	BOX-SIZING: border-box; BORDER-BOTTOM: #dcdcdc 1px solid; BORDER-LEFT: =
#dcdcdc 1px solid; TEXT-INDENT: 5px; WIDTH: 100%; HEIGHT: 35px; COLOR: =
#656565; FONT-SIZE: 16px; BORDER-TOP: #dcdcdc 1px solid; BORDER-RIGHT: =
#dcdcdc 1px solid
}
.ask_second .second_se {
	MARGIN: 5px 0px; DISPLAY: inline-block; COLOR: #656565; FONT-SIZE: 16px
}
.ask_second .div_rich_editor {
	BORDER-BOTTOM: #ddd 1px solid; POSITION: relative; BORDER-LEFT: #ddd =
1px solid; WIDTH: 100%; HEIGHT: 245px; BORDER-TOP: #ddd 1px solid; =
BORDER-RIGHT: #ddd 1px solid
}
.ask_second .div_tags {
	WIDTH: 100%; HEIGHT: 35px
}
.ask_second .tags_con {
	BORDER-BOTTOM: #dcdcdc 1px solid; BORDER-LEFT: #dcdcdc 1px solid; =
PADDING-BOTTOM: 0px; OVERFLOW-Y: auto; PADDING-LEFT: 5px; WIDTH: 100%; =
PADDING-RIGHT: 5px; FLOAT: left; HEIGHT: 35px; FONT-SIZE: 14px; =
BORDER-TOP: #dcdcdc 1px solid; BORDER-RIGHT: #dcdcdc 1px solid; =
PADDING-TOP: 0px
}
.ask_second .focus.tags_con {
	BORDER-BOTTOM-COLOR: #59d; BORDER-TOP-COLOR: #59d; OUTLINE-STYLE: =
solid; OUTLINE-COLOR: #6be; OUTLINE-WIDTH: 1px; BORDER-RIGHT-COLOR: =
#59d; BORDER-LEFT-COLOR: #59d
}
.ask_second .tags_con INPUT {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; MARGIN-TOP: 7px; OUTLINE-STYLE: =
none; OUTLINE-COLOR: invert; OUTLINE-WIDTH: medium; WIDTH: 200px; FLOAT: =
left; HEIGHT: 20px; BORDER-TOP: 0px; BORDER-RIGHT: 0px
}
.ask_second .tags_con .tag {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; MARGIN-TOP: 5px; PADDING-LEFT: =
10px; PADDING-RIGHT: 10px; DISPLAY: block; BACKGROUND: #f0f4f7; FLOAT: =
left; HEIGHT: 22px; COLOR: #3d8daf; OVERFLOW: hidden; MARGIN-RIGHT: 5px; =
PADDING-TOP: 0px; border-radius: 15px
}
.ask_second .tags_con .tag SPAN {
	DISPLAY: block; FLOAT: left
}
.ask_second .tags_con .tag A {
	DISPLAY: block; FLOAT: left; HEIGHT: 20px; COLOR: #49b; MARGIN-LEFT: =
5px; FONT-SIZE: 14px; TEXT-DECORATION: none
}
.ask_second .tags_con .tag A:hover {
	COLOR: #c30
}
.ask_second .drt_tagRecomm {
	MARGIN-TOP: 20px; MARGIN-BOTTOM: 15px; HEIGHT: 20px
}
.ask_second .drt_tagRecomm .drt_tit {
	COLOR: #656565; FONT-SIZE: 14px
}
.ask_second .left_area {
	DISPLAY: inline-block; FLOAT: left
}
.ask_second .left_area > * {
	VERTICAL-ALIGN: middle
}
.ask_second .left_area .wyxs {
	COLOR: #666; MARGIN-LEFT: 10px; FONT-SIZE: 14px; MARGIN-RIGHT: 10px
}
.ask_second .left_area .cb_num {
	BORDER-BOTTOM: #dcdcdc 1px solid; BORDER-LEFT: #dcdcdc 1px solid; =
LINE-HEIGHT: 23px; WIDTH: 157px; BORDER-TOP: #dcdcdc 1px solid; =
BORDER-RIGHT: #dcdcdc 1px solid
}
.ask_second .left_area .phib_rii {
	TEXT-ALIGN: left; WIDTH: 183px; DISPLAY: inline-block; HEIGHT: 20px; =
COLOR: #f9bf47; MARGIN-LEFT: 10px
}
.ask_second .left_area .phib_rii SPAN {
	LINE-HEIGHT: 21px; MARGIN-TOP: 0px; PADDING-LEFT: 20px; DISPLAY: =
inline-block; BACKGROUND: url(../images/ph_right_cb.fw.png) no-repeat =
0px 2px; HEIGHT: 25px
}
#float_ask_img {
	Z-INDEX: 9; POSITION: fixed; TOP: 200px; RIGHT: 50px
}
.complete_list {
	Z-INDEX: 9999; BORDER-BOTTOM: #ccc 1px solid; POSITION: fixed; =
BORDER-LEFT: #ccc 1px solid; PADDING-BOTTOM: 1px; MARGIN: 0px; =
PADDING-LEFT: 1px; PADDING-RIGHT: 1px; DISPLAY: none; BACKGROUND: #fff; =
OVERFLOW: hidden; BORDER-TOP: #ccc 1px solid; BORDER-RIGHT: #ccc 1px =
solid; PADDING-TOP: 1px; border-radius: 3px; box-shadow: 2px 2px 5px =
rgba(0, 0, 0, 0.3)
}
.complete_list LI {
	PADDING-BOTTOM: 2px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; FONT: =
12px/20px "microsoft yahei"; CURSOR: default; PADDING-TOP: 2px
}
.complete_list .outborder {
	BACKGROUND: #f5f5f5
}
.ask_second .se_key {
	TEXT-ALIGN: center; PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; =
BACKGROUND-COLOR: #f2f2f2; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; =
DISPLAY: inline-block; HEIGHT: 21px; COLOR: #656565; FONT-SIZE: 12px; =
FONT-WEIGHT: normal; MARGIN-RIGHT: 15px; PADDING-TOP: 0px; =
border-radius: 10px
}
.ask_second .se_key:hover {
	BACKGROUND-COLOR: #bd1921; COLOR: #fff; TEXT-DECORATION: none
}
.ask_second TEXTAREA {
	FONT-FAMILY: Consolas, Menlo, Monaco, Lucida Console, Liberation Mono, =
DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace, =
serif; FONT-SIZE: 12px
}
.ask_second PRE {
	PADDING-BOTTOM: 5px; MARGIN: 0px 0px 7px; PADDING-LEFT: 5px; WIDTH: =
auto; PADDING-RIGHT: 5px; FONT-FAMILY: Consolas, Menlo, Monaco, Lucida =
Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, =
Courier New, monospace, serif; BACKGROUND: #eee; MAX-HEIGHT: 600px; =
OVERFLOW: auto; PADDING-TOP: 5px
}
.ask_second CODE {
	BORDER-BOTTOM: #ddd 1px solid; BORDER-LEFT: #ddd 1px solid; =
PADDING-BOTTOM: 2px; BACKGROUND-COLOR: #eee; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; DISPLAY: block; FONT-FAMILY: Consolas, Menlo, =
Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream =
Vera Sans Mono, Courier New, monospace, serif; COLOR: #666; BORDER-TOP: =
#ddd 1px solid; BORDER-RIGHT: #ddd 1px solid; PADDING-TOP: 2px; =
border-radius: 3px
}
.ask_second P CODE {
	PADDING-BOTTOM: 1px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; =
PADDING-TOP: 1px
}
.ask_second BLOCKQUOTE {
	PADDING-BOTTOM: 1px; BACKGROUND-COLOR: #eee; PADDING-LEFT: 10px; =
PADDING-RIGHT: 10px; PADDING-TOP: 10px
}
.ask_second HR {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BACKGROUND-COLOR: #aaa; MARGIN: =
0px 0px 20px; HEIGHT: 1px; BORDER-TOP: 0px; BORDER-RIGHT: 0px
}
.wmd-prompt-dialog * {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.ask_second .str {
	COLOR: #800000
}
.ask_second .kwd {
	COLOR: #00008b; FONT-WEIGHT: bold
}
.ask_second .com {
	COLOR: #808080
}
.ask_second .typ {
	COLOR: #2b91af; FONT-WEIGHT: bold
}
.ask_second .lit {
	COLOR: #800000
}
.ask_second .pun {
	COLOR: #000
}
.ask_second .pln {
	COLOR: #000
}
.ask_second .tag {
	COLOR: #800000; FONT-WEIGHT: bold
}
.ask_second .atn {
	COLOR: #f00
}
.ask_second .atv {
	COLOR: #00f
}
.ask_second .dec {
	COLOR: #800080
}
.ask_second .wmd {
	POSITION: relative; WIDTH: 660px
}
.ask_second #wmd-button-bar {
	BACKGROUND-COLOR: #fff; MARGIN: 10px 0px 0px; WIDTH: 405px; DISPLAY: =
inline-block; HEIGHT: 25px; CLEAR: both
}
.ask_second #wmd-input {
	BORDER-BOTTOM: #dcdcdc 1px solid; BORDER-LEFT: #dcdcdc 1px solid; =
PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 0px; PADDING-LEFT: 3px; =
WIDTH: 626px; PADDING-RIGHT: 3px; HEIGHT: 200px; BORDER-TOP: #dcdcdc 1px =
solid; BORDER-RIGHT: #dcdcdc 1px solid; PADDING-TOP: 0px; resize: none
}
.ask_second #wmd-preview {
	BORDER-BOTTOM: #ccc 2px dotted; BORDER-LEFT: #ccc 2px dotted; =
PADDING-BOTTOM: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px; DISPLAY: =
none; CLEAR: both; FONT-SIZE: 12px; BORDER-TOP: #ccc 2px dotted; =
BORDER-RIGHT: #ccc 2px dotted; PADDING-TOP: 3px
}
.grippie {
	BACKGROUND-IMAGE: url(../images/drag.gif); BORDER-BOTTOM: #ddd 1px =
solid; BORDER-LEFT: #ddd 1px solid; LINE-HEIGHT: 9px; BACKGROUND-COLOR: =
#eee; DISPLAY: none; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: =
center 1px; MARGIN-BOTTOM: 6px; HEIGHT: 9px; OVERFLOW: hidden; =
BORDER-TOP: #ddd 0px solid; CURSOR: s-resize; BORDER-RIGHT: #ddd 1px =
solid
}
#wmd-preview P {
	WORD-WRAP: break-word
}
.wmd-button-row {
	POSITION: relative; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; HEIGHT: 20px; PADDING-TOP: 0px
}
.wmd-spacer {
	LIST-STYLE: none none outside; POSITION: absolute; BACKGROUND-COLOR: =
silver; WIDTH: 1px; DISPLAY: inline-block; HEIGHT: 20px; MARGIN-LEFT: =
14px
}
.wmd-button {
	LIST-STYLE: none none outside; BACKGROUND-IMAGE: =
url(../images/wmd-buttons.png); POSITION: absolute; WIDTH: 20px; =
DISPLAY: inline-block; BACKGROUND-REPEAT: no-repeat; =
BACKGROUND-POSITION: 0px 0px; HEIGHT: 20px; MARGIN-LEFT: 5px; =
MARGIN-RIGHT: 5px
}
.wmd-button > A {
	POSITION: absolute; WIDTH: 20px; DISPLAY: inline-block; HEIGHT: 20px
}
.wmd-bold-button {
	BACKGROUND-POSITION: 0px 0px; LEFT: 0px
}
.wmd-italic-button {
	BACKGROUND-POSITION: -20px 0px; LEFT: 25px
}
.wmd-spacer1 {
	LEFT: 50px
}
.wmd-link-button {
	BACKGROUND-POSITION: -40px 0px; LEFT: 75px
}
.wmd-quote-button {
	BACKGROUND-POSITION: -60px 0px; LEFT: 100px
}
.wmd-code-button {
	BACKGROUND-POSITION: -80px 0px; LEFT: 125px
}
.wmd-image-button {
	BACKGROUND-POSITION: -100px 0px; LEFT: 150px
}
.wmd-spacer2 {
	LEFT: 175px
}
.wmd-olist-button {
	BACKGROUND-POSITION: -120px 0px; LEFT: 200px
}
.wmd-ulist-button {
	BACKGROUND-POSITION: -140px 0px; LEFT: 225px
}
.wmd-heading-button {
	BACKGROUND-POSITION: -160px 0px; LEFT: 250px
}
.wmd-hr-button {
	BACKGROUND-POSITION: -180px 0px; LEFT: 275px
}
.wmd-spacer3 {
	LEFT: 300px
}
.wmd-undo-button {
	BACKGROUND-POSITION: -200px 0px; LEFT: 325px
}
.wmd-redo-button {
	BACKGROUND-POSITION: -220px 0px; LEFT: 350px
}
.wmd-help-button {
	BACKGROUND-POSITION: -240px 0px; RIGHT: 0px
}
.wmd-at-button {
	LEFT: 375px
}
.wmd-prompt-background {
	BACKGROUND-COLOR: black
}
.wmd-prompt-dialog {
	BORDER-BOTTOM: #999 3px solid; BORDER-LEFT: #fff 3px solid; =
BACKGROUND-COLOR: #ddd; BORDER-TOP: #fff 3px solid; BORDER-RIGHT: #999 =
3px solid
}
.wmd-mini-button {
	PADDING-BOTTOM: 3px; MARGIN: 5px; PADDING-LEFT: 8px; PADDING-RIGHT: =
8px; DISPLAY: inline-block; COLOR: #444; TEXT-DECORATION: none; =
PADDING-TOP: 3px
}
.wmd-mini-button:visited {
	PADDING-BOTTOM: 3px; MARGIN: 5px; PADDING-LEFT: 8px; PADDING-RIGHT: =
8px; DISPLAY: inline-block; COLOR: #444; TEXT-DECORATION: none; =
PADDING-TOP: 3px
}
.wmd-mini-button:hover {
	BACKGROUND-COLOR: #ccc; TEXT-DECORATION: none; border-radius: 15px 15px =
15px 15px; -moz-border-radius: 15px 15px 15px 15px; =
-webkit-border-radius: 15px 15px 15px 15px
}
.selected.wmd-mini-button {
	BACKGROUND-COLOR: #888; COLOR: #eee; TEXT-DECORATION: none; =
border-radius: 15px 15px 15px 15px; -moz-border-radius: 15px 15px 15px =
15px; -webkit-border-radius: 15px 15px 15px 15px
}
.selected.wmd-mini-button:hover {
	BACKGROUND-COLOR: #888; COLOR: #eee
}
.dialog-input {
	BORDER-BOTTOM: #999 1px solid; BORDER-LEFT: #999 1px solid; =
PADDING-BOTTOM: 0px; PADDING-LEFT: 2px; PADDING-RIGHT: 0px; FONT-FAMILY: =
Trebuchet MS, Liberation Sans, DejaVu Sans, sans-serif; HEIGHT: 23px; =
BORDER-TOP: #999 1px solid; BORDER-RIGHT: #999 1px solid; PADDING-TOP: =
3px
}
#upload-url-input INPUT {
	BORDER-BOTTOM: #999 1px solid; BORDER-LEFT: #999 1px solid; =
PADDING-BOTTOM: 0px; PADDING-LEFT: 2px; PADDING-RIGHT: 0px; FONT-FAMILY: =
Trebuchet MS, Liberation Sans, DejaVu Sans, sans-serif; HEIGHT: 23px; =
BORDER-TOP: #999 1px solid; BORDER-RIGHT: #999 1px solid; PADDING-TOP: =
3px
}
#shadow-filename {
	BORDER-BOTTOM: #999 1px solid; BORDER-LEFT: #999 1px solid; =
PADDING-BOTTOM: 0px; PADDING-LEFT: 2px; PADDING-RIGHT: 0px; FONT-FAMILY: =
Trebuchet MS, Liberation Sans, DejaVu Sans, sans-serif; HEIGHT: 23px; =
BORDER-TOP: #999 1px solid; BORDER-RIGHT: #999 1px solid; PADDING-TOP: =
3px
}
.dialog-button {
	BORDER-BOTTOM: #999 1px solid; BORDER-LEFT: #999 1px solid; =
BACKGROUND-COLOR: #f0f0f0; FONT-FAMILY: Trebuchet MS, Liberation Sans, =
DejaVu Sans, sans-serif; HEIGHT: 28px; BORDER-TOP: #999 1px solid; =
CURSOR: pointer; BORDER-RIGHT: #999 1px solid
}
#ok-dialog-button {
	BORDER-BOTTOM: #999 1px solid; BORDER-LEFT: #999 1px solid; =
BACKGROUND-COLOR: #f0f0f0; FONT-FAMILY: Trebuchet MS, Liberation Sans, =
DejaVu Sans, sans-serif; HEIGHT: 28px; BORDER-TOP: #999 1px solid; =
CURSOR: pointer; BORDER-RIGHT: #999 1px solid
}
#close-dialog-button {
	BORDER-BOTTOM: #999 1px solid; BORDER-LEFT: #999 1px solid; =
BACKGROUND-COLOR: #f0f0f0; FONT-FAMILY: Trebuchet MS, Liberation Sans, =
DejaVu Sans, sans-serif; HEIGHT: 28px; BORDER-TOP: #999 1px solid; =
CURSOR: pointer; BORDER-RIGHT: #999 1px solid
}
#choose-file {
	BORDER-BOTTOM: #999 1px solid; BORDER-LEFT: #999 1px solid; =
BACKGROUND-COLOR: #f0f0f0; FONT-FAMILY: Trebuchet MS, Liberation Sans, =
DejaVu Sans, sans-serif; HEIGHT: 28px; BORDER-TOP: #999 1px solid; =
CURSOR: pointer; BORDER-RIGHT: #999 1px solid
}
#image-upload-progress {
	TEXT-INDENT: -9999px; BACKGROUND: url(images/progress-dots.gif) =
no-repeat center center; HEIGHT: 5px
}
#qlink_box {
	Z-INDEX: 999; BORDER-BOTTOM: #efefef 1px solid; POSITION: absolute; =
BORDER-LEFT: #efefef 1px solid; PADDING-BOTTOM: 2px; PADDING-LEFT: 3px; =
PADDING-RIGHT: 3px; DISPLAY: none; BACKGROUND: #efefef; BORDER-TOP: =
#efefef 1px solid; BORDER-RIGHT: #efefef 1px solid; PADDING-TOP: 3px; =
border-radius: 5px; -moz-border-radius: 5px; -webkit-border-radius: 5px
}
#qlink_box INPUT {
	BORDER-BOTTOM: #b1b1b1 1px solid; BORDER-LEFT: #b1b1b1 1px solid; =
PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; WIDTH: 400px; PADDING-RIGHT: =
0px; BACKGROUND: #fff; HEIGHT: 24px; FONT-SIZE: 100%; BORDER-TOP: =
#b1b1b1 1px solid; BORDER-RIGHT: #b1b1b1 1px solid; PADDING-TOP: 0px; =
border-radius: 2px; -moz-border-radius: 2px; -webkit-border-radius: 2px
}
#qlink_suggest {
	BORDER-BOTTOM: #b1b1b1 1px solid; POSITION: absolute; BORDER-LEFT: =
#b1b1b1 1px solid; PADDING-BOTTOM: 1px; PADDING-LEFT: 0px; WIDTH: 400px; =
PADDING-RIGHT: 0px; BACKGROUND: #fff; BORDER-TOP: 0px; TOP: 44px; =
BORDER-RIGHT: #b1b1b1 1px solid; PADDING-TOP: 1px; LEFT: 3px
}
#qlink_suggest DL {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; LIST-STYLE-IMAGE: none; PADDING-TOP: 0px
}
#qlink_suggest DD {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 28px; MARGIN: 0px; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; DISPLAY: block; PADDING-TOP: 0px
}
#qlink_suggest DD.active {
	BACKGROUND: #efefef
}
#qlink_suggest DD:hover {
	BACKGROUND: #efefef; CURSOR: pointer
}
.ask_second TEXTAREA {
	BORDER-BOTTOM: #808080 1px solid; BORDER-LEFT: #808080 1px solid; =
BORDER-TOP: #808080 1px solid; BORDER-RIGHT: #808080 1px solid
}
.ask_second #notes-preview {
	BORDER-BOTTOM: #808080 1px solid; BORDER-LEFT: #808080 1px solid; =
BORDER-TOP: #808080 1px solid; BORDER-RIGHT: #808080 1px solid
}
#notes-preview {
	OVERFLOW-X: hidden
}
BODY .searchContainer {
	BORDER-BOTTOM: #ddd 1px solid; POSITION: absolute; BORDER-LEFT: #ddd =
1px solid; BACKGROUND-COLOR: #fff; MIN-HEIGHT: 90px; WIDTH: 628px; =
DISPLAY: none; BORDER-TOP: #ddd 1px solid; BORDER-RIGHT: #ddd 1px solid
}
BODY .searchContainer SPAN {
	LINE-HEIGHT: 30px
}
BODY .searchContainer .sTitle {
	BORDER-BOTTOM: #ddd 1px solid; LINE-HEIGHT: 30px; COLOR: #656565; =
MARGIN-LEFT: 10px; FONT-SIZE: 14px; MARGIN-RIGHT: 10px
}
BODY .searchContainer .sItem {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; CURSOR: =
pointer; PADDING-TOP: 0px
}
BODY .searchContainer .sItem .sfirst {
	TEXT-ALIGN: left; WIDTH: 85%; TEXT-OVERFLOW: ellipsis; WHITE-SPACE: =
nowrap; FLOAT: left; COLOR: #999; FONT-SIZE: 14px; OVERFLOW: hidden
}
BODY .searchContainer .sItem .ssecond {
	TEXT-ALIGN: right; WIDTH: 15%; WHITE-SPACE: nowrap; FLOAT: right; =
COLOR: #999; FONT-SIZE: 14px
}
BODY .searchContainer .sItemHover {
	BACKGROUND-COLOR: #ccc; COLOR: #fff
}
BODY .searchContainer .sItemHover .sfirst {
	COLOR: #fff
}
BODY .searchContainer .sItemHover .ssecond {
	COLOR: #fff
}
BODY .searchContainer .sFooter {
	BACKGROUND-COLOR: #f5f5f5; BORDER-TOP: #ddd 1px solid
}
BODY .searchContainer .sFooter .sFirstNewAsk {
	LINE-HEIGHT: 27px; FLOAT: right; COLOR: #656565; FONT-SIZE: 14px; =
CURSOR: pointer; MARGIN-RIGHT: 10px; TEXT-DECORATION: none
}
BODY .searchContainer .sFooter A:link {
	COLOR: #656565
}
.ask_second .searchContainer .sFooter A:visited {
	COLOR: #656565
}
BODY .searchContainer .sFooter A:hover {
	COLOR: #be1a21
}
BODY .searchContainer .sFooter A:focus {
	COLOR: #be1a21
}
#com-ask-float-block {
	Z-INDEX: 9999999; BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; =
BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 90px; BOTTOM: 124px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/common_float_block.png) no-repeat 0px -318px; =
HEIGHT: 28px; COLOR: #fff; BORDER-TOP: 0px; CURSOR: pointer; RIGHT: =
40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; border-radius: 0
}
#com-ask-float-block:hover {
	BACKGROUND: url(../images/common_float_block.png) no-repeat -100px =
-318px
}
#com-app-float-block {
	Z-INDEX: 999998; BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; =
BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 90px; BOTTOM: 124px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/common_float_block.png) no-repeat 0px 0px; =
HEIGHT: 28px; COLOR: #fff; BORDER-TOP: 0px; CURSOR: pointer; RIGHT: =
40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; border-radius: 0
}
#com-app-float-block:hover {
	BACKGROUND: url(../images/common_float_block.png) no-repeat -100px 0px
}
#com-appcode-float-block {
	Z-INDEX: 9999999; BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; =
BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 90px; BOTTOM: 124px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/common_float_block.png) #fff no-repeat 0px =
-198px; HEIGHT: 112px; COLOR: #fff; BORDER-TOP: 0px; CURSOR: pointer; =
RIGHT: 40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; border-radius: 0
}
#com-appcode-float-block:hover {
	BACKGROUND: url(../images/common_float_block.png) #fff no-repeat -100px =
-198px
}
#com-appcode-float-block:hover #appcode-close {
	BACKGROUND: url(../images/common_float_block.png) #fff no-repeat -177px =
-201px
}
#com-appcode-float-block #appcode-close {
	MARGIN-TOP: 3px; WIDTH: 10px; DISPLAY: inline-block; BACKGROUND: =
url(../images/common_float_block.png) no-repeat -77px -201px; FLOAT: =
right; HEIGHT: 10px; CURSOR: pointer; MARGIN-RIGHT: 3px
}
#com-quick-reply {
	Z-INDEX: 9999999; BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; =
BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 90px; BOTTOM: 82px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/common_float_block.png) no-repeat 0px -33px; =
HEIGHT: 28px; COLOR: #fff; BORDER-TOP: 0px; CURSOR: pointer; RIGHT: =
40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; border-radius: 0
}
#com-quick-reply:hover {
	BACKGROUND: url(../images/common_float_block.png) no-repeat -100px =
-33px
}
#com-d-top-a {
	Z-INDEX: 9999999; BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; =
BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 90px; BOTTOM: 40px; PADDING-RIGHT: 0px; =
DISPLAY: none; BACKGROUND: url(../images/common_float_block.png) =
no-repeat 0px -165px; HEIGHT: 28px; COLOR: #fff; BORDER-TOP: 0px; =
CURSOR: pointer; RIGHT: 40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; =
border-radius: 0
}
#com-d-top-a:hover {
	BACKGROUND: url(../images/common_float_block.png) no-repeat -100px =
-165px
}
#com-edu-call-center {
	Z-INDEX: 9999999; BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; =
BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 90px; BOTTOM: 40px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/common_float_block.png) no-repeat 0px -132px; =
HEIGHT: 28px; COLOR: #fff; BORDER-TOP: 0px; CURSOR: pointer; RIGHT: =
40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; border-radius: 0
}
#com-edu-call-center:hover {
	BACKGROUND: url(../images/common_float_block.png) no-repeat -100px =
-132px
}
#com-quick-reply-bbs {
	Z-INDEX: 9999999; BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; =
BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 90px; BOTTOM: 82px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/common_float_block.png) no-repeat 0px -33px; =
HEIGHT: 28px; COLOR: #fff; BORDER-TOP: 0px; CURSOR: pointer; RIGHT: =
40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; border-radius: 0
}
#com-quick-reply-bbs:hover {
	BACKGROUND: url(../images/common_float_block.png) no-repeat -100px =
-33px
}
#com-back-channel {
	Z-INDEX: 9999999; BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; =
BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 90px; BOTTOM: 40px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/common_float_block.png) no-repeat 0px -66px; =
HEIGHT: 28px; COLOR: #fff; BORDER-TOP: 0px; CURSOR: pointer; RIGHT: =
40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; border-radius: 0
}
#com-back-channel:hover {
	BACKGROUND: url(../images/common_float_block.png) no-repeat -100px =
-66px
}
#com-back-home {
	Z-INDEX: 9999999; BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; =
BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 90px; BOTTOM: 40px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/common_float_block.png) no-repeat 0px -99px; =
HEIGHT: 28px; COLOR: #fff; BORDER-TOP: 0px; CURSOR: pointer; RIGHT: =
40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; border-radius: 0
}
#com-back-home:hover {
	BACKGROUND: url(../images/common_float_block.png) no-repeat -100px =
-99px
}
#previw-button {
	MARGIN-TOP: 12px; WIDTH: 44px; BACKGROUND: =
url(../images/preview-img.png); FLOAT: right; HEIGHT: 14px; =
MARGIN-RIGHT: 5px
}
.editor-preview IMG {
	MAX-WIDTH: 80%; MAX-HEIGHT: 200px
}
#picture_dialog_form {
	POSITION: fixed; WIDTH: 1px; HEIGHT: 1px; OVERFLOW: hidden; TOP: 50%
}
.editor-toolbar .icon-preview:before {
	CONTENT: "\f06e"
}
.editor-toolbar .active.icon-preview:before {
	CONTENT: "\f070"
}
.editor-toolbar .icon-info:before {
	CONTENT: "\f05a"
}
.editor-toolbar .icon-headline:before {
	FONT: bold 18px/24px "Times"; CONTENT: "H1"
}
.editor-toolbar .icon-heading:before {
	FONT: bold 18px/24px "Times"; CONTENT: "H2"
}
.editor-toolbar .icon-code {
	MARGIN-RIGHT: 6px
}
.editor-toolbar .icon-code:before {
	LETTER-SPACING: -3px; CONTENT: "</>"; FONT-WEIGHT: bold
}
.pop_edit.ask_second .CodeMirror {
	WIDTH: 630px; HEIGHT: 200px
}
.CodeMirror {
	BORDER-BOTTOM: #eee 1px solid; BORDER-LEFT: #eee 1px solid; BORDER-TOP: =
#eee 1px solid; BORDER-RIGHT: #eee 1px solid
}
.CodeMirror-scroll {
	OVERFLOW: auto
}
.CodeMirror-lines {
	PADDING-BOTTOM: 4px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
PADDING-TOP: 4px
}
.CodeMirror PRE {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 4px; PADDING-RIGHT: 4px; =
PADDING-TOP: 0px
}
.CodeMirror-scrollbar-filler {
	BACKGROUND-COLOR: #fff
}
.CodeMirror DIV.CodeMirror-cursor {
	Z-INDEX: 3; BORDER-LEFT: #000 1px solid
}
.CodeMirror DIV.CodeMirror-secondarycursor {
	BORDER-LEFT: #c0c0c0 1px solid
}
.cm-keymap-fat-cursor.CodeMirror DIV.CodeMirror-cursor {
	Z-INDEX: 1; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; WIDTH: auto; =
BACKGROUND: #7e7; BORDER-TOP: 0px; BORDER-RIGHT: 0px
}
.cm-strong {
	COLOR: #854
}
.cm-em {
	COLOR: #854
}
.cm-s-paper .cm-keyword {
	COLOR: #555
}
.cm-s-paper .cm-atom {
	COLOR: #7f8c8d
}
.cm-s-paper .cm-number {
	COLOR: #7f8c8d
}
.cm-s-paper .cm-def {
	COLOR: #00f
}
.cm-s-paper .cm-variable {
	COLOR: #000
}
.cm-s-paper .cm-variable-2 {
	COLOR: #586
}
.cm-s-paper .cm-variable-3 {
	COLOR: #085
}
.cm-s-paper .cm-property {
	COLOR: #000
}
.cm-s-paper .cm-operator {
	COLOR: #000
}
.cm-s-paper .cm-comment {
	COLOR: #959595
}
.cm-s-paper .cm-string {
	COLOR: #47e
}
.cm-s-paper .cm-string-2 {
	COLOR: #f50
}
.cm-s-paper .cm-meta {
	COLOR: #555
}
.cm-s-paper .cm-error {
	COLOR: #f00
}
.cm-s-paper .cm-qualifier {
	COLOR: #555
}
.cm-s-paper .cm-builtin {
	COLOR: #555
}
.cm-s-paper .cm-bracket {
	COLOR: #997
}
.cm-s-paper .cm-tag {
	COLOR: #7f8c8d
}
.cm-s-paper .cm-attribute {
	COLOR: #7f8c8d
}
.cm-s-paper .cm-header {
	COLOR: #000
}
.cm-s-paper .cm-quote {
	COLOR: #888
}
.cm-s-paper .cm-hr {
	COLOR: #999
}
.cm-s-paper .cm-link {
	COLOR: #578
}
.cm-negative {
	COLOR: #d44
}
.cm-positive {
	COLOR: #292
}
.cm-header {
	FONT-WEIGHT: bold
}
.cm-strong {
	FONT-WEIGHT: bold
}
.cm-em {
	FONT-STYLE: italic
}
.cm-link {
	TEXT-DECORATION: underline
}
.cm-invalidchar {
	COLOR: #f00
}
DIV.CodeMirror SPAN.CodeMirror-matchingbracket {
	COLOR: #0f0
}
DIV.CodeMirror SPAN.CodeMirror-nonmatchingbracket {
	COLOR: #f22
}
.CodeMirror {
	POSITION: relative; OVERFLOW: hidden
}
.CodeMirror-scroll {
	POSITION: relative; PADDING-BOTTOM: 30px; OUTLINE-STYLE: none; =
OUTLINE-COLOR: invert; OUTLINE-WIDTH: medium; PADDING-RIGHT: 30px; =
MARGIN-BOTTOM: -30px; HEIGHT: 100%; MARGIN-RIGHT: -30px
}
.CodeMirror-sizer {
	POSITION: relative
}
.CodeMirror-vscrollbar {
	Z-INDEX: 6; POSITION: absolute; DISPLAY: none
}
.CodeMirror-hscrollbar {
	Z-INDEX: 6; POSITION: absolute; DISPLAY: none
}
.CodeMirror-scrollbar-filler {
	Z-INDEX: 6; POSITION: absolute; DISPLAY: none
}
.CodeMirror-vscrollbar {
	OVERFLOW-X: hidden; OVERFLOW-Y: scroll; TOP: 0px; RIGHT: 0px
}
.CodeMirror-hscrollbar {
	OVERFLOW-X: scroll; OVERFLOW-Y: hidden; BOTTOM: 0px; LEFT: 0px
}
.CodeMirror-scrollbar-filler {
	Z-INDEX: 6; BOTTOM: 0px; RIGHT: 0px
}
.CodeMirror-lines {
	CURSOR: text
}
.CodeMirror PRE {
	Z-INDEX: 2; POSITION: relative; LINE-HEIGHT: inherit; =
BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; FONT-FAMILY: Consolas, Menlo, =
Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream =
Vera Sans Mono, Courier New, monospace, serif; WORD-WRAP: normal; =
WHITE-SPACE: pre-wrap; BACKGROUND: none transparent scroll repeat 0% 0%; =
BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; COLOR: inherit; =
FONT-SIZE: inherit; OVERFLOW: visible; BORDER-LEFT-WIDTH: 0px; =
border-radius: 0; -moz-border-radius: 0; -webkit-border-radius: 0; =
-o-border-radius: 0
}
.CodeMirror UL {
	LIST-STYLE-POSITION: inside !important; PADDING-BOTTOM: inherit =
!important; MARGIN: auto; PADDING-LEFT: inherit !important; =
PADDING-RIGHT: inherit !important; PADDING-TOP: inherit !important
}
.CodeMirror OL {
	LIST-STYLE-POSITION: inside !important; PADDING-BOTTOM: inherit =
!important; MARGIN: auto; PADDING-LEFT: inherit !important; =
PADDING-RIGHT: inherit !important; PADDING-TOP: inherit !important
}
.CodeMirror LI {
	LIST-STYLE-POSITION: inside !important; PADDING-BOTTOM: inherit =
!important; MARGIN: auto; PADDING-LEFT: inherit !important; =
PADDING-RIGHT: inherit !important; PADDING-TOP: inherit !important
}
.CodeMirror UL {
=09
}
.CodeMirror UL LI {
=09
}
.CodeMirror OL {
	LIST-STYLE-TYPE: decimal !important
}
.CodeMirror OL LI {
	LIST-STYLE-TYPE: decimal !important
}
.CodeMirror-wrap PRE {
	WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-BREAK: normal
}
.CodeMirror-linebackground {
	Z-INDEX: 0; POSITION: absolute; BOTTOM: 0px; TOP: 0px; RIGHT: 0px; =
LEFT: 0px
}
.CodeMirror-linewidget {
	Z-INDEX: 2; POSITION: relative; OVERFLOW: auto
}
.CodeMirror-widget {
	DISPLAY: inline-block
}
.CodeMirror-wrap .CodeMirror-scroll {
	OVERFLOW-X: hidden
}
.CodeMirror-measure {
	POSITION: absolute; WIDTH: 100%; HEIGHT: 0px; VISIBILITY: hidden; =
OVERFLOW: hidden
}
.CodeMirror-measure PRE {
	POSITION: static
}
.CodeMirror DIV.CodeMirror-cursor {
	POSITION: absolute; WIDTH: 0px; VISIBILITY: hidden; BORDER-RIGHT: =
medium none
}
.CodeMirror-focused DIV.CodeMirror-cursor {
	VISIBILITY: visible
}
.CodeMirror-selected {
	BACKGROUND: #d9d9d9
}
.CodeMirror-focused .CodeMirror-selected {
	BACKGROUND: #bdc3c7
}
.cm-searching {
	BACKGROUND: #ffa
}

@media Print   =20
{
.CodeMirror DIV.CodeMirror-cursor {
	VISIBILITY: hidden
}
    }
.editor-wrapper {
	FONT: 16px/1.62 "Helvetica Neue", "Xin Gothic", "Hiragino Sans GB", =
"WenQuanYi Micro Hei", "Microsoft YaHei", sans-serif; COLOR: #2c3e50
}
.editor-wrapper INPUT.title {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: =
4px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert; PADDING-LEFT: 4px; =
OUTLINE-WIDTH: medium; WIDTH: 100%; PADDING-RIGHT: 4px; FONT: 18px =
"Helvetica Neue", "Xin Gothic", "Hiragino Sans GB", "WenQuanYi Micro =
Hei", "Microsoft YaHei", sans-serif; BACKGROUND: none transparent scroll =
repeat 0% 0%; BORDER-TOP: medium none; BORDER-RIGHT: medium none; =
PADDING-TOP: 4px; opacity: 0.6
}
.editor-toolbar {
	POSITION: relative; -webkit-user-select: none; -moz-user-select: none; =
-ms-user-select: none; -o-user-select: none; user-select: none; opacity: =
0.6
}
.editor-toolbar:before {
	BACKGROUND-COLOR: #bdc3c7; DISPLAY: block; HEIGHT: 1px; CONTENT: ' '
}
.editor-toolbar:after {
	BACKGROUND-COLOR: #bdc3c7; DISPLAY: block; HEIGHT: 1px; CONTENT: ' '
}
.editor-toolbar:before {
	MARGIN-BOTTOM: 8px
}
.editor-toolbar:after {
	MARGIN-TOP: 8px
}
.editor-wrapper INPUT.title:hover {
	opacity: 0.8
}
.editor-wrapper INPUT.title:focus {
	opacity: 0.8
}
.editor-toolbar:hover {
	opacity: 0.8
}
.editor-toolbar A {
	BORDER-BOTTOM: transparent 1px solid; TEXT-ALIGN: center; BORDER-LEFT: =
transparent 1px solid; MARGIN: 0px 4px; WIDTH: 24px; DISPLAY: =
inline-block; HEIGHT: 24px; COLOR: #2c3e50 !important; FONT-SIZE: 16px; =
BORDER-TOP: transparent 1px solid; CURSOR: pointer; BORDER-RIGHT: =
transparent 1px solid; TEXT-DECORATION: none !important; border-radius: =
3px
}
.editor-toolbar A:hover {
	BORDER-BOTTOM-COLOR: #95a5a6; BORDER-TOP-COLOR: #95a5a6; BACKGROUND: =
#fcfcfc; BORDER-RIGHT-COLOR: #95a5a6; BORDER-LEFT-COLOR: #95a5a6
}
.editor-toolbar A.active {
	BORDER-BOTTOM-COLOR: #95a5a6; BORDER-TOP-COLOR: #95a5a6; BACKGROUND: =
#fcfcfc; BORDER-RIGHT-COLOR: #95a5a6; BORDER-LEFT-COLOR: #95a5a6
}
.editor-toolbar A:before {
	LINE-HEIGHT: 24px
}
.editor-toolbar I.separator {
	BORDER-LEFT: #d9d9d9 1px solid; TEXT-INDENT: -10px; MARGIN: 0px 6px; =
WIDTH: 0px; DISPLAY: inline-block; COLOR: transparent; BORDER-RIGHT: =
#fff 1px solid
}
.editor-toolbar I.separator:first-child {
	MARGIN-LEFT: 0px
}
.editor-toolbar A.icon-fullscreen {
	POSITION: absolute; RIGHT: 0px
}
.editor-statusbar {
	TEXT-ALIGN: right; PADDING-BOTTOM: 8px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 5px; COLOR: #959694; FONT-SIZE: 12px; PADDING-TOP: 2px
}
.editor-statusbar SPAN {
	MIN-WIDTH: 4em; DISPLAY: inline-block; MARGIN-LEFT: 1em
}
.editor-statusbar .lines:before {
	CONTENT: 'lines: '
}
.editor-statusbar .words:before {
	CONTENT: 'words: '
}
.editor-preview {
	Z-INDEX: 9999; BOX-SIZING: border-box; POSITION: absolute; =
PADDING-BOTTOM: 5px; PADDING-LEFT: 5px; WIDTH: 100%; PADDING-RIGHT: 5px; =
BACKGROUND: #fcfdfe; HEIGHT: 100%; OVERFLOW: auto; TOP: 0px; =
PADDING-TOP: 5px; LEFT: 100%; -webkit-transition: left 0.2s ease; =
transition: left 0.2s ease; -moz-transition: left 0.2s ease; =
-ms-transition: left 0.2s ease
}
.editor-preview-active {
	LEFT: 0px
}
.editor-preview > P {
	MARGIN-TOP: 0px
}
[class^=3D'icon-'] {
	FONT-STYLE: normal; FONT-FAMILY: FontAwesome; FONT-WEIGHT: normal; =
TEXT-DECORATION: inherit; -webkit-font-smoothing: antialiased
}
[class*=3D' icon-'] {
	FONT-STYLE: normal; FONT-FAMILY: FontAwesome; FONT-WEIGHT: normal; =
TEXT-DECORATION: inherit; -webkit-font-smoothing: antialiased
}
[class^=3D'icon-']:before {
	DISPLAY: inline-block; TEXT-DECORATION: inherit; speak: none
}
[class*=3D' icon-']:before {
	DISPLAY: inline-block; TEXT-DECORATION: inherit; speak: none
}
.icon-bold:before {
	CONTENT: "\f032"
}
.icon-italic:before {
	CONTENT: "\f033"
}
.icon-quote-left:before {
	CONTENT: "\f10d"
}
.icon-list-ul:before {
	CONTENT: "\f0ca"
}
.icon-list-ol:before {
	CONTENT: "\f0cb"
}
.icon-link:before {
	CONTENT: "\f0c1"
}
.icon-picture:before {
	CONTENT: "\f03e"
}
.icon-reply:before {
	CONTENT: "\f112"
}
.icon-share-alt:before {
	CONTENT: "\f064"
}
.icon-preview:before {
	CONTENT: "\f06e"
}

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/css/blog_code.css

.dp-highlighter {
	POSITION: relative; OVERFLOW-X: auto; OVERFLOW-Y: hidden
}
.prettyprint {
	POSITION: relative; OVERFLOW-X: auto; OVERFLOW-Y: hidden
}
.pad_bot {
	PADDING-BOTTOM: 45px !important
}
.save_code {
	Z-INDEX: 2; POSITION: absolute; DISPLAY: none; HEIGHT: 60px; COLOR: =
#fff; FONT-SIZE: 14px; TOP: 5px; CURSOR: pointer; RIGHT: 30px
}
#mask_code {
	Z-INDEX: 990; POSITION: fixed; WIDTH: 100%; DISPLAY: none; HEIGHT: =
100%; TOP: 0px; LEFT: 0px
}
.gist_edit {
	Z-INDEX: 9999; POSITION: absolute; MARGIN: -165px 0px 0px -252px; =
WIDTH: 505px; DISPLAY: none; HEIGHT: 330px; TOP: 50%; LEFT: 50%
}
.save_snippets {
	BOX-SIZING: border-box; BORDER-BOTTOM: #dddcdd 1px solid; BORDER-LEFT: =
#dddcdd 1px solid; FONT-FAMILY: "Microsoft YaHei"; BACKGROUND: #fff; =
CLEAR: both; FONT-SIZE: 14px; OVERFLOW: hidden; BORDER-TOP: #dddcdd 1px =
solid; BORDER-RIGHT: #dddcdd 1px solid
}
.save_snippets .tit {
	BOX-SIZING: border-box; BORDER-BOTTOM: #dddcdd 1px solid; =
PADDING-BOTTOM: 0px; LINE-HEIGHT: 45px; PADDING-LEFT: 20px; =
PADDING-RIGHT: 20px; HEIGHT: 45px; CLEAR: both; OVERFLOW: hidden; =
PADDING-TOP: 0px
}
.save_snippets .tit H3 {
	BOX-SIZING: border-box; PADDING-BOTTOM: 0px; LINE-HEIGHT: 45px; MARGIN: =
0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FLOAT: left; HEIGHT: 45px; =
FONT-SIZE: 16px; FONT-WEIGHT: normal; PADDING-TOP: 0px
}
.gist_edit_list {
	BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; WIDTH: =
100%; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.save_snippets .tit SPAN {
	BOX-SIZING: border-box; LINE-HEIGHT: 45px; DISPLAY: block; FLOAT: =
right; HEIGHT: 45px; COLOR: #999
}
.save_snippets .tit SPAN A {
	COLOR: #0000ff; TEXT-DECORATION: underline
}
.save_snippets .tit SPAN A:link {
	COLOR: #0000ff; TEXT-DECORATION: underline
}
.save_snippets .tit SPAN A:visited {
	COLOR: #0000ff; TEXT-DECORATION: underline
}
.save_snippets .tit SPAN A:hover {
	COLOR: #0000ff; TEXT-DECORATION: underline
}
.save_snippets .tit SPAN A:active {
	COLOR: #0000ff; TEXT-DECORATION: underline
}
.save_snippets .con_form {
	BOX-SIZING: border-box; CLEAR: both; OVERFLOW: hidden; PADDING-TOP: =
20px
}
.save_snippets .con_form .gist_edit_list LI {
	BOX-SIZING: border-box; LIST-STYLE-TYPE: none; MIN-HEIGHT: 32px; =
MARGIN-BOTTOM: 20px; CLEAR: both; OVERFLOW: hidden; LIST-STYLE-IMAGE: =
none
}
.save_snippets .con_form .gist_edit_list LI SPAN.red {
	BOX-SIZING: border-box; LINE-HEIGHT: 36px; PADDING-RIGHT: 10px; =
DISPLAY: block; FLOAT: left; HEIGHT: 32px; COLOR: #f00; MARGIN-LEFT: =
20px
}
.save_snippets .con_form .gist_edit_list LI SPAN.txt {
	LINE-HEIGHT: 32px; PADDING-RIGHT: 20px; DISPLAY: block; FLOAT: left; =
HEIGHT: 32px
}
.save_snippets .con_form .gist_edit_list LI .form-input {
	BOX-SIZING: border-box; BORDER-BOTTOM: #dddcdd 1px solid; BORDER-LEFT: =
#dddcdd 1px solid; PADDING-BOTTOM: 0px; PADDING-LEFT: 10px; WIDTH: =
398px; PADDING-RIGHT: 10px; FONT-FAMILY: "Microsoft YaHei"; BACKGROUND: =
#fafafa; FLOAT: left; HEIGHT: 30px; COLOR: #666; BORDER-TOP: #dddcdd 1px =
solid; BORDER-RIGHT: #dddcdd 1px solid; PADDING-TOP: 0px
}
#divSearchTags {
	BOX-SIZING: border-box; BORDER-BOTTOM: #dddcdd 1px solid; TEXT-ALIGN: =
left; BORDER-LEFT: #dddcdd 1px solid; PADDING-BOTTOM: 0px; PADDING-LEFT: =
10px; WIDTH: 398px; PADDING-RIGHT: 10px; FONT-FAMILY: "Microsoft YaHei"; =
BACKGROUND: #fafafa; FLOAT: left; COLOR: #666; MARGIN-LEFT: 2px; =
BORDER-TOP: #dddcdd 1px solid; BORDER-RIGHT: #dddcdd 1px solid; =
PADDING-TOP: 0px
}
#divSearchTags .label SPAN {
	COLOR: #666
}
.insertTag {
	BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium =
none; WIDTH: 208px; BACKGROUND: none transparent scroll repeat 0% 0%; =
HEIGHT: 30px; COLOR: #666; BORDER-TOP: medium none; BORDER-RIGHT: medium =
none
}
#divSearchTags .blog_tag {
	BOX-SIZING: border-box; PADDING-BOTTOM: 0px; MARGIN: 7px 10px 7px 0px; =
PADDING-LEFT: 5px; PADDING-RIGHT: 5px; DISPLAY: block; BACKGROUND: =
#f3f3f3; FLOAT: left; COLOR: #666; PADDING-TOP: 0px; border-radius: 10px
}
#divSearchTags .blog_tag SPAN {
	DISPLAY: block; FLOAT: left
}
#divSearchTags .label A {
	BOX-SIZING: border-box; COLOR: #666; MARGIN-LEFT: 8px
}
.save_snippets .con_form .gist_edit_list LI .form-textarea {
	BOX-SIZING: border-box; BORDER-BOTTOM: #dddcdd 1px solid; BORDER-LEFT: =
#dddcdd 1px solid; PADDING-BOTTOM: 3px; PADDING-LEFT: 10px; WIDTH: =
398px; PADDING-RIGHT: 10px; FONT-FAMILY: "Microsoft YaHei"; BACKGROUND: =
#fafafa; FLOAT: left; HEIGHT: 60px; COLOR: #666; FONT-SIZE: 12px; =
BORDER-TOP: #dddcdd 1px solid; BORDER-RIGHT: #dddcdd 1px solid; =
PADDING-TOP: 3px
}
.save_snippets .bottom-bar {
	PADDING-BOTTOM: 17px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; CLEAR: =
both; OVERFLOW: hidden; BORDER-TOP: #dddcdd 1px solid; PADDING-TOP: 17px
}
.save_snippets .bottom-bar .btn-submit {
	BORDER-BOTTOM: #888 1px solid; TEXT-ALIGN: center; BORDER-LEFT: 0px; =
LINE-HEIGHT: 20px; WIDTH: 45px; FONT-FAMILY: "Microsoft YaHei"; =
BACKGROUND: #f0f0f0; FLOAT: right; HEIGHT: 20px; COLOR: #333; =
MARGIN-LEFT: 7px; FONT-SIZE: 12px; BORDER-TOP: 0px; BORDER-RIGHT: #888 =
1px solid; border-radius: 2px
}
.file_holder .code.file_content TABLE.lines PRE.line_numbers {
	WIDTH: 40px !important
}

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/pubfooter/js/tracking.js

// Generated by CoffeeScript 1.9.3

/*
@file =
=E5=89=8D=E7=AB=AF=E7=94=A8=E6=88=B7=E8=A1=8C=E4=B8=BA=E8=B7=9F=E8=B8=AA
@author <caoyu#at#csdn.net>
@version 20160323
 */

(function() {
  var slice =3D [].slice;

  (function(definition, undef) {
    var $, exports, global, i, t;
    global =3D this;
    $ =3D global.jQuery;
    exports =3D {};
    definition(global, exports, $);
    if (global.csdn =3D=3D=3D undef) {
      global.csdn =3D exports;
    }
    for (i in exports) {
      global[i] =3D global.csdn[i] =3D exports[i];

    }
    t =3D exports.tracking;
    t({
      '': [t.baseParams, t.tos, t.sessionId],
      'bbs.csdn.net': t.tags('/topics/', 'div.tag span'),
      'blog.csdn.net': t.tags('/article/details/', 'div.tag2box a'),
      'ask.csdn.net': t.tags('/questions/', 'div.tag_data a.tag span'),
      'download.csdn.net': t.tags('/detail/', 'div.info =
a[href^=3D"/tag/"]'),
      'www.csdn.net': [t.tags('/article/', 'div.tag a'), t.cmsPid],
      'www.csto.com': t.tags('/p/', 'span.tech a'),
      'www.iteye.com': t.tags('/topic/', '#topic_tags a')
    });
  })(function(global, exports, $) {
    var iarr =3D [], _key=3D0;
    var crossdomainGet, doc, domReady, flush, fns, hack, loaded, loc, =
protocol, querySelectorAll, testEl, topDomain, tracking;
    doc =3D global.document;
    loc =3D global.location;
    protocol =3D loc.protocol.substr(0, 4) =3D=3D=3D 'http' ? '' : =
'http:';
    fns =3D [];
    testEl =3D doc.documentElement;
    hack =3D testEl.doScroll;
    loaded =3D (hack ? /^loaded|^c/ : =
/^loaded|c/).test(doc['readyState']);
    flush =3D function() {
      var f;
      loaded =3D 1;
      while (f =3D fns.shift()) {
        f();
      }
    };
    if (typeof doc.addEventListener =3D=3D=3D "function") {
      doc.addEventListener('DOMContentLoaded', function() {
        doc.removeEventListener('DOMContentLoaded', arguments.callee, =
false);
        flush();
      });
    }
    if (hack) {
      doc.attachEvent('onreadystatechange', function() {
        if (/^c/.test(doc.readyState)) {
          doc.detachEvent('onreadystatechange', arguments.callee);
          flush();
        }
      });
    }
    domReady =3D hack ? function(fn) {
      if (global.self !=3D=3D global.top) {
        if (loaded) {
          return fn();
        } else {
          return fns.push(fn);
        }
      } else {
        try {
          testEl.doScroll('left');
        } catch (_error) {
          global.setTimeout(function() {
            domReady(fn);
          }, 50);
          return;
        }
        fn();
      }
    } : function(fn) {
      if (loaded) {
        fn();
      } else {
        fns.push(fn);
      }
    };
    topDomain =3D function(d) {
      return /\.?([a-z0-9\-]+\.[a-z0-9\-]+)(:\d+)?$/.exec(d)[1];
    };

    /*
    =
=E5=AF=B9=E5=A4=96=E5=85=AC=E5=BC=80=E7=9A=84=E8=B7=9F=E8=B8=AA=E5=87=BD=E6=
=95=B0tracking
    @param {Object} opts =
=E5=AE=9A=E4=B9=89=E4=BA=86=E4=B8=8D=E5=90=8C=E5=9F=9F=E5=90=8D=E4=B8=8B=E8=
=A6=81=E6=94=B6=E9=9B=86=E7=9A=84=E4=BF=A1=E6=81=AF
     */
    exports.tracking =3D tracking =3D function(opts) {
      domReady(function() {
        var data, i, j, k, len, len1, opt, ref;
        data =3D {};
        ref =3D [opts[loc.host], opts['']];
        for (j =3D 0, len =3D ref.length; j < len; j++) {
          opt =3D ref[j];
          if (opt) {
            if (typeof opt =3D=3D=3D 'function') {
              opt(data);
            } else {
              for (k =3D 0, len1 =3D opt.length; k < len1; k++) {
                i =3D opt[k];
                if (typeof i =3D=3D=3D "function") {
                  i(data);
                }
              }
            }
          }
        }
        crossdomainGet(data);
      });
    };

    /*
    =
=E9=99=84=E5=8A=A0=E5=9F=BA=E6=9C=AC=E7=9A=84=E5=8F=82=E6=95=B0=E5=88=B0=E6=
=95=B0=E6=8D=AE=E4=B8=8A=EF=BC=8C=E5=8C=85=E6=8B=ACreferrer user_name =
oid pid x-acl-token
     */
    tracking.baseParams =3D function(data) {
      var ref, ref1, ref2, ref3, ref4;
      data.user_name =3D /iteye.com$/.test(loc.host) ? ((ref =3D =
/>=E6=AC=A2=E8=BF=8E([^<]+)<\/a>/.exec((ref1 =3D =
doc.getElementById('user_nav')) !=3D null ? ref1.innerHTML : void 0)) =
!=3D null ? ref[1] : void 0) || '' : ((ref2 =3D /(; =
)?(UserName)=3D([^;]+)/.exec(doc.cookie)) !=3D null ? ref2[3] : void 0) =
|| '';
      data['x-acl-token'] =3D 'status_js_dkuyqthzbajmncbsb_token';
      if (!data.pid) {
        data.pid =3D /iteye.com$/.test(loc.host) ? 'iteye' : =
doc.body.getAttribute('data-pid') || ((ref3 =3D =
/(\w+)\.\w+\.\w+$/.exec(loc.host)) !=3D null ? ref3[1] : void 0);
      }
      data.oid =3D ((ref4 =3D querySelectorAll('.h-entry .p-author')[0]) =
!=3D null ? ref4.innerHTML.replace(/^\s+|\s+$/g, '') : void 0) || '';
      return data.referrer =3D doc.referrer;
    };
    tracking.sessionId =3D function(data) {
      var ref, sid;
      sid =3D (ref =3D =
/\bdc_session_id=3D([^;]*)(?:$|;)/.exec(doc.cookie)) !=3D null ? ref[1] =
: void 0;
      if (!/^https?:\/\/([\w-]+\.)*csdn\.net\//.test(doc.referrer)) {
        sid =3D void 0;
      }
      if (sid =3D=3D=3D void 0 || !/^\d+$/.test(sid)) {
        sid =3D +new Date();
      }
      doc.cookie =3D "dc_session_id=3D" + sid + " ; path=3D/ ; =
domain=3D." + (topDomain(loc.host));
      return data.session_id =3D "" + sid;
    };

    /*
    =
=E9=99=84=E5=8A=A0=E4=B8=8A=E4=B8=80=E9=A1=B5=E9=9D=A2=E5=8F=8A=E5=81=9C=E7=
=95=99=E6=97=B6=E9=97=B4=E5=88=B0=E6=95=B0=E6=8D=AE=E4=B8=8A
     */
    tracking.tos =3D function(data) {
      var e, now, ref, t, tos;
      now =3D +new Date() / 1000 | 0;
      t =3D (ref =3D /\bdc_tos=3D([^;]*)(?:$|;)/.exec(doc.cookie)) !=3D =
null ? ref[1] : void 0;
      try {
        tos =3D now - parseInt(t, 36);
      } catch (_error) {
        e =3D _error;
        tos =3D -1;
      }
      doc.cookie =3D "dc_tos=3D" + (now.toString(36)) + " ; expires=3D" =
+ (new Date((now + 4 * 60 * 60) * 1000).toGMTString()) + " ; max-age=3D" =
+ (4 * 60 * 60) + " ; path=3D/ ; domain=3D." + (topDomain(loc.host));
      return data.tos =3D tos;
    };

    /*
    =
=E8=BF=94=E5=9B=9E=E9=99=84=E5=8A=A0tag=E5=8F=82=E6=95=B0=E5=88=B0=E6=95=B0=
=E6=8D=AE=E4=B8=8A=E7=9A=84=E5=87=BD=E6=95=B0=EF=BC=8C=E5=8F=AA=E5=9C=A8=E6=
=8C=87=E5=AE=9A=E7=9A=84path=E4=B8=AD=E7=94=9F=E6=95=88=EF=BC=8C=E5=85=B7=
=E4=BD=93=E7=9A=84tags=E7=94=B1selectors=E6=8C=87=E5=AE=9A
    @param {String/RegExp} path =
=E8=A6=81=E5=8C=B9=E9=85=8D=E7=9A=84=E5=9C=B0=E5=9D=80=E8=B7=AF=E5=BE=84=E7=
=89=87=E6=AE=B5
    @param {Array[String/Function]} selectors =
tag=E7=9A=84=E9=80=89=E6=8B=A9=E5=99=A8=E6=88=96=E8=80=85=E6=98=AF=E8=BF=94=
=E5=9B=9Etag=E6=95=B0=E7=BB=84=E7=9A=84=E5=87=BD=E6=95=B0=E5=88=97=E8=A1=A8=

     */
    tracking.tags =3D function() {
      var path, selectors;
      path =3D arguments[0], selectors =3D 2 <=3D arguments.length ? =
slice.call(arguments, 1) : [];
      return function(data) {
        var e, eles, i, j, k, l, len, len1, len2, ref, result, sel, t;
        if (typeof path =3D=3D=3D 'string' && =
!~loc.pathname.indexOf(path) || path instanceof RegExp && =
!path.test(loc.pathname)) {
          return;
        }
        eles =3D [];
        for (j =3D 0, len =3D selectors.length; j < len; j++) {
          sel =3D selectors[j];
          ref =3D (typeof sel =3D=3D=3D 'string' ? querySelectorAll(sel) =
: (typeof sel =3D=3D=3D "function" ? sel() : void 0) || []);
          for (k =3D 0, len1 =3D ref.length; k < len1; k++) {
            i =3D ref[k];
            eles.push(i);
          }
        }
        result =3D {};
        for (l =3D 0, len2 =3D eles.length; l < len2; l++) {
          e =3D eles[l];
          result[e.innerHTML.replace(/^\s+|\s+$/g, '')] =3D 1;
        }
        data.tag =3D ((function() {
          var results;
          results =3D [];
          for (t in result) {
            results.push(t);
          }
          return results;
        })()).join();
      };
    };

    /*
    =
=E9=99=84=E5=8A=A0pid=E5=8F=82=E6=95=B0=E5=88=B0=E6=95=B0=E6=8D=AE=E4=B8=8A=
=E7=9A=84=E5=87=BD=E6=95=B0=EF=BC=8C=E9=92=88=E5=AF=B9 =
www.csdn.net/article/ =
=E4=B8=8B=E7=9A=84=E6=96=87=E7=AB=A0=E9=A1=B5=E6=8E=A2=E6=B5=8B=E7=9C=9F=E5=
=AE=9Epid
     */
    tracking.cmsPid =3D function(data) {
      if (loc.pathname.indexOf('/article/') =3D=3D=3D -1) {
        return;
      }
      try {
        return data.pid =3D querySelectorAll('.brea_nav > =
a')[1].hostname.match(/(\w+)\.\w+\.\w+$/)[1];
      } catch (_error) {

      }
    };
    /*
    =
=E9=99=84=E5=8A=A0wechat=E5=8F=82=E6=95=B0=E5=88=B0=E6=95=B0=E6=8D=AE=E4=B8=
=8A=E7=9A=84=E5=87=BD=E6=95=B0=EF=BC=8C=E9=92=88=E5=AF=B9=E5=BE=AE=E4=BF=A1=
=E6=B5=8F=E8=A7=88=E5=99=A8=E7=94=A8=E6=88=B7=E5=A2=9E=E5=8A=A0=E5=8F=82=E6=
=95=B0
     */
    /*tracking.wechat=3Dfunction(data){
      var ua =3D window.navigator.userAgent.toLowerCase();
      if(ua.match(/MicroMessenger/i) =3D=3D 'micromessenger'){
          data.source=3D'wechat';
      }else{
        return false;
      }
    }*/

    /*
    =
=E4=BD=BF=E7=94=A8CSS=E9=80=89=E6=8B=A9=E5=99=A8=E6=A3=80=E7=B4=A2=E5=AF=B9=
=E5=BA=94=E7=9A=84DOM=E5=85=83=E7=B4=A0
    @param {String} selector - CSS=E9=80=89=E6=8B=A9=E5=99=A8
    @returns {Array[HTMLElement]} =
HTML=E5=85=83=E7=B4=A0=E9=9B=86=E5=90=88=EF=BC=8C=E5=A6=82=E6=9E=9C=E6=B5=
=8F=E8=A7=88=E5=99=A8=E4=B8=8D=E6=94=AF=E6=8C=81=E4=BD=BF=E7=94=A8CSS=E9=80=
=89=E6=8B=A9=E5=99=A8=E6=9F=A5=E6=89=BE=E5=B0=86=E8=BF=94=E5=9B=9E =
undefined=EF=BC=8C=E5=A6=82=E6=9E=9C=E6=89=BE=E4=B8=8D=E5=88=B0=E4=BB=BB=E4=
=BD=95=E5=85=83=E7=B4=A0=E8=BF=94=E5=9B=9E0=E9=95=BF=E5=BA=A6=E7=9A=84=E8=
=BF=91=E4=BC=BC=E6=95=B0=E7=BB=84
     */
    tracking.querySelectorAll =3D querySelectorAll =3D =
function(selector) {
      return (typeof doc.querySelectorAll =3D=3D=3D "function" ? =
doc.querySelectorAll(selector) : void 0) || (typeof $ =3D=3D=3D =
"function" ? $(selector) : void 0) || global.Prototype && (typeof =
global.$$ =3D=3D=3D "function" ? global.$$(selector) : void 0) || [];
    };

    /*
    =E5=8F=91=E9=80=81=E8=B7=A8=E5=9F=9FHTTP GET=E8=AF=B7=E6=B1=82
    @param {String} url - =
=E8=AF=B7=E6=B1=82=E7=9A=84Url=EF=BC=8C=E5=BF=BD=E7=95=A5=E5=B0=86=E4=BD=BF=
=E7=94=A8=E9=BB=98=E8=AE=A4=E7=9A=84=E8=A1=8C=E4=B8=BA=E8=B7=9F=E8=B8=AA=E5=
=9C=B0=E5=9D=80
    @param {Object} data - =
=E8=AF=B7=E6=B1=82=E8=A6=81=E6=8F=90=E4=BA=A4=E7=9A=84=E6=95=B0=E6=8D=AE
     */
    return tracking.crossdomainGet =3D crossdomainGet =3D function(data) =
{
      var i, p;
      data[Math.random() * 10000 | 0] =3D '';

      var ik =3D iarr.push(new Image()) - 1;
      iarr[ik].onload =3D iarr[ik].onerror =3D function() {
        var _a =3D ik;
        iarr[_a].onload =3D iarr[_a].onerror =3D null;
        iarr[_a].removeAttribute("src");
        return iarr[_a] =3D null;
      };
      //i =3D new Image();
      //i.onload =3D i.onerror =3D function() {
      //  i.onload =3D i.onerror =3D null;
      //  i.removeAttribute('src');
      //  i =3D null;
      //};
        iarr[ik].src =3D protocol + '//dc.csdn.net/track?' + =
((function() {
          var results;
          results =3D [];
          for (p in data) {
            results.push(encodeURIComponent(p) + '=3D' + =
encodeURIComponent(data[p]));
          }
          return results;
        })()).join('&');

    };
  });

}).call(this);
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/jquery.js

/*! jQuery v1.11.1 | (c) 2005, 2014 jQuery Foundation, Inc. | =
jquery.org/license */
!function(a,b){"object"=3D=3Dtypeof module&&"object"=3D=3Dtypeof =
module.exports?module.exports=3Da.document?b(a,!0):function(a){if(!a.docu=
ment)throw new Error("jQuery requires a window with a document");return =
b(a)}:b(a)}("undefined"!=3Dtypeof window?window:this,function(a,b){var =
c=3D[],d=3Dc.slice,e=3Dc.concat,f=3Dc.push,g=3Dc.indexOf,h=3D{},i=3Dh.toS=
tring,j=3Dh.hasOwnProperty,k=3D{},l=3D"1.11.1",m=3Dfunction(a,b){return =
new =
m.fn.init(a,b)},n=3D/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,o=3D/^-ms-/,p=3D=
/-([\da-z])/gi,q=3Dfunction(a,b){return =
b.toUpperCase()};m.fn=3Dm.prototype=3D{jquery:l,constructor:m,selector:""=
,length:0,toArray:function(){return d.call(this)},get:function(a){return =
null!=3Da?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:functio=
n(a){var b=3Dm.merge(this.constructor(),a);return =
b.prevObject=3Dthis,b.context=3Dthis.context,b},each:function(a,b){return=
 m.each(this,a,b)},map:function(a){return =
this.pushStack(m.map(this,function(b,c){return =
a.call(b,c,b)}))},slice:function(){return =
this.pushStack(d.apply(this,arguments))},first:function(){return =
this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var =
b=3Dthis.length,c=3D+a+(0>a?b:0);return =
this.pushStack(c>=3D0&&b>c?[this[c]]:[])},end:function(){return =
this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.spli=
ce},m.extend=3Dm.fn.extend=3Dfunction(){var =
a,b,c,d,e,f,g=3Darguments[0]||{},h=3D1,i=3Darguments.length,j=3D!1;for("b=
oolean"=3D=3Dtypeof =
g&&(j=3Dg,g=3Darguments[h]||{},h++),"object"=3D=3Dtypeof =
g||m.isFunction(g)||(g=3D{}),h=3D=3D=3Di&&(g=3Dthis,h--);i>h;h++)if(null!=
=3D(e=3Darguments[h]))for(d in =
e)a=3Dg[d],c=3De[d],g!=3D=3Dc&&(j&&c&&(m.isPlainObject(c)||(b=3Dm.isArray=
(c)))?(b?(b=3D!1,f=3Da&&m.isArray(a)?a:[]):f=3Da&&m.isPlainObject(a)?a:{}=
,g[d]=3Dm.extend(j,f,c)):void 0!=3D=3Dc&&(g[d]=3Dc));return =
g},m.extend({expando:"jQuery"+(l+Math.random()).replace(/\D/g,""),isReady=
:!0,error:function(a){throw new =
Error(a)},noop:function(){},isFunction:function(a){return"function"=3D=3D=
=3Dm.type(a)},isArray:Array.isArray||function(a){return"array"=3D=3D=3Dm.=
type(a)},isWindow:function(a){return =
null!=3Da&&a=3D=3Da.window},isNumeric:function(a){return!m.isArray(a)&&a-=
parseFloat(a)>=3D0},isEmptyObject:function(a){var b;for(b in =
a)return!1;return!0},isPlainObject:function(a){var =
b;if(!a||"object"!=3D=3Dm.type(a)||a.nodeType||m.isWindow(a))return!1;try=
{if(a.constructor&&!j.call(a,"constructor")&&!j.call(a.constructor.protot=
ype,"isPrototypeOf"))return!1}catch(c){return!1}if(k.ownLast)for(b in =
a)return j.call(a,b);for(b in a);return void =
0=3D=3D=3Db||j.call(a,b)},type:function(a){return =
null=3D=3Da?a+"":"object"=3D=3Dtypeof a||"function"=3D=3Dtypeof =
a?h[i.call(a)]||"object":typeof =
a},globalEval:function(b){b&&m.trim(b)&&(a.execScript||function(b){a.eval=
.call(a,b)})(b)},camelCase:function(a){return =
a.replace(o,"ms-").replace(p,q)},nodeName:function(a,b){return =
a.nodeName&&a.nodeName.toLowerCase()=3D=3D=3Db.toLowerCase()},each:functi=
on(a,b,c){var =
d,e=3D0,f=3Da.length,g=3Dr(a);if(c){if(g){for(;f>e;e++)if(d=3Db.apply(a[e=
],c),d=3D=3D=3D!1)break}else for(e in =
a)if(d=3Db.apply(a[e],c),d=3D=3D=3D!1)break}else =
if(g){for(;f>e;e++)if(d=3Db.call(a[e],e,a[e]),d=3D=3D=3D!1)break}else =
for(e in a)if(d=3Db.call(a[e],e,a[e]),d=3D=3D=3D!1)break;return =
a},trim:function(a){return =
null=3D=3Da?"":(a+"").replace(n,"")},makeArray:function(a,b){var =
c=3Db||[];return null!=3Da&&(r(Object(a))?m.merge(c,"string"=3D=3Dtypeof =
a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){var d;if(b){if(g)return =
g.call(b,a,c);for(d=3Db.length,c=3Dc?0>c?Math.max(0,d+c):c:0;d>c;c++)if(c=
 in b&&b[c]=3D=3D=3Da)return c}return-1},merge:function(a,b){var =
c=3D+b.length,d=3D0,e=3Da.length;while(c>d)a[e++]=3Db[d++];if(c!=3D=3Dc)w=
hile(void 0!=3D=3Db[d])a[e++]=3Db[d++];return =
a.length=3De,a},grep:function(a,b,c){for(var =
d,e=3D[],f=3D0,g=3Da.length,h=3D!c;g>f;f++)d=3D!b(a[f],f),d!=3D=3Dh&&e.pu=
sh(a[f]);return e},map:function(a,b,c){var =
d,f=3D0,g=3Da.length,h=3Dr(a),i=3D[];if(h)for(;g>f;f++)d=3Db(a[f],f,c),nu=
ll!=3Dd&&i.push(d);else for(f in =
a)d=3Db(a[f],f,c),null!=3Dd&&i.push(d);return =
e.apply([],i)},guid:1,proxy:function(a,b){var =
c,e,f;return"string"=3D=3Dtypeof =
b&&(f=3Da[b],b=3Da,a=3Df),m.isFunction(a)?(c=3Dd.call(arguments,2),e=3Dfu=
nction(){return =
a.apply(b||this,c.concat(d.call(arguments)))},e.guid=3Da.guid=3Da.guid||m=
.guid++,e):void 0},now:function(){return+new =
Date},support:k}),m.each("Boolean Number String Function Array Date =
RegExp Object Error".split(" "),function(a,b){h["[object =
"+b+"]"]=3Db.toLowerCase()});function r(a){var =
b=3Da.length,c=3Dm.type(a);return"function"=3D=3D=3Dc||m.isWindow(a)?!1:1=
=3D=3D=3Da.nodeType&&b?!0:"array"=3D=3D=3Dc||0=3D=3D=3Db||"number"=3D=3Dt=
ypeof b&&b>0&&b-1 in a}var s=3Dfunction(a){var =
b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=3D"sizzle"+-new =
Date,v=3Da.document,w=3D0,x=3D0,y=3Dgb(),z=3Dgb(),A=3Dgb(),B=3Dfunction(a=
,b){return =
a=3D=3D=3Db&&(l=3D!0),0},C=3D"undefined",D=3D1<<31,E=3D{}.hasOwnProperty,=
F=3D[],G=3DF.pop,H=3DF.push,I=3DF.push,J=3DF.slice,K=3DF.indexOf||functio=
n(a){for(var b=3D0,c=3Dthis.length;c>b;b++)if(this[b]=3D=3D=3Da)return =
b;return-1},L=3D"checked|selected|async|autofocus|autoplay|controls|defer=
|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M=3D"=
[\\x20\\t\\r\\n\\f]",N=3D"(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",O=3DN.replace=
("w","w#"),P=3D"\\["+M+"*("+N+")(?:"+M+"*([*^$|!~]?=3D)"+M+"*(?:'((?:\\\\=
.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+O+"))|)"+M+"*\\]",Q=3D":("+N=
+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|=
[^\\\\()[\\]]|"+P+")*)|.*)\\)|)",R=3Dnew =
RegExp("^"+M+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M+"+$","g"),S=3Dnew =
RegExp("^"+M+"*,"+M+"*"),T=3Dnew =
RegExp("^"+M+"*([>+~]|"+M+")"+M+"*"),U=3Dnew =
RegExp("=3D"+M+"*([^\\]'\"]*?)"+M+"*\\]","g"),V=3Dnew RegExp(Q),W=3Dnew =
RegExp("^"+O+"$"),X=3D{ID:new RegExp("^#("+N+")"),CLASS:new =
RegExp("^\\.("+N+")"),TAG:new =
RegExp("^("+N.replace("w","w*")+")"),ATTR:new RegExp("^"+P),PSEUDO:new =
RegExp("^"+Q),CHILD:new =
RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M+"*(even=
|odd|(([+-]|)(\\d*)n|)"+M+"*(?:([+-]|)"+M+"*(\\d+)|))"+M+"*\\)|)","i"),bo=
ol:new RegExp("^(?:"+L+")$","i"),needsContext:new =
RegExp("^"+M+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M+"*((?:-=
\\d)?\\d*)"+M+"*\\)|)(?=3D[^-]|$)","i")},Y=3D/^(?:input|select|textarea|b=
utton)$/i,Z=3D/^h\d$/i,$=3D/^[^{]+\{\s*\[native =
\w/,_=3D/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ab=3D/[+~]/,bb=3D/'|\\/g,cb=3D=
new =
RegExp("\\\\([\\da-f]{1,6}"+M+"?|("+M+")|.)","ig"),db=3Dfunction(a,b,c){v=
ar d=3D"0x"+b-65536;return =
d!=3D=3Dd||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10=
|55296,1023&d|56320)};try{I.apply(F=3DJ.call(v.childNodes),v.childNodes),=
F[v.childNodes.length].nodeType}catch(eb){I=3D{apply:F.length?function(a,=
b){H.apply(a,J.call(b))}:function(a,b){var =
c=3Da.length,d=3D0;while(a[c++]=3Db[d++]);a.length=3Dc-1}}}function =
fb(a,b,d,e){var =
f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!=3D=3Dn&&m(b),b=3Db||n,d=3D=
d||[],!a||"string"!=3Dtypeof a)return =
d;if(1!=3D=3D(k=3Db.nodeType)&&9!=3D=3Dk)return[];if(p&&!e){if(f=3D_.exec=
(a))if(j=3Df[1]){if(9=3D=3D=3Dk){if(h=3Db.getElementById(j),!h||!h.parent=
Node)return d;if(h.id=3D=3D=3Dj)return d.push(h),d}else =
if(b.ownerDocument&&(h=3Db.ownerDocument.getElementById(j))&&t(b,h)&&h.id=
=3D=3D=3Dj)return d.push(h),d}else{if(f[2])return =
I.apply(d,b.getElementsByTagName(a)),d;if((j=3Df[3])&&c.getElementsByClas=
sName&&b.getElementsByClassName)return =
I.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=
=3Dr=3Du,w=3Db,x=3D9=3D=3D=3Dk&&a,1=3D=3D=3Dk&&"object"!=3D=3Db.nodeName.=
toLowerCase()){o=3Dg(a),(r=3Db.getAttribute("id"))?s=3Dr.replace(bb,"\\$&=
"):b.setAttribute("id",s),s=3D"[id=3D'"+s+"'] =
",l=3Do.length;while(l--)o[l]=3Ds+qb(o[l]);w=3Dab.test(a)&&ob(b.parentNod=
e)||b,x=3Do.join(",")}if(x)try{return =
I.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute=
("id")}}}return i(a.replace(R,"$1"),b,d,e)}function gb(){var =
a=3D[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete =
b[a.shift()],b[c+" "]=3De}return b}function hb(a){return =
a[u]=3D!0,a}function ib(a){var =
b=3Dn.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.p=
arentNode&&b.parentNode.removeChild(b),b=3Dnull}}function jb(a,b){var =
c=3Da.split("|"),e=3Da.length;while(e--)d.attrHandle[c[e]]=3Db}function =
kb(a,b){var =
c=3Db&&a,d=3Dc&&1=3D=3D=3Da.nodeType&&1=3D=3D=3Db.nodeType&&(~b.sourceInd=
ex||D)-(~a.sourceIndex||D);if(d)return =
d;if(c)while(c=3Dc.nextSibling)if(c=3D=3D=3Db)return-1;return =
a?1:-1}function lb(a){return function(b){var =
c=3Db.nodeName.toLowerCase();return"input"=3D=3D=3Dc&&b.type=3D=3D=3Da}}f=
unction mb(a){return function(b){var =
c=3Db.nodeName.toLowerCase();return("input"=3D=3D=3Dc||"button"=3D=3D=3Dc=
)&&b.type=3D=3D=3Da}}function nb(a){return hb(function(b){return =
b=3D+b,hb(function(c,d){var =
e,f=3Da([],c.length,b),g=3Df.length;while(g--)c[e=3Df[g]]&&(c[e]=3D!(d[e]=
=3Dc[e]))})})}function ob(a){return a&&typeof =
a.getElementsByTagName!=3D=3DC&&a}c=3Dfb.support=3D{},f=3Dfb.isXML=3Dfunc=
tion(a){var b=3Da&&(a.ownerDocument||a).documentElement;return =
b?"HTML"!=3D=3Db.nodeName:!1},m=3Dfb.setDocument=3Dfunction(a){var =
b,e=3Da?a.ownerDocument||a:v,g=3De.defaultView;return =
e!=3D=3Dn&&9=3D=3D=3De.nodeType&&e.documentElement?(n=3De,o=3De.documentE=
lement,p=3D!f(e),g&&g!=3D=3Dg.top&&(g.addEventListener?g.addEventListener=
("unload",function(){m()},!1):g.attachEvent&&g.attachEvent("onunload",fun=
ction(){m()})),c.attributes=3Dib(function(a){return =
a.className=3D"i",!a.getAttribute("className")}),c.getElementsByTagName=3D=
ib(function(a){return =
a.appendChild(e.createComment("")),!a.getElementsByTagName("*").length}),=
c.getElementsByClassName=3D$.test(e.getElementsByClassName)&&ib(function(=
a){return a.innerHTML=3D"<div class=3D'a'></div><div class=3D'a =
i'></div>",a.firstChild.className=3D"i",2=3D=3D=3Da.getElementsByClassNam=
e("i").length}),c.getById=3Dib(function(a){return =
o.appendChild(a).id=3Du,!e.getElementsByName||!e.getElementsByName(u).len=
gth}),c.getById?(d.find.ID=3Dfunction(a,b){if(typeof =
b.getElementById!=3D=3DC&&p){var c=3Db.getElementById(a);return =
c&&c.parentNode?[c]:[]}},d.filter.ID=3Dfunction(a){var =
b=3Da.replace(cb,db);return function(a){return =
a.getAttribute("id")=3D=3D=3Db}}):(delete =
d.find.ID,d.filter.ID=3Dfunction(a){var b=3Da.replace(cb,db);return =
function(a){var c=3Dtypeof =
a.getAttributeNode!=3D=3DC&&a.getAttributeNode("id");return =
c&&c.value=3D=3D=3Db}}),d.find.TAG=3Dc.getElementsByTagName?function(a,b)=
{return typeof =
b.getElementsByTagName!=3D=3DC?b.getElementsByTagName(a):void =
0}:function(a,b){var =
c,d=3D[],e=3D0,f=3Db.getElementsByTagName(a);if("*"=3D=3D=3Da){while(c=3D=
f[e++])1=3D=3D=3Dc.nodeType&&d.push(c);return d}return =
f},d.find.CLASS=3Dc.getElementsByClassName&&function(a,b){return typeof =
b.getElementsByClassName!=3D=3DC&&p?b.getElementsByClassName(a):void =
0},r=3D[],q=3D[],(c.qsa=3D$.test(e.querySelectorAll))&&(ib(function(a){a.=
innerHTML=3D"<select msallowclip=3D''><option =
selected=3D''></option></select>",a.querySelectorAll("[msallowclip^=3D'']=
").length&&q.push("[*^$]=3D"+M+"*(?:''|\"\")"),a.querySelectorAll("[selec=
ted]").length||q.push("\\["+M+"*(?:value|"+L+")"),a.querySelectorAll(":ch=
ecked").length||q.push(":checked")}),ib(function(a){var =
b=3De.createElement("input");b.setAttribute("type","hidden"),a.appendChil=
d(b).setAttribute("name","D"),a.querySelectorAll("[name=3Dd]").length&&q.=
push("name"+M+"*[*^$|!~]?=3D"),a.querySelectorAll(":enabled").length||q.p=
ush(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),=
(c.matchesSelector=3D$.test(s=3Do.matches||o.webkitMatchesSelector||o.moz=
MatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ib(function(a=
){c.disconnectedMatch=3Ds.call(a,"div"),s.call(a,"[s!=3D'']:x"),r.push("!=
=3D",Q)}),q=3Dq.length&&new RegExp(q.join("|")),r=3Dr.length&&new =
RegExp(r.join("|")),b=3D$.test(o.compareDocumentPosition),t=3Db||$.test(o=
.contains)?function(a,b){var =
c=3D9=3D=3D=3Da.nodeType?a.documentElement:a,d=3Db&&b.parentNode;return =
a=3D=3D=3Dd||!(!d||1!=3D=3Dd.nodeType||!(c.contains?c.contains(d):a.compa=
reDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b=
)while(b=3Db.parentNode)if(b=3D=3D=3Da)return!0;return!1},B=3Db?function(=
a,b){if(a=3D=3D=3Db)return l=3D!0,0;var =
d=3D!a.compareDocumentPosition-!b.compareDocumentPosition;return =
d?d:(d=3D(a.ownerDocument||a)=3D=3D=3D(b.ownerDocument||b)?a.compareDocum=
entPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)=3D=3D=
=3Dd?a=3D=3D=3De||a.ownerDocument=3D=3D=3Dv&&t(v,a)?-1:b=3D=3D=3De||b.own=
erDocument=3D=3D=3Dv&&t(v,b)?1:k?K.call(k,a)-K.call(k,b):0:4&d?-1:1)}:fun=
ction(a,b){if(a=3D=3D=3Db)return l=3D!0,0;var =
c,d=3D0,f=3Da.parentNode,g=3Db.parentNode,h=3D[a],i=3D[b];if(!f||!g)retur=
n =
a=3D=3D=3De?-1:b=3D=3D=3De?1:f?-1:g?1:k?K.call(k,a)-K.call(k,b):0;if(f=3D=
=3D=3Dg)return =
kb(a,b);c=3Da;while(c=3Dc.parentNode)h.unshift(c);c=3Db;while(c=3Dc.paren=
tNode)i.unshift(c);while(h[d]=3D=3D=3Di[d])d++;return =
d?kb(h[d],i[d]):h[d]=3D=3D=3Dv?-1:i[d]=3D=3D=3Dv?1:0},e):n},fb.matches=3D=
function(a,b){return =
fb(a,null,null,b)},fb.matchesSelector=3Dfunction(a,b){if((a.ownerDocument=
||a)!=3D=3Dn&&m(a),b=3Db.replace(U,"=3D'$1']"),!(!c.matchesSelector||!p||=
r&&r.test(b)||q&&q.test(b)))try{var =
d=3Ds.call(a,b);if(d||c.disconnectedMatch||a.document&&11!=3D=3Da.documen=
t.nodeType)return d}catch(e){}return =
fb(b,n,null,[a]).length>0},fb.contains=3Dfunction(a,b){return(a.ownerDocu=
ment||a)!=3D=3Dn&&m(a),t(a,b)},fb.attr=3Dfunction(a,b){(a.ownerDocument||=
a)!=3D=3Dn&&m(a);var =
e=3Dd.attrHandle[b.toLowerCase()],f=3De&&E.call(d.attrHandle,b.toLowerCas=
e())?e(a,b,!p):void 0;return void =
0!=3D=3Df?f:c.attributes||!p?a.getAttribute(b):(f=3Da.getAttributeNode(b)=
)&&f.specified?f.value:null},fb.error=3Dfunction(a){throw new =
Error("Syntax error, unrecognized expression: =
"+a)},fb.uniqueSort=3Dfunction(a){var =
b,d=3D[],e=3D0,f=3D0;if(l=3D!c.detectDuplicates,k=3D!c.sortStable&&a.slic=
e(0),a.sort(B),l){while(b=3Da[f++])b=3D=3D=3Da[f]&&(e=3Dd.push(f));while(=
e--)a.splice(d[e],1)}return k=3Dnull,a},e=3Dfb.getText=3Dfunction(a){var =
b,c=3D"",d=3D0,f=3Da.nodeType;if(f){if(1=3D=3D=3Df||9=3D=3D=3Df||11=3D=3D=
=3Df){if("string"=3D=3Dtypeof a.textContent)return =
a.textContent;for(a=3Da.firstChild;a;a=3Da.nextSibling)c+=3De(a)}else =
if(3=3D=3D=3Df||4=3D=3D=3Df)return a.nodeValue}else =
while(b=3Da[d++])c+=3De(b);return =
c},d=3Dfb.selectors=3D{cacheLength:50,createPseudo:hb,match:X,attrHandle:=
{},find:{},relative:{">":{dir:"parentNode",first:!0}," =
":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previ=
ousSibling"}},preFilter:{ATTR:function(a){return =
a[1]=3Da[1].replace(cb,db),a[3]=3D(a[3]||a[4]||a[5]||"").replace(cb,db),"=
~=3D"=3D=3D=3Da[2]&&(a[3]=3D" "+a[3]+" =
"),a.slice(0,4)},CHILD:function(a){return =
a[1]=3Da[1].toLowerCase(),"nth"=3D=3D=3Da[1].slice(0,3)?(a[3]||fb.error(a=
[0]),a[4]=3D+(a[4]?a[5]+(a[6]||1):2*("even"=3D=3D=3Da[3]||"odd"=3D=3D=3Da=
[3])),a[5]=3D+(a[7]+a[8]||"odd"=3D=3D=3Da[3])):a[3]&&fb.error(a[0]),a},PS=
EUDO:function(a){var b,c=3D!a[6]&&a[2];return =
X.CHILD.test(a[0])?null:(a[3]?a[2]=3Da[4]||a[5]||"":c&&V.test(c)&&(b=3Dg(=
c,!0))&&(b=3Dc.indexOf(")",c.length-b)-c.length)&&(a[0]=3Da[0].slice(0,b)=
,a[2]=3Dc.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var =
b=3Da.replace(cb,db).toLowerCase();return"*"=3D=3D=3Da?function(){return!=
0}:function(a){return =
a.nodeName&&a.nodeName.toLowerCase()=3D=3D=3Db}},CLASS:function(a){var =
b=3Dy[a+" "];return b||(b=3Dnew =
RegExp("(^|"+M+")"+a+"("+M+"|$)"))&&y(a,function(a){return =
b.test("string"=3D=3Dtypeof a.className&&a.className||typeof =
a.getAttribute!=3D=3DC&&a.getAttribute("class")||"")})},ATTR:function(a,b=
,c){return function(d){var e=3Dfb.attr(d,a);return =
null=3D=3De?"!=3D"=3D=3D=3Db:b?(e+=3D"","=3D"=3D=3D=3Db?e=3D=3D=3Dc:"!=3D=
"=3D=3D=3Db?e!=3D=3Dc:"^=3D"=3D=3D=3Db?c&&0=3D=3D=3De.indexOf(c):"*=3D"=3D=
=3D=3Db?c&&e.indexOf(c)>-1:"$=3D"=3D=3D=3Db?c&&e.slice(-c.length)=3D=3D=3D=
c:"~=3D"=3D=3D=3Db?(" "+e+" =
").indexOf(c)>-1:"|=3D"=3D=3D=3Db?e=3D=3D=3Dc||e.slice(0,c.length+1)=3D=3D=
=3Dc+"-":!1):!0}},CHILD:function(a,b,c,d,e){var =
f=3D"nth"!=3D=3Da.slice(0,3),g=3D"last"!=3D=3Da.slice(-4),h=3D"of-type"=3D=
=3D=3Db;return =
1=3D=3D=3Dd&&0=3D=3D=3De?function(a){return!!a.parentNode}:function(b,c,i=
){var =
j,k,l,m,n,o,p=3Df!=3D=3Dg?"nextSibling":"previousSibling",q=3Db.parentNod=
e,r=3Dh&&b.nodeName.toLowerCase(),s=3D!i&&!h;if(q){if(f){while(p){l=3Db;w=
hile(l=3Dl[p])if(h?l.nodeName.toLowerCase()=3D=3D=3Dr:1=3D=3D=3Dl.nodeTyp=
e)return!1;o=3Dp=3D"only"=3D=3D=3Da&&!o&&"nextSibling"}return!0}if(o=3D[g=
?q.firstChild:q.lastChild],g&&s){k=3Dq[u]||(q[u]=3D{}),j=3Dk[a]||[],n=3Dj=
[0]=3D=3D=3Dw&&j[1],m=3Dj[0]=3D=3D=3Dw&&j[2],l=3Dn&&q.childNodes[n];while=
(l=3D++n&&l&&l[p]||(m=3Dn=3D0)||o.pop())if(1=3D=3D=3Dl.nodeType&&++m&&l=3D=
=3D=3Db){k[a]=3D[w,n,m];break}}else =
if(s&&(j=3D(b[u]||(b[u]=3D{}))[a])&&j[0]=3D=3D=3Dw)m=3Dj[1];else =
while(l=3D++n&&l&&l[p]||(m=3Dn=3D0)||o.pop())if((h?l.nodeName.toLowerCase=
()=3D=3D=3Dr:1=3D=3D=3Dl.nodeType)&&++m&&(s&&((l[u]||(l[u]=3D{}))[a]=3D[w=
,m]),l=3D=3D=3Db))break;return =
m-=3De,m=3D=3D=3Dd||m%d=3D=3D=3D0&&m/d>=3D0}}},PSEUDO:function(a,b){var =
c,e=3Dd.pseudos[a]||d.setFilters[a.toLowerCase()]||fb.error("unsupported =
pseudo: "+a);return =
e[u]?e(b):e.length>1?(c=3D[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowe=
rCase())?hb(function(a,c){var =
d,f=3De(a,b),g=3Df.length;while(g--)d=3DK.call(a,f[g]),a[d]=3D!(c[d]=3Df[=
g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:hb(function(a){var =
b=3D[],c=3D[],d=3Dh(a.replace(R,"$1"));return =
d[u]?hb(function(a,b,c,e){var =
f,g=3Dd(a,null,e,[]),h=3Da.length;while(h--)(f=3Dg[h])&&(a[h]=3D!(b[h]=3D=
f))}):function(a,e,f){return =
b[0]=3Da,d(b,null,f,c),!c.pop()}}),has:hb(function(a){return =
function(b){return fb(a,b).length>0}}),contains:hb(function(a){return =
function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lan=
g:hb(function(a){return W.test(a||"")||fb.error("unsupported lang: =
"+a),a=3Da.replace(cb,db).toLowerCase(),function(b){var c;do =
if(c=3Dp?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return=
 =
c=3Dc.toLowerCase(),c=3D=3D=3Da||0=3D=3D=3Dc.indexOf(a+"-");while((b=3Db.=
parentNode)&&1=3D=3D=3Db.nodeType);return!1}}),target:function(b){var =
c=3Da.location&&a.location.hash;return =
c&&c.slice(1)=3D=3D=3Db.id},root:function(a){return =
a=3D=3D=3Do},focus:function(a){return =
a=3D=3D=3Dn.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href=
||~a.tabIndex)},enabled:function(a){return =
a.disabled=3D=3D=3D!1},disabled:function(a){return =
a.disabled=3D=3D=3D!0},checked:function(a){var =
b=3Da.nodeName.toLowerCase();return"input"=3D=3D=3Db&&!!a.checked||"optio=
n"=3D=3D=3Db&&!!a.selected},selected:function(a){return =
a.parentNode&&a.parentNode.selectedIndex,a.selected=3D=3D=3D!0},empty:fun=
ction(a){for(a=3Da.firstChild;a;a=3Da.nextSibling)if(a.nodeType<6)return!=
1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function=
(a){return Z.test(a.nodeName)},input:function(a){return =
Y.test(a.nodeName)},button:function(a){var =
b=3Da.nodeName.toLowerCase();return"input"=3D=3D=3Db&&"button"=3D=3D=3Da.=
type||"button"=3D=3D=3Db},text:function(a){var =
b;return"input"=3D=3D=3Da.nodeName.toLowerCase()&&"text"=3D=3D=3Da.type&&=
(null=3D=3D(b=3Da.getAttribute("type"))||"text"=3D=3D=3Db.toLowerCase())}=
,first:nb(function(){return[0]}),last:nb(function(a,b){return[b-1]}),eq:n=
b(function(a,b,c){return[0>c?c+b:c]}),even:nb(function(a,b){for(var =
c=3D0;b>c;c+=3D2)a.push(c);return a}),odd:nb(function(a,b){for(var =
c=3D1;b>c;c+=3D2)a.push(c);return a}),lt:nb(function(a,b,c){for(var =
d=3D0>c?c+b:c;--d>=3D0;)a.push(d);return =
a}),gt:nb(function(a,b,c){for(var d=3D0>c?c+b:c;++d<b;)a.push(d);return =
a})}},d.pseudos.nth=3Dd.pseudos.eq;for(b =
in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=3Dlb(b=
);for(b in{submit:!0,reset:!0})d.pseudos[b]=3Dmb(b);function =
pb(){}pb.prototype=3Dd.filters=3Dd.pseudos,d.setFilters=3Dnew =
pb,g=3Dfb.tokenize=3Dfunction(a,b){var c,e,f,g,h,i,j,k=3Dz[a+" =
"];if(k)return =
b?0:k.slice(0);h=3Da,i=3D[],j=3Dd.preFilter;while(h){(!c||(e=3DS.exec(h))=
)&&(e&&(h=3Dh.slice(e[0].length)||h),i.push(f=3D[])),c=3D!1,(e=3DT.exec(h=
))&&(c=3De.shift(),f.push({value:c,type:e[0].replace(R," =
")}),h=3Dh.slice(c.length));for(g in =
d.filter)!(e=3DX[g].exec(h))||j[g]&&!(e=3Dj[g](e))||(c=3De.shift(),f.push=
({value:c,type:g,matches:e}),h=3Dh.slice(c.length));if(!c)break}return =
b?h.length:h?fb.error(a):z(a,i).slice(0)};function qb(a){for(var =
b=3D0,c=3Da.length,d=3D"";c>b;b++)d+=3Da[b].value;return d}function =
rb(a,b,c){var d=3Db.dir,e=3Dc&&"parentNode"=3D=3D=3Dd,f=3Dx++;return =
b.first?function(b,c,f){while(b=3Db[d])if(1=3D=3D=3Db.nodeType||e)return =
a(b,c,f)}:function(b,c,g){var =
h,i,j=3D[w,f];if(g){while(b=3Db[d])if((1=3D=3D=3Db.nodeType||e)&&a(b,c,g)=
)return!0}else =
while(b=3Db[d])if(1=3D=3D=3Db.nodeType||e){if(i=3Db[u]||(b[u]=3D{}),(h=3D=
i[d])&&h[0]=3D=3D=3Dw&&h[1]=3D=3D=3Df)return =
j[2]=3Dh[2];if(i[d]=3Dj,j[2]=3Da(b,c,g))return!0}}}function sb(a){return =
a.length>1?function(b,c,d){var =
e=3Da.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function =
tb(a,b,c){for(var d=3D0,e=3Db.length;e>d;d++)fb(a,b[d],c);return =
c}function ub(a,b,c,d,e){for(var =
f,g=3D[],h=3D0,i=3Da.length,j=3Dnull!=3Db;i>h;h++)(f=3Da[h])&&(!c||c(f,d,=
e))&&(g.push(f),j&&b.push(h));return g}function vb(a,b,c,d,e,f){return =
d&&!d[u]&&(d=3Dvb(d)),e&&!e[u]&&(e=3Dvb(e,f)),hb(function(f,g,h,i){var =
j,k,l,m=3D[],n=3D[],o=3Dg.length,p=3Df||tb(b||"*",h.nodeType?[h]:h,[]),q=3D=
!a||!f&&b?p:ub(p,m,a,h,i),r=3Dc?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){=
j=3Dub(r,n),d(j,[],h,i),k=3Dj.length;while(k--)(l=3Dj[k])&&(r[n[k]]=3D!(q=
[n[k]]=3Dl))}if(f){if(e||a){if(e){j=3D[],k=3Dr.length;while(k--)(l=3Dr[k]=
)&&j.push(q[k]=3Dl);e(null,r=3D[],j,i)}k=3Dr.length;while(k--)(l=3Dr[k])&=
&(j=3De?K.call(f,l):m[k])>-1&&(f[j]=3D!(g[j]=3Dl))}}else =
r=3Dub(r=3D=3D=3Dg?r.splice(o,r.length):r),e?e(null,g,r,i):I.apply(g,r)})=
}function wb(a){for(var =
b,c,e,f=3Da.length,g=3Dd.relative[a[0].type],h=3Dg||d.relative[" =
"],i=3Dg?1:0,k=3Drb(function(a){return =
a=3D=3D=3Db},h,!0),l=3Drb(function(a){return =
K.call(b,a)>-1},h,!0),m=3D[function(a,c,d){return!g&&(d||c!=3D=3Dj)||((b=3D=
c).nodeType?k(a,c,d):l(a,c,d))}];f>i;i++)if(c=3Dd.relative[a[i].type])m=3D=
[rb(sb(m),c)];else{if(c=3Dd.filter[a[i].type].apply(null,a[i].matches),c[=
u]){for(e=3D++i;f>e;e++)if(d.relative[a[e].type])break;return =
vb(i>1&&sb(m),i>1&&qb(a.slice(0,i-1).concat({value:" =
"=3D=3D=3Da[i-2].type?"*":""})).replace(R,"$1"),c,e>i&&wb(a.slice(i,e)),f=
>e&&wb(a=3Da.slice(e)),f>e&&qb(a))}m.push(c)}return sb(m)}function =
xb(a,b){var c=3Db.length>0,e=3Da.length>0,f=3Dfunction(f,g,h,i,k){var =
l,m,o,p=3D0,q=3D"0",r=3Df&&[],s=3D[],t=3Dj,u=3Df||e&&d.find.TAG("*",k),v=3D=
w+=3Dnull=3D=3Dt?1:Math.random()||.1,x=3Du.length;for(k&&(j=3Dg!=3D=3Dn&&=
g);q!=3D=3Dx&&null!=3D(l=3Du[q]);q++){if(e&&l){m=3D0;while(o=3Da[m++])if(=
o(l,g,h)){i.push(l);break}k&&(w=3Dv)}c&&((l=3D!o&&l)&&p--,f&&r.push(l))}i=
f(p+=3Dq,c&&q!=3D=3Dp){m=3D0;while(o=3Db[m++])o(r,s,g,h);if(f){if(p>0)whi=
le(q--)r[q]||s[q]||(s[q]=3DG.call(i));s=3Dub(s)}I.apply(i,s),k&&!f&&s.len=
gth>0&&p+b.length>1&&fb.uniqueSort(i)}return k&&(w=3Dv,j=3Dt),r};return =
c?hb(f):f}return h=3Dfb.compile=3Dfunction(a,b){var =
c,d=3D[],e=3D[],f=3DA[a+" =
"];if(!f){b||(b=3Dg(a)),c=3Db.length;while(c--)f=3Dwb(b[c]),f[u]?d.push(f=
):e.push(f);f=3DA(a,xb(e,d)),f.selector=3Da}return =
f},i=3Dfb.select=3Dfunction(a,b,e,f){var =
i,j,k,l,m,n=3D"function"=3D=3Dtypeof =
a&&a,o=3D!f&&g(a=3Dn.selector||a);if(e=3De||[],1=3D=3D=3Do.length){if(j=3D=
o[0]=3Do[0].slice(0),j.length>2&&"ID"=3D=3D=3D(k=3Dj[0]).type&&c.getById&=
&9=3D=3D=3Db.nodeType&&p&&d.relative[j[1].type]){if(b=3D(d.find.ID(k.matc=
hes[0].replace(cb,db),b)||[])[0],!b)return =
e;n&&(b=3Db.parentNode),a=3Da.slice(j.shift().value.length)}i=3DX.needsCo=
ntext.test(a)?0:j.length;while(i--){if(k=3Dj[i],d.relative[l=3Dk.type])br=
eak;if((m=3Dd.find[l])&&(f=3Dm(k.matches[0].replace(cb,db),ab.test(j[0].t=
ype)&&ob(b.parentNode)||b))){if(j.splice(i,1),a=3Df.length&&qb(j),!a)retu=
rn =
I.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&&ob(b.parent=
Node)||b),e},c.sortStable=3Du.split("").sort(B).join("")=3D=3D=3Du,c.dete=
ctDuplicates=3D!!l,m(),c.sortDetached=3Dib(function(a){return =
1&a.compareDocumentPosition(n.createElement("div"))}),ib(function(a){retu=
rn a.innerHTML=3D"<a =
href=3D'#'></a>","#"=3D=3D=3Da.firstChild.getAttribute("href")})||jb("typ=
e|href|height|width",function(a,b,c){return c?void =
0:a.getAttribute(b,"type"=3D=3D=3Db.toLowerCase()?1:2)}),c.attributes&&ib=
(function(a){return =
a.innerHTML=3D"<input/>",a.firstChild.setAttribute("value",""),""=3D=3D=3D=
a.firstChild.getAttribute("value")})||jb("value",function(a,b,c){return =
c||"input"!=3D=3Da.nodeName.toLowerCase()?void =
0:a.defaultValue}),ib(function(a){return =
null=3D=3Da.getAttribute("disabled")})||jb(L,function(a,b,c){var =
d;return c?void =
0:a[b]=3D=3D=3D!0?b.toLowerCase():(d=3Da.getAttributeNode(b))&&d.specifie=
d?d.value:null}),fb}(a);m.find=3Ds,m.expr=3Ds.selectors,m.expr[":"]=3Dm.e=
xpr.pseudos,m.unique=3Ds.uniqueSort,m.text=3Ds.getText,m.isXMLDoc=3Ds.isX=
ML,m.contains=3Ds.contains;var =
t=3Dm.expr.match.needsContext,u=3D/^<(\w+)\s*\/?>(?:<\/\1>|)$/,v=3D/^.[^:=
#\[\.,]*$/;function w(a,b,c){if(m.isFunction(b))return =
m.grep(a,function(a,d){return!!b.call(a,d,a)!=3D=3Dc});if(b.nodeType)retu=
rn m.grep(a,function(a){return =
a=3D=3D=3Db!=3D=3Dc});if("string"=3D=3Dtypeof b){if(v.test(b))return =
m.filter(b,a,c);b=3Dm.filter(b,a)}return m.grep(a,function(a){return =
m.inArray(a,b)>=3D0!=3D=3Dc})}m.filter=3Dfunction(a,b,c){var =
d=3Db[0];return =
c&&(a=3D":not("+a+")"),1=3D=3D=3Db.length&&1=3D=3D=3Dd.nodeType?m.find.ma=
tchesSelector(d,a)?[d]:[]:m.find.matches(a,m.grep(b,function(a){return =
1=3D=3D=3Da.nodeType}))},m.fn.extend({find:function(a){var =
b,c=3D[],d=3Dthis,e=3Dd.length;if("string"!=3Dtypeof a)return =
this.pushStack(m(a).filter(function(){for(b=3D0;e>b;b++)if(m.contains(d[b=
],this))return!0}));for(b=3D0;e>b;b++)m.find(a,d[b],c);return =
c=3Dthis.pushStack(e>1?m.unique(c):c),c.selector=3Dthis.selector?this.sel=
ector+" "+a:a,c},filter:function(a){return =
this.pushStack(w(this,a||[],!1))},not:function(a){return =
this.pushStack(w(this,a||[],!0))},is:function(a){return!!w(this,"string"=3D=
=3Dtypeof a&&t.test(a)?m(a):a||[],!1).length}});var =
x,y=3Da.document,z=3D/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,A=3Dm.fn.init=3D=
function(a,b){var c,d;if(!a)return this;if("string"=3D=3Dtypeof =
a){if(c=3D"<"=3D=3D=3Da.charAt(0)&&">"=3D=3D=3Da.charAt(a.length-1)&&a.le=
ngth>=3D3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||x).=
find(a):this.constructor(b).find(a);if(c[1]){if(b=3Db instanceof =
m?b[0]:b,m.merge(this,m.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:y=
,!0)),u.test(c[1])&&m.isPlainObject(b))for(c in =
b)m.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return =
this}if(d=3Dy.getElementById(c[2]),d&&d.parentNode){if(d.id!=3D=3Dc[2])re=
turn x.find(a);this.length=3D1,this[0]=3Dd}return =
this.context=3Dy,this.selector=3Da,this}return =
a.nodeType?(this.context=3Dthis[0]=3Da,this.length=3D1,this):m.isFunction=
(a)?"undefined"!=3Dtypeof x.ready?x.ready(a):a(m):(void =
0!=3D=3Da.selector&&(this.selector=3Da.selector,this.context=3Da.context)=
,m.makeArray(a,this))};A.prototype=3Dm.fn,x=3Dm(y);var =
B=3D/^(?:parents|prev(?:Until|All))/,C=3D{children:!0,contents:!0,next:!0=
,prev:!0};m.extend({dir:function(a,b,c){var =
d=3D[],e=3Da[b];while(e&&9!=3D=3De.nodeType&&(void =
0=3D=3D=3Dc||1!=3D=3De.nodeType||!m(e).is(c)))1=3D=3D=3De.nodeType&&d.pus=
h(e),e=3De[b];return d},sibling:function(a,b){for(var =
c=3D[];a;a=3Da.nextSibling)1=3D=3D=3Da.nodeType&&a!=3D=3Db&&c.push(a);ret=
urn c}}),m.fn.extend({has:function(a){var =
b,c=3Dm(a,this),d=3Dc.length;return =
this.filter(function(){for(b=3D0;d>b;b++)if(m.contains(this,c[b]))return!=
0})},closest:function(a,b){for(var =
c,d=3D0,e=3Dthis.length,f=3D[],g=3Dt.test(a)||"string"!=3Dtypeof =
a?m(a,b||this.context):0;e>d;d++)for(c=3Dthis[d];c&&c!=3D=3Db;c=3Dc.paren=
tNode)if(c.nodeType<11&&(g?g.index(c)>-1:1=3D=3D=3Dc.nodeType&&m.find.mat=
chesSelector(c,a))){f.push(c);break}return =
this.pushStack(f.length>1?m.unique(f):f)},index:function(a){return =
a?"string"=3D=3Dtypeof =
a?m.inArray(this[0],m(a)):m.inArray(a.jquery?a[0]:a,this):this[0]&&this[0=
].parentNode?this.first().prevAll().length:-1},add:function(a,b){return =
this.pushStack(m.unique(m.merge(this.get(),m(a,b))))},addBack:function(a)=
{return =
this.add(null=3D=3Da?this.prevObject:this.prevObject.filter(a))}});functi=
on D(a,b){do a=3Da[b];while(a&&1!=3D=3Da.nodeType);return =
a}m.each({parent:function(a){var b=3Da.parentNode;return =
b&&11!=3D=3Db.nodeType?b:null},parents:function(a){return =
m.dir(a,"parentNode")},parentsUntil:function(a,b,c){return =
m.dir(a,"parentNode",c)},next:function(a){return =
D(a,"nextSibling")},prev:function(a){return =
D(a,"previousSibling")},nextAll:function(a){return =
m.dir(a,"nextSibling")},prevAll:function(a){return =
m.dir(a,"previousSibling")},nextUntil:function(a,b,c){return =
m.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return =
m.dir(a,"previousSibling",c)},siblings:function(a){return =
m.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return =
m.sibling(a.firstChild)},contents:function(a){return =
m.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:m.merg=
e([],a.childNodes)}},function(a,b){m.fn[a]=3Dfunction(c,d){var =
e=3Dm.map(this,b,c);return"Until"!=3D=3Da.slice(-5)&&(d=3Dc),d&&"string"=3D=
=3Dtypeof =
d&&(e=3Dm.filter(d,e)),this.length>1&&(C[a]||(e=3Dm.unique(e)),B.test(a)&=
&(e=3De.reverse())),this.pushStack(e)}});var E=3D/\S+/g,F=3D{};function =
G(a){var b=3DF[a]=3D{};return =
m.each(a.match(E)||[],function(a,c){b[c]=3D!0}),b}m.Callbacks=3Dfunction(=
a){a=3D"string"=3D=3Dtypeof a?F[a]||G(a):m.extend({},a);var =
b,c,d,e,f,g,h=3D[],i=3D!a.once&&[],j=3Dfunction(l){for(c=3Da.memory&&l,d=3D=
!0,f=3Dg||0,g=3D0,e=3Dh.length,b=3D!0;h&&e>f;f++)if(h[f].apply(l[0],l[1])=
=3D=3D=3D!1&&a.stopOnFalse){c=3D!1;break}b=3D!1,h&&(i?i.length&&j(i.shift=
()):c?h=3D[]:k.disable())},k=3D{add:function(){if(h){var =
d=3Dh.length;!function f(b){m.each(b,function(b,c){var =
d=3Dm.type(c);"function"=3D=3D=3Dd?a.unique&&k.has(c)||h.push(c):c&&c.len=
gth&&"string"!=3D=3Dd&&f(c)})}(arguments),b?e=3Dh.length:c&&(g=3Dd,j(c))}=
return this},remove:function(){return =
h&&m.each(arguments,function(a,c){var =
d;while((d=3Dm.inArray(c,h,d))>-1)h.splice(d,1),b&&(e>=3Dd&&e--,f>=3Dd&&f=
--)}),this},has:function(a){return =
a?m.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return =
h=3D[],e=3D0,this},disable:function(){return h=3Di=3Dc=3Dvoid =
0,this},disabled:function(){return!h},lock:function(){return i=3Dvoid =
0,c||k.disable(),this},locked:function(){return!i},fireWith:function(a,c)=
{return!h||d&&!i||(c=3Dc||[],c=3D[a,c.slice?c.slice():c],b?i.push(c):j(c)=
),this},fire:function(){return =
k.fireWith(this,arguments),this},fired:function(){return!!d}};return =
k},m.extend({Deferred:function(a){var =
b=3D[["resolve","done",m.Callbacks("once =
memory"),"resolved"],["reject","fail",m.Callbacks("once =
memory"),"rejected"],["notify","progress",m.Callbacks("memory")]],c=3D"pe=
nding",d=3D{state:function(){return c},always:function(){return =
e.done(arguments).fail(arguments),this},then:function(){var =
a=3Darguments;return m.Deferred(function(c){m.each(b,function(b,f){var =
g=3Dm.isFunction(a[b])&&a[b];e[f[1]](function(){var =
a=3Dg&&g.apply(this,arguments);a&&m.isFunction(a.promise)?a.promise().don=
e(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this=3D=3D=3D=
d?c.promise():this,g?[a]:arguments)})}),a=3Dnull}).promise()},promise:fun=
ction(a){return null!=3Da?m.extend(a,d):d}},e=3D{};return =
d.pipe=3Dd.then,m.each(b,function(a,f){var =
g=3Df[2],h=3Df[3];d[f[1]]=3Dg.add,h&&g.add(function(){c=3Dh},b[1^a][2].di=
sable,b[2][2].lock),e[f[0]]=3Dfunction(){return =
e[f[0]+"With"](this=3D=3D=3De?d:this,arguments),this},e[f[0]+"With"]=3Dg.=
fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var =
b=3D0,c=3Dd.call(arguments),e=3Dc.length,f=3D1!=3D=3De||a&&m.isFunction(a=
.promise)?e:0,g=3D1=3D=3D=3Df?a:m.Deferred(),h=3Dfunction(a,b,c){return =
function(e){b[a]=3Dthis,c[a]=3Darguments.length>1?d.call(arguments):e,c=3D=
=3D=3Di?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=3D=
new Array(e),j=3Dnew Array(e),k=3Dnew =
Array(e);e>b;b++)c[b]&&m.isFunction(c[b].promise)?c[b].promise().done(h(b=
,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return =
f||g.resolveWith(k,c),g.promise()}});var =
H;m.fn.ready=3Dfunction(a){return =
m.ready.promise().done(a),this},m.extend({isReady:!1,readyWait:1,holdRead=
y:function(a){a?m.readyWait++:m.ready(!0)},ready:function(a){if(a=3D=3D=3D=
!0?!--m.readyWait:!m.isReady){if(!y.body)return =
setTimeout(m.ready);m.isReady=3D!0,a!=3D=3D!0&&--m.readyWait>0||(H.resolv=
eWith(y,[m]),m.fn.triggerHandler&&(m(y).triggerHandler("ready"),m(y).off(=
"ready")))}}});function =
I(){y.addEventListener?(y.removeEventListener("DOMContentLoaded",J,!1),a.=
removeEventListener("load",J,!1)):(y.detachEvent("onreadystatechange",J),=
a.detachEvent("onload",J))}function =
J(){(y.addEventListener||"load"=3D=3D=3Devent.type||"complete"=3D=3D=3Dy.=
readyState)&&(I(),m.ready())}m.ready.promise=3Dfunction(b){if(!H)if(H=3Dm=
.Deferred(),"complete"=3D=3D=3Dy.readyState)setTimeout(m.ready);else =
if(y.addEventListener)y.addEventListener("DOMContentLoaded",J,!1),a.addEv=
entListener("load",J,!1);else{y.attachEvent("onreadystatechange",J),a.att=
achEvent("onload",J);var =
c=3D!1;try{c=3Dnull=3D=3Da.frameElement&&y.documentElement}catch(d){}c&&c=
.doScroll&&!function =
e(){if(!m.isReady){try{c.doScroll("left")}catch(a){return =
setTimeout(e,50)}I(),m.ready()}}()}return H.promise(b)};var =
K=3D"undefined",L;for(L in =
m(k))break;k.ownLast=3D"0"!=3D=3DL,k.inlineBlockNeedsLayout=3D!1,m(functi=
on(){var =
a,b,c,d;c=3Dy.getElementsByTagName("body")[0],c&&c.style&&(b=3Dy.createEl=
ement("div"),d=3Dy.createElement("div"),d.style.cssText=3D"position:absol=
ute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).append=
Child(b),typeof =
b.style.zoom!=3D=3DK&&(b.style.cssText=3D"display:inline;margin:0;border:=
0;padding:1px;width:1px;zoom:1",k.inlineBlockNeedsLayout=3Da=3D3=3D=3D=3D=
b.offsetWidth,a&&(c.style.zoom=3D1)),c.removeChild(d))}),function(){var =
a=3Dy.createElement("div");if(null=3D=3Dk.deleteExpando){k.deleteExpando=3D=
!0;try{delete =
a.test}catch(b){k.deleteExpando=3D!1}}a=3Dnull}(),m.acceptData=3Dfunction=
(a){var b=3Dm.noData[(a.nodeName+" =
").toLowerCase()],c=3D+a.nodeType||1;return =
1!=3D=3Dc&&9!=3D=3Dc?!1:!b||b!=3D=3D!0&&a.getAttribute("classid")=3D=3D=3D=
b};var M=3D/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,N=3D/([A-Z])/g;function =
O(a,b,c){if(void 0=3D=3D=3Dc&&1=3D=3D=3Da.nodeType){var =
d=3D"data-"+b.replace(N,"-$1").toLowerCase();if(c=3Da.getAttribute(d),"st=
ring"=3D=3Dtypeof =
c){try{c=3D"true"=3D=3D=3Dc?!0:"false"=3D=3D=3Dc?!1:"null"=3D=3D=3Dc?null=
:+c+""=3D=3D=3Dc?+c:M.test(c)?m.parseJSON(c):c}catch(e){}m.data(a,b,c)}el=
se c=3Dvoid 0}return c}function P(a){var b;for(b in =
a)if(("data"!=3D=3Db||!m.isEmptyObject(a[b]))&&"toJSON"!=3D=3Db)return!1;=
return!0}function Q(a,b,d,e){if(m.acceptData(a)){var =
f,g,h=3Dm.expando,i=3Da.nodeType,j=3Di?m.cache:a,k=3Di?a[h]:a[h]&&h;
if(k&&j[k]&&(e||j[k].data)||void 0!=3D=3Dd||"string"!=3Dtypeof b)return =
k||(k=3Di?a[h]=3Dc.pop()||m.guid++:h),j[k]||(j[k]=3Di?{}:{toJSON:m.noop})=
,("object"=3D=3Dtypeof b||"function"=3D=3Dtypeof =
b)&&(e?j[k]=3Dm.extend(j[k],b):j[k].data=3Dm.extend(j[k].data,b)),g=3Dj[k=
],e||(g.data||(g.data=3D{}),g=3Dg.data),void =
0!=3D=3Dd&&(g[m.camelCase(b)]=3Dd),"string"=3D=3Dtypeof =
b?(f=3Dg[b],null=3D=3Df&&(f=3Dg[m.camelCase(b)])):f=3Dg,f}}function =
R(a,b,c){if(m.acceptData(a)){var =
d,e,f=3Da.nodeType,g=3Df?m.cache:a,h=3Df?a[m.expando]:m.expando;if(g[h]){=
if(b&&(d=3Dc?g[h]:g[h].data)){m.isArray(b)?b=3Db.concat(m.map(b,m.camelCa=
se)):b in d?b=3D[b]:(b=3Dm.camelCase(b),b=3Db in d?[b]:b.split(" =
")),e=3Db.length;while(e--)delete =
d[b[e]];if(c?!P(d):!m.isEmptyObject(d))return}(c||(delete =
g[h].data,P(g[h])))&&(f?m.cleanData([a],!0):k.deleteExpando||g!=3Dg.windo=
w?delete g[h]:g[h]=3Dnull)}}}m.extend({cache:{},noData:{"applet =
":!0,"embed ":!0,"object =
":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(a){retur=
n =
a=3Da.nodeType?m.cache[a[m.expando]]:a[m.expando],!!a&&!P(a)},data:functi=
on(a,b,c){return Q(a,b,c)},removeData:function(a,b){return =
R(a,b)},_data:function(a,b,c){return =
Q(a,b,c,!0)},_removeData:function(a,b){return =
R(a,b,!0)}}),m.fn.extend({data:function(a,b){var =
c,d,e,f=3Dthis[0],g=3Df&&f.attributes;if(void =
0=3D=3D=3Da){if(this.length&&(e=3Dm.data(f),1=3D=3D=3Df.nodeType&&!m._dat=
a(f,"parsedAttrs"))){c=3Dg.length;while(c--)g[c]&&(d=3Dg[c].name,0=3D=3D=3D=
d.indexOf("data-")&&(d=3Dm.camelCase(d.slice(5)),O(f,d,e[d])));m._data(f,=
"parsedAttrs",!0)}return e}return"object"=3D=3Dtypeof =
a?this.each(function(){m.data(this,a)}):arguments.length>1?this.each(func=
tion(){m.data(this,a,b)}):f?O(f,a,m.data(f,a)):void =
0},removeData:function(a){return =
this.each(function(){m.removeData(this,a)})}}),m.extend({queue:function(a=
,b,c){var d;return =
a?(b=3D(b||"fx")+"queue",d=3Dm._data(a,b),c&&(!d||m.isArray(c)?d=3Dm._dat=
a(a,b,m.makeArray(c)):d.push(c)),d||[]):void =
0},dequeue:function(a,b){b=3Db||"fx";var =
c=3Dm.queue(a,b),d=3Dc.length,e=3Dc.shift(),f=3Dm._queueHooks(a,b),g=3Dfu=
nction(){m.dequeue(a,b)};"inprogress"=3D=3D=3De&&(e=3Dc.shift(),d--),e&&(=
"fx"=3D=3D=3Db&&c.unshift("inprogress"),delete =
f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){va=
r c=3Db+"queueHooks";return =
m._data(a,c)||m._data(a,c,{empty:m.Callbacks("once =
memory").add(function(){m._removeData(a,b+"queue"),m._removeData(a,c)})})=
}}),m.fn.extend({queue:function(a,b){var c=3D2;return"string"!=3Dtypeof =
a&&(b=3Da,a=3D"fx",c--),arguments.length<c?m.queue(this[0],a):void =
0=3D=3D=3Db?this:this.each(function(){var =
c=3Dm.queue(this,a,b);m._queueHooks(this,a),"fx"=3D=3D=3Da&&"inprogress"!=
=3D=3Dc[0]&&m.dequeue(this,a)})},dequeue:function(a){return =
this.each(function(){m.dequeue(this,a)})},clearQueue:function(a){return =
this.queue(a||"fx",[])},promise:function(a,b){var =
c,d=3D1,e=3Dm.Deferred(),f=3Dthis,g=3Dthis.length,h=3Dfunction(){--d||e.r=
esolveWith(f,[f])};"string"!=3Dtypeof a&&(b=3Da,a=3Dvoid =
0),a=3Da||"fx";while(g--)c=3Dm._data(f[g],a+"queueHooks"),c&&c.empty&&(d+=
+,c.empty.add(h));return h(),e.promise(b)}});var =
S=3D/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,T=3D["Top","Right","Bott=
om","Left"],U=3Dfunction(a,b){return =
a=3Db||a,"none"=3D=3D=3Dm.css(a,"display")||!m.contains(a.ownerDocument,a=
)},V=3Dm.access=3Dfunction(a,b,c,d,e,f,g){var =
h=3D0,i=3Da.length,j=3Dnull=3D=3Dc;if("object"=3D=3D=3Dm.type(c)){e=3D!0;=
for(h in c)m.access(a,b,h,c[h],!0,f,g)}else if(void =
0!=3D=3Dd&&(e=3D!0,m.isFunction(d)||(g=3D!0),j&&(g?(b.call(a,d),b=3Dnull)=
:(j=3Db,b=3Dfunction(a,b,c){return =
j.call(m(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));=
return =
e?a:j?b.call(a):i?b(a[0],c):f},W=3D/^(?:checkbox|radio)$/i;!function(){va=
r =
a=3Dy.createElement("input"),b=3Dy.createElement("div"),c=3Dy.createDocum=
entFragment();if(b.innerHTML=3D"  <link/><table></table><a =
href=3D'/a'>a</a><input =
type=3D'checkbox'/>",k.leadingWhitespace=3D3=3D=3D=3Db.firstChild.nodeTyp=
e,k.tbody=3D!b.getElementsByTagName("tbody").length,k.htmlSerialize=3D!!b=
.getElementsByTagName("link").length,k.html5Clone=3D"<:nav></:nav>"!=3D=3D=
y.createElement("nav").cloneNode(!0).outerHTML,a.type=3D"checkbox",a.chec=
ked=3D!0,c.appendChild(a),k.appendChecked=3Da.checked,b.innerHTML=3D"<tex=
tarea>x</textarea>",k.noCloneChecked=3D!!b.cloneNode(!0).lastChild.defaul=
tValue,c.appendChild(b),b.innerHTML=3D"<input type=3D'radio' =
checked=3D'checked' =
name=3D't'/>",k.checkClone=3Db.cloneNode(!0).cloneNode(!0).lastChild.chec=
ked,k.noCloneEvent=3D!0,b.attachEvent&&(b.attachEvent("onclick",function(=
){k.noCloneEvent=3D!1}),b.cloneNode(!0).click()),null=3D=3Dk.deleteExpand=
o){k.deleteExpando=3D!0;try{delete =
b.test}catch(d){k.deleteExpando=3D!1}}}(),function(){var =
b,c,d=3Dy.createElement("div");for(b =
in{submit:!0,change:!0,focusin:!0})c=3D"on"+b,(k[b+"Bubbles"]=3Dc in =
a)||(d.setAttribute(c,"t"),k[b+"Bubbles"]=3Dd.attributes[c].expando=3D=3D=
=3D!1);d=3Dnull}();var =
X=3D/^(?:input|select|textarea)$/i,Y=3D/^key/,Z=3D/^(?:mouse|pointer|cont=
extmenu)|click/,$=3D/^(?:focusinfocus|focusoutblur)$/,_=3D/^([^.]*)(?:\.(=
.+)|)$/;function ab(){return!0}function bb(){return!1}function =
cb(){try{return =
y.activeElement}catch(a){}}m.event=3D{global:{},add:function(a,b,c,d,e){v=
ar =
f,g,h,i,j,k,l,n,o,p,q,r=3Dm._data(a);if(r){c.handler&&(i=3Dc,c=3Di.handle=
r,e=3Di.selector),c.guid||(c.guid=3Dm.guid++),(g=3Dr.events)||(g=3Dr.even=
ts=3D{}),(k=3Dr.handle)||(k=3Dr.handle=3Dfunction(a){return typeof =
m=3D=3D=3DK||a&&m.event.triggered=3D=3D=3Da.type?void =
0:m.event.dispatch.apply(k.elem,arguments)},k.elem=3Da),b=3D(b||"").match=
(E)||[""],h=3Db.length;while(h--)f=3D_.exec(b[h])||[],o=3Dq=3Df[1],p=3D(f=
[2]||"").split(".").sort(),o&&(j=3Dm.event.special[o]||{},o=3D(e?j.delega=
teType:j.bindType)||o,j=3Dm.event.special[o]||{},l=3Dm.extend({type:o,ori=
gType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&m.expr.ma=
tch.needsContext.test(e),namespace:p.join(".")},i),(n=3Dg[o])||(n=3Dg[o]=3D=
[],n.delegateCount=3D0,j.setup&&j.setup.call(a,d,p,k)!=3D=3D!1||(a.addEve=
ntListener?a.addEventListener(o,k,!1):a.attachEvent&&a.attachEvent("on"+o=
,k))),j.add&&(j.add.call(a,l),l.handler.guid||(l.handler.guid=3Dc.guid)),=
e?n.splice(n.delegateCount++,0,l):n.push(l),m.event.global[o]=3D!0);a=3Dn=
ull}},remove:function(a,b,c,d,e){var =
f,g,h,i,j,k,l,n,o,p,q,r=3Dm.hasData(a)&&m._data(a);if(r&&(k=3Dr.events)){=
b=3D(b||"").match(E)||[""],j=3Db.length;while(j--)if(h=3D_.exec(b[j])||[]=
,o=3Dq=3Dh[1],p=3D(h[2]||"").split(".").sort(),o){l=3Dm.event.special[o]|=
|{},o=3D(d?l.delegateType:l.bindType)||o,n=3Dk[o]||[],h=3Dh[2]&&new =
RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),i=3Df=3Dn.length;whil=
e(f--)g=3Dn[f],!e&&q!=3D=3Dg.origType||c&&c.guid!=3D=3Dg.guid||h&&!h.test=
(g.namespace)||d&&d!=3D=3Dg.selector&&("**"!=3D=3Dd||!g.selector)||(n.spl=
ice(f,1),g.selector&&n.delegateCount--,l.remove&&l.remove.call(a,g));i&&!=
n.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!=3D=3D!1||m.removeEv=
ent(a,o,r.handle),delete k[o])}else for(o in =
k)m.event.remove(a,o+b[j],c,d,!0);m.isEmptyObject(k)&&(delete =
r.handle,m._removeData(a,"events"))}},trigger:function(b,c,d,e){var =
f,g,h,i,k,l,n,o=3D[d||y],p=3Dj.call(b,"type")?b.type:b,q=3Dj.call(b,"name=
space")?b.namespace.split("."):[];if(h=3Dl=3Dd=3Dd||y,3!=3D=3Dd.nodeType&=
&8!=3D=3Dd.nodeType&&!$.test(p+m.event.triggered)&&(p.indexOf(".")>=3D0&&=
(q=3Dp.split("."),p=3Dq.shift(),q.sort()),g=3Dp.indexOf(":")<0&&"on"+p,b=3D=
b[m.expando]?b:new m.Event(p,"object"=3D=3Dtypeof =
b&&b),b.isTrigger=3De?2:3,b.namespace=3Dq.join("."),b.namespace_re=3Db.na=
mespace?new =
RegExp("(^|\\.)"+q.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=3Dvoid =
0,b.target||(b.target=3Dd),c=3Dnull=3D=3Dc?[b]:m.makeArray(c,[b]),k=3Dm.e=
vent.special[p]||{},e||!k.trigger||k.trigger.apply(d,c)!=3D=3D!1)){if(!e&=
&!k.noBubble&&!m.isWindow(d)){for(i=3Dk.delegateType||p,$.test(i+p)||(h=3D=
h.parentNode);h;h=3Dh.parentNode)o.push(h),l=3Dh;l=3D=3D=3D(d.ownerDocume=
nt||y)&&o.push(l.defaultView||l.parentWindow||a)}n=3D0;while((h=3Do[n++])=
&&!b.isPropagationStopped())b.type=3Dn>1?i:k.bindType||p,f=3D(m._data(h,"=
events")||{})[b.type]&&m._data(h,"handle"),f&&f.apply(h,c),f=3Dg&&h[g],f&=
&f.apply&&m.acceptData(h)&&(b.result=3Df.apply(h,c),b.result=3D=3D=3D!1&&=
b.preventDefault());if(b.type=3Dp,!e&&!b.isDefaultPrevented()&&(!k._defau=
lt||k._default.apply(o.pop(),c)=3D=3D=3D!1)&&m.acceptData(d)&&g&&d[p]&&!m=
.isWindow(d)){l=3Dd[g],l&&(d[g]=3Dnull),m.event.triggered=3Dp;try{d[p]()}=
catch(r){}m.event.triggered=3Dvoid 0,l&&(d[g]=3Dl)}return =
b.result}},dispatch:function(a){a=3Dm.event.fix(a);var =
b,c,e,f,g,h=3D[],i=3Dd.call(arguments),j=3D(m._data(this,"events")||{})[a=
.type]||[],k=3Dm.event.special[a.type]||{};if(i[0]=3Da,a.delegateTarget=3D=
this,!k.preDispatch||k.preDispatch.call(this,a)!=3D=3D!1){h=3Dm.event.han=
dlers.call(this,a,j),b=3D0;while((f=3Dh[b++])&&!a.isPropagationStopped())=
{a.currentTarget=3Df.elem,g=3D0;while((e=3Df.handlers[g++])&&!a.isImmedia=
tePropagationStopped())(!a.namespace_re||a.namespace_re.test(e.namespace)=
)&&(a.handleObj=3De,a.data=3De.data,c=3D((m.event.special[e.origType]||{}=
).handle||e.handler).apply(f.elem,i),void =
0!=3D=3Dc&&(a.result=3Dc)=3D=3D=3D!1&&(a.preventDefault(),a.stopPropagati=
on()))}return =
k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(=
a,b){var =
c,d,e,f,g=3D[],h=3Db.delegateCount,i=3Da.target;if(h&&i.nodeType&&(!a.but=
ton||"click"!=3D=3Da.type))for(;i!=3Dthis;i=3Di.parentNode||this)if(1=3D=3D=
=3Di.nodeType&&(i.disabled!=3D=3D!0||"click"!=3D=3Da.type)){for(e=3D[],f=3D=
0;h>f;f++)d=3Db[f],c=3Dd.selector+" ",void =
0=3D=3D=3De[c]&&(e[c]=3Dd.needsContext?m(c,this).index(i)>=3D0:m.find(c,t=
his,null,[i]).length),e[c]&&e.push(d);e.length&&g.push({elem:i,handlers:e=
})}return =
h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},fix:function(a){if=
(a[m.expando])return a;var =
b,c,d,e=3Da.type,f=3Da,g=3Dthis.fixHooks[e];g||(this.fixHooks[e]=3Dg=3DZ.=
test(e)?this.mouseHooks:Y.test(e)?this.keyHooks:{}),d=3Dg.props?this.prop=
s.concat(g.props):this.props,a=3Dnew =
m.Event(f),b=3Dd.length;while(b--)c=3Dd[b],a[c]=3Df[c];return =
a.target||(a.target=3Df.srcElement||y),3=3D=3D=3Da.target.nodeType&&(a.ta=
rget=3Da.target.parentNode),a.metaKey=3D!!a.metaKey,g.filter?g.filter(a,f=
):a},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase =
metaKey relatedTarget shiftKey target timeStamp view which".split(" =
"),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" =
"),filter:function(a,b){return =
null=3D=3Da.which&&(a.which=3Dnull!=3Db.charCode?b.charCode:b.keyCode),a}=
},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX =
offsetY pageX pageY screenX screenY toElement".split(" =
"),filter:function(a,b){var c,d,e,f=3Db.button,g=3Db.fromElement;return =
null=3D=3Da.pageX&&null!=3Db.clientX&&(d=3Da.target.ownerDocument||y,e=3D=
d.documentElement,c=3Dd.body,a.pageX=3Db.clientX+(e&&e.scrollLeft||c&&c.s=
crollLeft||0)-(e&&e.clientLeft||c&&c.clientLeft||0),a.pageY=3Db.clientY+(=
e&&e.scrollTop||c&&c.scrollTop||0)-(e&&e.clientTop||c&&c.clientTop||0)),!=
a.relatedTarget&&g&&(a.relatedTarget=3Dg=3D=3D=3Da.target?b.toElement:g),=
a.which||void =
0=3D=3D=3Df||(a.which=3D1&f?1:2&f?3:4&f?2:0),a}},special:{load:{noBubble:=
!0},focus:{trigger:function(){if(this!=3D=3Dcb()&&this.focus)try{return =
this.focus(),!1}catch(a){}},delegateType:"focusin"},blur:{trigger:functio=
n(){return this=3D=3D=3Dcb()&&this.blur?(this.blur(),!1):void =
0},delegateType:"focusout"},click:{trigger:function(){return =
m.nodeName(this,"input")&&"checkbox"=3D=3D=3Dthis.type&&this.click?(this.=
click(),!1):void 0},_default:function(a){return =
m.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void =
0!=3D=3Da.result&&a.originalEvent&&(a.originalEvent.returnValue=3Da.resul=
t)}}},simulate:function(a,b,c,d){var e=3Dm.extend(new =
m.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?m.event.trigger(e,n=
ull,b):m.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefaul=
t()}},m.removeEvent=3Dy.removeEventListener?function(a,b,c){a.removeEvent=
Listener&&a.removeEventListener(b,c,!1)}:function(a,b,c){var =
d=3D"on"+b;a.detachEvent&&(typeof =
a[d]=3D=3D=3DK&&(a[d]=3Dnull),a.detachEvent(d,c))},m.Event=3Dfunction(a,b=
){return this instanceof =
m.Event?(a&&a.type?(this.originalEvent=3Da,this.type=3Da.type,this.isDefa=
ultPrevented=3Da.defaultPrevented||void =
0=3D=3D=3Da.defaultPrevented&&a.returnValue=3D=3D=3D!1?ab:bb):this.type=3D=
a,b&&m.extend(this,b),this.timeStamp=3Da&&a.timeStamp||m.now(),void(this[=
m.expando]=3D!0)):new =
m.Event(a,b)},m.Event.prototype=3D{isDefaultPrevented:bb,isPropagationSto=
pped:bb,isImmediatePropagationStopped:bb,preventDefault:function(){var =
a=3Dthis.originalEvent;this.isDefaultPrevented=3Dab,a&&(a.preventDefault?=
a.preventDefault():a.returnValue=3D!1)},stopPropagation:function(){var =
a=3Dthis.originalEvent;this.isPropagationStopped=3Dab,a&&(a.stopPropagati=
on&&a.stopPropagation(),a.cancelBubble=3D!0)},stopImmediatePropagation:fu=
nction(){var =
a=3Dthis.originalEvent;this.isImmediatePropagationStopped=3Dab,a&&a.stopI=
mmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}=
},m.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"poin=
terover",pointerleave:"pointerout"},function(a,b){m.event.special[a]=3D{d=
elegateType:b,bindType:b,handle:function(a){var =
c,d=3Dthis,e=3Da.relatedTarget,f=3Da.handleObj;return(!e||e!=3D=3Dd&&!m.c=
ontains(d,e))&&(a.type=3Df.origType,c=3Df.handler.apply(this,arguments),a=
.type=3Db),c}}}),k.submitBubbles||(m.event.special.submit=3D{setup:functi=
on(){return m.nodeName(this,"form")?!1:void =
m.event.add(this,"click._submit keypress._submit",function(a){var =
b=3Da.target,c=3Dm.nodeName(b,"input")||m.nodeName(b,"button")?b.form:voi=
d =
0;c&&!m._data(c,"submitBubbles")&&(m.event.add(c,"submit._submit",functio=
n(a){a._submit_bubble=3D!0}),m._data(c,"submitBubbles",!0))})},postDispat=
ch:function(a){a._submit_bubble&&(delete =
a._submit_bubble,this.parentNode&&!a.isTrigger&&m.event.simulate("submit"=
,this.parentNode,a,!0))},teardown:function(){return =
m.nodeName(this,"form")?!1:void =
m.event.remove(this,"._submit")}}),k.changeBubbles||(m.event.special.chan=
ge=3D{setup:function(){return =
X.test(this.nodeName)?(("checkbox"=3D=3D=3Dthis.type||"radio"=3D=3D=3Dthi=
s.type)&&(m.event.add(this,"propertychange._change",function(a){"checked"=
=3D=3D=3Da.originalEvent.propertyName&&(this._just_changed=3D!0)}),m.even=
t.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&=
(this._just_changed=3D!1),m.event.simulate("change",this,a,!0)})),!1):voi=
d m.event.add(this,"beforeactivate._change",function(a){var =
b=3Da.target;X.test(b.nodeName)&&!m._data(b,"changeBubbles")&&(m.event.ad=
d(b,"change._change",function(a){!this.parentNode||a.isSimulated||a.isTri=
gger||m.event.simulate("change",this.parentNode,a,!0)}),m._data(b,"change=
Bubbles",!0))})},handle:function(a){var b=3Da.target;return =
this!=3D=3Db||a.isSimulated||a.isTrigger||"radio"!=3D=3Db.type&&"checkbox=
"!=3D=3Db.type?a.handleObj.handler.apply(this,arguments):void =
0},teardown:function(){return =
m.event.remove(this,"._change"),!X.test(this.nodeName)}}),k.focusinBubble=
s||m.each({focus:"focusin",blur:"focusout"},function(a,b){var =
c=3Dfunction(a){m.event.simulate(b,a.target,m.event.fix(a),!0)};m.event.s=
pecial[b]=3D{setup:function(){var =
d=3Dthis.ownerDocument||this,e=3Dm._data(d,b);e||d.addEventListener(a,c,!=
0),m._data(d,b,(e||0)+1)},teardown:function(){var =
d=3Dthis.ownerDocument||this,e=3Dm._data(d,b)-1;e?m._data(d,b,e):(d.remov=
eEventListener(a,c,!0),m._removeData(d,b))}}}),m.fn.extend({on:function(a=
,b,c,d,e){var f,g;if("object"=3D=3Dtypeof a){"string"!=3Dtypeof =
b&&(c=3Dc||b,b=3Dvoid 0);for(f in a)this.on(f,b,c,a[f],e);return =
this}if(null=3D=3Dc&&null=3D=3Dd?(d=3Db,c=3Db=3Dvoid =
0):null=3D=3Dd&&("string"=3D=3Dtypeof b?(d=3Dc,c=3Dvoid =
0):(d=3Dc,c=3Db,b=3Dvoid 0)),d=3D=3D=3D!1)d=3Dbb;else if(!d)return =
this;return 1=3D=3D=3De&&(g=3Dd,d=3Dfunction(a){return =
m().off(a),g.apply(this,arguments)},d.guid=3Dg.guid||(g.guid=3Dm.guid++))=
,this.each(function(){m.event.add(this,a,d,c,b)})},one:function(a,b,c,d){=
return this.on(a,b,c,d,1)},off:function(a,b,c){var =
d,e;if(a&&a.preventDefault&&a.handleObj)return =
d=3Da.handleObj,m(a.delegateTarget).off(d.namespace?d.origType+"."+d.name=
space:d.origType,d.selector,d.handler),this;if("object"=3D=3Dtypeof =
a){for(e in a)this.off(e,b,a[e]);return =
this}return(b=3D=3D=3D!1||"function"=3D=3Dtypeof b)&&(c=3Db,b=3Dvoid =
0),c=3D=3D=3D!1&&(c=3Dbb),this.each(function(){m.event.remove(this,a,c,b)=
})},trigger:function(a,b){return =
this.each(function(){m.event.trigger(a,b,this)})},triggerHandler:function=
(a,b){var c=3Dthis[0];return c?m.event.trigger(a,b,c,!0):void =
0}});function db(a){var =
b=3Deb.split("|"),c=3Da.createDocumentFragment();if(c.createElement)while=
(b.length)c.createElement(b.pop());return c}var =
eb=3D"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaptio=
n|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summ=
ary|time|video",fb=3D/ jQuery\d+=3D"(?:null|\d+)"/g,gb=3Dnew =
RegExp("<(?:"+eb+")[\\s/>]","i"),hb=3D/^\s+/,ib=3D/<(?!area|br|col|embed|=
hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,jb=3D/<([\w:]+)/,kb=3D=
/<tbody/i,lb=3D/<|&#?\w+;/,mb=3D/<(?:script|style|link)/i,nb=3D/checked\s=
*(?:[^=3D]|=3D\s*.checked.)/i,ob=3D/^$|\/(?:java|ecma)script/i,pb=3D/^tru=
e\/(.*)/,qb=3D/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,rb=3D{option:[1,=
"<select =
multiple=3D'multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"=
],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<t=
able>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<ta=
ble><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbod=
y><tr>","</tr></tbody></table>"],_default:k.htmlSerialize?[0,"",""]:[1,"X=
<div>","</div>"]},sb=3Ddb(y),tb=3Dsb.appendChild(y.createElement("div"));=
rb.optgroup=3Drb.option,rb.tbody=3Drb.tfoot=3Drb.colgroup=3Drb.caption=3D=
rb.thead,rb.th=3Drb.td;function ub(a,b){var c,d,e=3D0,f=3Dtypeof =
a.getElementsByTagName!=3D=3DK?a.getElementsByTagName(b||"*"):typeof =
a.querySelectorAll!=3D=3DK?a.querySelectorAll(b||"*"):void =
0;if(!f)for(f=3D[],c=3Da.childNodes||a;null!=3D(d=3Dc[e]);e++)!b||m.nodeN=
ame(d,b)?f.push(d):m.merge(f,ub(d,b));return void =
0=3D=3D=3Db||b&&m.nodeName(a,b)?m.merge([a],f):f}function =
vb(a){W.test(a.type)&&(a.defaultChecked=3Da.checked)}function =
wb(a,b){return =
m.nodeName(a,"table")&&m.nodeName(11!=3D=3Db.nodeType?b:b.firstChild,"tr"=
)?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.creat=
eElement("tbody")):a}function xb(a){return =
a.type=3D(null!=3D=3Dm.find.attr(a,"type"))+"/"+a.type,a}function =
yb(a){var b=3Dpb.exec(a.type);return =
b?a.type=3Db[1]:a.removeAttribute("type"),a}function zb(a,b){for(var =
c,d=3D0;null!=3D(c=3Da[d]);d++)m._data(c,"globalEval",!b||m._data(b[d],"g=
lobalEval"))}function Ab(a,b){if(1=3D=3D=3Db.nodeType&&m.hasData(a)){var =
c,d,e,f=3Dm._data(a),g=3Dm._data(b,f),h=3Df.events;if(h){delete =
g.handle,g.events=3D{};for(c in =
h)for(d=3D0,e=3Dh[c].length;e>d;d++)m.event.add(b,c,h[c][d])}g.data&&(g.d=
ata=3Dm.extend({},g.data))}}function Bb(a,b){var =
c,d,e;if(1=3D=3D=3Db.nodeType){if(c=3Db.nodeName.toLowerCase(),!k.noClone=
Event&&b[m.expando]){e=3Dm._data(b);for(d in =
e.events)m.removeEvent(b,d,e.handle);b.removeAttribute(m.expando)}"script=
"=3D=3D=3Dc&&b.text!=3D=3Da.text?(xb(b).text=3Da.text,yb(b)):"object"=3D=3D=
=3Dc?(b.parentNode&&(b.outerHTML=3Da.outerHTML),k.html5Clone&&a.innerHTML=
&&!m.trim(b.innerHTML)&&(b.innerHTML=3Da.innerHTML)):"input"=3D=3D=3Dc&&W=
.test(a.type)?(b.defaultChecked=3Db.checked=3Da.checked,b.value!=3D=3Da.v=
alue&&(b.value=3Da.value)):"option"=3D=3D=3Dc?b.defaultSelected=3Db.selec=
ted=3Da.defaultSelected:("input"=3D=3D=3Dc||"textarea"=3D=3D=3Dc)&&(b.def=
aultValue=3Da.defaultValue)}}m.extend({clone:function(a,b,c){var =
d,e,f,g,h,i=3Dm.contains(a.ownerDocument,a);if(k.html5Clone||m.isXMLDoc(a=
)||!gb.test("<"+a.nodeName+">")?f=3Da.cloneNode(!0):(tb.innerHTML=3Da.out=
erHTML,tb.removeChild(f=3Dtb.firstChild)),!(k.noCloneEvent&&k.noCloneChec=
ked||1!=3D=3Da.nodeType&&11!=3D=3Da.nodeType||m.isXMLDoc(a)))for(d=3Dub(f=
),h=3Dub(a),g=3D0;null!=3D(e=3Dh[g]);++g)d[g]&&Bb(e,d[g]);if(b)if(c)for(h=
=3Dh||ub(a),d=3Dd||ub(f),g=3D0;null!=3D(e=3Dh[g]);g++)Ab(e,d[g]);else =
Ab(a,f);return =
d=3Dub(f,"script"),d.length>0&&zb(d,!i&&ub(a,"script")),d=3Dh=3De=3Dnull,=
f},buildFragment:function(a,b,c,d){for(var =
e,f,g,h,i,j,l,n=3Da.length,o=3Ddb(b),p=3D[],q=3D0;n>q;q++)if(f=3Da[q],f||=
0=3D=3D=3Df)if("object"=3D=3D=3Dm.type(f))m.merge(p,f.nodeType?[f]:f);els=
e =
if(lb.test(f)){h=3Dh||o.appendChild(b.createElement("div")),i=3D(jb.exec(=
f)||["",""])[1].toLowerCase(),l=3Drb[i]||rb._default,h.innerHTML=3Dl[1]+f=
.replace(ib,"<$1></$2>")+l[2],e=3Dl[0];while(e--)h=3Dh.lastChild;if(!k.le=
adingWhitespace&&hb.test(f)&&p.push(b.createTextNode(hb.exec(f)[0])),!k.t=
body){f=3D"table"!=3D=3Di||kb.test(f)?"<table>"!=3D=3Dl[1]||kb.test(f)?0:=
h:h.firstChild,e=3Df&&f.childNodes.length;while(e--)m.nodeName(j=3Df.chil=
dNodes[e],"tbody")&&!j.childNodes.length&&f.removeChild(j)}m.merge(p,h.ch=
ildNodes),h.textContent=3D"";while(h.firstChild)h.removeChild(h.firstChil=
d);h=3Do.lastChild}else =
p.push(b.createTextNode(f));h&&o.removeChild(h),k.appendChecked||m.grep(u=
b(p,"input"),vb),q=3D0;while(f=3Dp[q++])if((!d||-1=3D=3D=3Dm.inArray(f,d)=
)&&(g=3Dm.contains(f.ownerDocument,f),h=3Dub(o.appendChild(f),"script"),g=
&&zb(h),c)){e=3D0;while(f=3Dh[e++])ob.test(f.type||"")&&c.push(f)}return =
h=3Dnull,o},cleanData:function(a,b){for(var =
d,e,f,g,h=3D0,i=3Dm.expando,j=3Dm.cache,l=3Dk.deleteExpando,n=3Dm.event.s=
pecial;null!=3D(d=3Da[h]);h++)if((b||m.acceptData(d))&&(f=3Dd[i],g=3Df&&j=
[f])){if(g.events)for(e in =
g.events)n[e]?m.event.remove(d,e):m.removeEvent(d,e,g.handle);j[f]&&(dele=
te j[f],l?delete d[i]:typeof =
d.removeAttribute!=3D=3DK?d.removeAttribute(i):d[i]=3Dnull,c.push(f))}}})=
,m.fn.extend({text:function(a){return V(this,function(a){return void =
0=3D=3D=3Da?m.text(this):this.empty().append((this[0]&&this[0].ownerDocum=
ent||y).createTextNode(a))},null,a,arguments.length)},append:function(){r=
eturn =
this.domManip(arguments,function(a){if(1=3D=3D=3Dthis.nodeType||11=3D=3D=3D=
this.nodeType||9=3D=3D=3Dthis.nodeType){var =
b=3Dwb(this,a);b.appendChild(a)}})},prepend:function(){return =
this.domManip(arguments,function(a){if(1=3D=3D=3Dthis.nodeType||11=3D=3D=3D=
this.nodeType||9=3D=3D=3Dthis.nodeType){var =
b=3Dwb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){retur=
n =
this.domManip(arguments,function(a){this.parentNode&&this.parentNode.inse=
rtBefore(a,this)})},after:function(){return =
this.domManip(arguments,function(a){this.parentNode&&this.parentNode.inse=
rtBefore(a,this.nextSibling)})},remove:function(a,b){for(var =
c,d=3Da?m.filter(a,this):this,e=3D0;null!=3D(c=3Dd[e]);e++)b||1!=3D=3Dc.n=
odeType||m.cleanData(ub(c)),c.parentNode&&(b&&m.contains(c.ownerDocument,=
c)&&zb(ub(c,"script")),c.parentNode.removeChild(c));return =
this},empty:function(){for(var =
a,b=3D0;null!=3D(a=3Dthis[b]);b++){1=3D=3D=3Da.nodeType&&m.cleanData(ub(a=
,!1));while(a.firstChild)a.removeChild(a.firstChild);a.options&&m.nodeNam=
e(a,"select")&&(a.options.length=3D0)}return =
this},clone:function(a,b){return =
a=3Dnull=3D=3Da?!1:a,b=3Dnull=3D=3Db?a:b,this.map(function(){return =
m.clone(this,a,b)})},html:function(a){return V(this,function(a){var =
b=3Dthis[0]||{},c=3D0,d=3Dthis.length;if(void 0=3D=3D=3Da)return =
1=3D=3D=3Db.nodeType?b.innerHTML.replace(fb,""):void =
0;if(!("string"!=3Dtypeof =
a||mb.test(a)||!k.htmlSerialize&&gb.test(a)||!k.leadingWhitespace&&hb.tes=
t(a)||rb[(jb.exec(a)||["",""])[1].toLowerCase()])){a=3Da.replace(ib,"<$1>=
</$2>");try{for(;d>c;c++)b=3Dthis[c]||{},1=3D=3D=3Db.nodeType&&(m.cleanDa=
ta(ub(b,!1)),b.innerHTML=3Da);b=3D0}catch(e){}}b&&this.empty().append(a)}=
,null,a,arguments.length)},replaceWith:function(){var =
a=3Darguments[0];return =
this.domManip(arguments,function(b){a=3Dthis.parentNode,m.cleanData(ub(th=
is)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remo=
ve()},detach:function(a){return =
this.remove(a,!0)},domManip:function(a,b){a=3De.apply([],a);var =
c,d,f,g,h,i,j=3D0,l=3Dthis.length,n=3Dthis,o=3Dl-1,p=3Da[0],q=3Dm.isFunct=
ion(p);if(q||l>1&&"string"=3D=3Dtypeof =
p&&!k.checkClone&&nb.test(p))return this.each(function(c){var =
d=3Dn.eq(c);q&&(a[0]=3Dp.call(this,c,d.html())),d.domManip(a,b)});if(l&&(=
i=3Dm.buildFragment(a,this[0].ownerDocument,!1,this),c=3Di.firstChild,1=3D=
=3D=3Di.childNodes.length&&(i=3Dc),c)){for(g=3Dm.map(ub(i,"script"),xb),f=
=3Dg.length;l>j;j++)d=3Di,j!=3D=3Do&&(d=3Dm.clone(d,!0,!0),f&&m.merge(g,u=
b(d,"script"))),b.call(this[j],d,j);if(f)for(h=3Dg[g.length-1].ownerDocum=
ent,m.map(g,yb),j=3D0;f>j;j++)d=3Dg[j],ob.test(d.type||"")&&!m._data(d,"g=
lobalEval")&&m.contains(h,d)&&(d.src?m._evalUrl&&m._evalUrl(d.src):m.glob=
alEval((d.text||d.textContent||d.innerHTML||"").replace(qb,"")));i=3Dc=3D=
null}return =
this}}),m.each({appendTo:"append",prependTo:"prepend",insertBefore:"befor=
e",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){m.fn[a]=3D=
function(a){for(var =
c,d=3D0,e=3D[],g=3Dm(a),h=3Dg.length-1;h>=3Dd;d++)c=3Dd=3D=3D=3Dh?this:th=
is.clone(!0),m(g[d])[b](c),f.apply(e,c.get());return =
this.pushStack(e)}});var Cb,Db=3D{};function Eb(b,c){var =
d,e=3Dm(c.createElement(b)).appendTo(c.body),f=3Da.getDefaultComputedStyl=
e&&(d=3Da.getDefaultComputedStyle(e[0]))?d.display:m.css(e[0],"display");=
return e.detach(),f}function Fb(a){var b=3Dy,c=3DDb[a];return =
c||(c=3DEb(a,b),"none"!=3D=3Dc&&c||(Cb=3D(Cb||m("<iframe =
frameborder=3D'0' width=3D'0' =
height=3D'0'/>")).appendTo(b.documentElement),b=3D(Cb[0].contentWindow||C=
b[0].contentDocument).document,b.write(),b.close(),c=3DEb(a,b),Cb.detach(=
)),Db[a]=3Dc),c}!function(){var =
a;k.shrinkWrapBlocks=3Dfunction(){if(null!=3Da)return a;a=3D!1;var =
b,c,d;return =
c=3Dy.getElementsByTagName("body")[0],c&&c.style?(b=3Dy.createElement("di=
v"),d=3Dy.createElement("div"),d.style.cssText=3D"position:absolute;borde=
r:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),=
typeof =
b.style.zoom!=3D=3DK&&(b.style.cssText=3D"-webkit-box-sizing:content-box;=
-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0=
;border:0;padding:1px;width:1px;zoom:1",b.appendChild(y.createElement("di=
v")).style.width=3D"5px",a=3D3!=3D=3Db.offsetWidth),c.removeChild(d),a):v=
oid 0}}();var Gb=3D/^margin/,Hb=3Dnew =
RegExp("^("+S+")(?!px)[a-z%]+$","i"),Ib,Jb,Kb=3D/^(top|right|bottom|left)=
$/;a.getComputedStyle?(Ib=3Dfunction(a){return =
a.ownerDocument.defaultView.getComputedStyle(a,null)},Jb=3Dfunction(a,b,c=
){var d,e,f,g,h=3Da.style;return =
c=3Dc||Ib(a),g=3Dc?c.getPropertyValue(b)||c[b]:void =
0,c&&(""!=3D=3Dg||m.contains(a.ownerDocument,a)||(g=3Dm.style(a,b)),Hb.te=
st(g)&&Gb.test(b)&&(d=3Dh.width,e=3Dh.minWidth,f=3Dh.maxWidth,h.minWidth=3D=
h.maxWidth=3Dh.width=3Dg,g=3Dc.width,h.width=3Dd,h.minWidth=3De,h.maxWidt=
h=3Df)),void =
0=3D=3D=3Dg?g:g+""}):y.documentElement.currentStyle&&(Ib=3Dfunction(a){re=
turn a.currentStyle},Jb=3Dfunction(a,b,c){var d,e,f,g,h=3Da.style;return =
c=3Dc||Ib(a),g=3Dc?c[b]:void =
0,null=3D=3Dg&&h&&h[b]&&(g=3Dh[b]),Hb.test(g)&&!Kb.test(b)&&(d=3Dh.left,e=
=3Da.runtimeStyle,f=3De&&e.left,f&&(e.left=3Da.currentStyle.left),h.left=3D=
"fontSize"=3D=3D=3Db?"1em":g,g=3Dh.pixelLeft+"px",h.left=3Dd,f&&(e.left=3D=
f)),void 0=3D=3D=3Dg?g:g+""||"auto"});function =
Lb(a,b){return{get:function(){var c=3Da();if(null!=3Dc)return c?void =
delete this.get:(this.get=3Db).apply(this,arguments)}}}!function(){var =
b,c,d,e,f,g,h;if(b=3Dy.createElement("div"),b.innerHTML=3D"  =
<link/><table></table><a href=3D'/a'>a</a><input =
type=3D'checkbox'/>",d=3Db.getElementsByTagName("a")[0],c=3Dd&&d.style){c=
.cssText=3D"float:left;opacity:.5",k.opacity=3D"0.5"=3D=3D=3Dc.opacity,k.=
cssFloat=3D!!c.cssFloat,b.style.backgroundClip=3D"content-box",b.cloneNod=
e(!0).style.backgroundClip=3D"",k.clearCloneStyle=3D"content-box"=3D=3D=3D=
b.style.backgroundClip,k.boxSizing=3D""=3D=3D=3Dc.boxSizing||""=3D=3D=3Dc=
.MozBoxSizing||""=3D=3D=3Dc.WebkitBoxSizing,m.extend(k,{reliableHiddenOff=
sets:function(){return =
null=3D=3Dg&&i(),g},boxSizingReliable:function(){return =
null=3D=3Df&&i(),f},pixelPosition:function(){return =
null=3D=3De&&i(),e},reliableMarginRight:function(){return =
null=3D=3Dh&&i(),h}});function i(){var =
b,c,d,i;c=3Dy.getElementsByTagName("body")[0],c&&c.style&&(b=3Dy.createEl=
ement("div"),d=3Dy.createElement("div"),d.style.cssText=3D"position:absol=
ute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).append=
Child(b),b.style.cssText=3D"-webkit-box-sizing:border-box;-moz-box-sizing=
:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;bord=
er:1px;padding:1px;width:4px;position:absolute",e=3Df=3D!1,h=3D!0,a.getCo=
mputedStyle&&(e=3D"1%"!=3D=3D(a.getComputedStyle(b,null)||{}).top,f=3D"4p=
x"=3D=3D=3D(a.getComputedStyle(b,null)||{width:"4px"}).width,i=3Db.append=
Child(y.createElement("div")),i.style.cssText=3Db.style.cssText=3D"-webki=
t-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-b=
ox;display:block;margin:0;border:0;padding:0",i.style.marginRight=3Di.sty=
le.width=3D"0",b.style.width=3D"1px",h=3D!parseFloat((a.getComputedStyle(=
i,null)||{}).marginRight)),b.innerHTML=3D"<table><tr><td></td><td>t</td><=
/tr></table>",i=3Db.getElementsByTagName("td"),i[0].style.cssText=3D"marg=
in:0;border:0;padding:0;display:none",g=3D0=3D=3D=3Di[0].offsetHeight,g&&=
(i[0].style.display=3D"",i[1].style.display=3D"none",g=3D0=3D=3D=3Di[0].o=
ffsetHeight),c.removeChild(d))}}}(),m.swap=3Dfunction(a,b,c,d){var =
e,f,g=3D{};for(f in =
b)g[f]=3Da.style[f],a.style[f]=3Db[f];e=3Dc.apply(a,d||[]);for(f in =
b)a.style[f]=3Dg[f];return e};var =
Mb=3D/alpha\([^)]*\)/i,Nb=3D/opacity\s*=3D\s*([^)]*)/,Ob=3D/^(none|table(=
?!-c[ea]).+)/,Pb=3Dnew RegExp("^("+S+")(.*)$","i"),Qb=3Dnew =
RegExp("^([+-])=3D("+S+")","i"),Rb=3D{position:"absolute",visibility:"hid=
den",display:"block"},Sb=3D{letterSpacing:"0",fontWeight:"400"},Tb=3D["We=
bkit","O","Moz","ms"];function Ub(a,b){if(b in a)return b;var =
c=3Db.charAt(0).toUpperCase()+b.slice(1),d=3Db,e=3DTb.length;while(e--)if=
(b=3DTb[e]+c,b in a)return b;return d}function Vb(a,b){for(var =
c,d,e,f=3D[],g=3D0,h=3Da.length;h>g;g++)d=3Da[g],d.style&&(f[g]=3Dm._data=
(d,"olddisplay"),c=3Dd.style.display,b?(f[g]||"none"!=3D=3Dc||(d.style.di=
splay=3D""),""=3D=3D=3Dd.style.display&&U(d)&&(f[g]=3Dm._data(d,"olddispl=
ay",Fb(d.nodeName)))):(e=3DU(d),(c&&"none"!=3D=3Dc||!e)&&m._data(d,"olddi=
splay",e?c:m.css(d,"display"))));for(g=3D0;h>g;g++)d=3Da[g],d.style&&(b&&=
"none"!=3D=3Dd.style.display&&""!=3D=3Dd.style.display||(d.style.display=3D=
b?f[g]||"":"none"));return a}function Wb(a,b,c){var =
d=3DPb.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function =
Xb(a,b,c,d,e){for(var =
f=3Dc=3D=3D=3D(d?"border":"content")?4:"width"=3D=3D=3Db?1:0,g=3D0;4>f;f+=
=3D2)"margin"=3D=3D=3Dc&&(g+=3Dm.css(a,c+T[f],!0,e)),d?("content"=3D=3D=3D=
c&&(g-=3Dm.css(a,"padding"+T[f],!0,e)),"margin"!=3D=3Dc&&(g-=3Dm.css(a,"b=
order"+T[f]+"Width",!0,e))):(g+=3Dm.css(a,"padding"+T[f],!0,e),"padding"!=
=3D=3Dc&&(g+=3Dm.css(a,"border"+T[f]+"Width",!0,e)));return g}function =
Yb(a,b,c){var =
d=3D!0,e=3D"width"=3D=3D=3Db?a.offsetWidth:a.offsetHeight,f=3DIb(a),g=3Dk=
.boxSizing&&"border-box"=3D=3D=3Dm.css(a,"boxSizing",!1,f);if(0>=3De||nul=
l=3D=3De){if(e=3DJb(a,b,f),(0>e||null=3D=3De)&&(e=3Da.style[b]),Hb.test(e=
))return =
e;d=3Dg&&(k.boxSizingReliable()||e=3D=3D=3Da.style[b]),e=3DparseFloat(e)|=
|0}return =
e+Xb(a,b,c||(g?"border":"content"),d,f)+"px"}m.extend({cssHooks:{opacity:=
{get:function(a,b){if(b){var =
c=3DJb(a,"opacity");return""=3D=3D=3Dc?"1":c}}}},cssNumber:{columnCount:!=
0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,op=
acity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"floa=
t":k.cssFloat?"cssFloat":"styleFloat"},style:function(a,b,c,d){if(a&&3!=3D=
=3Da.nodeType&&8!=3D=3Da.nodeType&&a.style){var =
e,f,g,h=3Dm.camelCase(b),i=3Da.style;if(b=3Dm.cssProps[h]||(m.cssProps[h]=
=3DUb(i,h)),g=3Dm.cssHooks[b]||m.cssHooks[h],void 0=3D=3D=3Dc)return =
g&&"get"in g&&void 0!=3D=3D(e=3Dg.get(a,!1,d))?e:i[b];if(f=3Dtypeof =
c,"string"=3D=3D=3Df&&(e=3DQb.exec(c))&&(c=3D(e[1]+1)*e[2]+parseFloat(m.c=
ss(a,b)),f=3D"number"),null!=3Dc&&c=3D=3D=3Dc&&("number"!=3D=3Df||m.cssNu=
mber[h]||(c+=3D"px"),k.clearCloneStyle||""!=3D=3Dc||0!=3D=3Db.indexOf("ba=
ckground")||(i[b]=3D"inherit"),!(g&&"set"in g&&void =
0=3D=3D=3D(c=3Dg.set(a,c,d)))))try{i[b]=3Dc}catch(j){}}},css:function(a,b=
,c,d){var e,f,g,h=3Dm.camelCase(b);return =
b=3Dm.cssProps[h]||(m.cssProps[h]=3DUb(a.style,h)),g=3Dm.cssHooks[b]||m.c=
ssHooks[h],g&&"get"in g&&(f=3Dg.get(a,!0,c)),void =
0=3D=3D=3Df&&(f=3DJb(a,b,d)),"normal"=3D=3D=3Df&&b in =
Sb&&(f=3DSb[b]),""=3D=3D=3Dc||c?(e=3DparseFloat(f),c=3D=3D=3D!0||m.isNume=
ric(e)?e||0:f):f}}),m.each(["height","width"],function(a,b){m.cssHooks[b]=
=3D{get:function(a,c,d){return =
c?Ob.test(m.css(a,"display"))&&0=3D=3D=3Da.offsetWidth?m.swap(a,Rb,functi=
on(){return Yb(a,b,d)}):Yb(a,b,d):void 0},set:function(a,c,d){var =
e=3Dd&&Ib(a);return =
Wb(a,c,d?Xb(a,b,d,k.boxSizing&&"border-box"=3D=3D=3Dm.css(a,"boxSizing",!=
1,e),e):0)}}}),k.opacity||(m.cssHooks.opacity=3D{get:function(a,b){return=
 =
Nb.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?.01=
*parseFloat(RegExp.$1)+"":b?"1":""},set:function(a,b){var =
c=3Da.style,d=3Da.currentStyle,e=3Dm.isNumeric(b)?"alpha(opacity=3D"+100*=
b+")":"",f=3Dd&&d.filter||c.filter||"";c.zoom=3D1,(b>=3D1||""=3D=3D=3Db)&=
&""=3D=3D=3Dm.trim(f.replace(Mb,""))&&c.removeAttribute&&(c.removeAttribu=
te("filter"),""=3D=3D=3Db||d&&!d.filter)||(c.filter=3DMb.test(f)?f.replac=
e(Mb,e):f+" =
"+e)}}),m.cssHooks.marginRight=3DLb(k.reliableMarginRight,function(a,b){r=
eturn b?m.swap(a,{display:"inline-block"},Jb,[a,"marginRight"]):void =
0}),m.each({margin:"",padding:"",border:"Width"},function(a,b){m.cssHooks=
[a+b]=3D{expand:function(c){for(var =
d=3D0,e=3D{},f=3D"string"=3D=3Dtypeof c?c.split(" =
"):[c];4>d;d++)e[a+T[d]+b]=3Df[d]||f[d-2]||f[0];return =
e}},Gb.test(a)||(m.cssHooks[a+b].set=3DWb)}),m.fn.extend({css:function(a,=
b){return V(this,function(a,b,c){var =
d,e,f=3D{},g=3D0;if(m.isArray(b)){for(d=3DIb(a),e=3Db.length;e>g;g++)f[b[=
g]]=3Dm.css(a,b[g],!1,d);return f}return void =
0!=3D=3Dc?m.style(a,b,c):m.css(a,b)},a,b,arguments.length>1)},show:functi=
on(){return Vb(this,!0)},hide:function(){return =
Vb(this)},toggle:function(a){return"boolean"=3D=3Dtypeof =
a?a?this.show():this.hide():this.each(function(){U(this)?m(this).show():m=
(this).hide()})}});function Zb(a,b,c,d,e){return new =
Zb.prototype.init(a,b,c,d,e)}m.Tween=3DZb,Zb.prototype=3D{constructor:Zb,=
init:function(a,b,c,d,e,f){this.elem=3Da,this.prop=3Dc,this.easing=3De||"=
swing",this.options=3Db,this.start=3Dthis.now=3Dthis.cur(),this.end=3Dd,t=
his.unit=3Df||(m.cssNumber[c]?"":"px")
},cur:function(){var a=3DZb.propHooks[this.prop];return =
a&&a.get?a.get(this):Zb.propHooks._default.get(this)},run:function(a){var=
 b,c=3DZb.propHooks[this.prop];return =
this.pos=3Db=3Dthis.options.duration?m.easing[this.easing](a,this.options=
.duration*a,0,1,this.options.duration):a,this.now=3D(this.end-this.start)=
*b+this.start,this.options.step&&this.options.step.call(this.elem,this.no=
w,this),c&&c.set?c.set(this):Zb.propHooks._default.set(this),this}},Zb.pr=
ototype.init.prototype=3DZb.prototype,Zb.propHooks=3D{_default:{get:funct=
ion(a){var b;return =
null=3D=3Da.elem[a.prop]||a.elem.style&&null!=3Da.elem.style[a.prop]?(b=3D=
m.css(a.elem,a.prop,""),b&&"auto"!=3D=3Db?b:0):a.elem[a.prop]},set:functi=
on(a){m.fx.step[a.prop]?m.fx.step[a.prop](a):a.elem.style&&(null!=3Da.ele=
m.style[m.cssProps[a.prop]]||m.cssHooks[a.prop])?m.style(a.elem,a.prop,a.=
now+a.unit):a.elem[a.prop]=3Da.now}}},Zb.propHooks.scrollTop=3DZb.propHoo=
ks.scrollLeft=3D{set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.e=
lem[a.prop]=3Da.now)}},m.easing=3D{linear:function(a){return =
a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},m.fx=3DZb.prototype=
.init,m.fx.step=3D{};var $b,_b,ac=3D/^(?:toggle|show|hide)$/,bc=3Dnew =
RegExp("^(?:([+-])=3D|)("+S+")([a-z%]*)$","i"),cc=3D/queueHooks$/,dc=3D[i=
c],ec=3D{"*":[function(a,b){var =
c=3Dthis.createTween(a,b),d=3Dc.cur(),e=3Dbc.exec(b),f=3De&&e[3]||(m.cssN=
umber[a]?"":"px"),g=3D(m.cssNumber[a]||"px"!=3D=3Df&&+d)&&bc.exec(m.css(c=
.elem,a)),h=3D1,i=3D20;if(g&&g[3]!=3D=3Df){f=3Df||g[3],e=3De||[],g=3D+d||=
1;do =
h=3Dh||".5",g/=3Dh,m.style(c.elem,a,g+f);while(h!=3D=3D(h=3Dc.cur()/d)&&1=
!=3D=3Dh&&--i)}return =
e&&(g=3Dc.start=3D+g||+d||0,c.unit=3Df,c.end=3De[1]?g+(e[1]+1)*e[2]:+e[2]=
),c}]};function fc(){return setTimeout(function(){$b=3Dvoid =
0}),$b=3Dm.now()}function gc(a,b){var =
c,d=3D{height:a},e=3D0;for(b=3Db?1:0;4>e;e+=3D2-b)c=3DT[e],d["margin"+c]=3D=
d["padding"+c]=3Da;return b&&(d.opacity=3Dd.width=3Da),d}function =
hc(a,b,c){for(var =
d,e=3D(ec[b]||[]).concat(ec["*"]),f=3D0,g=3De.length;g>f;f++)if(d=3De[f].=
call(c,b,a))return d}function ic(a,b,c){var =
d,e,f,g,h,i,j,l,n=3Dthis,o=3D{},p=3Da.style,q=3Da.nodeType&&U(a),r=3Dm._d=
ata(a,"fxshow");c.queue||(h=3Dm._queueHooks(a,"fx"),null=3D=3Dh.unqueued&=
&(h.unqueued=3D0,i=3Dh.empty.fire,h.empty.fire=3Dfunction(){h.unqueued||i=
()}),h.unqueued++,n.always(function(){n.always(function(){h.unqueued--,m.=
queue(a,"fx").length||h.empty.fire()})})),1=3D=3D=3Da.nodeType&&("height"=
in b||"width"in =
b)&&(c.overflow=3D[p.overflow,p.overflowX,p.overflowY],j=3Dm.css(a,"displ=
ay"),l=3D"none"=3D=3D=3Dj?m._data(a,"olddisplay")||Fb(a.nodeName):j,"inli=
ne"=3D=3D=3Dl&&"none"=3D=3D=3Dm.css(a,"float")&&(k.inlineBlockNeedsLayout=
&&"inline"!=3D=3DFb(a.nodeName)?p.zoom=3D1:p.display=3D"inline-block")),c=
.overflow&&(p.overflow=3D"hidden",k.shrinkWrapBlocks()||n.always(function=
(){p.overflow=3Dc.overflow[0],p.overflowX=3Dc.overflow[1],p.overflowY=3Dc=
.overflow[2]}));for(d in b)if(e=3Db[d],ac.exec(e)){if(delete =
b[d],f=3Df||"toggle"=3D=3D=3De,e=3D=3D=3D(q?"hide":"show")){if("show"!=3D=
=3De||!r||void =
0=3D=3D=3Dr[d])continue;q=3D!0}o[d]=3Dr&&r[d]||m.style(a,d)}else =
j=3Dvoid =
0;if(m.isEmptyObject(o))"inline"=3D=3D=3D("none"=3D=3D=3Dj?Fb(a.nodeName)=
:j)&&(p.display=3Dj);else{r?"hidden"in =
r&&(q=3Dr.hidden):r=3Dm._data(a,"fxshow",{}),f&&(r.hidden=3D!q),q?m(a).sh=
ow():n.done(function(){m(a).hide()}),n.done(function(){var =
b;m._removeData(a,"fxshow");for(b in o)m.style(a,b,o[b])});for(d in =
o)g=3Dhc(q?r[d]:0,d,n),d in =
r||(r[d]=3Dg.start,q&&(g.end=3Dg.start,g.start=3D"width"=3D=3D=3Dd||"heig=
ht"=3D=3D=3Dd?1:0))}}function jc(a,b){var c,d,e,f,g;for(c in =
a)if(d=3Dm.camelCase(c),e=3Db[d],f=3Da[c],m.isArray(f)&&(e=3Df[1],f=3Da[c=
]=3Df[0]),c!=3D=3Dd&&(a[d]=3Df,delete =
a[c]),g=3Dm.cssHooks[d],g&&"expand"in g){f=3Dg.expand(f),delete =
a[d];for(c in f)c in a||(a[c]=3Df[c],b[c]=3De)}else b[d]=3De}function =
kc(a,b,c){var =
d,e,f=3D0,g=3Ddc.length,h=3Dm.Deferred().always(function(){delete =
i.elem}),i=3Dfunction(){if(e)return!1;for(var =
b=3D$b||fc(),c=3DMath.max(0,j.startTime+j.duration-b),d=3Dc/j.duration||0=
,f=3D1-d,g=3D0,i=3Dj.tweens.length;i>g;g++)j.tweens[g].run(f);return =
h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=3Dh.promise=
({elem:a,props:m.extend({},b),opts:m.extend(!0,{specialEasing:{}},c),orig=
inalProperties:b,originalOptions:c,startTime:$b||fc(),duration:c.duration=
,tweens:[],createTween:function(b,c){var =
d=3Dm.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return =
j.tweens.push(d),d},stop:function(b){var =
c=3D0,d=3Db?j.tweens.length:0;if(e)return =
this;for(e=3D!0;d>c;c++)j.tweens[c].run(1);return =
b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=3Dj.props;for(jc=
(k,j.opts.specialEasing);g>f;f++)if(d=3Ddc[f].call(j,a,k,j.opts))return =
d;return =
m.map(k,hc,j),m.isFunction(j.opts.start)&&j.opts.start.call(a,j),m.fx.tim=
er(m.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.prog=
ress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.a=
lways)}m.Animation=3Dm.extend(kc,{tweener:function(a,b){m.isFunction(a)?(=
b=3Da,a=3D["*"]):a=3Da.split(" ");for(var =
c,d=3D0,e=3Da.length;e>d;d++)c=3Da[d],ec[c]=3Dec[c]||[],ec[c].unshift(b)}=
,prefilter:function(a,b){b?dc.unshift(a):dc.push(a)}}),m.speed=3Dfunction=
(a,b,c){var d=3Da&&"object"=3D=3Dtypeof =
a?m.extend({},a):{complete:c||!c&&b||m.isFunction(a)&&a,duration:a,easing=
:c&&b||b&&!m.isFunction(b)&&b};return =
d.duration=3Dm.fx.off?0:"number"=3D=3Dtypeof =
d.duration?d.duration:d.duration in =
m.fx.speeds?m.fx.speeds[d.duration]:m.fx.speeds._default,(null=3D=3Dd.que=
ue||d.queue=3D=3D=3D!0)&&(d.queue=3D"fx"),d.old=3Dd.complete,d.complete=3D=
function(){m.isFunction(d.old)&&d.old.call(this),d.queue&&m.dequeue(this,=
d.queue)},d},m.fn.extend({fadeTo:function(a,b,c,d){return =
this.filter(U).css("opacity",0).show().end().animate({opacity:b},a,c,d)},=
animate:function(a,b,c,d){var =
e=3Dm.isEmptyObject(a),f=3Dm.speed(b,c,d),g=3Dfunction(){var =
b=3Dkc(this,m.extend({},a),f);(e||m._data(this,"finish"))&&b.stop(!0)};re=
turn =
g.finish=3Dg,e||f.queue=3D=3D=3D!1?this.each(g):this.queue(f.queue,g)},st=
op:function(a,b,c){var d=3Dfunction(a){var b=3Da.stop;delete =
a.stop,b(c)};return"string"!=3Dtypeof a&&(c=3Db,b=3Da,a=3Dvoid =
0),b&&a!=3D=3D!1&&this.queue(a||"fx",[]),this.each(function(){var =
b=3D!0,e=3Dnull!=3Da&&a+"queueHooks",f=3Dm.timers,g=3Dm._data(this);if(e)=
g[e]&&g[e].stop&&d(g[e]);else for(e in =
g)g[e]&&g[e].stop&&cc.test(e)&&d(g[e]);for(e=3Df.length;e--;)f[e].elem!=3D=
=3Dthis||null!=3Da&&f[e].queue!=3D=3Da||(f[e].anim.stop(c),b=3D!1,f.splic=
e(e,1));(b||!c)&&m.dequeue(this,a)})},finish:function(a){return =
a!=3D=3D!1&&(a=3Da||"fx"),this.each(function(){var =
b,c=3Dm._data(this),d=3Dc[a+"queue"],e=3Dc[a+"queueHooks"],f=3Dm.timers,g=
=3Dd?d.length:0;for(c.finish=3D!0,m.queue(this,a,[]),e&&e.stop&&e.stop.ca=
ll(this,!0),b=3Df.length;b--;)f[b].elem=3D=3D=3Dthis&&f[b].queue=3D=3D=3D=
a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=3D0;g>b;b++)d[b]&&d[b].finish=
&&d[b].finish.call(this);delete =
c.finish})}}),m.each(["toggle","show","hide"],function(a,b){var =
c=3Dm.fn[b];m.fn[b]=3Dfunction(a,d,e){return =
null=3D=3Da||"boolean"=3D=3Dtypeof =
a?c.apply(this,arguments):this.animate(gc(b,!0),a,d,e)}}),m.each({slideDo=
wn:gc("show"),slideUp:gc("hide"),slideToggle:gc("toggle"),fadeIn:{opacity=
:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function=
(a,b){m.fn[a]=3Dfunction(a,c,d){return =
this.animate(b,a,c,d)}}),m.timers=3D[],m.fx.tick=3Dfunction(){var =
a,b=3Dm.timers,c=3D0;for($b=3Dm.now();c<b.length;c++)a=3Db[c],a()||b[c]!=3D=
=3Da||b.splice(c--,1);b.length||m.fx.stop(),$b=3Dvoid =
0},m.fx.timer=3Dfunction(a){m.timers.push(a),a()?m.fx.start():m.timers.po=
p()},m.fx.interval=3D13,m.fx.start=3Dfunction(){_b||(_b=3DsetInterval(m.f=
x.tick,m.fx.interval))},m.fx.stop=3Dfunction(){clearInterval(_b),_b=3Dnul=
l},m.fx.speeds=3D{slow:600,fast:200,_default:400},m.fn.delay=3Dfunction(a=
,b){return =
a=3Dm.fx?m.fx.speeds[a]||a:a,b=3Db||"fx",this.queue(b,function(b,c){var =
d=3DsetTimeout(b,a);c.stop=3Dfunction(){clearTimeout(d)}})},function(){va=
r =
a,b,c,d,e;b=3Dy.createElement("div"),b.setAttribute("className","t"),b.in=
nerHTML=3D"  <link/><table></table><a href=3D'/a'>a</a><input =
type=3D'checkbox'/>",d=3Db.getElementsByTagName("a")[0],c=3Dy.createEleme=
nt("select"),e=3Dc.appendChild(y.createElement("option")),a=3Db.getElemen=
tsByTagName("input")[0],d.style.cssText=3D"top:1px",k.getSetAttribute=3D"=
t"!=3D=3Db.className,k.style=3D/top/.test(d.getAttribute("style")),k.href=
Normalized=3D"/a"=3D=3D=3Dd.getAttribute("href"),k.checkOn=3D!!a.value,k.=
optSelected=3De.selected,k.enctype=3D!!y.createElement("form").enctype,c.=
disabled=3D!0,k.optDisabled=3D!e.disabled,a=3Dy.createElement("input"),a.=
setAttribute("value",""),k.input=3D""=3D=3D=3Da.getAttribute("value"),a.v=
alue=3D"t",a.setAttribute("type","radio"),k.radioValue=3D"t"=3D=3D=3Da.va=
lue}();var lc=3D/\r/g;m.fn.extend({val:function(a){var =
b,c,d,e=3Dthis[0];{if(arguments.length)return =
d=3Dm.isFunction(a),this.each(function(c){var =
e;1=3D=3D=3Dthis.nodeType&&(e=3Dd?a.call(this,c,m(this).val()):a,null=3D=3D=
e?e=3D"":"number"=3D=3Dtypeof =
e?e+=3D"":m.isArray(e)&&(e=3Dm.map(e,function(a){return =
null=3D=3Da?"":a+""})),b=3Dm.valHooks[this.type]||m.valHooks[this.nodeNam=
e.toLowerCase()],b&&"set"in b&&void =
0!=3D=3Db.set(this,e,"value")||(this.value=3De))});if(e)return =
b=3Dm.valHooks[e.type]||m.valHooks[e.nodeName.toLowerCase()],b&&"get"in =
b&&void =
0!=3D=3D(c=3Db.get(e,"value"))?c:(c=3De.value,"string"=3D=3Dtypeof =
c?c.replace(lc,""):null=3D=3Dc?"":c)}}}),m.extend({valHooks:{option:{get:=
function(a){var b=3Dm.find.attr(a,"value");return =
null!=3Db?b:m.trim(m.text(a))}},select:{get:function(a){for(var =
b,c,d=3Da.options,e=3Da.selectedIndex,f=3D"select-one"=3D=3D=3Da.type||0>=
e,g=3Df?null:[],h=3Df?e+1:d.length,i=3D0>e?h:f?e:0;h>i;i++)if(c=3Dd[i],!(=
!c.selected&&i!=3D=3De||(k.optDisabled?c.disabled:null!=3D=3Dc.getAttribu=
te("disabled"))||c.parentNode.disabled&&m.nodeName(c.parentNode,"optgroup=
"))){if(b=3Dm(c).val(),f)return b;g.push(b)}return =
g},set:function(a,b){var =
c,d,e=3Da.options,f=3Dm.makeArray(b),g=3De.length;while(g--)if(d=3De[g],m=
.inArray(m.valHooks.option.get(d),f)>=3D0)try{d.selected=3Dc=3D!0}catch(h=
){d.scrollHeight}else d.selected=3D!1;return =
c||(a.selectedIndex=3D-1),e}}}}),m.each(["radio","checkbox"],function(){m=
.valHooks[this]=3D{set:function(a,b){return =
m.isArray(b)?a.checked=3Dm.inArray(m(a).val(),b)>=3D0:void =
0}},k.checkOn||(m.valHooks[this].get=3Dfunction(a){return =
null=3D=3D=3Da.getAttribute("value")?"on":a.value})});var =
mc,nc,oc=3Dm.expr.attrHandle,pc=3D/^(?:checked|selected)$/i,qc=3Dk.getSet=
Attribute,rc=3Dk.input;m.fn.extend({attr:function(a,b){return =
V(this,m.attr,a,b,arguments.length>1)},removeAttr:function(a){return =
this.each(function(){m.removeAttr(this,a)})}}),m.extend({attr:function(a,=
b,c){var d,e,f=3Da.nodeType;if(a&&3!=3D=3Df&&8!=3D=3Df&&2!=3D=3Df)return =
typeof =
a.getAttribute=3D=3D=3DK?m.prop(a,b,c):(1=3D=3D=3Df&&m.isXMLDoc(a)||(b=3D=
b.toLowerCase(),d=3Dm.attrHooks[b]||(m.expr.match.bool.test(b)?nc:mc)),vo=
id 0=3D=3D=3Dc?d&&"get"in =
d&&null!=3D=3D(e=3Dd.get(a,b))?e:(e=3Dm.find.attr(a,b),null=3D=3De?void =
0:e):null!=3D=3Dc?d&&"set"in d&&void =
0!=3D=3D(e=3Dd.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void =
m.removeAttr(a,b))},removeAttr:function(a,b){var =
c,d,e=3D0,f=3Db&&b.match(E);if(f&&1=3D=3D=3Da.nodeType)while(c=3Df[e++])d=
=3Dm.propFix[c]||c,m.expr.match.bool.test(c)?rc&&qc||!pc.test(c)?a[d]=3D!=
1:a[m.camelCase("default-"+c)]=3Da[d]=3D!1:m.attr(a,c,""),a.removeAttribu=
te(qc?c:d)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&"radio"=3D=
=3D=3Db&&m.nodeName(a,"input")){var c=3Da.value;return =
a.setAttribute("type",b),c&&(a.value=3Dc),b}}}}}),nc=3D{set:function(a,b,=
c){return =
b=3D=3D=3D!1?m.removeAttr(a,c):rc&&qc||!pc.test(c)?a.setAttribute(!qc&&m.=
propFix[c]||c,c):a[m.camelCase("default-"+c)]=3Da[c]=3D!0,c}},m.each(m.ex=
pr.match.bool.source.match(/\w+/g),function(a,b){var =
c=3Doc[b]||m.find.attr;oc[b]=3Drc&&qc||!pc.test(b)?function(a,b,d){var =
e,f;return =
d||(f=3Doc[b],oc[b]=3De,e=3Dnull!=3Dc(a,b,d)?b.toLowerCase():null,oc[b]=3D=
f),e}:function(a,b,c){return c?void =
0:a[m.camelCase("default-"+b)]?b.toLowerCase():null}}),rc&&qc||(m.attrHoo=
ks.value=3D{set:function(a,b,c){return =
m.nodeName(a,"input")?void(a.defaultValue=3Db):mc&&mc.set(a,b,c)}}),qc||(=
mc=3D{set:function(a,b,c){var d=3Da.getAttributeNode(c);return =
d||a.setAttributeNode(d=3Da.ownerDocument.createAttribute(c)),d.value=3Db=
+=3D"","value"=3D=3D=3Dc||b=3D=3D=3Da.getAttribute(c)?b:void =
0}},oc.id=3Doc.name=3Doc.coords=3Dfunction(a,b,c){var d;return c?void =
0:(d=3Da.getAttributeNode(b))&&""!=3D=3Dd.value?d.value:null},m.valHooks.=
button=3D{get:function(a,b){var c=3Da.getAttributeNode(b);return =
c&&c.specified?c.value:void =
0},set:mc.set},m.attrHooks.contenteditable=3D{set:function(a,b,c){mc.set(=
a,""=3D=3D=3Db?!1:b,c)}},m.each(["width","height"],function(a,b){m.attrHo=
oks[b]=3D{set:function(a,c){return""=3D=3D=3Dc?(a.setAttribute(b,"auto"),=
c):void 0}}})),k.style||(m.attrHooks.style=3D{get:function(a){return =
a.style.cssText||void 0},set:function(a,b){return =
a.style.cssText=3Db+""}});var =
sc=3D/^(?:input|select|textarea|button|object)$/i,tc=3D/^(?:a|area)$/i;m.=
fn.extend({prop:function(a,b){return =
V(this,m.prop,a,b,arguments.length>1)},removeProp:function(a){return =
a=3Dm.propFix[a]||a,this.each(function(){try{this[a]=3Dvoid 0,delete =
this[a]}catch(b){}})}}),m.extend({propFix:{"for":"htmlFor","class":"class=
Name"},prop:function(a,b,c){var =
d,e,f,g=3Da.nodeType;if(a&&3!=3D=3Dg&&8!=3D=3Dg&&2!=3D=3Dg)return =
f=3D1!=3D=3Dg||!m.isXMLDoc(a),f&&(b=3Dm.propFix[b]||b,e=3Dm.propHooks[b])=
,void 0!=3D=3Dc?e&&"set"in e&&void =
0!=3D=3D(d=3De.set(a,c,b))?d:a[b]=3Dc:e&&"get"in =
e&&null!=3D=3D(d=3De.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(=
a){var b=3Dm.find.attr(a,"tabindex");return =
b?parseInt(b,10):sc.test(a.nodeName)||tc.test(a.nodeName)&&a.href?0:-1}}}=
}),k.hrefNormalized||m.each(["href","src"],function(a,b){m.propHooks[b]=3D=
{get:function(a){return =
a.getAttribute(b,4)}}}),k.optSelected||(m.propHooks.selected=3D{get:funct=
ion(a){var b=3Da.parentNode;return =
b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null}}),m.e=
ach(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSp=
an","colSpan","useMap","frameBorder","contentEditable"],function(){m.prop=
Fix[this.toLowerCase()]=3Dthis}),k.enctype||(m.propFix.enctype=3D"encodin=
g");var uc=3D/[\t\r\n\f]/g;m.fn.extend({addClass:function(a){var =
b,c,d,e,f,g,h=3D0,i=3Dthis.length,j=3D"string"=3D=3Dtypeof =
a&&a;if(m.isFunction(a))return =
this.each(function(b){m(this).addClass(a.call(this,b,this.className))});i=
f(j)for(b=3D(a||"").match(E)||[];i>h;h++)if(c=3Dthis[h],d=3D1=3D=3D=3Dc.n=
odeType&&(c.className?(" "+c.className+" ").replace(uc," "):" =
")){f=3D0;while(e=3Db[f++])d.indexOf(" "+e+" ")<0&&(d+=3De+" =
");g=3Dm.trim(d),c.className!=3D=3Dg&&(c.className=3Dg)}return =
this},removeClass:function(a){var =
b,c,d,e,f,g,h=3D0,i=3Dthis.length,j=3D0=3D=3D=3Darguments.length||"string=
"=3D=3Dtypeof a&&a;if(m.isFunction(a))return =
this.each(function(b){m(this).removeClass(a.call(this,b,this.className))}=
);if(j)for(b=3D(a||"").match(E)||[];i>h;h++)if(c=3Dthis[h],d=3D1=3D=3D=3D=
c.nodeType&&(c.className?(" "+c.className+" ").replace(uc," =
"):"")){f=3D0;while(e=3Db[f++])while(d.indexOf(" "+e+" =
")>=3D0)d=3Dd.replace(" "+e+" "," =
");g=3Da?m.trim(d):"",c.className!=3D=3Dg&&(c.className=3Dg)}return =
this},toggleClass:function(a,b){var c=3Dtypeof =
a;return"boolean"=3D=3Dtypeof =
b&&"string"=3D=3D=3Dc?b?this.addClass(a):this.removeClass(a):this.each(m.=
isFunction(a)?function(c){m(this).toggleClass(a.call(this,c,this.classNam=
e,b),b)}:function(){if("string"=3D=3D=3Dc){var =
b,d=3D0,e=3Dm(this),f=3Da.match(E)||[];while(b=3Df[d++])e.hasClass(b)?e.r=
emoveClass(b):e.addClass(b)}else(c=3D=3D=3DK||"boolean"=3D=3D=3Dc)&&(this=
.className&&m._data(this,"__className__",this.className),this.className=3D=
this.className||a=3D=3D=3D!1?"":m._data(this,"__className__")||"")})},has=
Class:function(a){for(var b=3D" "+a+" =
",c=3D0,d=3Dthis.length;d>c;c++)if(1=3D=3D=3Dthis[c].nodeType&&(" =
"+this[c].className+" ").replace(uc," =
").indexOf(b)>=3D0)return!0;return!1}}),m.each("blur focus focusin =
focusout load resize scroll unload click dblclick mousedown mouseup =
mousemove mouseover mouseout mouseenter mouseleave change select submit =
keydown keypress keyup error contextmenu".split(" =
"),function(a,b){m.fn[b]=3Dfunction(a,c){return =
arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),m.fn.extend({ho=
ver:function(a,b){return =
this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return =
this.on(a,null,b,c)},unbind:function(a,b){return =
this.off(a,null,b)},delegate:function(a,b,c,d){return =
this.on(b,a,c,d)},undelegate:function(a,b,c){return =
1=3D=3D=3Darguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var =
vc=3Dm.now(),wc=3D/\?/,xc=3D/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnr=
t]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE]=
[+-]?\d+|)/g;m.parseJSON=3Dfunction(b){if(a.JSON&&a.JSON.parse)return =
a.JSON.parse(b+"");var c,d=3Dnull,e=3Dm.trim(b+"");return =
e&&!m.trim(e.replace(xc,function(a,b,e,f){return =
c&&b&&(d=3D0),0=3D=3D=3Dd?a:(c=3De||b,d+=3D!f-!e,"")}))?Function("return =
"+e)():m.error("Invalid JSON: "+b)},m.parseXML=3Dfunction(b){var =
c,d;if(!b||"string"!=3Dtypeof b)return null;try{a.DOMParser?(d=3Dnew =
DOMParser,c=3Dd.parseFromString(b,"text/xml")):(c=3Dnew =
ActiveXObject("Microsoft.XMLDOM"),c.async=3D"false",c.loadXML(b))}catch(e=
){c=3Dvoid 0}return =
c&&c.documentElement&&!c.getElementsByTagName("parsererror").length||m.er=
ror("Invalid XML: "+b),c};var =
yc,zc,Ac=3D/#.*$/,Bc=3D/([?&])_=3D[^&]*/,Cc=3D/^(.*?):[ =
\t]*([^\r\n]*)\r?$/gm,Dc=3D/^(?:about|app|app-storage|.+-extension|file|r=
es|widget):$/,Ec=3D/^(?:GET|HEAD)$/,Fc=3D/^\/\//,Gc=3D/^([\w.+-]+:)(?:\/\=
/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Hc=3D{},Ic=3D{},Jc=3D"*/".concat=
("*");try{zc=3Dlocation.href}catch(Kc){zc=3Dy.createElement("a"),zc.href=3D=
"",zc=3Dzc.href}yc=3DGc.exec(zc.toLowerCase())||[];function Lc(a){return =
function(b,c){"string"!=3Dtypeof b&&(c=3Db,b=3D"*");var =
d,e=3D0,f=3Db.toLowerCase().match(E)||[];if(m.isFunction(c))while(d=3Df[e=
++])"+"=3D=3D=3Dd.charAt(0)?(d=3Dd.slice(1)||"*",(a[d]=3Da[d]||[]).unshif=
t(c)):(a[d]=3Da[d]||[]).push(c)}}function Mc(a,b,c,d){var =
e=3D{},f=3Da=3D=3D=3DIc;function g(h){var i;return =
e[h]=3D!0,m.each(a[h]||[],function(a,h){var =
j=3Dh(b,c,d);return"string"!=3Dtypeof j||f||e[j]?f?!(i=3Dj):void =
0:(b.dataTypes.unshift(j),g(j),!1)}),i}return =
g(b.dataTypes[0])||!e["*"]&&g("*")}function Nc(a,b){var =
c,d,e=3Dm.ajaxSettings.flatOptions||{};for(d in b)void =
0!=3D=3Db[d]&&((e[d]?a:c||(c=3D{}))[d]=3Db[d]);return =
c&&m.extend(!0,a,c),a}function Oc(a,b,c){var =
d,e,f,g,h=3Da.contents,i=3Da.dataTypes;while("*"=3D=3D=3Di[0])i.shift(),v=
oid =
0=3D=3D=3De&&(e=3Da.mimeType||b.getResponseHeader("Content-Type"));if(e)f=
or(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in =
c)f=3Di[0];else{for(g in c){if(!i[0]||a.converters[g+" =
"+i[0]]){f=3Dg;break}d||(d=3Dg)}f=3Df||d}return =
f?(f!=3D=3Di[0]&&i.unshift(f),c[f]):void 0}function Pc(a,b,c,d){var =
e,f,g,h,i,j=3D{},k=3Da.dataTypes.slice();if(k[1])for(g in =
a.converters)j[g.toLowerCase()]=3Da.converters[g];f=3Dk.shift();while(f)i=
f(a.responseFields[f]&&(c[a.responseFields[f]]=3Db),!i&&d&&a.dataFilter&&=
(b=3Da.dataFilter(b,a.dataType)),i=3Df,f=3Dk.shift())if("*"=3D=3D=3Df)f=3D=
i;else if("*"!=3D=3Di&&i!=3D=3Df){if(g=3Dj[i+" "+f]||j["* "+f],!g)for(e =
in j)if(h=3De.split(" "),h[1]=3D=3D=3Df&&(g=3Dj[i+" "+h[0]]||j["* =
"+h[0]])){g=3D=3D=3D!0?g=3Dj[e]:j[e]!=3D=3D!0&&(f=3Dh[0],k.unshift(h[1]))=
;break}if(g!=3D=3D!0)if(g&&a["throws"])b=3Dg(b);else =
try{b=3Dg(b)}catch(l){return{state:"parsererror",error:g?l:"No =
conversion from "+i+" to =
"+f}}}return{state:"success",data:b}}m.extend({active:0,lastModified:{},e=
tag:{},ajaxSettings:{url:zc,type:"GET",isLocal:Dc.test(yc[1]),global:!0,p=
rocessData:!0,async:!0,contentType:"application/x-www-form-urlencoded; =
charset=3DUTF-8",accepts:{"*":Jc,text:"text/plain",html:"text/html",xml:"=
application/xml, text/xml",json:"application/json, =
text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFi=
elds:{xml:"responseXML",text:"responseText",json:"responseJSON"},converte=
rs:{"* text":String,"text html":!0,"text json":m.parseJSON,"text =
xml":m.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b)=
{return =
b?Nc(Nc(a,m.ajaxSettings),b):Nc(m.ajaxSettings,a)},ajaxPrefilter:Lc(Hc),a=
jaxTransport:Lc(Ic),ajax:function(a,b){"object"=3D=3Dtypeof =
a&&(b=3Da,a=3Dvoid 0),b=3Db||{};var =
c,d,e,f,g,h,i,j,k=3Dm.ajaxSetup({},b),l=3Dk.context||k,n=3Dk.context&&(l.=
nodeType||l.jquery)?m(l):m.event,o=3Dm.Deferred(),p=3Dm.Callbacks("once =
memory"),q=3Dk.statusCode||{},r=3D{},s=3D{},t=3D0,u=3D"canceled",v=3D{rea=
dyState:0,getResponseHeader:function(a){var =
b;if(2=3D=3D=3Dt){if(!j){j=3D{};while(b=3DCc.exec(f))j[b[1].toLowerCase()=
]=3Db[2]}b=3Dj[a.toLowerCase()]}return =
null=3D=3Db?null:b},getAllResponseHeaders:function(){return =
2=3D=3D=3Dt?f:null},setRequestHeader:function(a,b){var =
c=3Da.toLowerCase();return =
t||(a=3Ds[c]=3Ds[c]||a,r[a]=3Db),this},overrideMimeType:function(a){retur=
n t||(k.mimeType=3Da),this},statusCode:function(a){var =
b;if(a)if(2>t)for(b in a)q[b]=3D[q[b],a[b]];else =
v.always(a[v.status]);return this},abort:function(a){var b=3Da||u;return =
i&&i.abort(b),x(0,b),this}};if(o.promise(v).complete=3Dp.add,v.success=3D=
v.done,v.error=3Dv.fail,k.url=3D((a||k.url||zc)+"").replace(Ac,"").replac=
e(Fc,yc[1]+"//"),k.type=3Db.method||b.type||k.method||k.type,k.dataTypes=3D=
m.trim(k.dataType||"*").toLowerCase().match(E)||[""],null=3D=3Dk.crossDom=
ain&&(c=3DGc.exec(k.url.toLowerCase()),k.crossDomain=3D!(!c||c[1]=3D=3D=3D=
yc[1]&&c[2]=3D=3D=3Dyc[2]&&(c[3]||("http:"=3D=3D=3Dc[1]?"80":"443"))=3D=3D=
=3D(yc[3]||("http:"=3D=3D=3Dyc[1]?"80":"443")))),k.data&&k.processData&&"=
string"!=3Dtypeof =
k.data&&(k.data=3Dm.param(k.data,k.traditional)),Mc(Hc,k,b,v),2=3D=3D=3Dt=
)return =
v;h=3Dk.global,h&&0=3D=3D=3Dm.active++&&m.event.trigger("ajaxStart"),k.ty=
pe=3Dk.type.toUpperCase(),k.hasContent=3D!Ec.test(k.type),e=3Dk.url,k.has=
Content||(k.data&&(e=3Dk.url+=3D(wc.test(e)?"&":"?")+k.data,delete =
k.data),k.cache=3D=3D=3D!1&&(k.url=3DBc.test(e)?e.replace(Bc,"$1_=3D"+vc+=
+):e+(wc.test(e)?"&":"?")+"_=3D"+vc++)),k.ifModified&&(m.lastModified[e]&=
&v.setRequestHeader("If-Modified-Since",m.lastModified[e]),m.etag[e]&&v.s=
etRequestHeader("If-None-Match",m.etag[e])),(k.data&&k.hasContent&&k.cont=
entType!=3D=3D!1||b.contentType)&&v.setRequestHeader("Content-Type",k.con=
tentType),v.setRequestHeader("Accept",k.dataTypes[0]&&k.accepts[k.dataTyp=
es[0]]?k.accepts[k.dataTypes[0]]+("*"!=3D=3Dk.dataTypes[0]?", "+Jc+"; =
q=3D0.01":""):k.accepts["*"]);for(d in =
k.headers)v.setRequestHeader(d,k.headers[d]);if(k.beforeSend&&(k.beforeSe=
nd.call(l,v,k)=3D=3D=3D!1||2=3D=3D=3Dt))return =
v.abort();u=3D"abort";for(d =
in{success:1,error:1,complete:1})v[d](k[d]);if(i=3DMc(Ic,k,b,v)){v.readyS=
tate=3D1,h&&n.trigger("ajaxSend",[v,k]),k.async&&k.timeout>0&&(g=3DsetTim=
eout(function(){v.abort("timeout")},k.timeout));try{t=3D1,i.send(r,x)}cat=
ch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,"No Transport");function =
x(a,b,c,d){var =
j,r,s,u,w,x=3Db;2!=3D=3Dt&&(t=3D2,g&&clearTimeout(g),i=3Dvoid =
0,f=3Dd||"",v.readyState=3Da>0?4:0,j=3Da>=3D200&&300>a||304=3D=3D=3Da,c&&=
(u=3DOc(k,v,c)),u=3DPc(k,u,v,j),j?(k.ifModified&&(w=3Dv.getResponseHeader=
("Last-Modified"),w&&(m.lastModified[e]=3Dw),w=3Dv.getResponseHeader("eta=
g"),w&&(m.etag[e]=3Dw)),204=3D=3D=3Da||"HEAD"=3D=3D=3Dk.type?x=3D"noconte=
nt":304=3D=3D=3Da?x=3D"notmodified":(x=3Du.state,r=3Du.data,s=3Du.error,j=
=3D!s)):(s=3Dx,(a||!x)&&(x=3D"error",0>a&&(a=3D0))),v.status=3Da,v.status=
Text=3D(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.sta=
tusCode(q),q=3Dvoid =
0,h&&n.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x=
]),h&&(n.trigger("ajaxComplete",[v,k]),--m.active||m.event.trigger("ajaxS=
top")))}return v},getJSON:function(a,b,c){return =
m.get(a,b,c,"json")},getScript:function(a,b){return m.get(a,void =
0,b,"script")}}),m.each(["get","post"],function(a,b){m[b]=3Dfunction(a,c,=
d,e){return m.isFunction(c)&&(e=3De||d,d=3Dc,c=3Dvoid =
0),m.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),m.each(["ajaxSta=
rt","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],funct=
ion(a,b){m.fn[b]=3Dfunction(a){return =
this.on(b,a)}}),m._evalUrl=3Dfunction(a){return =
m.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0=
})},m.fn.extend({wrapAll:function(a){if(m.isFunction(a))return =
this.each(function(b){m(this).wrapAll(a.call(this,b))});if(this[0]){var =
b=3Dm(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.inse=
rtBefore(this[0]),b.map(function(){var =
a=3Dthis;while(a.firstChild&&1=3D=3D=3Da.firstChild.nodeType)a=3Da.firstC=
hild;return a}).append(this)}return this},wrapInner:function(a){return =
this.each(m.isFunction(a)?function(b){m(this).wrapInner(a.call(this,b))}:=
function(){var =
b=3Dm(this),c=3Db.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:fu=
nction(a){var b=3Dm.isFunction(a);return =
this.each(function(c){m(this).wrapAll(b?a.call(this,c):a)})},unwrap:funct=
ion(){return =
this.parent().each(function(){m.nodeName(this,"body")||m(this).replaceWit=
h(this.childNodes)}).end()}}),m.expr.filters.hidden=3Dfunction(a){return =
a.offsetWidth<=3D0&&a.offsetHeight<=3D0||!k.reliableHiddenOffsets()&&"non=
e"=3D=3D=3D(a.style&&a.style.display||m.css(a,"display"))},m.expr.filters=
.visible=3Dfunction(a){return!m.expr.filters.hidden(a)};var =
Qc=3D/%20/g,Rc=3D/\[\]$/,Sc=3D/\r?\n/g,Tc=3D/^(?:submit|button|image|rese=
t|file)$/i,Uc=3D/^(?:input|select|textarea|keygen)/i;function =
Vc(a,b,c,d){var =
e;if(m.isArray(b))m.each(b,function(b,e){c||Rc.test(a)?d(a,e):Vc(a+"["+("=
object"=3D=3Dtypeof e?b:"")+"]",e,c,d)});else =
if(c||"object"!=3D=3Dm.type(b))d(a,b);else for(e in =
b)Vc(a+"["+e+"]",b[e],c,d)}m.param=3Dfunction(a,b){var =
c,d=3D[],e=3Dfunction(a,b){b=3Dm.isFunction(b)?b():null=3D=3Db?"":b,d[d.l=
ength]=3DencodeURIComponent(a)+"=3D"+encodeURIComponent(b)};if(void =
0=3D=3D=3Db&&(b=3Dm.ajaxSettings&&m.ajaxSettings.traditional),m.isArray(a=
)||a.jquery&&!m.isPlainObject(a))m.each(a,function(){e(this.name,this.val=
ue)});else for(c in a)Vc(c,a[c],b,e);return =
d.join("&").replace(Qc,"+")},m.fn.extend({serialize:function(){return =
m.param(this.serializeArray())},serializeArray:function(){return =
this.map(function(){var a=3Dm.prop(this,"elements");return =
a?m.makeArray(a):this}).filter(function(){var a=3Dthis.type;return =
this.name&&!m(this).is(":disabled")&&Uc.test(this.nodeName)&&!Tc.test(a)&=
&(this.checked||!W.test(a))}).map(function(a,b){var =
c=3Dm(this).val();return =
null=3D=3Dc?null:m.isArray(c)?m.map(c,function(a){return{name:b.name,valu=
e:a.replace(Sc,"\r\n")}}):{name:b.name,value:c.replace(Sc,"\r\n")}}).get(=
)}}),m.ajaxSettings.xhr=3Dvoid =
0!=3D=3Da.ActiveXObject?function(){return!this.isLocal&&/^(get|post|head|=
put|delete|options)$/i.test(this.type)&&Zc()||$c()}:Zc;var =
Wc=3D0,Xc=3D{},Yc=3Dm.ajaxSettings.xhr();a.ActiveXObject&&m(a).on("unload=
",function(){for(var a in Xc)Xc[a](void =
0,!0)}),k.cors=3D!!Yc&&"withCredentials"in =
Yc,Yc=3Dk.ajax=3D!!Yc,Yc&&m.ajaxTransport(function(a){if(!a.crossDomain||=
k.cors){var b;return{send:function(c,d){var =
e,f=3Da.xhr(),g=3D++Wc;if(f.open(a.type,a.url,a.async,a.username,a.passwo=
rd),a.xhrFields)for(e in =
a.xhrFields)f[e]=3Da.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overr=
ideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Reque=
sted-With"]=3D"XMLHttpRequest");for(e in c)void =
0!=3D=3Dc[e]&&f.setRequestHeader(e,c[e]+"");f.send(a.hasContent&&a.data||=
null),b=3Dfunction(c,e){var =
h,i,j;if(b&&(e||4=3D=3D=3Df.readyState))if(delete Xc[g],b=3Dvoid =
0,f.onreadystatechange=3Dm.noop,e)4!=3D=3Df.readyState&&f.abort();else{j=3D=
{},h=3Df.status,"string"=3D=3Dtypeof =
f.responseText&&(j.text=3Df.responseText);try{i=3Df.statusText}catch(k){i=
=3D""}h||!a.isLocal||a.crossDomain?1223=3D=3D=3Dh&&(h=3D204):h=3Dj.text?2=
00:404}j&&d(h,i,j,f.getAllResponseHeaders())},a.async?4=3D=3D=3Df.readySt=
ate?setTimeout(b):f.onreadystatechange=3DXc[g]=3Db:b()},abort:function(){=
b&&b(void 0,!0)}}}});function Zc(){try{return new =
a.XMLHttpRequest}catch(b){}}function $c(){try{return new =
a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}m.ajaxSetup({accepts:{scr=
ipt:"text/javascript, application/javascript, application/ecmascript, =
application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},conver=
ters:{"text script":function(a){return =
m.globalEval(a),a}}}),m.ajaxPrefilter("script",function(a){void =
0=3D=3D=3Da.cache&&(a.cache=3D!1),a.crossDomain&&(a.type=3D"GET",a.global=
=3D!1)}),m.ajaxTransport("script",function(a){if(a.crossDomain){var =
b,c=3Dy.head||m("head")[0]||y.documentElement;return{send:function(d,e){b=
=3Dy.createElement("script"),b.async=3D!0,a.scriptCharset&&(b.charset=3Da=
.scriptCharset),b.src=3Da.url,b.onload=3Db.onreadystatechange=3Dfunction(=
a,c){(c||!b.readyState||/loaded|complete/.test(b.readyState))&&(b.onload=3D=
b.onreadystatechange=3Dnull,b.parentNode&&b.parentNode.removeChild(b),b=3D=
null,c||e(200,"success"))},c.insertBefore(b,c.firstChild)},abort:function=
(){b&&b.onload(void 0,!0)}}}});var =
_c=3D[],ad=3D/(=3D)\?(?=3D&|$)|\?\?/;m.ajaxSetup({jsonp:"callback",jsonpC=
allback:function(){var a=3D_c.pop()||m.expando+"_"+vc++;return =
this[a]=3D!0,a}}),m.ajaxPrefilter("json jsonp",function(b,c,d){var =
e,f,g,h=3Db.jsonp!=3D=3D!1&&(ad.test(b.url)?"url":"string"=3D=3Dtypeof =
b.data&&!(b.contentType||"").indexOf("application/x-www-form-urlencoded")=
&&ad.test(b.data)&&"data");return =
h||"jsonp"=3D=3D=3Db.dataTypes[0]?(e=3Db.jsonpCallback=3Dm.isFunction(b.j=
sonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=3Db[h].replace(ad,=
"$1"+e):b.jsonp!=3D=3D!1&&(b.url+=3D(wc.test(b.url)?"&":"?")+b.jsonp+"=3D=
"+e),b.converters["script json"]=3Dfunction(){return g||m.error(e+" was =
not =
called"),g[0]},b.dataTypes[0]=3D"json",f=3Da[e],a[e]=3Dfunction(){g=3Darg=
uments},d.always(function(){a[e]=3Df,b[e]&&(b.jsonpCallback=3Dc.jsonpCall=
back,_c.push(e)),g&&m.isFunction(f)&&f(g[0]),g=3Df=3Dvoid =
0}),"script"):void =
0}),m.parseHTML=3Dfunction(a,b,c){if(!a||"string"!=3Dtypeof a)return =
null;"boolean"=3D=3Dtypeof b&&(c=3Db,b=3D!1),b=3Db||y;var =
d=3Du.exec(a),e=3D!c&&[];return =
d?[b.createElement(d[1])]:(d=3Dm.buildFragment([a],b,e),e&&e.length&&m(e)=
.remove(),m.merge([],d.childNodes))};var =
bd=3Dm.fn.load;m.fn.load=3Dfunction(a,b,c){if("string"!=3Dtypeof =
a&&bd)return bd.apply(this,arguments);var d,e,f,g=3Dthis,h=3Da.indexOf(" =
");return =
h>=3D0&&(d=3Dm.trim(a.slice(h,a.length)),a=3Da.slice(0,h)),m.isFunction(b=
)?(c=3Db,b=3Dvoid 0):b&&"object"=3D=3Dtypeof =
b&&(f=3D"POST"),g.length>0&&m.ajax({url:a,type:f,dataType:"html",data:b})=
.done(function(a){e=3Darguments,g.html(d?m("<div>").append(m.parseHTML(a)=
).find(d):a)}).complete(c&&function(a,b){g.each(c,e||[a.responseText,b,a]=
)}),this},m.expr.filters.animated=3Dfunction(a){return =
m.grep(m.timers,function(b){return a=3D=3D=3Db.elem}).length};var =
cd=3Da.document.documentElement;function dd(a){return =
m.isWindow(a)?a:9=3D=3D=3Da.nodeType?a.defaultView||a.parentWindow:!1}m.o=
ffset=3D{setOffset:function(a,b,c){var =
d,e,f,g,h,i,j,k=3Dm.css(a,"position"),l=3Dm(a),n=3D{};"static"=3D=3D=3Dk&=
&(a.style.position=3D"relative"),h=3Dl.offset(),f=3Dm.css(a,"top"),i=3Dm.=
css(a,"left"),j=3D("absolute"=3D=3D=3Dk||"fixed"=3D=3D=3Dk)&&m.inArray("a=
uto",[f,i])>-1,j?(d=3Dl.position(),g=3Dd.top,e=3Dd.left):(g=3DparseFloat(=
f)||0,e=3DparseFloat(i)||0),m.isFunction(b)&&(b=3Db.call(a,c,h)),null!=3D=
b.top&&(n.top=3Db.top-h.top+g),null!=3Db.left&&(n.left=3Db.left-h.left+e)=
,"using"in =
b?b.using.call(a,n):l.css(n)}},m.fn.extend({offset:function(a){if(argumen=
ts.length)return void =
0=3D=3D=3Da?this:this.each(function(b){m.offset.setOffset(this,a,b)});var=
 b,c,d=3D{top:0,left:0},e=3Dthis[0],f=3De&&e.ownerDocument;if(f)return =
b=3Df.documentElement,m.contains(b,e)?(typeof =
e.getBoundingClientRect!=3D=3DK&&(d=3De.getBoundingClientRect()),c=3Ddd(f=
),{top:d.top+(c.pageYOffset||b.scrollTop)-(b.clientTop||0),left:d.left+(c=
.pageXOffset||b.scrollLeft)-(b.clientLeft||0)}):d},position:function(){if=
(this[0]){var =
a,b,c=3D{top:0,left:0},d=3Dthis[0];return"fixed"=3D=3D=3Dm.css(d,"positio=
n")?b=3Dd.getBoundingClientRect():(a=3Dthis.offsetParent(),b=3Dthis.offse=
t(),m.nodeName(a[0],"html")||(c=3Da.offset()),c.top+=3Dm.css(a[0],"border=
TopWidth",!0),c.left+=3Dm.css(a[0],"borderLeftWidth",!0)),{top:b.top-c.to=
p-m.css(d,"marginTop",!0),left:b.left-c.left-m.css(d,"marginLeft",!0)}}},=
offsetParent:function(){return this.map(function(){var =
a=3Dthis.offsetParent||cd;while(a&&!m.nodeName(a,"html")&&"static"=3D=3D=3D=
m.css(a,"position"))a=3Da.offsetParent;return =
a||cd})}}),m.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},func=
tion(a,b){var c=3D/Y/.test(b);m.fn[a]=3Dfunction(d){return =
V(this,function(a,d,e){var f=3Ddd(a);return void 0=3D=3D=3De?f?b in =
f?f[b]:f.document.documentElement[d]:a[d]:void(f?f.scrollTo(c?m(f).scroll=
Left():e,c?e:m(f).scrollTop()):a[d]=3De)},a,d,arguments.length,null)}}),m=
.each(["top","left"],function(a,b){m.cssHooks[b]=3DLb(k.pixelPosition,fun=
ction(a,c){return =
c?(c=3DJb(a,b),Hb.test(c)?m(a).position()[b]+"px":c):void =
0})}),m.each({Height:"height",Width:"width"},function(a,b){m.each({paddin=
g:"inner"+a,content:b,"":"outer"+a},function(c,d){m.fn[d]=3Dfunction(d,e)=
{var f=3Darguments.length&&(c||"boolean"!=3Dtypeof =
d),g=3Dc||(d=3D=3D=3D!0||e=3D=3D=3D!0?"margin":"border");return =
V(this,function(b,c,d){var e;return =
m.isWindow(b)?b.document.documentElement["client"+a]:9=3D=3D=3Db.nodeType=
?(e=3Db.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body[=
"offset"+a],e["offset"+a],e["client"+a])):void =
0=3D=3D=3Dd?m.css(b,c,g):m.style(b,c,d,g)},b,f?d:void =
0,f,null)}})}),m.fn.size=3Dfunction(){return =
this.length},m.fn.andSelf=3Dm.fn.addBack,"function"=3D=3Dtypeof =
define&&define.amd&&define("jquery",[],function(){return m});var =
ed=3Da.jQuery,fd=3Da.$;return m.noConflict=3Dfunction(b){return =
a.$=3D=3D=3Dm&&(a.$=3Dfd),b&&a.jQuery=3D=3D=3Dm&&(a.jQuery=3Ded),m},typeo=
f b=3D=3D=3DK&&(a.jQuery=3Da.$=3Dm),m});


------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/jquery-version.js

/*=0A=
*=0A=
*   Generated by javascript=0A=
*   @file jquery.browser=0A=
*   @author TimYao <tmwoman@yeah.net>=0A=
*   @version 20160325=0A=
*=0A=
*   bug repair=0A=
*   jquery=0A=
*=0A=
*    version>=3D1.9 last version   $.browser=0A=
*=0A=
*     =E6=B5=8F=E8=A7=88=E5=99=A8=E9=AA=8C=E8=AF=81$.browser=0A=
*=0A=
* */=0A=
=0A=
(function($,global){=0A=
    if($=3D=3D=3Dglobal.jQuery)=0A=
    {=0A=
        if($.browser || $.httpData || $.handleError)=0A=
        {=0A=
            return false;=0A=
        }=0A=
    }=0A=
    $.browser =3D (function(){=0A=
        var browser_v =3D {},=0A=
            P,=0A=
            browsers =3D navigator.userAgent;=0A=
        var uaMatch=3Dfunction(a) {=0A=
            a =3D a.toLowerCase();=0A=
            a =3D /(webkit)[ \/]([\w.]+)/.exec(a) || =
/(opera)(?:.*version)?[ \/]([\w.]+)/.exec(a) || /(msie) =
([\w.]+)/.exec(a) || !/compatible/.test(a) && /(mozilla)(?:.*? =
rv:([\w.]+))?/.exec(a) || [];=0A=
            return {=0A=
                browser: a[1] || "",=0A=
                version: a[2] || "0"=0A=
            }=0A=
        };=0A=
        P =3D uaMatch(browsers);=0A=
        if(P.browser)=0A=
        {=0A=
            browser_v[P.browser] =3D true;=0A=
            browser_v['version'] =3D P.version;=0A=
        }=0A=
        if(browser_v.webkit)=0A=
        {=0A=
            browser_v.safari =3D P.browser.safari =3D true;=0A=
        }=0A=
        return browser_v;=0A=
    })();=0A=
=0A=
	// handleError  httpData =E4=BF=AE=E5=A4=8D=0A=
	 jQuery.extend({=0A=
	     handleError: function (s, xhr, status, e) {=0A=
	         if (s.error) {=0A=
	             s.error.call(s.context || s, xhr, status, e);=0A=
	         }=0A=
	         if (s.global) {=0A=
	             (s.context ? jQuery(s.context) : =
jQuery.event).trigger("ajaxError", [xhr, s, e]);=0A=
	         }=0A=
	     },=0A=
	     httpData: function (xhr, type, s) {=0A=
	         var ct =3D xhr.getResponseHeader("content-type"),=0A=
			 xml =3D type =3D=3D "xml" || !type && ct && ct.indexOf("xml") >=3D 0,=0A=
			 data =3D xml ? xhr.responseXML : xhr.responseText;=0A=
			         if (xml && data.documentElement.tagName =3D=3D "parsererror")=0A=
			             throw "parsererror";=0A=
			         if (s && s.dataFilter)=0A=
			             data =3D s.dataFilter(data, type);=0A=
			         if (typeof data =3D=3D=3D "string") {=0A=
			             if (type =3D=3D "script")=0A=
			                 jQuery.globalEval(data);=0A=
			             if (type =3D=3D "json")=0A=
			                 data =3D window["eval"]("(" + data + ")");=0A=
			         }=0A=
			         return data;=0A=
		  }=0A=
	 });=0A=
})(jQuery,window);
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/ad.js?v=1.1

=EF=BB=BFvar home_domain =3D "blog.csdn.net";
var ad_cnt =3D ad_cnt || 0;

/*CSDN=E5=B9=BF=E5=91=8A=E5=BB=B6=E8=BF=9F=E5=8A=A0=E8=BD=BD =
t:=E5=B9=BF=E5=91=8A=E7=B1=BB=E5=9E=8B=EF=BC=8C=E6=95=B0=E5=AD=97=EF=BC=9B=
id:=E5=AE=B9=E5=99=A8id*/
var Ad =3D function (t, id) {
    this.adType =3D t;
    this.containerId =3D id;
    this.adIndex =3D ad_cnt++;

    this.loadAd =3D function () {
        //document.domain =3D "csdn.net";

        var container =3D document.getElementById(this.containerId);
        var width =3D container.offsetWidth - 2 - =
container.style.paddingLeft - container.style.paddingRight;
        //var height =3D container.offsetHeight - 2 - =
container.style.paddingTop - container.style.paddingBottom;

        var frm =3D document.createElement('iframe');
        frm.id =3D "ad_frm_" + this.adIndex;
        frm.frameBorder =3D "0";
        frm.scrolling =3D "no";
        frm.style.borderWidth =3D "0px";
        frm.style.overflow =3D "hidden";
        if (width > 0) frm.style.width =3D width + "px";
        else frm.style.width =3D "98%";
        frm.style.height =3D "0px";
        frm.src =3D "http://" + home_domain + "/common/ad.html"
            + "?t=3D" + this.adType
            + "&containerId=3D" + this.containerId
            + "&frmId=3D" + frm.id;
        container.appendChild(frm);
    };
    if (jQuery) {
        jQuery((function (_ad) {
            return function () { _ad.loadAd(); }
        })(this));
    } else {
        this.loadAd();
    }
};
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://ads.csdn.net/js/tracking.js

/*=0A=
	@function adv tracking=0A=
	@editer fjj=0A=
	@create_time 20151201=0A=
**/=0A=
(function(widnow,$csdn_iteye_jq,undefined){=0A=
	function TrackAdv(){=0A=
		this.advs=3D[];  // =
=E8=A2=AB=E8=BD=BD=E5=85=A5=E5=B9=BF=E5=91=8A=E4=BD=8D=E9=9B=86=E5=90=88=0A=
		this.advFlag=3D{};  //  =
=E7=94=A8=E4=BA=8E=E8=BD=BD=E5=85=A5=E5=B9=BF=E5=91=8A=E4=BD=8D=E5=8E=BB=E9=
=87=8D=0A=
		this.dataArr=3D[]; =
//=E7=BC=93=E5=AD=98=E9=9C=80=E8=A6=81=E6=8F=90=E4=BA=A4=E6=95=B0=E6=8D=AE=
=E7=9A=84=E5=B9=BF=E5=91=8A=E5=AF=B9=E8=B1=A1=0A=
		this.dataTimer=3Dnull;=0A=
		this.swapImgSet=3Dfalse;  =
//=E7=AC=AC=E4=B8=80=E4=B8=AA=E8=BD=AE=E6=92=AD=E5=9B=BE=E5=B9=BF=E5=91=8A=
=E4=BD=8D=E8=BD=BD=E5=85=A5=E6=97=B6 =
=E8=A7=A6=E5=8F=91=E8=BD=AE=E6=92=AD=E5=9B=BE=E6=96=B9=E6=B3=95  =
=E4=B9=8B=E5=90=8E=E4=B8=8D=E5=86=8D=E4=B8=8D=E5=86=8D=E8=A7=A6=E5=8F=91=0A=
		this.init();=0A=
	}=0A=
	TrackAdv.prototype=3D{=0A=
		constructor:"Track",=0A=
		init:function(){=0A=
			var self=3Dthis;=0A=
			//=E6=BB=9A=E5=8A=A8=E5=A4=84=E7=90=86=E5=87=BD=E6=95=B0  =
=E9=87=87=E7=94=A8=E4=BA=86=E4=BA=8B=E4=BB=B6=E8=8A=82=E6=B5=81 =
=E6=AF=8F=E9=9A=94100=E6=AF=AB=E7=B1=B3=E8=AE=A1=E7=AE=97=E4=B8=80=E6=AC=A1=0A=
			var scrollHandle=3D(function(){=0A=
				var timer=3Dnull;=0A=
				return function(){=0A=
					if(timer){=0A=
						return false;=0A=
					}=0A=
					timer=3DsetTimeout(function(){=0A=
						timer=3Dnull;=0A=
						/*if(self.advs.length =3D=3D=3D 0){=0A=
							return false;=0A=
						}=0A=
						for(var i=3D0;i<self.advs.length;i++){=0A=
=0A=
							if(self.advs[i].view && self.posTest(self.advs[i])){=0A=
								if(self.advs[i].ele.data("swapimg") && =
!self.advs[i].ele.hasClass("curSwap")){=0A=
									continue;=0A=
								}=0A=
								self.advs[i].viewed=3Dtrue;=0A=
								//self.sendData(self.advs[i]);=0A=
								if(!self.dataTimer){=0A=
									self.discreteSend();=0A=
								}=0A=
								self.dataArr.push(self.advs[i]);=0A=
=0A=
							}=0A=
=0A=
						}*/=0A=
						self.insertData();=0A=
					},100)=0A=
				}=0A=
			})();=0A=
			//=E5=85=B3=E9=97=AD=E6=B5=8F=E8=A7=88=E5=99=A8 =
=E5=85=B3=E9=97=AD=E5=BD=93=E5=89=8D=E9=A1=B5 =
=E8=B7=B3=E8=BD=AC=E5=88=B0=E5=85=B6=E4=BB=96=E9=A1=B5=E9=9D=A2=E6=97=B6 =
=E5=B0=86=E6=B2=A1=E6=9C=89=E6=8F=90=E4=BA=A4=E7=9A=84=E6=95=B0=E6=8D=AE=E4=
=B8=80=E6=AC=A1=E8=A1=8C=E6=8F=90=E4=BA=A4=0A=
			var unloadHandle=3Dfunction(){=0A=
				if(self.dataArr.length =3D=3D=3D0){=0A=
					return false;=0A=
				}=0A=
				for(var i=3D0,len=3Dself.dataArr.length;i<len;i++){=0A=
					self.sendData(self.dataArr[i]);=0A=
				}=0A=
				self.dataArr=3D[];=0A=
			}=0A=
			//$csdn_iteye_jq(window).on("scroll",scrollHandle);=0A=
			//$csdn_iteye_jq(window).on("unload",unloadHandle);=0A=
		},=0A=
		//=E8=BD=BD=E5=85=A5=E5=B9=BF=E5=91=8A=E5=AF=B9=E8=B1=A1=0A=
		addAdvs:function(eleStr,opt){=0A=
			var self=3Dthis,=0A=
				eleStr=3DeleStr || ".J_adv",=0A=
				opt=3Dtypeof opt =3D=3D=3D "object"?opt:{},=0A=
				oAdvs=3D$csdn_iteye_jq(eleStr),=0A=
				nAdvLen=3DoAdvs.length,=0A=
				preAdr=3Ddocument.referrer || "-";   // =
=E5=89=8D=E4=B8=80=E4=B8=AA=E6=96=87=E6=A1=A3=E5=9C=B0=E5=9D=80=0A=
			if(nAdvLen =3D=3D=3D 0){=0A=
				return false;=0A=
			}=0A=
			for(var i=3D0;i<nAdvLen;i++){=0A=
				var adv=3D{};=0A=
				var mod=3D$csdn_iteye_jq(oAdvs[i]).data("mod");=0A=
				if(this.advFlag[mod]){=0A=
					return false;=0A=
				}=0A=
				adv.ele=3D$csdn_iteye_jq(oAdvs[i]);=0A=
				adv.top=3D$csdn_iteye_jq(oAdvs[i]).offset().top;=0A=
				=
adv.height=3D$csdn_iteye_jq(oAdvs[i]).height()?$csdn_iteye_jq(oAdvs[i]).h=
eight():$csdn_iteye_jq(oAdvs[i]).find("img").height();=0A=
				adv.view=3Dtypeof $csdn_iteye_jq(oAdvs[i]).data("view") =3D=3D=3D =
"undefined" ?true:$csdn_iteye_jq(oAdvs[i]).data("view");  //  =
=E5=AF=B9=E5=BA=94=E5=B9=BF=E5=91=8A=E4=BD=8D=E6=98=AF=E5=90=A6=E9=9C=80=E8=
=A6=81=E6=9B=9D=E5=85=89=0A=
				adv.viewed=3Dfalse;   =
//=E8=A2=AB=E6=9B=9D=E5=85=89=E6=97=B6=E4=B8=BAtrue=0A=
				adv.data=3D{=0A=
					uid:"-",=0A=
					ref:preAdr,=0A=
					mod:adv.ele.data("mod") || "-",=0A=
					mtp:opt.mtp || adv.ele.data("mtp") || 1,=0A=
					con:self.exportData(adv),=0A=
					ck:"-"=0A=
				};=0A=
				if(adv.ele.data("swapimg") && !this.swapImgSet){=0A=
					=
//=E5=8F=AA=E8=A7=A6=E5=8F=91=E4=B8=80=E6=AC=A1=E8=BD=AE=E6=92=AD=E5=9B=BE=
=E6=96=B9=E6=B3=95=0A=
					//adv.ele.addClass("curSwap").parent().css("z-index",100);=0A=
					csdn.SwapImage.swap({=0A=
		        swapRoot: $csdn_iteye_jq( '.hot' )=0A=
		    	});=0A=
					this.swapImgSet=3Dtrue;=0A=
				}=0A=
				if(this.posTest(adv) && adv.view){=0A=
					if($csdn_iteye_jq(oAdvs[i]).data("swapimg")){  =
//=E6=98=AF=E8=BD=AE=E6=92=AD=E5=9B=BE=E5=B9=BF=E5=91=8A=E4=BD=8D=E7=9A=84=
=E6=83=85=E5=86=B5=0A=
						if($csdn_iteye_jq(oAdvs[i]).hasClass("curSwap")){=0A=
							adv.viewed=3Dtrue;=0A=
							this.sendData(adv);=0A=
							/*this.dataArr.push(adv);=0A=
							if(!this.dataTimer){=0A=
								this.discreteSend();=0A=
							}*/=0A=
=0A=
						}=0A=
					}else{ =
//=E5=A6=82=E6=9E=9C=E4=B8=8D=E6=98=AF=E8=BD=AE=E6=92=AD=E5=9B=BE=E7=9A=84=
=E5=8F=AA=E8=A6=81=E8=BF=9B=E5=85=A5=E5=B1=8F=E5=B9=95=E5=8C=BA=E5=9F=9F=E5=
=B0=B1=E7=AE=97=E6=9B=9D=E5=85=89=0A=
						adv.viewed=3Dtrue;=0A=
=0A=
						=
/*//=E5=A6=82=E6=9E=9C=E5=AE=9A=E6=97=B6=E6=8F=90=E4=BA=A4=E6=95=B0=E6=8D=
=AE=E7=9A=84=E5=AE=9A=E6=97=B6=E5=99=A8=E6=B2=A1=E6=9C=89=E5=BC=80=E5=90=AF=
=E7=9A=84=E8=AF=9D=EF=BC=8C=E5=BC=80=E5=90=AF=E5=AE=9A=E6=97=B6=E5=99=A8=0A=
						this.dataArr.push(adv);=0A=
						if(!this.dataTimer){=0A=
							this.discreteSend();=0A=
						}*/=0A=
=0A=
						this.sendData(adv);=0A=
					}=0A=
=0A=
				}=0A=
				this.advs.push(adv);=0A=
				this.linkNodes(adv);=0A=
				//this.expAdvs.push(adv);=0A=
				this.advFlag[mod]=3Dtrue;=0A=
			}=0A=
		},=0A=
=0A=
		=
//=E5=88=A4=E6=96=AD=E5=B9=BF=E5=91=8A=E4=BD=8D=E6=98=AF=E5=90=A6=E8=BF=9B=
=E5=85=A5=E5=B1=8F=E5=B9=95 =
=E8=BF=9B=E5=85=A5=E5=8D=B3=E5=B0=86=E5=B9=BF=E5=91=8A=E5=AF=B9=E8=B1=A1=E7=
=BC=93=E5=AD=98=E5=88=B0(dataArr)=E4=B8=AD=0A=
		insertData:function(){=0A=
			var self=3Dthis;=0A=
			if(self.advs.length =3D=3D=3D 0){=0A=
				return false;=0A=
			}=0A=
			for(var i=3D0;i<self.advs.length;i++){=0A=
				if(self.advs[i].view && self.posTest(self.advs[i])){=0A=
					if(self.advs[i].ele.data("swapimg") && =
!self.advs[i].ele.hasClass("curSwap")){=0A=
						continue;=0A=
					}=0A=
					self.advs[i].viewed=3Dtrue;=0A=
					self.sendData(self.advs[i]);=0A=
					=
/*//=E5=B0=86=E5=B9=BF=E5=91=8A=E5=AF=B9=E8=B1=A1=E6=B7=BB=E5=8A=A0=E5=88=
=B0=E6=95=B0=E6=8D=AE=E9=98=9F=E5=88=97(dataArr)=E5=8D=B3=E5=8F=AF=E5=B9=B6=
=E7=AD=89=E5=BE=85=E6=8F=90=E4=BA=A4=0A=
					self.dataArr.push(self.advs[i]);=0A=
=0A=
					=
//=E5=A6=82=E6=9E=9C=E5=AE=9A=E6=97=B6=E6=8F=90=E4=BA=A4=E6=95=B0=E6=8D=AE=
=E7=9A=84=E5=AE=9A=E6=97=B6=E5=99=A8=E6=B2=A1=E6=9C=89=E5=BC=80=E5=90=AF=E7=
=9A=84=E8=AF=9D=EF=BC=8C=E5=BC=80=E5=90=AF=E5=AE=9A=E6=97=B6=E5=99=A8=0A=
					if(!self.dataTimer){=0A=
						self.discreteSend();=0A=
					}*/=0A=
=0A=
				}=0A=
=0A=
			}=0A=
		},=0A=
		=
//=E6=AF=8F=E9=9A=941=E7=A7=92=E6=8F=90=E4=BA=A4=E4=B8=80=E6=AC=A1=E6=9B=9D=
=E5=85=89=E6=95=B0=E6=8D=AE(1=E6=9D=A1)=0A=
		discreteSend:function(){=0A=
			var self=3Dthis;=0A=
			var discreteHandle=3Dfunction(){=0A=
				if(self.dataArr.length =3D=3D=3D0){=0A=
					clearInterval(self.dataTimer);=0A=
					self.dataTimer=3Dnull;=0A=
					return false;=0A=
				}=0A=
				var i=3D0;=0A=
				while(i<1){=0A=
					if(self.dataArr[0]){=0A=
						self.sendData(self.dataArr[0]);=0A=
						self.dataArr.shift();=0A=
						i++;=0A=
					}else{=0A=
						clearInterval(self.dataTimer);=0A=
						self.dataTimer=3Dnull;=0A=
						break;=0A=
					}=0A=
				}=0A=
			}=0A=
			this.dataTimer=3DsetInterval(discreteHandle,20);=0A=
		},=0A=
		// =
=E8=8E=B7=E5=8F=96=E6=9B=9D=E5=85=89=E5=86=85=E5=AE=B9=E5=8D=B3=E5=B9=BF=E5=
=91=8A=E4=BD=8D=E4=B8=AD=E6=89=80=E6=9C=89=E8=BF=9E=E6=8E=A5=E7=9A=84=E5=86=
=85=E5=AE=B9=0A=
		exportData:function(adv){=0A=
			var con=3Dadv.ele.data("con") || "-";=0A=
			return =
!!adv.ele.data("order")?con+",ad_order_"+adv.ele.data("order"):con+"-"=0A=
		},=0A=
		// =
=E6=B5=8B=E8=AF=95=E5=B9=BF=E5=91=8A=E4=BD=8D=E6=98=AF=E5=90=A6=E5=9C=A8=E6=
=9B=9D=E5=85=89=E5=8C=BA=E5=9F=9F=0A=
		posTest:function(adv){=0A=
			//=E4=BF=AE=E6=94=B9=E6=9B=9D=E5=85=89=E8=A7=84=E5=88=99=0A=
			if(adv.viewed){=0A=
				return false;=0A=
			}else{=0A=
				return true;=0A=
			}=0A=
		},=0A=
		// =
=E8=8E=B7=E5=8F=96=E5=B9=BF=E5=91=8A=E4=BD=8D=E4=B8=AD=E6=89=80=E6=9C=89=E7=
=9A=84=E8=BF=9E=E6=8E=A5=E4=B8=94=E6=B7=BB=E5=8A=A0click=E4=BA=8B=E4=BB=B6=0A=
		linkNodes:function(adv){=0A=
			var self=3Dthis;=0A=
			var aLinks=3Dadv.ele.find("a");=0A=
			var iframeLinks=3Dadv.ele.find("iframe")=0A=
			if(aLinks.length =3D=3D=3D 0 && iframeLinks.length =3D=3D=3D 0 ){=0A=
				return false;=0A=
			}=0A=
			aLinks.each(function(){=0A=
				if($csdn_iteye_jq(this).attr("target") =3D=3D undefined){=0A=
					$csdn_iteye_jq(this).attr("target","_blank");=0A=
				}=0A=
				$csdn_iteye_jq(this).on("click",function(){=0A=
					con=3Dself.linkData(this);=0A=
					self.sendData(adv,con);=0A=
				})=0A=
			})=0A=
		},=0A=
		=
//=E8=8E=B7=E5=8F=96=E7=82=B9=E5=87=BB=E5=85=83=E7=B4=A0=E7=9A=84=E5=86=85=
=E5=AE=B9=0A=
		linkData:function(that){=0A=
			var ck=3D""+that.href;=0A=
			var conStr;=0A=
			if($csdn_iteye_jq(that).find("img").length){=0A=
				conStr=3D$csdn_iteye_jq(that).find("img").eq(0).attr("title") || =
$csdn_iteye_jq(that).find("img").eq(0).attr("alt")=0A=
=0A=
			}else{=0A=
				conStr=3D$csdn_iteye_jq(that).html();=0A=
			}=0A=
			ck+=3DconStr?";"+conStr:"";=0A=
			return ck;=0A=
		},=0A=
		//=E8=8E=B7=E5=8F=96=E7=94=A8=E6=88=B7ID=0A=
		getUserId:function(){=0A=
			var result=3D/(; =
)?(UserName|_javaeye_cookie_id_)=3D([^;]+)/.exec(widnow.document.cookie);=0A=
			var uid=3D (result !=3D null ? result[3] : void 0) || '-';=0A=
			return uid;=0A=
		},=0A=
		//=E6=8F=90=E4=BA=A4=E6=95=B0=E6=8D=AE=0A=
		sendData:function(adv,con){=0A=
			adv.data.uid=3Dthis.getUserId();=0A=
			protocol=3D"http:";=0A=
			if(typeof con =3D=3D=3D "string"){=0A=
				adv.data.ck=3Dcon;=0A=
			}=0A=
			var dataStr=3Dthis.paramData(adv.data);=0A=
			var img =3Dnew Image();=0A=
			img.onload=3Dimg.onerror=3Dfunction(){=0A=
				img.onload=3Dimg.onerror=3Dnull;=0A=
				img=3Dnull;=0A=
			}=0A=
			if(typeof con =3D=3D=3D "string"){=0A=
				img.src=3Dprotocol+"//dc.csdn.net/re?"+dataStr;=0A=
			}=0A=
		},=0A=
		=
//=E6=95=B0=E6=8D=AE=E8=BD=AC=E6=8D=A2=E4=B8=BA=E5=AD=97=E7=AC=A6=E4=B8=B2=
=E5=BD=A2=E5=BC=8F=0A=
		paramData:function(data){=0A=
			var dataArr=3D[];=0A=
			for(var key in data){=0A=
				var text=3Dkey+"=3D"+data[key];=0A=
				text.replace(/^\s+|\s+$/g,"");=0A=
				dataArr.push(text);=0A=
			}=0A=
			return dataArr.join("&")=0A=
		}=0A=
		//=E5=A4=84=E7=90=86url=0A=
		/*handleUrl:function(url){=0A=
			if(typeof url =3D=3D=3D "string" && url.length >0 ){=0A=
				var hostStr=3Durl.split("://")[1];=0A=
				hostName=3DhostStr.split(".")[0];=0A=
				strArr=3DhostStr.split("?")[0].split("/");=0A=
				fileName=3DstrArr[strArr.length-1];=0A=
				return hostName+"_"+fileName;=0A=
			}else{=0A=
				return false;=0A=
			}=0A=
		}*/=0A=
	}=0A=
	//=E8=BD=AE=E6=92=AD=E5=9B=BE   =E6=B7=A1=E5=85=A5=E6=B7=A1=E5=87=BA=0A=
/*	function SwapImg(opts,obj){=0A=
		if(!(this instanceof SwapImg)){=0A=
			return new SwapImg(opts,obj);=0A=
=0A=
		}=0A=
		this.obj=3Dobj;=0A=
		this.parentSelector=3Dopts.parentSelector || ".hot";=0A=
		this.swapSelector=3Dopts.swapSelector || ".hot .J_adv";=0A=
		this.swapCur=3D"curSwap";=0A=
		this.iconSelector=3Dopts.iconSelector || ".js-tagRoot";=0A=
		this.iconCur=3D"current";=0A=
		this.duration=3Dopts.duration || 500;=0A=
		this.interval=3Dopts.interval || 3000;=0A=
		this.lastIndex=3D-1;=0A=
		this.index=3D0;=0A=
		this.swapFlag=3Dfalse; =
//=E6=98=AF=E5=90=A6=E6=AD=A3=E5=9C=A8=E8=BD=AE=E6=92=AD=E4=B8=AD=0A=
		this.timer=3Dnull;=0A=
		this.init();=0A=
	}=0A=
	SwapImg.prototype=3D{=0A=
		constructor:SwapImg,=0A=
		init:function(){=0A=
			var self=3Dthis,=0A=
				swapNode=3D$csdn_iteye_jq(this.swapSelector),=0A=
				swapLen=3DswapNode.length,=0A=
				iconNode=3D$csdn_iteye_jq(this.iconSelector),=0A=
				iconStr=3D"";=0A=
			for(var i=3D0;i<swapLen;i++){=0A=
				iconStr+=3Di=3D=3D0?"<li class=3D'current'></li>":"<li></li>";=0A=
			}=0A=
			iconNode.html(iconStr);=0A=
			iconNode.find("li").each(function(i){=0A=
				$csdn_iteye_jq(this).on("click",function(){=0A=
					//clearInterval(self.timer);=0A=
					if($csdn_iteye_jq(this).hasClass("current") || self.swapFlag ){=0A=
						return false;=0A=
					}=0A=
					self.swapHandle(i);=0A=
				})=0A=
			});=0A=
			self.timer=3DsetInterval(function(){=0A=
				self.swapHandle();=0A=
			},self.interval)=0A=
=0A=
			$csdn_iteye_jq(self.parentSelector).hover(function(){=0A=
				clearInterval(self.timer)=0A=
			},function(){=0A=
				self.timer=3DsetInterval(function(){=0A=
					self.swapHandle();=0A=
				},self.interval)=0A=
			});=0A=
		},=0A=
		swapHandle:function(i){=0A=
			var self=3Dthis;=0A=
			self.swapFlag=3Dtrue;=0A=
			self.lastIndex=3Dself.index;=0A=
			self.index=3Dtypeof i =3D=3D=3D =
'number'?i:++self.index%$(self.swapSelector).length;  //i || ....=0A=
			//self.index=3Di || ++self.index%$(self.swapSelector).length;=0A=
			=
$csdn_iteye_jq(self.iconSelector).find("li").removeClass("current").eq(se=
lf.index).addClass("current");=0A=
			=
$csdn_iteye_jq(self.swapSelector).removeClass("curSwap").eq(self.index).a=
ddClass("curSwap");=0A=
			=
$csdn_iteye_jq(self.swapSelector).eq(self.index).animate({opacity:1},self=
.duration,function(){=0A=
				//$csdn_iteye_jq(this).parent().css("z-index",100)=0A=
				=
$csdn_iteye_jq(this).parent().css({"position":"absolute","z-index":"100",=
"height":"200","top":"0","left":"0"})=0A=
			});=0A=
			=
$csdn_iteye_jq(self.swapSelector).eq(self.lastIndex).animate({opacity:0},=
self.duration,function(){=0A=
				$csdn_iteye_jq(this).parent().css("z-index",0)=0A=
				if(self.obj && typeof self.obj.insertData =3D=3D=3D "function"){=0A=
					self.obj.insertData();=0A=
				}=0A=
				self.swapFlag=3Dfalse;=0A=
			})=0A=
		}=0A=
	}*/=0A=
	widnow.CSDN=3Dwidnow.CSDN?widnow.CSDN:{};=0A=
	return window.CSDN.track=3Dnew TrackAdv();=0A=
})(window,jQuery)
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/public/common/toolbar/js/html.js

var _gaq =3D [];
var userAgent =3D navigator.userAgent.toLowerCase();
// if(userAgent =3D=3D null || userAgent =3D=3D ''){
// //
// }else{
//     if(userAgent.indexOf("android") !=3D -1 || =
userAgent.indexOf("ios") !=3D -1 || userAgent.indexOf("iphone") !=3D -1 =
|| userAgent.indexOf("ipad") !=3D -1 || userAgent.indexOf("windows =
phone") !=3D -1 ){

//   	}else{
//   	  //google =E7=BB=9F=E8=AE=A1start
//   	  =
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=3Dr;i[r]=3Di[r]||func=
tion(){
//   		  (i[r].q=3Di[r].q||[]).push(arguments)},i[r].l=3D1*new =
Date();a=3Ds.createElement(o),
//   		  =
m=3Ds.getElementsByTagName(o)[0];a.async=3D1;a.src=3Dg;m.parentNode.inser=
tBefore(a,m)
//   		  =
})(window,document,'script','//www.google-analytics.com/analytics.js','ga=
');

//   		  ga('create', 'UA-64962204-1', 'auto');
//   		  ga('send', 'pageview');
//         //google =E7=BB=9F=E8=AE=A1end
//    }
// }

//tag=E6=8E=A8=E8=8D=90=E5=BC=B9=E7=AA=97
(function(){
var protocol =3D location.protocol.substr(0, 4) =3D=3D=3D 'http' ? '' : =
'http:';
$.getScript(protocol + =
'//csdnimg.cn/public/common/tag-suggest-pop/js/main.js?'+(new =
Date()/120000|0));
})();

!(function(){
  var currUser=3D{
      userName:"",
      userNick:'<a class=3D"set-nick" =
href=3D"https://passport.csdn.net/account/profile">=E8=AE=BE=E7=BD=AE=E6=98=
=B5=E7=A7=B0<span class=3D"write-icon"></span></a>',
      userInfo:"",
      desc : '<a class=3D"fill-dec" href=3D"//my.csdn.net" =
target=3D"_blank">=E7=BC=96=E8=BE=91=E8=87=AA=E6=88=91=E4=BB=8B=E7=BB=8D=EF=
=BC=8C=E8=AE=A9=E6=9B=B4=E5=A4=9A=E4=BA=BA=E4=BA=86=E8=A7=A3=E4=BD=A0<spa=
n class=3D"write-icon"></span></a>',
      avatar:"//c.csdnimg.cn/public/common/toolbar/images/100x100.jpg"
    };
  var prodLogo =3D "none";
  var $oScriptTag =3D$("#toolbar-tpl-scriptId");
  var skin =3D$oScriptTag.attr("skin")=3D=3D"black"?" =
csdn-toolbar-skin-black ":"";
  var fixed =3D $oScriptTag.attr("fixed")=3D=3D"top"?" navbar-fixed-top =
":"";
  var prodIndex=3D =
$oScriptTag.attr("domain")?$oScriptTag.attr("domain"):window.location.pro=
tocol+"//"+window.location.host;
      prodIndex+=3D'?ref=3Dtoolbar_logo';
  var getCookie =3Dfunction =
(objName){//=E8=8E=B7=E5=8F=96=E6=8C=87=E5=AE=9A=E5=90=8D=E7=A7=B0=E7=9A=84=
cookie=E7=9A=84=E5=80=BC
      var arrStr =3D document.cookie.split("; ");
      for(var i =3D 0;i < arrStr.length;i ++){
      var temp =3D arrStr[i].split("=3D");
      if(temp[0] =3D=3D objName) return decodeURI(temp[1]);
      }
  }
  var setCookie =3D function (name,value) {
    var Days =3D 30;
    var exp =3D new Date();
    exp.setTime(exp.getTime() + Days*24*60*60*1000);
    document.cookie =3D name + "=3D"+ escape (value) + ";expires=3D" + =
exp.toGMTString();// + ";domain=3D.csdn.net;path=3D/";
  }
  var HTMLEncode =3Dfunction(str) {
      var s =3D "";
      if(str.length =3D=3D 0) return "";
      s =3D str.replace(/&/g, "&amp;").replace(/</g, =
"&lt;").replace(/>/g, "&gt;").replace(/\'/g, "&#39;").replace(/\"/g, =
"&quot;");
      return s;
    }
  var AUtoAvatar =3D function(AU){
    if(!AU||!currUser.userName){
      return false;
    }
    var _AUPath =3D AU.split("").join("/");
    var userName =3D currUser.userName&&currUser.userName.toLowerCase();
    return "http://avatar.csdn.net/"+_AUPath+"/2_"+userName+".jpg";
  }
  var hasLogin =3D false;
  var loginMark =3D"unlogin";
  function checkLogin(callback) {
          currUser.userNick =3D getCookie("UserNick") =
||currUser.userNick;
          currUser.userName =3D getCookie("UserName") || =
currUser.userName;
          currUser.userInfo =3D getCookie("UserInfo") || =
currUser.userInfo;
          currUser.avatar =3D AUtoAvatar(getCookie("AU")) || =
currUser.avatar;
          currUser.desc =3D getCookie("UD") || currUser.desc;
          if(getCookie("UD")){
            currUser.desc =3D =
HTMLEncode(decodeURIComponent(currUser.desc).replace(/\+/g," "));
          }
          callback(currUser);
    }
  checkLogin(function(currUser){
    if(currUser.userName&&currUser.userInfo){
        hasLogin =3D true;
    }
    loginMark =3D hasLogin?"":"unlogin";
  })

  /*
  * init pord logo
  */
  var prodJSON =3D {
      "blog" : "blog-icon",
      "download" : "down-icon",
      "bbs" : "bbs-icon",
      "my" :"space-icon",
      "code" : "code-icon",
      "share" : "share-icon",
      "tag" : "tag-icon",
      "dashboard":"dashboard-icon",
      "news" : "news-icon",
      "tag" : "tag-icon",
      "ask" : "ask-icon",
      "notify" : "notify-icon"
  }
  if(prodJSON[$oScriptTag.attr("prod")]){
    =
prodLogo=3DprodJSON[$oScriptTag.attr("prod")]||$oScriptTag.attr("prod");
  }

  // $( 'head' ).append( '<link rel=3D"stylesheet" =
href=3D"//csdnimg.cn/public/common/toolbar/css/font-awesome.min.css">' =
);
  // =
=E6=B3=A8=E5=86=8Curl=EF=BC=8Chttps://passport.csdn.net/account/register?=
ref=3Dtoolbar

  var tpl =3D'\<div class=3D"csdn-toolbar'+skin+fixed+'">\
        <div class=3D"container row center-block ">\
          <div class=3D"col-md-3 pull-left logo clearfix"><a =
href=3D"http://www.csdn.net?ref=3Dtoolbar" =
title=3D"CSDN=E9=A6=96=E9=A1=B5" target=3D"_blank" class=3D"icon"></a><a =
title=3D"=E9=A2=91=E9=81=93=E9=A6=96=E9=A1=B5" href=3D"'+prodIndex+'" =
class=3D"img '+prodLogo+'"></a></div>\
          <div class=3D"pull-right login-wrap '+loginMark+'">\
            <ul class=3D"btns">\
              <li class=3D"loginlink"><a =
href=3D"https://passport.csdn.net/account/login?ref=3Dtoolbar" =
target=3D"_top">=E7=99=BB=E5=BD=95&nbsp;</a>|<a  target=3D"_top" =
href=3D"http://passport.csdn.net/account/mobileregister?ref=3Dtoolbar&act=
ion=3DmobileRegister">&nbsp;=E6=B3=A8=E5=86=8C</a></li>\
              <li class=3D"search">\
                <div class=3D"icon on-search-icon">\
                  <div class=3D"wrap">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <form action=3D"http://so.csdn.net/search" =
method=3D"get" target=3D"_blank">\
                      <input type=3D"hidden" value=3D"toolbar" =
name=3D"ref" accesskey=3D"2">\
                      <div class=3D"border">\
                        <input placeholder=3D"=E6=90=9C=E7=B4=A2" =
type=3D"text" value=3D"" name=3D"q" accesskey=3D"2"><span =
class=3D"icon-enter-sm"></span>\
                      </div>\
                    </form>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"favor">\
                <div class=3D"icon on-favor-icon">\
                  <div class=3D"wrap">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <div style=3D"display:none;" =
class=3D"favor-success"><span =
class=3D"msg">=E6=94=B6=E8=97=8F=E6=88=90=E5=8A=9F</span>\
                      <div class=3D"btns"><span class=3D"btn btn-primary =
ok">=E7=A1=AE=E5=AE=9A</span></div>\
                    </div>\
                    <div style=3D"display:none;" =
class=3D"favor-failed"><span class=3D"icon-danger-lg"></span><span =
class=3D"msg">=E6=94=B6=E8=97=8F=E5=A4=B1=E8=B4=A5=EF=BC=8C=E8=AF=B7=E9=87=
=8D=E6=96=B0=E6=94=B6=E8=97=8F</span>\
                      <div class=3D"btns"><span class=3D"btn btn-primary =
ok">=E7=A1=AE=E5=AE=9A</span></div>\
                    </div>\
                    <form role=3D"form" class=3D"form-horizontal =
favor-form">\
                      <div class=3D"form-group">\
                        <div class=3D"clearfix">\
                          <label for=3D"input-title" class=3D"col-sm-2 =
control-label">=E6=A0=87=E9=A2=98</label>\
                          <div class=3D"col-sm-10">\
                            <input id=3D"inputTitle" type=3D"text" =
placeholder=3D"" class=3D"title form-control">\
                          </div>\
                        </div>\
                        <div class=3D"alert =
alert-danger"><strong></strong>=E6=A0=87=E9=A2=98=E4=B8=8D=E8=83=BD=E4=B8=
=BA=E7=A9=BA</div>\
                      </div>\
                      <div class=3D"form-group">\
                        <label for=3D"input-url" class=3D"col-sm-2 =
control-label">=E7=BD=91=E5=9D=80</label>\
                        <div class=3D"col-sm-10">\
                          <input id=3D"input-url" type=3D"text" =
placeholder=3D"" class=3D"url form-control">\
                        </div>\
                      </div>\
                      <div class=3D"form-group">\
                        <label for=3D"input-tag" class=3D"col-sm-2 tag =
control-label">=E6=A0=87=E7=AD=BE</label>\
                        <div class=3D"col-sm-10">\
                          <input id=3D"input-tag" type=3D"text" =
class=3D"form-control tag">\
                        </div>\
                      </div>\
                      <div class=3D"form-group">\
                        <label for=3D"input-description" =
class=3D"description col-sm-2 control-label">=E6=91=98=E8=A6=81</label>\
                        <div class=3D"col-sm-10">\
                          <textarea id=3D"input-description" =
class=3D"form-control description"></textarea>\
                        </div>\
                      </div>\
                      <div class=3D"form-group">\
                        <div class=3D"col-sm-offset-2 col-sm-10 ft">\
                          <div class=3D"col-sm-4 pull-left">\
                            <div class=3D"checkbox">\
                              <label>\
                                <input type=3D"checkbox" name=3D"share" =
checked=3D"checked" class=3D"share">=E5=85=AC=E5=BC=80\
                              </label>\
                            </div>\
                          </div>\
                          <div class=3D"col-sm-8 pull-right =
favor-btns">\
                            <button type=3D"button" class=3D"cancel btn =
btn-default">=E5=8F=96=E6=B6=88</button>\
                            <button type=3D"submit" class=3D"submit btn =
btn-primary">=E6=94=B6=E8=97=8F</button>\
                          </div>\
                        </div>\
                      </div>\
                    </form>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"notify">\
                <div style=3D"display:none" class=3D"number"></div>\
                <div style=3D"display:none" =
class=3D"icon-hasnotes-sm"></div>\
                <div id=3D"header_notice_num"></div>\
                <div class=3D"icon on-notify-icon">\
                  <div class=3D"wrap">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <div id=3D"note1" class=3D"csdn_note">\
                      <div class=3D"box"></div>\
                    </div>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"ugc">\
                <div class=3D"icon on-ugc-icon">\
                  <div class=3D"wrap clearfix">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <dl>\
                      <dt><a =
href=3D"http://geek.csdn.net/news/expert?ref=3Dtoolbar" =
target=3D"_blank" class=3D"p-news clearfix" style=3D"display:none;"><em =
class=3D"icon"></em><span>=E5=88=86=E4=BA=AB=E8=B5=84=E8=AE=AF</span></a>=
</dt>\
                      <dt style=3D"border: none;"><a =
href=3D"http://u.download.csdn.net/upload?ref=3Dtoolbar" =
target=3D"_blank" class=3D"p-doc clearfix"><em =
class=3D"icon"></em><span>=E4=BC=A0PPT/=E6=96=87=E6=A1=A3</span></a></dt>=
\
                      <dt><a =
href=3D"http://bbs.csdn.net/topics/new?ref=3Dtoolbar" target=3D"_blank" =
class=3D"p-ask clearfix"><em =
class=3D"icon"></em><span>=E6=8F=90=E9=97=AE=E9=A2=98</span></a></dt>\
                      <dt><a =
href=3D"http://write.blog.csdn.net/postedit?ref=3Dtoolbar" =
target=3D"_blank" class=3D"p-blog clearfix"><em =
class=3D"icon"></em><span>=E5=86=99=E5=8D=9A=E5=AE=A2</span></a></dt>\
                      <dt><a =
href=3D"http://u.download.csdn.net/upload?ref=3Dtoolbar" =
target=3D"_blank" class=3D"p-src clearfix"><em =
class=3D"icon"></em><span>=E4=BC=A0=E8=B5=84=E6=BA=90</span></a></dt>\
                      <dt><a =
href=3D"https://code.csdn.net/projects/new?ref=3Dtoolbar" =
target=3D"_blank" class=3D"c-obj clearfix"><em =
class=3D"icon"></em><span>=E5=88=9B=E5=BB=BA=E9=A1=B9=E7=9B=AE</span></a>=
</dt>\
                      <dt><a =
href=3D"https://code.csdn.net/snippets/new?ref=3Dtoolbar" =
target=3D"_blank" class=3D"c-code clearfix"><em =
class=3D"icon"></em><span>=E5=88=9B=E5=BB=BA=E4=BB=A3=E7=A0=81=E7=89=87</=
span></a></dt>\
                    </dl>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"profile">\
                <div class=3D"icon on-profile-icon"><img =
src=3D"'+currUser.avatar+'" class=3D"curr-icon-img">\
                  <div class=3D"wrap clearfix">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <div class=3D"bd">\
                      <dl class=3D"clearfix">\
                        <dt class=3D"pull-left img"><a target=3D"_blank" =
href=3D"http://my.csdn.net?ref=3Dtoolbar" class=3D"avatar"><img =
src=3D"'+currUser.avatar+'"></a></dt>\
                        <dd class=3D"info" style=3D"border: none;"><a =
target=3D"_blank" href=3D"http://my.csdn.net?ref=3Dtoolbar" =
class=3D"nickname">'+currUser.userNick+'</a><span =
class=3D"dec">'+currUser.desc+'</span></dd>\
                      </dl>\
                    </div>\
                    <div class=3D"ft clearfix"><a target=3D"_blank" =
href=3D"http://my.csdn.net/my/account/changepwd?ref=3Dtoolbar" =
class=3D"pull-left"><span =
class=3D"icon-cog"></span>=E5=B8=90=E5=8F=B7=E8=AE=BE=E7=BD=AE</a><a =
href=3D"https://passport.csdn.net/account/logout?ref=3Dtoolbar"  =
target=3D"_top" class=3D"pull-left" style=3D"margin-left:132px; =
width:18px; height:27px; white-space:nowrap; overflow:hidden;"><span =
class=3D"icon-signout"></span><span =
class=3D"out">=E9=80=80=E5=87=BA</span></a></div>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"apps">\
                <div id=3D"chasnew123" class=3D"hasnew"></div>\
                <div id=3D"cappsarea123" class=3D"icon on-apps-icon">\
                  <div class=3D"wrap clearfix">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                  <div class=3D"detail">\
                    <dl>\
                      <dt>\
                        <h5>=E7=A4=BE=E5=8C=BA</h5>\
                      </dt>\
                      <dd> <a =
href=3D"http://blog.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E5=8D=9A=E5=AE=A2</a></dd>\
                      <dd> <a href=3D"http://bbs.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E8=AE=BA=E5=9D=9B</a></dd>\
                      <dd> <a =
href=3D"http://download.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E4=B8=8B=E8=BD=BD</a></dd>\
                      <dd> <a href=3D"http://lib.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E7=9F=A5=E8=AF=86=E5=BA=93</a></dd>\
                      <dd><a href=3D"http://ask.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E6=8A=80=E6=9C=AF=E9=97=AE=E7=AD=94</a></dd>\
                      <dd><a href=3D"http://geek.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E6=9E=81=E5=AE=A2=E5=A4=B4=E6=9D=A1</a></dd>\
                      <dd style=3D"display:none"> <a =
href=3D"http://hero.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E8=8B=B1=E9=9B=84=E4=BC=9A</a></dd>\
                    </dl>\
                  </div>\
                  <div class=3D"detail">\
                    <dl>\
                      <dt>\
                        <h5>=E6=9C=8D=E5=8A=A1</h5>\
                      </dt>\
                      <dd style=3D"display:none"> <a =
href=3D"http://job.csdn.net?ref=3Dtoolbar" target=3D"_blank">JOB<img =
src=3D"http://c.csdnimg.cn/public/common/toolbar/images/new.gif" =
style=3D"display: none; margin-top: -26px; width: 23px;"></a></dd>\
                      <dd> <a href=3D"http://edu.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E5=AD=A6=E9=99=A2<img =
src=3D"http://c.csdnimg.cn/public/common/toolbar/images/new.gif" =
style=3D"display: none; margin-top: -26px; width: 23px;"></a></dd>\
                      <dd> <a =
href=3D"https://code.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">CODE</a></dd>\
                      <dd> <a =
href=3D"http://huiyi.csdn.net/?ref=3Dtoolbar" =
target=3D"_blank">=E6=B4=BB=E5=8A=A8</a></dd>\
                      <dd> <a href=3D"http://www.csto.com?ref=3Dtoolbar" =
target=3D"_blank">CSTO</a></dd>\
                      <dd> <a =
href=3D"http://mall.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">C=E5=B8=81=E5=85=91=E6=8D=A2<img =
src=3D"http://c.csdnimg.cn/public/common/toolbar/images/new.gif" =
style=3D"display: none; margin-top: -26px; width: 23px;"></a></dd>\
                    </dl>\
                  </div>\
                  <div class=3D"detail last">\
                    <dl>\
                      <dt>\
                        <h5>=E4=BF=B1=E4=B9=90=E9=83=A8</h5>\
                      </dt>\
                      <dd> <a href=3D"http://cto.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">CTO=E4=BF=B1=E4=B9=90=E9=83=A8</a></dd>\
                      <dd> <a =
href=3D"http://student.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E9=AB=98=E6=A0=A1=E4=BF=B1=E4=B9=90=E9=83=A8</a></dd>\=

                    </dl>\
                  </div>\
                </div>\
              </div>\
            </li>\
            </ul>\
          </div>\
        </div>\
    </div>';
  $(document.body).append($(tpl));
  $("#chasnew123").hide();
  //var newTag =3D true;
  //if (newTag) {
  //  var hasNew =3D getCookie("csdn_has_new_product");
  //  if (hasNew =3D=3D "2")
  //    $("#chasnew123").hide();
  //  else {
  //    $("#cappsarea123").one("mouseover", function () {
  //      setCookie("csdn_has_new_product", "2");
  //      $("#chasnew123").hide();
  //    });
  //  }
  //}
})();

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://download.csdn.net/js/jquery.cookie.js

/*!=0A=
 * jQuery Cookie Plugin v1.4.0=0A=
 * https://github.com/carhartl/jquery-cookie=0A=
 *=0A=
 * Copyright 2013 Klaus Hartl=0A=
 * Released under the MIT license=0A=
 */=0A=
(function (factory) {=0A=
	if (typeof define =3D=3D=3D 'function' && define.amd) {=0A=
		// AMD. Register as anonymous module.=0A=
		define(['jquery'], factory);=0A=
	} else {=0A=
		// Browser globals.=0A=
		factory(jQuery);=0A=
	}=0A=
}(function ($) {=0A=
=0A=
	var pluses =3D /\+/g;=0A=
=0A=
	function encode(s) {=0A=
		return config.raw ? s : encodeURIComponent(s);=0A=
	}=0A=
=0A=
	function decode(s) {=0A=
		return config.raw ? s : decodeURIComponent(s);=0A=
	}=0A=
=0A=
	function stringifyCookieValue(value) {=0A=
		return encode(config.json ? JSON.stringify(value) : String(value));=0A=
	}=0A=
=0A=
	function parseCookieValue(s) {=0A=
		if (s.indexOf('"') =3D=3D=3D 0) {=0A=
			// This is a quoted cookie as according to RFC2068, unescape...=0A=
			s =3D s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');=0A=
		}=0A=
=0A=
		try {=0A=
			// Replace server-side written pluses with spaces.=0A=
			// If we can't decode the cookie, ignore it, it's unusable.=0A=
			s =3D decodeURIComponent(s.replace(pluses, ' '));=0A=
		} catch(e) {=0A=
			return;=0A=
		}=0A=
=0A=
		try {=0A=
			// If we can't parse the cookie, ignore it, it's unusable.=0A=
			return config.json ? JSON.parse(s) : s;=0A=
		} catch(e) {}=0A=
	}=0A=
=0A=
	function read(s, converter) {=0A=
		var value =3D config.raw ? s : parseCookieValue(s);=0A=
		return $.isFunction(converter) ? converter(value) : value;=0A=
	}=0A=
=0A=
	var config =3D $.cookie =3D function (key, value, options) {=0A=
=0A=
		// Write=0A=
		if (value !=3D=3D undefined && !$.isFunction(value)) {=0A=
			options =3D $.extend({}, config.defaults, options);=0A=
=0A=
			if (typeof options.expires =3D=3D=3D 'number') {=0A=
				var days =3D options.expires, t =3D options.expires =3D new Date();=0A=
				t.setDate(t.getDate() + days);=0A=
			}=0A=
=0A=
			return (document.cookie =3D [=0A=
				encode(key), '=3D', stringifyCookieValue(value),=0A=
				options.expires ? '; expires=3D' + options.expires.toUTCString() : =
'', // use expires attribute, max-age is not supported by IE=0A=
				options.path    ? '; path=3D' + options.path : '',=0A=
				options.domain  ? '; domain=3D' + options.domain : '',=0A=
				options.secure  ? '; secure' : ''=0A=
			].join(''));=0A=
		}=0A=
=0A=
		// Read=0A=
=0A=
		var result =3D key ? undefined : {};=0A=
=0A=
		// To prevent the for loop in the first place assign an empty array=0A=
		// in case there are no cookies at all. Also prevents odd result when=0A=
		// calling $.cookie().=0A=
		var cookies =3D document.cookie ? document.cookie.split('; ') : [];=0A=
=0A=
		for (var i =3D 0, l =3D cookies.length; i < l; i++) {=0A=
			var parts =3D cookies[i].split('=3D');=0A=
			var name =3D decode(parts.shift());=0A=
			var cookie =3D parts.join('=3D');=0A=
=0A=
			if (key && key =3D=3D=3D name) {=0A=
				// If second argument (value) is a function it's a converter...=0A=
				result =3D read(cookie, value);=0A=
				break;=0A=
			}=0A=
=0A=
			// Prevent storing a cookie that we couldn't decode.=0A=
			if (!key && (cookie =3D read(cookie)) !=3D=3D undefined) {=0A=
				result[name] =3D cookie;=0A=
			}=0A=
		}=0A=
=0A=
		return result;=0A=
	};=0A=
=0A=
	config.defaults =3D {};=0A=
=0A=
	$.removeCookie =3D function (key, options) {=0A=
		if ($.cookie(key) !=3D=3D undefined) {=0A=
			// Must not alter options, thus extending a fresh object...=0A=
			$.cookie(key, '', $.extend({}, options, { expires: -1 }));=0A=
			return true;=0A=
		}=0A=
		return false;=0A=
	};=0A=
=0A=
}));=0A=

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/rabbit/search-service/main.js

/*
=E6=90=9C=E7=B4=A2=E6=9C=8D=E5=8A=A1 =
https://code.csdn.net/CSDN_Dev/csdn_searchservice_fe

=E4=BE=9D=E8=B5=96jQuery=EF=BC=8C=E4=BD=BF=E7=94=A8=E7=A4=BA=E4=BE=8B(=E9=
=99=A4=E9=9D=9E=E6=98=8E=E7=A1=AE=E8=A6=81=E6=B1=82=E5=BF=85=E5=A1=AB=EF=BC=
=8C=E9=83=BD=E6=98=AF=E5=8F=AF=E9=80=89=E5=8F=82=E6=95=B0=EF=BC=9B=E9=99=A4=
=E9=9D=9E=E6=98=8E=E7=A1=AE=E8=AF=B4=E6=98=8E=E9=BB=98=E8=AE=A4=E5=80=BC=EF=
=BC=8C=E9=BB=98=E8=AE=A4=E5=80=BC=E5=B0=B1=E6=98=AF=E7=A4=BA=E4=BE=8B=E4=B8=
=AD=E7=9A=84=E5=80=BC):

  <script type=3D"text/javascript" =
src=3D"http://csdnimg.cn/rabbit/search-service/main.js" =
charset=3D"utf-8"></script>
  <script type=3D"text/javascript">
    searchService({
      index: 'blog',
        // =
=E5=BF=85=E5=A1=AB=EF=BC=8C=E4=BD=BF=E7=94=A8=E7=9A=84=E7=B4=A2=E5=BC=95=E5=
=90=8D=E7=A7=B0=EF=BC=8C=E9=BB=98=E8=AE=A4=E5=80=BC=E6=98=AF''
      appendTo: '#output',
        // =
=E6=90=9C=E7=B4=A2=E7=BB=93=E6=9E=9C=E6=98=BE=E7=A4=BA=E5=88=B0=E6=8C=87=E5=
=AE=9A=E5=85=83=E7=B4=A0=E9=87=8C=E9=9D=A2=EF=BC=8C=E5=A6=82=E6=9E=9C=E6=83=
=B3=E6=89=8B=E5=B7=A5=E5=A4=84=E7=90=86=E5=8F=AF=E4=BB=A5=E5=BF=BD=E7=95=A5=
=EF=BC=8C=E9=BB=98=E8=AE=A4=E5=80=BC=E6=98=AF''
      query: {text: {'title,body':'java'}},
        // =
=E5=BF=85=E5=A1=AB=EF=BC=8C=E6=9F=A5=E8=AF=A2=E6=9D=A1=E4=BB=B6=EF=BC=8C=E8=
=AF=A6=E7=BB=86=E8=AF=B7=E5=8F=82=E9=98=85=E6=90=9C=E7=B4=A2=E7=B3=BB=E7=BB=
=9FAPI
      tmpl: '<li><a href=3D"#{ object.url }" title=3D"#{ object.title =
}">#{ object.title }</a></li>',
        // =
=E6=98=BE=E7=A4=BA=E5=88=B0appendTo=E7=9A=84=E5=85=83=E7=B4=A0=E6=A8=A1=E6=
=9D=BF=EF=BC=8C=E5=8F=AF=E4=BD=BF=E7=94=A8=E7=9A=84=E6=A8=A1=E6=9D=BF=E6=A0=
=87=E7=AD=BE=E4=B8=BB=E8=A6=81=E7=94=B1=E8=BF=94=E5=9B=9E=E7=9A=84=E6=95=B0=
=E6=8D=AE hits =
=E6=95=B0=E6=8D=AE=E5=85=83=E7=B4=A0=E7=9A=84=E7=BB=93=E6=9E=84=E5=86=B3=E5=
=AE=9A=EF=BC=9B
        // =
=E9=99=A4=E6=AD=A4=E4=B9=8B=E5=A4=96=E8=BF=98=E5=8F=AF=E4=BB=A5=E4=BD=BF=E7=
=94=A8 item =E5=92=8C =
data=EF=BC=8C=E5=88=86=E5=88=AB=E4=BB=A3=E8=A1=A8=E6=AF=8F=E4=B8=80=E6=9D=
=A1=E6=95=B0=E6=8D=AE=E7=9A=84=E5=8E=9F=E5=A7=8B=E7=BB=93=E6=9E=84=E5=92=8C=
=E8=BF=94=E5=9B=9E=E7=9A=84=E6=95=B4=E4=B8=AA=E6=95=B0=E6=8D=AE
        // =
=E4=B9=9F=E5=8F=AF=E4=BB=A5=E8=AE=BF=E9=97=AEwindow=E4=B8=8B=E7=9A=84=E5=8F=
=98=E9=87=8F
      from: 0,
        // =
=E8=A6=81=E4=BB=8E=E6=90=9C=E7=B4=A2=E7=BB=93=E6=9E=9C=E4=B8=AD=E7=AC=AC=E5=
=A4=9A=E5=B0=91=E6=9D=A1=E5=BC=80=E5=A7=8B=E8=8E=B7=E5=8F=96=E6=95=B0=E6=8D=
=AE
      size: 6,
        // =
=E8=A6=81=E4=BB=8E=E6=90=9C=E7=B4=A2=E7=BB=93=E6=9E=9C=E4=B8=AD=E8=8E=B7=E5=
=8F=96=E5=A4=9A=E5=B0=91=E6=9D=A1=E6=95=B0=E6=8D=AE
      filter: =
{"range":{"created_at":{"from":2010072320,"to":2010072330}}},
        // =
=E9=BB=98=E8=AE=A4=E4=B8=8D=E4=BC=A0=E9=80=92=E8=BF=99=E4=B8=AA=E5=8F=82=E6=
=95=B0=EF=BC=8C=E8=BF=87=E6=BB=A4=E6=9D=A1=E4=BB=B6=EF=BC=8C=E8=AF=A6=E7=BB=
=86=E8=AF=B7=E5=8F=82=E9=98=85=E6=90=9C=E7=B4=A2=E7=B3=BB=E7=BB=9FAPI
      sort: { 'updated_at': 'desc' },
        // =
=E9=BB=98=E8=AE=A4=E4=B8=8D=E4=BC=A0=E9=80=92=E8=BF=99=E4=B8=AA=E5=8F=82=E6=
=95=B0=EF=BC=8C=E6=8E=92=E5=BA=8F=E5=AD=97=E6=AE=B5, =
=E8=AF=A6=E7=BB=86=E8=AF=B7=E5=8F=82=E9=98=85=E6=90=9C=E7=B4=A2=E7=B3=BB=E7=
=BB=9FAPI
      fields: ['title', 'url'],
        // =
=E6=9C=80=E7=BB=88=E6=98=BE=E7=A4=BA=E7=9A=84=E5=AD=97=E6=AE=B5=EF=BC=8C=E8=
=AF=A6=E7=BB=86=E8=AF=B7=E5=8F=82=E9=98=85=E6=90=9C=E7=B4=A2=E7=B3=BB=E7=BB=
=9FAPI
      token: 'search_js_dkuyqthzbajmncbsb_token'
        // =E8=AE=BF=E9=97=AE=E6=8E=A7=E5=88=B6=E6=A0=87=E8=AF=86
    }, function(err, data, options){
      // =
=E5=A4=84=E7=90=86=E5=AE=8C=E6=88=90=E6=97=B6=E7=9A=84=E5=9B=9E=E8=B0=83
      // =
err=E6=98=AF=E9=94=99=E8=AF=AF=E4=BF=A1=E6=81=AF=EF=BC=8C=E5=A6=82=E6=9E=9C=
=E6=97=A0=E9=94=99=E5=B0=86=E4=B8=BAnull
      // =
data=E6=98=AF=E6=90=9C=E7=B4=A2=E5=88=B0=E7=9A=84=E5=8E=9F=E5=A7=8B=E6=95=
=B0=E6=8D=AE
      // =
options=E6=98=AF=E4=B8=8A=E9=9D=A2=E8=B0=83=E7=94=A8=E6=9C=80=E7=BB=88=E4=
=BD=BF=E7=94=A8=E7=9A=84=E5=8F=82=E6=95=B0
    });
  </script>

 */
;(function(definition, undefined){
  var global =3D this, exports =3D {}, $ =3D global.jQuery;
  definition(global, exports, $);

  if(global.csdn =3D=3D=3D undefined){
    global.csdn =3D exports;
  } else {
    $.extend(global.csdn, exports);
  }
  $.extend(global, exports);

}(function(global, exports, $, undefined){
  document.domain =3D 'csdn.net';

  var searchServiceReady =3D false
    , searchArgs =3D []
    , searchService =3D exports.searchService =3D function(){
      var args =3D [].slice.call(arguments, 0);
      if(searchServiceReady){
        searchServiceFunc.apply(null, args);
      }else{
        searchArgs.push(args);
      }
    }
    , render =3D searchService.render =3D function(tmpl, item, data){
      return tmpl.replace(/#\{ +([^}]+) +\}/gm, function($0, $1){
        var fieldN =3D $1;
        if(eval('item.' + $1) !=3D=3D undefined) $1 =3D 'item.' + $1;
        //return eval($1);
        var val =3D eval($1);
        if (fieldN.toLowerCase() =3D=3D "title") {
          var =
reg=3D/[^`~!\$%\^\*\(\)=3D\|\{\}':;',\\\[\\\]\.<>\/\?~=EF=BC=81=EF=BF=A5%=
=E2=80=A6=E2=80=A6*\=EF=BC=88\=EF=BC=89=E2=80=94=E2=80=94\|\{\}=E3=80=90=E3=
=80=91=E2=80=98=EF=BC=9B=EF=BC=9A=E2=80=9D=E2=80=9C=E2=80=99=E3=80=82=EF=BC=
=8C=E3=80=81=EF=BC=9F]/g;
          var titleFilter =3D val.match(reg).join( '' );
          val =3D titleFilter;
        }
        return val;
      });
    }
    , ajaxProxyCaches =3D {}
    , ajaxProxy =3D searchService.ajaxProxy =3D function(proxyUrl, =
opts){
      var c =3D ajaxProxyCaches[proxyUrl];
      if(c =3D=3D=3D undefined){
        c =3D ajaxProxyCaches[proxyUrl] =3D [];
        var func =3D arguments.callee;
        $('<iframe src=3D"' + proxyUrl + '" =
style=3D"display:none">').load(function(){
          c.contentWindow =3D this.contentWindow;
          func(proxyUrl, opts);
        }).prependTo('body');
      }else if(c.contentWindow =3D=3D=3D undefined){
        c.push(opts);
      }else{
        do{
          c.contentWindow.jQuery.ajax(opts);
        }while(opts =3D c.shift());
      }
    }
    , trackingAd =3D function(ele){
      if(typeof window.csdn !=3D=3D 'undefined' && typeof =
window.csdn.trackingAd =3D=3D=3D 'function'){
        window.csdn.trackingAd(ele);
      }else{
        $(document).bind('trackingAd-ready', function(){
          trackingAd(ele);
        });
      }
    }
    , searchServiceFunc =3D function(opts, callback){
      var tmpl =3D ( opts.url =3D=3D 'search' ) ? '<li><a href=3D"#{ =
object.url }" title=3D"#{ object.title }">#{ object.title }</a></li>' : =
'<li><a href=3D"#{ url }" title=3D"#{ title }" strategy=3D"#{ strategy =
}">#{ title }</a></li>';
      opts =3D $.extend({
        index: '',
        appendTo: '',
        query: '',
        tmpl: tmpl,
        from: 0,
        size: 6,
        fields: ['title', 'url'],
        token: 'search_js_dkuyqthzbajmncbsb_token',
        render: render
      }, opts);

      if(!opts.index || !opts.query) return;

      var postData =3D {};
      if ( opts.url =3D=3D 'recommend' )
      {
        var userId =3D $.cookie( 'UserName' ) || 'fake_userId';
        var uuid =3D $.cookie( 'uuid_tt_dd' ) || 'fake_uuid';
        var reg =3D /(\d+)$/;
        var href =3D window.location.href;
        var downId =3D reg.test( href ) ? RegExp.$1 : '';
        // var query =3D $( '.info' ).find( 'h1' ).attr( 'title' ) || $( =
'.info h1' ).text();

        postData =3D {
          userId: userId,
          size: 10,
          his: opts.his + ':' + downId,
          client: opts.client || 'download_cf_enhance',
          query: opts.query,
          cid: uuid
        };

        $.ajax( {
          type: 'GET',
          url: 'http://recdm.csdn.net/getRecommendList.html',
          data: postData,
          dataType: 'jsonp',
          jsonp: 'jsonp',
          success: function ( data ) {
            var appendTo =3D opts.appendTo, tmpl =3D opts.tmpl;
            if(data =3D=3D=3D null || data.ok =3D=3D=3D false && =
data.message){
              var msg =3D data !=3D=3D null ? data.message : =
'=E8=AF=B7=E6=B1=82=E5=A4=B1=E8=B4=A5';
              if(appendTo){
                $(appendTo).append(render('<div =
class=3D"search-error">#{ item }</div>', msg));
              }
              if(typeof callback =3D=3D=3D 'function') {
                callback(msg, data, opts);
              }
            }else if( data.length > 0 ){
              if( appendTo ){
                $(appendTo).append($.map(data, function(i){
                  return opts.render(tmpl, i, data);
                }).join(''));
                trackingAd(appendTo);
              }
              if(typeof callback =3D=3D=3D 'function') {
                callback(null, data, opts);
              }
            }
          }
        } );
      }
      else if ( opts.url =3D=3D 'search' )
      {
        $.map(['query', 'from', 'size', 'filter', 'sort', 'fields'], =
function(k){
          if(opts.hasOwnProperty(k)){
            postData[k] =3D opts[k];
          }
        });
        ajaxProxy('http://search.api.csdn.net/proxy.html', {
          type: 'POST',
          url: 'http://search.api.csdn.net/' + opts.index + =
'/csdn/_search',
          data: JSON.stringify(postData),
          dataType: 'json',
          headers: {
            'X-ACL-TOKEN': opts.token
          },
          success: function(data){
            var appendTo =3D opts.appendTo, tmpl =3D opts.tmpl;
            if(data =3D=3D=3D null || data.ok =3D=3D=3D false && =
data.message){
              var msg =3D data !=3D=3D null ? data.message : =
'=E8=AF=B7=E6=B1=82=E5=A4=B1=E8=B4=A5';
              if(appendTo){
                $(appendTo).append(render('<div =
class=3D"search-error">#{ item }</div>', msg));
              }
              if(typeof callback =3D=3D=3D 'function') {
                callback(msg, data, opts);
              }
            }else if(data.hits){
              if(appendTo){
                $(appendTo).append($.map(data.hits, function(i){
                  return opts.render(tmpl, i, data);
                }).join(''));
                trackingAd(appendTo);
              }
              if(typeof callback =3D=3D=3D 'function') {
                callback(null, data, opts);
              }
            }
          }
        });
      }
    }
    ;

  if(global.JSON =3D=3D=3D undefined){
    $.getScript('http://csdnimg.cn/rabbit/search-service/json2.js', =
function(){
      searchServiceReady =3D true;
      var args;
      while(args =3D searchArgs.shift()){
        searchService.apply(null, args);
      }
    });
  }else{
    searchServiceReady =3D true;
  }

}));
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/public/res/bower-libs/MathJax/MathJax.js?config=TeX-AMS_HTML

/*=0A=
 *  /MathJax.js=0A=
 *=0A=
 *  Copyright (c) 2009-2014 The MathJax Consortium=0A=
 *=0A=
 *  Licensed under the Apache License, Version 2.0 (the "License");=0A=
 *  you may not use this file except in compliance with the License.=0A=
 *  You may obtain a copy of the License at=0A=
 *=0A=
 *      http://www.apache.org/licenses/LICENSE-2.0=0A=
 *=0A=
 *  Unless required by applicable law or agreed to in writing, software=0A=
 *  distributed under the License is distributed on an "AS IS" BASIS,=0A=
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or =
implied.=0A=
 *  See the License for the specific language governing permissions and=0A=
 *  limitations under the License.=0A=
 */=0A=
=0A=
if(document.getElementById&&document.childNodes&&document.createElement){=
if(!(window.MathJax&&MathJax.Hub)){if(window.MathJax){window.MathJax=3D{A=
uthorConfig:window.MathJax}}else{window.MathJax=3D{}}MathJax.isPacked=3Dt=
rue;MathJax.version=3D"2.4.0";MathJax.fileversion=3D"2.4.0";MathJax.cdnVe=
rsion=3D"2.4-beta-2";MathJax.cdnFileVersions=3D{};(function(d){var =
b=3Dwindow[d];if(!b){b=3Dwindow[d]=3D{}}var e=3D[];var =
c=3Dfunction(f){var g=3Df.constructor;if(!g){g=3Dfunction(){}}for(var h =
in f){if(h!=3D=3D"constructor"&&f.hasOwnProperty(h)){g[h]=3Df[h]}}return =
g};var a=3Dfunction(){return function(){return =
arguments.callee.Init.call(this,arguments)}};b.Object=3Dc({constructor:a(=
),Subclass:function(f,h){var =
g=3Da();g.SUPER=3Dthis;g.Init=3Dthis.Init;g.Subclass=3Dthis.Subclass;g.Au=
gment=3Dthis.Augment;g.protoFunction=3Dthis.protoFunction;g.can=3Dthis.ca=
n;g.has=3Dthis.has;g.isa=3Dthis.isa;g.prototype=3Dnew =
this(e);g.prototype.constructor=3Dg;g.Augment(f,h);return =
g},Init:function(f){var =
g=3Dthis;if(f.length=3D=3D=3D1&&f[0]=3D=3D=3De){return g}if(!(g =
instanceof f.callee)){g=3Dnew f.callee(e)}return =
g.Init.apply(g,f)||g},Augment:function(f,g){var h;if(f!=3Dnull){for(h in =
f){if(f.hasOwnProperty(h)){this.protoFunction(h,f[h])}}if(f.toString!=3D=3D=
this.prototype.toString&&f.toString!=3D=3D{}.toString){this.protoFunction=
("toString",f.toString)}}if(g!=3Dnull){for(h in =
g){if(g.hasOwnProperty(h)){this[h]=3Dg[h]}}}return =
this},protoFunction:function(g,f){this.prototype[g]=3Df;if(typeof =
f=3D=3D=3D"function"){f.SUPER=3Dthis.SUPER.prototype}},prototype:{Init:fu=
nction(){},SUPER:function(f){return =
f.callee.SUPER},can:function(f){return =
typeof(this[f])=3D=3D=3D"function"},has:function(f){return =
typeof(this[f])!=3D=3D"undefined"},isa:function(f){return(f instanceof =
Object)&&(this instanceof f)}},can:function(f){return =
this.prototype.can.call(this,f)},has:function(f){return =
this.prototype.has.call(this,f)},isa:function(g){var =
f=3Dthis;while(f){if(f=3D=3D=3Dg){return true}else{f=3Df.SUPER}}return =
false},SimpleSUPER:c({constructor:function(f){return =
this.SimpleSUPER.define(f)},define:function(f){var =
h=3D{};if(f!=3Dnull){for(var g in =
f){if(f.hasOwnProperty(g)){h[g]=3Dthis.wrap(g,f[g])}}if(f.toString!=3D=3D=
this.prototype.toString&&f.toString!=3D=3D{}.toString){h.toString=3Dthis.=
wrap("toString",f.toString)}}return =
h},wrap:function(i,h){if(typeof(h)!=3D=3D"function"||!h.toString().match(=
/\.\s*SUPER\s*\(/)){return h}var =
g=3Dfunction(){this.SUPER=3Dg.SUPER[i];try{var =
f=3Dh.apply(this,arguments)}catch(j){delete this.SUPER;throw j}delete =
this.SUPER;return f};g.toString=3Dfunction(){return =
h.toString.apply(h,arguments)};return =
g}})})})("MathJax");(function(BASENAME){var =
BASE=3Dwindow[BASENAME];if(!BASE){BASE=3Dwindow[BASENAME]=3D{}}var =
CALLBACK=3Dfunction(data){var cb=3Dfunction(){return =
arguments.callee.execute.apply(arguments.callee,arguments)};for(var id =
in =
CALLBACK.prototype){if(CALLBACK.prototype.hasOwnProperty(id)){if(typeof(d=
ata[id])!=3D=3D"undefined"){cb[id]=3Ddata[id]}else{cb[id]=3DCALLBACK.prot=
otype[id]}}}cb.toString=3DCALLBACK.prototype.toString;return =
cb};CALLBACK.prototype=3D{isCallback:true,hook:function(){},data:[],objec=
t:window,execute:function(){if(!this.called||this.autoReset){this.called=3D=
!this.autoReset;return =
this.hook.apply(this.object,this.data.concat([].slice.call(arguments,0)))=
}},reset:function(){delete this.called},toString:function(){return =
this.hook.toString.apply(this.hook,arguments)}};var =
ISCALLBACK=3Dfunction(f){return(typeof(f)=3D=3D=3D"function"&&f.isCallbac=
k)};var EVAL=3Dfunction(code){return eval.call(window,code)};var =
TESTEVAL=3Dfunction(){EVAL("var __TeSt_VaR__ =3D =
1");if(window.__TeSt_VaR__){try{delete =
window.__TeSt_VaR__}catch(error){window.__TeSt_VaR__=3Dnull}}else{if(wind=
ow.execScript){EVAL=3Dfunction(code){BASE.__code=3Dcode;code=3D"try =
{"+BASENAME+".__result =3D eval("+BASENAME+".__code)} catch(err) =
{"+BASENAME+".__result =3D err}";window.execScript(code);var =
result=3DBASE.__result;delete BASE.__result;delete BASE.__code;if(result =
instanceof Error){throw result}return =
result}}else{EVAL=3Dfunction(code){BASE.__code=3Dcode;code=3D"try =
{"+BASENAME+".__result =3D eval("+BASENAME+".__code)} catch(err) =
{"+BASENAME+".__result =3D err}";var =
head=3D(document.getElementsByTagName("head"))[0];if(!head){head=3Ddocume=
nt.body}var =
script=3Ddocument.createElement("script");script.appendChild(document.cre=
ateTextNode(code));head.appendChild(script);head.removeChild(script);var =
result=3DBASE.__result;delete BASE.__result;delete BASE.__code;if(result =
instanceof Error){throw result}return result}}}TESTEVAL=3Dnull};var =
USING=3Dfunction(args,i){if(arguments.length>1){if(arguments.length=3D=3D=
=3D2&&!(typeof arguments[0]=3D=3D=3D"function")&&arguments[0] instanceof =
Object&&typeof =
arguments[1]=3D=3D=3D"number"){args=3D[].slice.call(args,i)}else{args=3D[=
].slice.call(arguments,0)}}if(args instanceof =
Array&&args.length=3D=3D=3D1){args=3Dargs[0]}if(typeof =
args=3D=3D=3D"function"){if(args.execute=3D=3D=3DCALLBACK.prototype.execu=
te){return args}return CALLBACK({hook:args})}else{if(args instanceof =
Array){if(typeof(args[0])=3D=3D=3D"string"&&args[1] instanceof =
Object&&typeof args[1][args[0]]=3D=3D=3D"function"){return =
CALLBACK({hook:args[1][args[0]],object:args[1],data:args.slice(2)})}else{=
if(typeof args[0]=3D=3D=3D"function"){return =
CALLBACK({hook:args[0],data:args.slice(1)})}else{if(typeof =
args[1]=3D=3D=3D"function"){return =
CALLBACK({hook:args[1],object:args[0],data:args.slice(2)})}}}}else{if(typ=
eof(args)=3D=3D=3D"string"){if(TESTEVAL){TESTEVAL()}return =
CALLBACK({hook:EVAL,data:[args]})}else{if(args instanceof Object){return =
CALLBACK(args)}else{if(typeof(args)=3D=3D=3D"undefined"){return =
CALLBACK({})}}}}}throw Error("Can't make callback from given data")};var =
DELAY=3Dfunction(time,callback){callback=3DUSING(callback);callback.timeo=
ut=3DsetTimeout(callback,time);return callback};var =
WAITFOR=3Dfunction(callback,signal){callback=3DUSING(callback);if(!callba=
ck.called){WAITSIGNAL(callback,signal);signal.pending++}};var =
WAITEXECUTE=3Dfunction(){var signals=3Dthis.signal;delete =
this.signal;this.execute=3Dthis.oldExecute;delete this.oldExecute;var =
result=3Dthis.execute.apply(this,arguments);if(ISCALLBACK(result)&&!resul=
t.called){WAITSIGNAL(result,signals)}else{for(var =
i=3D0,m=3Dsignals.length;i<m;i++){signals[i].pending--;if(signals[i].pend=
ing<=3D0){signals[i].call()}}}};var =
WAITSIGNAL=3Dfunction(callback,signals){if(!(signals instanceof =
Array)){signals=3D[signals]}if(!callback.signal){callback.oldExecute=3Dca=
llback.execute;callback.execute=3DWAITEXECUTE;callback.signal=3Dsignals}e=
lse{if(signals.length=3D=3D=3D1){callback.signal.push(signals[0])}else{ca=
llback.signal=3Dcallback.signal.concat(signals)}}};var =
AFTER=3Dfunction(callback){callback=3DUSING(callback);callback.pending=3D=
0;for(var =
i=3D1,m=3Darguments.length;i<m;i++){if(arguments[i]){WAITFOR(arguments[i]=
,callback)}}if(callback.pending=3D=3D=3D0){var =
result=3Dcallback();if(ISCALLBACK(result)){callback=3Dresult}}return =
callback};var =
HOOKS=3DMathJax.Object.Subclass({Init:function(reset){this.hooks=3D[];thi=
s.reset=3Dreset},Add:function(hook,priority){if(priority=3D=3Dnull){prior=
ity=3D10}if(!ISCALLBACK(hook)){hook=3DUSING(hook)}hook.priority=3Dpriorit=
y;var =
i=3Dthis.hooks.length;while(i>0&&priority<this.hooks[i-1].priority){i--}t=
his.hooks.splice(i,0,hook);return hook},Remove:function(hook){for(var =
i=3D0,m=3Dthis.hooks.length;i<m;i++){if(this.hooks[i]=3D=3D=3Dhook){this.=
hooks.splice(i,1);return}}},Execute:function(){var =
callbacks=3D[{}];for(var =
i=3D0,m=3Dthis.hooks.length;i<m;i++){if(this.reset){this.hooks[i].reset()=
}var =
result=3Dthis.hooks[i].apply(window,arguments);if(ISCALLBACK(result)&&!re=
sult.called){callbacks.push(result)}}if(callbacks.length=3D=3D=3D1){retur=
n null}if(callbacks.length=3D=3D=3D2){return callbacks[1]}return =
AFTER.apply({},callbacks)}});var =
EXECUTEHOOKS=3Dfunction(hooks,data,reset){if(!hooks){return =
null}if(!(hooks instanceof Array)){hooks=3D[hooks]}if(!(data instanceof =
Array)){data=3D(data=3D=3Dnull?[]:[data])}var =
handler=3DHOOKS(reset);for(var =
i=3D0,m=3Dhooks.length;i<m;i++){handler.Add(hooks[i])}return =
handler.Execute.apply(handler,data)};var =
QUEUE=3DBASE.Object.Subclass({Init:function(){this.pending=3D0;this.runni=
ng=3D0;this.queue=3D[];this.Push.apply(this,arguments)},Push:function(){v=
ar callback;for(var =
i=3D0,m=3Darguments.length;i<m;i++){callback=3DUSING(arguments[i]);if(cal=
lback=3D=3D=3Darguments[i]&&!callback.called){callback=3DUSING(["wait",th=
is,callback])}this.queue.push(callback)}if(!this.running&&!this.pending){=
this.Process()}return =
callback},Process:function(queue){while(!this.running&&!this.pending&&thi=
s.queue.length){var =
callback=3Dthis.queue[0];queue=3Dthis.queue.slice(1);this.queue=3D[];this=
.Suspend();var =
result=3Dcallback();this.Resume();if(queue.length){this.queue=3Dqueue.con=
cat(this.queue)}if(ISCALLBACK(result)&&!result.called){WAITFOR(result,thi=
s)}}},Suspend:function(){this.running++},Resume:function(){if(this.runnin=
g){this.running--}},call:function(){this.Process.apply(this,arguments)},w=
ait:function(callback){return callback}});var =
SIGNAL=3DQUEUE.Subclass({Init:function(name){QUEUE.prototype.Init.call(th=
is);this.name=3Dname;this.posted=3D[];this.listeners=3DHOOKS(true)},Post:=
function(message,callback,forget){callback=3DUSING(callback);if(this.post=
ing||this.pending){this.Push(["Post",this,message,callback,forget])}else{=
this.callback=3Dcallback;callback.reset();if(!forget){this.posted.push(me=
ssage)}this.Suspend();this.posting=3Dtrue;var =
result=3Dthis.listeners.Execute(message);if(ISCALLBACK(result)&&!result.c=
alled){WAITFOR(result,this)}this.Resume();delete =
this.posting;if(!this.pending){this.call()}}return =
callback},Clear:function(callback){callback=3DUSING(callback);if(this.pos=
ting||this.pending){callback=3Dthis.Push(["Clear",this,callback])}else{th=
is.posted=3D[];callback()}return =
callback},call:function(){this.callback(this);this.Process()},Interest:fu=
nction(callback,ignorePast,priority){callback=3DUSING(callback);this.list=
eners.Add(callback,priority);if(!ignorePast){for(var =
i=3D0,m=3Dthis.posted.length;i<m;i++){callback.reset();var =
result=3Dcallback(this.posted[i]);if(ISCALLBACK(result)&&i=3D=3D=3Dthis.p=
osted.length-1){WAITFOR(result,this)}}}return =
callback},NoInterest:function(callback){this.listeners.Remove(callback)},=
MessageHook:function(msg,callback,priority){callback=3DUSING(callback);if=
(!this.hooks){this.hooks=3D{};this.Interest(["ExecuteHooks",this])}if(!th=
is.hooks[msg]){this.hooks[msg]=3DHOOKS(true)}this.hooks[msg].Add(callback=
,priority);for(var =
i=3D0,m=3Dthis.posted.length;i<m;i++){if(this.posted[i]=3D=3Dmsg){callbac=
k.reset();callback(this.posted[i])}}return =
callback},ExecuteHooks:function(msg){var type=3D((msg instanceof =
Array)?msg[0]:msg);if(!this.hooks[type]){return null}return =
this.hooks[type].Execute(msg)}},{signals:{},find:function(name){if(!SIGNA=
L.signals[name]){SIGNAL.signals[name]=3Dnew SIGNAL(name)}return =
SIGNAL.signals[name]}});BASE.Callback=3DBASE.CallBack=3DUSING;BASE.Callba=
ck.Delay=3DDELAY;BASE.Callback.After=3DAFTER;BASE.Callback.Queue=3DQUEUE;=
BASE.Callback.Signal=3DSIGNAL.find;BASE.Callback.Hooks=3DHOOKS;BASE.Callb=
ack.ExecuteHooks=3DEXECUTEHOOKS})("MathJax");(function(e){var =
a=3Dwindow[e];if(!a){a=3Dwindow[e]=3D{}}var =
d=3D(navigator.vendor=3D=3D=3D"Apple Computer, Inc."&&typeof =
navigator.vendorSub=3D=3D=3D"undefined");var g=3D0;var =
h=3Dfunction(i){if(document.styleSheets&&document.styleSheets.length>g){g=
=3Ddocument.styleSheets.length}if(!i){i=3D(document.getElementsByTagName(=
"head"))[0];if(!i){i=3Ddocument.body}}return i};var f=3D[];var =
c=3Dfunction(){for(var =
k=3D0,j=3Df.length;k<j;k++){a.Ajax.head.removeChild(f[k])}f=3D[]};var =
b=3D{};b[e]=3D"";a.Ajax=3D{loaded:{},loading:{},loadHooks:{},timeout:15*1=
000,styleDelay:1,config:{root:"",path:b},STATUS:{OK:1,ERROR:-1},fileURL:f=
unction(j){var i=3Dj.match(/^\[([-._a-z0-9]+)\]/i);if(i&&i[1] in =
b){j=3D(b[i[1]]||this.config.root)+j.substr(i[1].length+2)}return =
j},fileName:function(j){var =
i=3Dthis.config.root;if(j.substr(0,i.length)=3D=3D=3Di){j=3D"["+e+"]"+j.s=
ubstr(i.length)}else{for(var k in =
b){if(b.hasOwnProperty(k)&&b[k]){if(j.substr(0,b[k].length)=3D=3D=3Db[k])=
{j=3D"["+k+"]"+j.substr(b[k].length);break}}}}return =
j},fileRev:function(j){var =
i=3Da.cdnFileVersions[name]||a.cdnVersion;if(i){i=3D"?rev=3D"+i}return =
i},urlRev:function(i){return =
this.fileURL(i)+this.fileRev(i)},Require:function(k,n){n=3Da.Callback(n);=
var l;if(k instanceof Object){for(var j in =
k){if(k.hasOwnProperty(j)){l=3Dj.toUpperCase();k=3Dk[j]}}}else{l=3Dk.spli=
t(/\./).pop().toUpperCase()}k=3Dthis.fileURL(k);if(this.loaded[k]){n(this=
.loaded[k])}else{var m=3D{};m[l]=3Dk;this.Load(m,n)}return =
n},Load:function(k,m){m=3Da.Callback(m);var l;if(k instanceof =
Object){for(var j in =
k){if(k.hasOwnProperty(j)){l=3Dj.toUpperCase();k=3Dk[j]}}}else{l=3Dk.spli=
t(/\./).pop().toUpperCase()}k=3Dthis.fileURL(k);if(this.loading[k]){this.=
addHook(k,m)}else{this.head=3Dh(this.head);if(this.loader[l]){this.loader=
[l].call(this,k,m)}else{throw Error("Can't load files of type =
"+l)}}return m},LoadHook:function(l,m,k){m=3Da.Callback(m);if(l =
instanceof Object){for(var j in =
l){if(l.hasOwnProperty(j)){l=3Dl[j]}}}l=3Dthis.fileURL(l);if(this.loaded[=
l]){m(this.loaded[l])}else{this.addHook(l,m,k)}return =
m},addHook:function(j,k,i){if(!this.loadHooks[j]){this.loadHooks[j]=3DMat=
hJax.Callback.Hooks()}this.loadHooks[j].Add(k,i)},Preloading:function(){f=
or(var l=3D0,j=3Darguments.length;l<j;l++){var =
k=3Dthis.fileURL(arguments[l]);if(!this.loading[k]){this.loading[k]=3D{pr=
eloaded:true}}}},loader:{JS:function(k,m){var j=3Dthis.fileName(k);var =
i=3Ddocument.createElement("script");var =
l=3Da.Callback(["loadTimeout",this,k]);this.loading[k]=3D{callback:m,time=
out:setTimeout(l,this.timeout),status:this.STATUS.OK,script:i};this.loadi=
ng[k].message=3Da.Message.File(j);i.onerror=3Dl;i.type=3D"text/javascript=
";i.src=3Dk+this.fileRev(j);this.head.appendChild(i)},CSS:function(j,l){v=
ar i=3Dthis.fileName(j);var =
k=3Ddocument.createElement("link");k.rel=3D"stylesheet";k.type=3D"text/cs=
s";k.href=3Dj+this.fileRev(i);this.loading[j]=3D{callback:l,message:a.Mes=
sage.File(i),status:this.STATUS.OK};this.head.appendChild(k);this.timer.c=
reate.call(this,[this.timer.file,j],k)}},timer:{create:function(j,i){j=3D=
a.Callback(j);if(i.nodeName=3D=3D=3D"STYLE"&&i.styleSheet&&typeof(i.style=
Sheet.cssText)!=3D=3D"undefined"){j(this.STATUS.OK)}else{if(window.chrome=
&&i.nodeName=3D=3D=3D"LINK"){j(this.STATUS.OK)}else{if(d){this.timer.star=
t(this,[this.timer.checkSafari2,g++,j],this.styleDelay)}else{this.timer.s=
tart(this,[this.timer.checkLength,i,j],this.styleDelay)}}}return =
j},start:function(j,i,k,l){i=3Da.Callback(i);i.execute=3Dthis.execute;i.t=
ime=3Dthis.time;i.STATUS=3Dj.STATUS;i.timeout=3Dl||j.timeout;i.delay=3Di.=
total=3Dk||0;if(k){setTimeout(i,k)}else{i()}},time:function(i){this.total=
+=3Dthis.delay;this.delay=3DMath.floor(this.delay*1.05+5);if(this.total>=3D=
this.timeout){i(this.STATUS.ERROR);return 1}return =
0},file:function(j,i){if(i<0){a.Ajax.loadTimeout(j)}else{a.Ajax.loadCompl=
ete(j)}},execute:function(){this.hook.call(this.object,this,this.data[0],=
this.data[1])},checkSafari2:function(i,j,k){if(i.time(k)){return}if(docum=
ent.styleSheets.length>j&&document.styleSheets[j].cssRules&&document.styl=
eSheets[j].cssRules.length){k(i.STATUS.OK)}else{setTimeout(i,i.delay)}},c=
heckLength:function(i,l,n){if(i.time(n)){return}var m=3D0;var =
j=3D(l.sheet||l.styleSheet);try{if((j.cssRules||j.rules||[]).length>0){m=3D=
1}}catch(k){if(k.message.match(/protected variable|restricted =
URI/)){m=3D1}else{if(k.message.match(/Security =
error/)){m=3D1}}}if(m){setTimeout(a.Callback([n,i.STATUS.OK]),0)}else{set=
Timeout(i,i.delay)}}},loadComplete:function(i){i=3Dthis.fileURL(i);var =
j=3Dthis.loading[i];if(j&&!j.preloaded){a.Message.Clear(j.message);clearT=
imeout(j.timeout);if(j.script){if(f.length=3D=3D=3D0){setTimeout(c,0)}f.p=
ush(j.script)}this.loaded[i]=3Dj.status;delete =
this.loading[i];this.addHook(i,j.callback)}else{if(j){delete =
this.loading[i]}this.loaded[i]=3Dthis.STATUS.OK;j=3D{status:this.STATUS.O=
K}}if(!this.loadHooks[i]){return null}return =
this.loadHooks[i].Execute(j.status)},loadTimeout:function(i){if(this.load=
ing[i].timeout){clearTimeout(this.loading[i].timeout)}this.loading[i].sta=
tus=3Dthis.STATUS.ERROR;this.loadError(i);this.loadComplete(i)},loadError=
:function(i){a.Message.Set(["LoadFailed","File failed to load: =
%1",i],null,2000);a.Hub.signal.Post(["file load =
error",i])},Styles:function(k,l){var =
i=3Dthis.StyleString(k);if(i=3D=3D=3D""){l=3Da.Callback(l);l()}else{var =
j=3Ddocument.createElement("style");j.type=3D"text/css";this.head=3Dh(thi=
s.head);this.head.appendChild(j);if(j.styleSheet&&typeof(j.styleSheet.css=
Text)!=3D=3D"undefined"){j.styleSheet.cssText=3Di}else{j.appendChild(docu=
ment.createTextNode(i))}l=3Dthis.timer.create.call(this,l,j)}return =
l},StyleString:function(n){if(typeof(n)=3D=3D=3D"string"){return n}var =
k=3D"",o,m;for(o in n){if(n.hasOwnProperty(o)){if(typeof =
n[o]=3D=3D=3D"string"){k+=3Do+" {"+n[o]+"}\n"}else{if(n[o] instanceof =
Array){for(var =
l=3D0;l<n[o].length;l++){m=3D{};m[o]=3Dn[o][l];k+=3Dthis.StyleString(m)}}=
else{if(o.substr(0,6)=3D=3D=3D"@media"){k+=3Do+" =
{"+this.StyleString(n[o])+"}\n"}else{if(n[o]!=3Dnull){m=3D[];for(var j =
in =
n[o]){if(n[o].hasOwnProperty(j)){if(n[o][j]!=3Dnull){m[m.length]=3Dj+": =
"+n[o][j]}}}k+=3Do+" {"+m.join("; ")+"}\n"}}}}}}return =
k}}})("MathJax");MathJax.HTML=3D{Element:function(c,e,d){var =
f=3Ddocument.createElement(c);if(e){if(e.style){var =
b=3De.style;e.style=3D{};for(var g in =
b){if(b.hasOwnProperty(g)){e.style[g.replace(/-([a-z])/g,this.ucMatch)]=3D=
b[g]}}}MathJax.Hub.Insert(f,e)}if(d){if(!(d instanceof =
Array)){d=3D[d]}for(var a=3D0;a<d.length;a++){if(d[a] instanceof =
Array){f.appendChild(this.Element(d[a][0],d[a][1],d[a][2]))}else{if(c=3D=3D=
=3D"script"){this.setScript(f,d[a])}else{f.appendChild(document.createTex=
tNode(d[a]))}}}}return f},ucMatch:function(a,b){return =
b.toUpperCase()},addElement:function(b,a,d,c){return =
b.appendChild(this.Element(a,d,c))},TextNode:function(a){return =
document.createTextNode(a)},addText:function(a,b){return =
a.appendChild(this.TextNode(b))},setScript:function(a,b){if(this.setScrip=
tBug){a.text=3Db}else{while(a.firstChild){a.removeChild(a.firstChild)}thi=
s.addText(a,b)}},getScript:function(a){var =
b=3D(a.text=3D=3D=3D""?a.innerHTML:a.text);return =
b.replace(/^\s+/,"").replace(/\s+$/,"")},Cookie:{prefix:"mjx",expires:365=
,Set:function(a,e){var d=3D[];if(e){for(var g in =
e){if(e.hasOwnProperty(g)){d.push(g+":"+e[g].toString().replace(/&/g,"&&"=
))}}}var =
b=3Dthis.prefix+"."+a+"=3D"+escape(d.join("&;"));if(this.expires){var =
f=3Dnew Date();f.setDate(f.getDate()+this.expires);b+=3D"; =
expires=3D"+f.toGMTString()}try{document.cookie=3Db+"; =
path=3D/"}catch(c){}},Get:function(a,d){if(!d){d=3D{}}var g=3Dnew =
RegExp("(?:^|;\\s*)"+this.prefix+"\\."+a+"=3D([^;]*)(?:;|$)");var =
f;try{f=3Dg.exec(document.cookie)}catch(c){}if(f&&f[1]!=3D=3D""){var =
j=3Dunescape(f[1]).split("&;");for(var =
e=3D0,b=3Dj.length;e<b;e++){f=3Dj[e].match(/([^:]+):(.*)/);var =
h=3Df[2].replace(/&&/g,"&");if(h=3D=3D=3D"true"){h=3Dtrue}else{if(h=3D=3D=
=3D"false"){h=3Dfalse}else{if(h.match(/^-?(\d+(\.\d+)?|\.\d+)$/)){h=3Dpar=
seFloat(h)}}}d[f[1]]=3Dh}}return =
d}}};MathJax.Localization=3D{locale:"en",directory:"[MathJax]/localizatio=
n",strings:{ast:{menuTitle:"asturianu"},br:{menuTitle:"brezhoneg"},ca:{me=
nuTitle:"catal\u00E0"},cdo:{menuTitle:"M\u00ECng-d\u0115\u0324ng-ng\u1E73=
\u0304"},cs:{menuTitle:"\u010De\u0161tina"},da:{menuTitle:"dansk"},de:{me=
nuTitle:"Deutsch"},en:{menuTitle:"English",isLoaded:true},eo:{menuTitle:"=
Esperanto"},es:{menuTitle:"espa\u00F1ol"},fa:{menuTitle:"\u0641\u0627\u06=
31\u0633\u06CC"},fi:{menuTitle:"suomi"},fr:{menuTitle:"fran\u00E7ais"},gl=
:{menuTitle:"galego"},he:{menuTitle:"\u05E2\u05D1\u05E8\u05D9\u05EA"},ia:=
{menuTitle:"interlingua"},it:{menuTitle:"italiano"},ja:{menuTitle:"\u65E5=
\u672C\u8A9E"},kn:{menuTitle:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1"},ko:{menuTi=
tle:"\uD55C\uAD6D\uC5B4"},lb:{menuTitle:"L\u00EBtzebuergesch"},mk:{menuTi=
tle:"\u043C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438"},nl:{m=
enuTitle:"Nederlands"},oc:{menuTitle:"occitan"},pl:{menuTitle:"polski"},p=
t:{menuTitle:"portugus\u00EA"},"pt-br":{menuTitle:"portugu\u00EAs do =
Brasil"},ru:{menuTitle:"\u0440\u0443\u0441\u0441\u043A\u0438\u0439"},sl:{=
menuTitle:"sloven\u0161\u010Dina"},sv:{menuTitle:"svenska"},tr:{menuTitle=
:"T\u00FCrk\u00E7e"},uk:{menuTitle:"\u0443\u043A\u0440\u0430\u0457\u043D\=
u0441\u044C\u043A\u0430"},vi:{menuTitle:"Ti\u1EBFng =
Vi\u1EC7t"},"zh-hans":{menuTitle:"\u4E2D\u6587\uFF08\u7B80\u4F53\uFF09"}}=
,pattern:/%(\d+|\{\d+\}|\{[a-z]+:\%\d+(?:\|(?:%\{\d+\}|%.|[^\}])*)+\}|.)/=
g,SPLIT:("axb".split(/(x)/).length=3D=3D=3D3?function(a,b){return =
a.split(b)}:function(c,e){var =
a=3D[],b,d=3D0;e.lastIndex=3D0;while(b=3De.exec(c)){a.push(c.substr(d,b.i=
ndex-d));a.push.apply(a,b.slice(1));d=3Db.index+b[0].length}a.push(c.subs=
tr(d));return a}),_:function(b,a){if(a instanceof Array){return =
this.processSnippet(b,a)}return =
this.processString(this.lookupPhrase(b,a),[].slice.call(arguments,2))},pr=
ocessString:function(l,o,g){var =
j,e;for(j=3D0,e=3Do.length;j<e;j++){if(g&&o[j] instanceof =
Array){o[j]=3Dthis.processSnippet(g,o[j])}}var =
f=3Dthis.SPLIT(l,this.pattern);for(j=3D1,e=3Df.length;j<e;j+=3D2){var =
p=3Df[j].charAt(0);if(p>=3D"0"&&p<=3D"9"){f[j]=3Do[f[j]-1];if(typeof =
f[j]=3D=3D=3D"number"){f[j]=3Dthis.number(f[j])}}else{if(p=3D=3D=3D"{"){p=
=3Df[j].substr(1);if(p>=3D"0"&&p<=3D"9"){f[j]=3Do[f[j].substr(1,f[j].leng=
th-2)-1];if(typeof =
f[j]=3D=3D=3D"number"){f[j]=3Dthis.number(f[j])}}else{var =
k=3Df[j].match(/^\{([a-z]+):%(\d+)\|(.*)\}$/);if(k){if(k[1]=3D=3D=3D"plur=
al"){var d=3Do[k[2]-1];if(typeof =
d=3D=3D=3D"undefined"){f[j]=3D"???"}else{d=3Dthis.plural(d)-1;var =
h=3Dk[3].replace(/(^|[^%])(%%)*%\|/g,"$1$2%\uEFEF").split(/\|/);if(d>=3D0=
&&d<h.length){f[j]=3Dthis.processString(h[d].replace(/\uEFEF/g,"|"),o,g)}=
else{f[j]=3D"???"}}}else{f[j]=3D"%"+f[j]}}}}}if(f[j]=3D=3Dnull){f[j]=3D"?=
??"}}if(!g){return f.join("")}var =
a=3D[],b=3D"";for(j=3D0;j<e;j++){b+=3Df[j];j++;if(j<e){if(f[j] =
instanceof =
Array){a.push(b);a=3Da.concat(f[j]);b=3D""}else{b+=3Df[j]}}}if(b!=3D=3D""=
){a.push(b)}return a},processSnippet:function(g,e){var c=3D[];for(var =
d=3D0,b=3De.length;d<b;d++){if(e[d] instanceof Array){var =
f=3De[d];if(typeof f[1]=3D=3D=3D"string"){var h=3Df[0];if(!(h instanceof =
Array)){h=3D[g,h]}var =
a=3Dthis.lookupPhrase(h,f[1]);c=3Dc.concat(this.processMarkdown(a,f.slice=
(2),g))}else{if(f[1] instanceof =
Array){c=3Dc.concat(this.processSnippet.apply(this,f))}else{if(f.length>=3D=
3){c.push([f[0],f[1],this.processSnippet(g,f[2])])}else{c.push(e[d])}}}}e=
lse{c.push(e[d])}}return =
c},markdownPattern:/(%.)|(\*{1,3})((?:%.|.)+?)\2|(`+)((?:%.|.)+?)\4|\[((?=
:%.|.)+?)\]\(([^\s\)]+)\)/,processMarkdown:function(b,h,d){var =
j=3D[],e;var c=3Db.split(this.markdownPattern);var g=3Dc[0];for(var =
f=3D1,a=3Dc.length;f<a;f+=3D8){if(c[f+1]){e=3Dthis.processString(c[f+2],h=
,d);if(!(e instanceof =
Array)){e=3D[e]}e=3D[["b","i","i"][c[f+1].length-1],{},e];if(c[f+1].lengt=
h=3D=3D=3D3){e=3D["b",{},e]}}else{if(c[f+3]){e=3Dthis.processString(c[f+4=
].replace(/^\s/,"").replace(/\s$/,""),h,d);if(!(e instanceof =
Array)){e=3D[e]}e=3D["code",{},e]}else{if(c[f+5]){e=3Dthis.processString(=
c[f+5],h,d);if(!(e instanceof =
Array)){e=3D[e]}e=3D["a",{href:this.processString(c[f+6],h),target:"_blan=
k"},e]}else{g+=3Dc[f];e=3Dnull}}}if(e){j=3Dthis.concatString(j,g,h,d);j.p=
ush(e);g=3D""}if(c[f+7]!=3D=3D""){g+=3Dc[f+7]}}j=3Dthis.concatString(j,g,=
h,d);return =
j},concatString:function(a,c,b,d){if(c!=3D""){c=3Dthis.processString(c,b,=
d);if(!(c instanceof Array)){c=3D[c]}a=3Da.concat(c)}return =
a},lookupPhrase:function(f,a,d){if(!d){d=3D"_"}if(f instanceof =
Array){d=3D(f[0]||"_");f=3D(f[1]||"")}var =
c=3Dthis.loadDomain(d);if(c){MathJax.Hub.RestartAfter(c)}var =
b=3Dthis.strings[this.locale];if(b){if(b.domains&&d in b.domains){var =
e=3Db.domains[d];if(e.strings&&f in e.strings){a=3De.strings[f]}}}return =
a},loadFile:function(b,d,e){e=3DMathJax.Callback(e);b=3D(d.file||b);if(!b=
.match(/\.js$/)){b+=3D".js"}if(!b.match(/^([a-z]+:|\[MathJax\])/)){var =
a=3D(this.strings[this.locale].directory||this.directory+"/"+this.locale|=
|"[MathJax]/localization/"+this.locale);b=3Da+"/"+b}var =
c=3DMathJax.Ajax.Require(b,function(){d.isLoaded=3Dtrue;return =
e()});return(c.called?null:c)},loadDomain:function(c,e){var =
b,a=3Dthis.strings[this.locale];if(a){if(!a.isLoaded){b=3Dthis.loadFile(t=
his.locale,a);if(b){return =
MathJax.Callback.Queue(b,["loadDomain",this,c]).Push(e||{})}}if(a.domains=
&&c in a.domains){var =
d=3Da.domains[c];if(!d.isLoaded){b=3Dthis.loadFile(c,d);if(b){return =
MathJax.Callback.Queue(b).Push(e)}}}}return =
MathJax.Callback(e)()},Try:function(a){a=3DMathJax.Callback(a);a.autoRese=
t=3Dtrue;try{a()}catch(b){if(!b.restart){throw =
b}MathJax.Callback.After(["Try",this,a],b.restart)}},resetLocale:function=
(a){if(!a){return}a=3Da.toLowerCase();while(!this.strings[a]){var =
c=3Da.lastIndexOf("-");if(c=3D=3D=3D-1){return}a=3Da.substring(0,c)}var =
b=3Dthis.strings[a].remap;this.locale=3Db?b:a},setLocale:function(a){this=
.resetLocale(a);if(MathJax.Menu){this.loadDomain("MathMenu")}},addTransla=
tion:function(b,e,c){var =
d=3Dthis.strings[b],a=3Dfalse;if(!d){d=3Dthis.strings[b]=3D{};a=3Dtrue}if=
(!d.domains){d.domains=3D{}}if(e){if(!d.domains[e]){d.domains[e]=3D{}}d=3D=
d.domains[e]}MathJax.Hub.Insert(d,c);if(a&&MathJax.Menu.menu){MathJax.Men=
u.CreateLocaleMenu()}},setCSS:function(b){var =
a=3Dthis.strings[this.locale];if(a){if(a.fontFamily){b.style.fontFamily=3D=
a.fontFamily}if(a.fontDirection){b.style.direction=3Da.fontDirection;if(a=
.fontDirection=3D=3D=3D"rtl"){b.style.textAlign=3D"right"}}}return =
b},fontFamily:function(){var =
a=3Dthis.strings[this.locale];return(a?a.fontFamily:null)},fontDirection:=
function(){var =
a=3Dthis.strings[this.locale];return(a?a.fontDirection:null)},plural:func=
tion(b){var a=3Dthis.strings[this.locale];if(a&&a.plural){return =
a.plural(b)}if(b=3D=3D1){return 1}return 2},number:function(b){var =
a=3Dthis.strings[this.locale];if(a&&a.number){return a.number(b)}return =
b}};MathJax.Message=3D{ready:false,log:[{}],current:null,textNodeBug:(nav=
igator.vendor=3D=3D=3D"Apple Computer, Inc."&&typeof =
navigator.vendorSub=3D=3D=3D"undefined")||(window.hasOwnProperty&&window.=
hasOwnProperty("konqueror")),styles:{"#MathJax_Message":{position:"fixed"=
,left:"1px",bottom:"2px","background-color":"#E6E6E6",border:"1px solid =
#959595",margin:"0px",padding:"2px =
8px","z-index":"102",color:"black","font-size":"80%",width:"auto","white-=
space":"nowrap"},"#MathJax_MSIE_Frame":{position:"absolute",top:0,left:0,=
width:"0px","z-index":101,border:"0px",margin:"0px",padding:"0px"}},brows=
ers:{MSIE:function(a){MathJax.Message.msieFixedPositionBug=3D((document.d=
ocumentMode||0)<7);if(MathJax.Message.msieFixedPositionBug){MathJax.Hub.c=
onfig.styles["#MathJax_Message"].position=3D"absolute"}MathJax.Message.qu=
irks=3D(document.compatMode=3D=3D=3D"BackCompat")},Chrome:function(a){Mat=
hJax.Hub.config.styles["#MathJax_Message"].bottom=3D"1.5em";MathJax.Hub.c=
onfig.styles["#MathJax_Message"].left=3D"1em"}},Init:function(a){if(a){th=
is.ready=3Dtrue}if(!document.body||!this.ready){return =
false}if(this.div&&this.div.parentNode=3D=3Dnull){this.div=3Ddocument.get=
ElementById("MathJax_Message");if(this.div){this.text=3Dthis.div.firstChi=
ld}}if(!this.div){var =
b=3Ddocument.body;if(this.msieFixedPositionBug&&window.attachEvent){b=3Dt=
his.frame=3Dthis.addDiv(document.body);b.removeAttribute("id");b.style.po=
sition=3D"absolute";b.style.border=3Db.style.margin=3Db.style.padding=3D"=
0px";b.style.zIndex=3D"101";b.style.height=3D"0px";b=3Dthis.addDiv(b);b.i=
d=3D"MathJax_MSIE_Frame";window.attachEvent("onscroll",this.MoveFrame);wi=
ndow.attachEvent("onresize",this.MoveFrame);this.MoveFrame()}this.div=3Dt=
his.addDiv(b);this.div.style.display=3D"none";this.text=3Dthis.div.append=
Child(document.createTextNode(""))}return true},addDiv:function(a){var =
b=3Ddocument.createElement("div");b.id=3D"MathJax_Message";if(a.firstChil=
d){a.insertBefore(b,a.firstChild)}else{a.appendChild(b)}return =
b},MoveFrame:function(){var =
a=3D(MathJax.Message.quirks?document.body:document.documentElement);var =
b=3DMathJax.Message.frame;b.style.left=3Da.scrollLeft+"px";b.style.top=3D=
a.scrollTop+"px";b.style.width=3Da.clientWidth+"px";b=3Db.firstChild;b.st=
yle.height=3Da.clientHeight+"px"},localize:function(a){return =
MathJax.Localization._(a,a)},filterText:function(a,c,b){if(MathJax.Hub.co=
nfig.messageStyle=3D=3D=3D"simple"){if(b=3D=3D=3D"LoadFile"){if(!this.loa=
ding){this.loading=3Dthis.localize("Loading")+" =
"}a=3Dthis.loading;this.loading+=3D"."}else{if(b=3D=3D=3D"ProcessMath"){i=
f(!this.processing){this.processing=3Dthis.localize("Processing")+" =
"}a=3Dthis.processing;this.processing+=3D"."}else{if(b=3D=3D=3D"TypesetMa=
th"){if(!this.typesetting){this.typesetting=3Dthis.localize("Typesetting"=
)+" "}a=3Dthis.typesetting;this.typesetting+=3D"."}}}}return =
a},Set:function(c,e,b){if(e=3D=3Dnull){e=3Dthis.log.length;this.log[e]=3D=
{}}var d=3D"";if(c instanceof Array){d=3Dc[0];if(d instanceof =
Array){d=3Dd[1]}try{c=3DMathJax.Localization._.apply(MathJax.Localization=
,c)}catch(a){if(!a.restart){throw =
a}if(!a.restart.called){if(this.log[e].restarted=3D=3Dnull){this.log[e].r=
estarted=3D0}this.log[e].restarted++;delete =
this.log[e].cleared;MathJax.Callback.After(["Set",this,c,e,b],a.restart);=
return e}}}if(this.timer){clearTimeout(this.timer);delete =
this.timer}this.log[e].text=3Dc;this.log[e].filteredText=3Dc=3Dthis.filte=
rText(c,e,d);if(typeof(this.log[e].next)=3D=3D=3D"undefined"){this.log[e]=
.next=3Dthis.current;if(this.current!=3Dnull){this.log[this.current].prev=
=3De}this.current=3De}if(this.current=3D=3D=3De&&MathJax.Hub.config.messa=
geStyle!=3D=3D"none"){if(this.Init()){if(this.textNodeBug){this.div.inner=
HTML=3Dc}else{this.text.nodeValue=3Dc}this.div.style.display=3D"";if(this=
.status){window.status=3D"";delete =
this.status}}else{window.status=3Dc;this.status=3Dtrue}}if(this.log[e].re=
started){if(this.log[e].cleared){b=3D0}if(--this.log[e].restarted=3D=3D=3D=
0){delete =
this.log[e].cleared}}if(b){setTimeout(MathJax.Callback(["Clear",this,e]),=
b)}else{if(b=3D=3D0){this.Clear(e,0)}}return =
e},Clear:function(b,a){if(this.log[b].prev!=3Dnull){this.log[this.log[b].=
prev].next=3Dthis.log[b].next}if(this.log[b].next!=3Dnull){this.log[this.=
log[b].next].prev=3Dthis.log[b].prev}if(this.current=3D=3D=3Db){this.curr=
ent=3Dthis.log[b].next;if(this.text){if(this.div.parentNode=3D=3Dnull){th=
is.Init()}if(this.current=3D=3Dnull){if(this.timer){clearTimeout(this.tim=
er);delete =
this.timer}if(a=3D=3Dnull){a=3D600}if(a=3D=3D=3D0){this.Remove()}else{thi=
s.timer=3DsetTimeout(MathJax.Callback(["Remove",this]),a)}}else{if(MathJa=
x.Hub.config.messageStyle!=3D=3D"none"){if(this.textNodeBug){this.div.inn=
erHTML=3Dthis.log[this.current].filteredText}else{this.text.nodeValue=3Dt=
his.log[this.current].filteredText}}}if(this.status){window.status=3D"";d=
elete =
this.status}}else{if(this.status){window.status=3D(this.current=3D=3Dnull=
?"":this.log[this.current].text)}}}delete this.log[b].next;delete =
this.log[b].prev;delete =
this.log[b].filteredText;if(this.log[b].restarted){this.log[b].cleared=3D=
true}},Remove:function(){this.text.nodeValue=3D"";this.div.style.display=3D=
"none"},File:function(a){return this.Set(["LoadFile","Loading =
%1",a],null,null)},Log:function(){var b=3D[];for(var =
c=3D1,a=3Dthis.log.length;c<a;c++){b[c]=3Dthis.log[c].text}return =
b.join("\n")}};MathJax.Hub=3D{config:{root:"",config:[],styleSheets:[],st=
yles:{".MathJax_Preview":{color:"#888"}},jax:[],extensions:[],preJax:null=
,postJax:null,displayAlign:"center",displayIndent:"0",preRemoveClass:"Mat=
hJax_Preview",showProcessingMessages:true,messageStyle:"normal",delayStar=
tupUntil:"none",skipStartupTypeset:false,elements:[],positionToHash:true,=
showMathMenu:true,showMathMenuMSIE:true,menuSettings:{zoom:"None",CTRL:fa=
lse,ALT:false,CMD:false,Shift:false,discoverable:false,zscale:"200%",rend=
erer:"",font:"Auto",context:"MathJax",locale:"en",mpContext:false,mpMouse=
:false,texHints:true,semantics:false},errorSettings:{message:["[",["MathP=
rocessingError","Math Processing =
Error"],"]"],style:{color:"#CC0000","font-style":"italic"}}},preProcessor=
s:MathJax.Callback.Hooks(true),inputJax:{},outputJax:{order:{}},processUp=
dateTime:250,processUpdateDelay:10,signal:MathJax.Callback.Signal("Hub"),=
Config:function(a){this.Insert(this.config,a);if(this.config.Augment){thi=
s.Augment(this.config.Augment)}},CombineConfig:function(c,f){var =
b=3Dthis.config,g,e;c=3Dc.split(/\./);for(var =
d=3D0,a=3Dc.length;d<a;d++){g=3Dc[d];if(!b[g]){b[g]=3D{}}e=3Db;b=3Db[g]}e=
[g]=3Db=3Dthis.Insert(f,b);return =
b},Register:{PreProcessor:function(){MathJax.Hub.preProcessors.Add.apply(=
MathJax.Hub.preProcessors,arguments)},MessageHook:function(){return =
MathJax.Hub.signal.MessageHook.apply(MathJax.Hub.signal,arguments)},Start=
upHook:function(){return =
MathJax.Hub.Startup.signal.MessageHook.apply(MathJax.Hub.Startup.signal,a=
rguments)},LoadHook:function(){return =
MathJax.Ajax.LoadHook.apply(MathJax.Ajax,arguments)}},getAllJax:function(=
e){var c=3D[],b=3Dthis.elementScripts(e);for(var =
d=3D0,a=3Db.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax){c.p=
ush(b[d].MathJax.elementJax)}}return c},getJaxByType:function(f,e){var =
c=3D[],b=3Dthis.elementScripts(e);for(var =
d=3D0,a=3Db.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax&&b[d=
].MathJax.elementJax.mimeType=3D=3D=3Df){c.push(b[d].MathJax.elementJax)}=
}return c},getJaxByInputType:function(f,e){var =
c=3D[],b=3Dthis.elementScripts(e);for(var =
d=3D0,a=3Db.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax&&b[d=
].type&&b[d].type.replace(/ =
*;(.|\s)*/,"")=3D=3D=3Df){c.push(b[d].MathJax.elementJax)}}return =
c},getJaxFor:function(a){if(typeof(a)=3D=3D=3D"string"){a=3Ddocument.getE=
lementById(a)}if(a&&a.MathJax){return =
a.MathJax.elementJax}if(a&&a.isMathJax){while(a&&!a.jaxID){a=3Da.parentNo=
de}if(a){return MathJax.OutputJax[a.jaxID].getJaxFromMath(a)}}return =
null},isJax:function(a){if(typeof(a)=3D=3D=3D"string"){a=3Ddocument.getEl=
ementById(a)}if(a&&a.isMathJax){return =
1}if(a&&a.tagName!=3Dnull&&a.tagName.toLowerCase()=3D=3D=3D"script"){if(a=
.MathJax){return(a.MathJax.state=3D=3D=3DMathJax.ElementJax.STATE.PROCESS=
ED?1:-1)}if(a.type&&this.inputJax[a.type.replace(/ =
*;(.|\s)*/,"")]){return -1}}return =
0},setRenderer:function(d,c){if(!d){return}if(!MathJax.OutputJax[d]){this=
.config.menuSettings.renderer=3D"";var =
b=3D"[MathJax]/jax/output/"+d+"/config.js";return =
MathJax.Ajax.Require(b,["setRenderer",this,d,c])}else{this.config.menuSet=
tings.renderer=3Dd;if(c=3D=3Dnull){c=3D"jax/mml"}var =
a=3Dthis.outputJax;if(a[c]&&a[c].length){if(d!=3D=3Da[c][0].id){a[c].unsh=
ift(MathJax.OutputJax[d]);return this.signal.Post(["Renderer =
Selected",d])}}return null}},Queue:function(){return =
this.queue.Push.apply(this.queue,arguments)},Typeset:function(e,f){if(!Ma=
thJax.isReady){return null}var c=3Dthis.elementCallback(e,f);var =
b=3DMathJax.Callback.Queue();for(var =
d=3D0,a=3Dc.elements.length;d<a;d++){if(c.elements[d]){b.Push(["PreProces=
s",this,c.elements[d]],["Process",this,c.elements[d]])}}return =
b.Push(c.callback)},PreProcess:function(e,f){var =
c=3Dthis.elementCallback(e,f);var b=3DMathJax.Callback.Queue();for(var =
d=3D0,a=3Dc.elements.length;d<a;d++){if(c.elements[d]){b.Push(["Post",thi=
s.signal,["Begin =
PreProcess",c.elements[d]]],(arguments.callee.disabled?{}:["Execute",this=
.preProcessors,c.elements[d]]),["Post",this.signal,["End =
PreProcess",c.elements[d]]])}}return =
b.Push(c.callback)},Process:function(a,b){return =
this.takeAction("Process",a,b)},Update:function(a,b){return =
this.takeAction("Update",a,b)},Reprocess:function(a,b){return =
this.takeAction("Reprocess",a,b)},Rerender:function(a,b){return =
this.takeAction("Rerender",a,b)},takeAction:function(g,e,h){var =
c=3Dthis.elementCallback(e,h);var =
b=3DMathJax.Callback.Queue(["Clear",this.signal]);for(var =
d=3D0,a=3Dc.elements.length;d<a;d++){if(c.elements[d]){var =
f=3D{scripts:[],start:new =
Date().getTime(),i:0,j:0,jax:{},jaxIDs:[]};b.Push(["Post",this.signal,["B=
egin "+g,c.elements[d]]],["Post",this.signal,["Begin =
Math",c.elements[d],g]],["prepareScripts",this,g,c.elements[d],f],["Post"=
,this.signal,["Begin Math =
Input",c.elements[d],g]],["processInput",this,f],["Post",this.signal,["En=
d Math =
Input",c.elements[d],g]],["prepareOutput",this,f,"preProcess"],["Post",th=
is.signal,["Begin Math =
Output",c.elements[d],g]],["processOutput",this,f],["Post",this.signal,["=
End Math =
Output",c.elements[d],g]],["prepareOutput",this,f,"postProcess"],["Post",=
this.signal,["End Math",c.elements[d],g]],["Post",this.signal,["End =
"+g,c.elements[d]]])}}return =
b.Push(c.callback)},scriptAction:{Process:function(a){},Update:function(b=
){var =
a=3Db.MathJax.elementJax;if(a&&a.needsUpdate()){a.Remove(true);b.MathJax.=
state=3Da.STATE.UPDATE}else{b.MathJax.state=3Da.STATE.PROCESSED}},Reproce=
ss:function(b){var =
a=3Db.MathJax.elementJax;if(a){a.Remove(true);b.MathJax.state=3Da.STATE.U=
PDATE}},Rerender:function(b){var =
a=3Db.MathJax.elementJax;if(a){a.Remove(true);b.MathJax.state=3Da.STATE.O=
UTPUT}}},prepareScripts:function(h,e,g){if(arguments.callee.disabled){ret=
urn}var b=3Dthis.elementScripts(e);var =
f=3DMathJax.ElementJax.STATE;for(var d=3D0,a=3Db.length;d<a;d++){var =
c=3Db[d];if(c.type&&this.inputJax[c.type.replace(/ =
*;(.|\n)*/,"")]){if(c.MathJax){if(c.MathJax.elementJax&&c.MathJax.element=
Jax.hover){MathJax.Extension.MathEvents.Hover.ClearHover(c.MathJax.elemen=
tJax)}if(c.MathJax.state!=3D=3Df.PENDING){this.scriptAction[h](c)}}if(!c.=
MathJax){c.MathJax=3D{state:f.PENDING}}if(c.MathJax.state!=3D=3Df.PROCESS=
ED){g.scripts.push(c)}}}},checkScriptSiblings:function(a){if(a.MathJax.ch=
ecked){return}var =
b=3Dthis.config,f=3Da.previousSibling;if(f&&f.nodeName=3D=3D=3D"#text"){v=
ar =
d,e,c=3Da.nextSibling;if(c&&c.nodeName!=3D=3D"#text"){c=3Dnull}if(b.preJa=
x){if(typeof(b.preJax)=3D=3D=3D"string"){b.preJax=3Dnew =
RegExp(b.preJax+"$")}d=3Df.nodeValue.match(b.preJax)}if(b.postJax&&c){if(=
typeof(b.postJax)=3D=3D=3D"string"){b.postJax=3Dnew =
RegExp("^"+b.postJax)}e=3Dc.nodeValue.match(b.postJax)}if(d&&(!b.postJax|=
|e)){f.nodeValue=3Df.nodeValue.replace(b.preJax,(d.length>1?d[1]:""));f=3D=
null}if(e&&(!b.preJax||d)){c.nodeValue=3Dc.nodeValue.replace(b.postJax,(e=
.length>1?e[1]:""))}if(f&&!f.nodeValue.match(/\S/)){f=3Df.previousSibling=
}}if(b.preRemoveClass&&f&&f.className=3D=3D=3Db.preRemoveClass){a.MathJax=
.preview=3Df}a.MathJax.checked=3D1},processInput:function(a){var =
b,i=3DMathJax.ElementJax.STATE;var =
h,e,d=3Da.scripts.length;try{while(a.i<d){h=3Da.scripts[a.i];if(!h){a.i++=
;continue}e=3Dh.previousSibling;if(e&&e.className=3D=3D=3D"MathJax_Error"=
){e.parentNode.removeChild(e)}if(!h.MathJax||h.MathJax.state=3D=3D=3Di.PR=
OCESSED){a.i++;continue}if(!h.MathJax.elementJax||h.MathJax.state=3D=3D=3D=
i.UPDATE){this.checkScriptSiblings(h);var g=3Dh.type.replace(/ =
*;(.|\s)*/,"");b=3Dthis.inputJax[g].Process(h,a);if(typeof =
b=3D=3D=3D"function"){if(b.called){continue}this.RestartAfter(b)}b.Attach=
(h,this.inputJax[g].id);this.saveScript(b,a,h,i)}else{if(h.MathJax.state=3D=
=3D=3Di.OUTPUT){this.saveScript(h.MathJax.elementJax,a,h,i)}}a.i++;var =
c=3Dnew =
Date().getTime();if(c-a.start>this.processUpdateTime&&a.i<a.scripts.lengt=
h){a.start=3Dc;this.RestartAfter(MathJax.Callback.Delay(1))}}}catch(f){re=
turn =
this.processError(f,a,"Input")}if(a.scripts.length&&this.config.showProce=
ssingMessages){MathJax.Message.Set(["ProcessMath","Processing math: =
%1%%",100],0)}a.start=3Dnew Date().getTime();a.i=3Da.j=3D0;return =
null},saveScript:function(a,d,b,c){if(!this.outputJax[a.mimeType]){b.Math=
Jax.state=3Dc.UPDATE;throw Error("No output jax registered for =
"+a.mimeType)}a.outputJax=3Dthis.outputJax[a.mimeType][0].id;if(!d.jax[a.=
outputJax]){if(d.jaxIDs.length=3D=3D=3D0){d.jax[a.outputJax]=3Dd.scripts}=
else{if(d.jaxIDs.length=3D=3D=3D1){d.jax[d.jaxIDs[0]]=3Dd.scripts.slice(0=
,d.i)}d.jax[a.outputJax]=3D[]}d.jaxIDs.push(a.outputJax)}if(d.jaxIDs.leng=
th>1){d.jax[a.outputJax].push(b)}b.MathJax.state=3Dc.OUTPUT},prepareOutpu=
t:function(c,f){while(c.j<c.jaxIDs.length){var =
e=3Dc.jaxIDs[c.j],d=3DMathJax.OutputJax[e];if(d[f]){try{var =
a=3Dd[f](c);if(typeof =
a=3D=3D=3D"function"){if(a.called){continue}this.RestartAfter(a)}}catch(b=
){if(!b.restart){MathJax.Message.Set(["PrepError","Error preparing %1 =
output (%2)",e,f],null,600);MathJax.Hub.lastPrepError=3Db;c.j++}return =
MathJax.Callback.After(["prepareOutput",this,c,f],b.restart)}}c.j++}retur=
n null},processOutput:function(h){var =
b,g=3DMathJax.ElementJax.STATE,d,a=3Dh.scripts.length;try{while(h.i<a){d=3D=
h.scripts[h.i];if(!d||!d.MathJax||d.MathJax.error){h.i++;continue}var =
c=3Dd.MathJax.elementJax;if(!c){h.i++;continue}b=3DMathJax.OutputJax[c.ou=
tputJax].Process(d,h);d.MathJax.state=3Dg.PROCESSED;h.i++;if(d.MathJax.pr=
eview){d.MathJax.preview.innerHTML=3D""}this.signal.Post(["New =
Math",c.inputID]);var e=3Dnew =
Date().getTime();if(e-h.start>this.processUpdateTime&&h.i<h.scripts.lengt=
h){h.start=3De;this.RestartAfter(MathJax.Callback.Delay(this.processUpdat=
eDelay))}}}catch(f){return =
this.processError(f,h,"Output")}if(h.scripts.length&&this.config.showProc=
essingMessages){MathJax.Message.Set(["TypesetMath","Typesetting math: =
%1%%",100],0);MathJax.Message.Clear(0)}h.i=3Dh.j=3D0;return =
null},processMessage:function(d,b){var =
a=3DMath.floor(d.i/(d.scripts.length)*100);var =
c=3D(b=3D=3D=3D"Output"?["TypesetMath","Typesetting math: =
%1%%"]:["ProcessMath","Processing math: =
%1%%"]);if(this.config.showProcessingMessages){MathJax.Message.Set(c.conc=
at(a),0)}},processError:function(b,c,a){if(!b.restart){if(!this.config.er=
rorSettings.message){throw =
b}this.formatError(c.scripts[c.i],b);c.i++}this.processMessage(c,a);retur=
n =
MathJax.Callback.After(["process"+a,this,c],b.restart)},formatError:funct=
ion(b,e){var d=3D"Error: "+e.message+"\n";if(e.sourceURL){d+=3D"\nfile: =
"+e.sourceURL}if(e.line){d+=3D"\nline: =
"+e.line}b.MathJax.error=3DMathJax.OutputJax.Error.Jax(d,b);var =
f=3Dthis.config.errorSettings;var =
a=3DMathJax.Localization._(f.messageId,f.message);var =
c=3DMathJax.HTML.Element("span",{className:"MathJax_Error",jaxID:"Error",=
isMathJax:true},a);if(MathJax.Extension.MathEvents){c.oncontextmenu=3DMat=
hJax.Extension.MathEvents.Event.Menu;c.onmousedown=3DMathJax.Extension.Ma=
thEvents.Event.Mousedown}else{MathJax.Ajax.Require("[MathJax]/extensions/=
MathEvents.js",function(){c.oncontextmenu=3DMathJax.Extension.MathEvents.=
Event.Menu;c.onmousedown=3DMathJax.Extension.MathEvents.Event.Mousedown})=
}b.parentNode.insertBefore(c,b);if(b.MathJax.preview){b.MathJax.preview.i=
nnerHTML=3D""}this.lastError=3De;this.signal.Post(["Math Processing =
Error",b,e])},RestartAfter:function(a){throw =
this.Insert(Error("restart"),{restart:MathJax.Callback(a)})},elementCallb=
ack:function(c,f){if(f=3D=3Dnull&&(c instanceof Array||typeof =
c=3D=3D=3D"function")){try{MathJax.Callback(c);f=3Dc;c=3Dnull}catch(d){}}=
if(c=3D=3Dnull){c=3Dthis.config.elements||[]}if(!(c instanceof =
Array)){c=3D[c]}c=3D[].concat(c);for(var =
b=3D0,a=3Dc.length;b<a;b++){if(typeof(c[b])=3D=3D=3D"string"){c[b]=3Ddocu=
ment.getElementById(c[b])}}if(!document.body){document.body=3Ddocument.ge=
tElementsByTagName("body")[0]}if(c.length=3D=3D0){c.push(document.body)}i=
f(!f){f=3D{}}return{elements:c,callback:f}},elementScripts:function(d){if=
(d instanceof Array){var b=3D[];for(var =
c=3D0,a=3Dd.length;c<a;c++){b.push.apply(b,this.elementScripts(d[c]))}ret=
urn =
b}if(typeof(d)=3D=3D=3D"string"){d=3Ddocument.getElementById(d)}if(!docum=
ent.body){document.body=3Ddocument.getElementsByTagName("body")[0]}if(d=3D=
=3Dnull){d=3Ddocument.body}if(d.tagName!=3Dnull&&d.tagName.toLowerCase()=3D=
=3D=3D"script"){return[d]}return =
d.getElementsByTagName("script")},Insert:function(c,a){for(var b in =
a){if(a.hasOwnProperty(b)){if(typeof a[b]=3D=3D=3D"object"&&!(a[b] =
instanceof Array)&&(typeof c[b]=3D=3D=3D"object"||typeof =
c[b]=3D=3D=3D"function")){this.Insert(c[b],a[b])}else{c[b]=3Da[b]}}}retur=
n c},SplitList:("trim" in String.prototype?function(a){return =
a.trim().split(/\s+/)}:function(a){return =
a.replace(/^\s+/,"").replace(/\s+$/,"").split(/\s+/)})};MathJax.Hub.Inser=
t(MathJax.Hub.config.styles,MathJax.Message.styles);MathJax.Hub.Insert(Ma=
thJax.Hub.config.styles,{".MathJax_Error":MathJax.Hub.config.errorSetting=
s.style});MathJax.Extension=3D{};MathJax.Hub.Configured=3DMathJax.Callbac=
k({});MathJax.Hub.Startup=3D{script:"",queue:MathJax.Callback.Queue(),sig=
nal:MathJax.Callback.Signal("Startup"),params:{},Config:function(){this.q=
ueue.Push(["Post",this.signal,"Begin =
Config"]);if(this.params.locale){MathJax.Localization.resetLocale(this.pa=
rams.locale);MathJax.Hub.config.menuSettings.locale=3Dthis.params.locale}=
if(this.params.config){var c=3Dthis.params.config.split(/,/);for(var =
b=3D0,a=3Dc.length;b<a;b++){if(!c[b].match(/\.js$/)){c[b]+=3D".js"}this.q=
ueue.Push(["Require",MathJax.Ajax,this.URL("config",c[b])])}}this.queue.P=
ush(["Config",MathJax.Hub,MathJax.AuthorConfig]);if(this.script.match(/\S=
/)){this.queue.Push(this.script+";\n1;")}this.queue.Push(["ConfigDelay",t=
his],["ConfigBlocks",this],[function(d){return =
d.loadArray(MathJax.Hub.config.config,"config",null,true)},this],["Post",=
this.signal,"End Config"])},ConfigDelay:function(){var =
a=3Dthis.params.delayStartupUntil||MathJax.Hub.config.delayStartupUntil;i=
f(a=3D=3D=3D"onload"){return =
this.onload}if(a=3D=3D=3D"configured"){return =
MathJax.Hub.Configured}return a},ConfigBlocks:function(){var =
c=3Ddocument.getElementsByTagName("script");var =
f=3Dnull,b=3DMathJax.Callback.Queue();for(var =
d=3D0,a=3Dc.length;d<a;d++){var e=3DString(c[d].type).replace(/ =
/g,"");if(e.match(/^text\/x-mathjax-config(;.*)?$/)&&!e.match(/;executed=3D=
true/)){c[d].type+=3D";executed=3Dtrue";f=3Db.Push(c[d].innerHTML+";\n1;"=
)}}return f},Cookie:function(){return =
this.queue.Push(["Post",this.signal,"Begin =
Cookie"],["Get",MathJax.HTML.Cookie,"menu",MathJax.Hub.config.menuSetting=
s],[function(d){if(d.menuSettings.locale){MathJax.Localization.resetLocal=
e(d.menuSettings.locale)}var =
f=3Dd.menuSettings.renderer,b=3Dd.jax;if(f){var =
c=3D"output/"+f;b.sort();for(var =
e=3D0,a=3Db.length;e<a;e++){if(b[e].substr(0,7)=3D=3D=3D"output/"){break}=
}if(e=3D=3Da-1){b.pop()}else{while(e<a){if(b[e]=3D=3D=3Dc){b.splice(e,1);=
break}e++}}b.unshift(c)}},MathJax.Hub.config],["Post",this.signal,"End =
Cookie"])},Styles:function(){return =
this.queue.Push(["Post",this.signal,"Begin =
Styles"],["loadArray",this,MathJax.Hub.config.styleSheets,"config"],["Sty=
les",MathJax.Ajax,MathJax.Hub.config.styles],["Post",this.signal,"End =
Styles"])},Jax:function(){var =
f=3DMathJax.Hub.config,c=3DMathJax.Hub.outputJax;for(var =
g=3D0,b=3Df.jax.length,d=3D0;g<b;g++){var =
e=3Df.jax[g].substr(7);if(f.jax[g].substr(0,7)=3D=3D=3D"output/"&&c.order=
[e]=3D=3Dnull){c.order[e]=3Dd;d++}}var =
a=3DMathJax.Callback.Queue();return a.Push(["Post",this.signal,"Begin =
Jax"],["loadArray",this,f.jax,"jax","config.js"],["Post",this.signal,"End=
 Jax"])},Extensions:function(){var a=3DMathJax.Callback.Queue();return =
a.Push(["Post",this.signal,"Begin =
Extensions"],["loadArray",this,MathJax.Hub.config.extensions,"extensions"=
],["Post",this.signal,"End =
Extensions"])},Message:function(){MathJax.Message.Init(true)},Menu:functi=
on(){var =
b=3DMathJax.Hub.config.menuSettings,a=3DMathJax.Hub.outputJax,d;for(var =
c in =
a){if(a.hasOwnProperty(c)){if(a[c].length){d=3Da[c];break}}}if(d&&d.lengt=
h){if(b.renderer&&b.renderer!=3D=3Dd[0].id){d.unshift(MathJax.OutputJax[b=
.renderer])}b.renderer=3Dd[0].id}},Hash:function(){if(MathJax.Hub.config.=
positionToHash&&document.location.hash&&document.body&&document.body.scro=
llIntoView){var d=3Ddocument.location.hash.substr(1);var =
f=3Ddocument.getElementById(d);if(!f){var =
c=3Ddocument.getElementsByTagName("a");for(var =
e=3D0,b=3Dc.length;e<b;e++){if(c[e].name=3D=3D=3Dd){f=3Dc[e];break}}}if(f=
){while(!f.scrollIntoView){f=3Df.parentNode}f=3Dthis.HashCheck(f);if(f&&f=
.scrollIntoView){setTimeout(function(){f.scrollIntoView(true)},1)}}}},Has=
hCheck:function(b){if(b.isMathJax){var =
a=3DMathJax.Hub.getJaxFor(b);if(a&&MathJax.OutputJax[a.outputJax].hashChe=
ck){b=3DMathJax.OutputJax[a.outputJax].hashCheck(b)}}return =
b},MenuZoom:function(){if(MathJax.Hub.config.showMathMenu){if(!MathJax.Ex=
tension.MathMenu){setTimeout(function(){MathJax.Callback.Queue(["Require"=
,MathJax.Ajax,"[MathJax]/extensions/MathMenu.js",{}],["loadDomain",MathJa=
x.Localization,"MathMenu"])},1000)}else{setTimeout(MathJax.Callback(["loa=
dDomain",MathJax.Localization,"MathMenu"]),1000)}if(!MathJax.Extension.Ma=
thZoom){setTimeout(MathJax.Callback(["Require",MathJax.Ajax,"[MathJax]/ex=
tensions/MathZoom.js",{}]),2000)}}},onLoad:function(){var =
a=3Dthis.onload=3DMathJax.Callback(function(){MathJax.Hub.Startup.signal.=
Post("onLoad")});if(document.body&&document.readyState){if(MathJax.Hub.Br=
owser.isMSIE){if(document.readyState=3D=3D=3D"complete"){return[a]}}else{=
if(document.readyState!=3D=3D"loading"){return[a]}}}if(window.addEventLis=
tener){window.addEventListener("load",a,false);if(!this.params.noDOMConte=
ntEvent){window.addEventListener("DOMContentLoaded",a,false)}}else{if(win=
dow.attachEvent){window.attachEvent("onload",a)}else{window.onload=3Da}}r=
eturn =
a},Typeset:function(a,b){if(MathJax.Hub.config.skipStartupTypeset){return=
 function(){}}return this.queue.Push(["Post",this.signal,"Begin =
Typeset"],["Typeset",MathJax.Hub,a,b],["Post",this.signal,"End =
Typeset"])},URL:function(b,a){if(!a.match(/^([a-z]+:\/\/|\[|\/)/)){a=3D"[=
MathJax]/"+b+"/"+a}return a},loadArray:function(b,f,c,a){if(b){if(!(b =
instanceof Array)){b=3D[b]}if(b.length){var =
h=3DMathJax.Callback.Queue(),j=3D{},e;for(var =
g=3D0,d=3Db.length;g<d;g++){e=3Dthis.URL(f,b[g]);if(c){e+=3D"/"+c}if(a){h=
.Push(["Require",MathJax.Ajax,e,j])}else{h.Push(MathJax.Ajax.Require(e,j)=
)}}return h.Push({})}}return null}};(function(d){var =
b=3Dwindow[d],e=3D"["+d+"]";var c=3Db.Hub,a=3Db.Ajax,f=3Db.Callback;var =
g=3DMathJax.Object.Subclass({JAXFILE:"jax.js",require:null,config:{},Init=
:function(i,h){if(arguments.length=3D=3D=3D0){return =
this}return(this.constructor.Subclass(i,h))()},Augment:function(k,j){var =
i=3Dthis.constructor,h=3D{};if(k!=3Dnull){for(var l in =
k){if(k.hasOwnProperty(l)){if(typeof =
k[l]=3D=3D=3D"function"){i.protoFunction(l,k[l])}else{h[l]=3Dk[l]}}}if(k.=
toString!=3D=3Di.prototype.toString&&k.toString!=3D=3D{}.toString){i.prot=
oFunction("toString",k.toString)}}c.Insert(i.prototype,h);i.Augment(null,=
j);return this},Translate:function(h,i){throw =
Error(this.directory+"/"+this.JAXFILE+" failed to define the Translate() =
method")},Register:function(h){},Config:function(){this.config=3Dc.Combin=
eConfig(this.id,this.config);if(this.config.Augment){this.Augment(this.co=
nfig.Augment)}},Startup:function(){},loadComplete:function(i){if(i=3D=3D=3D=
"config.js"){return a.loadComplete(this.directory+"/"+i)}else{var =
h=3Df.Queue();h.Push(c.Register.StartupHook("End =
Config",{}),["Post",c.Startup.signal,this.id+" Jax =
Config"],["Config",this],["Post",c.Startup.signal,this.id+" Jax =
Require"],[function(j){return =
MathJax.Hub.Startup.loadArray(j.require,this.directory)},this],[function(=
j,k){return =
MathJax.Hub.Startup.loadArray(j.extensions,"extensions/"+k)},this.config|=
|{},this.id],["Post",c.Startup.signal,this.id+" Jax =
Startup"],["Startup",this],["Post",c.Startup.signal,this.id+" Jax =
Ready"]);if(this.copyTranslate){h.Push([function(j){j.preProcess=3Dj.preT=
ranslate;j.Process=3Dj.Translate;j.postProcess=3Dj.postTranslate},this.co=
nstructor.prototype])}return =
h.Push(["loadComplete",a,this.directory+"/"+i])}}},{id:"Jax",version:"2.4=
.0",directory:e+"/jax",extensionDir:e+"/extensions"});b.InputJax=3Dg.Subc=
lass({elementJax:"mml",sourceMenuTitle:["Original","Original =
Form"],copyTranslate:true,Process:function(l,q){var j=3Df.Queue(),o;var =
k=3Dthis.elementJax;if(!(k instanceof Array)){k=3D[k]}for(var =
n=3D0,h=3Dk.length;n<h;n++){o=3Db.ElementJax.directory+"/"+k[n]+"/"+this.=
JAXFILE;if(!this.require){this.require=3D[]}else{if(!(this.require =
instanceof =
Array)){this.require=3D[this.require]}}this.require.push(o);j.Push(a.Requ=
ire(o))}o=3Dthis.directory+"/"+this.JAXFILE;var =
p=3Dj.Push(a.Require(o));if(!p.called){this.constructor.prototype.Process=
=3Dfunction(){if(!p.called){return p}throw Error(o+" failed to load =
properly")}}k=3Dc.outputJax["jax/"+k[0]];if(k){j.Push(a.Require(k[0].dire=
ctory+"/"+this.JAXFILE))}return j.Push({})},needsUpdate:function(h){var =
i=3Dh.SourceElement();return(h.originalText!=3D=3Db.HTML.getScript(i))},R=
egister:function(h){if(!c.inputJax){c.inputJax=3D{}}c.inputJax[h]=3Dthis}=
},{id:"InputJax",version:"2.4.0",directory:g.directory+"/input",extension=
Dir:g.extensionDir});b.OutputJax=3Dg.Subclass({copyTranslate:true,preProc=
ess:function(j){var =
i,h=3Dthis.directory+"/"+this.JAXFILE;this.constructor.prototype.preProce=
ss=3Dfunction(k){if(!i.called){return i}throw Error(h+" failed to load =
properly")};i=3Da.Require(h);return i},Register:function(i){var =
h=3Dc.outputJax;if(!h[i]){h[i]=3D[]}if(h[i].length&&(this.id=3D=3D=3Dc.co=
nfig.menuSettings.renderer||(h.order[this.id]||0)<(h.order[h[i][0].id]||0=
))){h[i].unshift(this)}else{h[i].push(this)}if(!this.require){this.requir=
e=3D[]}else{if(!(this.require instanceof =
Array)){this.require=3D[this.require]}}this.require.push(b.ElementJax.dir=
ectory+"/"+(i.split(/\//)[1])+"/"+this.JAXFILE)},Remove:function(h){}},{i=
d:"OutputJax",version:"2.4.0",directory:g.directory+"/output",extensionDi=
r:g.extensionDir,fontDir:e+(b.isPacked?"":"/..")+"/fonts",imageDir:e+(b.i=
sPacked?"":"/..")+"/images"});b.ElementJax=3Dg.Subclass({Init:function(i,=
h){return =
this.constructor.Subclass(i,h)},inputJax:null,outputJax:null,inputID:null=
,originalText:"",mimeType:"",sourceMenuTitle:["MathMLcode","MathML =
Code"],Text:function(i,j){var =
h=3Dthis.SourceElement();b.HTML.setScript(h,i);h.MathJax.state=3Dthis.STA=
TE.UPDATE;return c.Update(h,j)},Reprocess:function(i){var =
h=3Dthis.SourceElement();h.MathJax.state=3Dthis.STATE.UPDATE;return =
c.Reprocess(h,i)},Update:function(h){return =
this.Rerender(h)},Rerender:function(i){var =
h=3Dthis.SourceElement();h.MathJax.state=3Dthis.STATE.OUTPUT;return =
c.Process(h,i)},Remove:function(h){if(this.hover){this.hover.clear(this)}=
b.OutputJax[this.outputJax].Remove(this);if(!h){c.signal.Post(["Remove =
Math",this.inputID]);this.Detach()}},needsUpdate:function(){return =
b.InputJax[this.inputJax].needsUpdate(this)},SourceElement:function(){ret=
urn document.getElementById(this.inputID)},Attach:function(i,j){var =
h=3Di.MathJax.elementJax;if(i.MathJax.state=3D=3D=3Dthis.STATE.UPDATE){h.=
Clone(this)}else{h=3Di.MathJax.elementJax=3Dthis;if(i.id){this.inputID=3D=
i.id}else{i.id=3Dthis.inputID=3Db.ElementJax.GetID();this.newID=3D1}}h.or=
iginalText=3Db.HTML.getScript(i);h.inputJax=3Dj;if(h.root){h.root.inputID=
=3Dh.inputID}return h},Detach:function(){var =
h=3Dthis.SourceElement();if(!h){return}try{delete =
h.MathJax}catch(i){h.MathJax=3Dnull}if(this.newID){h.id=3D""}},Clone:func=
tion(h){var i;for(i in =
this){if(!this.hasOwnProperty(i)){continue}if(typeof(h[i])=3D=3D=3D"undef=
ined"&&i!=3D=3D"newID"){delete this[i]}}for(i in =
h){if(!h.hasOwnProperty(i)){continue}if(typeof(this[i])=3D=3D=3D"undefine=
d"||(this[i]!=3D=3Dh[i]&&i!=3D=3D"inputID")){this[i]=3Dh[i]}}}},{id:"Elem=
entJax",version:"2.4.0",directory:g.directory+"/element",extensionDir:g.e=
xtensionDir,ID:0,STATE:{PENDING:1,PROCESSED:2,UPDATE:3,OUTPUT:4},GetID:fu=
nction(){this.ID++;return"MathJax-Element-"+this.ID},Subclass:function(){=
var =
h=3Dg.Subclass.apply(this,arguments);h.loadComplete=3Dthis.prototype.load=
Complete;return =
h}});b.ElementJax.prototype.STATE=3Db.ElementJax.STATE;b.OutputJax.Error=3D=
{id:"Error",version:"2.4.0",config:{},ContextMenu:function(){return =
b.Extension.MathEvents.Event.ContextMenu.apply(b.Extension.MathEvents.Eve=
nt,arguments)},Mousedown:function(){return =
b.Extension.MathEvents.Event.AltContextMenu.apply(b.Extension.MathEvents.=
Event,arguments)},getJaxFromMath:function(h){return(h.nextSibling.MathJax=
||{}).error},Jax:function(j,i){var =
h=3DMathJax.Hub.inputJax[i.type.replace(/ =
*;(.|\s)*/,"")];return{inputJax:(h||{id:"Error"}).id,outputJax:"Error",so=
urceMenuTitle:["ErrorMessage","Error =
Message"],sourceMenuFormat:"Error",originalText:MathJax.HTML.getScript(i)=
,errorText:j}}};b.InputJax.Error=3D{id:"Error",version:"2.4.0",config:{},=
sourceMenuTitle:["Original","Original =
Form"]}})("MathJax");(function(n){var =
g=3Dwindow[n];if(!g){g=3Dwindow[n]=3D{}}var c=3Dg.Hub;var =
r=3Dc.Startup;var v=3Dc.config;var =
f=3Ddocument.getElementsByTagName("head")[0];if(!f){f=3Ddocument.childNod=
es[0]}var =
b=3D(document.documentElement||document).getElementsByTagName("script");v=
ar e=3Dnew RegExp("(^|/)"+n+"\\.js(\\?.*)?$");for(var =
p=3Db.length-1;p>=3D0;p--){if((b[p].src||"").match(e)){r.script=3Db[p].in=
nerHTML;if(RegExp.$2){var s=3DRegExp.$2.substr(1).split(/\&/);for(var =
o=3D0,k=3Ds.length;o<k;o++){var =
l=3Ds[o].match(/(.*)=3D(.*)/);if(l){r.params[unescape(l[1])]=3Dunescape(l=
[2])}}}v.root=3Db[p].src.replace(/(^|\/)[^\/]*(\?.*)?$/,"").replace(/^(ht=
tps?:)\/\/[0-9a-f]+(-[0-9a-f]+)?.ssl.cf1.rackcdn.com\//,"$1//cdn.mathjax.=
org/");g.Ajax.config.root=3Dv.root;break}}var =
h=3Dnavigator.userAgent;var =
a=3D{isMac:(navigator.platform.substr(0,3)=3D=3D=3D"Mac"),isPC:(navigator=
.platform.substr(0,3)=3D=3D=3D"Win"),isMSIE:("ActiveXObject" in =
window&&"clipboardData" in =
window),isFirefox:(h.match(/Gecko\//)&&!h.match(/like =
Gecko/)),isSafari:(h.match(/ =
(Apple)?WebKit\//)!=3Dnull&&(!window.chrome||window.chrome.loadTimes=3D=3D=
null)),isChrome:(window.chrome!=3Dnull&&window.chrome.loadTimes!=3Dnull),=
isOpera:(window.opera!=3Dnull&&window.opera.version!=3Dnull),isKonqueror:=
("konqueror" in =
window&&navigator.vendor=3D=3D"KDE"),versionAtLeast:function(x){var =
w=3D(this.version).split(".");x=3D(new String(x)).split(".");for(var =
y=3D0,j=3Dx.length;y<j;y++){if(w[y]!=3Dx[y]){return =
parseInt(w[y]||"0")>=3DparseInt(x[y])}}return =
true},Select:function(j){var i=3Dj[c.Browser];if(i){return =
i(c.Browser)}return null}};var d=3Dh.replace(/^Mozilla\/(\d+\.)+\d+ =
/,"").replace(/[a-z][-a-z0-9._: ]+\/\d+[^ ]*-[^ ]*\.([a-z][a-z])?\d+ =
/i,"").replace(/Gentoo |Ubuntu\/(\d+\.)*\d+ (\([^)]*\) =
)?/,"");c.Browser=3Dc.Insert(c.Insert(new =
String("Unknown"),{version:"0.0"}),a);for(var u in =
a){if(a.hasOwnProperty(u)){if(a[u]&&u.substr(0,2)=3D=3D=3D"is"){u=3Du.sli=
ce(2);if(u=3D=3D=3D"Mac"||u=3D=3D=3D"PC"){continue}c.Browser=3Dc.Insert(n=
ew String(u),a);var q=3Dnew RegExp(".*(Version/| Trident/.*; =
rv:)((?:\\d+\\.)+\\d+)|.*("+u+")"+(u=3D=3D"MSIE"?" =
":"/")+"((?:\\d+\\.)*\\d+)|(?:^|\\(| )([a-z][-a-z0-9._: =
]+|(?:Apple)?WebKit)/((?:\\d+\\.)+\\d+)");var =
t=3Dq.exec(d)||["","","","unknown","0.0"];c.Browser.name=3D(t[1]!=3D""?u:=
(t[3]||t[5]));c.Browser.version=3Dt[2]||t[4]||t[6];break}}}c.Browser.Sele=
ct({Safari:function(j){var =
i=3DparseInt((String(j.version).split("."))[0]);if(i>85){j.webkit=3Dj.ver=
sion}if(i>=3D534){j.version=3D"5.1"}else{if(i>=3D533){j.version=3D"5.0"}e=
lse{if(i>=3D526){j.version=3D"4.0"}else{if(i>=3D525){j.version=3D"3.1"}el=
se{if(i>500){j.version=3D"3.0"}else{if(i>400){j.version=3D"2.0"}else{if(i=
>85){j.version=3D"1.0"}}}}}}}j.isMobile=3D(navigator.appVersion.match(/Mo=
bile/i)!=3Dnull);j.noContextMenu=3Dj.isMobile},Firefox:function(j){if((j.=
version=3D=3D=3D"0.0"||h.match(/Firefox/)=3D=3Dnull)&&navigator.product=3D=
=3D=3D"Gecko"){var m=3Dh.match(/[\/ ]rv:(\d+\.\d.*?)[\) =
]/);if(m){j.version=3Dm[1]}else{var =
i=3D(navigator.buildID||navigator.productSub||"0").substr(0,8);if(i>=3D"2=
0111220"){j.version=3D"9.0"}else{if(i>=3D"20111120"){j.version=3D"8.0"}el=
se{if(i>=3D"20110927"){j.version=3D"7.0"}else{if(i>=3D"20110816"){j.versi=
on=3D"6.0"}else{if(i>=3D"20110621"){j.version=3D"5.0"}else{if(i>=3D"20110=
320"){j.version=3D"4.0"}else{if(i>=3D"20100121"){j.version=3D"3.6"}else{i=
f(i>=3D"20090630"){j.version=3D"3.5"}else{if(i>=3D"20080617"){j.version=3D=
"3.0"}else{if(i>=3D"20061024"){j.version=3D"2.0"}}}}}}}}}}}}j.isMobile=3D=
(navigator.appVersion.match(/Android/i)!=3Dnull||h.match(/ =
Fennec\//)!=3Dnull||h.match(/Mobile/)!=3Dnull)},Opera:function(i){i.versi=
on=3Dopera.version()},MSIE:function(j){j.isIE9=3D!!(document.documentMode=
&&(window.performance||window.msPerformance));MathJax.HTML.setScriptBug=3D=
!j.isIE9||document.documentMode<9;var w=3Dfalse;try{new =
ActiveXObject("MathPlayer.Factory.1");j.hasMathPlayer=3Dw=3Dtrue}catch(m)=
{}try{if(w&&!r.params.NoMathPlayer){var =
i=3Ddocument.createElement("object");i.id=3D"mathplayer";i.classid=3D"cls=
id:32F66A20-7614-11D4-BD11-00104BD3F987";document.getElementsByTagName("h=
ead")[0].appendChild(i);document.namespaces.add("m","http://www.w3.org/19=
98/Math/MathML");j.mpNamespace=3Dtrue;if(document.readyState&&(document.r=
eadyState=3D=3D=3D"loading"||document.readyState=3D=3D=3D"interactive")){=
document.write('<?import namespace=3D"m" =
implementation=3D"#MathPlayer">');j.mpImported=3Dtrue}}else{document.name=
spaces.add("mjx_IE_fix","http://www.w3.org/1999/xlink")}}catch(m){}}});c.=
Browser.Select(MathJax.Message.browsers);if(g.AuthorConfig&&typeof =
g.AuthorConfig.AuthorInit=3D=3D=3D"function"){g.AuthorConfig.AuthorInit()=
}c.queue=3Dg.Callback.Queue();c.queue.Push(["Post",r.signal,"Begin"],["Co=
nfig",r],["Cookie",r],["Styles",r],["Message",r],function(){var =
i=3Dg.Callback.Queue(r.Jax(),r.Extensions());return =
i.Push({})},["Menu",r],r.onLoad(),function(){MathJax.isReady=3Dtrue},["Ty=
peset",r],["Hash",r],["MenuZoom",r],["Post",r.signal,"End"])})("MathJax")=
}};=0A=

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/web-storage-cache.min.js

/*!=0A=
    web-storage-cache -- Added `expires` attribute and serialize data =
with `JSON.parse` for the localStorage and sessionStorage.=0A=
    Version 0.0.3=0A=
    https://github.com/WQTeam/web-storage-cache=0A=
    (c) 2013-2015 WQTeam, MIT license=0A=
*/=0A=
!function(a,b){"function"=3D=3Dtypeof =
define&&define.amd?define(b):"object"=3D=3Dtypeof =
exports?module.exports=3Db():a.WebStorageCache=3Db()}(this,function(){"us=
e strict";function a(a,b){for(var c in b)a[c]=3Db[c];return a}function =
b(a){var b=3D!1;if(a&&a.setItem){b=3D!0;var =
c=3D"__"+Math.round(1e7*Math.random());try{a.setItem(c,c),a.removeItem(c)=
}catch(d){b=3D!1}}return b}function c(a){var b=3Dtypeof =
a;return"string"=3D=3D=3Db?window[a]:a}function d(a){return"[object =
Date]"=3D=3D=3DObject.prototype.toString.call(a)&&!isNaN(a.getTime())}fun=
ction e(a,b){if(b=3Db||new Date,"number"=3D=3Dtypeof =
a?a=3Da=3D=3D=3D1/0?l:new Date(b.getTime()+1e3*a):"string"=3D=3Dtypeof =
a&&(a=3Dnew Date(a)),a&&!d(a))throw new Error("`expires` parameter =
cannot be converted to a valid Date instance");return a}function =
f(a){var b=3D!1;if(a)if(a.code)switch(a.code){case 22:b=3D!0;break;case =
1014:"NS_ERROR_DOM_QUOTA_REACHED"=3D=3D=3Da.name&&(b=3D!0)}else-214702488=
2=3D=3D=3Da.number&&(b=3D!0);return b}function g(a,b){this.c=3D(new =
Date).getTime(),b=3Db||l;var =
c=3De(b);this.e=3Dc.getTime(),this.v=3Da}function h(a){return a&&"c"in =
a&&"e"in a&&"v"in a?!0:!1}function i(a){var b=3D(new =
Date).getTime();return b<a.e}function j(a){return"string"!=3Dtypeof =
a&&(console.warn(a+" used as a key, but it is not a =
string."),a=3DString(a)),a}function k(d){var =
e=3D{storage:"localStorage",exp:1/0},f=3Da(e,d),g=3Dc(f.storage),h=3Db(g)=
;this.isSupported=3Dfunction(){return =
h},h?(this.storage=3Dg,this.quotaExceedHandler=3Dfunction(a,b,c){if(conso=
le.warn("Quota exceeded!"),c&&c.force=3D=3D=3D!0){var =
d=3Dthis.deleteAllExpires();console.warn("delete all expires CacheItem : =
["+d+"] and try execute `set` method =
again!");try{c.force=3D!1,this.set(a,b,c)}catch(e){console.warn(e)}}}):a(=
this,n)}var l=3Dnew Date("Fri, 31 Dec 9999 23:59:59 =
UTC"),m=3D{serialize:function(a){return =
JSON.stringify(a)},deserialize:function(a){return =
a&&JSON.parse(a)}},n=3D{set:function(){},get:function(){},"delete":functi=
on(){},deleteAllExpires:function(){},clear:function(){},add:function(){},=
replace:function(){},touch:function(){}},o=3D{set:function(b,c,d){if(b=3D=
j(b),d=3Da({force:!0},d),void 0=3D=3D=3Dc)return this["delete"](b);var =
e=3Dm.serialize(c),h=3Dnew =
g(e,d.exp);try{this.storage.setItem(b,m.serialize(h))}catch(i){f(i)?this.=
quotaExceedHandler(b,e,d,i):console.error(i)}return =
c},get:function(a){a=3Dj(a);var =
b=3D(this.storage.getItem(a),null);try{b=3Dm.deserialize(this.storage.get=
Item(a))}catch(c){return null}if(h(b)){if(i(b)){var d=3Db.v;return =
m.deserialize(d)}this["delete"](a)}return =
null},"delete":function(a){return =
a=3Dj(a),this.storage.removeItem(a),a},deleteAllExpires:function(){for(va=
r a=3Dthis.storage.length,b=3D[],c=3Dthis,d=3D0;a>d;d++){var =
e=3Dthis.storage.key(d),f=3Dnull;try{f=3Dm.deserialize(this.storage.getIt=
em(e))}catch(g){}if(null!=3D=3Df&&void 0!=3D=3Df.e){var h=3D(new =
Date).getTime();h>=3Df.e&&b.push(e)}}return =
b.forEach(function(a){c["delete"](a)}),b},clear:function(){this.storage.c=
lear()},add:function(b,c,d){b=3Dj(b),d=3Da({force:!0},d);try{var =
e=3Dm.deserialize(this.storage.getItem(b));if(!h(e)||!i(e))return =
this.set(b,c,d),!0}catch(f){return =
this.set(b,c,d),!0}return!1},replace:function(a,b,c){a=3Dj(a);var =
d=3Dnull;try{d=3Dm.deserialize(this.storage.getItem(a))}catch(e){return!1=
}if(h(d)){if(i(d))return =
this.set(a,b,c),!0;this["delete"](a)}return!1},touch:function(a,b){a=3Dj(=
a);var =
c=3D(this.storage.getItem(a),null);try{c=3Dm.deserialize(this.storage.get=
Item(a))}catch(d){return!1}if(h(c)){if(i(c))return =
this.set(a,this.get(a),{exp:b}),!0;this["delete"](a)}return!1}};return =
k.prototype=3Do,k});
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/replace.min.js

$(function(){!function(){var oReplace=3D{wsCache:new =
WebStorageCache,replace:function(){var =
_this=3Dthis;$.ajax({type:"get",url:"http://internalapi.csdn.net/knowledg=
e/public/public/api/words?x-acl-token=3D9DeJLGuYSy/6nSmDQen5amEWUh0K",asy=
nc:!1,dataType:"jsonp",jsonp:"callback",success:function(resobj){var =
resData,storage,data;"ok"=3D=3Dresobj.msg&&(resData=3Dresobj.data,storage=
=3Dwindow.localStorage,data=3Deval(resData),_this.wsCache.isSupported()&&=
_this.wsCache.set("realData",resData,{exp:86400,force:!0}),_this.handle($=
("#article_content"),data))},error:function(){console.log("Send Ajax =
error ...")}})},handler:function(){var =
data,_this=3Dthis;_this.wsCache.deleteAllExpires(),data=3Dwindow.localSto=
rage.getItem("realData"),data?(data=3DJSON.parse(data).hasOwnProperty("v"=
)?JSON.parse(localStorage.getItem("realData")).v:JSON.parse(localStorage.=
getItem("realData")),data=3Deval(data),_this.handle($("#article_content")=
,data)):_this.replace()},handle:function(a,b){function m(a,b){n(a,b);var =
c=3Dl.replace(/(<p>|<p\s+([^>]+>))(((?!<\/p)[\s\S])+)<\/p>/gi,function(a,=
b,c,d){var e=3Dd.replace(/((<[^>]+>)*)([^<]*)/gim,function(a,b,c,d){var =
e,f,g,h,i,k;if(b||(b=3D""),d)if(0=3D=3Db.indexOf("<a")||0=3D=3D=3Dj.lengt=
h)d=3Dd;else{e=3D[];for(f in =
j)g=3Dj[f].reg,-1!=3D=3Dd.search(g)&&"contain"!=3Df&&(d=3Dd.replace(g,"{[=
("+f+")]}"),e.push(f));for(h=3D0;h<e.length;h++)i=3De[h],k=3Dj[i],d=3Dd.r=
eplace("{[("+i+")]}",'<a href=3D"'+k.url+"\" class=3D'replace_word' =
title=3D\""+k.tip+"\" target=3D'_blank' style=3D'color:#df3434; =
font-weight:bold;'>"+k.word+"</a>"),delete j[i]}else d=3D"";return =
b+d});return b+e+"</p>"});a.html(c)}function n(a,b){function m(a){var =
b=3D{$:"\\$","*":"\\*","(":"\\(",")":"\\)","+":"\\+",".":"\\.","?":"\\?",=
"^":"\\^","|":"\\|"};return =
String(a).replace(/[$*()+.?^|]/g,function(a){return b[a]})}var =
n,o,p,q,r,s,t,u,v,w,x,y,k=3Da.text(),l=3D!1;for(n=3D0;n<b.length;n++)if(o=
=3Db[n].word,p=3Dm(o),q=3D/([\u4e00-\u9fa5]+)\w*/gi.test(p)?p:"\\b"+p+"\\=
b",r=3Dnew =
RegExp(q,"i"),-1!=3D=3Dk.search(r)){if(d.length<=3D0)d.push(r+"");else =
for(s=3D0;s<d.length;s++)l=3Dr!=3Dd[s]?!0:!1;l&&d.push(r+""),d=3Dc.unique=
(d),t=3Db[n].url,u=3Db[n].name,v=3Db[n].logo,w=3Db[n].subCount,x=3Db[n].c=
onCount,y=3Db[n].word,e.push(t),f.push(u),g.push(v),h.push(w),i.push(x),j=
.push({word:y,url:t,tip:u,reg:r})}j=3Dc.uniqueObj(j)}function o(){var =
d,a=3D"",b=3Ddocument.getElementById("relate");if(f.length<=3D0)b.style.d=
isplay=3D"none";else{for(b.style.display=3D"block",f=3Dc.unique(f),e=3Dc.=
unique(e),f=3Dc.unique(f),g=3Dc.unique(g),h=3Dc.unique(h),i=3Dc.unique(i)=
,d=3D0;d<f.length;d++)a+=3D'<dl class=3D"relate_list" ><dt><a =
target=3D"_blank" href=3D"'+e[d]+'"><img src=3D"'+g[d]+'" =
alt=3D"img"/></a></dt><dd><h4><a target=3D"_blank" =
href=3D"'+e[d]+'">'+f[d]+"</a></h4><p><label><span>"+h[d]+"</span><em>=E5=
=85=B3=E6=B3=A8</em><i>|</i><span>"+i[d]+"</span><em>=E6=94=B6=E5=BD=95</=
em></label></p></dd></dl>";$(".relate_c").html(a)}}var =
k,l,c=3Dthis,d=3D[],e=3D[],f=3D[],g=3D[],h=3D[],i=3D[],j=3D[];for(k=3D0;k=
<b.length;k++)b[k].flg=3D!1;l=3Da.html(),m(a,b),o()},unique:function(a){v=
ar =
e,d,b=3D[],c=3D{};for(d=3D0;null!=3D(e=3Da[d]);d++)c[e]||(b.push(e),c[e]=3D=
!0);return b},uniqueObj:function(a){var =
d,b=3D[],c=3D[];if(a.length)for(b.push(a[0]),c.push(a[0].word),d=3D1;d<a.=
length;d++)c.push(a[d].word),c.indexOf(a[d].word)=3D=3Dd&&b.push(a[d]);re=
turn b},classStyle:function(){var =
a=3D$(".replace_word");a.css({color:"#df3434",fontWeight:"bold!important"=
})}};try{oReplace.classStyle(),oReplace.handler()}catch(error){return =
console.log(error.message),void 0}}.call(this)});
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/category.js

=EF=BB=BF
$(function()
{
  =20
        var aCategory =3D $(".category_r label"),
            aClose =3D $(".category_r").find(".J_close");
        aCategory.click(function () {
            if ($(this).find(".subItem").is(":hidden")) {
                //close all
                var thisClickText =3D $(this).attr("onclick");

                $.each(aCategory, function (i) {
                    var thisCategory =3D $(aCategory[i]);
                    var thisCategoryText =3D =
thisCategory.attr("onclick");
                  =20
                    if (thisCategoryText !=3D thisClickText)
                    {
                        if =
(!thisCategory.find(".subItem").is(":hidden")) {
                            thisCategory.find(".arrow-up").hide().end()
                                .find(".arrow-down").show();
                            thisCategory.find(".subItem").hide();
                        }
                    }
                });

                $(this).find(".arrow-up").show().end()
                        .find(".arrow-down").hide();
                $(this).find(".subItem").show();

                //$("#body").css("overflow", "visible");
                //$("#main").css("overflow", "visible");              =20
            }
            else {
                $(this).find(".arrow-up").hide().end()
                       .find(".arrow-down").show();
                $(this).find(".subItem").hide();

               // $("#body").css("overflow", "hidden");
               // $("#main").css("overflow", "hidden");
            }
        });
        aClose.click(function () {
            $(this).parents(".subItem").hide()
                    .siblings(".arrow-up").hide()
                    .siblings(".arrow-down").show();

            //$("#body").css("overflow", "hidden");
            //$("#main").css("overflow", "hidden");

            return false;
        });

     $(".similar_c_t label span").click(function () {        =20
         $(".similar_cur").removeClass("similar_cur");
         $(this).parent().addClass("similar_cur");
     });
})

function GetCategoryArticles(id,username,type,aid)
{
    var topid =3D "top_" + id;

    if (type =3D=3D "top") {
        var objtop =3D $("#" + topid +" li");
        if (objtop.length > 0)
        {
            return;
        }
    }
    var url =3D "/" + username + "/svc/GetCategoryArticleList?id=3D" + =
id + "&type=3D"+ type;
	//url=3D"http://dev.blog.csdn.net:5391"+url;
	$.get(url, function (res) {	 =20

	    if (type =3D=3D "top")
	    {
	        var objtop =3D $("#" + topid);
	        objtop.html("");	      =20
	        $(res).each(function (i) {
	            var obj =3D res[i];
	            if (aid !=3D obj.articleid) {	            =20
	                var articleurl =3D "http://blog.csdn.net/" + username + =
"/article/details/" + obj.articleid;
	                var aritcleid =3D "top_aritcle_" + obj.articleid + =
Math.random().toString().replace("0.");
	                objtop.append("<li class=3D\"tracking-ad\" =
data-mod=3D\"popu_140\"><em>=E2=80=A2</em><a href=3D'" + articleurl + "' =
 id=3D'" + aritcleid + "' target=3D\"_blank\"></a></li> ");
	                $("#" + aritcleid).text(obj.title);
	                $("#" + aritcleid).attr("title",obj.title);
	            }
	        });

	        var count =3D =
$(objtop.parent().parent().find("em")[0]).text().replace("=EF=BC=88", =
"").replace("=EF=BC=89", "");
	        if (parseInt(count) > 5)
	        {
	            var moreurl =3D objtop.parent().find(".subItem_t =
a").attr("href");
	            objtop.append("<li style=3D\"padding-left: 300px;\"><a =
href=3D'" + moreurl + "' =
target=3D\"_blank\">=E6=9B=B4=E5=A4=9A</a></li>");
	        }

	    }
	    else if (type =3D=3D "foot")
	    {	       	      =20
	        var objfootleft =3D $(".similar_list.fl");
	        var objfootright =3D $(".similar_list.fr");

	        objfootleft.html("");
	        objfootright.html("");

	        var j =3D 0;

	        $.each(res, function (i) {	           =20
	            var obj =3D res[i];
	            if (aid !=3D obj.articleid) {
	                var articleurl =3D "http://blog.csdn.net/" + username + =
"/article/details/" + obj.articleid;
	                var aritcleid =3D "foot_aritcle_" + obj.articleid + =
Math.random().toString().replace("0.");

	                var html =3D "<li><em>=E2=80=A2</em><a href=3D'" + =
articleurl + "'  id=3D'" + aritcleid + "' =
target=3D\"_blank\"></a><span>" + obj.posttime + =
"</span><label><i>=E9=98=85=E8=AF=BB</i><b>" + obj.viewcount + =
"</b></label></li> ";
	                if (j % 2 =3D=3D 1) {
	                    objfootright.append(html);
	                }
	                else {
	                    objfootleft.append(html);
	                }
	                $("#" + aritcleid).text(obj.title);
	                $("#" + aritcleid).attr("title",obj.title);
	                j++;

	                $(".similar_article").show();
	            }
	        });

	        var count =3D $(".similar_cur span =
em").text().replace("=EF=BC=88", "").replace("=EF=BC=89", "");
	        if (parseInt(count) > 10) {
	            var moreurl =3D"";
	            $.each($(".subItem_t a"), function (i) {
	                if($(this).attr("href").toString().indexOf(id)>-1)
	                {
	                    moreurl =3D $(this).attr("href");	                  =
 =20
	                }
	            });
	            if (moreurl !=3D "") {
	                //objfootright.append("<li style=3D\"padding-left: =
200px;\"><a href=3D'" + moreurl + "' =
target=3D\"_blank\">=E6=9B=B4=E5=A4=9A</a></li>");
	                $(".MoreArticle").remove();
	                $(".similar_wrap").append('<a href=3D' + moreurl + ' =
class=3D"MoreArticle">=E6=9B=B4=E5=A4=9A=E6=96=87=E7=AB=A0</a>');
	            }
	        }
	    }
	});
}
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://csdnimg.cn/jobreco/job_reco.js

/*
UI=E5=9C=B0=E5=9D=80=EF=BC=9A\\192.168.6.119\=E4=BA=A7=E5=93=81=E7=AE=A1=E7=
=90=86\2_=E6=95=B0=E6=8D=AE=E6=94=AF=E6=92=91\03_UI\=E8=81=8C=E4=BD=8D=E6=
=8E=A8=E8=8D=90
=E5=BC=95=E7=94=A8=E6=96=B9=E6=B3=95=EF=BC=9A<script =
src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
=E8=B0=83=E7=94=A8=E6=96=B9=E6=B3=95=EF=BC=9Acsdn.position.show({
sourceType: "", =
//=E5=8D=9A=E5=AE=A2blog=EF=BC=8C=E8=AE=BA=E5=9D=9Bdiscussion_topic, =
=E4=B8=8B=E8=BD=BD download=EF=BC=8C=E9=97=AE=E7=AD=94ask_topic, =
=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4space=EF=BC=9F=EF=BC=9F, =
=E8=8B=B1=E9=9B=84=E4=BC=9Ahero=EF=BC=9F=EF=BC=9F, =
=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD course, csto
tplType: "", //=E6=A8=A1=E6=9D=BF=E7=B1=BB=E5=9E=8B=EF=BC=8C
               =E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=EF=BC=9AblogDetail,
               =E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=EF=BC=9AblogSpec,
               =
=E8=AE=BA=E5=9D=9B=E8=AF=A6=E6=83=85=EF=BC=9AbbsDetail=EF=BC=8C
               =
=E9=97=AE=E7=AD=94=E8=AF=A6=E6=83=85=EF=BC=9AaskDetail=EF=BC=8C
               =
=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4--=E6=88=91=E7=9A=84=E7=A9=BA=E9=97=B4=
=EF=BC=9ApersonalSpaceMy=EF=BC=8C
               =
=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4--=E9=A6=96=E9=A1=B5=EF=BC=9Apersonal=
SpaceHome=EF=BC=8C
               =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E9=A6=96=E9=A1=B5=EF=BC=9AheroHome
               =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E7=AD=94=E9=A2=98=E4=B8=93=E5=AE=B6=E7=BB=84=
=EF=BC=9AheroExpert
               =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=8C=91=E6=88=98=E9=A2=98=E7=9B=AE=E8=AF=A6=
=E6=83=85=E9=A1=B5=EF=BC=9AheroFightDetail
               =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=88=91=E7=9A=84=E8=8B=B1=E9=9B=84=E4=BC=9A=
=EF=BC=9AheroMy
               =
=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E5=88=86=E7=B1=BB=
=E5=88=97=E8=A1=A8=EF=BC=9A=E6=97=A0
               =
=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E8=AF=A6=E6=83=85=
=E9=A1=B5=EF=BC=9AeduDetail
               =E6=90=9C=E7=B4=A2=EF=BC=9Asearch
               =
=E4=B8=8B=E8=BD=BD--=E6=88=91=E7=9A=84=E8=B5=84=E6=BA=90=EF=BC=9AdownMy
               =
=E4=B8=8B=E8=BD=BD--=E4=B8=8B=E8=BD=BD=E9=A1=B5=E5=92=8C=E4=B8=8B=E8=BD=BD=
=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9AdownDetail

               =
CSTO=E6=A1=88=E4=BE=8B=E5=BA=93=E5=88=97=E8=A1=A8=EF=BC=9AcstoCaseList
               =
CSTO=E6=A1=88=E4=BE=8B=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9AcstoCaseDetail
               CSTO=E6=88=91=E7=9A=84T=E5=8F=B0=EF=BC=9AcstoMy
               =
CSTO=E9=A1=B9=E7=9B=AE=E5=88=97=E8=A1=A8=E9=A1=B5=EF=BC=9AcstoProjectList=

               =
CSTO=E9=A1=B9=E7=9B=AE=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9AcstoProjectDeta=
il

searchType: "", =
//=E9=A1=B5=E9=9D=A2=E7=B1=BB=E5=9E=8B=EF=BC=8C=E7=94=A8=E4=BA=8E=E6=90=9C=
=E7=B4=A2=E5=87=BD=E6=95=B0=EF=BC=8Cdetail(=E8=AF=A6=E6=83=85=E9=A1=B5) =
/ list(=E5=88=97=E8=A1=A8=E9=A1=B5)=E3=80=82
searchKey: "", =
//=E6=90=9C=E7=B4=A2=E5=85=B3=E9=94=AE=E5=AD=97=EF=BC=8C=E4=BE=8B=E5=A6=82=
=E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=EF=BC=9A=E5=8D=9A=E6=96=87ID=EF=BC=8C=
=E5=A6=82=E6=9E=9C=E6=98=AF=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=EF=BC=9A=E5=
=88=86=E7=B1=BB=E5=AD=97=E7=AC=A6=E4=B8=B2=E3=80=82
username: "", =
//=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D
containerId: "" //=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
});
=E4=B8=BE=E4=BE=8B=EF=BC=9A
=E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=E9=A1=B5
<div id=3D"job_blog_reco">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
   csdn.position.show({
     sourceType: "blog",
     tplType: "blogDetail",
     searchType: "detail",
     searchKey: "=E5=8D=9A=E6=96=87ID",
     username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
     containerId: "job_blog_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
 </script>
</div>

=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=E9=A1=B5
<div id=3D"job_blog_reco_spec">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
   csdn.position.show({
     sourceType: "blog",
     tplType: "blogSpec",
     searchType: "list",
     searchKey: =
"=E4=B8=93=E6=A0=8F=E5=88=86=E7=B1=BB=E5=AD=97=E7=AC=A6=E4=B8=B2",
     username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
     containerId: "job_blog_reco_spec"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
 </script>
</div>

=E8=AE=BA=E5=9D=9B=E8=AF=A6=E6=83=85=E9=A1=B5
<div id=3D"job_bbs_reco">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
   csdn.position.show({
     sourceType: "discussion_topic",
     tplType: "bbsDetail",
     searchType: "detail",
     searchKey: "=E8=B4=B4=E5=AD=90ID",
     username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
     containerId: "job_bbs_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
 </script>
</div>

=E9=97=AE=E7=AD=94=E8=AF=A6=E6=83=85=E9=A1=B5
<div id=3D"job_ask_reco">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
   csdn.position.show({
     sourceType: "ask_topic",
     tplType: "askDetail",
     searchType: "detail",
     searchKey: "=E9=97=AE=E9=A2=98ID",
     username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
     containerId: "job_ask_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
 </script>
</div>

=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4--=E6=88=91=E7=9A=84=E7=A9=BA=E9=97=B4=

<div id=3D"job_myspace_reco">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
   csdn.position.show({
     sourceType: "my",
     tplType: "personalSpaceMy",
     searchType: "list",
     searchKey: "NO",
     username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
     containerId: "job_myspace_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
 </script>
</div>
=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4--=E9=A6=96=E9=A1=B5
<div id=3D"job_myhome_reco">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
   csdn.position.show({
     sourceType: "my",
     tplType: "personalSpaceHome",
     searchType: "list",
     searchKey: "NO",
     username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
     containerId: "job_myhome_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
  });
 </script>
</div>







 =
=E8=8B=B1=E9=9B=84=E4=BC=9A-=E9=A6=96=E9=A1=B5=EF=BC=8C=E6=AD=A3=E5=9C=A8=
=E5=8F=91=E7=94=9F=E7=9A=84=E4=B8=8B=E9=9D=A2=E3=80=82
 http://hero.csdn.net/
 <div id=3D"job_yx_home_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "hero",
   tplType: "heroHome",
   searchType: "list",
   searchKey: "NO",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_yx_home_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E7=AD=94=E9=A2=98=E4=B8=93=E5=AE=B6=E7=BB=84=
=EF=BC=8C=E5=AE=A1=E9=A2=98=E4=B8=93=E5=AE=B6=E7=BB=84=E4=B8=8B=E9=9D=A2=E3=
=80=82
 http://hero.csdn.net/Examine/Apply
 <div id=3D"job_yx_expert_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "hero",
   tplType: "heroExpert",
   searchType: "list",
   searchKey: "NO",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_yx_expert_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=8C=91=E6=88=98=E9=A2=98=E7=9B=AE=E8=AF=A6=
=E6=83=85=E9=A1=B5=EF=BC=8C=E5=8F=91=E5=B8=83=E5=85=AC=E5=8F=B8=E4=B8=8B=E9=
=9D=A2=E3=80=82
 =
http://hero.csdn.net/OnlineCompiler/Index?ID=3D10646&ExamID=3D10649&from=3D=
4
 <div id=3D"job_yx_fight_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "hero",
   tplType: "heroFightDetail",
   searchType: "list",
   searchKey: "NO",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_yx_fight_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>


 =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=88=91=E7=9A=84=E8=8B=B1=E9=9B=84=E4=BC=9A=
=EF=BC=8C=E5=88=97=E8=A1=A8=E7=9A=84=E4=B8=8B=E9=9D=A2=E3=80=82
 http://hero.csdn.net/Exam/List
 <div id=3D"job_yx_my_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "hero",
   tplType: "heroMy",
   searchType: "list",
   searchKey: "NO",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_yx_my_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>


 =
=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E5=88=86=E7=B1=BB=
=E5=88=97=E8=A1=A8
 <div id=3D"job_edu_detail_reco">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
 csdn.position.show({
 sourceType: "course",
 tplType: "eduDetail",
 searchType: "list",
 searchKey: =
"=E9=A1=B5=E9=9D=A2=E4=B8=8A=E7=9A=84=E6=90=9C=E7=B4=A2=E7=B1=BB=E5=9E=8B=
",
 username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
 containerId: "job_edu_detail_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
 });
 </script>
 </div>




 =
=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E8=AF=A6=E6=83=85=
=E9=A1=B5=EF=BC=8C=E5=9C=A8=E5=8F=B3=E4=BE=A7=E6=8E=A8=E8=8D=90=E8=AF=BE=E7=
=A8=8B=E4=B8=8B=E8=BE=B9=E3=80=82
 http://edu.csdn.net/course/detail/326
 <div id=3D"job_edu_detail_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "course",
   tplType: "eduDetail",
   searchType: "detail",
   searchKey: "=E8=AF=BE=E7=A8=8BID",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_edu_detail_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>



 =E6=90=9C=E7=B4=A2
 http://so.csdn.net/so/search/s.do?q=3Djava
 <div id=3D"job_search_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: =
"all=EF=BC=88=E8=AF=A5=E5=85=B3=E9=94=AE=E5=AD=97=E6=9A=82=E6=97=B6=E4=B8=
=8D=E8=A2=AB=E4=BD=BF=E7=94=A8=EF=BC=89",
   tplType: "search",
   searchType: "list",
   searchKey: "=E6=90=9C=E7=B4=A2=E5=85=B3=E9=94=AE=E5=AD=97",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_search_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =E4=B8=8B=E8=BD=BD--=E6=88=91=E7=9A=84=E8=B5=84=E6=BA=90
 http://so.csdn.net/so/search/s.do?q=3Djava
 <div id=3D"job_down_my_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "download",
   tplType: "downMy",
   searchType: "list",
   searchKey: "NO",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_down_my_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =
=E4=B8=8B=E8=BD=BD--=E4=B8=8B=E8=BD=BD=E9=A1=B5=E5=92=8C=E4=B8=8B=E8=BD=BD=
=E8=AF=A6=E6=83=85=E9=A1=B5
 http://so.csdn.net/so/search/s.do?q=3Djava
 <div id=3D"job_down_detail_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "download",
   tplType: "downDetail",
   searchType: "detail",
   searchKey: "=E8=B5=84=E6=BA=90ID",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_down_detail_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =
CSTO-=E6=A1=88=E4=BE=8B=E5=BA=93=E5=88=97=E8=A1=A8=EF=BC=8C=E6=94=BE=E5=9C=
=A8=E2=80=9C=E4=B8=8A=E5=91=A8=E6=9C=80=E5=8F=97=E6=AC=A2=E8=BF=8E=E2=80=9D=
=E4=B8=8B=E8=BE=B9=E3=80=82
 http://www.csto.com/case
 <div id=3D"job_csto_caselist_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "csto",
   tplType: "cstoCaseList",
   searchType: "list",
   searchKey: =
"=E7=AD=9B=E9=80=89=E6=9D=A1=E4=BB=B6=E9=87=8C=E7=9A=84=E7=83=AD=E9=97=A8=
=E5=88=86=E7=B1=BB=E5=92=8C=E7=83=AD=E9=97=A8=E6=8A=80=E6=9C=AF=EF=BC=8C=E9=
=80=97=E5=8F=B7=E5=88=86=E9=9A=94",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_csto_caselist_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =
CSTO-=E6=A1=88=E4=BE=8B=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=8C=E6=94=BE=E5=9C=
=A8=E2=80=9C=E6=9C=80=E8=BF=91=E6=B5=8F=E8=A7=88=E8=BF=87=E7=9A=84=E4=BA=BA=
=E2=80=9D=E4=B8=8B=E8=BE=B9=E3=80=82
 http://www.csto.com/case/show/id:21740
 <div id=3D"job_csto_casedetail_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "csto",
   tplType: "cstoCaseDetail",
   searchType: "detail",
   searchKey: "=E6=A1=88=E4=BE=8BID",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_csto_casedetail_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =
CSTO-=E6=88=91=E7=9A=84T=E5=8F=B0=EF=BC=8C=E6=94=BE=E5=9C=A8=E2=80=9C=E6=88=
=91=E7=9A=84=E8=B5=84=E6=96=99=E2=80=9D=E4=B8=8B=E8=BE=B9=E3=80=82
 http://www.csto.com/my/info/edit
 <div id=3D"job_csto_my_reco1">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "csto",
   tplType: "cstoMy",
   searchType: "list",
   searchKey: "NO",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_csto_my_reco1"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 CSTO-=E9=A1=B9=E7=9B=AE=E5=88=97=E8=A1=A8=E9=A1=B5
 http://www.csto.com/project/list
 <div id=3D"job_csto_projlist_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "csto",
   tplType: "cstoProjectList",
   searchType: "list",
   searchKey: =
"=E7=AD=9B=E9=80=89=E6=9D=A1=E4=BB=B6=E9=87=8C=E7=9A=84=E7=83=AD=E9=97=A8=
=E5=88=86=E7=B1=BB=E5=92=8C=E7=83=AD=E9=97=A8=E6=8A=80=E6=9C=AF=EF=BC=8C=E9=
=80=97=E5=8F=B7=E5=88=86=E9=9A=94",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_csto_projlist_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>



 CSTO-=E9=A1=B9=E7=9B=AE=E8=AF=A6=E6=83=85=E9=A1=B5
 http://www.csto.com/p/72969
 <div id=3D"job_csto_projdetail_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "csto",
   tplType: "cstoProjectDetail",
   searchType: "detail",
   searchKey: "=E9=A1=B9=E7=9B=AEID",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_csto_projdetail_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>



//-----------------------------------------------------------------------=
-------------------------------------------
=E8=AF=BE=E7=A8=8B=E6=8E=A8=E8=8D=90
//-----------------------------------------------------------------------=
-------------------------------------------

 =
=E6=90=9C=E7=B4=A2=E9=A1=B5=E7=9A=84=E5=9F=B9=E8=AE=AD=E6=8E=A8=E8=8D=90
 http://so.csdn.net/so/search/s.do?q=3Djava
 <div id=3D"edu_so_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
       csdn.position.showEdu({
           sourceType: "so",
           searchType: "detail",
           searchKey: "=E6=90=9C=E7=B4=A2=E5=85=B3=E9=94=AE=E5=AD=97",
           username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
           recordcount: "4",
           containerId: "edu_so_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
       });
   </script>
 </div>


=E6=90=9C=E7=B4=A2=E7=BB=93=E6=9E=9C=E9=A1=B5


 =
=E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=E9=A1=B5=E5=B0=86=E5=8E=9F=E6=9D=A5=E7=
=9A=84adCollege=E6=B3=A8=E9=87=8A=E6=8E=89=EF=BC=8C=E5=85=B6=E7=9B=B8=E5=90=
=8C=E4=BD=8D=E7=BD=AE=E6=94=BE=E7=BD=AE=E5=A6=82=E4=B8=8Bdiv=E3=80=82
=E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=E9=A1=B5
 http://blog.csdn.net/hu1991die/article/details/45564465
 <div id=3D"adCollege" style=3D"width: 42%;float: left;">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
     csdn.position.showEdu({
         sourceType: "blog",
         searchType: "detail",
         searchKey: "=E5=8D=9A=E6=96=87id",
         username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
         recordcount: "5",
         containerId: "adCollege"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
     });
 </script>
 </div>


 =
=E4=B8=8B=E8=BD=BD=E8=AF=A6=E6=83=85=E9=A1=B5=E5=B0=86=E5=8E=9F=E6=9D=A5=E7=
=9A=84related =
po_down_detail_big_div=E6=B3=A8=E9=87=8A=E6=8E=89=EF=BC=8C=E5=85=B6=E7=9B=
=B8=E5=90=8C=E4=BD=8D=E7=BD=AE=E6=94=BE=E7=BD=AE=E5=A6=82=E4=B8=8Bdiv=E3=80=
=82
=E4=B8=8B=E8=BD=BD=E8=AF=A6=E6=83=85=E9=A1=B5
 http://download.csdn.net/detail/dudud20/8662993
 <div id=3D"edu_down_reco" class=3D"related po_down_detail_big_div">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
     csdn.position.showEdu({
         sourceType: "down",
         searchType: "detail",
         searchKey: "=E4=B8=8B=E8=BD=BD=E8=B5=84=E6=BA=90id",
         username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
         recordcount: "5",
         containerId: "edu_down_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
     });
 </script>
 </div>






//-----------------------------------------------------------------------=
-------------------------------------------
//-----------------------------------------------------------------------=
-------------------------------------------



*/
$(document).ready(function() {
  var i =3D 1;
});
(function (window) {
  var csdn =3D window.csdn || {};
  function Position() {
    this.prefix =3D window.location.protocol;


    $("<link>")
      .attr({ rel: "stylesheet",
        type: "text/css",
        href: window.location.protocol + =
"//csdnimg.cn/jobreco/job_reco.css" =
//"//c.csdnimg.cn/jobreco/job_reco.css"//
      })
      .appendTo("head");

    /*
     http://blog.csdn.net/lmj623565791/article/details/42407923#t7
     http://blog.csdn.net/column.html
     http://bbs.csdn.net/topics/390963719
     http://ask.csdn.net/
     http://my.csdn.net/
     http://my.csdn.net/my/mycsdn
     http://hero.csdn.net/
    */

    //=E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=EF=BC=9AtplType =3D =
blogDetail
    this.blogTpl =3D '<dl class=3D"blog-ass-articl tracking-ad" =
data-mod=3D"{0}">' +
      =
'<dt><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F&nbsp;<l=
abel class=3D"po_blg_detail_tiao">=E8=B7=B3</label><label =
class=3D"po_blg_detail_ba">=E5=90=A7</label><label =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</label></span>' +
      '<a href=3D"{1}" target=3D"_blank" =
class=3D"po_blg_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=
=A8&nbsp;<label class=3D"po_blg_detail_csdn">CSDN JOB</label></a></dt>' =
+
      '{2}' +
      '</dl>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36  =
  //{1}=EF=BC=8Chttp, https ://job.csdn.net    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.blogItem =3D '<dd class=3D"po_blg_dd">' +
      '<div class=3D"po_blg_po">' +
      '<a href=3D"{0}" title=3D"{1}" strategy=3D"{8}" =
target=3D"_blank">{2}</a>' +
      '</div>' +
      '<div class=3D"po_blg_company">' +
      '<a href=3D"{3}" title=3D"{4}" target=3D"_blank">{5}</a>' +
      '</div>' +
      '<label class=3D"po_blg_separator">|</label>' +
      '<div class=3D"po_blg_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<a class=3D"po_blg_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</dd>' ;
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    //=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=EF=BC=9AtplType =3D blogSpec
    this.blogSpecTpl =3D '<div class=3D"box_1 tracking-ad" =
data-mod=3D"{0}">' +
      '<div style=3D"position: relative;">' +
      =
'<h2>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F&nbsp;<label =
class=3D"po_blg_detail_tiao">=E8=B7=B3</label><label =
class=3D"po_blg_detail_ba">=E5=90=A7</label><label>&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</label></h2>'=
 +
      '</div>' +
      '<ul class=3D"list_comm">' +
      '{2}' +
      '</ul>' +
      '<div class=3D"po_blg_spec_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_blg_spec_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_blg_spec_csdn">CSDN =
JOB</label></a></div>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.blogSpecItem =3D '<li>' +
      '<div class=3D"po_blg_spec_po">' +
      '<a href=3D"{0}" title=3D"{1}" strategy=3D"{8}" =
target=3D"_blank">{2}</a>' +
      '</div>' +
      '<div class=3D"po_blg_spec_company">' +
      '<a href=3D"{3}" title=3D"{4}" target=3D"_blank">{5}</a>' +
      '</div>' +
      '<div class=3D"po_blg_spec_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div><a class=3D"po_blg_spec_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a></div>' +
      '</li>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    //=E8=AE=BA=E5=9D=9B=E8=AF=A6=E6=83=85=EF=BC=9AtplType =3D bbsDetail
    this.bbsTpl =3D '<div id=3D"topic-suggest" class=3D"po_bbs_div =
tracking-ad" data-mod=3D"{0}">' +
      '<div class=3D"related-tags po_bbs_tit_div">' +
      =
'<span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F&nbsp;<label=
 class=3D"po_blg_detail_tiao">=E8=B7=B3</label><label =
class=3D"po_blg_detail_ba">=E5=90=A7</label><label>&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</label></span=
>' +
      '<a class=3D"po_bbs_more" href=3D"{1}" =
target=3D"_blank">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=A8&=
nbsp;<label class=3D"po_bbs_csdn">CSDN JOB</label></a>' +
      '</div>' +
      '<div class=3D"related-topics po_bbs_item_div">' +
      '<ul>' +
      '{2}' +
      '</ul>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.bbsItem =3D '<li class=3D"po_bbs_li"><div class=3D"po_bbs_po">' =
+
      '<a href=3D"{0}" title=3D"{1}" strategy=3D"{8}" =
target=3D"_blank">{2}</a>' +
      '</div>' +
      '<div class=3D"po_bbs_company">' +
      '<a href=3D"{3}" title=3D"{4}" target=3D"_blank">{5}</a>' +
      '</div>' +
      '<label class=3D"po_bbs_separator">|</label>' +
      '<div class=3D"po_bbs_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div><a class=3D"po_bbs_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a></div>' +
      '</li>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    //=E9=97=AE=E7=AD=94=E9=A6=96=E9=A1=B5=EF=BC=9AtplType =3D askDetail
    this.askTpl =3D '<div class=3D"mod_other_ask hot_tags po_ask_div =
tracking-ad" data-mod=3D"{0}">' +
      '<div class=3D"other_ask">' +
      =
'<h3><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F&nbsp;<l=
abel class=3D"po_ask_tiao">=E8=B7=B3</label><label =
class=3D"po_ask_ba">=E5=90=A7</label><label =
class=3D"po_blg_detail_th">=EF=BC=81</label></span></h3>' +
      '<div class=3D"po_ask_div_list">' +
      '{2}' +
      '</div>' +
      '<div class=3D"po_ask_more_div"><a href=3D"{1}" target=3D"_blank" =
class=3D"po_ask_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=
=A8&nbsp;<label class=3D"po_my_home_csdn">CSDN JOB</label></a></div>' +
      '</div>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.askItem =3D '<div class=3D"po_ask_item_div">' +
      '<div class=3D"po_ask_po">' +
      '<a href=3D"{0}" title=3D"{1}" strategy=3D"{8}" =
target=3D"_blank">{2}</a>' +
      '</div>' +
      '<div class=3D"po_ask_salary">' +
      '<a href=3D"{6}" target=3D"_blank">{7}</a>' +
      '</div>' +
      '<div class=3D"po_ask_company">' +
      '<a href=3D"{3}" title=3D"{4}" target=3D"_blank">{5}</a>' +
      '</div>' +
      '<a class=3D"po_ask_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    =
//=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4-=E9=A6=96=E9=A1=B5=EF=BC=9AtplType=
 =3D personalSpaceHome
    this.perSpaceHomeTpl =3D '<div class=3D"phr_third clearfix =
tracking-ad" data-mod=3D"{0}">' +
      '<div class=3D"phr_third_tit po_my_home_tit">' +
      '<div class=3D"phrt_t =
po_my_home_t">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F&nbsp=
;<label class=3D"po_my_my_tiao">=E8=B7=B3</label><label =
class=3D"po_my_my_ba">=E5=90=A7</label><label =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;=EF=BC=81</label></div>' +
      '</div>' +
      '<div class=3D"phr_third_con po_my_home_div">' +
      '{2}' +
      '</div>' +
      '<div class=3D"po_my_home_more"><a href=3D"{1}" target=3D"_blank" =
class=3D"po_my_home_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_my_home_csdn">CSDN JOB</label></a></div>' =
+
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.perSpaceHomeItem =3D '<div class=3D"po_my_home_item_div =
clearfix">' +
      '<div class=3D"po_my_home_po"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_my_home_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_my_home_company"><a href=3D"{3}" title=3D"{4}" =
target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_my_home_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    =
//=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4-=E6=88=91=E7=9A=84=EF=BC=9AtplType=
 =3D personalSpaceMy
    this.perSpaceMyTpl =3D '<div class=3D"interested_con tracking-ad" =
data-mod=3D"{0}" style=3D"display: block;">' +
      '<h3 =
class=3D"po_my_my_h3">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=
=9F&nbsp;<label class=3D"po_my_my_tiao">=E8=B7=B3</label><label =
class=3D"po_my_my_ba">=E5=90=A7</label><label =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;=EF=BC=81</label></h3>' +
      '{2}' +
      '<div class=3D"po_my_my_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_my_my_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=
=A8&nbsp;<label class=3D"po_my_my_csdn">CSDN JOB</label></a></div>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.perSpaceMyItem =3D '<div class=3D"po_my_my_item_div">' +
      '<div class=3D"po_my_my_po">' +
      '<a class=3D"po_my_my_po_a" href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a>' +
      '</div>' +
      '<div class=3D"po_my_my_salary">' +
      '<a href=3D"{6}" target=3D"_blank">{7}</a>' +
      '</div>' +
      '<div class=3D"po_my_my_company">' +
      '<a href=3D"{3}" title=3D"{4}" target=3D"_blank">{5}</a>' +
      '</div>' +
      '<a class=3D"po_my_my_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5    =
//{9}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5


    //=E8=8B=B1=E9=9B=84=E4=BC=9A--=E9=A6=96=E9=A1=B5
    this.heroHomeTpl =3D '<div class=3D"her_topic_right tracking-ad" =
data-mod=3D"{0}">' +
      '<h3 =
class=3D"haping_t">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F=
&nbsp;<span class=3D"po_yx_home_tiao">=E8=B7=B3</span><span =
class=3D"po_yx_home_ba">=E5=90=A7</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '{2}' +
      '<div class=3D"po_yx_home_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_yx_home_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_yx_home_csdn">CSDN JOB</label></a></div>' =
+
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.heroHomeItem =3D '<div class=3D"her_platform =
po_yx_home_item_div">' +
      '<div class=3D"po_yx_home_po"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_yx_home_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_yx_home_company"><a href=3D"{3}" title=3D"{4}" =
target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_yx_home_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    =
//=E8=8B=B1=E9=9B=84=E4=BC=9A--=E7=AD=94=E9=A2=98=E4=B8=93=E5=AE=B6=E7=BB=
=84
    this.heroExpertTpl =3D '<div class=3D"her-r-expli po_yx_ex_div =
tracking-ad" data-mod=3D"{0}">' +
      '<h3 class=3D"tit"><span =
class=3D"po_yx_ex_tit">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=
=9F&nbsp;</span><label class=3D"po_yx_home_tiao =
px_yx_ex_tiao">=E8=B7=B3</label><label class=3D"po_yx_home_ba =
px_yx_ex_ba">=E5=90=A7</label><span =
class=3D"po_yx_ex_tit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;=EF=BC=81</span></h3>' +
      '{2}' +
      '<div class=3D"po_yx_ex_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_yx_ex_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=
=A8&nbsp;<label class=3D"po_yx_ex_csdn">CSDN JOB</label></a></div>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.heroExpertItem =3D '<dl class=3D"her-r-explicon =
po_yx_ex_po_item_div">' +
      '<dt class=3D"po_yx_ex_po"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></dt>' +
      '<dd class=3D"po_yx_ex_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></dd>' +
      '<dd class=3D"py_yx_ex_company"><a href=3D"{3}" title=3D"{4}" =
target=3D"_blank">{5}</a></dd>' +
      '<a class=3D"po_yx_ex_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</dl>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    =
//=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=8C=91=E6=88=98=E9=A2=98=E7=9B=AE=E8=AF=
=A6=E6=83=85=E9=A1=B5
    this.heroFightDetailTpl =3D '<div class=3D"her_format_right =
py_yx_fd_div tracking-ad" data-mod=3D"{0}">' +
      '<h3 =
class=3D"po_yx_fd_tit"><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=
=EF=BC=9F&nbsp;</span><label =
class=3D"po_yx_home_tiao">=E8=B7=B3</label><label =
class=3D"po_yx_home_ba">=E5=90=A7</label><span>&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '{2}' +
      '<div class=3D"po_yx_fd_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_yx_fd_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=
=A8&nbsp;<label class=3D"po_yx_fd_csdn">CSDN JOB</label></a></div>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.heroFightDetailItem =3D '<div class=3D"po_yx_fd_item_div">' +
      '<div class=3D"po_yx_fd_po"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_yx_fd_company"><a href=3D"{3}" title=3D"{4}" =
target=3D"_blank">{5}</a></div>' +
      '<div class=3D"po_yx_fd_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div><a class=3D"po_yx_fd_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a></div>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    =
//=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=88=91=E7=9A=84=E8=8B=B1=E9=9B=84=E4=BC=
=9A
    this.heroMyTpl =3D '<div class=3D"her-resultli po_yx_my_div =
tracking-ad" data-mod=3D"{0}">' +
      =
'<h3><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F&nbsp;</=
span><label class=3D"po_yx_home_tiao">=E8=B7=B3</label><label =
class=3D"po_yx_home_ba">=E5=90=A7</label><span>&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span>' +
      '<a href=3D"{1}" target=3D"_blank" =
class=3D"po_yx_my_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=
=A8&nbsp;<label class=3D"po_yx_my_csdn">CSDN JOB</label></a></h3>' +
      '{2}' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.heroMyItem =3D '<div class=3D"po_yx_my_item_div">' +
      '<div class=3D"po_yx_my_item_dot">=E2=96=AA</div>' +
      '<div class=3D"po_yx_my_item_cont">' +
      '<div class=3D"po_yx_my_po"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_yx_my_company"><a href=3D"{3}" title=3D"{4}" =
target=3D"_blank">{5}</a></div>' +
      '<label class=3D"po_yx_my_separator">|</label>' +
      '<div class=3D"po_yx_my_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '</div>' +
      '<a class=3D"po_yx_my_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    this.heroFightDetailTpl =3D this.heroMyTpl;
    this.heroFightDetailItem =3D this.heroMyItem;


    =
//=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E8=AF=A6=E6=83=
=85=E9=A1=B5
    this.eduDetailTpl =3D '<div class=3D"boutique-curr-box tracking-ad" =
data-mod=3D"{0}">' +
      '<div =
class=3D"boutique-curr"><h3>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=
=EF=BC=9F&nbsp;<label class=3D"po_my_my_tiao">=E8=B7=B3</label><label =
class=3D"po_my_my_ba">=E5=90=A7</label><label =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</label=
></h3>' +
      '<div class=3D"cutt-column">' +
      '{2}' +
      '<div class=3D"po_edu_detail_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_edu_detail_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=
=E5=9C=A8&nbsp;<label class=3D"po_edu_detail_csdn">CSDN =
JOB</label></a></div>' +
      =
'</div></div></div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0po=
pu_36    //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.eduDetailItem =3D '<div class=3D"po_edu_detail_item_div =
clearfix">' +
      '<div class=3D"po_edu_detail_po"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}<a></div>' +
      '<div class=3D"po_edu_detail_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_edu_detail_company"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_edu_detail_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    =
//=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E5=88=86=E7=B1=
=BB=E5=88=97=E8=A1=A8
    this.eduListTpl =3D this.eduDetailTpl;
    this.eduListItem =3D this.eduDetailItem;


//-----------------------------------------------------------------------=
---------------------------------------------------------
    //=E6=90=9C=E7=B4=A2=E5=9F=B9=E8=AE=AD=E6=8E=A8=E5=B9=BF
    this.search_reco_edu =3D '' +
        '<div class=3D"common-box tracking-ad" data-mod=3D"popu_84" =
style=3D"display: block;">' + //todo =
=E5=A2=9E=E5=8A=A0=E7=BB=9F=E8=AE=A1=E5=8F=B7=E7=A0=81
        '<h3 id=3D"job-pos-title" =
class=3D"po_search_tit">=E7=B2=BE=E5=93=81=E8=AF=BE=E7=A8=8B<a =
class=3D"class-edu-more" =
href=3D"http://edu.csdn.net">=E6=9B=B4=E5=A4=9A</a></h3>' +
        '<div class=3D"po_search_div">' +
        '{0}' +
        '</div>' +
        '</div>';
    this.search_reco_edu_item =3D '<div class=3D"po_search_item_div">' +
        '<div class=3D"class-img-box"><a href=3D"{0}" target=3D"_blank" =
strategy=3D"{7}"><img src=3D"{1}"></a></div>' +
        '<div class=3D"class-content-box">' +
        '<div class=3D"class-content-tit"><a href=3D"{2}" =
target=3D"_blank" title=3D"{3}" strategy=3D"{8}">{4}</a></div>' +
        '<div =
class=3D"class-content-hp">=E5=A5=BD=E8=AF=84=E7=8E=87=EF=BC=9A<a =
href=3D"{9}" class=3D"class-content-hp-hpl">{5}%</a>  <span =
class=3D"class-content-hp-rzx"><i =
class=3D"class-content-icon">&nbsp;</i><a href=3D"{10}" =
class=3D"class-content-icon-rdx">{6}</a>=E4=BA=BA=E5=9C=A8=E5=AD=A6</span=
></div>' +
        '</div>' +
        '</div>';

      //<div id=3D"adCollege" style=3D"width: 42%;float: left;">
      this.blog_reco_edu =3D '<div class=3D"tracking-ad" =
data-mod=3D"popu_84">{0}</div>';            //todo =
=E5=A2=9E=E5=8A=A0=E7=BB=9F=E8=AE=A1=E5=8F=B7=E7=A0=81
      this.blog_reco_edu_item =3D '<dd =
style=3D"background:url(http://static.blog.csdn.net/skin/default/images/b=
log-dot-red3.gif) no-repeat 0 10px; white-space: nowrap;">' +
          '<a href=3D"{0}" title=3D"{1}" strategy=3D"{3}" =
target=3D"_blank">{2}</a>' +
          '</dd>';

      //<div class=3D"related po_down_detail_big_div">
      this.down_reco_edu =3D '<div class=3D"section-list panel =
panel-default tracking-ad" data-mod=3D"popu_84">' + //todo =
=E4=BF=AE=E6=94=B9=E7=BB=9F=E8=AE=A1=E5=8F=B7=E7=A0=81
          '<div class=3D"panel-heading po_down_detail_tit_div">' +
          '<h3 class=3D"panel-title =
po_down_detail_tit">=E7=9B=B8=E5=85=B3=E8=AF=BE=E7=A8=8B</h3>' +
          '</div>' +
          '<div class=3D"panel-body">' +
          '<ul class=3D"down_edu_t">' +
          '{0}' +
          '</ul>' +
          '</div>' +
          '</div>' +
          '';
      this.down_reco_edu_item =3D '  <li style=3D"line-height: =
25px;display:block;margin-bottom: 9px;margin-top: 9px;padding-top: =
0px;">' +
          '<div style=3D"padding:0;margin:0;border:0;text-overflow: =
ellipsis;overflow: hidden;">' +
          '<a href=3D"{0}" title=3D"{1}" alt=3D"" target=3D"_blank" =
strategy=3D"{3}">{2}</a>' +
          '</div>' +
          '</li>';

      this.edu_detail_url_base =3D 'http://edu.csdn.net/course/detail/';

//=E7=BB=93=E6=9D=9F=E3=80=82
//-----------------------------------------------------------------------=
-----------------------------------------------------------------





    //=E6=90=9C=E7=B4=A2
    this.searchTpl =3D '<div class=3D"common-box tracking-ad" =
data-mod=3D"{0}" style=3D"display: block;">' +
      '<h3 id=3D"job-pos-title" =
class=3D"po_search_tit">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=
=9F&nbsp;<span class=3D"po_blg_detail_tiao">=E8=B7=B3</span><span =
class=3D"po_blg_detail_ba">=E5=90=A7</span><span>&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '<div class=3D"po_search_div">' +
      '{2}' +
      '<div class=3D"po_search_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_search_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_search_csdn">CSDN JOB</label></a></div>' =
+
      '</div>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.searchItem =3D '<div class=3D"po_search_item_div">' +
      '<div class=3D"po_search_po_div"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_search_salary_div"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_search_company_div"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_search_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>' +
      '';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5    =
//{9}=EF=BC=8C=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD



    //=E4=B8=8B=E8=BD=BD--=E6=88=91=E7=9A=84=E8=B5=84=E6=BA=90
    this.downMyTpl =3D '<div id=3D"my-tags-side" class=3D"panel =
panel-default tracking-ad" data-mod=3D"{0}">' +
      '<div class=3D"panel-heading po_downmy_div">' +
      '<h3 =
class=3D"panel-title">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=
=9F&nbsp;<span class=3D"po_blg_detail_tiao">=E8=B7=B3</span><span =
class=3D"po_blg_detail_ba">=E5=90=A7</span><span =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '</div>' +
      '<div>' +
      '{2}' +
      '</div>' +
      '<div class=3D"po_downmy_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_downmy_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_downmy_csdn">CSDN JOB</label></a></div>' =
+
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.downMyItem =3D '<div class=3D"po_downmy_item_div">' +
      '<div class=3D"po_downmy_po_div"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_downmy_company_div"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<div class=3D"po_downmy_salary_div"><a =
href=3D"{6}">{7}</a></div>' +
      '<a class=3D"po_downmy_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5    =
//{9}=EF=BC=8C=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD



    =
//=E4=B8=8B=E8=BD=BD--=E4=B8=8B=E8=BD=BD=E9=A1=B5=E5=92=8C=E4=B8=8B=E8=BD=
=BD=E8=AF=A6=E6=83=85=E9=A1=B5
    this.downDetailTpl =3D '<div class=3D"related po_down_detail_big_div =
tracking-ad" data-mod=3D"{0}">' +
      '<div>' +
      '<div class=3D"section-list panel panel-default">' +
      '<div class=3D"panel-heading po_down_detail_tit_div">' +
      '<h3 class=3D"panel-title =
po_down_detail_tit">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F=
&nbsp;<span class=3D"po_blg_detail_tiao">=E8=B7=B3</span><span =
class=3D"po_blg_detail_ba">=E5=90=A7</span><span =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '<a class=3D"po_downdetail_more" href=3D"{1}" =
target=3D"_blank">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=A8&=
nbsp;<label class=3D"po_dwondetail_csdn">CSDN JOB</label></a>' +
      '</div>' +
      '{2}' +
      '</div>' +
      '</div>' +
      '</div>';
    this.downDetailItem =3D '<div class=3D"panel-body =
po_down_detail_item_div">' +
      '<ul>' +
      '<li>' +
      '<div class=3D"po_down_detail_left"><a class=3D"con" href=3D"{0}" =
title=3D"{1}" target=3D"_blank">=E3=80=90{7}=E3=80=91{2}</a></div>' +
      '<div class=3D"po_down_detail_right"><a =
class=3D"po_downdetail_iwant" =
href=3D"http://job.csdn.net/Job/Index?jobID=3D81328" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a></div>' +
      '</li>' +
      '</ul>' +
      '</div>';



    =
//CSTO=E6=A1=88=E4=BE=8B=E5=BA=93=E5=88=97=E8=A1=A8=EF=BC=9AcstoCaseList
    this.cstoCaseListTpl =3D '<div class=3D"contbox tracking-ad" =
data-mod=3D"{0}">' +
      '<h3 =
class=3D"po_csto_caselist_tit"><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=
=E4=B9=88=EF=BC=9F&nbsp;</span><span =
class=3D"po_my_my_tiao">=E8=B7=B3</span><span =
class=3D"po_my_my_ba">=E5=90=A7</span><span =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '<div class=3D"po_caselist_div">' +
      '{2}' +
      '<div class=3D"po_caselist_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_caselist_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_caselist_csdn">CSDN =
JOB</label></a></div>' +
      '</div>' +
      '</div>';
    this.cstoCaseListItem =3D '<div class=3D"po_caselist_item_div">' +
      '<div class=3D"po_caselist_po_div"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_caselist_salary_div"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_caselist_company_div"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_caselist_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';



    =
//CSTO=E6=A1=88=E4=BE=8B=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9AcstoCaseDetai=
l
    this.cstoCaseDetailTpl =3D '<ul class=3D"case_list =
po_case_detail_div tracking-ad" data-mod=3D"{0}">' +
      '<h3 =
class=3D"po_csto_casedetail_tit"><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=
=E4=B9=88=EF=BC=9F&nbsp;</span><span =
class=3D"po_my_my_tiao">=E8=B7=B3</span><span =
class=3D"po_my_my_ba">=E5=90=A7</span><span =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '<div class=3D"po_casedetail_div">' +
      '{2}' +
      '<div class=3D"po_casedetail_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_casedetail_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=
=E5=9C=A8&nbsp;<label class=3D"po_casedetail_csdn">CSDN =
JOB</label></a></div>' +
      '</div>' +
      '</ul>';
    this.cstoCaseDetailItem =3D '<div class=3D"po_casedetail_item_div =
clearfix">' +
      '<div class=3D"po_casedetail_po_div"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_casedetail_company_div"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<div class=3D"po_casedetail_salary_div"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<a class=3D"po_casedetail_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';






    //CSTO=E6=88=91=E7=9A=84T=E5=8F=B0=EF=BC=9AcstoMy
    this.cstoMyTpl =3D '<ul class=3D"menu tracking-ad" =
data-mod=3D"{0}">' +
      '<li class=3D"icon selected po_csto_my_big_div">' +
      '<h3 =
class=3D"po_csto_my_tit"><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=
=88=EF=BC=9F&nbsp;</span><span =
class=3D"po_my_my_tiao">=E8=B7=B3</span><span =
class=3D"po_my_my_ba">=E5=90=A7</span><span =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '<div class=3D"po_csto_my_div">' +
      '{2}' +
      '</div>' +
      '<div class=3D"po_csto_my_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_csto_my_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_csto_my_csdn">CSDN JOB</label></a></div>' =
+
      '</li>' +
      '</ul>';
    this.cstoMyItem =3D '<div class=3D"po_csto_my_item_div">' +
      '<div class=3D"po_csto_my_po_div"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_csto_my_salary_div"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_csto_my_company_div"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_csto_my_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';


    =
//CSTO=E9=A1=B9=E7=9B=AE=E5=88=97=E8=A1=A8=E9=A1=B5=EF=BC=9AcstoProjectLi=
st
    this.cstoProjectListTpl =3D '' +
      '' +
      '' +
      '';
    this.cstoProjectListItem =3D '' +
      '' +
      '' +
      '';




    =
//CSTO=E9=A1=B9=E7=9B=AE=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9AcstoProjectDe=
tail
    this.cstoProjectDetailTpl =3D '<div class=3D"bid_scheme tracking-ad" =
data-mod=3D"{0}">' +
      '<h3 =
class=3D"po_csto_proj_detail_tit"><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=
=86=E4=B9=88=EF=BC=9F&nbsp;</span><span =
class=3D"po_my_my_tiao">=E8=B7=B3</span><span =
class=3D"po_my_my_ba">=E5=90=A7</span><span =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '<div class=3D"po_proj_detail_div">' +
      '{2}' +
      '<div class=3D"po_proj_detail_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_proj_detail_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=
=E5=9C=A8&nbsp;<label class=3D"po_proj_detail_csdn">CSDN =
JOB</label></a></div>' +
      '</div>' +
      '</div>';
    this.cstoProjectDetailItem =3D '<div =
class=3D"po_proj_detail_item_div clearfix">' +
      '<div class=3D"po_proj_detail_po_div"><a href=3D"{0}" =
title=3D"{1}" strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_proj_detail_salary_div"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_proj_detail_company_div"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_proj_detail_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
      this.getCount =3D 300;
  };

  Position.prototype =3D {
    show: function(conf) {
      var _conf =3D conf;
      var _this =3D this;
      _this.show_inner(_conf);
      /*$(window).load(function() {
        _this.show_inner(_conf);
      });*/
    },
    showEdu: function(conf) {
        var _conf =3D conf;
        var _this =3D this;
        _this.show_edu_mlgb(_conf);
    },
    show_edu_mlgb: function(conf) {
        this.sourceType =3D conf.sourceType;//blog, bbs, downlowd, ask, =
space, hero, edu, csto .....
        this.searchType =3D conf.searchType;
        this.searchKey =3D conf.searchKey;
        this.username =3D conf.username ? conf.username : '';
        this.recordcount =3D conf.recordcount;
        this.containerId =3D conf.containerId;

        this.$container =3D $("#" + this.containerId);
        this.prefix =3D window.location.protocol;
        this.load_edu_reco();
    },
      load_edu_reco: function() {
          var tpl =3D '';
          var itemTpl =3D '';
          var _url =3D '';
          _data =3D {};
          //var urlBase =3D 'http://192.168.5.75:9400';
          //var urlBase =3D 'http://p.search.dm.csdn.net';

          var kk =3D =
this.searchKey.replace(/%/g,"%25").replace(/#/g,"%23").replace(/&/g,"%26"=
).replace(/\+/g, "%2B");
          var urlBase =3D =
'http://internalapi.csdn.net/psearch/psearch/query?x-acl-token=3DkUOm7x6d=
CaKGFa8RxxLQ5Hm75ioK&index_name=3Dpro_course_v2';
          if (this.sourceType =3D=3D 'so') {
              tpl =3D this.search_reco_edu;
              itemTpl =3D this.search_reco_edu_item;
              //url =3D =
'http://p.search.dm.csdn.net/v2/pro_course/csdn/_search?_client_=3Drcomme=
nd_course&fields=3Did,title,stu_count,good_ratio,rc_flag&searchStr=3D=E5=88=
=9D=E7=BA=A7java=E6=95=99=E7=A8=8B&user_id=3Dblogchong';
              _url =3D urlBase + '&search_str=3D' + kk; // + =
'/v2/pro_course_v2/csdn/_search';
              _data =3D {'_client_': 'rcommend_course','fields': =
'id,title,pic,stu_count,good_ratio,rc_flag,source_type', 'user_id': =
this.username, 'size': this.recordcount}; //'search_str': kk,
              if (this.username =3D=3D '')
              _data =3D {'_client_': 'rcommend_course','fields': =
'id,title,pic,stu_count,good_ratio,rc_flag,source_type', 'size': =
this.recordcount}; //'search_str': kk,
          } else if (this.sourceType =3D=3D 'blog') {
              tpl =3D this.blog_reco_edu;
              itemTpl =3D this.blog_reco_edu_item;
              //url =3D =
'http://p.search.dm.csdn.net/v2/pro_course/csdn/_search?_client_=3Drcomme=
nd_course&fields=3Did,title,stu_count,good_ratio,rc_flag&pro_id=3D4552125=
1&pro_type=3Dblog&user_id=3Dblogchong';
              _url =3D urlBase + '&pro_id=3D' + kk;// + =
'/v2/pro_course_v2/csdn/_search';
              _data =3D {'_client_': 'rcommend_course','fields': =
'id,title,pic,stu_count,good_ratio,rc_flag,source_type', 'pro_type': =
'blog', 'user_id': this.username, 'size': this.recordcount}; //'pro_id': =
kk,

              if (this.username =3D=3D '')
                  _data =3D {'_client_': 'rcommend_course','fields': =
'id,title,pic,stu_count,good_ratio,rc_flag,source_type', 'pro_type': =
'blog', 'size': this.recordcount}; //'pro_id': kk,
          } else if (this.sourceType =3D=3D 'down') {
              tpl =3D this.down_reco_edu;
              itemTpl =3D this.down_reco_edu_item;
              //url =3D =
'http://p.search.dm.csdn.net/v2/pro_course/csdn/_search?_client_=3Drcomme=
nd_course&fields=3Did,title,stu_count,good_ratio,rc_flag&pro_id=3D4552125=
1&pro_type=3Dblog&user_id=3Dblogchong';
              _url =3D urlBase + '&pro_id=3D' + kk;// + =
'/v2/pro_course_v2/csdn/_search';
              _data =3D {'_client_': 'rcommend_course','fields': =
'id,title,pic,stu_count,good_ratio,rc_flag,source_type', 'pro_type': =
'download', 'user_id': this.username, 'size': this.recordcount}; =
//'pro_id': kk,
              if (this.username =3D=3D '')
                  _data =3D {'_client_': 'rcommend_course','fields': =
'id,title,pic,stu_count,good_ratio,rc_flag,source_type', 'pro_type': =
'download', 'size': this.recordcount}; //'pro_id': kk,
          }
          if (tpl =3D=3D '') return;
          var _this =3D this;
          $.ajax({
              type: 'get',
              url: _url,
              data: _data,
              dataType: "jsonp",
              jsonp: "callback",
              async: false,
              success: function(result) {
                  if (result.hits && result.hits.length > 0) {
                      var htmlItems =3D '';
                      for (var i =3D 0; i < _this.recordcount; i ++) {
                          var item =3D result.hits[i].object;
                          var htmlItem =3D '';
                          if (_this.sourceType =3D=3D 'so') {
                              var rzx =3D item.stu_count ? =
item.stu_count : 0;
                              var kcurl =3D _this.edu_detail_url_base + =
item.id;
                              htmlItem =3D itemTpl.replace(/\{0\}/, =
kcurl) //=E8=AF=BE=E7=A8=8Burl
                                  .replace(/\{1\}/, item.pic)            =
//=E5=9B=BE=E7=89=87url
                                  .replace(/\{2\}/, kcurl)               =
//=E8=AF=BE=E7=A8=8Burl
                                  .replace(/\{3\}/, item.title)          =
//=E8=AF=BE=E7=A8=8B=E6=A0=87=E9=A2=98
                                  .replace(/\{4\}/, item.title)          =
//=E8=AF=BE=E7=A8=8B=E5=90=8D=E7=A7=B0
                                  .replace(/\{5\}/, item.good_ratio =
=3D=3D 0 ? 100 : item.good_ratio)     //=E5=A5=BD=E8=AF=84=E7=8E=87
                                  .replace(/\{6\}/, rzx)                 =
//=E6=AD=A3=E5=9C=A8=E5=AD=A6=E4=B9=A0=E7=9A=84=E4=BA=BA=E6=95=B0
                                  .replace(/\{7\}/, item.rc_flag)        =
//=E7=AD=96=E7=95=A5
                                  .replace(/\{8\}/, item.rc_flag)        =
//=E7=AD=96=E7=95=A5
                                  .replace(/\{9\}/, kcurl)               =
//=E8=AF=BE=E7=A8=8Burl
                                  .replace(/\{10\}/, kcurl);             =
//=E8=AF=BE=E7=A8=8Burl
                          } else if (_this.sourceType =3D=3D 'blog' || =
_this.sourceType =3D=3D 'down') {
                              htmlItem =3D itemTpl.replace(/\{0\}/, =
_this.edu_detail_url_base + item.id)
                                  .replace(/\{1\}/, item.title)
                                  .replace(/\{2\}/, item.title) =
//'=E3=80=90=E7=B2=BE=E5=93=81=E8=AF=BE=E7=A8=8B=E3=80=91' + item.title
                                  .replace(/\{3\}/, item.rc_flag);
                          }
                          htmlItems +=3D htmlItem;
                      }
                      var jHtml =3D tpl.replace(/\{0\}/, htmlItems);
                      var tdd =3D $(jHtml).appendTo(_this.$container);
                      var tds =3D [];
                      tds.push(tdd[0]);
                      try {
                          window['trackingAd']($(tds));
                      } catch(ee){};
                  }
              },
              error: function(result) {
                  var i =3D 0;
              }
          }); =
//=E9=97=AE=E9=A2=98=EF=BC=9A=E8=AE=B0=E5=BD=95=E6=95=B0=EF=BC=9B=E7=B1=BB=
=E5=9E=8B=E5=8F=AA=E6=9C=89blog=E3=80=81download=E3=80=81bbs=E6=B2=A1=E6=9C=
=89=E6=90=9C=E7=B4=A2=EF=BC=9B

          //todo =
=E6=9A=82=E6=97=B6=E5=A4=84=E7=90=86=E4=B8=80=E4=B8=8B=EF=BC=8C=E5=9B=A0=E4=
=B8=BA=E7=9C=8B=E4=B8=8D=E6=87=82=E5=8E=9F=E6=9D=A5=E7=9A=84=E7=8C=9C=E4=BD=
=A0=E5=9C=A8=E6=89=BE=E4=BB=A3=E7=A0=81=E3=80=82=E5=90=8E=E9=9D=A2=E6=89=BE=
=E6=97=B6=E9=97=B4=E6=8A=8A=E7=8C=9C=E4=BD=A0=E5=9C=A8=E6=89=BE=E8=B0=83=E6=
=95=B4=E4=B8=BA=E5=8F=AA=E6=98=BE=E7=A4=BA5=E6=9D=A1=E6=95=B0=E6=8D=AE=E3=
=80=82
          $(function() {
              var count =3D 0;
              var setFive =3D setInterval(function() {
                  count ++;
                  if (count > _this.getCount) {
                      clearInterval(setFive);
                  }
                  $('#res').hide();
                  var cc =3D $('#res').children();
                  if (cc.length > 5) {
                      for (var i =3D 0; i < cc.length; i++) {
                          clearInterval(setFive);
                          var item =3D cc[i];
                          if (i > 4) {
                              $(item).remove();
                          }
                      }
                      $('#res').show();
                  }
              }, 200);
          });
      },
    show_inner: function(conf) {
      this.sourceType =3D conf.sourceType;//blog=EF=BC=8Cbbs, =
download=EF=BC=8Cask, space, hero, edu, csto .....
      this.tplType =3D conf.tplType;
      =
//=E6=A8=A1=E6=9D=BF=E7=B1=BB=E5=9E=8B=EF=BC=8C=E5=8D=9A=E5=AE=A2=E8=AF=A6=
=E6=83=85=EF=BC=9AblogDetail=EF=BC=8C=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=
=EF=BC=9AblogSpec=EF=BC=8C=E8=AE=BA=E5=9D=9B=E8=AF=A6=E6=83=85=EF=BC=9Abb=
sDetail=EF=BC=8C=E9=97=AE=E7=AD=94=E9=A6=96=E9=A1=B5=EF=BC=9AaskDetail=EF=
=BC=8C=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4--=E6=88=91=E7=9A=84=E7=A9=BA=E9=
=97=B4=EF=BC=9ApersonalSpaceMy=EF=BC=8C=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4=
--=E9=A6=96=E9=A1=B5=EF=BC=9ApersonalSpaceHome=EF=BC=8C
      =
//=E8=8B=B1=E9=9B=84=E4=BC=9A--=E9=A6=96=E9=A1=B5=EF=BC=9AheroHome=EF=BC=8C=
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E7=AD=94=E9=A2=98=E4=B8=93=E5=AE=B6=E7=BB=84=
=EF=BC=9AheroExpert=EF=BC=8C=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=8C=91=E6=88=98=
=E9=A2=98=E7=9B=AE=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9AheroFightDetail=EF=BC=
=8C=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=88=91=E7=9A=84=E8=8B=B1=E9=9B=84=E4=BC=
=9A=EF=BC=9AheroMy=EF=BC=8C
      =
//=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E5=88=86=E7=B1=
=BB=E5=88=97=E8=A1=A8=E9=A1=B5=EF=BC=9AeduList=EF=BC=8C=E5=9C=A8=E7=BA=BF=
=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9A=
eduDetail=EF=BC=8C.....
      this.searchType =3D =
conf.searchType;//=E9=A1=B5=E9=9D=A2=E7=B1=BB=E5=9E=8B=EF=BC=8C=E7=94=A8=E4=
=BA=8E=E6=90=9C=E7=B4=A2=E5=87=BD=E6=95=B0=EF=BC=8Cdetail(=E8=AF=A6=E6=83=
=85=E9=A1=B5) / list(=E5=88=97=E8=A1=A8=E9=A1=B5)=E3=80=82
      this.searchKey =3D =
conf.searchKey;//=E6=90=9C=E7=B4=A2=E5=85=B3=E9=94=AE=E5=AD=97=EF=BC=8C=E4=
=BE=8B=E5=A6=82=E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=EF=BC=9A=E5=8D=9A=E6=96=
=87ID=EF=BC=8C=E5=A6=82=E6=9E=9C=E6=98=AF=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=
=8F=EF=BC=9A=E5=88=86=E7=B1=BB=E5=AD=97=E7=AC=A6=E4=B8=B2=E3=80=82
      this.username =3D conf.username;
      this.containerId =3D conf.containerId;

      this.$container =3D $("#" + this.containerId);
      this.prefix =3D window.location.protocol;

      this.load();
    },
    goInPage: function(containerTpl, itemTpl, container, _prefix) {
      var homeUrl =3D _prefix + "//job.csdn.net";
      var jHtml =3D containerTpl.replace(/\{0\}/, "popu_72")
       .replace(/\{1\}/, homeUrl)
       .replace(/\{2\}/, totalHtmlItems);
       //container.html(jHtml);
       container.html("");
       var tdd =3D $(jHtml).appendTo(container);
       var tds =3D [];
       tds.push(tdd[0]);
       try {
       window['trackingAd']($(tds));
       } catch(ee) {};
       return true;
    },
    totalHtmlItems: "",
    load: function() {
      var that =3D this;
      if (that.searchKey =3D=3D=3D "NO" && that.username =3D=3D=3D "") {
        return;
      }

      var _url =3D that.get_url(that.username, that.searchType, =
that.searchKey, that.sourceType, that.tplType);
      var _strategy =3D that.get_strategy(that.username, =
that.searchType);
      var containerTpl =3D that.get_containerTpl(that.tplType);
      var itemTpl =3D that.get_itemTpl(that.tplType);

      //that.username =3D that.getUserName();

      $.ajax({
        type: "get",
        url: _url,
        dataType: "jsonp",
        jsonp: "callback",
        async: false,
        success: function (obj) {
          totalHtmlItems =3D "";
          var htmlItems =3D "";
          var count =3D obj.hits.length;
          if (obj.hits && obj.hits.length > 0) {
            totalHtmlItems =3D that.getData(that.$container, obj.hits, =
containerTpl, itemTpl, that.prefix, _strategy, true);
          }
          if (count < 4 && that.username && that.searchType =3D=3D =
"detail") {
            =
//=E4=BB=A5=E5=86=85=E5=AE=B9=E6=90=9C=E7=B4=A2=E8=81=8C=E4=BD=8D=EF=BC=8C=
=E5=86=8D=E6=AC=A1=E5=8F=91=E9=80=81=E8=AF=B7=E6=B1=82
            var _strategy_detail =3D that.get_strategy("", "detail");
            that.loadByDetail(containerTpl, itemTpl, _strategy_detail, =
count, that.$container, that.prefix);
          } else if (count < 4) {
            =
//=E4=BB=A5=E6=9C=80=E6=96=B0=E8=81=8C=E4=BD=8D=E5=8F=91=E9=80=81=E8=AF=B7=
=E6=B1=82=E3=80=82
            var _strategy_latest =3D that.get_strategy("", "latest");
            htmlItems =3D that.loadByLatest(containerTpl, itemTpl, =
_strategy_latest, count, that.$container, that.prefix);
          }
          if (count >=3D 4) {
            that.goInPage(containerTpl, itemTpl, that.$container, =
that.prefix);
          }
        },
        error: function(err) {
          var i =3D 0;
          //alert('err');
        }
      });
    },
    loadByDetail: function(_containerTpl, _itemTpl, _strategy, _count, =
_containerObj, _prefix) {
      var that =3D this;
      var _url =3D that.get_url("", that.searchType, that.searchKey, =
that.sourceType, that.tplType , 4 - _count);
      $.ajax({
        type: "get",
        url: _url,
        dataType: "jsonp",
        jsonp: "callback",
        async: false,
        success: function (obj) {
          var count =3D obj.hits.length;
          var htmlItems =3D "";
          if (obj.hits && obj.hits.length > 0) {
            totalHtmlItems +=3D that.getData(_containerObj, obj.hits, =
_containerTpl, _itemTpl, _prefix, _strategy, false);
          }
          if (count + _count < 4) {
            =
//=E4=BB=A5=E6=9C=80=E6=96=B0=E8=81=8C=E4=BD=8D=E5=86=8D=E6=AC=A1=E5=8F=91=
=E9=80=81=E8=AF=B7=E6=B1=82=E3=80=82
            var _strategy_latest =3D that.get_strategy("", "latest");
            that.loadByLatest(_containerTpl, _itemTpl, _strategy, count =
+ _count, _containerObj, _prefix);
          }
          if (count + _count >=3D 4) {
            that.goInPage(_containerTpl, _itemTpl, _containerObj, =
_prefix);
          }
        },
        error: function(err) {
          var i =3D 0;
        }
      });
    },
    loadByLatest: function(_containerTpl, _itemTpl, _strategy, _count, =
_containerObj, _prefix) {
      var that =3D this;
      var _url =3D =
"http://job.csdn.net/api/lastJobList";//http://job.csdn.net/api/lastJobLi=
st //http://tmpjob.csdn.net/api/LastJobList

      var homeUrl =3D _prefix + "//job.csdn.net";
      var jobUrl =3D _prefix + "//job.csdn.net/Job/Index?jobID=3D";
      var companyUrl =3D _prefix + =
"//pr.csdn.net/enterprise/ent_home?orgid=3D";

      $.ajax({
        type: "get",
        url: _url,
        dataType: "jsonp",
        jsonp: "callback",
        async: false,
        success: function(obj) {
          var count =3D obj;
          if (obj.Data && obj.Data.paperList && =
obj.Data.paperList.length > 0 && obj.Data.paperList.length >=3D 4 - =
_count) {
            var htmlItems =3D "";
            for (var i =3D 0; i <  4 - _count; i ++) {
              var item =3D obj.Data.paperList[i];
              if (item.JobID && item.JobName && item.OrgID && =
item.OrgName && item.SalaryMax && item.SalaryMin) {
                var salaryText =3D "";
                if (item.SalaryMax =3D=3D 0 && item.SalaryMin =3D=3D 0) =
{
                  salaryText =3D "=E9=9D=A2=E8=AE=AE";
                } else {
                  var mins =3D item.SalaryMin / 1000;
                  var maxs =3D item.SalaryMax / 1000;
                  salaryText =3D mins + "-" + maxs + "K/=E6=9C=88";
                }

                var htmlItem =3D _itemTpl.replace(/\{0\}/, jobUrl + =
item.JobID)
                  .replace(/\{1\}/, item.JobName)
                  .replace(/\{2\}/, item.JobName)
                  .replace(/\{3\}/, companyUrl + item.OrgID)
                  .replace(/\{4\}/, item.OrgName)
                  .replace(/\{5\}/, item.OrgName)
                  .replace(/\{6\}/, jobUrl + item.JobID)
                  .replace(/\{7\}/, salaryText)
                  .replace(/\{8\}/, _strategy)
                  .replace(/\{9\}/, jobUrl + item.JobID);

                htmlItems  +=3D htmlItem;
              }
            }
            totalHtmlItems +=3D htmlItems;
            /*if (htmlItems !=3D "") {
              var jHtml =3D _containerTpl.replace(/\{0\}/, "popu_72")
                .replace(/\{1\}/, homeUrl)
                .replace(/\{2\}/, htmlItems);
              //_containerObj.html("");
              var tdd =3D $(jHtml).appendTo(_containerObj);
              var tds =3D [];
              tds.push(tdd[0]);
              try {
                window['trackingAd']($(tds));
              } catch (ee) {};
            }*/
          }
          that.goInPage(_containerTpl, _itemTpl, _containerObj, =
_prefix);
          return "";
          /*
           obj.Data.paperList[0].JobID
           obj.Data.paperList[0].JobName
           obj.Data.paperList[0].OrgID
           obj.Data.paperList[0].OrgName
           obj.Data.paperList[0].SalaryMax
           obj.Data.paperList[0].SalaryMin
          * */
        },
        error: function(err) {
          var i =3D 0;
        }
      });
    },
    getData: function(container, items, containerTpl, itemTpl, prefix, =
_strategy, isClear) {
      var homeUrl =3D prefix + "//job.csdn.net";
      var jobUrl =3D prefix + =
"//job.csdn.net/Job/Index?jobID=3D";//=E8=81=8C=E4=BD=8D=E9=A1=B5=E9=9D=A2=
url=EF=BC=8C=E6=A0=B7=E4=BE=8B=EF=BC=9Ahttp://job.csdn.net/Job/Index?jobI=
D=3D80500=EF=BC=8Chttp://tmpjob.csdn.net/Job/Index?jobID=3D80500
      var companyUrl =3D prefix + =
"//pr.csdn.net/enterprise/ent_home?orgid=3D";//3=EF=BC=8C=E6=A0=B7=E4=BE=8B=
=EF=BC=9Ahttp://pr.csdn.net/enterprise/ent_home?orgid=3D406854=EF=BC=8Cht=
tp://lpr.csdn.net/enterprise/ent_home?orgid=3D406854

      var htmlItems =3D "";
      for (var i =3D 0; i < items.length; i++) {
        var item =3D items[i];
        var obj =3D item.object;
        if (obj.id && obj.title && obj.org_id && obj.org_name) {
          var salaryText =3D "";
          if (obj.salary_max =3D=3D 0 && obj.salary_min =3D=3D 0) {
            salaryText =3D "=E9=9D=A2=E8=AE=AE";
          } else {
            var mins =3D obj.salary_min / 1000;
            var maxs =3D obj.salary_max / 1000;
            salaryText =3D mins + "-" + maxs + "K/=E6=9C=88";
          }

          var htmlItem =3D itemTpl.replace(/\{0\}/, jobUrl + obj.id)
            .replace(/\{1\}/, obj.title)
            .replace(/\{2\}/, obj.title)
            .replace(/\{3\}/, companyUrl + obj.org_id)
            .replace(/\{4\}/, obj.org_name)
            .replace(/\{5\}/, obj.org_name)
            .replace(/\{6\}/, jobUrl + obj.id)
            .replace(/\{7\}/, salaryText)
            .replace(/\{8\}/, _strategy)
            .replace(/\{9\}/, jobUrl + obj.id);
          //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5  =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0  =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0  =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5  =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0  =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0  =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5  =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4  =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5
          htmlItems +=3D htmlItem;
        }
      }
      return htmlItems;

      /*var jHtml =3D containerTpl.replace(/\{0\}/, "popu_72")
        .replace(/\{1\}/, homeUrl)
        .replace(/\{2\}/, htmlItems);
      //container.html(jHtml);
      if (isClear) {
        container.html("");
      }
      var tdd =3D $(jHtml).appendTo(container);
      var tds =3D [];
      tds.push(tdd[0]);
      try {
        window['trackingAd']($(tds));
      } catch(ee) {};
      return true; */
    },
    get_strategy: function(un, searcht) {
      var _st =3D "";
      if (un !=3D "") {
        _st =3D "PersonalRecommend";
      } else if (searcht =3D=3D "detail") {
        _st =3D "DetailRecommend";
      } else if (searcht =3D=3D "list") {
        _st =3D "ListRecommend";
      } else if (searcht =3D=3D "latest") {
        _st =3D "LatestRecommend";
      } else {
        _st =3D "unknown";
      }

      return _st;
    },
    get_itemTpl: function(tplType) {
      var c =3D "";
      switch (tplType) {
        case "blogDetail":
          c =3D this.blogItem;
          break;
        case "blogSpec":
          c =3D this.blogSpecItem;
          break;
        case "bbsDetail":
          c =3D this.bbsItem;
          break;
        case "askDetail":
          c =3D this.askItem;
          break;
        case "personalSpaceMy":
          c =3D this.perSpaceMyItem;
          break;
        case "personalSpaceHome":
          c =3D this.perSpaceHomeItem;
          break;
        case "heroHome":
          c =3D this.heroHomeItem;
          break;
        case "heroExpert":
          c =3D this.heroExpertItem;
          break;
        case "heroFightDetail":
          c =3D this.heroFightDetailItem;
          break;
        case "heroMy":
          c =3D this.heroMyItem;
          break;
        case "eduList":
          c =3D this.eduListItem;
          break;
        case "eduDetail":
          c =3D this.eduDetailItem;
          break;
        case "search":
          c =3D this.searchItem;
          break;
        case "downMy":
          c =3D this.downMyItem;
          break;
        case "downDetail":
          c =3D this.downDetailItem;
          break;
        case"cstoCaseList":
          c =3D this.cstoCaseListItem;
          break;
        case"cstoCaseDetail":
          c =3D this.cstoCaseDetailItem;
          break;
        case"cstoMy":
          c =3D this.cstoMyItem;
          break;
        case"cstoProjectList":
          c =3D =
this.cstoCaseListItem;//=E5=90=8C=E6=A1=88=E4=BE=8B=E5=88=97=E8=A1=A8
          break;
        case"cstoProjectDetail":
          c =3D this.cstoProjectDetailItem;
          break;
        default:
          break;
      }
      return c;
    },
    get_containerTpl: function(tplType) {
      var c =3D "";
      switch (tplType) {
        case "blogDetail":
          c =3D this.blogTpl;
          break;
        case "blogSpec":
          c =3D this.blogSpecTpl;
          break;
        case "bbsDetail":
          c =3D this.bbsTpl;
          break;
        case "askDetail":
          c =3D this.askTpl;
          break;
        case "personalSpaceMy":
          c =3D this.perSpaceMyTpl;
          break;
        case "personalSpaceHome":
          c =3D this.perSpaceHomeTpl;
          break;
        case "heroHome":
          c =3D this.heroHomeTpl
          break;
        case "heroExpert":
          c =3D this.heroExpertTpl;
          break;
        case "heroFightDetail":
          c =3D this.heroFightDetailTpl;
          break;
        case "heroMy":
          c =3D this.heroMyTpl;
          break;
        case "eduList":
          c =3D this.eduListTpl;
          break;
        case "eduDetail":
          c =3D this.eduDetailTpl;
          break;
        case "search":
          c =3D this.searchTpl;
          break;
        case "downMy":
          c =3D this.downMyTpl;
          break;
        case "downDetail":
          c =3D this.downDetailTpl;
          break;
        case "cstoCaseList":
          c =3D this.cstoCaseListTpl;
          break;
        case "cstoCaseDetail":
          c =3D this.cstoCaseDetailTpl;
          break;
        case "cstoMy":
          c =3D this.cstoMyTpl;
          break;
        case "cstoProjectList":
          c =3D =
this.cstoCaseListTpl;//=E5=90=8C=E6=A1=88=E4=BE=8B=E5=88=97=E8=A1=A8
          break;
        case "cstoProjectDetail":
          c =3D this.cstoProjectDetailTpl;
          break;
        default:
          break;
      }
      return c;
    },
    get_url: function(un, searcht, key, st, tt, count) {
      var _st =3D st;
      var kk =3D =
key.replace(/%/g,"%25").replace(/#/g,"%23").replace(/&/g,"%26").replace(/=
\+/g, "%2B");
      var u =3D =
"http://internalapi.csdn.net/psearch/psearch/query?x-acl-token=3DkUOm7x6d=
CaKGFa8RxxLQ5Hm75ioK&index_name=3Dtest_b2d_job_141211&_client_=3D";
      //var u =3D =
"http://p.search.dm.csdn.net/v2/test_b2d_job_141211/csdn/_search?_client_=
=3D";
      if (un !=3D "" && un !=3D undefined && un !=3D null) {
        _st =3D "uc_proxy";
        u =3D u + "search_job_by_user";
        u =3D u + "&from=3D1&size=3D4";
        u =3D u + "&id=3D" + un;
      } else if (tt =3D=3D "search") {
        u =3D u + "job_position_query";
        u =3D u + "&like=3Dtitle:" + kk;
        u =3D u + "&shouldNum=3D0&from=3D1&size=3D" + (count ? count : =
4);
      } else if (searcht =3D=3D "detail") {
        u =3D u + "search_job_by_content";
        u =3D u + "&id=3D" + kk;
        u =3D u + "&from=3D1&size=3D" + (count ? count : 4);
      } else if (searcht =3D=3D "list") {
        u =3D u + "search_job_by_content";
        u =3D u + "&content=3D" + kk;
        u =3D u + "&from=3D1&size=3D" + (count ? count : 4);
      }
      u =3D u + "&source_type=3D" + _st;
      u =3D u + =
"&fields=3Did,publish_time,title,org_name,org_id,salary_max,salary_min";
      return u;
    },
    getThisCss: function() {
      $("<link>")
        .attr({ rel: "stylesheet",
          type: "text/css",
          href: csdn.position.prefix + =
"//csdnimg.cn/jobreco/job_reco.css"
        })
        .appendTo("head");
    },
    getUserName: function() {
      return this.getCookie("UserName");
    },
    getCookie: function(objName) {
      var arrStr =3D document.cookie.split("; ");
      for(var i =3D 0;i < arrStr.length;i ++){
        var temp =3D arrStr[i].split("=3D");
        if(temp[0] =3D=3D objName) return decodeURI(temp[1]);
      }
    },
    evil: function() {
    }
  };

  csdn.position =3D new Position();
  window["csdn"] =3D csdn;
})(window);
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://cpro.baidustatic.com/cpro/ui/c.js

try{!function(){var =
t;window._SF_&&window._SF_._global_&&window._SF_._global_._ssp?(t=3Dwindo=
w._SF_._global_._ssp,t.DUP_4_SF=3D!0,t.destroy=3Dfunction(){}):t=3Dwindow=
._ssp_global=3Dwindow._ssp_global||{};var =
e=3D{global:t,proxyName:!1,basePath:"https://cpro.baidustatic.com/cpro/ui=
/dup/"};!function(){var =
i=3D{name:"oojs",namespace:"",classes:{},noop:function(){},$oojs:function=
(){var i=3D{};if("undefined"!=3Dtypeof =
window&&window&&"undefined"!=3Dtypeof =
document&&document?(this.runtime=3D"browser",i.global=3Dwindow):(this.run=
time=3D"node",i.global=3Dt),i.proxyName=3D"proxy",i.path=3D"node"=3D=3D=3D=
this.runtime?process.cwd()+"/src/":"/src/","undefined"!=3Dtypeof =
e)for(var n in =
e)n&&e.hasOwnProperty(n)&&(i[n]=3De[n]);this.global=3Di.global,i.proxyNam=
e&&(Function.prototype[i.proxyName]=3Dthis.proxy),this.setPath(i.path),th=
is.global.oojs=3Dthis.global.oojs||this},path:{},pathCache:{},getPath:fun=
ction(t){var e=3Dt?t.split("."):!1,i=3Dthis.path;if(e)for(var =
n=3D0,o=3De.length;o>n;n++){var =
r=3De[n].toLowerCase();if(!i[r])break;i=3Di[r]}return =
i.pathValue},setPath:function(t,e){var =
i=3Dthis.path;if("object"!=3Dtypeof t){if(e)for(var =
n=3Dt.split("."),o=3D0,r=3Dn.length;r>o;o++){var =
s=3Dn[o].toLowerCase();i[s]=3Di[s]||{pathValue:i.pathValue},i=3Di[s]}else=
 e=3Dt;i.pathValue=3De,this.pathCache=3D{}}else for(var a in =
t)a&&t.hasOwnProperty(a)&&this.setPath(a,t[a])},getClassPath:function(t){=
if(!this.pathCache[t]){this.pathCache[t]=3Dthis.getPath(t)+t.replace(/\./=
gi,"/")+".js";var =
e=3Dthis.getPath(t),i=3De.length-1;e.lastIndexOf("\\")!=3D=3Di&&e.lastInd=
exOf("/")!=3D=3Di&&(e+=3D"/"),this.pathCache[t]=3De+t.replace(/\./gi,"/")=
+".js"}return this.pathCache[t]},loadDeps:function(t,e){e=3De||{};var =
i=3Dt.__deps,n=3D(t.__namespace,[]);for(var o in =
i)if(i.hasOwnProperty(o)&&i[o]){var r;if("string"!=3Dtypeof =
i[o]?(t[o]=3Di[o],t[o]&&t[o].__name&&(r=3Dt[o].__full)):(r=3Di[o],t[o]=3D=
this.find(r)),!r||e[r])continue;if(e[r]=3D!0,t[o])t[o].__deps&&(n=3Dn.con=
cat(this.loadDeps(t[o],e)));else{if("node"=3D=3D=3Dthis.runtime)try{t[o]=3D=
require(this.getClassPath(r))}catch(s){n.push(r)}t[o]||n.push(r)}}return =
n},fastClone:function(t){var e=3Dfunction(){};e.prototype=3Dt;var =
i=3Dnew e;return i},deepClone:function(t,e){"number"!=3Dtypeof =
e&&(e=3D10);var i,n=3De-1;if(e>0)if(t instanceof Date)i=3Dnew =
Date,i.setTime(t.getTime());else if(t instanceof Array){i=3D[];for(var =
o=3D0,r=3Dt.length;r>o;o++)i[o]=3Dthis.deepClone(t[o],n)}else =
if("object"=3D=3Dtypeof t){i=3D{};for(var s in =
t)if(t.hasOwnProperty(s)){var a=3Dt[s];i[s]=3Dthis.deepClone(a,n)}}else =
i=3Dt;else i=3Dt;return i},proxy:function(t,e){var =
i=3DArray.prototype.slice.apply(arguments),n=3Di.shift(),o=3D"function"=3D=
=3Dtypeof this?this:i.shift();return function(){var =
t=3DArray.prototype.slice.apply(arguments);return =
o.apply(n,t.concat(i))}},find:function(t){var =
e,i=3Dt.split(".");e=3Dthis.classes[i[0]];for(var =
n=3D1,o=3Di.length;o>n;n++){if(!e||!e[i[n]]){e=3Dnull;break}e=3De[i[n]]}r=
eturn e},reload:function(t){var =
e=3Dthis.find(t);if(e)if(e.__registed=3D!1,"node"=3D=3D=3Dthis.runtime){v=
ar i=3Dthis.getClassPath(t);delete =
require.cache[require.resolve(i)],e=3Drequire(i)}else =
e=3Dthis.define(e);else e=3Dthis.using(t);return =
e},create:function(t,e,i,n,o,r){"string"=3D=3Dtypeof =
t&&(t=3Dthis.using(t));var s=3Dnew t.__constructor(e,i,n,o,r);return =
s},using:function(t){var e=3Dthis.find(t);return =
e||"node"=3D=3D=3Dthis.runtime&&(require(this.getClassPath(t)),e=3Dthis.f=
ind(t)),e},define:function(t){var =
e=3Dt.name||"__tempName",i=3Dt.namespace||"";t.__name=3De,t.__namespace=3D=
i,t.__full=3Di.length>1?i+"."+e:e,t.__deps=3Dt.deps,t.__oojs=3Dthis,t.__c=
onstructor=3Dfunction(t,e,i,n,o){if(this.__clones&&this.__clones.length>0=
)for(var r=3D0,s=3Dthis.__clones.length;s>r;r++){var =
a=3Dthis.__clones[r];this[a]=3Dthis.__oojs.deepClone(this[a])}this.__cons=
tructorSource(t,e,i,n,o)},t.__constructorSource=3Dt[e]||this.noop,t.__sta=
ticSource=3Dt["$"+e]||this.noop,t.__staticUpdate=3Dfunction(){var =
e=3D[];for(var i in this)if(this.hasOwnProperty(i)){var =
n=3Dthis[i];"object"!=3Dtypeof =
n||null=3D=3D=3Dn||"deps"=3D=3D=3Di||0=3D=3D=3Di.indexOf("__")||t.__deps&=
&t.__deps[i]||e.push(i)}this.__clones=3De,this.__constructor.prototype=3D=
this},t.__static=3Dfunction(){this.__staticSource(),this.__staticUpdate()=
};for(var =
n,o=3D!1,r=3D!1,s=3Di.split("."),a=3Ds.length,d=3Dthis.classes,l=3D0;a>l;=
l++)n=3Ds[l],n&&(d[n]=3Dd[n]||{},d=3Dd[n]);d[e]=3Dd[e]||{};var =
c=3Dd;if(d=3Dd[e],d.__name&&d.__registed){if(d.__registed){o=3D!0;for(var=
 h in t)h&&t.hasOwnProperty(h)&&("undefined"=3D=3Dtypeof =
d[h]||d[h]=3D=3D=3Dthis.noop)&&(r=3D!0,d[h]=3Dt[h])}}else =
t.__registed=3D!0,c[e]=3Dt;if(t=3Dc[e],!o||r){var =
u=3Dthis.loadDeps(t);if(u.length>0){if(this.loader=3Dthis.loader||this.us=
ing("oojs.loader"),"browser"!=3D=3Dthis.runtime||!this.loader)throw new =
Error('class "'+t.name+'" loadDeps =
error:'+u.join(","));this.loader.loadDepsBrowser(t,u)}else =
t.__static()}return"node"=3D=3D=3Dthis.runtime&&arguments.callee.caller.a=
rguments[2]&&(arguments.callee.caller.arguments[2].exports=3Dt),t}};i.def=
ine(i)}();var i=3Dt.oojs,n=3D(new =
Date).getTime();i.setPath("https://dup.baidustatic.com/"),i.define({name:=
"static",namespace:"dup.ui.assertion.dan",deps:{},painterName:"static",as=
sert:function(t){var =
e=3Dt.pdb_deliv,i=3De.deliv_des;return!(1!=3D=3De.brandad||24!=3D=3Di.pro=
duct_type)}}),i.define({name:"couplet",namespace:"dup.ui.assertion.dan",d=
eps:{},painterName:"couplet",assert:function(t){var =
e=3Dt.pdb_deliv,i=3De.deliv_des;return =
1=3D=3D=3De.brandad&&22=3D=3D=3Di.product_type}}),i.define({name:"danEexp=
and",namespace:"dup.ui.assertion",deps:{},painterName:"danEexpand",assert=
:function(t){var e=3Dt.pdb_deliv,i=3De.deliv_des;return =
1=3D=3D=3De.brandad&&25=3D=3D=3Di.product_type}}),i.define({name:"barrier=
",namespace:"dup.ui.assertion.dan",deps:{},painterName:"barrier",assert:f=
unction(t){var e=3Dt.pdb_deliv,i=3De.deliv_des;return =
1=3D=3D=3De.brandad&&23=3D=3D=3Di.product_type}}),i.define({name:"video",=
namespace:"dup.ui.assertion.dan",deps:{},painterName:"video",assert:funct=
ion(t){var =
e=3Dt.pdb_deliv,i=3De.deliv_des;return!(1!=3D=3De.brandad||20!=3D=3Di.pro=
duct_type&&21!=3D=3Di.product_type)}}),i.define({name:"topSearchBar",name=
space:"dup.ui.assertion",deps:{},painterName:"topSearchBar",assert:functi=
on(t){var =
e=3Dt.placement,i=3De.container,n=3De.fillstyle;return!(3!=3Di.anchoredTy=
pe||!i.slide||8!=3Dn.btnStyleId)}}),i.define({name:"bottomSearchBar",name=
space:"dup.ui.assertion",deps:{},painterName:"bottomSearchBar",assert:fun=
ction(t){var =
e=3Dt.placement,i=3D(e.basic,e.container),n=3De.fillstyle;return!(3!=3Di.=
anchoredType||!i.slide||9!=3Dn.btnStyleId)}}),i.define({name:"slide",name=
space:"dup.ui.assertion",deps:{},painterName:"slide",assert:function(t){v=
ar =
e=3Dt.placement,i=3De.container,n=3De.fillstyle;return!!(10=3D=3Di.anchor=
edType&&i.slide&&n.btnStyleId<=3D7)}}),i.define({name:"baiduRec",namespac=
e:"dup.ui.assertion",deps:{},painterName:"baiduRec",assert:function(t){va=
r e=3Dt.placement,i=3De.basic,n=3De.container;return =
3=3D=3D=3Di.rspFormat&&1=3D=3D=3Di.flowType&&1=3D=3D=3Dn.anchoredType}}),=
i.define({name:"inlayFix",namespace:"dup.ui.assertion",deps:{},painterNam=
e:"inlayFix",assert:function(t){var =
e=3Dt.placement,i=3De.basic,n=3De.container,o=3Dn.floated;return =
1=3D=3D=3Di.rspFormat&&1=3D=3D=3Di.flowType&&1=3D=3D=3Dn.anchoredType?o?1=
=3D=3D=3Do.trigger?!0:!this.isFloat(o):!0:!1},isFloat:function(t){for(var=
 e in =
t)return!0;return!1}}),i.define({name:"insideText",namespace:"dup.ui.asse=
rtion",deps:{},painterName:"insideText",assert:function(t){var =
e=3Dt.placement,i=3De.basic,n=3De.container;return =
3=3D=3D=3Di.rspFormat&&1=3D=3D=3Di.flowType&&8=3D=3D=3Dn.occurrence&&11=3D=
=3D=3Dn.anchoredType}}),i.define({name:"dynamicFloat",namespace:"dup.ui.a=
ssertion",deps:{},painterName:"dynamicFloat",assert:function(t){var =
e=3Dt.placement,i=3De.basic,n=3De.container,o=3Dn.floated;return!(1!=3D=3D=
i.rspFormat||1!=3D=3Di.flowType||1!=3D=3Dn.anchoredType||!o||8!=3D=3Do.tr=
igger)}}),i.define({name:"float",namespace:"dup.ui.assertion",deps:{},pai=
nterName:"float",assert:function(t){var =
e=3Dt.placement,i=3De.basic,n=3De.container;return =
1=3D=3D=3Di.rspFormat&&1=3D=3D=3Di.flowType&&3=3D=3D=3Dn.anchoredType}}),=
i.define({name:"inlayFix",namespace:"dup.ui.assertion.mobile",deps:{},pai=
nterName:"inlayFix",assert:function(t){var =
e=3Dt.placement,i=3De.basic,n=3De.container;return =
1=3D=3D=3Di.rspFormat&&2=3D=3D=3Di.flowType&&1=3D=3D=3Dn.anchoredType}}),=
i.define({name:"float",namespace:"dup.ui.assertion.mobile",painterName:"f=
loat",assert:function(t){var =
e=3Dt.placement,i=3De.basic,n=3De.container;return =
1=3D=3D=3Di.rspFormat&&2=3D=3D=3Di.flowType&&(3=3D=3D=3Dn.anchoredType||1=
1=3D=3D=3Dn.anchoredType)}}),i.define({name:"config",namespace:"dup.commo=
n",DUP_PREFIX:"BAIDU_SSP_",HTTP_PROTOCOL:"http:",LOADER_DEFINE_NAME:"BAID=
U_SSP_define",LCR_COOKIE_NAME:"BAIDU_SSP_lcr",REQUEST_URL:"//pos.baidu.co=
m/",POS_URL:"",ISPDB_DELIV:!1,DUP_TM:"BAIDU_DUP_SETJSONADSLOT",HTML_POST:=
"HTML_POST",SSP_JSONP:"SSP_JSONP",STATIC_JSONP:"STATIC_JSONP",LOG_URL:"//=
eclick.baidu.com/se.jpg",CACHE_URL:"//pos.baidu.com/bfp/snippetcacher.php=
?",STORAGE_TIMER:864e5,STATUS_CREATE:1,STATUS_REQUEST:2,STATUS_RESPONSE:4=
,STATUS_RENDERED:8,STATUS_FINISH:16,EXP_SWITCH:!0,EXP_SATUS:!1,BASE_ID:"1=
10005",EXP_ID:"",RD_ID:"110006",SHUNT_NUMBER:200,IS_PREVIEW:!1,IS_CNAME:!=
1,FIRST_ONCESEACH:!1,AD_ICON:"https://cpro.baidustatic.com/cpro/ui/noexpi=
re/img/2.0.0/bd-logo08.png",$config:function(){this.HTTP_PROTOCOL=3D"http=
s:"=3D=3D=3Dlocation.protocol?"https:":"http:",i.global.userConfig&&i.glo=
bal.userConfig.domain&&(this.REQUEST_URL_CNAME=3Di.global.userConfig.doma=
in||"")}}),i.define({name:"lang",namespace:"dup.common.utility",hasOwn:Ob=
ject.prototype.hasOwnProperty,getAttribute:function(t,e){for(var =
i=3Dt,n=3De.split(".");n.length;){if(void =
0=3D=3D=3Di||null=3D=3D=3Di)return;i=3Di[n.shift()]}return =
i},serialize:function(t){if("object"!=3Dtypeof t)return"";var =
e=3D[];for(var i in =
t)this.hasOwn.call(t,i)&&e.push(i+"=3D"+encodeURIComponent(t[i]));return =
e.join("&")},getType:function(t){for(var e=3D{},i=3D"Array Boolean Date =
Error Function Number RegExp String".split(" =
"),n=3D0,o=3Di.length;o>n;n++)e["[object =
"+i[n]+"]"]=3Di[n].toLowerCase();return =
null=3D=3Dt?"null":e[Object.prototype.toString.call(t)]||"object"},isEmpt=
yObj:function(t){for(var e in =
t)return!1;return!0},argumentsToArray:function(t){var =
e=3D[];switch(this.getType(t)){case"object":e=3DArray.prototype.slice.cal=
l(t);break;case"array":e=3Dt;break;case"number":case"string":e.push(t)}re=
turn e},template:function(t,e){var i=3D/{(.*?)}/g;return =
t.replace(i,function(t,i,n,o){return =
e[i]||""})},encodeHTML:function(t){var =
e=3D{'"':"&quot;",">":"&gt;","<":"&lt;","&":"&amp;"};return =
t.replace(/[\"<>\&]/g,function(t){return =
e[t]})},format:function(t,e){var i=3D/\{(\w+)\:(\w+)\}/g,n=3Dthis;return =
t.replace(i,function(t,i,o){var =
r=3De[i];switch(o){case"number":r=3D+r||0;break;case"boolean":r=3D!!r;bre=
ak;case"html":r=3Dn.encodeHTML(r)}return r})},jsonToObj:function(t){var =
e=3D"";return =
window.JSON&&window.JSON.parse&&(e=3Dwindow.JSON.parse(t)),e},objToString=
:function(t){var =
e=3D"";try{e=3Dwindow.JSON&&window.JSON.stringify?window.JSON.stringify(t=
):window.eval(t)}catch(i){}return e},trim:function(t){return =
t.replace(/(^\s*)|(\s*$)/g,"")},unique:function(t){for(var =
e=3D[],i=3D{},n=3Dt.length,o=3D0;n>o;o++){var =
r=3Dt[o];i[r]||(e[e.length]=3Dr,i[r]=3D!0)}return =
e},isArray:function(t){return"[object =
Array]"=3D=3DObject.prototype.toString.call(t)},isFunction:function(t){re=
turn"[object =
Function]"=3D=3DObject.prototype.toString.call(t)},toArray:function(t){if=
(null=3D=3D=3Dt||void 0=3D=3D=3Dt)return[];if(this.isArray(t))return =
t;if("number"!=3Dtypeof t.length||"string"=3D=3Dtypeof =
t||this.isFunction(t))return[t];if(t.item){for(var e=3Dt.length,i=3Dnew =
Array(e);e--;)i[e]=3Dt[e];return =
i}return[].slice.call(t)},encode:function(t){return void =
0=3D=3D=3Dt?"":encodeURIComponent(t)},encodeUrl:function(t){var =
e=3Descape(t);return =
e=3De.replace(/([*+-.\/@_])/g,function(t){return"%"+t.charCodeAt(0).toStr=
ing(16)}),e.replace(/%/g,"_")},isPlain:function(t){var =
e,i=3DObject.prototype.hasOwnProperty;if(!(t&&"[object =
Object]"=3D=3D=3DObject.prototype.toString.call(t)&&"isPrototypeOf"in =
t))return!1;if(t.constructor&&!i.call(t,"constructor")&&!i.call(t.constru=
ctor.prototype,"isPrototypeOf"))return!1;for(e in t);return void =
0=3D=3D=3De||i.call(t,e)},clone:function(t){var e,i,n=3Dt;if(!t||t =
instanceof Number||t instanceof String||t instanceof Boolean)return =
n;if(this.isArray(t)){n=3D[];var =
o=3D0;for(e=3D0,i=3Dt.length;i>e;e++)n[o++]=3Dthis.clone(t[e])}else =
if(this.isPlain(t)){n=3D{};for(e in =
t)t.hasOwnProperty(e)&&(n[e]=3Dthis.clone(t[e]))}return =
n}}),i.define({name:"browser",namespace:"dup.common.utility",deps:{lang:"=
dup.common.utility.lang"},$browser:function(){this.win=3Dwindow,this.nav=3D=
window.navigator,this.checkBrowser()},checkBrowser:function(){var =
t=3Dnavigator.userAgent,e=3Dwindow.RegExp;this.antBrowser=3D!1,/msie =
(\d+\.\d)/i.test(t)&&(this.ie=3Ddocument.documentMode||+e.$1),/opera\/(\d=
+\.\d)/i.test(t)&&(this.opera=3D+e.$1),/firefox\/(\d+\.\d)/i.test(t)&&(th=
is.firefox=3D+e.$1),/(\d+\.\d)?(?:\.\d)?\s+safari\/?(\d+\.\d+)?/i.test(t)=
&&!/chrome/i.test(t)&&(this.safari=3D+(e.$1||e.$2)),/chrome\/(\d+\.\d)/i.=
test(t)&&(this.chrome=3D+e.$1,this.test360()&&(this.qihoo=3D!0)),/qqbrows=
er\/(\d+\.\d)/i.test(t)&&(this.tencent=3D!0),(/ucbrowser\/(\d+\.\d)/i.tes=
t(t)||/ubrowser\/(\d+\.\d)/i.test(t))&&(this.uc=3D!0),/miuibrowser\/(\d+\=
.\d)/i.test(t)&&(this.xiaomi=3D!0),/vivobrowser\/(\d+\.\d)/i.test(t)&&(th=
is.vivo=3D!0),/oppobrowser\/(\d+\.\d)/i.test(t)&&(this.oppo=3D!0);try{/(\=
d+\.\d)/.test(this.lang.getAttribute(window,"external.max_version"))&&(th=
is.maxthon=3D+e.$1)}catch(i){}(this.tencent||this.uc||this.xiaomi||this.v=
ivo||this.oppo)&&(this.antBrowser=3D!0),this.isWebkit=3D/webkit/i.test(t)=
,this.isGecko=3D/gecko/i.test(t)&&!/like gecko/i.test(t);for(var =
n=3D["Android","iPad","Phone","iOS","iPod","Linux","Macintosh","Windows"]=
,o=3D"",r=3D0;r<n.length;r++){if(o=3Dn[r],"iPad"=3D=3D=3Do||"iPhone"=3D=3D=
=3Do||"iOS"=3D=3D=3Do||"iPod"=3D=3D=3Do){this.isIOS=3D!0;break}if("Androi=
d"=3D=3D=3Do){this.isAndroid=3D!0;break}if(t.match(new =
RegExp(o.toLowerCase(),"i")))break}this.platform=3Do},test360:function(){=
try{return"scoped"in =
document.createElement("style")}catch(t){return!1}},getFlashPlayerVersion=
:function(){var t=3D0;try{var =
e=3D"https:"=3D=3D=3Dlocation.protocol;if(this.chrome>=3D45||e)return =
0;if(this.nav.plugins&&this.nav.mimeTypes.length){var =
i=3Dthis.nav.plugins["Shockwave =
Flash"];i&&i.description&&(t=3Di.description.replace(/([a-zA-Z]|\s)+/,"")=
.replace(/(\s)+r/,".")+".0")}if(0=3D=3D=3Dt&&(this.win.ActiveXObject||thi=
s.win.hasOwnProperty("ActiveXObject")))for(var n=3D30;n>=3D2;n--)try{var =
o=3Dnew ActiveXObject("ShockwaveFlash.ShockwaveFlash."+n);if(o){var =
r=3Do.GetVariable("$version");if(t=3Dr.replace(/WIN/g,"").replace(/,/g,".=
"),t>0)break}}catch(s){}t=3DparseInt(t,10),this.getFlashPlayerVersion=3Df=
unction(){return t}}catch(a){t=3D0}return =
t}}),i.define({name:"cookie",namespace:"dup.common.utility",deps:{lang:"d=
up.common.utility.lang"},get:function(t,e){var i=3Dnew RegExp("(^| =
)"+t+"=3D([^;]*)(;|$)"),n=3Di.exec(document.cookie);return =
n?e?decodeURIComponent(n[2]):n[2]:""},set:function(t,e,i,n){var =
o=3Di.expires;document.cookie=3Dt+"=3D"+(n?encodeURIComponent(e):e)+(i.pa=
th?"; path=3D"+i.path:"")+(o?"; =
expires=3D"+o.toGMTString():"")+(i.domain?"; =
domain=3D"+i.domain:"")},remove:function(t){var e=3Dnew =
Date;e.setTime(e.getTime()-86400),this.set(t,"",{path:"/",expires:e})}}),=
i.define({name:"additionalParam",namespace:"dup.business.parameter",deps:=
{},$additionalParam:function(){this.paramsList=3D[]},ParamsMap:{clid:{key=
:"apdi",encode:!0},cuid:{key:"udi",encode:!0},ctkey:{key:"lcdi",encode:!0=
}},paramCheck:function(t,e){for(var i in =
e)if(i&&e.hasOwnProperty(i)&&this.ParamsMap[i]){var =
n=3Dthis.ParamsMap[i],o=3D{};try{n.key&&(o.key=3Dn.key,o.value=3Dthis.par=
amEncode(n,e[i])),n&&!n.key&&(o.key=3Di,o.value=3Dthis.paramEncode(n,e[i]=
)),this.paramsList.push(o)}catch(r){}}},paramEncode:function(t,e){var =
i;return =
i=3Dt.encode?encodeURIComponent(e):e}}),i.define({name:"requestCache",nam=
espace:"dup.business",deps:{config:"dup.common.config"},slotInfoMap:{},se=
condResult:{},add:function(t,e){this.slotInfoMap[t]=3De},get:function(t){=
return =
this.slotInfoMap[t]},cacheRequest:function(t,e){if(!t||this.secondResult[=
t])return!1;this.secondResult[t]=3De;var =
i=3Dthis.get(t),n=3Dthis.config.CACHE_URL+"dpv=3D"+t+"&di=3D"+i.slotId;th=
is.loadScript(n)},loadScript:function(t){var =
e=3Ddocument.createElement("script");e.charset=3D"utf-8",e.async=3D!0,e.s=
rc=3Dt;var =
i=3Ddocument.getElementsByTagName("head")[0]||document.body;i.insertBefor=
e(e,i.firstChild)}}),i.define({name:"storage",namespace:"dup.common.utili=
ty",store:null,isAvailable:!1,$storage:function(){try{this.store=3Dwindow=
.localStorage,this.store&&this.store.removeItem&&(this.isAvailable=3D!0)}=
catch(t){}},available:function(){var t=3D!1;return =
this.store&&this.store.removeItem&&(t=3D!0),t},setItem:function(t,e,i){if=
(this.store){e=3Di?encodeURIComponent(e):e;try{this.store.setItem(t,e)}ca=
tch(n){}}},getItem:function(t,e){if(this.store){var =
i=3Dthis.store.getItem(t);return e&&i?decodeURIComponent(i):i}return =
null},addItem:function(t,e,i){if(this.store){e=3Di?encodeURIComponent(e):=
e;var =
n=3Dthis.getItem(t)||"";n+=3D(n&&"|")+e;try{this.setItem(t,n)}catch(o){}}=
},removeItem:function(t){this.store&&this.store.removeItem(t)},spliceItem=
:function(t,e,i){if(this.store){e=3Di?encodeURIComponent(e):e;var =
n=3Dthis.getItem(t)||"";if(n=3Dn.replace(new =
RegExp(e+"\\|?","g"),"").replace(/\|$/,""))try{this.setItem(t,n)}catch(o)=
{}else =
this.store.removeItem(t)}}}),i.define({name:"loader",namespace:"dup.commo=
n",deps:{config:"dup.common.config"},$loader:function(){this.loadingCls=3D=
this.loadingCls||{}},load:function(t,e,n){var =
o=3Di.getClassPath(e),r=3Dthis.check(o);if(!r){var =
s=3Ddocument.createElement("script");s.type=3D"text/javascript",s.async=3D=
!0,s.src=3Do;var =
a=3Di.proxy(this,this.onLoadStatusHandler,t,s);s.onload=3Ds.onerror=3Ds.o=
nreadystatechange=3Da;var =
d=3Ddocument.getElementsByTagName("script")[0];d.parentNode.insertBefore(=
s,d),this.loadingCls[t]=3Dn}},check:function(){for(var t in =
this.loadingCls)if(this.loadingCls.hasOwnProperty(t)&&this.loadingCls[t]=3D=
=3D=3D!0)return!0;return!1},onLoadStatusHandler:function(t,e,i){var =
e,i;3=3D=3D=3Darguments.length?(e=3Darguments[1],i=3Darguments[2]):(e=3Da=
rguments[0],i=3Darguments[1]);var =
n=3Dthis.loadingCls[e];i&&/loaded|complete|undefined/.test(i.readyState)&=
&(i.onload=3Di.onerror=3Di.onreadystatechange=3Dnull,i=3Dvoid =
0,n&&n())}}),i.define({name:"float",namespace:"dup.ui.assertion.mobile",p=
ainterName:"float",assert:function(t){var =
e=3Dt.placement,i=3De.basic,n=3De.container;return =
1=3D=3D=3Di.rspFormat&&2=3D=3D=3Di.flowType&&(3=3D=3D=3Dn.anchoredType||1=
1=3D=3D=3Dn.anchoredType)}}),i.define({name:"dynamicFloat",namespace:"dup=
.ui.assertion",deps:{},painterName:"dynamicFloat",assert:function(t){var =
e=3Dt.placement,i=3De.basic,n=3De.container,o=3Dn.floated;return!(1!=3D=3D=
i.rspFormat||1!=3D=3Di.flowType||1!=3D=3Dn.anchoredType||!o||8!=3D=3Do.tr=
igger)}}),i.define({name:"interface",namespace:"dup.business",deps:{lang:=
"dup.common.utility.lang"},apiMap:{},$Interface:function(){},register:fun=
ction(t,e,n){this.apiMap[t]=3Di.proxy(e,n)},executeTask:function(t){for(v=
ar e in t){var =
i=3Dt[e];if("array"=3D=3D=3Dthis.lang.getType(i)&&("id"!=3D=3De||"contain=
er"!=3D=3De||"size"!=3D=3De||"async"!=3D=3De)){var =
n=3Dthis.apiMap[e];if(n)return =
n.apply(null,i)}}},perform:function(t,e){var i=3Dthis.apiMap[t];return =
i?i.apply(null,e):void =
0}}),i.define({name:"expBranch",namespace:"dup.business",deps:{config:"du=
p.common.config"},tactics:function(){var =
t=3D1e3-this.config.SHUNT_NUMBER,e=3D1e9*Math.random();e<1e6*this.config.=
SHUNT_NUMBER?(this.config.EXP_SATUS=3D!0,this.config.EXP_ID=3Dthis.config=
.RD_ID):e>=3D1e6*t&&(this.config.EXP_ID=3Dthis.config.BASE_ID)}}),i.defin=
e({name:"material",namespace:"dup.business",deps:{lang:"dup.common.utilit=
y.lang",config:"dup.common.config"},$material:function(){var =
t=3Dthis;this.materialFactory=3D{},this.materialFactory.text=3Dfunction(e=
){var =
i=3D"font-size:{size:number}{unit:string};color:{defaultColor:string};fon=
t-weight:{defaultBold:string};font-style:{defaultItalic:string};text-deco=
ration:{defaultUnderline:string};",n=3D'<span =
style=3D"word-wrap:break-word;"><a href=3D"{clickUrl:string}" =
target=3D"{target:string}" =
style=3D"'+i+'"{events}>{text:string}</a></span>',o=3D/\{events\}/;if(1=3D=
=3D=3De.version)n=3Dn.replace(o,"");else if(2=3D=3D=3De.version){var =
r=3D"this.style.color=3D'{defaultColor:string}';this.style.fontWeight=3D'=
{defaultBold:string}';this.style.fontStyle=3D'{defaultItalic:string}';thi=
s.style.textDecoration=3D'{defaultUnderline:string}';",s=3D"this.style.co=
lor=3D'{hoverColor:string}';this.style.fontWeight=3D'{hoverBold:string}';=
this.style.fontStyle=3D'{hoverItalic:string}';this.style.textDecoration=3D=
'{hoverUnderline:string}';",a=3D' onmouseover=3D"'+s+'" =
onmouseout=3D"'+r+'"';n=3Dn.replace(o,a);for(var =
d=3D["default","hover"],l=3D0;l<d.length;l++){var =
c=3Dd[l],h=3Dc+"Color",u=3Dc+"Bold",p=3Dc+"Italic",m=3Dc+"Underline";e[h]=
=3D"#"+e[h],e[u]=3De[u]?"bold":"normal",e[p]=3De[p]?"italic":"normal",e[m=
]=3De[m]?"underline":"none"}}return =
t.lang.format(n,e)},this.materialFactory.image=3D'<a =
href=3D"{clickUrl:string}" target=3D"{target:string}"><img =
src=3D"{src:string}" title=3D"{title:html}" alt=3D"{title:html}" =
border=3D"0" height=3D"{height:number}" width=3D"{width:number}" =
/></a>',this.materialFactory.flash=3Dfunction(e){var =
i=3D["<script>","var BD =3D BD || {};","BD.MC =3D BD.MC || =
{};","BD.MC.ADFlash =3D BD.MC.ADFlash || {};","BD.MC.ADImg =3D =
BD.MC.ADImg || {};","BD.MC.ADFlash.w =3D =
{width:number};","BD.MC.ADFlash.h =3D =
{height:number};",'BD.MC.ADFlash.mu =3D =
"{src:string}";','BD.MC.ADFlash.cu =3D =
"{clickUrl:string}";',"BD.MC.ADFlash.wm =3D =
{wmode:number};",'BD.MC.ADFlash.ct =3D =
"{clickTag:string}";',"BD.MC.ADImg.w =3D =
{imageWidth:number};","BD.MC.ADImg.h =3D =
{imageHeight:number};",'BD.MC.ADImg.mu =3D =
"{imageSrc:string}";','BD.MC.ADImg.cu =3D =
"{imageClickUrl:string}";','BD.MC.ADImg.tw =3D =
"{target:string}";',"BD.MC.ADImg.flag =3D =
{backupImage:number};","</script>",'<script src =
=3D"','//cbjs.baidu.com/js/{file:string}.js">',"</script>"];return =
e.file=3De.hasLink?"cflash":"flash",e.imageClickUrl=3De.clickUrl,e.hasLin=
k||(e.clickUrl=3D""),t.lang.format(i.join(""),e)},this.materialFactory.ri=
ch=3Dfunction(t){return =
t.content},this.materialFactory.slide=3Dfunction(e,i){for(var n=3D'<div =
id=3D"bd_ec_clb_asp" =
style=3D"width:{width:number}px;height:{height:number}px;overflow:hidden;=
">{html:string}</div><script>(function(){var d =3D document;function =
G(id) { return d.getElementById(id); };var container =3D =
G("bd_ec_clb_asp");var pages =3D container.childNodes;var pl =3D 0;for =
(var i =3D 0; i < pages.length; i++) {if (pages[i].nodeType =3D=3D=3D 1) =
{pl++;}}var cp =3D 0;function showPage(pn) { pages[pn].style.display =3D =
""; };function hidePages() {for (var i =3D 0; i < pl; i++) =
{pages[i].style.display =3D "none";}};function roll() =
{hidePages();showPage(cp);cp =3D=3D (pages.length - 1) ? cp =3D 0 : =
cp++;};var autoRoll;function setRoll() { autoRoll =3D =
window.setInterval(function() { roll(); }, =
{interval:number});};roll();setRoll();container.onmouseover =3D =
function() { window.clearInterval(autoRoll); };container.onmouseout =3D =
function() {setRoll(); =
};})();</script>',o=3D[],r=3De.materials,s=3D0;s<r.length;s++){var =
a=3Dr[s];"string"!=3Dtypeof =
a&&(a=3Dt.formatMaterial(a,i,!0)),o.push(a)}e.html=3D"<div>"+o.join("</di=
v><div>")+"</div>";var d=3Di.response.placement,l=3Dd.container;return =
e.width=3Di.width||l.width,e.height=3Di.height||l.height,t.lang.format(n,=
e)}},formatMaterial:function(t,e,i){if("string"=3D=3Dtypeof t)return =
t;if(!t.type)return"";var n=3Dthis.materialFactory[t.type];if(n){var =
o=3D"string"=3D=3Dtypeof n?this.lang.format(n,t):n(t,e);return =
i?o:"<!DOCTYPE =
html><body>"+o}return""}}),i.define({name:"monitor",namespace:"dup.busine=
ss",sendLog:function(t){if(t.response){var =
e=3Dt.response.pdb_deliv.deliv_des,i=3De._html,n=3Di&&i.monitorUrl;if(n){=
var o=3Dnew Image,r=3D"log"+ +new =
Date;window[r]=3Do,"http"=3D=3Dn.substr(0,4).toLowerCase()?("http://"=3D=3D=
n.substr(0,7).toLowerCase()&&(n=3Dn.replace("http://","//")),"https://"=3D=
=3Dn.substr(0,8).toLowerCase()&&(n=3Dn.replace("https://","//"))):n=3D"//=
"+n;var =
s=3Dfunction(){o.onload=3Do.onerror=3Do.onabort=3Dnull;try{delete =
window[r]}catch(t){window[r]=3Dvoid =
0}};o.onload=3Do.onerror=3Do.onabort=3Ds,o.src=3Dn}}}}),i.define({name:"i=
nlayFix",namespace:"dup.ui.assertion",deps:{},painterName:"inlayFix",asse=
rt:function(t){var =
e=3Dt.placement,i=3De.basic,n=3De.container,o=3Dn.floated;return =
1=3D=3D=3Di.rspFormat&&1=3D=3D=3Di.flowType&&1=3D=3D=3Dn.anchoredType?o?1=
=3D=3D=3Do.trigger?!0:!this.isFloat(o):!0:!1},isFloat:function(t){for(var=
 e in =
t)return!0;return!1}}),i.define({name:"float",namespace:"dup.ui.assertion=
",deps:{},painterName:"float",assert:function(t){var =
e=3Dt.placement,i=3De.basic,n=3De.container;return =
1=3D=3D=3Di.rspFormat&&1=3D=3D=3Di.flowType&&3=3D=3D=3Dn.anchoredType}}),=
i.define({name:"unicode",namespace:"dup.common.utility",deps:{},toDecode:=
function(t){var e=3D[];if(t instanceof Array){for(var =
i=3D0;i<t.length;i++){var n=3Dt[i];e.push(this.decode(n))}return =
e}return"string"=3D=3Dtypeof t?this.decode(t):void =
0},toEncode:function(t){var e=3D[];if(t instanceof Array){for(var =
i=3D0;i<t.length;i++){var n=3Dt[i];e.push(this.encode(n))}return =
e}return"string"=3D=3Dtypeof t?this.encode(t):void =
0},decode:function(t){return =
unescape(t.replace(/\\(u[0-9a-fA-F]{4})/gm,"%$1"))},encode:function(t){re=
turn =
escape(t).replace(/%(u[0-9A-F]{4})|(%[0-9A-F]{2})/gm,function(t,e,i){retu=
rn =
e&&"\\"+e.toLowerCase()||unescape(i)})}}),i.define({name:"dom",namespace:=
"dup.common.utility",deps:{lang:"dup.common.utility.lang",browser:"dup.co=
mmon.utility.browser"},$dom:function(){},g:function(t,e){return =
t?"string"=3D=3D=3Dthis.lang.getType(t)&&t.length>0?(e=3De||window,e.docu=
ment.getElementById(t)):!t.nodeName||1!=3D=3Dt.nodeType&&9!=3D=3Dt.nodeTy=
pe?null:t:null},getDocument:function(t){return =
9=3D=3D=3Dt.nodeType?t:t.ownerDocument||t.document},getWindow:function(t)=
{var e=3Dthis.getDocument(t);return =
e.parentWindow||e.defaultView||null},isWindow:function(t){try{if(t&&"obje=
ct"=3D=3Dtypeof t&&t.document&&"setInterval"in =
t)return!0}catch(e){return!1}return!1},isInIframe:function(t,e){return =
t=3Dt||window,t!=3Dwindow.top&&t!=3Dt.parent||!this.isWindow(t)},checkPar=
entAccess:function(t){try{return!!t.parent.location.toString()}catch(e){r=
eturn!1}},isInCrossDomainIframe:function(t,e){e=3D2=3D=3D=3Darguments.len=
gth?e:t.parent;for(var =
i=3D0,n=3D10;i++<n&&this.isInIframe(t,e);){if(!this.checkParentAccess(t))=
return!0;t=3Dt.parent}return =
i>=3Dn},ready:function(t,e,n){n=3Dn||this.win||window;var =
o=3Dn.document;e=3De||0,this.domReadyMonitorRunTimes=3D0,this.readyFuncAr=
ray=3Dthis.readyFuncArray||[],this.readyFuncArray.push({func:t,delay:e,do=
ne:!1});var r=3Di.proxy(this,function(){var =
t=3D!1;this.domReadyMonitorRunTimes++;var =
e=3D!1;try{n.frameElement&&(e=3D!0)}catch(i){e=3D!0}if(this.browser.ie&&t=
his.browser.ie<9&&!e)try{o.documentElement.doScroll("left"),t=3D!0}catch(=
i){}else =
if("complete"=3D=3D=3Do.readyState||this.domContentLoaded)t=3D!0;else =
if(this.domReadyMonitorRunTimes>3e5)return =
void(this.domReadyMonitorId&&(n.clearInterval(this.domReadyMonitorId),thi=
s.domReadyMonitorId=3Dnull));if(t)try{if(this.readyFuncArray&&this.readyF=
uncArray.length)for(var =
r=3D0,s=3Dthis.readyFuncArray.length;s>r;r++){var =
a=3Dthis.readyFuncArray[r];a&&a.func&&!a.done&&(a.delay?(a.done=3D!0,n.se=
tTimeout(a.func,a.delay)):(a.done=3D!0,a.func()))}}catch(d){throw =
d}finally{this.domReadyMonitorId&&(n.clearInterval(this.domReadyMonitorId=
),this.domReadyMonitorId=3Dnull)}},this),s=3Di.proxy(this,function(){this=
.domContentLoaded=3D!0,r()});this.domReadyMonitorId||(this.domReadyMonito=
rId=3Dn.setInterval(r,50),o.addEventListener?(o.addEventListener("DOMCont=
entLoaded",s,!1),n.addEventListener("load",s,!1)):o.attachEvent&&n.attach=
Event("onload",s,!1))},bind:function(t,e,i){return"string"=3D=3Dtypeof =
t&&(t=3Dthis.g(t)),e=3De.replace(/^on/i,"").toLowerCase(),t.addEventListe=
ner?t.addEventListener(e,i,!1):t.attachEvent&&t.attachEvent("on"+e,i),t},=
getNotCrossDomainTopWindow:function(t,e){1=3D=3D=3Darguments.length&&"num=
ber"=3D=3D=3Dthis.lang.getType(arguments[0])&&(e=3Darguments[0],t=3Dvoid =
0),e=3De||10;for(var =
i=3Dwindow,n=3D0;n++<e&&this.isInIframe(i)&&!this.isInCrossDomainIframe(i=
)&&(!t||!t(i));)i=3Di.parent;return i},getTopElement:function(t){var =
e=3Dthis.isWindow(t)?t.document:this.getDocument(t);return"CSS1Compat"=3D=
=3D=3De.compatMode?e.documentElement:e.body},getDocumentTitle:function(){=
var =
t=3Dthis.getNotCrossDomainTopWindow(),e=3Dt.document.title,i=3D60;return =
e.length>i&&(e=3De.substr(0,i)),e},getPageClient:function(){var =
t;return"number"=3D=3Dtypeof =
window.innerWidth?t=3D{width:window.innerWidth,height:window.innerHeight}=
:document.documentElement&&document.documentElement.clientWidth?t=3D{widt=
h:document.documentElement.clientWidth,height:document.documentElement.cl=
ientHeight}:document.body&&document.body.clientWidth&&(t=3D{width:documen=
t.body.clientWidth,height:document.body.clientHeight}),t},getNotCrossDoma=
inWin:function(){var t=3Dthis.getWinList();return =
t[t.length-1]},getWinList:function(){for(var =
t=3D0,e=3Dwindow,i=3De.top,n=3D[e];e!=3D=3Di&&t++<10&&this.isWindow(e)&&t=
his.isWindow(e.parent);)e=3De.parent,n.push(e);return =
getWinList=3Dfunction(){return =
n},n}}),i.define({name:"style",namespace:"dup.common.utility",deps:{dom:"=
dup.common.utility.dom",lang:"dup.common.utility.lang",browser:"dup.commo=
n.utility.browser"},$style:function(){},getClientWidth:function(t){t=3Dt|=
|window;try{var =
e=3Dthis.dom.getTopElement(t).clientWidth;if(e||0=3D=3D=3De)return =
e}catch(i){}return-1},getClientHeight:function(t){t=3Dt||window;try{var =
e=3Dthis.dom.getTopElement(t).clientHeight;if(e||0=3D=3D=3De)return =
e}catch(i){}return-1},getPositionCore:function(t){var =
e=3D{top:0,left:0};if(t=3D=3D=3Dthis.dom.getTopElement(t))return e;var =
i=3Dthis.dom.getDocument(t),n=3Di.body,o=3Di.documentElement;if(n&&t.getB=
oundingClientRect){var =
r=3Dt.getBoundingClientRect();e.left=3DMath.floor(r.left)+Math.max(o.scro=
llLeft,n.scrollLeft),e.top=3DMath.floor(r.top)+Math.max(o.scrollTop,n.scr=
ollTop),e.left-=3Do.clientLeft,e.top-=3Do.clientTop;var =
s=3Dthis.getStyle(n,"borderLeftWidth"),a=3Dthis.getStyle(n,"borderTopWidt=
h"),d=3DparseInt(s,10),l=3DparseInt(a,10);e.left-=3DisNaN(d)?2:d,e.top-=3D=
isNaN(l)?2:l}return e},getStyle:function(t,e){if(!t)return"";var =
i=3D"";i=3De.indexOf("-")>-1?e.replace(/[-][^-]{1}/g,function(t){return =
t.charAt(1).toUpperCase()}):e.replace(/[A-Z]{1}/g,function(t){return"-"+t=
.charAt(0).toLowerCase()});var =
n,o=3Dthis.dom.getWindow(t);if(o&&o.getComputedStyle){if(n=3Do.getCompute=
dStyle(t,null))return n.getPropertyValue(e)||n.getPropertyValue(i)}else =
if(t.currentStyle)return =
n=3Dt.currentStyle,n[e]||n[i];return""},getPosition:function(t){if(t){var=
 e=3Dthis.dom.g(t);if(!e)return!1;var =
i=3Dthis.getPositionCore(e),n=3Dthis.dom.getWindow(e);if(!n)return =
i;for(var =
o=3D0,r=3D10;n!=3D=3Dn.parent&&o++<r&&!this.dom.isInCrossDomainIframe(n)&=
&n.frameElement;){var =
s=3Dthis.getPositionCore(n.frameElement);i.left+=3Ds.left,i.top+=3Ds.top,=
n=3Dn.parent}return i}},getOpacityInWin:function(t){for(var =
e=3Dt,i=3Dthis.dom.getWindow(e),n=3D100;e&&e.tagName;){var =
o=3D100;if(this.browser.ie){if(this.browser.ie>5)try{o=3DparseInt(this.la=
ng.getAttribute(e,"filters.alpha.opacity"),10)||100}catch(r){}n=3Dn>o?o:n=
}else{try{o=3D100*(i.getComputedStyle(e,null).opacity||1)}catch(r){}n*=3D=
o/100}e=3De.parentNode}return =
0=3D=3D=3Dn?0:n||100},getOpacity:function(t){for(var =
e=3Dthis.dom.g(t),i=3Dthis.dom.getWindow(e),n=3Dthis.getOpacityInWin(e),o=
=3D0,r=3D10;o++<r&&this.dom.isInIframe(i)&&!this.dom.isInCrossDomainIfram=
e(i);){var =
s=3Di.frameElement?this.getOpacityInWin(i.frameElement):100;n*=3Ds/100,i=3D=
i.parent}return n},getScrollWidth:function(t){t=3Dt||window;try{var =
e=3Dthis.dom.getTopElement(t).scrollWidth;if(e||0=3D=3D=3De)return =
e}catch(i){}return-1},getScrollHeight:function(t){t=3Dt||window;try{var =
e=3Dthis.dom.getTopElement(t).scrollHeight;if(e||0=3D=3D=3De)return =
e}catch(i){}return-1},getScrollTop:function(t){t=3Dt||window;var =
e=3Dt.document;return =
t.pageYOffset||e.documentElement.scrollTop||e.body.scrollTop},getScrollLe=
ft:function(t){var e=3Dt||window,i=3Dthis.dom.getTopElement(e);return =
e.pageXOffset||i.scrollLeft},getOuterWidth:function(t,e){var =
i=3Dthis.dom.g(t),n=3Di.offsetWidth;return =
e&&(n+=3Dthis.getMargin(i,"Left")+this.getMargin(i,"Right")),n},getMargin=
:function(t,e){var =
i=3Dthis.getStyle(t,"margin"+e).toString().toLowerCase().replace("px","")=
.replace("auto","0");return =
parseInt(i,10)||0},getOuterHeight:function(t,e){var =
i=3Dthis.dom.g(t),n=3Di.offsetHeight;return =
e&&(n+=3Dthis.getMargin(i,"Top")+this.getMargin(i,"Bottom")),n},canFixed:=
function(){var t=3D!0;return =
this.browser.ie&&(this.browser.ie<7||"BackCompat"=3D=3D=3Ddocument.compat=
Mode)&&(t=3D!1),t},setStyle:function(t,e,i){var =
n=3Dthis.dom.g(t);n.style[e]=3Di},setStyles:function(t,e){for(var i in =
e)e.hasOwnProperty(i)&&this.setStyle(t,i,e[i]);return =
t},getDefaultStyle:function(t,e){return =
t.currentStyle?t.currentStyle[e]:document.defaultView.getComputedStyle(t,=
!1)[e]},isVisible:function(t){return"none"!=3D=3Dthis.getDefaultStyle(t,"=
display")&&"hidden"!=3D=3Dthis.getDefaultStyle(t,"visibility")&&"100"=3D=3D=
this.getOpacity(t)}}),i.define({name:"url",namespace:"dup.common.utility"=
,deps:{dom:"dup.common.utility.dom"},getQueryValue:function(t,e,i){var =
n=3Dnew =
RegExp("(\\?|&|#)"+e+"=3D([^&#]*)(&|#)?"),o=3Dt.match(n),r=3D"";return =
o&&(r=3Do[2]),i&&(r=3DdecodeURIComponent(r)),r},getTopWindowUrl:function(=
t){var e=3Dthis.dom.getNotCrossDomainTopWindow(t),i=3D"";return =
this.dom.isInIframe(e)&&(i=3De.document.referrer),i=3Di||e.location.href}=
,getMainDomain:function(t){t=3Dt||document.domain,=0A=
0=3D=3D=3Dt.indexOf("www.")&&(t=3Dt.substr(4)),"."=3D=3D=3Dt.charAt(t.len=
gth-1)&&(t=3Dt.substring(0,t.length-1));var =
e=3D["com","cn","net","org","gov","info","la","cc","co","jp","us","hk","t=
v","me","biz","in","be","io","tk","cm","li","ru","ws","hn","fm","tw","ma"=
,"in","vn","name","mx","gd","im"],i=3Dnew =
RegExp("([a-z0-9][a-z0-9\\-]*?\\.(?:"+e.join("|")+")(?:\\.(?:cn|jp|tw|ru|=
th))?)$","i"),n=3Dt.match(i);return =
n?n[0]:t},queryToJson:function(t){for(var =
e,i,n,o,r=3Dt.substr(t.indexOf("?")+1),s=3Dr.split("&"),a=3Ds.length,d=3D=
{},l=3D0;a>l;l++)o=3Ds[l].split("=3D"),e=3Do[0],i=3Do[1],n=3Dd[e],"undefi=
ned"=3D=3Dtypeof n?d[e]=3Di:"[object =
Array]"=3D=3DObject.prototype.toString.call(n)?n.push(i):d[e]=3D[n,i];ret=
urn =
d}}),i.define({name:"data",namespace:"dup.common.utility",deps:{lang:"dup=
.common.utility.lang",dom:"dup.common.utility.dom"},$data:function(){this=
.pageInfo=3D{}},data:function(){this.topWin=3Dthis.dom.getNotCrossDomainT=
opWindow(),this.globalInfo=3Dthis.topWin.BAIDU_SSP__info||(this.topWin.BA=
IDU_SSP__info=3D{})},forEach:function(t,e){var =
i,n,o,r=3Dt.length;if("function"=3D=3Dtypeof =
e)for(o=3D0;r>o&&(n=3Dt[o],i=3De.call(t,n,o),i!=3D=3D!1);o++);return =
t},putInfo:function(t,e,i){var =
n,o=3Di?this.globalInfo:this.pageInfo;if("string"=3D=3D=3Dthis.lang.getTy=
pe(t)){for(var r=3Dt.split("."),s=3Do;r.length;){var =
a=3Dr.shift();s[a]=3Dr.length?void =
0!=3D=3Ds[a]?s[a]:{}:e,s=3Ds[a]}n=3De}return =
n},removeInfo:function(t,e){var =
i=3De?this.globalInfo:this.pageInfo;switch(this.lang.getType(t)){default:=
return!1;case"string":for(var n=3Dt.split(".");n.length;){var =
o=3Dn.shift();if(!n.length||void 0=3D=3D=3Di[o])return delete =
i[o],!0;i=3Di[o]}}return!1},getInfo:function(t,e){var =
i,n=3De?this.globalInfo:this.pageInfo;return"string"=3D=3D=3Dthis.lang.ge=
tType(t)&&(i=3Dthis.lang.getAttribute(n,t)),i},getOnce:function(t){var =
e=3Dwindow,i=3De[t];return e[t]=3Dvoid 0,i},defineOnce:function(t,e){var =
i=3Dwindow;return i[t]?i[t]:(i[t]=3De,e)},getConfig:function(t){return =
t?(this.pageInfo=3Dthis.getInfo("pageConfig")||{},this.pageInfo[t]):!1},p=
utConfig:function(t,e){return =
t&&e?(this.pageInfo=3Dthis.getInfo("pageConfig")||{},this.pageInfo[t]=3De=
,this.putInfo("pageConfig",this.pageInfo),!0):!1}}),i.define({name:"orige=
ntation",namespace:"dup.business",deps:{lang:"dup.common.utility.lang",da=
ta:"dup.common.utility.data"},orientKey:"bizOrientations",orientUrgentKey=
:"bizUrgentOrientations",hasOwn:Object.prototype.hasOwnProperty,watchingS=
lotsMap:{},slotFinishedCallback:function(){},addOrientation:function(t,e)=
{var i=3Dthis.beforeSavingOrientation.apply(this,arguments);return =
this.saveOrientation(t,i)},addOrientationOnce:function(t,e){var =
i=3Dthis.beforeSavingOrientation.apply(this,arguments);return =
this.saveOrientation(t,i,{urgent:!0,merge:!0})},setOrientationOnce:functi=
on(t,e){var =
i=3Dthis.beforeSavingOrientation.apply(this,arguments);return =
this.saveOrientation(t,i,{urgent:!0,override:!0})},beforeSavingOrientatio=
n:function(t,e){var i=3D/^[0-9a-zA-Z]+$/;return =
t&&i.test(t)&&e?e=3D"array"=3D=3D=3Dthis.lang.getType(e)?e:Array.prototyp=
e.slice.call(arguments,1):[]},saveOrientation:function(t,e,i){if(!e||!e.l=
ength)return!1;i=3Di||{urgent:!1,merge:!1,override:!1};var =
n=3Di.merge?this.data.getInfo(this.orientKey):{},o=3Di.urgent?this.orient=
UrgentKey:this.orientKey,r=3Di.override?{}:this.data.getInfo(o)||n,s=3D{}=
;for(var a in =
r)this.hasOwn.call(r,a)&&(s[a]=3D"array"=3D=3D=3Dthis.lang.getType(r[a])?=
r[a].slice():r[a]);for(var d=3Ds[t]||[],l=3De.length,c=3D0;l>c;c++){var =
h=3De[c];"string"=3D=3Dtypeof =
h&&(h=3DencodeURIComponent(h),h.length<=3D100&&(d[d.length]=3Dh))}return =
d.length?(s[t]=3Dthis.lang.unique(d),this.data.putInfo(o,s),!0):!1},getOr=
ientationQuery:function(t){t=3Dt||500,t=3DMath.max(0,Math.min(t,500));var=
 =
e,i=3D[],n=3Dthis.data.getInfo(this.orientUrgentKey)||this.data.getInfo(t=
his.orientKey)||{};if("object"=3D=3D=3Dthis.lang.getType(n))for(var o in =
n)this.lang.hasOwn.call(n,o)&&(e=3Do+"=3D"+n[o].join(","),i[i.length]=3De=
);this.data.putInfo(this.orientUrgentKey,void =
0),i.sort(function(t,e){return t.length-e.length});for(var =
r=3D"",s=3Di.length,a=3D0;s>a&&!(r.length+i[a].length>=3Dt);a++)r+=3D(a?"=
&":"")+i[a];return =
r},addSlotStatusCallback:function(t,e){this.setSlotFinishCallback(t),this=
.addWatchSlotId(e)},setSlotFinishCallback:function(t){this.slotFinishedCa=
llback=3Dt},addWatchSlotId:function(t){this.watchingSlotsMap[t]=3D!0}}),i=
.define({name:"browserParam",namespace:"dup.business.parameter",deps:{con=
fig:"dup.common.config",browser:"dup.common.utility.browser",dom:"dup.com=
mon.utility.dom",style:"dup.common.utility.style",url:"dup.common.utility=
.url",cookie:"dup.common.utility.cookie"},$browserParam:function(){this.w=
in=3Dwindow,this.doc=3Dthis.win.document,this.nav=3Dthis.win.navigator},g=
etTopWin:function(){return =
this.topWindow||(this.topWindow=3Dthis.dom.getNotCrossDomainTopWindow()),=
this.topWindow},paramsList:[{key:"dbv",value:function(){return =
this.browser.qihoo?"1":this.browser.chrome?"2":"0"}},{key:"drs",value:fun=
ction(){var =
t=3D{uninitialized:0,loading:1,loaded:2,interactive:3,complete:4};try{ret=
urn =
t[this.doc.readyState]}catch(e){return-1}}},{key:"pcs",value:function(){v=
ar =
t=3D[this.style.getClientWidth(this.getTopWin()),this.style.getClientHeig=
ht(this.getTopWin())];return =
t.join("x")}},{key:"pss",value:function(){var =
t=3D[this.style.getScrollWidth(this.getTopWin()),this.style.getScrollHeig=
ht(this.getTopWin())];return =
t.join("x")}},{key:"cfv",value:function(){return =
this.browser.getFlashPlayerVersion()}},{key:"cpl",value:function(){return=
 this.nav.plugins.length||0}},{key:"chi",value:function(){return =
this.win.history.length||0}},{key:"cce",value:function(){return =
this.nav.cookieEnabled||0}},{key:"cec",value:function(){return(this.doc.c=
haracterSet?this.doc.characterSet:this.doc.charset)||""}},{key:"tlm",valu=
e:function(){return =
Date.parse(this.doc.lastModified)/1e3}},{key:"prot",value:function(){retu=
rn"https:"=3D=3D=3Dthis.config.HTTP_PROTOCOL?"2":""}},{key:"rw",value:fun=
ction(){var =
t=3DMath.max(320,Math.min(window.innerWidth,window.innerHeight));return =
isNaN(t)&&(t=3DMath.min(this.style.getClientWidth(),this.style.getClientH=
eight())),t||0}},{key:"ltu",encode:!0,limit:700,value:function(){if(this.=
slotInfo.rpdn&&0!=3D=3Dlocation.protocol.indexOf("http"))return =
this.config.HTTP_PROTOCOL+"//"+this.slotInfo.rpdn;var =
e,n=3Di.proxy(this,function(t){var =
e=3D200,i=3D60,n=3Dthis.style.getClientWidth(t),o=3Dthis.style.getClientH=
eight(t);return e>0&&i>0&&n>2*e&&o>2*i});return =
e=3Dt.location&&t.location.href?t.location.href:this.url.getTopWindowUrl(=
n),e.indexOf("cpro_prev")>0&&(e=3De.slice(0,e.indexOf("?"))),e}},{key:"li=
u",encode:!0,limit:700,value:function(){return =
this.dom.isInIframe(this.win)?this.doc.URL:""}},{key:"ltr",encode:!0,limi=
t:300,value:function(){var =
t=3Dthis.getTopWin(),e=3D"";try{e=3Dt.opener?t.opener.document.location.h=
ref:""}catch(i){}return =
e||t.document.referrer}},{key:"lcr",encode:!0,value:function(){if("union"=
=3D=3D=3Dthis.slotInfo.productLine)return"";var =
t=3Dthis.doc.referrer,e=3Dt.replace(/^https?:\/\//,"");e=3De.split("/")[0=
],e=3De.split(":")[0],e=3Dthis.url.getMainDomain(e);var =
i=3Dthis.url.getMainDomain(),n=3Dthis.cookie.get(this.config.LCR_COOKIE_N=
AME);return =
n&&i=3D=3D=3De?n:i!=3D=3De?(this.cookie.set(this.config.LCR_COOKIE_NAME,t=
,{domain:i}),t):""}},{key:"ecd",encode:!0,value:function(){return =
this.browser.ie&&this.browser.ie<8?0:1}}],setSlotInfo:function(t){this.sl=
otInfo=3Dt}}),i.define({name:"systemParam",namespace:"dup.business.parame=
ter",deps:{dom:"dup.common.utility.dom",style:"dup.common.utility.style"}=
,$systemParam:function(){this.win=3Dwindow,this.doc=3Dthis.win.document,t=
his.screen=3Dthis.win.screen,this.nav=3Dthis.win.navigator},paramsList:[{=
key:"psr",value:function(){var =
t=3D[this.screen.width,this.screen.height];return =
t.join("x")}},{key:"par",value:function(){var =
t=3D[this.screen.availWidth,this.screen.availHeight];return =
t.join("x")}},{key:"pis",value:function(){var =
t=3Dthis.dom.isInIframe(this.win)?[this.style.getClientWidth(),this.style=
.getClientHeight()]:[-1,-1];return =
t.join("x")}},{key:"ccd",value:function(){return =
this.screen.colorDepth||0}},{key:"cja",value:function(){return =
this.nav.javaEnabled().toString()}},{key:"cmi",value:function(){return =
this.nav.mimeTypes.length||0}},{key:"col",value:function(){return(this.na=
v.language||this.nav.browserLanguage||this.nav.systemLanguage||"").replac=
e(/[^a-zA-Z0-9\-]/g,"")}},{key:"cdo",value:function(){var =
t=3Dthis.win.orientation;return void =
0=3D=3D=3Dt&&(t=3D-1),t}},{key:"tcn",value:function(){var t=3D+new =
Date;return =
Math.round(t/1e3)}}]}),i.define({name:"event",namespace:"dup.common.utili=
ty",deps:{dom:"dup.common.utility.dom"},bind:function(t,e,i){var =
n=3Dthis.dom.isWindow(t)?t:this.dom.g(t);if(n)if(n.addEventListener)n.add=
EventListener(e,i,!1);else =
if(n.attachEvent)n.attachEvent("on"+e,i);else{var =
o=3Dn["on"+e];n["on"+e]=3Dfunction(){o&&o.apply(this,arguments),i.apply(t=
his,arguments)}}return n},off:function(t,e,i){var =
n,o,r=3Dt._listeners_;if(!r)return t;if("undefined"=3D=3Dtypeof e){for(n =
in r)delete r[n];return =
t}if(e.indexOf("on")&&(e=3D"on"+e),"undefined"=3D=3Dtypeof i)delete =
r[e];else =
if(o=3Dr[e])for(n=3Do.length-1;n>=3D0;n--)o[n].handler=3D=3D=3Di&&o.splic=
e(n,1);return t},unBind:function(t,e,i){return"string"=3D=3Dtypeof =
t&&(t=3Dthis.dom.g(t)),t=3Dthis.off(t,e.replace(/^\s*on/,""),i)},app:func=
tion(t,e){return =
t.bind.apply(t,Array.prototype.slice.call(arguments,1))}}),i.define({name=
:"fingerPrint",namespace:"dup.business",deps:{browser:"dup.common.utility=
.browser",event:"dup.common.utility.event",dom:"dup.common.utility.dom",s=
torage:"dup.common.utility.storage"},start:function(){this.idPrefix=3D"BA=
IDU_DUP_fp_",this.fpElId=3Dthis.idPrefix+"wrapper",this.dom.g(this.fpElId=
)||this.event.bind(window,"load",i.proxy(this,this.createFPIframe))},crea=
teFPIframe:function(){if(!this.dom.g(this.fpElId)){var =
t=3Dwindow,e=3Dt.document,i=3De.body,n=3Dthis.dom.isInIframe(t)?e.URL:"",=
o=3Dnull,r=3Dnull;if((this.browser.ie>9||!this.browser.ie)&&n)try{o=3De.c=
ookie,r=3Dthis.storage.isAvailable}catch(s){return}var =
a=3D"https://pos.baidu.com/wh/o.htm?ltr=3D",d=3De.createElement("div");d.=
id=3Dthis.fpElId,d.style.position=3D"absolute",d.style.left=3D"-1px",d.st=
yle.bottom=3D"-1px",d.style.zIndex=3D0,d.style.width=3D0,d.style.height=3D=
0,d.style.overflow=3D"hidden",d.style.visibility=3D"hidden",d.style.displ=
ay=3D"none";var =
l=3De.createElement("iframe");l.id=3Dthis.idPrefix+"iframe",l.src=3Da,l.s=
tyle.width=3D0,l.style.height=3D0,l.style.visibility=3D"hidden",l.style.d=
isplay=3D"none";try{d.insertBefore(l,d.firstChild),i&&i.insertBefore(d,i.=
firstChild)}catch(s){}}}}),i.define({name:"asserter",namespace:"dup.ui.as=
sertion",deps:{mobile:"dup.ui.assertion.mobile.float",dynamicFloat:"dup.u=
i.assertion.dynamicFloat"},assert:function(t){for(var =
e=3Dt.response.placement.userdefine||"",i=3De.split("|"),n=3D{},o=3D0,r=3D=
i.length;r>o;o++){var =
s=3Di[o],a=3Ds.split("=3D"),d=3Da[0];d&&(n[d]=3Da[1])}if(n.hasOwnProperty=
("painter"))return n.painter;var =
l=3Dt.styleOpenApi.tn||"",c=3DparseInt(t.styleOpenApi.xuanting||0,10);ret=
urn =
l.indexOf("mobile")>=3D0?c>0||this.mobile.assert(t.response)?"mobile.floa=
t":"mobile.inlayFix":"template_float_searchBar"=3D=3D=3Dl?"searchBar":"te=
mplate_float_bottom_lu"=3D=3D=3Dl?"slide":l.indexOf("_xuanfu")>=3D0||l.in=
dexOf("float")>=3D0?"float":c>0||this.dynamicFloat.assert(t.response)?"dy=
namicFloat":l&&l.length>0?"inlayFix":""}}),i.define({name:"sceneTactics",=
namespace:"dup.business",deps:{config:"dup.common.config",exp:"dup.busine=
ss.expBranch",url:"dup.common.utility.url",browser:"dup.common.utility.br=
owser"},$sceneTactics:function(){this.config.REQUEST_URL_CNAME&&this.brow=
ser.antBrowser&&(this.config.REQUEST_URL=3D"//"+this.config.REQUEST_URL_C=
NAME+"/",this.config.IS_CNAME=3D!0);var =
t=3DString.fromCharCode(Math.floor(26*Math.random())+97),e=3DString.fromC=
harCode(Math.floor(26*Math.random())+97);this.config.POS_URL||(this.confi=
g.POS_URL=3Dthis.config.HTTP_PROTOCOL+this.config.REQUEST_URL+t+"c"+e+"m?=
"),this.config.EXP_SWITCH&&this.exp.tactics()},sceneTactics:function(){}}=
),i.define({name:"creativePreview",namespace:"dup.business",deps:{url:"du=
p.common.utility.url",dom:"dup.common.utility.dom",cookie:"dup.common.uti=
lity.cookie",config:"dup.common.config",lang:"dup.common.utility.lang"},P=
REV_TEMP_URL:"//cpro.baidu.com/cpro/ui/preview/templates/",validate:funct=
ion(t,e,i,n,o){var r=3D!1,s=3Dthis.getPrevValue(i,o);if(!s)return =
r;for(var =
a=3Dthis.parsePreviewData(s),d=3D1=3D=3D=3DparseInt(a.type,10),l=3D!(n.le=
ngth>0),c=3D!(n.length>0),h=3D0,u=3Dn.length;u>h;h++){var =
p=3Dn[h];0=3D=3D=3Dp?c=3D!0:4=3D=3D=3Dp||50=3D=3D=3Dp?(c=3D!0,l=3D!0):1!=3D=
=3Dp&&2!=3D=3Dp||(l=3D!0)}return!d&&l?r=3DparseInt(a.imgWidth,10)=3D=3D=3D=
parseInt(t,10)&&parseInt(a.imgHeight,10)=3D=3D=3DparseInt(e,10):d&&c&&thi=
s.isAvalibleTextSize(t,e)&&(r=3D!0),r},isAvalibleTextSize:function(t,e){f=
or(var =
i=3D["1024_60","120_240","120_600","125_125","160_600","180_150","200_200=
","234_60","250_250","300_120","300_250","300_280","336_280","360_150","3=
60_300","460_60","468_60","480_160","500_200","580_90","640_60","728_90",=
"760_60","760_75","760_90","960_60","960_75","960_90"],n=3D0,o=3Di.length=
;o>n;n++)if(t+"_"+e=3D=3D=3Di[n])return!0;return!1},getPreviewUrl:functio=
n(t,e,i,n){var =
o=3Dwindow.location.href;if(!this.validate(t,e,n,i,o))return"";var =
r=3Dn.indexOf("inlay")>=3D0?"bd_cpro_prev":"bd_cpro_fprev",s=3Dthis.getPr=
evValue(n,o),a=3Dthis.parsePreviewData(s),d=3D"";return =
n.indexOf("inlay")>=3D0?d=3Dthis.getInlayUrl(parseInt(a.type,10),r,s,"tex=
t_default_"+t+"_"+e):n.indexOf("float")>=3D0&&(d=3Dthis.getFloatUrl(parse=
Int(a.type,10),r,s)),d},getPrevValue:function(t,e){var =
i;i=3De?e.substring(e.indexOf("?")):this.dom.isInCrossDomainIframe(window=
)?window.location.search.slice(1):window.top.location.search.slice(1);var=
 =
n,o=3Ddocument.referrer,r=3Dt.indexOf("inlay")>=3D0||"ui"=3D=3D=3Dt?"bd_c=
pro_prev":"bd_cpro_fprev",s=3D"";try{n=3Ddocument.cookie}catch(a){}return=
 =
i.indexOf(r)>-1&&(s=3Dthis.url.getQueryValue(i,r)),!s&&n&&-1!=3D=3Dn.inde=
xOf(r)&&(s=3Dthis.cookie.get(r)),s||-1=3D=3D=3Do.indexOf(r)||(s=3Dthis.ur=
l.getQueryValue(o,r)),s},parsePreviewData:function(t){return =
t=3DdecodeURIComponent(t).replace(/\\x1e/g,"&").replace(/\\x1d/g,"=3D").r=
eplace(/\\x1c/g,"?").replace(/\\x5c/g,"\\"),this.lang.jsonToObj(t)},getFl=
oatUrl:function(t,e,i){var =
n;n=3D2=3D=3D=3Dt?"float_image.html":4=3D=3D=3Dt||3=3D=3D=3Dt?"float_flas=
h.html":"blank_tips.html";var =
o=3Dthis.PREV_TEMP_URL+n+"?",r=3D"tn=3Dtemplate_float_all_normal"+("&"+e+=
"=3D"+i).replace(/\./g,"%252e")+"&ut=3D"+ +new Date;return =
o+r},getInlayUrl:function(t,e,i,n){var =
o;o=3D1=3D=3D=3Dt?n+".html":2=3D=3D=3Dt?"image.html":4=3D=3D=3Dt||3=3D=3D=
=3Dt?"flash.html":"blank_tips.html";var =
r=3Dthis.PREV_TEMP_URL+o+"?";return r+=3D(""+e+"=3D#"+i+"&ut=3D"+ +new =
Date).replace(/\.(?!swf)/g,"%252e")}}),i.define({name:"deliveryLimit",nam=
espace:"dup.business",deps:{inlayFixAssert:"dup.ui.assertion.inlayFix",dy=
namicFloatAssert:"dup.ui.assertion.dynamicFloat",floatAssert:"dup.ui.asse=
rtion.float",dom:"dup.common.utility.dom"},MAX_COUNT:{},TYPE:{INLAY:"inla=
y",COUPLET:"couplet",POPUP:"popup",LINKUNIT:"linkunit"},$deliveryLimit:fu=
nction(){this.displayedMap=3Dthis.displayedMap||{},this.MAX_COUNT[this.TY=
PE.INLAY]=3D25,this.MAX_COUNT[this.TYPE.COUPLET]=3D2,this.MAX_COUNT[this.=
TYPE.POPUP]=3D1,this.MAX_COUNT[this.TYPE.LINKUNIT]=3D25},validate:functio=
n(t){if("union"!=3D=3Dt.productLine)return!0;var =
e=3Dthis.getSlotType(t),i=3Dthis.getAdCount(e),n=3Dthis.MAX_COUNT[e];retu=
rn n>i},getAdCount:function(t){var =
e=3Dthis.displayedMap[t]||{},i=3D0;for(var n in =
e)n&&e[n]&&e.hasOwnProperty(n)&&(this.dom.g(n)?i++:e[n]=3Dvoid 0);return =
i},setAdsCount:function(t,e){var i=3Dthis.displayedMap[t];return =
i||(this.displayedMap[t]=3D{},i=3Dthis.displayedMap[t]),i[e]=3D1,!0},getS=
lotType:function(t){var e=3Dthis.TYPE.INLAY,i=3Dt.response;if(!i)return =
e;var =
n=3Di.placement;if((this.inlayFixAssert.assert(i)||this.dynamicFloatAsser=
t.assert(i))&&(e=3Dthis.TYPE.INLAY),n&&n.fillstyle)for(var =
o=3Di.placement.fillstyle.elements||[],r=3D0,s=3Do.length;s>r;r++)if(5=3D=
=3D=3Do[r])return this.TYPE.LINKUNIT;return =
e}}),i.define({name:"landingPage",namespace:"dup.ui.painter",deps:{lang:"=
dup.common.utility.lang",style:"dup.common.utility.style",browser:"dup.co=
mmon.utility.browser",dom:"dup.common.utility.dom"},activate:function(t){=
return =
this.validate(t)?(this.expansionActionName=3D"BaiduCproExpansion"+t.conta=
inerId,this.pageIframeId=3Dt.containerId+"_ExpansionLP",t.paramObj.expTok=
en=3Dthis.expansionActionName,this.dom.bind(window,"message",i.proxy(this=
,this.onPostMessageHandler)),!0):!1},validate:function(t){var =
e=3DparseInt(t.styleOpenApi.expansion||0,10);return =
1=3D=3D=3De&&!this.browser.isIOS&&"postMessage"in =
window},onPostMessageHandler:function(t){if("object"=3D=3Dtypeof =
t&&t.data){var e=3Dt.data;if("string"=3D=3Dtypeof =
e&&!(e.indexOf(this.expansionActionName)<0)){this.expandContainerEl=3Ddoc=
ument.createElement("div");var =
n=3DMath.max(this.style.getClientWidth(),this.style.getClientHeight()),o=3D=
this.expandContainerEl.style;o.position=3D"fixed",o.left=3D"0",o.top=3Dn+=
"px",o.zIndex=3D2147483647,o.background=3D"#ffffff",o.width=3D"100%",o.tr=
ansition=3Do.WebkitTransition=3Do.MozTransition=3Do.OTransition=3D"top =
1s ease-in-out",e=3De.slice(this.expansionActionName.length);var =
r=3D['<iframe id=3D"{lpIframeId}" ','src=3D"{clickUrl}" =
width=3D"{iframeWidth}" ','height=3D"{iframeHeight}" =
align=3D"center,center" ','marginwidth=3D"0"  marginheight=3D"0" =
','frameborder=3D"0"></iframe>','<div id=3D"{lpIframeId}_closeBtn" =
','style=3D"position:absolute;right:0;top:0;',"width:{closeBtnSize}px;","=
height:{closeBtnSize}px;","overflow:hidden;display:block;","background:ur=
l('https://cpro.baidustatic.com/cpro/ui/noexpire/img/2.0.0/xuantingClose.=
png') ","no-repeat 0 0; =
","_filter:progid:DXImageTransform",".Microsoft.AlphaImageLoader(","enabl=
ed=3Dtrue, sizingMethod=3Dnone, =
","src=3D'https://cpro.baidustatic.com/cpro/ui/noexpire/img/2.0.0/xuantin=
gClose.png');","_background:none;cursor:pointer;",'background-position:ce=
nter;background-size:100%,100%;">&nbsp;</div>'].join(""),s=3DMath.min(thi=
s.style.getClientWidth(),this.style.getClientHeight()),a=3D{lpIframeId:th=
is.pageIframeId,clickUrl:e,iframeWidth:this.style.getClientWidth(),iframe=
Height:this.style.getClientHeight(),closeBtnSize:80*s/640};this.expandCon=
tainerEl.innerHTML=3Dthis.lang.template(r,a),this.expandContainerEl.style=
.top=3D"0",document.body.appendChild(this.expandContainerEl),this.dom.bin=
d(window,"resize",i.proxy(this,this.onResizeHandler));var =
d=3Dthis.dom.g(this.pageIframeId+"_closeBtn");this.dom.bind(d,"click",i.p=
roxy(this,this.onCloseBtnClickHandler))}}},onCloseBtnClickHandler:functio=
n(){this.expandContainerEl.style.top=3DMath.max(this.style.getClientWidth=
(),this.style.getClientHeight())+"px",this.expandContainerEl&&this.expand=
ContainerEl.parentNode?(this.expandContainerEl.parentNode.removeChild(thi=
s.expandContainerEl),this.expandContainerEl=3Dnull):this.expandContainerE=
l.innerHTML=3D""},onResizeHandler:function(){var =
t=3Dthis.style.getClientWidth(),e=3Dthis.style.getClientHeight(),i=3Dthis=
.dom.g(this.pageIframeId);i.style.width=3Dt+"px",i.style.height=3De+"px",=
i.setAttribute("width",t),i.setAttribute("height",e)}}),i.define({name:"h=
iddenFloatAd",namespace:"dup.ui.painter",deps:{style:"dup.common.utility.=
style",dom:"dup.common.utility.dom"},TOP:2,BOTTOM:3,render:function(t){if=
(!this.validate(t))return!1;this.alreadyEnableHidden=3D!0,this.autoCloseT=
ime=3Dt.response.placement.container.closeTime||5,t.styleOpenApi.cpro_clo=
se_time&&(this.autoCloseTime=3DparseInt(t.styleOpenApi.cpro_close_time,10=
)||5),this.autoCloseTime=3Dthis.autoCloseTime>=3D3?this.autoCloseTime:3;v=
ar =
e=3DparseInt(t.styleOpenApi.cpro_show_dist,10)||5;e=3De>=3D5?e:5,this.per=
centage=3D(1/e).toFixed(2);var =
n=3Dt.response.placement,o=3Dn.container;this.dockTo=3DparseInt(o.locatio=
n,10)||this.BOTTOM,this.adWrapEl=3Ddocument.getElementById(t.containerId)=
,this.adWrapEl.style.display=3D"block",this.adIframe=3Dthis.dom.g(t.conta=
inerId+"_frame");var =
r=3Dthis.dom.g(t.containerId+"_closebtn"),s=3DparseInt(this.adWrapEl.styl=
e.height||t.height,10),a=3DparseInt(r.style.height,10);this.hiddenHeight=3D=
-1*(s+a),this.haveSetIframeUrl=3D!0,this.countDownTimerId=3D!1,this.close=
4ever=3D!1,this.shrinkAd(),this.transitionDecorator(this.adWrapEl),this.l=
astScrollTop=3Dthis.style.getScrollTop(),this.dom.bind(r,"click",i.proxy(=
this,this.closeBtnOnClickHandler)),this.dom.bind(window,"scroll",i.proxy(=
this,this.onScrollHandler))},validate:function(t){var =
e=3D!!t.styleOpenApi.cpro_enable_hidden_float,i=3Dt.response.placement.co=
ntainer,n=3Di.anchoredType,o=3Di.floated.trigger;return =
e||"11"=3D=3Dn&&o?this.alreadyEnableHidden?!1:(this.alreadyEnableHidden=3D=
!0,!0):!1},shrinkAd:function(){this.dockTo=3D=3D=3Dthis.TOP?this.adWrapEl=
.style.top=3Dthis.hiddenHeight+"px":this.dockTo=3D=3D=3Dthis.BOTTOM&&(thi=
s.adWrapEl.style.bottom=3Dthis.hiddenHeight+"px")},expandAd:function(){th=
is.dockTo=3D=3D=3Dthis.TOP?this.adWrapEl.style.top=3D0:this.adWrapEl.styl=
e.bottom=3D0,this.adIframe&&!this.haveSetIframeUrl&&(this.adIframe.src=3D=
this.adIframe.getAttribute("_src"),this.haveSetIframeUrl=3D!0)},transitio=
nDecorator:function(t){var e=3D"-webkit-transition: all .3s =
linear;-moz-transition: all .3s linear;-ms-transition: all .3s =
linear;-o-transition: all .3s linear;transition: all .3s =
linear;";t.style.cssText=3Dt.style.cssText+e},startCountDown:function(t,e=
){var =
i=3Dt,n=3DsetInterval(function(){i--,0>=3Di&&(clearInterval(n),e&&e())},1=
e3);this.countDownTimerId=3Dn},closeBtnOnClickHandler:function(){this.shr=
inkAd(),this.close4ever=3D!0},onScrollHandler:function(){var =
t=3DMath.max(document.documentElement.clientHeight,window.innerHeight||0)=
*this.percentage,e=3Dthis.style.getScrollTop(),n=3De>this.lastScrollTop?"=
down":"top";this.totalScrollLength+=3De-this.lastScrollTop,this.lastScrol=
lTop=3De,"top"=3D=3D=3Dn&&!this.close4ever&&Math.abs(this.totalScrollLeng=
th)>=3Dt&&!this.countDownTimerId?(this.expandAd(),this.startCountDown(thi=
s.autoCloseTime,i.proxy(this,this.onTimeCountDownHandler))):"down"=3D=3D=3D=
n&&(this.totalScrollLength=3D0)},onTimeCountDownHandler:function(){this.s=
hrinkAd(),this.countDownTimerId=3D!1,this.totalScrollLength=3D0}}),i.defi=
ne({name:"slotParam",namespace:"dup.business.parameter",deps:{dom:"dup.co=
mmon.utility.dom",style:"dup.common.utility.style"},$slotParam:function()=
{this.win=3Dwindow},paramsList:[{key:"di",value:function(){return =
this.slotInfo.slotId}},{key:"dri",value:function(){return =
this.slotInfo.index}},{key:"dis",value:function(){var =
t=3D0;this.dom.isInIframe(this.win)&&(t+=3D1),this.dom.isInCrossDomainIfr=
ame(this.win,this.win.top)&&(t+=3D2);var =
e=3Dthis.style.getClientWidth(),i=3Dthis.style.getClientHeight();return(4=
0>e||10>i)&&(t+=3D4),t}},{key:"dai",value:function(){return =
this.slotInfo.count}},{key:"ps",value:function(){var =
t=3D"0",e=3Dthis.dom.g(this.slotInfo.containerId),i=3Dthis.style.getPosit=
ion(e);return i&&void 0!=3D=3Di.top&&void =
0!=3D=3Di.left&&(t=3Di.top+"x"+i.left),t}},{key:"coa",encode:!0,value:fun=
ction(){var =
t=3D[],e=3Dthis.slotInfo.styleOpenApi;"-1"=3D=3D=3Dthis.slotInfo.pcwd&&(e=
.cpro_ftpc=3D"true");for(var i in e)if(i&&"undefined"!=3Dtypeof =
e[i]&&e.hasOwnProperty(i)){var =
n=3Di;"cpro_w"=3D=3D=3Di&&(n=3D"rsi0"),"cpro_h"=3D=3D=3Di&&(n=3D"rsi1"),t=
.push(n+"=3D"+encodeURIComponent(e[i]))}return =
t.join("&")}},{key:"cw",value:function(){var =
t=3Dthis.slotInfo.styleOpenApi.cpro_ftpc||"true"=3D=3D=3Dthis.slotInfo.st=
yleOpenApi.cpro_ftpc||"-1"=3D=3D=3Dthis.slotInfo.pcwd,e=3Dthis.dom.g(this=
.slotInfo.containerId);return =
t&&e&&e.parentElement.clientWidth?e.parentElement.clientWidth||0:void =
0}}],setSlotInfo:function(t){this.slotInfo=3Dt}}),i.define({name:"preview=
",namespace:"dup.business",deps:{config:"dup.common.config",url:"dup.comm=
on.utility.url",data:"dup.common.utility.data"},CLB_PREFIX:"baidu_clb_pre=
view_",DUP_PREFIX:"baidu_dup_preview_",getValue:function(t){var =
e,i=3Dthis.url.getTopWindowUrl();return =
e=3Dthis.url.getQueryValue(i,this.CLB_PREFIX+t),e||(e=3Dthis.url.getQuery=
Value(i,this.DUP_PREFIX+t)),e},getInfo:function(){var =
t,e=3Dthis.getValue("sid"),i=3Dthis.getValue("mid"),n=3Dthis.getValue("vc=
"),o=3D+this.getValue("ts"),r=3D+new Date;return =
3e4>=3Dr-o&&(t=3D{sid:e,mid:i,vc:n}),this.getInfo=3Dfunction(){return =
t},t},isUnionPreview:function(t){var e=3D!1;return =
t?/cpro_template=3D/gi.test(t)&&(this.data.putInfo("#unionPreviewSwitch",=
!0),e=3D!0):e=3D!!this.data.getInfo("#unionPreviewSwitch"),e},setUnionPre=
viewData:function(t){this.data.putInfo("#unionPreviewData",t)},getUnionPr=
eviewData:function(){var =
t=3Dthis.data.getInfo("#unionPreviewData");return =
t?"prev=3D"+encodeURIComponent(t)+"&pt=3Dunion":""},clearUnionPreviewData=
:function(){this.data.removeInfo("#unionPreviewSwitch"),this.data.removeI=
nfo("#unionPreviewData")},getSearchParams:function(t){var =
e=3D{},i=3Dthis.getInfo();return =
i&&t=3D=3Di.sid&&(e.mid=3Di.mid,e.sid=3Di.vc,this.config.IS_PREVIEW=3D!0)=
,e}}),i.define({name:"log",namespace:"dup.common.utility",deps:{config:"d=
up.common.config",lang:"dup.common.utility.lang",event:"dup.common.utilit=
y.event",storage:"dup.common.utility.storage"},storageKey:"BAIDU_DUP_log_=
storage",loadImage:function(t,e){var i=3Dnew =
Image,n=3D"BAIDU_DUP_log_"+Math.floor(2147483648*Math.random()).toString(=
36);window[n]=3Di,i.onload=3Di.onerror=3Di.onabort=3Dfunction(){i.onload=3D=
i.onerror=3Di.onabort=3Dnull,window[n]=3Dnull,i=3Dnull,e&&e(this.storageK=
ey,t,!0)},i.src=3Dt},resendLog:function(){var =
t=3Dthis.storage.getItem(this.storageKey);if(t){t=3Dt.split("|");for(var =
e=3D0,i=3Dt.length;i>e;e++)this.loadImage(decodeURIComponent(t[e]),this.s=
torage.spliceItem)}},monitorLog:function(t){var =
e,i=3Dt.id?t.id:"",n=3Dt.async?t.async:"",o=3Dt.type?t.type:"ssplog",r=3D=
t.pos?t.pos:"",s=3Dt.status?t.status:"",a=3Dt.mes?encodeURIComponent(t.me=
s):"",d=3Dt.exps?t.exps:"";e=3Dthis.config.LOG_URL+["?type=3D"+o,"id=3D"+=
i,"pos=3D"+r,"status=3D"+s,"async=3D"+n,"mes=3D"+a,"exps=3D"+d,"from=3Dss=
p","tm=3D"+ +new =
Date].join("&"),this.sendLogRequest(e)},sendLogRequest:function(t){var =
e=3Dnew Image,i=3D+new =
Date,n=3D"baidu_dan_log_"+i;window[n]=3De,e.onload=3De.onerror=3De.onabor=
t=3Dfunction(){try{delete window[n]}catch(t){window[n]=3Dvoid =
0}e=3Dnull},t+=3Dt.indexOf("?")>-1?"&":"?",t+=3D".stamp=3D"+Math.random()=
,e.src=3Dt},sendLog:function(t){t=3D"object"=3D=3D=3Dthis.lang.getType(t)=
?t:{};var =
e=3Dt.url||this.config.LOG_URL,i=3Dt.data||{},n=3Dt.option||"now",o=3Dthi=
s.lang.serialize(i);switch(e+=3D(e.indexOf("?")>=3D0?"&":"?")+o+(o?"&":""=
)+"rdm=3D"+ +new =
Date,n){case"now":this.loadImage(e);break;case"block":break;case"unload":=
default:this.storage.addItem(this.storageKey,e,!0),this.event.bind(window=
,"unload",function(){this.loadImage(e,this.storage.spliceItem)})}}}),i.de=
fine({name:"painterSelector",namespace:"dup.business",deps:{asserter:"dup=
.ui.assertion.asserter"},getPainter:function(t){var =
e=3Dthis.asserter.assert(t);if(e)return"dup.ui.painter."+e;for(var =
n=3Dt.response,o=3D["dan.static","dan.couplet","dan.expand","dan.barrier"=
,"dan.video","topSearchBar","bottomSearchBar","slide","inlayFix","baiduRe=
c","dynamicFloat","float","insideText","mobile.inlayFix","mobile.float"],=
r=3D0,s=3Do.length;s>r;r++){var =
a=3Di.using("dup.ui.assertion."+o[r]);if(a&&a.assert(n))return"dup.ui.pai=
nter."+o[r]}return =
e||(t.errors=3Dt.errors||[],t.errors.push("painterName is =
empty")),"dup.ui.painter.inlayFix"}}),i.define({name:"businessParam",name=
space:"dup.business.parameter",deps:{config:"dup.common.config",preview:"=
dup.business.preview",dom:"dup.common.utility.dom",origentation:"dup.busi=
ness.origentation"},paramsList:[{key:"dcb",value:function(){return =
this.config.LOADER_DEFINE_NAME}},{key:"dtm",value:function(){return =
this.config.SSP_JSONP}},{key:"dvi",value:function(){return"0.0"}},{key:"d=
ci",value:function(){return"-1"}},{key:"dds",value:function(){return""}},=
{key:"dpt",value:function(){var t=3D"none";return =
this.preview.isUnionPreview()&&(t=3D"union"),t}},{key:"tsr",value:functio=
n(){var t=3D0,e=3D+new Date;return =
this.config.startTime&&(t=3De-this.config.startTime),t}},{key:"tpr",value=
:function(){var e,i=3D24e4,n=3D(new =
Date).getTime();e=3Dt.DUP_4_SF?t:this.dom.isInIframe(window)?window.top:w=
indow;var o=3De.BAIDU_DUP2_pageFirstRequestTime;return =
o?n-o>=3Di&&(o=3De.BAIDU_DUP2_pageFirstRequestTime=3Dn):o=3De.BAIDU_DUP2_=
pageFirstRequestTime=3Dn,o||""}},{key:"cop",encode:!0,value:function(){re=
turn =
this.origentation.getOrientationQuery()}},{key:"ti",encode:!0,value:funct=
ion(){return =
this.dom.getDocumentTitle()}},{key:"ari",value:function(){return =
2}}]}),i.define({name:"param",namespace:"dup.business",deps:{config:"dup.=
common.config",slotParams:"dup.business.parameter.slotParam",businessPara=
ms:"dup.business.parameter.businessParam",browserParams:"dup.business.par=
ameter.browserParam",browser:"dup.common.utility.browser",systemParams:"d=
up.business.parameter.systemParam",additionalParam:"dup.business.paramete=
r.additionalParam",style:"dup.common.utility.style",dom:"dup.common.utili=
ty.dom",preview:"dup.business.preview",requestCache:"dup.business.request=
Cache"},snap:function(t){for(var =
e=3D[],i=3Dt.paramsList,n=3D0,o=3Di.length;o>n;n++){var =
r=3Di[n],s=3Dr.key,a=3Dr.encode,d=3Dr.value,l=3Dr.limit;try{d=3D"function=
"=3D=3Dtypeof =
d?d.apply(t):d,d=3Da?encodeURIComponent(d):d,d=3Dl?d.substr(0,l):d,e.push=
({key:s,value:d})}catch(c){var =
h=3Dthis.config.LOG_URL;h+=3D"?type=3Dadcodex_error",h+=3D"&info=3D"+enco=
deURIComponent(c.message),h+=3D"&stack=3D"+encodeURIComponent(c.stack||""=
),h+=3D"&key=3D"+encodeURIComponent(s),h+=3D"&t=3D"+(new =
Date).getTime(),(new Image).src=3Dh}}return =
e},processExtendsParam:function(t){var =
e=3Dt.response,i=3De.placement.container;if(5!=3D=3Di.sizeType){var =
n=3De.pdb_deliv,o=3De.rtb_deliv,r=3De.order_deliv;0=3D=3D=3DparseInt(n.de=
liv_id,10)&&(n.deliv_id=3D0),0=3D=3D=3DparseInt(n.demand_id,10)&&(n.deman=
d_id=3D0),0=3D=3D=3DparseInt(o.deliv_id,10)&&(o.deliv_id=3D0),0=3D=3D=3Dp=
arseInt(o.demand_id,10)&&(o.demand_id=3D0),0=3D=3D=3DparseInt(r.deliv_id,=
10)&&(r.deliv_id=3D0),0=3D=3D=3DparseInt(r.demand_id,10)&&(r.demand_id=3D=
0);var =
s=3De["extends"]||{};if(s&&s.hasOwnProperty("sspw")&&s.hasOwnProperty("ss=
ph")){var =
a=3DparseInt(s.sspw||0,10),d=3DparseInt(s.ssph||0,10),l=3DparseInt(s.cbsz=
||0,10);if(a&&d&&(i.width=3Da,i.height=3Dd),l>0&&(i.sizeType=3Dl),1=3D=3D=
=3Dl)t.width=3Da,t.height=3Dd;else if(2=3D=3D=3Dl){var =
c=3Dthis.translateScaleToPixelSize(a,d);t.width=3Dc.width,t.height=3Dc.he=
ight}}var =
h=3Dt.width||i.width,u=3Dt.height||i.height,p=3De.placement.complement_ty=
pe;if(0=3D=3D=3Dp){var =
m=3Dthis.dom.g(t.containerId);m.style.width=3Dh+"px",m.style.height=3Du+"=
px",m.style.display=3D"inline-block"}}},translateScaleToPixelSize:functio=
n(t,e,i){var n=3Di||{};return =
t=3DMath.abs(t),e=3DMath.abs(e),n.width||(n.width=3DMath.max(320,Math.min=
(window.innerWidth,window.innerHeight)),isNaN(n.width)&&(n.width=3DMath.m=
in(this.style.getClientWidth(),this.style.getClientHeight()))),n.height||=
(n.height=3DMath.ceil(n.width/t*e)),{width:n.width,height:n.height}},getP=
aramObj:function(t){var =
e=3D[];this.slotParams.setSlotInfo(t),this.browserParams.setSlotInfo(t),e=
=3De.concat(this.snap(this.slotParams)),e=3De.concat(this.snap(this.busin=
essParams)),e=3De.concat(this.snap(this.browserParams)),e=3De.concat(this=
.snap(this.additionalParam)),e=3De.concat(this.snap(this.systemParams));f=
or(var i=3D{},n=3D0,o=3De.length;o>n;n++){var =
r=3De[n];i[r.key]=3Dr.value}t.width>0&&t.height>0&&(i.sz=3Dt.width+"x"+t.=
height);var s=3Dthis.preview.getSearchParams(t.slotId);return =
i.mid=3Ds.mid,i.sid=3Ds.sid,i},getParamString:function(t){var =
e=3D[];for(var i in =
t)if(i&&(t[i]||0=3D=3D=3Dt[i])&&t.hasOwnProperty(i)){var =
n=3Dt[i];e.push(i+"=3D"+n)}return =
e.join("&")},getPmpRequestUrl:function(t){var =
e,i=3D{},n=3D[],o=3Dt.paramObj;for(var r in =
o)r&&o.hasOwnProperty(r)&&(i[r]=3Do[r]);var =
s=3Dt.timestampWatcher,a=3Ds.t1,d=3Ds.t2,l=3Ds.t3,c=3Dt.response;if(c){va=
r =
h=3Dc.placement.container;i.qn=3Dc.queryid,t.paramObj.qn=3Dc.queryid;var =
u=3Dt.width,p=3Dt.height;u>0&&p>0&&(i.sz&&(i.sz=3D""),n.push("sz=3D"+u+"x=
"+p)),(t.pcwd||5=3D=3D=3Dh.sizeType)&&n.push("conwid=3D"+u),(t.pchd||5=3D=
=3D=3Dh.sizeType)&&n.push("conhei=3D"+p);var =
m=3Dc.pdb_deliv;m.deliv_id&&n.push("pdbid=3D"+m.deliv_id),c.media_protect=
&&n.push("mpdi=3D"+c.media_protect);var =
f=3Dc.order_deliv;f.deliv_id&&n.push("orderid=3D"+f.deliv_id),f.demand_id=
&&n.push("odid=3D"+f.demand_id);var =
g=3Dc.rtb_deliv;g.deliv_id&&n.push("rtbid=3D"+g.deliv_id),g.demand_id&&n.=
push("rdid=3D"+g.demand_id);var =
y=3Dc.placement.complement_type;if(t.isNeedCacheRequest||4=3D=3D=3Dy||7=3D=
=3D=3Dy){var =
v=3Di.qn;i.dpv=3Dv,t.paramObj.dpv=3Dv,this.requestCache.add(v,t)}this.con=
fig.EXP_SATUS&&0=3D=3D=3Dt.id.indexOf("u")?n.push("dc=3D3"):n.push("dc=3D=
2"),s&&a>0&&(i.tt=3Da+"."+(d-a)+"."+(l-a)+"."+(+new =
Date-a)),i.exps&&(n.push("exps=3D"+i.exps),i.exps=3D"")}var =
w=3Dn.join("&");return =
e=3Dt.posUrl&&this.browser.antBrowser?t.posUrl+w+"&"+this.getParamString(=
i):this.config.POS_URL+w+"&"+this.getParamString(i)}}),i.define({name:"sl=
ot",namespace:"dup.business",deps:{config:"dup.common.config",param:"dup.=
business.param",dom:"dup.common.utility.dom",log:"dup.common.utility.log"=
,lang:"dup.common.utility.lang",browser:"dup.common.utility.browser",stor=
age:"dup.common.utility.storage",origentation:"dup.business.origentation"=
},slotIdCountMap:{},slotCount:0,storageTime:{},$slot:function(){this.slot=
sMap=3Dthis.slotsMap||{}},getSlotInfo:function(t){return =
this.slotsMap[t]},getSlotInfoByRawId:function(t){for(var e in =
this.slotsMap)if(this.slotsMap.hasOwnProperty(e)&&e.indexOf(t)>-1)return =
this.slotsMap[e];return{}},createSlot:function(t){var =
e=3D""+t.slotId;this.slotIdCountMap[e]=3Dthis.slotIdCountMap[e]||0;var =
i=3D{};return i.index=3Dthis.slotIdCountMap[e]++,=0A=
i.count=3D++this.slotCount,i.id=3De+"_"+i.index,i.containerId=3Dthis.conf=
ig.DUP_PREFIX+"_wrapper_"+e+"_"+i.index,i.slotId=3Dt.slotId,i.productLine=
=3Dt.productLine,i.errors=3D[],i.isAsync=3Dt.isAsync,this.setStatus(i.id,=
this.config.STATUS_CREATE),n?i.timestampWatcher=3D{t1:n}:i.timestampWatch=
er=3D{t1:0},window.cproStyleApi?i.styleOpenApi=3Dwindow.cproStyleApi[e]||=
{}:i.styleOpenApi=3D{},0=3D=3D=3De.indexOf("u")&&(i.productLine=3D"union"=
,i.width=3Di.styleOpenApi.cpro_w||i.styleOpenApi.rsi0||0,i.height=3Di.sty=
leOpenApi.cpro_h||i.styleOpenApi.rsi1||0),i},cloneSlot:function(t){var =
e;return =
e=3Dwindow.JSON&&window.JSON.parse?JSON.parse(JSON.stringify(t)):this.lan=
g.clone(t),e.index=3Dthis.slotIdCountMap[e.slotId]++,e.id=3De.slotId+"_"+=
e.index,e},processSlot:function(t){var e=3D!1,i=3D!1;if(t.response){var =
n=3Dt.response.rtb_deliv,o=3Dt.response.order_deliv,r=3DparseInt(n.deliv_=
id,10),s=3DparseInt(n.demand_id,10),a=3DparseInt(o.deliv_id,10),d=3Dparse=
Int(o.demand_id,10);e=3D!(r||s||a||d),(e||0!=3D=3Da)&&(i=3D0!=3D=3Dr||0!=3D=
=3Da)}t.isPdbAd=3De,t.isNeedCacheRequest=3Di},addSlot:function(t){this.sl=
otsMap[t.id]=3Dt},clearStatus:function(t,e){t.status=3Dt.status^e},checkS=
tatus:function(t,e){return(t.status&e)>0},setStatus:function(t,e){var =
i=3Dthis.getSlotInfo(t);i&&(i.status|=3De),(e&this.config.STATUS_CREATE)>=
0&&(this.storageTime[t]=3D+new =
Date),(e&this.config.STATUS_FINISH)>0&&this.adSlotFinish(t)},addErrorInfo=
:function(t,e){t.errors=3Dt.errors||[],t.errors.push(e)},adSlotFinish:fun=
ction(t){var e=3D{},i=3D!1,n=3Dthis.getSlotInfo(t);if(n.response){var =
o=3Dn.response?n.response.pdb_deliv:{};for(var r in =
this.origentation.watchingSlotsMap)if(r&&this.origentation.watchingSlotsM=
ap.hasOwnProperty(r)&&this.origentation.watchingSlotsMap[r]&&0=3D=3D=3D("=
"+t).indexOf(""+r)&&n.response){var =
s=3Do.deliv_des,a=3Ds.width||0,d=3Ds.height||0;0=3D=3D=3Da||0=3D=3D=3Dd?e=
[t]=3D!1:e[t]=3D!0,i=3D!0}i&&this.origentation.slotFinishedCallback(e)}},=
process:function(){var t=3Dthis.slotsMap;for(var e in =
t)if(e&&t[e]&&t.hasOwnProperty(e)){var =
i=3Dt[e];if(i.status>=3Dthis.config.STATUS_REQUEST)continue;this.createCo=
ntainer(i),this.requestSlotInfo(i)}},requestSlotInfo:function(t){!this.co=
nfig.FIRST_ONCESEACH&&this.config.EXP_SATUS&&(this.config.FIRST_ONCESEACH=
=3D!0,this.dom.bind(window,"message",i.proxy(this,this.onMessageHandler))=
);var =
e=3D!1;t.paramObj=3Dthis.param.getParamObj(t),t.paramObj.exps=3Dthis.conf=
ig.EXP_ID,t.paramObj.pcn=3Dthis.config.IS_CNAME?this.config.REQUEST_URL_C=
NAME:"";var =
n,o;t.posUrl&&this.browser.antBrowser?(t.paramObj.ctxant=3D"1",t.paramObj=
.pcn=3Dt.pcn,n=3Dthis.param.getParamString(t.paramObj),o=3Dt.posUrl+n):(n=
=3Dthis.param.getParamString(t.paramObj),o=3Dthis.config.POS_URL+n),t.par=
amObj.dtm=3Dthis.config.HTML_POST,t.timestampWatcher.t2=3D+new Date;var =
r=3D!1;"union"=3D=3D=3Dt.productLine&&(r=3D!0),t.isAsync=3D=3D=3D!0&&(r=3D=
!0),e=3Dthis.config.EXP_SATUS?this.reqLocalInfo(t):this.localAdInfo(t),e?=
(this.setStatus(t.id,this.config.STATUS_REQUEST),window[this.config.LOADE=
R_DEFINE_NAME](e)):(this.sendJsonpRequest(o,r),this.setStatus(t.id,this.c=
onfig.STATUS_REQUEST))},onMessageHandler:function(t){var =
e=3D(t.origin||t.originalEvent.origin,t.data);e&&e.placement&&e.placement=
.update&&e.queryid&&e.tuid&&this.updateInfo(e)},updateInfo:function(t){va=
r =
e=3D{},i=3Dt.placement.update;this.storageSlotInfo=3Dthis.storage.getItem=
(t.tuid),this.storageSlotInfo&&(e=3Dthis.lang.jsonToObj(this.storageSlotI=
nfo),this.storage.isAvailable&&window.JSON&&window.JSON.stringify&&e&&e.p=
lacement&&e.placement.update&&e.placement.update!=3D=3Di&&(t.adExpire=3D(=
new =
Date).getTime(),this.storage.setItem(t.tuid,JSON.stringify(t))))},reqLoca=
lInfo:function(t){try{if(this.browser.ie&&this.browser.ie<9)return!1;var =
e=3D{};return =
this.storage.isAvailable?(this.storageSlotInfo=3Dthis.storage.getItem(t.i=
d),this.storageSlotInfo?e=3Dthis.lang.jsonToObj(this.storageSlotInfo):!1)=
:!1}catch(i){var =
n=3DencodeURIComponent(i),o=3D{type:"elog",pos:"localAdInfo",id:t.id,mes:=
n,exps:this.config.EXP_ID};this.log.monitorLog(o)}},localAdInfo:function(=
t){try{if(this.browser.ie&&this.browser.ie<9)return!1;var =
e=3D{};if(!this.storage.isAvailable)return!1;if(this.storageSlotInfo=3Dth=
is.storage.getItem(t.id),!this.storageSlotInfo)return!1;if(e=3Dthis.lang.=
jsonToObj(this.storageSlotInfo),!e||!e.adExpire)return!1;var i=3D(new =
Date).getTime(),n=3Di-e.adExpire;return =
n>this.config.STORAGE_TIMER?(this.storage.removeItem(t.id),!1):e}catch(o)=
{}},adInfoStorage:function(t){try{var =
e=3Dt.response||{},i=3D!1;e&&e.pdb_deliv&&e.pdb_deliv.deliv_des&&e.pdb_de=
liv.deliv_des._html&&(i=3D!0);var =
n=3D!1;e&&e.tuid&&(n=3D0=3D=3D=3De.tuid.indexOf("u"));var =
o=3Dt.id;!i&&n&&this.storage.isAvailable&&window.JSON&&window.JSON.string=
ify&&o&&!this.storageSlotInfo&&(e.adExpire=3D(new =
Date).getTime(),this.storage.setItem(o,JSON.stringify(e)))}catch(r){}},cr=
eateContainer:function(t){if(!(t.status>this.config.STATUS_CREATE)){var =
e=3Dthis.dom.g(t.containerId);if(e)return void =
this.setStatus(t.id,this.config.STATUS_CREATE);t.isAsync?"union"=3D=3D=3D=
t.productLine&&(t.containerId=3D"cpro_"+t.slotId):(document.write('<div =
id=3D"'+t.containerId+'"></div>'),this.dom.g(t.containerId)||this.createB=
ackupWrapper(t)),this.setStatus(t.id,this.config.STATUS_CREATE)}},createB=
ackupWrapper:function(t){try{var =
e=3Ddocument.getElementsByTagName("script"),i=3De[e.length-1];if(i){var =
n=3Di.parentNode;if(n){var o=3Ddocument.createElement("div");return =
o.id=3Dt.containerId,n.insertBefore(o,i),!0}}}catch(r){}return!1},sendJso=
npRequest:function(t,e){if(e){var =
i=3Ddocument.createElement("script");i.type=3D"text/javascript",i.async=3D=
!0,i.src=3Dt;var =
n=3Ddocument.getElementsByTagName("script")[0];n&&n.parentNode?n.parentNo=
de.insertBefore(i,n):document.write('<script charset=3D"utf-8" =
src=3D"'+t+'"></script>')}else document.write('<script charset=3D"utf-8" =
src=3D"'+t+'"></script>')},adInfoIsAvailable:function(t){var =
e=3Dt.response;if(!e)return!0;var =
i=3De.pdb_deliv,n=3De.rtb_deliv,o=3De.order_deliv,r=3De.pdb_deliv.deliv_d=
es,s=3D(r._html,e.placement.complement_type);return!(!this.config.IS_PREV=
IEW&&0=3D=3D=3Di.deliv_id&&0=3D=3D=3Dn.deliv_id&&0=3D=3D=3Do.deliv_id&&7=3D=
=3Ds)}}),i.define({name:"detect",namespace:"dup.business",deps:{config:"d=
up.common.config",log:"dup.common.utility.log",slot:"dup.business.slot"},=
$detect:function(){},sendLog:function(t){t.url=3D"",t.host=3Dwindow.locat=
ion.hostname,t.from=3D"SSP",this.config.EXP_ID&&(t.exp=3Dthis.config.EXP_=
ID),this.log.sendLog({data:t,option:"now"})},checkFail:function(){var =
t=3Dthis.slot.slotsMap;for(var e in =
t)if(e&&t.hasOwnProperty(e)&&t[e]){var =
i=3Dt[e],n=3Di.slotId,o=3D"";i.response&&(o=3Di.response.queryid);var =
r=3Di.status,s=3Di.errors||[],a=3DdecodeURIComponent(s.join(","));a&&this=
.sendLog({type:"hlog",exp:this.config.EXP_ID||"",status:r,pos:"checkFail"=
,id:n,sid:o,index:i.index,errorInfo:a})}}}),i.define({name:"viewWatch",na=
mespace:"dup.business",deps:{dom:"dup.common.utility.dom",lang:"dup.commo=
n.utility.lang",style:"dup.common.utility.style",browser:"dup.common.util=
ity.browser",log:"dup.common.utility.log",slot:"dup.business.slot"},analy=
sisUrl:"//eclick.baidu.com/a.js",maxTime:72e5,STATUS:{WAIT:0,LOAD:1,RUN:2=
,UNLOAD:3},clientParam:{},focusSwitch:!0,watchingList:null,intervalId:nul=
l,intervalTimeSpan:500,isEventInited:!1,$viewWatch:function(){this.winFoc=
used=3D!0,this.win=3Dwindow,this.pageStayTime=3Dnull=3D=3Dthis.pageStayTi=
me?0:this.pageStayTime,this.intervalStatus=3Dthis.STATUS.WAIT},viewWatch:=
function(){},regisetViewWatch:function(t){this.isEventInited||(this.initi=
alizeEvent(),this.isEventInited=3D!0),this.watchingList=3Dthis.watchingLi=
st||[];var e=3Dthis.dom.g(t.containerId);if(e){var =
i=3Dt.paramObj,n=3Dt.width,o=3Dt.height,r=3D"";if(t.response){var =
s=3Dt.response.placement,a=3Ds.container;n=3Da.width,o=3Da.height,r=3Dt.r=
esponse.queryid}var d=3Dnew =
Date,l=3D{slotId:t.slotId,domId:t.containerId,jk:r,word:i.ltu,iframeStatu=
s:i.dis,aw:n,ah:o,viewContext:{pageStayTime:0,pageStayTimeStamp:d,inViewT=
ime:0,inViewTimeStamp:d,currViewStatus:!1,focusTime:0,adViewTime:0,currAd=
ViewStatus:!1,adViewTimeStamp:d}};this.calculateClientParam(l,e),this.wat=
chingList.push(l)}},unregisetViewWatch:function(t){if(this.watchingList)f=
or(var e=3Dt.containerId,i=3D0;i<this.watchingList.length;i++){var =
n=3Dthis.watchingList[i];if(n.domId=3D=3De)return void =
this.watchingList.splice(i,1)}},buildAnalysisUrl:function(t,e){if(t&&e){v=
ar =
i=3Dt+"?",n=3De.viewContext;n.inViewTime>this.maxTime&&(n.inViewTime=3Dth=
is.maxTime),n.adViewTime>this.maxTime&&(n.adViewTime=3Dthis.maxTime),n.pa=
geStayTime>=3Dthis.maxTime&&(n.pageStayTime=3Dthis.maxTime);var =
o=3D[];return =
o.push("tu=3D"+e.slotId),o.push("jk=3D"+e.jk),o.push("word=3D"+e.word),o.=
push("if=3D"+e.iframeStatus),o.push("aw=3D"+e.aw),o.push("ah=3D"+e.ah),o.=
push("pt=3D"+n.pageStayTime),o.push("it=3D"+n.inViewTime),o.push("vt=3D"+=
n.adViewTime),o.push("csp=3D"+e.desktopResolution),o.push("bcl=3D"+e.brow=
serRegion),o.push("pof=3D"+e.pageRegion),o.push("top=3D"+e.top),o.push("l=
eft=3D"+e.left),i+o.join("&")}},initializeEvent:function(){this.windowOnL=
oadHandler(),this.dom.ready(i.proxy(this,this.windowOnLoadDelay),2e3),thi=
s.dom.bind(this.win,"beforeunload",i.proxy(this,this.windowOnUnloadHandle=
r))},calculateClientParam:function(t,e){var =
i=3Dthis.style.getPosition(e);t.left=3Di.left||0,t.top=3Di.top||0;var =
n=3Dwindow.screen.availWidth,o=3Dwindow.screen.availHeight;n>1e4&&(n=3D0)=
,o>1e4&&(o=3D0),t.desktopResolution=3Dn+","+o,t.browserRegion=3Dthis.styl=
e.getClientWidth(window)+","+this.style.getClientHeight(window),t.pageReg=
ion=3Dthis.style.getScrollWidth(window)+","+this.style.getScrollHeight(wi=
ndow)},updateViewStatus:function(t,e,i){var n,o,r,s=3Dnew Date;return =
n=3Do=3Dr=3Dthis.intervalTimeSpan,this.intervalStatus=3D=3D=3Dthis.STATUS=
.LOAD&&(this.intervalStatus=3Dthis.STATUS.RUN,n=3Do=3D0,r=3Do=3D0),t.curr=
ViewStatus?(this.intervalStatus=3D=3D=3Dthis.STATUS.LOAD&&(n=3DparseInt(s=
.getTime()-t.inViewTimeStamp.getTime(),10),0>n?n=3D0:n>this.intervalTimeS=
pan&&(n=3Dthis.intervalTimeSpan)),t.inViewTime+=3Dn,t.inViewTimeStamp=3Ds=
):e&&(t.inViewTimeStamp=3Ds),t.currViewStatus=3De,t.currAdViewStatus?(thi=
s.intervalStatus=3D=3D=3Dthis.STATUS.UNLOAD&&(r=3DparseInt(s.getTime()-t.=
adViewTimeStamp.getTime(),10),0>r?r=3D0:r>this.intervalTimeSpan&&(r=3Dthi=
s.intervalTimeSpan)),t.adViewTime+=3Dr,t.adViewTimeStamp=3Ds):i&&(t.adVie=
wTimeStamp=3Ds),t.currAdViewStatus=3Di,t.pageStayTime=3Dt.pageStayTime||0=
,this.pageStayTime=3Dthis.pageStayTime||0,this.intervalStatus=3D=3D=3Dthi=
s.STATUS.UNLOAD&&(this.pageTimeSpan=3DparseInt(s.getTime()-t.pageStayTime=
Stamp.getTime(),10),0>o?o=3D0:o>this.intervalTimeSpan&&(o=3Dthis.interval=
TimeSpan)),t.pageStayTime+=3Do,this.pageStayTime+=3Do,this.winFocused&&(t=
.focusTime+=3Do),t.pageStayTimeStamp=3Ds,t},computeViewStatus:function(t)=
{var =
e=3Dt.domId,i=3Dthis.dom.g(e);if(!i)return{isInView:!1,isAdView:!1};var =
n=3D!1,o=3D!1;if(this.winFocused)try{var =
r=3Dthis.style.getClientWidth(this.win),s=3Dthis.style.getClientHeight(th=
is.win),a=3Dthis.getPosition(i),d=3Dthis.style.getOuterWidth(i),l=3Dthis.=
style.getOuterHeight(i);n=3Da.top>=3D0&&a.bottom<=3Ds&&a.left>=3D0&&a.lef=
t<=3Dr;var =
c=3Da.top>0?a.top:0,h=3Da.bottom>s?s:a.bottom,u=3Da.left>0?a.left:0,p=3Da=
.right>r?r:a.right,m=3Dd*l;if(h>c&&p>u){var =
f=3D(h-c)*(p-u);o=3Df>.5*m}}catch(g){}return{isInView:n,isAdView:o}},getP=
osition:function(t){var =
e=3Dthis.style.getPositionCore(t),i=3Dthis.style.getScrollLeft(window),n=3D=
this.style.getScrollTop(window),o=3Dthis.style.getOuterWidth(t,!1),r=3Dth=
is.style.getOuterHeight(t,!1);return{top:e.top-n,bottom:e.top-n+r,left:e.=
left-i,right:e.left-i+o,topAbs:e.top,bottomAbs:e.top+r,leftAbs:e.left,rig=
htAbs:e.left+o}},viewableCompute:function(){if(this.watchingList){var =
t,e;for(t=3D0,e=3Dthis.watchingList.length;e>t;t++){var =
i=3Dthis.watchingList[t],n=3Dthis.computeViewStatus(i);i.viewContext=3Dth=
is.updateViewStatus(i.viewContext,n.isInView,n.isAdView),i.analysisUrl=3D=
this.buildAnalysisUrl(this.analysisUrl,i)}}},viewOnChange:function(){this=
.viewableCompute(),this.pageStayTime>=3Dthis.maxTime&&this.windowOnUnload=
Handler(!1)},windowOnLoadHandler:function(t){this.intervalStatus=3Dthis.S=
TATUS.LOAD,this.registerFocusEvent(this.win),(!this.browser.ie||this.brow=
ser.ie&&this.browser.ie>6)&&this.viewOnChange(),this.intervalId=3DsetInte=
rval(i.proxy(this,this.viewOnChange),this.intervalTimeSpan)},windowOnLoad=
Delay:function(t){var =
e,i,n,o,r;for(e=3D0,i=3Dthis.watchingList.length;i>e;e++)n=3Dthis.watchin=
gList[e],n&&(r=3Dn.domId,r&&(o=3Dthis.win.document.getElementById(r)),o&&=
(n.clientParam=3Dn.clientParam||{},this.calculateClientParam(n,o)))},wind=
owOnUnloadHandler:function(t){try{if(clearInterval(this.intervalId),this.=
intervalStatus!=3D=3Dthis.STATUS.RUN)return =
void(this.intervalStatus=3Dthis.STATUS.UNLOAD);this.intervalStatus=3Dthis=
.STATUS.UNLOAD,this.viewableCompute();for(var =
e=3D0,i=3Dthis.watchingList.length;i>e;e++){var =
n=3Dthis.watchingList[e];n&&n.analysisUrl&&!n.isSended&&(n.isSended=3D!0,=
0=3D=3D=3De&&(n.analysisUrl+=3D"&total=3D"+this.watchingList.length),this=
.log.sendLog({url:n.analysisUrl}))}if(t){var o,r=3D200,s=3D(new =
Date).getTime();if(this.browser.ie)for(o=3Ds+r;o>s;)s=3D(new =
Date).getTime();else{for(var i=3D1e5,e=3D0;i>e;e++);o=3D(new =
Date).getTime(),i=3D1e5*r/(o-s),i=3Di>1e7?1e7:i;for(var =
e=3D0;i>e;e++);}}}catch(a){}},registerFocusEvent:function(t){var =
t=3Dt||this.win;this.winFocused=3D!0,this.browser.ie?(this.dom.bind(t,"fo=
cusin",i.proxy(this,this.allDomOnFocusHandler)),this.dom.bind(t,"focusout=
",i.proxy(this,this.allDomOnBlurHandler))):(this.dom.bind(t,"focus",i.pro=
xy(this,this.allDomOnFocusHandler)),this.dom.bind(t,"blur",i.proxy(this,t=
his.allDomOnBlurHandler)))},allDomOnFocusHandler:function(t){this.winFocu=
sed=3D!0},allDomOnBlurHandler:function(t){this.winFocused=3D!1}}),i.defin=
e({name:"unionDelivery",namespace:"dup.business.delivery",deps:{slot:"dup=
.business.slot"},launch:function(){var =
t,e=3Dwindow.cpro_id;window.cpro_id=3Dnull,e&&(t=3Dthis.slot.createSlot({=
slotId:e,productLine:"union",isAsync:!1}),this.slot.addSlot(t));var =
i=3Dwindow.cproArray;if(window.cproArray=3Dnull,i)for(var =
n=3D0,o=3Di.length;o>n;n++)t=3Dthis.slot.createSlot({slotId:i[n].id,produ=
ctLine:"union",isAsync:!0}),this.slot.addSlot(t);var =
r=3Dwindow.cpro_mobile_slot;if(window.cpro_mobile_slot=3Dnull,r)for(var =
n=3D0,o=3Dr.length;o>n;n++){var =
s=3Dr[n];t=3Dthis.slot.createSlot({slotId:s.id,productLine:"union",isAsyn=
c:!0}),t.styleOpenApi=3Dt.styleOpenApi||{};for(var a in =
s)a&&s[a]&&s.hasOwnProperty(a)&&(t.styleOpenApi[a]=3Ds[a]);this.slot.addS=
lot(t)}this.slot.process()}}),i.define({name:"dupDelivery",namespace:"dup=
.business.delivery",deps:{slot:"dup.business.slot","interface":"dup.busin=
ess.interface"},launch:function(){this.delieveryObjArray=3Dthis.delievery=
ObjArray||[],window.BAIDU_DUP=3Dwindow.BAIDU_DUP||[],window.BAIDU_DUP&&wi=
ndow.BAIDU_DUP instanceof =
Array&&(this.delieveryObjArray=3Dthis.delieveryObjArray.concat(window.BAI=
DU_DUP),window.BAIDU_DUP=3D[]),this.updateApi(),this.process()},updateApi=
:function(){window.BAIDU_DUP=3Dthis,window.BAIDU_DUP.load=3D!0,this["inte=
rface"].register("fill",this,this.fill),this["interface"].register("fillA=
sync",this,this.fillAsync)},process:function(){for(var =
t=3D0,e=3Dthis.delieveryObjArray.length;e>t;t++){var =
i=3Dthis.delieveryObjArray[t];if(i instanceof Array){var =
n=3Di.splice(0,1)[0],o=3Di;this["interface"].perform(n,o)}}this.delievery=
ObjArray=3D[],this.slot.process()},push:function(t){this.delieveryObjArra=
y=3Dthis.delieveryObjArray&&[],this.delieveryObjArray.push(t),this.proces=
s()},fill:function(t){var =
e=3Dthis.slot.createSlot({slotId:t,productLine:"dup",isAsync:!1});this.sl=
ot.addSlot(e),this.slot.process()},fillAsync:function(t,e){var =
i=3Dthis.slot.createSlot({slotId:t,productLine:"dup",isAsync:!0});i.conta=
inerId=3De,this.slot.addSlot(i),this.slot.process()}}),i.define({name:"st=
andardDelivery",namespace:"dup.business.delivery",deps:{config:"dup.commo=
n.config",slot:"dup.business.slot","interface":"dup.business.interface",p=
aram:"dup.business.param",data:"dup.common.utility.data",additionalParam:=
"dup.business.parameter.additionalParam"},launch:function(){this.deliever=
yObjArray=3Dthis.delieveryObjArray||[],window.slotbydup=3Dwindow.slotbydu=
p||[],window.slotbydup&&window.slotbydup instanceof =
Array&&(this.delieveryObjArray=3Dthis.delieveryObjArray.concat(window.slo=
tbydup),window.slotbydup=3D[]),this.updateApi(),this.process()},process:f=
unction(){for(var t,e=3D0,i=3Dthis.delieveryObjArray.length;i>e;e++){var =
n=3Dthis.delieveryObjArray[e];if(n.hasOwnProperty("id")){var =
o=3D!1;if(n.hasOwnProperty("isAsync")&&n.isAsync?o=3Dn.isAsync:n.hasOwnPr=
operty("async")&&n.async&&(o=3Dn.async),t=3Dthis.slot.createSlot({slotId:=
n.id,productLine:"adcodex",isAsync:o}),n.hasOwnProperty("pos")&&(t.posUrl=
=3Dthis.config.HTTP_PROTOCOL+"//"+n.pos+"/s?",t.pcn=3Dn.pos),this.additio=
nalParam.paramCheck(t,n),t.containerId=3Dn.container||t.containerId,t.dis=
play=3Dn.display,t.rpdn=3Dn.rpdn||"",t.ftpc=3Dn.ftpc||!1,t.size=3Dn.size|=
|"",t.pcwd=3Dn.pcwd||"",t.pchd=3Dn.pchd||"",!t.styleOpenApi.cpro_w&&!t.st=
yleOpenApi.cpro_h){var =
r,s=3Dn.size;if(s&&s.indexOf(":")>-1){r=3Ds.split(":");var =
a=3Dthis.param.translateScaleToPixelSize(r[0],r[1]);t.width=3Da.width,t.h=
eight=3Da.height}}this.slot.addSlot(t);var =
d=3D"cpro_set_baiduRec_jsonpCb";n[d]&&n.hasOwnProperty(d)&&this.data.putI=
nfo("baiduRecCallback",n.cpro_set_baiduRec_jsonpCb||"")}else =
this["interface"].executeTask(n)}this.delieveryObjArray=3D[],this.slot.pr=
ocess()},updateApi:function(){window.slotbydup=3Dthis,window.slotbydup.lo=
ad=3D!0},push:function(t){this.delieveryObjArray=3Dthis.delieveryObjArray=
&&[],this.delieveryObjArray.push(t),this.process()}}),i.define({name:"exp=
and",namespace:"dup.ui.painter",deps:{config:"dup.common.config",dom:"dup=
.common.utility.dom",style:"dup.common.utility.style",event:"dup.common.u=
tility.event",slot:"dup.business.slot"},validate:function(t){return!0},se=
ndMessage:function(t,e){var =
i=3Dthis.slot.getSlotInfo(t),n=3Dthis.dom.g(i.containerId);if(n){var =
o=3Dn.getElementsByTagName("iframe")[0];e=3DJSON.stringify(e),o.contentWi=
ndow.postMessage(e,"*")}},getComputedWidth:function(t){return =
window.getComputedStyle?window.getComputedStyle(t).width:t.currentStyle.w=
idth},init:function(){function t(t){var =
i=3DJSON.parse(t.data);if(!i.title||"baidudup"!=3Di.title)return!1;if("in=
vokeMethod"=3D=3Di.type)switch(i.method){case"expand":e.expandAd(i.parame=
ters[0]);break;case"close":e.collapseAd(i.parameters[0])}}var =
e=3Dthis;(window.addEventListener||window.attachEvent)&&JSON&&JSON.parse&=
&this.event.bind(window,"message",t),this.event.bind(window,"scroll",func=
tion(){e.adjustPosWhenViewportChanged()}),this.event.bind(window,"resize"=
,function(){e.adjustPosWhenViewportChanged()})},adjustPosWhenViewportChan=
ged:function(){var =
t=3Dthis.scrollObserver;t.up,t.down,t.left,t.right;for(var e in =
t)for(var i in t[e]){var n=3Dt[e][i];if(!n.isExpand)return;var =
o=3Dn.origin,r=3Do.getElementsByTagName("iframe")[0],s=3D(n.targetWidth,n=
.targetHeight,n.originWidth);n.originHeight;switch(e){case"up":var =
a=3DparseInt(this.getComputedWidth(o),10);r.style.left=3D0;break;case"dow=
n":var =
a=3DparseInt(this.getComputedWidth(o),10);r.style.left=3D0;break;case"lef=
t":var =
a=3DparseInt(this.getComputedWidth(o));r.style.right=3Da-s+"px";break;cas=
e"right":var =
a=3DparseInt(this.getComputedWidth(o));r.style.left=3D0}}},$expand:functi=
on(){this.observerObjs=3D[],this.expandStatus=3D{},this.timers=3D{},this.=
hasInit=3D!1,this.maxExpandTime=3D5e3,this.canFixed=3Dthis.style.canFixed=
(),this.scrollObserver=3D{up:{},down:{},left:{},right:{}}},registerScroll=
Subject:function(t,e,i,n,o,r,s){if(!this.scrollObserver[t][e]){var =
a=3Dthis.scrollObserver[t][e]=3D{};a.isExpand=3D!0,a.origin=3Di,a.originW=
idth=3Dn,a.originHeight=3Do,a.targetWidth=3Dr,a.targetHeight=3Ds}},expand=
2Up:function(t,e,i,n,o,r){this.registerScrollSubject("up",t,e,i,n,o,r);va=
r =
s=3De.getElementsByTagName("iframe")[0];parseInt(this.getComputedWidth(e)=
);s.style.bottom=3D0,s.style.left=3D0},expand2Down:function(t,e,i,n,o,r){=
this.registerScrollSubject("down",t,e,i,n,o,r);var =
s=3De.getElementsByTagName("iframe")[0];parseInt(this.getComputedWidth(e)=
);s.style.top=3D0,s.style.left=3D0},expand2Left:function(t,e,i,n,o,r){thi=
s.registerScrollSubject("left",t,e,i,n,o,r);var =
s=3De.getElementsByTagName("iframe")[0],a=3DparseInt(this.getComputedWidt=
h(e));s.style.bottom=3D0,s.style.right=3Da-i+"px"},expand2Right:function(=
t,e,i,n,o,r){this.registerScrollSubject("right",t,e,i,n,o,r);var =
s=3De.getElementsByTagName("iframe")[0];parseInt(this.getComputedWidth(e)=
);s.style.bottom=3D0,s.style.left=3D0},expandAd:function(t){if(!this.expa=
ndStatus[t]){this.expandStatus[t]=3D!0;var =
e=3Dthis.slot.getSlotInfoByRawId(t),i=3De.response.placement.container,n=3D=
i.width,o=3Di.height,r=3De.response.placement.container.slide,s=3Dr.slide=
Width,a=3Dr.slideHeight,d=3D1e3*parseInt(r.extendTime,10),l=3DparseInt(r.=
slideMode,10),c=3DparseInt(r.direction,10),h=3De.containerId,u=3Dthis.dom=
.g(h),p=3Du.getElementsByTagName("iframe")[0];if(1=3D=3D=3Dc||2=3D=3D=3Dc=
?(p.setAttribute("height",a),p.style.height=3Da+"px"):3!=3D=3Dc&&4!=3D=3D=
c||(p.setAttribute("width",s),p.style.width=3Ds+"px"),2=3D=3Dl&&2=3D=3Dc|=
|2=3D=3Dl&&4=3D=3Dc)switch(c){case =
2:p.setAttribute("height",a),p.style.height=3Da+"px";break;case =
4:p.setAttribute("width",s),p.style.width=3Ds+"px"}else =
switch(u.style.position=3D"relative",p.style.position=3D"absolute",u.styl=
e.height=3Do+"px",c){case 1:this.expand2Up(t,u,n,o,s,a);break;case =
2:this.expand2Down(t,u,n,o,s,a);break;case =
3:this.expand2Left(t,u,n,o,s,a);break;case =
4:this.expand2Right(t,u,n,o,s,a)}var =
m=3Dthis;this.timers[t]=3DsetTimeout(function(){m.expandStatus[t]&&m.coll=
apseAd(t)},Math.min(d))}},collapseAd:function(t){if(this.expandStatus[t])=
{this.expandStatus[t]=3D!1,clearTimeout(this.timers[t]);var =
e=3Dthis.slot.getSlotInfoByRawId(t),i=3De.response.placement.container,n=3D=
i.width,o=3Di.height,r=3De.containerId,s=3Dthis.dom.g(r),a=3Ds.getElement=
sByTagName("iframe")[0];s.style.position=3D"",s.style.width=3D"",s.style.=
height=3D"",s.style.top=3D"",s.style.left=3D"",a.style.position=3D"",a.st=
yle.display=3D"",a.style.top=3D"",a.style.left=3D"",a.style.right=3D"",a.=
style.width=3D"",a.style.height=3D"",a.setAttribute("height",o),a.setAttr=
ibute("width",n);for(var d in this.scrollObserver)for(var l in =
this.scrollObserver[d])l=3D=3Dt&&(this.scrollObserver[d][l].isExpand=3D!1=
)}},observer:function(t){var =
t=3Dthis.slot.getSlotInfoByRawId(t.slotId),e=3Dt.response.placement.conta=
iner.slide,i=3Dt.containerId,n=3Dthis.dom.g(i);e.slideMode,e.direction;n.=
style.textAlign=3D"left",this.hasInit||(this.hasInit=3D!0,this.init())},f=
ire:function(t,e){var i,n=3Dfunction(t){return"[object =
Array]"=3D=3DObject.prototype.toString.call(t)},o=3Dthis.slot.getSlotInfo=
ByRawId(e),r=3Do.response.placement.container.slide;r&&(i=3Dr.trigger);va=
r =
s=3Dn(i)?i[0]:i?i:0,a=3D["","BEFORE_PAGELOAD","AFTER_PAGECLOSE","PAGE_PER=
CENT","mouseover","click","adloaded","SLIP"];a[s]=3D=3D=3Dt&&this.sendMes=
sage(e,{title:"baidudup",type:"eventHappen",parameters:[t]})}}),i.define(=
{name:"frame",namespace:"dup.business",deps:{config:"dup.common.config",s=
lot:"dup.business.slot",material:"dup.business.material",log:"dup.common.=
utility.log",browser:"dup.common.utility.browser",requestCache:"dup.busin=
ess.requestCache",param:"dup.business.param",lang:"dup.common.utility.lan=
g",data:"dup.common.utility.data",viewWatch:"dup.business.viewWatch",crea=
tivePreview:"dup.business.creativePreview"},checkRichAdType:function(t){f=
or(var =
e=3D"",i=3D["dui-lian","popup","right-down","slide","top-down","barrier"]=
,n=3D0;n<i.length;n++)if(t.indexOf(i[n])>-1){e=3Di[n];break}return =
e},cacheRequestCallback:function(t){var =
e=3Dt.html||"success";if("success"!=3D=3De){var =
n=3Dthis.requestCache.get(t.dpv),o=3Dn.response.pdb_deliv.deliv_des;o=3Do=
._html;var =
r=3Dn.response,s=3Dr.pdb_deliv,a=3Dr.rtb_deliv,d=3Dr.order_deliv;if(0=3D=3D=
=3Ds.deliv_id&&(0!=3D=3DparseInt(d.deliv_id,10)||0!=3D=3DparseInt(a.deliv=
_id,10))&&"success"!=3D=3De&&7=3D=3D=3Dr.placement.complement_type){var =
l=3Ddocument.getElementById(n.containerId),c=3Ddocument.getElementById(n.=
containerId+"_left"),h=3Ddocument.getElementById(n.containerId+"_right");=
return =
l&&(this.viewWatch.unregisetViewWatch(n),l.parentNode.removeChild(l)),c&&=
c.parentNode.removeChild(c),void(h&&h.parentNode.removeChild(h))}if(n)if(=
o.type&&"rich"=3D=3D=3Do.type){var =
u=3Dthis.material.formatMaterial(o,n),p=3Ddocument.getElementById(n.conta=
inerId),m=3D"<!DOCTYPE =
html><body>";u.indexOf(m)>-1&&(u=3Du.slice(m.length));var =
f=3Dthis.checkRichAdType(u);if("popup"=3D=3D=3Df)p.style.display=3D"none"=
;else if("barrier"=3D=3D=3Df){p.style.display=3D"none";var =
g=3Ddocument.getElementById(n.containerId+"_placeholder");g&&(g.style.dis=
play=3D"none")}var =
y=3Di.using("dup.ui.painter.richMaterial");y.render(n,!0)}else{var =
v=3Dthis.requestCache.secondResult[t.dpv];this.slot.clearStatus(n,this.co=
nfig.STATUS_FINISH),n.isPdbAd=3D!0,n.isNeedCacheRequest=3D!1,v.outerHTML=3D=
this.getFrameHTML(n)}}},requireDomainPolicy:function(){function =
t(t){try{return!t.contentWindow.document}catch(e){return!0}}var =
e=3Ddocument.createElement("iframe"),i=3D!1;return =
e.src=3D"about:blank",document.body.insertBefore(e,document.body.firstChi=
ld),i=3Dt(e),document.body.removeChild(e),this.requireDomainPolicy=3Dfunc=
tion(){return i},i},requireBlankPolicy:function(){var =
t=3Dnavigator.userAgent,e=3D!(!t||!t.match(/iphone.*micromessenger/i));re=
turn this.requireBlankPolicy=3Dfunction(){return =
e},e},renderFrame:function(t,e){var =
i=3Dthis.slot.getSlotInfo(t);if(i&&!this.slot.checkStatus(i,this.config.S=
TATUS_FINISH)){var n=3Di.response.pdb_deliv.deliv_des;n=3Dn._html;var =
o=3Dthis.getFrameUrl();if(this.requireDomainPolicy()&&e.getAttribute("src=
",2)!=3D=3Do)return void(e.src=3Do);if(n&&"url"=3D=3D=3Dn.type)return =
e.src=3Dn.content,void =
this.slot.setStatus(i.id,this.config.STATUS_FINISH);try{this.slot.setStat=
us(i.id,this.config.STATUS_FINISH);var =
r=3Dthis.material.formatMaterial(n,i);r.indexOf("<body>")<0&&(r=3D"<!DOCT=
YPE html><body>"+r);var =
s=3De.contentWindow.document;s.open("text/html","replace"),s.write(r),s.b=
ody&&(s.body.style.backgroundColor=3D"transparent")}catch(a){}}},getFrame=
Url:function(){return =
this.requireDomainPolicy()?this.data.getConfig("domainPolicyFileUrl")||"/=
domain-policy.htm":this.requireBlankPolicy()?this.data.getConfig("blankPo=
licyFileUrl")||"/blank-policy.htm":"about:blank"},getFrameHTML:function(t=
,e){e=3De||"iframe"+t.id,t.iframeId=3De;var =
i=3Dthis.processFrameData(t);return =
this.renderFrameHTML(i)},processFrameData:function(t){var =
e,n,o=3D"",r=3D[];if(t.response){var =
s=3Dt.response.placement;n=3Ds.container;try{r=3Ds.fillstyle.elements||[]=
}catch(a){}}var =
d=3Dt.width||n&&n.width,l=3Dt.height||n&&n.height,c=3Dthis.creativePrevie=
w.getPreviewUrl(d,l,r,t.displayType||"inlay");if(c)e=3Dc;else =
if(t.isPdbAd){var =
h=3Dthis.config.DUP_PREFIX+"renderFrame";this.data.defineOnce(h,i.proxy(t=
his,this.renderFrame)),e=3Dthis.getFrameUrl(),o=3D'onload=3D"'+h+"('"+t.i=
d+"', this);\""}else if(t.isNeedCacheRequest){var =
u=3Dthis.config.DUP_PREFIX+"cacheRequest",p=3D"adsbybaidu_callback";this.=
data.defineOnce(p,i.proxy(this,this.cacheRequestCallback)),this.data.defi=
neOnce(u,i.proxy(this.requestCache,this.requestCache.cacheRequest)),e=3Dt=
his.param.getPmpRequestUrl(t),o=3D'onload=3D"'+u+"('"+t.paramObj.dpv+"', =
this);\""}else e=3Dthis.param.getPmpRequestUrl(t);var m=3D{};return =
m.iframeId=3Dt.iframeId,m.srcAttriName=3D"src",m.onloadDefine=3Do,m.ifram=
eWidth=3D""+d,m.iframeHeight=3D""+l,m.url=3De,m},renderFrameHTML:function=
(t){var e=3D["<iframe",' id=3D"{iframeId}"'," {onloadDefine}",' =
{srcAttriName}=3D"{url}"',' width=3D"{iframeWidth}"',' =
height=3D"{iframeHeight}"',' align=3D"center,center"',' vspace=3D"0"',' =
hspace=3D"0"',' marginwidth=3D"0"',' marginheight=3D"0"',' =
scrolling=3D"no"',' frameborder=3D"0"',' style=3D"border:0; =
vertical-align:bottom;margin:0;"',' =
allowtransparency=3D"true">',"</iframe>"].join("");return =
this.lang.template(e,t)}}),i.define({name:"richMaterial",namespace:"dup.u=
i.painter",deps:{dom:"dup.common.utility.dom",config:"dup.common.config",=
slot:"dup.business.slot",param:"dup.business.param",frame:"dup.business.f=
rame",log:"dup.common.utility.log",data:"dup.common.utility.data"},isNeed=
edNode:function(t,e){return =
t.nodeName&&t.nodeName.toUpperCase()=3D=3D=3De.toUpperCase()},evalScript:=
function(t,e){try{var =
i=3Ddocument.createElement("script");i.type=3D"text/javascript",t.src?i.s=
rc=3Dt.src:i.text=3Dt.text||t.textContent||t.innerHTML||"",e.insertBefore=
(i,e.firstChild)}catch(n){this.log.monitorLog({error:"createscripterror",=
status:"renderFail"})}},render:function(t,e){try{if(!t.response)return;va=
r =
i=3Dt.response,n=3D(i.rtb_deliv,i.order_deliv,i.pdb_deliv.deliv_des),o=3D=
n._html,r=3Dt.isNeedCacheRequest;if(!e&&(!o||"rich"!=3D=3Do.type||r))retu=
rn!1;var s=3Do.content}catch(a){}if(!t.isAsync&&!r)return =
document.write(s),this.slot.setStatus(t.id,this.config.STATUS_FINISH),!0;=
var =
d=3Dthis.dom.g(t.containerId);if(d&&t.isAsync&&("clb"=3D=3D=3Dt.productLi=
ne||"dup"=3D=3D=3Dt.productLine)&&!r){var =
l=3Dthis.frame.getFrameHTML(t);return =
d.innerHTML=3Dl,!0}if(!d)return!1;d.innerHTML=3D'<span style=3D"display: =
none">ie</span>'+s;for(var =
c=3Dd.childNodes,h=3D[],u=3D0;c[u];u++)!this.isNeededNode(c[u],"script")|=
|c[u].type&&"text/javascript"!=3D=3Dc[u].type.toLowerCase()||h.push(c[u])=
;h.reverse();for(var =
p=3D0,m=3Dh.length;m>p;p++)this.evalScript(h[p].parentNode.removeChild(h[=
p]),d);return!0}}),i.define({name:"floatBlock",namespace:"dup.ui.painter"=
,deps:{config:"dup.common.config",style:"dup.common.utility.style",log:"d=
up.common.utility.log",dom:"dup.common.utility.dom",lang:"dup.common.util=
ity.lang",cookie:"dup.common.utility.cookie",unicode:"dup.common.utility.=
unicode",frame:"dup.business.frame",slot:"dup.business.slot",deliveryLimi=
t:"dup.business.deliveryLimit"},GAP:5,NORMAL_CLOSE_BTN_HEIGHT:17,COUPLET_=
CLOSE_BTN_HEIGHT:20,validate:function(t){if("union"=3D=3D=3Dt.productLine=
){var =
e=3Dthis.deliveryLimit.TYPE.POPUP;"couplet"!=3D=3Dt.blockType&&"button"!=3D=
=3Dt.blockType||(e=3Dthis.deliveryLimit.TYPE.COUPLET);var =
i=3Dthis.validateLimit(e);if(!i)return!1;this.deliveryLimit.setAdsCount(e=
,t.domId)}var n=3Dthis.getCloseCookieName(t);return =
2!=3D=3Dt.closeType||!this.cookie.get(n)},validateLimit:function(t){var =
e=3Dthis.deliveryLimit.getAdCount(t),i=3Dthis.deliveryLimit.MAX_COUNT[t];=
return i>e?!0:void 0},createBlockHtmlTemplate:function(t){var =
e=3D["{iframe}","{closeBtn}"].join("");if(!t.blockType||"default"=3D=3D=3D=
t.blockType)return e;var i=3D["box-sizing: =
content-box;","width:{width}px;","height:{height}px;","padding:4px;","bor=
der:#acacac 1px =
solid;","overflow:hidden;"];return"button"!=3D=3Dt.blockType&&"popup"!=3D=
=3Dt.blockType||i.push("position:absolute;left:0;top:"+(this.COUPLET_CLOS=
E_BTN_HEIGHT+this.GAP)+"px;"),e=3D['<div =
style=3D"'+i.join("")+'">',"{iframe}","</div>","{closeBtn}"].join("")},cr=
eateCloseElement:function(t){var =
e=3D{},i=3D"\\u5FAE\\u8F6F\\u96C5\\u9ED1",n=3D"\\u5173\\u95ED",o=3Dt.domI=
d+"_closebtn",r=3Dthis;return e.couplet=3Dfunction(){var =
e=3D["box-sizing: =
content-box;","position:absolute;","width:"+t.containerWidth+"px;","heigh=
t:20px;","top:"+(t.containerHeight-this.COUPLET_CLOSE_BTN_HEIGHT)+"px;","=
left:0;","cursor:pointer;","background-color:#999999;","color:#fff;font-s=
ize:12px;","font-family: =
"+r.unicode.toDecode(i)+";","text-align:center;line-height:20px;"].join("=
"),s=3D'<div id=3D"'+o+'" =
style=3D"'+e+'">'+r.unicode.toDecode(n)+"</div>";return =
s},e.button=3De.popup=3Dfunction(){var =
e=3D61,i=3Dt.containerWidth-e,n=3D"\\u5FAE\\u8F6F\\u96C5\\u9ED1",s=3D"\\u=
5173\\u95ED",a=3D["box-sizing: =
content-box;","position:absolute;width:"+e+"px;","height:20px;top:0;","le=
ft:"+i+"px;","margin:0;padding:0;margin-bottom:5px;","cursor:pointer;over=
flow:hidden;"].join(""),d=3D['<div id=3D"'+o+'" style=3D"'+a+'">','<div =
style=3D"',"box-sizing: =
content-box;","width:40px;height:20px;","background-color:#999999;","colo=
r:#fff;float:left;","margin-right:1px;font-size:12px;","font-family:"+r.u=
nicode.toDecode(n)+";","text-align: =
center;line-height:20px;",'">'+r.unicode.toDecode(s)+"</div>",'<a =
style=3D"maring:0;padding:0;',"display:inline-block;border:none;","overfl=
ow:hidden;height:20px;","line-height:20px;cursor:pointer;","width:20px;ba=
ckground:url(","'https://cpro.baidustatic.com/cpro/ui/","noexpire/img/2.0=
.1/xuanfu_close.png","') no-repeat 0 0;margin-bottom:3px;",'float:left" =
></a>',"</div>"].join("");return d},e["default"]=3Dfunction(){var =
e=3D"https://cpro.baidustatic.com/cpro/ui/noexpire/img/clb/1.0.0/close.gi=
f",i=3D["box-sizing: content-box;","height:15px;","border:1px solid =
#e1e1e1;","background:#f0f0f0;","margin:0;","padding:0;","overflow:hidden=
;"].join(""),n=3D["box-sizing: =
content-box;","float:right;","clear:right;","margin:2px 5px 0 =
0;","width:39px;","height:13px;","cursor:pointer;","background:url("+e+")=
 no-repeat scroll 0 0;"].join(""),o=3D['<div style=3D"'+i+'">','<span =
id=3D"'+t.domId+'_closebtn" style=3D"'+n+'" =
',"onmouseover=3D\"this.style.backgroundPosition=3D'0 -20px';\" =
","onmouseout=3D\"this.style.backgroundPosition=3D'0 0';\" =
",">","</span>","</div>"].join("");return =
o},e[t.blockType]()},getVerticalStyle:function(t){var =
e=3Dt.vSpace||10;"center"=3D=3D=3Dt.verticalType&&(e=3D.5*(this.style.get=
ClientHeight()-t.containerHeight));var i=3Dt.verticalType;return =
i&&"center"!=3D=3Di||(i=3D"top"),{cssName:i,cssValue:e}},getHorizontalSty=
le:function(t){var =
e=3Dt.hSpace||10;if(t.contentWidth>0&&1=3D=3D=3Dt.dockType){var =
i=3DMath.floor(.5*(this.style.getClientWidth()-t.contentWidth));i>=3Dt.wi=
dth&&(e=3D"right"=3D=3D=3Dt.horizontalType?i-t.containerWidth-e:i-t.conta=
inerWidth-e)}else"center"=3D=3D=3Dt.horizontalType&&(e=3D.5*(this.style.g=
etClientWidth()-t.containerWidth));=0A=
var n=3Dt.horizontalType;return =
n&&"center"!=3D=3Dn||(n=3D"left"),{cssName:n,cssValue:e}},createContainer=
ElementByInfo:function(t){var =
e=3Dnull;this.dom.g(t.domId)?e=3Dthis.dom.g(t.domId):(e=3Ddocument.create=
Element("div"),e.id=3Dt.domId);var i=3D["box-sizing: =
content-box;","width: "+t.containerWidth+"px;","height: =
"+t.containerHeight+"px;","overflow: hidden;","z-index: =
2147483647;"];if(1=3D=3D=3Dt.followType){if(this.style.canFixed())i.push(=
"position: fixed;");else{i.push("position: =
absolute;"),this.updatePosition(t,e);var =
n=3Dthis;this.dom.bind(window,"scroll",function(){n.updatePosition(t,t.do=
mId)}),this.dom.bind(window,"resize",function(){n.updatePosition(t,t.domI=
d)})}var =
o=3Dthis.getVerticalStyle(t),r=3Dthis.getHorizontalStyle(t);i.push(o.cssN=
ame+":"+o.cssValue+"px;"),i.push(r.cssName+":"+r.cssValue+"px;")}else{i.p=
ush("position: absolute;");var =
o=3Dthis.getVerticalStyle(t),r=3Dthis.getHorizontalStyle(t);i.push(o.cssN=
ame+":"+o.cssValue+"px;"),i.push(r.cssName+":"+r.cssValue+"px;")}return =
e.style.cssText=3Di.join(""),e},updatePosition:function(t,e){var =
i=3Dthis.dom.g(e);if(i){var =
n=3Di.style,o=3D"CSS1Compat"!=3D=3Ddocument.compatMode,r=3Ddocument.body?=
document.body:document.documentElement,s=3Do?r:document.documentElement,a=
=3D(s.clientWidth,s.clientHeight),d=3D(window.pageXOffset||s.scrollLeft,w=
indow.pageYOffset||s.scrollTop);t.contentWidth>0&&1=3D=3D=3Dt.dockType;"t=
op"=3D=3D=3Dt.verticalType||0=3D=3D=3Dt.verticalType.length?n.top=3Dd+t.v=
Space+"px":n.top=3Dd+a-t.vSpace-t.containerHeight+"px"}},getCloseCookieNa=
me:function(t){var =
e=3D"bd_close_"+t.id;return"couplet"!=3D=3Dt.blockType&&"button"!=3D=3Dt.=
blockType||(e+=3D"_"+t.horizontalType),e},setCookieClose:function(t){var =
e=3Dthis.getCloseCookieName(t),i=3Dnew =
Date;i.setTime(i.getTime()+9e5),this.cookie.set(e,!0,{expires:i,path:"/"}=
)},registEvent:function(t){var =
e=3Dt.domId+"_closebtn",n=3Dthis.dom.g(e);this.dom.bind(n,"click",i.proxy=
(this,this.closeBtnOnClickHandler)),this.dom.bind(n,"mouseover",i.proxy(t=
his,this.closeBtnOnMouseOverHandler)),this.dom.bind(n,"mouseout",i.proxy(=
this,this.closeBtnOnMouseOutHandler))},closeBtnOnClickHandler:function(){=
var =
t=3Ddocument.getElementById(this.info.domId);t&&t.parentNode&&t.parentNod=
e.removeChild(t),2=3D=3D=3Dthis.info.closeType&&this.setCookieClose(this.=
info);var =
e=3D"//eclick.baidu.com/fcb.jpg?jk=3D{jk}&dt=3D{dt}&rnd=3D{rnd}",i=3D{jk:=
this.info.queryId||"",dt:(new =
Date).getTime(),rnd:Math.floor(2147483648*Math.random())};try{this.log.lo=
adImage(this.lang.template(e,i))}catch(n){}},closeBtnOnMouseOverHandler:f=
unction(){var =
t=3Dthis.info.domId+"_closebtn",e=3Dthis.dom.g(t);if(e)if("couplet"=3D=3D=
=3Dthis.info.blockType)e.style.backgroundColor=3D"#0066cc";else =
if("popup"=3D=3D=3Dthis.info.blockType||"button"=3D=3D=3Dthis.info.blockT=
ype){var =
i=3De.getElementsByTagName("div")[0];i.style.backgroundColor=3D"#0066cc";=
var =
n=3De.getElementsByTagName("a")[0];n.style.backgroundImage=3D"url(https:/=
/cpro.baidustatic.com/cpro/ui/noexpire/img/2.0.0/xuanfu_mouseover_close.p=
ng)"}},closeBtnOnMouseOutHandler:function(){var =
t=3Dthis.info.domId+"_closebtn",e=3Dthis.dom.g(t);if(e)if("couplet"=3D=3D=
=3Dthis.info.blockType)e.style.backgroundColor=3D"#999999";else =
if("popup"=3D=3D=3Dthis.info.blockType||"button"=3D=3D=3Dthis.info.blockT=
ype){var =
i=3De.getElementsByTagName("div")[0];i.style.backgroundColor=3D"#999999";=
var =
n=3De.getElementsByTagName("a")[0];n.style.backgroundImage=3D"url(https:/=
/cpro.baidustatic.com/cpro/ui/noexpire/img/2.0.1/xuanfu_close.png)"}},aut=
oClose:function(){var =
t=3Ddocument.getElementById(this.adInfo.domId);t&&t.parentNode&&t.parentN=
ode.removeChild(t)},render:function(t,e){if(this.validate(t)){this.info=3D=
t;var =
n=3Dthis.createCloseElement(t),o=3Dthis.createBlockHtmlTemplate(t),r=3D{w=
idth:t.width,height:t.height,iframe:this.frame.getFrameHTML(e),closeBtn:n=
},s=3Dthis.createContainerElementByInfo(t);s.innerHTML=3Dthis.lang.templa=
te(o,r),this.dom.g(t.domId)||document.body.insertBefore(s,document.body.f=
irstChild),this.registEvent(t);var =
a=3Dt.closeTime||0;a>0&&setTimeout(i.proxy(this,this.autoClose),1e3*a),e.=
isPdbAd||this.slot.setStatus(e.id,this.config.STATUS_FINISH)}}}),i.define=
({name:"inlayFix",namespace:"dup.ui.painter.mobile",deps:{config:"dup.com=
mon.config",lang:"dup.common.utility.lang",style:"dup.common.utility.styl=
e",dom:"dup.common.utility.dom",slot:"dup.business.slot",param:"dup.busin=
ess.param",expand:"dup.ui.painter.expand",monitor:"dup.business.monitor",=
frame:"dup.business.frame",richMaterial:"dup.ui.painter.richMaterial",lan=
dingPage:"dup.ui.painter.landingPage"},$inlayFix:function(){this.win=3Dwi=
ndow},processSlotInfo:function(t){var =
e=3D{},i=3Dt.response.placement,n=3Di.container,o=3D(i.fillstyle,n.sizeTy=
pe),r=3Dn.width,s=3Dn.height;if(t.styleOpenApi.scale){o=3D2;var =
a=3Dt.styleOpenApi.scale,d=3Da.split(".");r=3Dd[0],s=3Dd[1]}if(1=3D=3D=3D=
o)e.width=3Dr,e.height=3Ds;else =
if(2=3D=3D=3Do||5=3D=3D=3Do){t.pcwd||t.ftpc?(e.wScale=3Dt.pcwd||"-1",t.st=
yleOpenApi.cpro_ftpc=3D"true"):e.wScale=3Dr,t.pchd?e.hScale=3Dt.pchd:e.hS=
cale=3Ds;var =
l=3D{},c=3Dt.styleOpenApi.cpro_ftpc||"true"=3D=3D=3Dt.styleOpenApi.cpro_f=
tpc||"-1"=3D=3D=3De.wScale;c=3D5=3D=3D=3Do?!0:c;var =
h=3Dthis.dom.g(t.containerId);c&&h&&h.parentElement.clientWidth&&(l.width=
=3Dh.parentElement.clientWidth||0),"-1"=3D=3D=3De.hScale&&h&&h.parentElem=
ent&&(l.height=3Dh.parentElement.clientHeight||0);var =
u=3Dthis.param.translateScaleToPixelSize(e.wScale,e.hScale,l);n.width=3Du=
.width,n.height=3Du.height,t.width=3Du.width,t.height=3Du.height,e.width=3D=
u.width,e.height=3Du.height}else if(3=3D=3D=3Do){var =
p=3Dthis.getCurViewportWidth(r);n.width=3Dt.width=3De.width=3Dp,n.height=3D=
t.height=3De.height=3Ds}e.sizeType=3Do;var =
m=3Dt.styleOpenApi,f=3Dm.cpro_w||m.rsi0||0,g=3Dm.cpro_h||m.rsi1||0;return=
(f||g)&&(e.width=3Df||this.getCurViewportWidth(r),e.height=3Dg||s,t.width=
=3De.width,t.height=3De.height),e},getCurViewportWidth:function(t){var =
e=3Dthis.isUnionPreview?t:Math.max(320,this.win.innerWidth);return =
isNaN&&isNaN(e)&&(e=3Dthis.style.getClientWidth()),e},parseHtmlSnippet:fu=
nction(t){var e=3D['<div style=3D"box-sizing: =
content-box;width:{width}px;height:{height}px;position:relative;margin:0 =
auto;">',"{closeBtnHtml}","{iframeHtml}","</div>"].join("");return =
this.lang.template(e,t)},decorateContainer:function(t,e){if(t){var =
i=3Dt.style;i.cssText=3D["box-sizing: =
content-box;","text-align:center;","display:block;","font-size:0;","width=
:100%;","height:"+e.height+"px;"].join("")}},validate:function(t){return!=
0},render:function(t){if(this.slot.setStatus(t.id,this.config.STATUS_REND=
ERED),this.validate(t)){if(!this.slot.adInfoIsAvailable(t))return!1;this.=
monitor.sendLog(t),t.displayType=3D"inlay-mobile";var =
e=3Dthis.dom.g(t.containerId);if(e){this.monitor.sendLog(t);var =
i=3Dthis.richMaterial.render(t),n=3Dthis;if(i)return =
void(this.supportPostMessage&&setTimeout(function(){n.expand.fire("adload=
ed",t.id)},800));this.landingPage.activate(t);var =
o=3Dthis.processSlotInfo(t);if(this.decorateContainer(e,o),t.width=3Do.wi=
dth,t.height=3Do.height,2=3D=3D=3Do.sizeType||5=3D=3D=3Do.sizeType){var =
r=3Dt.response.pdb_deliv.deliv_des;if(r&&r._html){r=3Dr._html;var =
s=3Dr.type;"text"!=3D=3Ds&&"image"!=3D=3Ds&&"flash"!=3D=3Ds||(r.width=3Dt=
.width,r.height=3Dt.height)}}var =
a=3D{id:t.id,width:o.width,height:o.height,closeBtnHtml:"",iframeHtml:thi=
s.frame.getFrameHTML(t)},d=3Dthis.parseHtmlSnippet(a);e.innerHTML=3Dd,t.i=
sPdbAd||this.slot.setStatus(t.id,this.config.STATUS_FINISH)}}}}),i.define=
({name:"float",namespace:"dup.ui.painter.mobile",deps:{config:"dup.common=
.config",lang:"dup.common.utility.lang",style:"dup.common.utility.style",=
dom:"dup.common.utility.dom",cookie:"dup.common.utility.cookie",slot:"dup=
.business.slot",frame:"dup.business.frame",monitor:"dup.business.monitor"=
,richMaterial:"dup.ui.painter.richMaterial",painter:"dup.ui.painter.mobil=
e.inlayFix",hiddenFloatAd:"dup.ui.painter.hiddenFloatAd"},$float:function=
(){},"float":function(){},processSlotInfo:function(t){var =
e=3Dt.response.placement,i=3De.container,n=3De.fillstyle,o=3DparseFloat(n=
.opacity||.9),r=3Dn.backgroundColor||"#000",s=3Dthis.painter.processSlotI=
nfo(t);s.backgroundOpacity=3Do,s.backgroundColor=3Dr;var =
a=3Di.location;return =
2!=3D=3Da&&3!=3D=3Da&&(a=3D3),s.locationType=3Da,s.containerId=3Dt.contai=
nerId,s.closeType=3Di.closeType,s},parseHtmlSnippet:function(t){var =
e=3D['<div =
style=3D"width:{width}px;height:{height}px;position:relative;margin:0 =
auto;">',"{closeBtnHtml}","{iframeHtml}","</div>"].join("");return =
this.lang.template(e,t)},parseCloseBtnLayoutData:function(t){var =
e=3D40,i=3D40,n=3D0,o=3D"",r=3DMath.max(document.documentElement.clientWi=
dth,window.innerWidth||0);e=3Dr*(1/8),i=3D.4*e,n=3D16*(e/50);var =
s=3D0;2=3D=3D=3Dt.locationType?(o=3D4,s=3Dt.height):3=3D=3D=3Dt.locationT=
ype&&(o=3D3,s=3D"-"+i);var =
a=3D{domId:t.containerId,right:n,top:s,closeBtnWidth:""+e,closeBtnHeight:=
i,closeBtnImgUrl:"https://cpro.baidustatic.com/cpro/ui/noexpire/img/2.0.0=
/xuantingClose"+o+".png"};return a},parseCloseButtonHtml:function(t){var =
e=3D["<div",' id=3D"{domId}_closebtn"',' style=3D"',"box-sizing: =
content-box;","position:absolute;","right:0px;","top:{top}px;","width:{cl=
oseBtnWidth}px;","height:{closeBtnHeight}px;","overflow:hidden;","display=
:block;","background:url('{closeBtnImgUrl}') no-repeat 0 =
0;","_filter:progid:DXImageTransform.","Microsoft.AlphaImageLoader(","ena=
bled=3Dtrue,"," sizingMethod=3Dnone,"," =
src=3D'{closeBtnImgUrl}');","_background:none;","cursor:pointer;","backgr=
ound-position:center;","background-size:100% =
100%;",'z-index:2147483647;">&nbsp;</div>'].join(""),i=3Dthis.parseCloseB=
tnLayoutData(t);return =
this.lang.template(e,i)},decorateContainer:function(t,e){if(t){var =
i=3D"absolute";this.style.canFixed()&&(i=3D"fixed");var =
n=3D"";2=3D=3D=3De.locationType?n=3D"top":3=3D=3D=3De.locationType&&(n=3D=
"bottom");var =
o=3D0;"absolute"=3D=3D=3Di&&(o=3Dthis.style.getScrollTop(window)+this.sty=
le.getClientHeight(window)-e.height);var =
r=3Dt.style;r.cssText=3D["box-sizing: =
content-box;","position:"+i,"z-index:2147483647;",n+":"+o,"background-col=
or:"+e.backgroundColor,"opacity:"+e.backgroundOpacity,"text-align:center"=
,"display:block","font-size:0","width:100%","height:"+e.height+"px"].join=
(";")}},getCloseCookieKey:function(t){return"bd_close_"+t.id},closeBtnOnC=
lickHandler:function(t,e){var =
i=3Dthis.dom.g(e.containerId);if(i&&i.parentNode&&i.parentNode.removeChil=
d(i),2=3D=3D=3De.closeType){var =
n=3D"bd_close_"+this.id,o=3D{path:""};this.cookie.set(n,!0,o)}},validate:=
function(t){var =
e=3D"bd_close_"+this.id,i=3Dthis.cookie.get(e,window);return =
2!=3D=3Dt.closeType||!i},render:function(t){if(!this.slot.adInfoIsAvailab=
le(t))return!1;this.slot.setStatus(t.id,this.config.STATUS_RENDERED),this=
.id=3Dt.id,t.displayType=3D"inlay-mobile";var =
e=3Dthis.processSlotInfo(t);if(this.validate(e)){this.monitor.sendLog(t);=
var n=3Dthis.richMaterial.render(t);if(!n){var =
o=3Dthis.dom.g(t.containerId);if(o){this.decorateContainer(o,e),t.width=3D=
e.width,t.height=3De.height;var =
r=3Dthis.parseCloseButtonHtml(e);if(2=3D=3D=3De.sizeType){var =
s=3Dt.response.pdb_deliv.deliv_des;if(s&&s._html){s=3Ds._html;var =
a=3Ds.type;"text"!=3D=3Da&&"image"!=3D=3Da&&"flash"!=3D=3Da||(s.width=3Dt=
.width,s.height=3Dt.height)}}var =
d=3D{id:t.id,width:e.width,height:e.height,closeBtnHtml:r,iframeHtml:this=
.frame.getFrameHTML(t)},l=3Dthis.parseHtmlSnippet(d);o.innerHTML=3Dl;var =
c=3Dthis.dom.g(t.containerId+"_closebtn");c&&this.dom.bind(c,"click",i.pr=
oxy(this,this.closeBtnOnClickHandler,t)),this.hiddenFloatAd.render(t),t.i=
sPdbAd||this.slot.setStatus(t.id,this.config.STATUS_FINISH)}}}}}),i.defin=
e({name:"clbDelivery",namespace:"dup.business.delivery",deps:{slot:"dup.b=
usiness.slot",frame:"dup.business.frame","interface":"dup.business.interf=
ace",config:"dup.common.config",log:"dup.common.utility.log",origentation=
:"dup.business.origentation",data:"dup.common.utility.data"},clbSlotArr:{=
BAIDU_CLB_fillSlot:!0,BAIDU_CLB_singleFillSlot:!0,BAIDU_CLB_fillSlotWithS=
ize:!0,BAIDU_CLB_fillSlotAsync:!0,BAIDU_CLB_preloadSlots:!0},launch:funct=
ion(){var t;try{var =
e=3Dwindow.BAIDU_CLB_SLOT_ID;window.BAIDU_CLB_SLOT_ID=3Dnull,e&&(t=3Dthis=
.slot.createSlot({slotId:e,productLine:"clb",isAsync:!1}),this.slot.addSl=
ot(t),this.slot.process());for(var n in =
this.clbSlotArr)"BAIDU_CLB_preloadSlots"=3D=3D=3Dn?this.data.defineOnce(n=
,i.proxy(this,this.reSet)):this.data.defineOnce(n,i.proxy(this,this.getCl=
bFillSlot));this.updateApi()}catch(o){}},reSet:function(){},getClbFillSlo=
t:function(t,e){var =
i;t&&!e&&(i=3Dthis.slot.createSlot({slotId:t,productLine:"clb",isAsync:!1=
})),t&&e&&(i=3Dthis.slot.createSlot({slotId:t,productLine:"clb",isAsync:!=
0}),i.containerId=3De),this.slot.addSlot(i),this.slot.process()},updateAp=
i:function(){try{this.data.defineOnce("BAIDU_CLB_prepareMoveSlot",i.proxy=
(this,this.prepareMove)),this.data.defineOnce("BAIDU_DUP_addSlotStatusCal=
lback",i.proxy(this.origentation,this.origentation.addSlotStatusCallback)=
),this.data.defineOnce(this.config.DUP_PREFIX+"renderFrame",i.proxy(this.=
frame,this.frame.renderFrame)),this.data.defineOnce("BAIDU_CLB_setConfig"=
,i.proxy(this.data,this.data.putConfig)),this.data.defineOnce("BAIDU_CLB_=
addOrientation",i.proxy(this.origentation,this.origentation.addOrientatio=
n)),this.data.defineOnce("BAIDU_CLB_addOrientationOnce",i.proxy(this.orig=
entation,this.origentation.addOrientationOnce)),this.data.defineOnce("BAI=
DU_CLB_setOrientationOnce",i.proxy(this.origentation,this.origentation.se=
tOrientationOnce)),this.data.defineOnce("BAIDU_CLB_addSlot",i.proxy(this,=
this.reSet)),this.data.defineOnce("BAIDU_CLB_enableAllSlots",i.proxy(this=
,this.reSet)),this.data.defineOnce("BAIDU_CLB_SETHTMLSLOT",i.proxy(this,t=
his.reSet))}catch(t){}},prepareMove:function(t){try{for(var =
e=3D0,i=3Dt+"_"+e;this.slot.getSlotInfo(i)&&0!=3D=3Dthis.slot.getSlotInfo=
(i)[0];){var =
n=3Dthis.slot.getSlotInfo(i);this.slot.clearStatus(n,this.config.STATUS_F=
INISH),i=3Dt+"_"+ =
++e}}catch(o){}}}),i.define({name:"inlayFix",namespace:"dup.ui.painter",d=
eps:{config:"dup.common.config",dom:"dup.common.utility.dom",slot:"dup.bu=
siness.slot",frame:"dup.business.frame",viewWatch:"dup.business.viewWatch=
",richMaterial:"dup.ui.painter.richMaterial",monitor:"dup.business.monito=
r",expand:"dup.ui.painter.expand",event:"dup.common.utility.event",lang:"=
dup.common.utility.lang",browser:"dup.common.utility.browser",deliveryLim=
it:"dup.business.deliveryLimit"},$inlayFix:function(){this.supportPostMes=
sage=3D!(this.browser.ie&&this.browser.ie<8)},bindEvent4Expand:function(t=
){var =
e=3Dthis.dom.g(t.containerId),i=3Dthis;this.event.bind(e,"mouseover",func=
tion(e){var =
n=3De.target||e.srcElement;"iframe"!=3D=3Dn.tagName.toLowerCase()&&"ifram=
e"!=3D=3Dn.nodeName.toLowerCase()||i.expand.fire("mouseover",t.id)})},val=
idate:function(t){if("union"=3D=3D=3Dt.productLine){var =
e=3Dthis.deliveryLimit.getSlotType(t),i=3Dthis.deliveryLimit.validate(t);=
return =
i&&this.deliveryLimit.setAdsCount(e,t.containerId),i}return!0},render:fun=
ction(t){this.slot.setStatus(t.id,this.config.STATUS_RENDERED);var =
e=3Dthis.dom.g(t.containerId);if(!this.slot.adInfoIsAvailable(t))return =
this.slot.setStatus(t.id,this.config.STATUS_FINISH),!1;t.displayType=3D"i=
nlay";var =
i=3Dnull=3D=3Dt.response?null:t.response.placement.container.slide,n=3D!(=
!i||this.lang.isEmptyObj(i)||!this.supportPostMessage);if(n&&(this.expand=
.observer(t),this.bindEvent4Expand(t)),this.validate(t)){this.monitor.sen=
dLog(t);var o=3Dthis.richMaterial.render(t),r=3Dthis;if(o)return =
void(this.supportPostMessage&&setTimeout(function(){r.expand.fire("adload=
ed",t.id)},800));if(!e)return void this.slot.addErrorInfo(t,"container =
dom not founded");var =
s=3Dthis.frame.getFrameHTML(t);e.innerHTML=3Ds,this.viewWatch.regisetView=
Watch(t),t.isPdbAd||this.slot.setStatus(t.id,this.config.STATUS_FINISH),n=
&&setTimeout(function(){r.expand.fire("adloaded",t.id)},800)}}}),i.define=
({name:"float",namespace:"dup.ui.painter",deps:{config:"dup.common.config=
",dom:"dup.common.utility.dom",lang:"dup.common.utility.lang",frame:"dup.=
business.frame",slot:"dup.business.slot",richMaterial:"dup.ui.painter.ric=
hMaterial",monitor:"dup.business.monitor",expand:"dup.ui.painter.expand",=
floatBlock:"dup.ui.painter.floatBlock",viewWatch:"dup.business.viewWatch"=
},GAP:5,NORMAL_CLOSE_BTN_HEIGHT:17,COUPLET_CLOSE_BTN_HEIGHT:20,validate:f=
unction(t){var =
e=3Dt.response.placement,i=3De.container,n=3Di.floated;if(this.dom.isInIf=
rame(window))return!1;var o=3DparseInt(n.clientw||0,10);return =
o>4095&&(o=3D4095),!(o>=3Dscreen.width)},processSlotInfo:function(t){var =
e=3Dt.response.placement,i=3De.container,n=3Di.floated,o=3Dn.dockType,r=3D=
i.closeType,s=3Di.closeTime||0,a=3Dn.vspace||0,d=3Dn.hspace||0,l=3Dt.resp=
onse.rtb_deliv.deliv_id&&t.response.order_deliv.deliv_id,c=3Dt.width||i.w=
idth,h=3Dt.height||i.height,u=3D+c,p=3D+h,m=3D["default","couplet","butto=
n","popup"],f=3DparseInt(n.blockType||0,10),g=3Dm[f];"default"!=3D=3Dg&&(=
u+=3D2*this.GAP+1,p+=3D2*this.GAP+1),p+=3D"couplet"=3D=3D=3Dg?this.COUPLE=
T_CLOSE_BTN_HEIGHT:"button"=3D=3D=3Dg||"popup"=3D=3D=3Dg?this.COUPLET_CLO=
SE_BTN_HEIGHT+this.GAP:this.NORMAL_CLOSE_BTN_HEIGHT;var =
y=3Di.location,v=3D"",w=3D"";switch(y){case =
1:v=3D"center",w=3D"center";break;case 2:v=3D"top";break;case =
3:v=3D"bottom";break;case 4:w=3D"left";break;case =
5:w=3D"right";break;case 7:v=3D"top",w=3D"left";break;case =
8:v=3D"top",w=3D"right";break;case 9:v=3D"bottom",w=3D"left";break;case =
10:v=3D"bottom",w=3D"right"}0=3D=3D=3Da&&"button"=3D=3D=3Dg?(v=3D"bottom"=
,a=3D40):0=3D=3D=3Da&&"couplet"=3D=3D=3Dg&&(v=3D"top",a=3D150);var =
b=3Dt.response.queryid,I=3D{id:t.id,domId:t.containerId,width:c,height:h,=
containerWidth:u,containerHeight:p,verticalType:v,horizontalType:w,follow=
Type:n.follow||1,blockType:g,dockType:o,closeType:r,closeTime:s,vSpace:a,=
hSpace:d,contentWidth:n.contw,isRTB:l,queryId:b,productLine:t.productLine=
};return =
I},render:function(t){if(this.validate(t)){if(this.slot.setStatus(t.id,th=
is.config.STATUS_RENDERED),!this.slot.adInfoIsAvailable(t))return!1;t.dis=
playType=3D"float",this.monitor.sendLog(t);var =
e=3Dthis.richMaterial.render(t);if(!e){var n=3D[];n.push(t);var =
o=3Dt.response.placement,r=3Do.container,s=3DparseInt(r.location||0,10);i=
f(6=3D=3D=3Ds){n=3D[];var =
a=3Dthis.slot.cloneSlot(t),d=3Dthis.slot.cloneSlot(t);a.response.placemen=
t.container.location=3D5,a.containerId=3Da.containerId+"_right",this.slot=
.addSlot(a),n.push(a),d.response.placement.container.location=3D4,d.conta=
inerId=3Dd.containerId+"_left",this.slot.addSlot(d),n.push(d)}for(var =
l=3D0,c=3Dn.length;c>l;l++){var =
h=3Dn[l],u=3Di.create(this.floatBlock);u.render(this.processSlotInfo(h),h=
)}this.viewWatch.regisetViewWatch(t)}}}}),i.define({name:"main",namespace=
:"dup.ui.delivery",deps:{config:"dup.common.config",slot:"dup.business.sl=
ot",fingerPrint:"dup.business.fingerPrint",data:"dup.common.utility.data"=
,storage:"dup.common.utility.storage",loader:"dup.common.loader",painterS=
elector:"dup.business.painterSelector",origentation:"dup.business.origent=
ation",param:"dup.business.param",detect:"dup.business.detect","interface=
":"dup.business.interface",log:"dup.common.utility.log",scene:"dup.busine=
ss.sceneTactics",clbDelivery:"dup.business.delivery.clbDelivery",unionDel=
ivery:"dup.business.delivery.unionDelivery",dupDelivery:"dup.business.del=
ivery.dupDelivery",standardDelivery:"dup.business.delivery.standardDelive=
ry",inlayFixPainter:"dup.ui.painter.inlayFix",floatPainter:"dup.ui.painte=
r.float",mobileInlayFixPainter:"dup.ui.painter.mobile.inlayFix",mobileFlo=
atPainter:"dup.ui.painter.mobile.float"},process:function(){this.prepareA=
pi(),this.unionDelivery.launch(),this.dupDelivery.launch(),this.clbDelive=
ry.launch(),this.standardDelivery.launch(),this.fingerPrint.start()},prep=
areApi:function(){this["interface"].register("addOrientation",this.origen=
tation,this.origentation.addOrientation),this["interface"].register("addO=
rientationOnce",this.origentation,this.origentation.addOrientationOnce),t=
his["interface"].register("setOrientationOnce",this.origentation,this.ori=
gentation.setOrientationOnce),this.data.defineOnce(this.config.LOADER_DEF=
INE_NAME,i.proxy(this,this.callback))},callback:function(t){try{var =
e=3Dthis.slot.getSlotInfo(t.tuid);e.response=3Dt,this.slot.setStatus(e.id=
,this.config.STATUS_RESPONSE),this.slot.processSlot(e),e.timestampWatcher=
.t3=3D(new =
Date).getTime(),this.slot.adInfoStorage(e),this.param.processExtendsParam=
(e);var =
n=3Dthis.painterSelector.getPainter(e),o=3Di.using(n);o?o.render(e):n&&th=
is.loader.load(e.id,n,i.proxy(this,this.painterLoadedCallback,n,e))}catch=
(r){var =
s=3DencodeURIComponent(r),a=3D{type:"elog",pos:"callback",id:t.tuid,mes:s=
};this.log.monitorLog(a)}},painterLoadedCallback:function(t,e){var =
n=3Di.using(t);n&&n.render(e)}});var =
o=3Di.using("dup.ui.delivery.main");o.process()}()}catch(e){var =
url=3D["//eclick.baidu.com/se.jpg?","type=3DfatalError","mes=3D"+encodeUR=
IComponent(e)].join("&"),img=3Dnew Image;img.src=3Durl}
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/comment.js

=EF=BB=BFvar list =3D []; //=E8=AF=84=E8=AE=BA=E5=88=97=E8=A1=A8
var editorId =3D "#comment_content";
var verifycodeId =3D "#img_verifycode";
var listId =3D "#comment_list";

$(document).ready(init_comment);

function init_comment() {
    load_comment_form();

    editor =3D $(editorId);

    var editor_inter =3D null;
    if (editor.length > 0) {
       // var v =3D ["html", "objc", "javascript", "css", "php", =
"csharp", "cpp", "java", "python", "ruby", "vb", "delphi", "sql", =
"plain"];
       // var k =3D ["HTML/XML","Objective-C", "JavaScript", "CSS", =
"PHP", "C#", "C++", "Java", "Python", "Ruby", "Visual Basic", "Delphi", =
"SQL", "=E5=85=B6=E5=AE=83"];
       // for (var i =3D 0; i < v.length; i++) {
      //      $("#lang_list").append('<a href=3D"#' + v[i] + '">' + k[i] =
+ '</a>');
        // }
        $("#lang_list").append('<a class=3D"long_name" =
href=3D"#html">HTML/XML</a><a class=3D"long_name" =
href=3D"#objc">objective-c</a><a class=3D"zhong_name" =
href=3D"#delphi">Delphi</a><a  class=3D"zhong_name" =
href=3D"#ruby">Ruby</a><a href=3D"#php">PHP</a><a class=3D"duan_name" =
href=3D"#csharp">C#</a><a style=3D" border-right: none;"  =
class=3D"duan_name" href=3D"#cpp">C++</a><a style=3D" =
border-bottom:none;"class=3D"long_name" =
href=3D"#javascript">JavaScript</a><a style=3D" border-bottom:none;" =
class=3D"long_name" href=3D"#vb">Visual Basic</a><a style=3D" =
border-bottom:none;" class=3D"zhong_name" href=3D"#python">Python</a><a =
style=3D" border-bottom:none;" class=3D"zhong_name" =
href=3D"#java">Java</a><a style=3D"border-bottom:none;" =
class=3D"duan_name" href=3D"#css">CSS</a><a =
style=3D"border-bottom:none;" class=3D"duan_name" =
href=3D"#sql">SQL</a><a style=3D"border:none;"  class=3D"duan_name" =
href=3D"#plain">=E5=85=B6=E5=AE=83</a>');
        editor.focus(function () {
            editor_inter =3D setInterval(function () {
                commentTip("=E8=BF=98=E8=83=BD=E8=BE=93=E5=85=A5" + =
(1000 - editor.val().length) + "=E4=B8=AA=E5=AD=97=E7=AC=A6");
            }, 200);
        }).blur(function () {
            if (editor_inter) clearInterval(editor_inter);
        });
    }

    //=E5=8A=A0=E8=BD=BD=E5=88=97=E8=A1=A8
    loadList(1);
}
function noComments() {
    $(listId).html('<br =
/>&nbsp;&nbsp;=E6=9A=82=E6=97=A0=E8=AF=84=E8=AE=BA<br /><br /><div =
class=3D"clear"></div>');
}
function loadList(pageIndex, isSub) {
    if (commentscount =3D=3D 0) {
        noComments();
        return;
    }
    pageIndex =3D parseInt(pageIndex) || 1;

    =
$("#comments_bar").html("=E6=AD=A3=E5=9C=A8=E5=8A=A0=E8=BD=BD=E8=AF=84=E8=
=AE=BA...");
    //var cmtUrl =3D "../../comment/list/" + fileName + "?page=3D" + =
(pageIndex || 1);
    var url =3D location.href.toString().split('/');
    var cmtUrl =3D "http://"+url[2]+"/"+url[3]+"/comment/list/" + =
fileName + "?page=3D" + (pageIndex || 1);
    if (isSub) cmtUrl +=3D "&_" + Math.random();
    $.get(cmtUrl, function (json) {

        if (!json) {
            noComments();
            return;
        }
        var data =3D (typeof json =3D=3D 'object') ? json : eval("(" + =
json + ")");
        if (isSub) list =3D data.list;
        else list =3D list.concat(data.list);

        var listHtml =3D '';

        //=E6=9E=84=E9=80=A0=E4=B8=BB=E9=A2=98
        var topics =3D getTopics(list);

        var total =3D data.total > 0 ? data.total : topics.length;
        //=E7=BB=84=E8=A3=85HTM
        for (var i =3D 0; i < topics.length; i++) {
            var comment =3D topics[i];
            var layer =3D total - i;

            listHtml +=3D getItemHtml(comment, layer);
        }
        listHtml +=3D '<div class=3D"clear"></div>';
        //=E8=BE=93=E5=87=BA=E5=88=97=E8=A1=A8
        $(listId).html(listHtml);
        =
//=E9=AB=98=E4=BA=AE=E8=AF=84=E8=AE=BA=E4=B8=AD=E7=9A=84=E4=BB=A3=E7=A0=81=
=E6=AE=B5
        dp.SyntaxHighlighter.HighlightAll('code2');
        //=E5=B1=95=E7=A4=BA=E6=98=B5=E7=A7=B0
        new CNick(listId + ' a.username').showNickname();

        //=E5=88=86=E9=A1=B5=E5=A4=84=E7=90=86
        if (data.page.PageIndex >=3D data.page.PageCount) {
            $("#comment_bar").hide();
        } else {
            $("#comment_bar").html('<div id=3D"load_comments" page=3D"' =
+ (pageIndex + 1) + =
'">=E6=9F=A5=E7=9C=8B=E6=9B=B4=E5=A4=9A=E8=AF=84=E8=AE=BA</div>');
        }
        //=E6=B7=BB=E5=8A=A0=E6=8C=89=E9=92=AE=E4=BA=8B=E4=BB=B6
        setBtnEvent();
    });
};

//=E8=8E=B7=E5=8F=96=E8=AF=84=E8=AE=BA=E4=B8=BB=E9=A2=98
function getTopics(list) {
    var topics =3D [];
    for (var i =3D 0; i < list.length; i++) {
        var t =3D list[i];
        if (t.ParentId =3D=3D 0) {
            t.Replies =3D getReplies(t, list);
            topics.push(t);
        }
    }
    return topics;
}
//=E8=8E=B7=E5=8F=96=E8=AF=84=E8=AE=BA=E5=9B=9E=E5=A4=8D
function getReplies(item, list) {
    var replies =3D [];
    for (var i =3D 0; i < list.length; i++) {
        var r =3D list[i];
        if (r.ParentId =3D=3D item.CommentId) {
            r.Replies =3D getReplies(r, list);
            replies.push(r);
        }
    }
    return replies;
}
//=E8=8E=B7=E5=8F=96=E8=AF=84=E8=AE=BA=E7=9A=84HTML
function getItemHtml(comment, index, floor, deep) {
    if (!deep) deep =3D 0;
    var sty =3D deep > 3 ? ' style=3D"margin-left:0;"' : '';
    var html =3D '<dl class=3D"comment_item comment_' + =
(comment.ParentId > 0 ? "reply" : "topic") + '" =
id=3D"comment_item_{id}"' + sty + '>' +
		'<dt class=3D"comment_head" floor=3D' + (floor || index) + '>' + =
(comment.ParentId > 0 ? "Re:" : index + '=E6=A5=BC') + ' <span =
class=3D"user">';

    if (comment.UserName !=3D null && comment.UserName !=3D '')
        html +=3D '<a class=3D"username" href=3D"/' + comment.UserName + =
'" target=3D"_blank">' + comment.UserName + '</a>';
    else
        html +=3D '[=E6=B8=B8=E5=AE=A2]';

    html +=3D " <span class=3D'ptime'>" + comment.PostTime + =
"=E5=8F=91=E8=A1=A8</span> ";
    html +=3D ' <a href=3D"#reply" class=3D"cmt_btn reply" =
title=3D"=E5=9B=9E=E5=A4=8D">[=E5=9B=9E=E5=A4=8D]</a> <span =
class=3D"comment_manage" style=3D"display:none;" commentid=3D{id} =
username=3D{username}> <a href=3D"#quote" class=3D"cmt_btn quote" =
title=3D"=E5=BC=95=E7=94=A8">[=E5=BC=95=E7=94=A8]</a> <a =
href=3D"#report" class=3D"cmt_btn report" =
title=3D"=E4=B8=BE=E6=8A=A5">[=E4=B8=BE=E6=8A=A5]</a>';
    if (username =3D=3D currentUserName || comment.UserName =3D=3D =
currentUserName) html +=3D ' <a href=3D"#delete" class=3D"cmt_btn =
delete" title=3D"=E5=88=A0=E9=99=A4">[=E5=88=A0=E9=99=A4]</a>';
    html +=3D '</span></dt>';
    html +=3D '<dd class=3D"comment_userface"><a href=3D"/' + =
comment.UserName + '" target=3D"_blank"><img src=3D"' + comment.Userface =
+ '" width=3D"40" height=3D"40" /></a></dd>';
    html +=3D '<dd class=3D"comment_body">' + replaceUBBToHTML(comment) =
+ '</dd>';
    html =3D html.replace(/\{id\}/g, =
comment.CommentId).replace(/\{username\}/g, comment.UserName);

    if (comment.Replies !=3D null) {
        for (var j =3D 0; j < comment.Replies.length; j++) {
            html +=3D getItemHtml(comment.Replies[j], j + 1, index, deep =
+ 1);
        }
    }
    html +=3D "</dl>";

    return html;
}
//=E8=8E=B7=E5=8F=96=E8=AF=84=E8=AE=BA=E5=AF=B9=E8=B1=A1
function getComment(commentId, list) {
    for (var i =3D 0; i < list.length; i++) {
        var comment =3D list[i];
        if (comment.CommentId =3D=3D commentId)
            return comment;
    }
    return null;
}
function setBtnEvent() {

    $("#load_comments").click(function () {
        var page =3D $(this).attr("page");
        loadList(page);
    });

    //=E8=AF=84=E8=AE=BA=E6=8C=89=E9=92=AE=E7=82=B9=E5=87=BB
    $(".comment_head a").click(function () {
        var action =3D $(this).attr("href");

        action =3D action.substring(action.lastIndexOf('#'));

        var commentId =3D $(this).parent().attr("commentid");
        switch (action) {
            case "#reply":
                if (currentUserName) {
                    commentId =3D $(".comment_manage", =
$(this).parent()).attr("commentid");
                    replyComment(commentId, list);
                    setEditorFocus();
                }
                return true;
            case "#quote":
                if (currentUserName) {
                    quoteComment(commentId, list);
                    setEditorFocus();
                }
                return true;
            case "#report":
                reportComment(commentId, this);
                break;
            case "#delete":
                deleteComment(commentId);
                break;
            default:
                return true;
        }
        return false;
    });

    $(".comment_item").mouseover(function () {
        $(".comment_manage", $(this)).eq(0).show();
    }).mouseout(function () {
        $(".comment_manage", $(this)).eq(0).hide();
    });
}
/*=E4=BD=BF=E8=AF=84=E8=AE=BA=E6=A1=86=E8=8E=B7=E5=BE=97=E7=84=A6=E7=82=B9=
*/
function setEditorFocus() {
    var val =3D editor.val();
    editor.val('');
    editor.focus();
    editor.val(val);
}
//=E5=BC=95=E7=94=A8=E8=AF=84=E8=AE=BA
function quoteComment(commentId, list) {
    var comment =3D getComment(commentId, list);
    var content =3D comment.Content;
    if (comment.Content.length > 50) {
        content =3D comment.Content.substring(0, 50) + "...";
    }
    editor.val("[quote=3D" + (comment.UserName =3D=3D null ? =
"=E6=B8=B8=E5=AE=A2" : comment.UserName) + "]" + content + =
"[/quote]\r\n");
}
//=E5=9B=9E=E5=A4=8D=E8=AF=84=E8=AE=BA
function replyComment(commentId, list) {
    var comment =3D getComment(commentId, list);
    editor.val('[reply]' + comment.UserName + "[/reply]\r\n");
    $("#comment_replyId").val(commentId);
}
//=E4=B8=BE=E6=8A=A5=E8=AF=84=E8=AE=BA
function reportComment(commentId, e) {
    report(commentId, 3, e);
}
//=E5=88=A0=E9=99=A4=E8=AF=84=E8=AE=BA
function deleteComment(commentId) {
    if =
(!confirm("=E4=BD=A0=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=88=A0=E9=99=A4=E8=BF=99=
=E7=AF=87=E8=AF=84=E8=AE=BA=E5=90=97=EF=BC=9F")) return;

    var delUrl =3D blog_address + "/comment/delete?commentid=3D" + =
commentId + "&filename=3D" + fileName;
    $.get(delUrl, function (data) {
        if (data.result =3D=3D 1) {
            $("#comment_item_" + commentId).hide().remove();
        } else {
            =
alert("=E4=BD=A0=E6=B2=A1=E6=9C=89=E5=88=A0=E9=99=A4=E8=AF=A5=E8=AF=84=E8=
=AE=BA=E7=9A=84=E6=9D=83=E9=99=90=EF=BC=81");
        }
    });
}
//=E6=9B=BF=E6=8D=A2=E8=AF=84=E8=AE=BA=E7=9A=84UBB=E4=BB=A3=E7=A0=81
function replaceUBBToHTML(comment) {
    var content =3D $.trim(comment.Content);

    var re =3D /\[code=3D([\w#\.]+)\]([\s\S]*?)\[\/code\]/ig;

    var codelist =3D [];
    while ((mc =3D re.exec(content)) !=3D null) {
        codelist.push(mc[0]);
        content =3D content.replace(mc[0], "--code--");
    }
    content =3D replaceQuote(content);
    //content =3D content.replace(/\[e(\d+)\]/g, "<img src=3D\"" + =
static_host + "/images/emotions/e$1.gif\"\/>");
    content =3D =
content.replace(/\[reply]([\s\S]*?)\[\/reply\][\r\n]{0,2}/gi, =
"=E5=9B=9E=E5=A4=8D$1=EF=BC=9A");
    content =3D =
content.replace(/\[url=3D([^\]]+)]([\s\S]*?)\[\/url\]/gi, '<a =
href=3D"$1" target=3D"_blank">$2</a>');
    content =3D =
content.replace(/\[img(=3D([^\]]+))?]([\s\S]*?)\[\/img\]/gi, '<img =
src=3D"$3" style=3D"max-width:400px;max-height:200px;" border=3D"0" =
title=3D"$2" />');
    //content =3D content.replace(/\[(\/?)(b|i|u|p)\]/ig, "<$1$2>");
    content =3D content.replace(/\r?\n/ig, "<br />");

    if (codelist.length > 0) {
        var re1 =3D /--code--/ig;
        var i =3D 0;
        while ((mc =3D re1.exec(content)) !=3D null) {
            content =3D content.replace(mc[0], codelist[i]);
            i++;
        }
    }
    content =3D =
content.replace(/\[code=3D([\w#\.]+)\]([\s\S]*?)\[\/code\]/ig, function =
(m0, m1, m2) {
        if ($.trim(m2) =3D=3D "") return '';
        return '<pre name=3D"code2" class=3D"' + m1 + '">' + m2 + =
'</pre>';
    });
    return content;
}
//=E6=9B=BF=E6=8D=A2=E8=AF=84=E8=AE=BA=E7=9A=84=E5=BC=95=E7=94=A8
function replaceQuote(str) {
    var m =3D /\[quote=3D([^\]]+)]([\s\S]*)\[\/quote\]/gi.exec(str);
    if (m) {
        return str.replace(m[0], =
'<fieldset><legend>=E5=BC=95=E7=94=A8=E2=80=9C' + m[1] + =
'=E2=80=9D=E7=9A=84=E8=AF=84=E8=AE=BA=EF=BC=9A</legend>' + =
replaceQuote(m[2]) + '</fieldset>');
    } else {
        return str;
    }
}



function load_comment_form() {
    var un =3D getcookie("UserName").toLowerCase();
    if (islock) {
        $("#comment_form").html("<div =
class=3D'notice'>=E8=AF=A5=E6=96=87=E7=AB=A0=E5=B7=B2=E8=A2=AB=E7=A6=81=E6=
=AD=A2=E8=AF=84=E8=AE=BA=EF=BC=81</div>");
    } else if (currentUserName || (un !=3D =
null&&un!=3D""&&un!=3Dundefined)) {
        var html =3D '<a name=3D"commentbox"></a><a =
name=3D"reply"></a><a name=3D"quote"></a><form action=3D"/' + username + =
'/comment/submit?id=3D' + fileName + '" method=3D"post" =
onsubmit=3D"return subform(this);">' +
		'<div class=3D"commentform"><div =
class=3D"panel_head">=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA</div>' +
		'<ul><li class=3D"left">=E7=94=A8 =E6=88=B7 =E5=90=8D=EF=BC=9A</li><li =
class=3D"right">' + currentUserName + '</li></ul>' +
		'<ul><li =
class=3D"left">=E8=AF=84=E8=AE=BA=E5=86=85=E5=AE=B9=EF=BC=9A</li><li =
class=3D"right" style=3D"position:relative;">' +
		'<div id=3D"ubbtools">' +
		'<a href=3D"#insertcode" code=3D"code"><img src=3D"' + static_host + =
'/images/ubb/code.gif" border=3D"0" =
alt=3D"=E6=8F=92=E5=85=A5=E4=BB=A3=E7=A0=81" =
title=3D"=E6=8F=92=E5=85=A5=E4=BB=A3=E7=A0=81"/></a>' +
		'</div>' +
		'<div id=3D"lang_list" style=3D"position: absolute; top: 28px; left: =
0px; display: none;"></div>' +
		'<textarea class=3D"comment_content" name=3D"comment_content" =
id=3D"comment_content" style=3D"width: 400px; height: =
200px;"></textarea>' +
		'</li></ul>' +
        '<ul><input type=3D"hidden" id=3D"comment_replyId" =
name=3D"comment_replyId" />' +
		'<input type=3D"hidden" id=3D"comment_userId" name=3D"comment_userId" =
value=3D"521203" />' +
		'<input type=3D"hidden" id=3D"commentId" name=3D"commentId" value=3D"" =
/>';	=09

        //if (isBole)
        //{
        //    html +=3D '<input type=3D"checkbox" value=3D"1" =
id=3D"boleattohome" name=3D"boleattohome" =
/>=E6=8E=A8=E8=8D=90=E5=88=B0=E9=A6=96=E9=A1=B5';
        //}
       =20
        html+=3D '<input type=3D"submit" class=3D"comment_btn" =
value=3D"=E6=8F=90=E4=BA=A4" />&nbsp;&nbsp;<span id=3D"tip_comment" =
style=3D"color: Red; display: none;"></span>' +
		'</ul></div></form>';

        $("#comment_form").html(html);
    } else {
        var curl =3D encodeURIComponent(location.href);
        $("#comment_form").html('<div =
class=3D"guest_link">=E6=82=A8=E8=BF=98=E6=B2=A1=E6=9C=89=E7=99=BB=E5=BD=95=
,=E8=AF=B7' +
		//'<a href=3D"javascript:void(0);" =
onclick=3D"javascript:csdn.showLogin(function (dat) =
{js_logined(dat.data.userName);});">[=E7=99=BB=E5=BD=95]</a>=E6=88=96' +
        '<a href=3D"javascript:void(0);" =
onclick=3D"javascript:loginbox();">[=E7=99=BB=E5=BD=95]</a>=E6=88=96' +
		'<a href=3D"http://passport.csdn.net/account/register?from=3D' + curl =
+ '">[=E6=B3=A8=E5=86=8C]</a></div>');
    }
    ubb_event();=20
}

function getcookie(name) {
    var cookie_start =3D document.cookie.indexOf(name);
    var cookie_end =3D document.cookie.indexOf(";", cookie_start);
    return cookie_start =3D=3D -1 ? '' : =
unescape(document.cookie.substring(cookie_start + name.length + 1, =
(cookie_end > cookie_start ? cookie_end : document.cookie.length)));
}

var c_doing =3D false;
function subform(e) {
    if (c_doing) return false;
    var content =3D $.trim($(editorId).val());
    if (content =3D=3D "") {
        =
commentTip("=E8=AF=84=E8=AE=BA=E5=86=85=E5=AE=B9=E6=B2=A1=E6=9C=89=E5=A1=AB=
=E5=86=99!");
        return false;
    } else if (content.length > 1000) {
        =
commentTip("=E8=AF=84=E8=AE=BA=E5=86=85=E5=AE=B9=E5=A4=AA=E9=95=BF=E4=BA=86=
=EF=BC=8C=E4=B8=8D=E8=83=BD=E8=B6=85=E8=BF=871000=E4=B8=AA=E5=AD=97=E7=AC=
=A6=EF=BC=81");
        return false;
    }
    var commentId =3D $("#commentId").val();
    =
commentTip("=E6=AD=A3=E5=9C=A8=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA...");
    var beginTime =3D new Date();
    $(editorId).attr("disabled", true);
    $("button[type=3Dsubmit]", e).attr("disabled", true);
    c_doing =3D true;
    $.ajax({
        type: "POST",
        url: $(e).attr("action"),
        data: {
            "commentid": commentId,
            "content": content,
            "replyId": $("#comment_replyId").val(),
            "boleattohome": $("#boleattohome").val()
        },
        success: function (data) {
            c_doing =3D false;
            commentTip(data.content);
            if (data.result) {
                var rcommentid=3D$("#comment_replyId").val()
                $(editorId).val('');
                $("#comment_replyId,#comment_verifycode").val('');

                commentscount++;
                loadList(1, true);
                $(editorId).attr("disabled", false);
                $("button[type=3Dsubmit]", e).attr("disabled", false);

                =
commentTip("=E5=8F=91=E8=A1=A8=E6=88=90=E5=8A=9F=EF=BC=81=E8=AF=84=E8=AE=BA=
=E8=80=97=E6=97=B6:" + (new Date() - beginTime) + "=E6=AF=AB=E7=A7=92")

                if (rcommentid!=3Dundefined && rcommentid !=3D "")
                {
                    $("html,body").animate({ scrollTop: =
$("#comment_item_" + rcommentid).offset().top }, 1000);
                }
               =20
            }
        }
    });
    return false;
}

//=E6=93=8D=E4=BD=9C=E6=8F=90=E7=A4=BA
var _c_t;
function commentTip(message) {
    $("#tip_comment").html(message).show();
    clearTimeout(_c_t);
    _c_t =3D setTimeout(function () {
        $("#tip_comment").hide();
    }, 10000);
}

function ubb_event() {
    //ubb=E6=8C=89=E9=92=AE=E4=BA=8B=E4=BB=B6
    $("#ubbtools").children().click(function () {
        var selectedValue =3D editor.selection();
        editor.focus();
        var code =3D $(this).attr("code");
        switch (code) {
            case "code":
                var lang_list =3D $("#lang_list");
                lang_list.show();
                lang_list.children().each(function () {
                    $(this).unbind("click").click(function () {
                        editor.val("[code=3D" + =
$.trim(this.href.split('#')[1]) + "]\n" + selectedValue + "\n[/code]");
                        lang_list.hide();
                    });
                });
                editor.click(function (e) {
                    lang_list.hide();
                });
                break;
            default:
                editor.val("[" + code + "]" + selectedValue + "[/" + =
code + "]");
                break;
        }
        return false;
    });
}
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://ads.csdn.net/js/async_new.js

(function (d, c) {=0A=
    var host_info =3D document.domain;=0A=
    var prefix_domain =3D '';=0A=
    if (host_info.match(/^beta*/)) {=0A=
        prefix_domain =3D 'beta';=0A=
    } else if (host_info.match(/^l[a-z]*/)) {=0A=
        prefix_domain =3D 'l';=0A=
    }=0A=
    var host_http =3D 'http://' + prefix_domain + 'ads.csdn.net/';=0A=
=0A=
    var a =3D "8c38e720de1c90a6f6ff52f3f89c4d57";=0A=
    c.reviveAsync =3D c.reviveAsync || {};=0A=
    if (!c.reviveAsync.hasOwnProperty(a)) {=0A=
        f =3D c.reviveAsync[a] =3D {=0A=
            id: Object.keys(c.reviveAsync).length,=0A=
            name: "revive",=0A=
            start: function () {=0A=
                var e =3D function () {=0A=
                    try {=0A=
                        if (!f.done) {=0A=
                            d.removeEventListener("DOMContentLoaded", e, =
false);=0A=
                            c.removeEventListener("load", e, false);=0A=
                            f.done =3D true;=0A=
                            f.apply(f.detect())=0A=
                        }=0A=
                    } catch (g) {=0A=
                        console.log(g)=0A=
                    }=0A=
                };=0A=
                if (d.readyState =3D=3D=3D "complete") {=0A=
                    setTimeout(e)=0A=
                } else {=0A=
                    d.addEventListener("DOMContentLoaded", e, false);=0A=
                    c.addEventListener("load", e, false)=0A=
                }=0A=
            },=0A=
            ajax: function (e, g) {=0A=
                /*=0A=
                 var h =3D new XMLHttpRequest();=0A=
                 h.onreadystatechange =3D function() {=0A=
                 if (this.readyState =3D=3D 4) {=0A=
                 if (this.status =3D=3D 200) {=0A=
                 //f.spc(JSON.parse(this.responseText))=0A=
                 }=0A=
                 }=0A=
                 };=0A=
                 h.open("GET", e + "?" + f.encode(g).join("&"), true);=0A=
                 h.withCredentials =3D true;=0A=
                 h.send()=0A=
                 */=0A=
                /*=0A=
                 var oHead =3D =
document.getElementsByTagName('HEAD').item(0);=0A=
                 var oScript=3D document.createElement("script");=0A=
                 oScript.type =3D "text/javascript";=0A=
                 oScript.src=3De + "?" + f.encode(g).join("&");=0A=
                 oHead.appendChild(oScript);=0A=
                 */=0A=
                //alert(1);=0A=
=0A=
            },=0A=
            encode: function (m, n) {=0A=
                var e =3D [], h, i;=0A=
                for (h in m) {=0A=
                    if (m.hasOwnProperty(h)) {=0A=
                        var l =3D n ? n + "[" + h + "]" : h;=0A=
                        if ((/string|number|boolean/).test(typeof m[h])) =
{=0A=
                            e.push(encodeURIComponent(l) + "=3D"=0A=
                            + encodeURIComponent(m[h]))=0A=
                        } else {=0A=
                            var g =3D f.encode(m[h], l);=0A=
                            for (i in g) {=0A=
                                e.push(g[i])=0A=
                            }=0A=
                        }=0A=
                    }=0A=
                }=0A=
                return e=0A=
            },=0A=
            apply: function (g_m) {=0A=
                var g =3D g_m[0];=0A=
                if (g.zones.length) {=0A=
                    var e =3D host_http + "get_ads.php";=0A=
                    g.zones =3D g.zones.join("|");=0A=
                    g.loc =3D d.location.href;=0A=
                    g.ip =3D d.ip;=0A=
                    g.iframe =3D g.iframe.join("|");=0A=
                    if (d.referrer) {=0A=
                        g.referer =3D d.referrer=0A=
                    }=0A=
                    //var aaa=3D document.getElementById("test1");=0A=
                    //alert(aaa.innerHTML);=0A=
                    //g_m[1].innerHTML =3D "aaa<script =
type=3D'text/javascript' src=3D'"+e + "?" + =
f.encode(g).join("&")+"'><\/script>";=0A=
=0A=
                    //f.ajax(e, g)=0A=
                    var span =3D document.createElement("span");=0A=
                    g_m[1] =3D g_m[1].appendChild(span);=0A=
                    if (g_m[1]) g_m[1].parentNode.removeChild(g_m[1]);=0A=
                    var scriptObj =3D document.createElement("script");=0A=
                    scriptObj.src =3D e + "?ip=3D" + =
f.GetQueryString("ip") + "&" + f.encode(g).join("&");=0A=
                    scriptObj.type =3D "text/javascript";=0A=
                    =
document.getElementsByTagName("head")[0].appendChild(scriptObj);=0A=
=0A=
                    //var sinfo =3D '{"revive-0-0":{"html":"<table =
width=3D\'150\' height=3D\'300\' border=3D\'0\' cellspacing=3D\'0\' =
cellpadding=3D\'0\' align=3D\'center\' bgcolor=3D\'#fff\' =
style=3D\'background-color:#fff;border-left:1px solid =
#e8e8e8;border-right:1px solid #e8e8e8;\'>    <tbody>     <tr =
style=3D\'vertical-align:top;\'>      <td width=3D\'150\'>&nbsp;<\/td>   =
   <td style=3D\'text-align:center;\'><img =
src=3D\'http:\/\/img.bss.csdn.net\/201511241004259379.png\' \/>       <p =
style=3D\'height:14px\'><\/p><p =
style=3D\'font-size:16px;font-family:\'\u5fae\u8f6f\u96c5\u9ed1\',\u5b8b\=
u4f53,Arial,sans-serif;line-height:22px;color:#ff9900;text-align:center;\=
'>\u56fe\u6587\u6df7\u6392\u5e7f\u544a\u6d4b\u8bd5<p> <p =
style=3D\'font-size:14px;font-family:\'\u5fae\u8f6f\u96c5\u9ed1\',\u5b8b\=
u4f53,Arial,sans-serif;line-height:22px;color:#666;text-align:left;\'>\u8=
fd9\u662f\u7b80\u5355\u7684\u56fe\u6587\u6df7\u6392\u6d4b\u8bd5<p><\/td> =
 <td width=3D\'90\'>&nbsp;<\/td>     <td width=3D\'150\' =
style=3D\'border-right:1px solid #e8e8e8;\'>&nbsp;<\/td>     <\/tr>    =
<\/tbody>  <\/table> ","width":"150","height":"300"}}';=0A=
                    //var kinfo =3D =
'{"revive-0-0":{"html":"aaabbb","width":"150","height":"300"}}';=0A=
                    //alert(sinfo);=0A=
                    //f.spc(JSON.parse(sinfo));=0A=
                }=0A=
            },=0A=
            detect: function () {=0A=
                var o =3D d.querySelectorAll("ins[data-" + f.name + =
"-id=3D'" + a=0A=
                + "']");=0A=
                var n =3D {=0A=
                    zones: [],=0A=
                    iframe: [],=0A=
                    prefix: f.name + "-" + f.id + "-"=0A=
                };=0A=
                for (var g =3D 0; g < o.length; g++) {=0A=
                    var k =3D o[g];=0A=
                    var ak =3D k;=0A=
                    if (k.hasAttribute("data-" + f.name + "-zoneid")) {=0A=
                        var l =3D new RegExp("^data-" + f.name + =
"-(.*)$"), e;=0A=
                        for (var h =3D 0; h < k.attributes.length; h++) {=0A=
                            if (e =3D k.attributes[h].name.match(l)) {=0A=
                                if (e[1] =3D=3D "zoneid") {=0A=
                                    n.zones[g] =3D k.attributes[h].value;=0A=
                                    k.id =3D n.prefix + g=0A=
                                } else {=0A=
                                    if (e[1] !=3D "id") {=0A=
                                        n[e[1]] =3D k.attributes[h].value=0A=
                                    }=0A=
                                }=0A=
                            }=0A=
                        }=0A=
                    }=0A=
                    if (ak.hasAttribute("iframe")) {=0A=
                        var al =3D new RegExp("iframe"), e;=0A=
                        for (var h =3D 0; h < ak.attributes.length; h++) =
{=0A=
                            if (e =3D ak.attributes[h].name.match(al)) {=0A=
                                if (e =3D=3D "iframe") {=0A=
                                    n.iframe[g] =3D =
ak.attributes[h].value;=0A=
                                }=0A=
                            }=0A=
                        }=0A=
                    } else {=0A=
                        n.iframe[g] =3D 'false';=0A=
                    }=0A=
                }=0A=
                var n_m =3D new Array();=0A=
                n_m[0] =3D n;=0A=
                n_m[1] =3D k;=0A=
                return n_m;=0A=
            },=0A=
            createFrame: function (h) {=0A=
                var e =3D d.createElement("IFRAME"), g =3D e.style;=0A=
                e.scrolling =3D "no";=0A=
                e.frameBorder =3D 0;=0A=
                e.width =3D h.width > 0 ? h.width : 0;=0A=
                e.height =3D h.height > 0 ? h.height : 0;=0A=
                g.border =3D 0;=0A=
                g.overflow =3D "hidden";=0A=
                return e=0A=
            },=0A=
            loadFrame: function (g, e) {=0A=
                var h =3D g.contentDocument || g.contentWindow.document;=0A=
                h.open();=0A=
                h.writeln("<!DOCTYPE html>");=0A=
                h.writeln("<html>");=0A=
                h.writeln('<head><base target=3D"_top"></head>');=0A=
                h.writeln('<body border=3D"0" margin=3D"0" =
style=3D"margin: 0; padding: 0">');=0A=
                h.writeln(e);=0A=
                h.writeln("</body>");=0A=
                h.writeln("</html>");=0A=
                h.close()=0A=
            },=0A=
            spc: function (k) {=0A=
                for (var e in k) {=0A=
                    if (k.hasOwnProperty(e)) {=0A=
                        var o =3D k[e];=0A=
                        var n =3D d.getElementById(e);=0A=
                        if (o.html) {=0A=
                            if (n) {=0A=
                                var m =3D d.createElement("div");=0A=
                                var w=3Do.width;=0A=
                                var h=3Do.height;=0A=
								m.style.width=3Dw+"px";=0A=
								m.style.height=3Dh+"px";=0A=
                                //m.style =3D "padding: 0px; margin: =
0px; border: 0px none;width:"+o.width+"px;height:"+o.height+"px";=0A=
                                //m.class =3D "J_adv";=0A=
                                m.setAttribute('class','J_adv'); =0A=
                                m.setAttribute("data-view", o.data_view);=0A=
                                m.setAttribute("data-mod", 'ad_popu_' + =
o.data_aid);//=E5=B9=BF=E5=91=8A=E4=BD=8Did=0A=
                                m.setAttribute("data-mtp", =
o.data_mod);//=E5=B9=BF=E5=91=8A=E4=BD=8D=E7=B1=BB=E5=9E=8B=0A=
                                m.setAttribute("data-order", =
o.data_order);//=E5=B9=BF=E5=91=8A=E4=BD=8D=E7=B1=BB=E5=9E=8B=0A=
                                if (o.hasOwnProperty('data_swapimg')) {=0A=
                                    m.setAttribute('data-swapimg', =
o.data_swapimg);=0A=
                                }=0A=
                                //var img =3Dnew Image();=0A=
                    			=
//img.src=3D"http://ads.csdn.net/add_num.php?mod=3Dad_popu_"+o.data_aid+"=
&ck=3D-";=0A=
                    			=0A=
                    			var adv=3D{};=0A=
                    			adv.data=3D{};=0A=
                    			var preAdr=3Dd.referrer || "-";   // =
=E5=89=8D=E4=B8=80=E4=B8=AA=E6=96=87=E6=A1=A3=E5=9C=B0=E5=9D=80=0A=
                    			adv.data.ref =3D preAdr;=0A=
                    			adv.data.mtp =3D o.data_mod;=0A=
                    			adv.data.mod =3D 'ad_popu_'+o.data_aid;=0A=
                    			adv.data.con =3D =
'ad_content_'+o.data_ideaid+',ad_order_'+o.data_order;=0A=
                    			//f.sendData(adv,"//ads.csdn.net/add_num.php?");=0A=
                    			f.sendData(adv,"//dc.csdn.net/re?");=0A=
                    			=0A=
                                m.setAttribute("data-con", 'ad_content_' =
+ o.data_ideaid);=0A=
                                m.setAttribute("class", "J_adv");=0A=
                                if (o.iframeFriendly) {=0A=
                                    var l =3D f.createFrame(o);=0A=
                                    m.appendChild(l);=0A=
                                    n.parentNode.replaceChild(m, n);=0A=
                                    f.loadFrame(l, o.html);=0A=
                                } else {=0A=
                                    m.innerHTML =3D o.html;=0A=
                                    var g =3D =
m.getElementsByTagName("SCRIPT");=0A=
                                    for (var l =3D 0; l < g.length; l++) =
{=0A=
                                        var q =3D =
document.createElement("SCRIPT");=0A=
                                        var p =3D g[l].attributes;=0A=
                                        for (var h =3D 0; h < p.length; =
h++) {=0A=
                                            q[p[h].nodeName] =3D =
p[h].value=0A=
                                        }=0A=
                                        if (g[l].innerHTML) {=0A=
                                            q.text =3D g[l].innerHTML;=0A=
                                        }=0A=
                                        m.replaceChild(q, g[l])=0A=
                                    }=0A=
                                    n.parentNode.replaceChild(m, n)=0A=
                                }=0A=
                            }=0A=
                        }=0A=
                    }=0A=
                }=0A=
=0A=
                //CSDN.track.addAdvs();=0A=
                =0A=
                 if(f.isExitsFunction('CSDN.track.addAdvs')){=0A=
                	 CSDN.track.addAdvs();=0A=
                 }=0A=
                 =0A=
            },=0A=
            =
//=E6=98=AF=E5=90=A6=E5=AD=98=E5=9C=A8=E6=8C=87=E5=AE=9A=E5=87=BD=E6=95=B0=0A=
            isExitsFunction: function (funcName) {=0A=
                try {=0A=
                    if (typeof(eval(funcName)) =3D=3D "function") {=0A=
                        return true;=0A=
                    }=0A=
                } catch (e) {=0A=
                }=0A=
                return false;=0A=
            },=0A=
            GetQueryString: function (name) {=0A=
                var reg =3D new RegExp("(^|&)" + name + =
"=3D([^&]*)(&|$)");=0A=
                var r =3D window.location.search.substr(1).match(reg);=0A=
                if (r !=3D null) return unescape(r[2]);=0A=
                else return null;=0A=
            },=0A=
            //=E8=8E=B7=E5=8F=96=E7=94=A8=E6=88=B7ID=0A=
    		getUserId:function(){=0A=
    			var result=3D/(; =
)?(UserName|_javaeye_cookie_id_)=3D([^;]+)/.exec(d.cookie);=0A=
    			var uid=3D (result !=3D null ? result[3] : void 0) || '-';=0A=
    			return uid;=0A=
    		},=0A=
    		//=E6=8F=90=E4=BA=A4=E6=95=B0=E6=8D=AE=0A=
    		sendData:function(adv,url){=0A=
    			adv.data.uid=3Df.getUserId();=0A=
    			protocol=3D"http:";=0A=
    			adv.data.ck=3D'-';=0A=
    			var dataStr=3Dthis.paramData(adv.data);=0A=
    			var img =3Dnew Image();=0A=
    			img.onload=3Dimg.onerror=3Dfunction(){=0A=
    				img.onload=3Dimg.onerror=3Dnull;=0A=
    				img=3Dnull;=0A=
    			}=0A=
				img.src=3Dprotocol+url+dataStr;=0A=
    		},=0A=
    		=
//=E6=95=B0=E6=8D=AE=E8=BD=AC=E6=8D=A2=E4=B8=BA=E5=AD=97=E7=AC=A6=E4=B8=B2=
=E5=BD=A2=E5=BC=8F=0A=
    		paramData:function(data){=0A=
    			var dataArr=3D[];=0A=
    			for(var key in data){=0A=
    				var text=3Dkey+"=3D"+data[key];=0A=
    				text.replace(/^\s+|\s+$/g,"");=0A=
    				dataArr.push(text);=0A=
    			}=0A=
    			return dataArr.join("&")=0A=
    		}=0A=
        };=0A=
        try {=0A=
            f.start()=0A=
        } catch (b) {=0A=
            console.log(b)=0A=
        }=0A=
    }=0A=
})(document, window);=0A=

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/rabbit/cnick/cnick.js

var __hasProp=3D{}.hasOwnProperty;!function(a){var =
b,c,d,e;d=3Dthis,b=3Dd.jQuery,c=3D{},a(d,c,b),void =
0=3D=3D=3Dd.csdn&&(d.csdn=3Dc);for(e in =
c)__hasProp.call(c,e)&&(d[e]=3Dd.csdn[e]=3Dc[e])}(function(a,b,c){var =
d,e,f,g,h;if(!(a.CNick instanceof Function&&a.cnick instanceof =
Function&&(null!=3D(h=3Da.csdn)?h.cnick:void 0)instanceof =
Function))return void =
0=3D=3D=3DString.prototype.trim&&(String.prototype.trim=3Dfunction(){retu=
rn this.replace(/^\s+|\s+$/g,"")}),g=3D{},e=3Dfunction(b,c){var =
d,e;return =
arguments.length>1?(g[b]=3Dc,null!=3D(d=3Da.localStorage)?d["cnick_"+b]=3D=
+new Date+","+c:void 0):null!=3Db?g[b]||function(a){var =
b,c,d,e;if(null!=3Da)return =
d=3Da.split(","),b=3Dd[0],c=3Dd[1],0<(e=3Dnew Date-new =
Date(parseInt(b,10)))&&1728e5>e?c:void =
0}(null!=3D(e=3Da.localStorage)?e["cnick_"+b]:void 0):void =
0},b.cnick=3Df=3Dfunction(b,d,f){var =
g,h,i,j,k,l,m,n,o,p;for(null=3D=3Db&&(b=3D"a.user_name"),null=3D=3Dd&&(d=3D=
a.document),null=3D=3Df&&(f=3D!1),h=3Dc(b,d).filter(function(){return =
f||null=3D=3Dc(this).data("orig_username")}).data("orig_username",""),k=3D=
{},o=3D0,p=3Dh.length;p>o;o++)g=3Dh[o],m=3Dg.innerHTML.trim(),null!=3D(l=3D=
e(m))?c(g).data("orig_username",m).text(l):(j=3Dk.hasOwnProperty(m)?k[m]:=
k[m]=3D[],j.push(g));for(n=3Dfunction(){var a;a=3D[];for(i in =
k)__hasProp.call(k,i)&&a.push(i);return =
a}();n.length>0;)c.getJSON("https://passport.csdn.net/get/nick?callback=3D=
?",{users:n.splice(0,100).join()},function(a){var =
b,d,f,g,h;if(d=3Da.status,b=3Da.data,d&&b)for(f=3D0,g=3Db.length;g>f;f++)=
h=3Db[f],m=3Dh.u,i=3Dh.n,"null"=3D=3D=3Di&&(i=3Dm),c(k[m]).data("orig_use=
rname",m).text(function(a,b){return i||b}),e(m,i)})},c(function(){return =
f()}),a.CNick=3Dd=3Dfunction(){function a(a){this.selector=3Da}return =
a.prototype.showNickname=3Dfunction(){return f(this.selector)},a}()});
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/newblog.min.js

/*plugins.js*/
;
(function($) {
    $.fn.extend({selection: function() {
        var selectedValue =3D '';
        var me =3D this[0];
        if (document.selection) {
            var range =3D document.selection.createRange();
            selectedValue =3D range.text;
        }
        else if (typeof (me.selectionStart) =3D=3D 'number') {
            var start =3D me.selectionStart;
            var end =3D me.selectionEnd;
            if (start !=3D end) {
                selectedValue =3D me.value.substring(start, end);
            }
        }
        return $.trim(selectedValue);
    },parseHtml: function(val) {
        var me =3D this[0];
        var value =3D $(this).val();
        if (document.selection) {
            var range =3D document.selection.createRange();
            if (range.text) {
                range.text =3D val;
            } else {
                $(this).val(value + val);
            }
        } else if (typeof (me.selectionStart) =3D=3D 'number') {
            var start =3D me.selectionStart;
            var end =3D me.selectionEnd;
            var startVal =3D value.substring(0, start);
            var endVal =3D value.substring(end);
            $(this).val(startVal + val + endVal);
        }
        else
            $(this).val(value + val);
        me.selectionStart =3D me.selectionEnd =3D $(this).val().length;
        me.focus();
    }});
})(jQuery);
jQuery.cookie =3D function(name, value, options) {
    if (typeof value !=3D 'undefined') {
        options =3D options || {};
        if (value =3D=3D=3D null) {
            value =3D '';
            options.expires =3D -1;
        }
        var expires =3D '';
        if (options.expires && (typeof options.expires =3D=3D 'number' =
|| options.expires.toUTCString)) {
            var date;
            if (typeof options.expires =3D=3D 'number') {
                date =3D new Date();
                date.setTime(date.getTime() + (options.expires * 24 * 60 =
* 60 * 1000));
            } else {
                date =3D options.expires;
            }
            expires =3D '; expires=3D' + date.toUTCString();
        }
        var path =3D options.path ? '; path=3D' + (options.path) : '';
        var domain =3D options.domain ? '; domain=3D' + (options.domain) =
: '';
        var secure =3D options.secure ? '; secure' : '';
        document.cookie =3D [name, '=3D', encodeURIComponent(value), =
expires, path, domain, secure].join('');
    } else {
        var cookieValue =3D null;
        if (document.cookie && document.cookie !=3D '') {
            var cookies =3D document.cookie.split(';');
            for (var i =3D 0; i < cookies.length; i++) {
                var cookie =3D jQuery.trim(cookies[i]);
                if (cookie.substring(0, name.length + 1) =3D=3D (name + =
'=3D')) {
                    cookieValue =3D =
decodeURIComponent(cookie.substring(name.length + 1));
                    break;
                }
            }
        }
        return cookieValue;
    }
};
jQuery.createMask =3D function() {
    var height =3D document.documentElement.clientHeight;
    var width =3D document.documentElement.clientWidth;
    var bodyHeight =3D $("body").height();
    if (bodyHeight > height) {
        height =3D bodyHeight;
    }
    var mask =3D {};
    if ($("#mask_div").length =3D=3D 0) {
        $("body").append('<div id=3D"mask_div" =
style=3D"position:absolute;top:0;left:0;filter:alpha(opacity=3D20);-moz-o=
pacity:0.2;opacity:.2;"></div>')
    }
    mask =3D $("#mask_div");
    mask.css({"width": width,"height": height,"background": "#000"});
};
jQuery.removeMask =3D function() {
    $("#mask_div").remove();
};
Array.prototype.contain =3D function(val) {
    for (var i =3D 0; i < this.length; i++) {
        if (this[i] =3D=3D=3D val) {
            return true;
        }
    }
    return false;
}
/*common.js*/
$(document).ready(function() {
  =20
    $("#btnSubmit").click(function () {
        var key =3D $("#inputSearch").val();
        if (key =3D=3D "") {
            =
alert("=E8=AF=B7=E8=BE=93=E5=85=A5=E6=90=9C=E7=B4=A2=E5=85=B3=E9=94=AE=E5=
=AD=97");
            $("#inputSearch").focus();
            return false;
        }
        $("#inputQ").val('blog:' + username + ' ' + key);
        return true;
    });
   =20
    initArchives();
   =20
  =20
    initDigg();
    buildCTable();
    initShareButtons();
  =20
});
function initArchives() {
    var shortlist =3D '';
    var hidelist =3D '';
    var list =3D $("#archive_list");
    list.children().each(function(i) {
        if (i < 5)
            shortlist +=3D "<li>" + $(this).html() + "</li>";
        else
            hidelist +=3D "<li>" + $(this).html() + "</li>";
    });
    if (hidelist =3D=3D '')
        return;
    hidelist =3D '<span class=3D"hidelist" style=3D"display:none;">' + =
hidelist + '</span>';
    list.html(shortlist + hidelist + '<div id=3D"archive_list_button" =
class=3D"list_closed">=E5=B1=95=E5=BC=80</div>');   =20
    $("#archive_list_button").click(function () {
        if ($(this).html() =3D=3D "=E5=B1=95=E5=BC=80"){
            $(this).html("=E6=94=B6=E8=B5=B7");
            $(this).removeClass("list_closed").addClass("list_opended");
            $(".hidelist", list).show();
        }else{
            $(this).html("=E5=B1=95=E5=BC=80");
            $(this).removeClass("list_opended").addClass("list_closed");
            $(".hidelist", list).hide();
        }
    });


}
function initShareButtons() {
    var panel =3D $("#sharePanel");
    if (panel.length =3D=3D 0)
        return;
    var url =3D encodeURIComponent(document.location);
    var title =3D encodeURIComponent(document.title);
    var shareto =3D {"sina": function() {
        var _u =3D 'http://v.t.sina.com.cn/share/share.php?url=3D' + url =
+ '&title=3D' + title;
        var imgs =3D $(".article_content img");
        if (imgs.length > 0) {
            _u +=3D "&pic=3D" + encodeURIComponent(imgs[0].src);
        }
        openWindow(_u);
    },"qq": function() {
        var _site =3D 'http://blog.csdn.net';
        var _u =3D 'http://v.t.qq.com/share/share.php?url=3D' + url + =
'&site=3D' + _site + '&title=3D' + title;
        var imgs =3D $(".article_content img");
        if (imgs.length > 0) {
            _u +=3D "&pic=3D" + encodeURIComponent(imgs[0].src);
        }
        openWindow(_u);
    }};
    =
$("#sharePanel").html('<span>=E5=88=86=E4=BA=AB=E5=88=B0=EF=BC=9A</span> =
<a name=3D"sina" class=3D"share_sina" =
title=3D"=E5=88=86=E4=BA=AB=E5=88=B0=E6=96=B0=E6=B5=AA=E5=BE=AE=E5=8D=9A"=
></a><a name=3D"qq" class=3D"share_qq" =
title=3D"=E5=88=86=E4=BA=AB=E5=88=B0=E8=85=BE=E8=AE=AF=E5=BE=AE=E5=8D=9A"=
></a>');
    $("#sharePanel a").each(function() {
        var name =3D $(this).attr("name");
        if (!name)
            return;
        $(this).click(function() {
            shareto[name]();
            return false;
        });
    });
}
function initDigg() {
    var diggdiv =3D $("#digg");
    if (diggdiv.length > 0) {
        var articleId =3D diggdiv.attr("ArticleId");
        $("#btnDigg,#btnBury").click(function () {
                if ($(this).attr("class") =3D=3D "digg digg_disable")
                {
                    return;
                }
                var id =3D $(this).attr("id");
                var action =3D id =3D=3D "btnDigg" ? "digg" : "bury";
                //blog_address =3D =
"http://dev.blog.csdn.net:5391/csdntest01";
                $.get(blog_address + "/article/" + action + =
"?ArticleId=3D" + articleId, function (data) {
                    $("#btnDigg dd").html(data.digg);
                    $("#btnBury dd").html(data.bury);                    =

                });         =20
        });
    }
}
function initBodyHeight() {
    var siderHeight =3D $("#sider").height();
    var mainHeight =3D $("#main").height();
    if (siderHeight > mainHeight) {
        $("#body").height(siderHeight);
    }
    else {
        $("#body").height(mainHeight + 100);
    }
}
function collectArticle(title, fileName) {
    openWindow("http://wz.csdn.net/storeit.aspx?t=3D" + =
encodeURIComponent(title) + "&u=3D" + blog_address + "/article/details/" =
+ fileName, title);
}
function untopArticle(articleId) {
    if =
(!confirm("=E4=BD=A0=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=8F=96=E6=B6=88=E7=BD=AE=
=E9=A1=B6=E8=BF=99=E7=AF=87=E6=96=87=E7=AB=A0=E5=90=97=EF=BC=9F"))
        return;
    $.get(blog_address + "/article/untop?articleId=3D" + articleId, =
function(txt) {
        var data =3D eval("(" + txt + ")");
        if (data.result) {
            =
alert("=E6=96=87=E7=AB=A0=E5=B7=B2=E5=8F=96=E6=B6=88=E7=BD=AE=E9=A1=B6=EF=
=BC=81");
            location.reload();
        } else {
            if (data.content)
                alert(data.content);
            else
                =
alert("=E6=97=A0=E6=B3=95=E5=8F=96=E6=B6=88=E7=BD=AE=E9=A1=B6=EF=BC=8C=E8=
=AF=B7=E5=88=B0=E5=90=8E=E5=8F=B0=E6=93=8D=E4=BD=9C=EF=BC=81");
        }
    });
}
function deleteArticle(articleId) {
    if =
(!confirm("=E4=BD=A0=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=88=A0=E9=99=A4=E8=BF=99=
=E7=AF=87=E6=96=87=E7=AB=A0=E5=90=97=EF=BC=9F"))
        return;
    $.get(blog_address + "/article/delete?articleId=3D" + articleId, =
function(txt) {
        var data =3D eval("(" + txt + ")");
        if (data.result) {
            =
alert("=E6=96=87=E7=AB=A0=E5=B7=B2=E5=88=A0=E9=99=A4=EF=BC=81");
            location.reload();
        } else {
            if (data.content)
                alert(data.content);
            else
                =
alert("=E6=97=A0=E6=B3=95=E5=88=A0=E9=99=A4=EF=BC=8C=E8=AF=B7=E5=88=B0=E5=
=90=8E=E5=8F=B0=E5=88=A0=E9=99=A4=EF=BC=81");
        }
    });
}
function openWindow(url, title) {
    var _t =3D title || encodeURI(document.title);
    var _u =3D url || encodeURIComponent(document.location);
    var f =3D function() {
        var left =3D (screen.width - 600) / 2;
        var top =3D (screen.height - 450) / 2;
        if (!window.open(url, '', =
'toolbar=3D0,resizable=3D1,scrollbars=3Dyes,status=3D1,width=3D600,height=
=3D400'))
            location.href =3D url;
    }
    if (/Firefox/.test(navigator.userAgent))
        setTimeout(f, 0);
    else
        f();
}
function report(id, t, e) {
    $.createMask();
    var url =3D blog_address + "/common/report?id=3D" + id + "&t=3D" + =
t;
    if (t =3D=3D 3) {
        var floor =3D =
e.parentNode.parentNode.parentNode.getAttribute('floor');
        url +=3D "&floor=3D" + floor;
    }
    var top =3D (document.documentElement.clientHeight - 400) / 2 + =
(document.documentElement.scrollTop || document.body.scrollTop);
    var left =3D (document.documentElement.clientWidth - 400) / 2;
    $("#report_dialog").load(url).css({"top": top + "px","left": =
left}).show();
}
function getCalendar(time) {
    $("#calendar").load(blog_address + "/Article/Calendar?time=3D" + =
time + "&.calendar");
    return false;
}
;
function buildCTable() {
    var hs =3D $('#article_content').find('h1,h2,h3,h4,h5,h6');
    if (hs.length < 2)
        return;
    var s =3D '';
    s +=3D '<div style=3D"clear:both"></div>';
    s +=3D '<div style=3D"border:solid 1px #ccc; background:#eee; =
float:left; min-width:200px;padding:4px 10px;">';
    s +=3D '<p style=3D"text-align:right;margin:0;"><span =
style=3D"float:left;">=E7=9B=AE=E5=BD=95<a href=3D"#" =
title=3D"=E7=B3=BB=E7=BB=9F=E6=A0=B9=E6=8D=AE=E6=96=87=E7=AB=A0=E4=B8=ADH=
1=E5=88=B0H6=E6=A0=87=E7=AD=BE=E8=87=AA=E5=8A=A8=E7=94=9F=E6=88=90=E6=96=87=
=E7=AB=A0=E7=9B=AE=E5=BD=95">(?)</a></span><a href=3D"#" =
onclick=3D"javascript:return openct(this);" =
title=3D"=E5=B1=95=E5=BC=80">[+]</a></p>';
    s +=3D '<ol =
style=3D"display:none;margin-left:14px;padding-left:14px;line-height:160%=
;">';
    var old_h =3D 0, ol_cnt =3D 0;
    for (var i =3D 0; i < hs.length; i++) {
        var h =3D parseInt(hs[i].tagName.substr(1), 10);
        if (!old_h)
            old_h =3D h;
        if (h > old_h) {
            s +=3D '<ol>';
            ol_cnt++;
        }
        else if (h < old_h && ol_cnt > 0) {
            s +=3D '</ol>';
            ol_cnt--;
        }
        if (h =3D=3D 1) {
            while (ol_cnt > 0) {
                s +=3D '</ol>';
                ol_cnt--;
            }
        }
        old_h =3D h;
        var tit =3D hs.eq(i).text().replace(/^\d+[.=E3=80=81\s]+/g, '');
        tit =3D tit.replace(/[^a-zA-Z0-9_\-\s\u4e00-\u9fa5]+/g, '');

        if (tit.length < 100) {
            s +=3D '<li><a href=3D"#t' + i + '">' + tit + '</a></li>';
            hs.eq(i).html('<a name=3D"t' + i + '"></a>' + =
hs.eq(i).html());
        }
    }
    while (ol_cnt > 0) {
        s +=3D '</ol>';
        ol_cnt--;
    }
    s +=3D '</ol></div>';
    s +=3D '<div style=3D"clear:both"></div>';
    $(s).insertBefore($('#article_content'));
}
function openct(e) {
    if (e.innerHTML =3D=3D '[+]') {
        $(e).attr('title', =
'=E6=94=B6=E8=B5=B7').html('[-]').parent().next().show();
    } else {
        $(e).attr('title', =
'=E5=B1=95=E5=BC=80').html('[+]').parent().next().hide();
    }
    e.blur();
    return false;
}
/*blogger.js*/
$(document).ready(function () {
   =20
    var un =3D getUN().toLowerCase();
    if (un =3D=3D _blogger.toLowerCase()) {
        $('.interact').hide();
    } else if (un) {
        set_guanzhu_status(un);
    } else {
        if (un !=3D "") {
            $('#span_add_follow')[0].onclick =3D (function() {
                loginto(0);
            });
        }
    }
   =20
});
function set_guanzhu_status(un) {
    var url =3D "http://my.csdn.net/index.php/follow/check_is_followed/" =
+ encodeURIComponent(un) + "/" + encodeURIComponent(_blogger) + =
"?jsonpcallback=3D?";
    $.getJSON(url, {}, function(data) {
        if (data.succ =3D=3D 1 && data.info =3D=3D 1) {
            $('#span_add_follow').attr('class', 'attented')[0].onclick =
=3D (function() {
                return false;
            });
        } else {
            $('#span_add_follow')[0].onclick =3D guanzhu;
        }
    }, 'json');
}
function guanzhu() {
    var url =3D =
"http://my.csdn.net/index.php/follow/do_follow?jsonpcallback=3D?";
    $.getJSON(url, {"username": _blogger}, function(data) {
        if (data.succ =3D=3D 1) {
            alert('=E5=85=B3=E6=B3=A8=E6=88=90=E5=8A=9F=EF=BC=81');
            $('#span_add_follow').attr('class', 'attented')[0].onclick =
=3D (function() {
                return false;
            });
        } else {
            alert(data.msg);
        }
    });
    return false;
}
function getUN() {
    var m =3D document.cookie.match(new RegExp("(^| =
)UserName=3D([^;]*)(;|$)"));
    if (m)
        return m[2];
    else
        return '';
}
function loginto(n) {
    if (!n) {
        csdn.showLogin(function(data) {
            js_logined(data.data.userName);
        });
    } else {
        if (!getUN()) {
            csdn.showLogin(function(data) {
                js_logined(data.data.userName);
            });
        } else {
            location =3D 'http://my.csdn.net/my/letter/send/' + =
_blogger;
        }
    }
}
function js_logined(un) {
    location =3D '?reload';
}
/*SyntaxHighlighter/shCore-src.js*/
var a, dp =3D {sh: {Toolbar: {},Utils: {},RegexLib: {},Brushes: =
{},Strings: {AboutDialog: =
'<html><head><title>About...</title></head><body =
class=3D"dp-about"><table cellspacing=3D"0"><tr><td class=3D"copy"><p =
class=3D"title">dp.SyntaxHighlighter</div><div class=3D"para">Version: =
{V}</p><p><a =
href=3D"http://www.dreamprojections.com/syntaxhighlighter/?ref=3Dabout" =
target=3D"_blank">http://www.dreamprojections.com/syntaxhighlighter</a></=
p>&copy;2004-2007 Alex Gorbatchev.</td></tr><tr><td =
class=3D"footer"><input type=3D"button" class=3D"close" value=3D"OK" =
onClick=3D"window.close()"/></td></tr></table></body></html>'},ClipboardS=
wf: =
'http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf',Ver=
sion: "1.5.1"}};
dp.SyntaxHighlighter =3D dp.sh;
dp.sh.Toolbar.Commands =3D {
    ExpandSource: {label: "+ expand source",check: function(b) {
            return b.collapse
        },func: function(b, c) {
                b.parentNode.removeChild(b);
                c.div.className =3D c.div.className.replace("collapsed", =
"");
            }
    },
    ViewSource: {label: "view plain",func: function(b, c) {
        b =3D dp.sh.Utils.FixForBlogger(c.originalCode).replace(/</g, =
"&lt;");
        c =3D window.open("", "_blank", "width=3D750, height=3D400, =
location=3D0, resizable=3D1, menubar=3D0, scrollbars=3D0");
        c.document.write('<textarea style=3D"width:99%;height:99%">' + b =
+ "</textarea>");
        c.document.close();
    }},
    CopyToClipboard: {
        label: "copy",check: function() {
            return window.clipboardData !=3D null || dp.sh.ClipboardSwf =
!=3D null
        },
        func: function(b, c) {
            //b =3D =
dp.sh.Utils.FixForBlogger(c.originalCode).replace(/</g, "&lt;");
            b =3D =
dp.sh.Utils.FixForBlogger(c.originalCode).replace(/&lt;/g, =
"<").replace(/&gt;/g, ">").replace(/&amp;/g, "&");
            if (window.clipboardData)
                window.clipboardData.setData("text", b);
            else if (dp.sh.ClipboardSwf !=3D null) {
                var d =3D c.flashCopier;
                if (d =3D=3D null) {
                    d =3D document.createElement("div");
                    c.flashCopier =3D d;
                    c.div.appendChild(d);
                }
                d.innerHTML =3D '<embed src=3D"' + dp.sh.ClipboardSwf + =
'" FlashVars=3D"clipboard=3D' + encodeURIComponent(b) + '" width=3D"0" =
height=3D"0" type=3D"application/x-shockwave-flash"></embed>';
            }
            alert("The code is in your clipboard now");
        }
    },
    PrintSource:{
        label: "print",func: function(b, c) {
            b =3D document.createElement("IFRAME");
            var d =3D null;
            b.style.cssText =3D =
"position:absolute;width:0px;height:0px;left:-500px;top:-500px;";
            document.body.appendChild(b);
            d =3D b.contentWindow.document;
            dp.sh.Utils.CopyStyles(d, window.document);
            d.write('<div class=3D"' + =
c.div.className.replace("collapsed", "") + ' printing">' + =
c.div.innerHTML + "</div>");
            d.close();
            b.contentWindow.focus();
            b.contentWindow.print();
            alert("Printing...");
            document.body.removeChild(b);
        }
    },
    About: {label: "?",func: function() {
        var b =3D window.open("", "_blank", =
"dialog,width=3D300,height=3D150,scrollbars=3D0"), c =3D b.document;
        dp.sh.Utils.CopyStyles(c, window.document);
        c.write(dp.sh.Strings.AboutDialog.replace("{V}", =
dp.sh.Version));
        c.close();
        b.focus()
    }}
};
dp.sh.Toolbar.Create =3D function(b) {
    var _code =3D b.source.className;
    var c =3D document.createElement("DIV");
    c.className =3D "tools";
    c.innerHTML =3D '<b>[' + _code + ']</b> ';
    for (var d in dp.sh.Toolbar.Commands) {
        var f =3D dp.sh.Toolbar.Commands[d];
        //   f.check !=3D null && !f.check(b) || (c.innerHTML +=3D '<a =
href=3D"#" class=3D"' + d + '" title=3D"' + f.label + '" =
onclick=3D"dp.sh.Toolbar.Command(\'' + d + "',this);return false;\">" + =
f.label + "</a>")
        if (f.label =3D=3D "print") {
            f.check !=3D null && !f.check(b) || (c.innerHTML +=3D '<span =
data-mod=3D"popu_169"> <a href=3D"#" class=3D"' + d + '" title=3D"' + =
f.label + '" onclick=3D"dp.sh.Toolbar.Command(\'' + d + "',this);return =
false;\">" + f.label + "</a></span>")
        }
        else if (f.label =3D=3D "copy") {
            f.check !=3D null && !f.check(b) || (c.innerHTML +=3D '<span =
data-mod=3D"popu_168"> <a href=3D"#" class=3D"' + d + '" title=3D"' + =
f.label + '" onclick=3D"dp.sh.Toolbar.Command(\'' + d + "',this);return =
false;\">" + f.label + "</a></span>")
        }
        else {
            f.check !=3D null && !f.check(b) || (c.innerHTML +=3D '<a =
href=3D"#" class=3D"' + d + '" title=3D"' + f.label + '" =
onclick=3D"dp.sh.Toolbar.Command(\'' + d + "',this);return false;\">" + =
f.label + "</a>")
        }
    }
    return c;
};
dp.sh.Toolbar.Command =3D function(b, c) {
    for (var d =3D c; d !=3D null && =
d.className.indexOf("dp-highlighter") =3D=3D -1; )
        d =3D d.parentNode;
    d !=3D null && dp.sh.Toolbar.Commands[b].func(c, d.highlighter)
    //console.log(dp.sh.Toolbar.Commands[b]);
};
//dp.sh.Toolbar.Command('CopyToClipboard','');
dp.sh.Utils.CopyStyles =3D function(b, c) {
    c =3D c.getElementsByTagName("link");
    for (var d =3D 0; d < c.length; d++)
        c[d].rel.toLowerCase() =3D=3D "stylesheet" && b.write('<link =
type=3D"text/css" rel=3D"stylesheet" href=3D"' + c[d].href + =
'"></link>')
};
dp.sh.Utils.FixForBlogger =3D function(b) {
    return dp.sh.isBloggerMode =3D=3D true ? =
b.replace(/<br\s*\/?>|&lt;br\s*\/?&gt;/gi, "\n") : b
};
dp.sh.RegexLib =3D {MultiLineCComments: new RegExp("/\\*[\\s\\S]*?\\*/", =
"gm"),SingleLineCComments: new RegExp("//.*$", =
"gm"),SingleLinePerlComments: new RegExp("#.*$", =
"gm"),DoubleQuotedString: new RegExp('"(?:\\.|(\\\\\\")|[^\\""\\n])*"', =
"g"),SingleQuotedString: new RegExp("'(?:\\.|(\\\\\\')|[^\\''\\n])*'", =
"g")};
dp.sh.Match =3D function(b, c, d) {
    this.value =3D b;
    this.index =3D c;
    this.length =3D b.length;
    this.css =3D d
};
dp.sh.Highlighter =3D function() {
    this.noGutter =3D false;
    this.addControls =3D true;
    this.collapse =3D false;
    this.tabsToSpaces =3D true;
    this.wrapColumn =3D 80;
    this.showColumns =3D true
};
dp.sh.Highlighter.SortCallback =3D function(b, c) {
    if (b.index < c.index)
        return -1;
    else if (b.index > c.index)
        return 1;
    else if (b.length < c.length)
        return -1;
    else if (b.length > c.length)
        return 1;
    return 0
};
a =3D dp.sh.Highlighter.prototype;
a.CreateElement =3D function(b) {
    b =3D document.createElement(b);
    b.highlighter =3D this;
    return b
};
a.GetMatches =3D function(b, c) {
    for (var d =3D null; (d =3D b.exec(this.code)) !=3D null; )
        this.matches[this.matches.length] =3D new dp.sh.Match(d[0], =
d.index, c)
};
a.AddBit =3D function(b, c) {
    if (!(b =3D=3D null || b.length =3D=3D 0)) {
        var d =3D this.CreateElement("SPAN");
        b =3D b.replace(/ /g, "&nbsp;");
        b =3D b.replace(/</g, "&lt;");
        b =3D b.replace(/(\r?\n)|(\[BR\])/gm, "&nbsp;<br>");
        if (c !=3D null)
            if (/br/gi.test(b)) {
                b =3D b.split("&nbsp;<br>");
                for (var f =3D 0; f < b.length; f++) {
                    d =3D this.CreateElement("SPAN");
                    d.className =3D c;
                    d.innerHTML =3D b[f];
                    this.div.appendChild(d);
                    f + 1 < b.length && =
this.div.appendChild(this.CreateElement("BR"))
                }
            } else {
                d.className =3D c;
                d.innerHTML =3D b;
                this.div.appendChild(d)
            }
        else {
            d.innerHTML =3D b;
            this.div.appendChild(d)
        }
    }
};
a.IsInside =3D function(b) {
    if (b =3D=3D null || b.length =3D=3D 0)
        return false;
    for (var c =3D 0; c < this.matches.length; c++) {
        var d =3D this.matches[c];
        if (d !=3D null)
            if (b.index > d.index && b.index < d.index + d.length)
                return true
    }
    return false
};
a.ProcessRegexList =3D function() {
    for (var b =3D 0; b < this.regexList.length; b++)
        this.GetMatches(this.regexList[b].regex, this.regexList[b].css)
};
a.ProcessSmartTabs =3D function(b) {
    function c(h, e, l) {
        var m =3D h.substr(0, e);
        h =3D h.substr(e + 1, h.length);
        e =3D "";
        for (var i =3D 0; i < l; i++)
            e +=3D " ";
        return m + e + h
    }
    function d(h, e) {
        if (h.indexOf(p) =3D=3D -1)
            return h;
        for (var l =3D 0; (l =3D h.indexOf(p)) !=3D -1; )
            h =3D c(h, l, e - l % e);
        return h
    }
    b =3D b.split("\n");
    for (var f =3D "", p =3D "\t", q =3D 0; q < b.length; q++)
        f +=3D d(b[q], 4) + "\n";
    return f
};
a.SwitchToList =3D function() {
    var b =3D this.div.innerHTML.replace(/<(br)\/?>/gi, =
"\n").split("\n");
    this.addControls =3D=3D true && =
this.bar.appendChild(dp.sh.Toolbar.Create(this));
    if (this.showColumns) {
        for (var c =3D this.CreateElement("div"), d =3D =
this.CreateElement("div"), f =3D 1; f <=3D 150; )
            if (f % 10 =3D=3D 0) {
                c.innerHTML +=3D f;
                f +=3D (f + "").length
            } else {
                c.innerHTML +=3D "&middot;";
                f++
            }
        d.className =3D "columns";
        d.appendChild(c);
        this.bar.appendChild(d)
    }
    f =3D 0;
    for (c =3D this.firstLine; f < b.length - 1; f++, c++) {
        d =3D this.CreateElement("LI");
        var p =3D this.CreateElement("SPAN");
        d.className =3D f % 2 =3D=3D 0 ? "alt" : "";
        p.innerHTML =3D b[f] + "&nbsp;";
        d.appendChild(p);
        this.ol.appendChild(d)
    }
    this.div.innerHTML =3D "";
};
a.Highlight =3D function(b) {
    function c(e) {
        return e.replace(/^\s*(.*?)[\s\n]*$/g, "$1")
    }
    function d(e) {
        return e.replace(/\n*$/, "").replace(/^\n*/, "")
    }
    function f(e) {
        e =3D dp.sh.Utils.FixForBlogger(e).split("\n");
        for (var l =3D new RegExp("^\\s*", "g"), m =3D 1E3, i =3D 0; i < =
e.length && m > 0; i++)
            if (c(e[i]).length !=3D 0) {
                var g =3D l.exec(e[i]);
                if (g !=3D null && g.length > 0)
                    m =3D Math.min(g[0].length, m)
            }
        if (m > 0)
            for (i =3D 0; i < e.length; i++)
                e[i] =3D e[i].substr(m);
        return e.join("\n");
    }
    function p(e, l, m) {
        return e.substr(l, m - l)
    }
    var q =3D 0;
    if (b =3D=3D null)
        b =3D "";
    this.originalCode =3D b;
    this.code =3D d(f(b));
    this.div =3D this.CreateElement("DIV");
    this.bar =3D this.CreateElement("DIV");
    this.ol =3D this.CreateElement("OL");
    this.matches =3D [];
    this.div.className =3D "dp-highlighter";
    this.div.highlighter =3D this;
    this.bar.className =3D "bar";
    this.ol.start =3D this.firstLine;
    if (this.CssClass !=3D null)
        this.ol.className =3D this.CssClass;
    if (this.collapse)
        this.div.className +=3D " collapsed";
    if (this.noGutter)
        this.div.className +=3D " nogutter";
    if (this.tabsToSpaces =3D=3D true)
        this.code =3D this.ProcessSmartTabs(this.code);
    this.ProcessRegexList();
    if (this.matches.length =3D=3D 0)
        this.AddBit(this.code, null);
    else {
        this.matches =3D =
this.matches.sort(dp.sh.Highlighter.SortCallback);
        for (b =3D 0; b < this.matches.length; b++)
            if (this.IsInside(this.matches[b]))
                this.matches[b] =3D null;
        for (b =3D 0; b < this.matches.length; b++) {
            var h =3D this.matches[b];
            if (!(h =3D=3D null || h.length =3D=3D 0)) {
                this.AddBit(p(this.code, q, h.index), null);
                this.AddBit(h.value, h.css);
                q =3D h.index + h.length
            }
        }
        this.AddBit(this.code.substr(q), null)
    }
    this.SwitchToList();
    this.div.appendChild(this.bar);
    this.div.appendChild(this.ol)
};
a.GetKeywords =3D function(b) {
    return "\\b" + b.replace(/ /g, "\\b|\\b") + "\\b"
};
dp.sh.BloggerMode =3D function() {
    dp.sh.isBloggerMode =3D true
};
dp.sh.HighlightAll =3D function(b, c, d, f, p, q) {
    function h() {
        for (var k =3D arguments, j =3D 0; j < k.length; j++)
            if (k[j] !=3D null) {
                if (typeof k[j] =3D=3D "string" && k[j] !=3D "")
                    return k[j] + "";
                if (typeof k[j] =3D=3D "object" && k[j].value !=3D "")
                    return k[j].value + ""
            }
        return null
    }
    function e(k, j) {
        for (var o =3D 0; o < j.length; o++)
            if (j[o] =3D=3D k)
                return true;
        return false
    }
    function l(k, j, o) {
        k =3D new RegExp("^" + k + "\\[(\\w+)\\]$", "gi");
        for (var s =3D null, u =3D 0; u < j.length; u++)
            if ((s =3D k.exec(j[u])) !=3D null)
                return s[1];
        return o
    }
    function m(k, j, o) {
        o =3D document.getElementsByTagName(o);
        for (var s =3D 0; s < o.length; s++) {
            o[s].getAttribute("name") =3D=3D j && k.push(o[s]);
        }
    }
    var i =3D [], g =3D null, v =3D {};
    m(i, b, "pre");
    m(i, b, "textarea");
    if (i.length !=3D 0) {
        for (var n in dp.sh.Brushes) {
            g =3D dp.sh.Brushes[n].Aliases;
            if (g !=3D null)
                for (b =3D 0; b < g.length; b++)
                    v[g[b]] =3D n
        }
        for (b =3D 0; b < i.length; b++) {
            n =3D i[b];
            var r =3D h(n.attributes["class"], n.className, =
n.attributes.language, n.language);
            g =3D "";
            if (r !=3D null) {
                r =3D r.split(":");
                g =3D r[0].toLowerCase();
                if (v[g] !=3D null) {
                    g =3D new dp.sh.Brushes[v[g]];
                    n.style.display =3D "none";
                    g.noGutter =3D c =3D=3D null ? e("nogutter", r) : =
!c;
                    g.addControls =3D d =3D=3D null ? !e("nocontrols", =
r) : d;
                    g.collapse =3D f =3D=3D null ? e("collapse", r) : f;
                    g.showColumns =3D q =3D=3D null ? e("showcolumns", =
r) : q;
                    var w =3D document.getElementsByTagName("head")[0];
                    if (g.Style && w) {
                        var t =3D document.createElement("style");
                        t.setAttribute("type", "text/css");
                        if (t.styleSheet)
                            t.styleSheet.cssText =3D g.Style;
                        else {
                            var x =3D document.createTextNode(g.Style);
                            t.appendChild(x)
                        }
                        w.appendChild(t);
                    }
                    g.firstLine =3D p =3D=3D null ? =
parseInt(l("firstline", r, 1)) : p;
                    g.source =3D n;
                    g.Highlight(n.innerHTML);
                    g.div.className +=3D " bg_" + n.className;
                    n.parentNode.insertBefore(g.div, n);
                }
            }
        }
    }
};
dp.sh.Brushes.Xml =3D function() {
    this.CssClass =3D "dp-xml";
    this.Style =3D ""
};
dp.sh.Brushes.Xml.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Xml.Aliases =3D ["xml", "xhtml", "xslt", "html", "xhtml"];
dp.sh.Brushes.Xml.prototype.ProcessRegexList =3D function() {
    function c(d, e) {
        d[d.length] =3D e
    }
    var a =3D null, b =3D null;
    this.GetMatches(new =
RegExp("(&lt;|<)\\!\\[[\\w\\s]*?\\[(.|\\s)*?\\]\\](&gt;|>)", "gm"), =
"cdata");
    this.GetMatches(new RegExp("(&lt;|<)!--\\s*.*?\\s*--(&gt;|>)", =
"gm"), "comments");
    for (b =3D new =
RegExp("([:\\w-.]+)\\s*=3D\\s*(\".*?\"|'.*?'|\\w+)*|(\\w+)", "gm"); (a =
=3D b.exec(this.code)) !=3D null; )
        if (a[1] !=3D null) {
            c(this.matches, new dp.sh.Match(a[1], a.index, =
"attribute"));
            a[2] !=3D undefined && c(this.matches, new dp.sh.Match(a[2], =
a.index + a[1].length + a[0].substr(a[1].length).indexOf(a[2]), =
"attribute-value"))
        }
    this.GetMatches(new RegExp("(&lt;|<)/*\\?*(?!\\!)|/*\\?*(&gt;|>)", =
"gm"), "tag");
    for (b =3D new RegExp("(?:&lt;|<)/*\\?*\\s*([:\\w-.]+)", "gm"); (a =
=3D b.exec(this.code)) !=3D null; )
        c(this.matches, new dp.sh.Match(a[1], a.index + =
a[0].indexOf(a[1]), "tag-name"))
};
dp.sh.Brushes.Vb =3D function() {
    this.regexList =3D [{regex: new RegExp("'.*$", "gm"),css: =
"comment"}, {regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, =
{regex: new RegExp("^\\s*#.*", "gm"),css: "preprocessor"}, {regex: new =
RegExp(this.GetKeywords("AddHandler AddressOf AndAlso Alias And Ansi As =
Assembly Auto Boolean ByRef Byte ByVal Call Case Catch CBool CByte CChar =
CDate CDec CDbl Char CInt Class CLng CObj Const CShort CSng CStr CType =
Date Decimal Declare Default Delegate Dim DirectCast Do Double Each Else =
ElseIf End Enum Erase Error Event Exit False Finally For Friend Function =
Get GetType GoSub GoTo Handles If Implements Imports In Inherits Integer =
Interface Is Let Lib Like Long Loop Me Mod Module MustInherit =
MustOverride MyBase MyClass Namespace New Next Not Nothing =
NotInheritable NotOverridable Object On Option Optional Or OrElse =
Overloads Overridable Overrides ParamArray Preserve Private Property =
Protected Public RaiseEvent ReadOnly ReDim REM RemoveHandler Resume =
Return Select Set Shadows Shared Short Single Static Step Stop String =
Structure Sub SyncLock Then Throw To True Try TypeOf Unicode Until =
Variant When While With WithEvents WriteOnly Xor"), "gm"),css: =
"keyword"}];
    this.CssClass =3D "dp-vb"
};
dp.sh.Brushes.Vb.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Vb.Aliases =3D ["vb", "vb.net"];
dp.sh.Brushes.Sql =3D function() {
    this.regexList =3D [{regex: new RegExp("--(.*)$", "gm"),css: =
"comment"}, {regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, =
{regex: dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp(this.GetKeywords("abs avg case cast coalesce convert count =
current_timestamp current_user day isnull left lower month nullif =
replace right session_user space substring sum system_user upper user =
year"), "gmi"),css: "func"}, {regex: new RegExp(this.GetKeywords("all =
and any between cross in join like not null or outer some"), "gmi"),css: =
"op"}, {regex: new RegExp(this.GetKeywords("absolute action add after =
alter as asc at authorization begin bigint binary bit by cascade char =
character check checkpoint close collate column commit committed connect =
connection constraint contains continue create cube current current_date =
current_time cursor database date deallocate dec decimal declare default =
delete desc distinct double drop dynamic else end end-exec escape except =
exec execute false fetch first float for force foreign forward free from =
full function global goto grant group grouping having hour ignore index =
inner insensitive insert instead int integer intersect into is isolation =
key last level load local max min minute modify move name national nchar =
next no numeric of off on only open option order out output partial =
password precision prepare primary prior privileges procedure public =
read real references relative repeatable restrict return returns revoke =
rollback rollup rows rule schema scroll second section select sequence =
serializable set size smallint static statistics table temp temporary =
then time timestamp to top transaction translation trigger true truncate =
uncommitted union unique update values varchar varying view when where =
with work"), "gmi"),css: "keyword"}];
    this.CssClass =3D "dp-sql";
    this.Style =3D ""
};
dp.sh.Brushes.Sql.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Sql.Aliases =3D ["sql"];
dp.sh.Brushes.Ruby =3D function() {
    this.regexList =3D [{regex: =
dp.sh.RegexLib.SingleLinePerlComments,css: "comment"}, {regex: =
dp.sh.RegexLib.DoubleQuotedString,css: "string"}, {regex: =
dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp(":[a-z][A-Za-z0-9_]*", "g"),css: "symbol"}, {regex: new =
RegExp("(\\$|@@|@)\\w+", "g"),css: "variable"}, {regex: new =
RegExp(this.GetKeywords("alias and BEGIN begin break case class def =
define_method defined do each else elsif END end ensure false for if in =
module new next nil not or raise redo rescue retry return self super =
then throw true undef unless until when while yield"), "gm"),css: =
"keyword"}, {regex: new RegExp(this.GetKeywords("Array Bignum Binding =
Class Continuation Dir Exception FalseClass File::Stat File Fixnum Fload =
Hash Integer IO MatchData Method Module NilClass Numeric Object Proc =
Range Regexp String Struct::TMS Symbol ThreadGroup Thread Time =
TrueClass"), "gm"),css: "builtin"}];
    this.CssClass =3D "dp-rb";
    this.Style =3D ""
};
dp.sh.Brushes.Ruby.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Ruby.Aliases =3D ["ruby", "rails", "ror"];
dp.sh.Brushes.Python =3D function() {
    this.regexList =3D [{regex: =
dp.sh.RegexLib.SingleLinePerlComments,css: "comment"}, {regex: new =
RegExp("^\\s*@\\w+", "gm"),css: "decorator"}, {regex: new =
RegExp("(['\"]{3})([^\\1])*?\\1", "gm"),css: "comment"}, {regex: new =
RegExp('"(?!")(?:\\.|\\\\\\"|[^\\""\\n\\r])*"', "gm"),css: "string"}, =
{regex: new RegExp("'(?!')*(?:\\.|(\\\\\\')|[^\\''\\n\\r])*'", =
"gm"),css: "string"}, {regex: new RegExp("\\b\\d+\\.?\\w*", "g"),css: =
"number"}, {regex: new RegExp(this.GetKeywords("and assert break class =
continue def del elif else except exec finally for from global if import =
in is lambda not or pass print raise return try yield while"), =
"gm"),css: "keyword"}, {regex: new RegExp(this.GetKeywords("None True =
False self cls class_"), "gm"),css: "special"}];
    this.CssClass =3D "dp-py";
    this.Style =3D ""
};
dp.sh.Brushes.Python.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Python.Aliases =3D ["py", "python"];
dp.sh.Brushes.Plain =3D function() {
    this.regexList =3D []
};
dp.sh.Brushes.Plain.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Plain.Aliases =3D ["plain", "text", "txt"];
dp.sh.Brushes.Php =3D function() {
    this.regexList =3D [{regex: dp.sh.RegexLib.SingleLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.MultiLineCComments,css: "comment"}, =
{regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, {regex: =
dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp("\\$\\w+", "g"),css: "vars"}, {regex: new =
RegExp(this.GetKeywords("abs acos acosh addcslashes addslashes =
array_change_key_case array_chunk array_combine array_count_values =
array_diff array_diff_assoc array_diff_key array_diff_uassoc =
array_diff_ukey array_fill array_filter array_flip array_intersect =
array_intersect_assoc array_intersect_key array_intersect_uassoc =
array_intersect_ukey array_key_exists array_keys array_map array_merge =
array_merge_recursive array_multisort array_pad array_pop array_product =
array_push array_rand array_reduce array_reverse array_search =
array_shift array_slice array_splice array_sum array_udiff =
array_udiff_assoc array_udiff_uassoc array_uintersect =
array_uintersect_assoc array_uintersect_uassoc array_unique =
array_unshift array_values array_walk array_walk_recursive atan atan2 =
atanh base64_decode base64_encode base_convert basename bcadd bccomp =
bcdiv bcmod bcmul bindec bindtextdomain bzclose bzcompress bzdecompress =
bzerrno bzerror bzerrstr bzflush bzopen bzread bzwrite ceil chdir =
checkdate checkdnsrr chgrp chmod chop chown chr chroot chunk_split =
class_exists closedir closelog copy cos cosh count count_chars date =
decbin dechex decoct deg2rad delete ebcdic2ascii echo empty end ereg =
ereg_replace eregi eregi_replace error_log error_reporting =
escapeshellarg escapeshellcmd eval exec exit exp explode =
extension_loaded feof fflush fgetc fgetcsv fgets fgetss file_exists =
file_get_contents file_put_contents fileatime filectime filegroup =
fileinode filemtime fileowner fileperms filesize filetype floatval flock =
floor flush fmod fnmatch fopen fpassthru fprintf fputcsv fputs fread =
fscanf fseek fsockopen fstat ftell ftok getallheaders getcwd getdate =
getenv gethostbyaddr gethostbyname gethostbynamel getimagesize =
getlastmod getmxrr getmygid getmyinode getmypid getmyuid getopt =
getprotobyname getprotobynumber getrandmax getrusage getservbyname =
getservbyport gettext gettimeofday gettype glob gmdate gmmktime =
ini_alter ini_get ini_get_all ini_restore ini_set interface_exists =
intval ip2long is_a is_array is_bool is_callable is_dir is_double =
is_executable is_file is_finite is_float is_infinite is_int is_integer =
is_link is_long is_nan is_null is_numeric is_object is_readable is_real =
is_resource is_scalar is_soap_fault is_string is_subclass_of =
is_uploaded_file is_writable is_writeable mkdir mktime nl2br =
parse_ini_file parse_str parse_url passthru pathinfo readlink realpath =
rewind rewinddir rmdir round str_ireplace str_pad str_repeat str_replace =
str_rot13 str_shuffle str_split str_word_count strcasecmp strchr strcmp =
strcoll strcspn strftime strip_tags stripcslashes stripos stripslashes =
stristr strlen strnatcasecmp strnatcmp strncasecmp strncmp strpbrk =
strpos strptime strrchr strrev strripos strrpos strspn strstr strtok =
strtolower strtotime strtoupper strtr strval substr substr_compare"), =
"gmi"),css: "func"}, {regex: new RegExp(this.GetKeywords("and or xor =
__FILE__ __LINE__ array as break case cfunction class const continue =
declare default die do else elseif enddeclare endfor endforeach endif =
endswitch endwhile extends for foreach function include include_once =
global if new old_function return static switch use require require_once =
var while __FUNCTION__ __CLASS__ __METHOD__ abstract interface public =
implements extends private protected throw"), "gm"),css: "keyword"}];
    this.CssClass =3D "dp-c"
};
dp.sh.Brushes.Php.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Php.Aliases =3D ["php"];
dp.sh.Brushes.JScript =3D function() {
    this.regexList =3D [{regex: dp.sh.RegexLib.SingleLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.MultiLineCComments,css: "comment"}, =
{regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, {regex: =
dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp("^\\s*#.*", "gm"),css: "preprocessor"}, {regex: new =
RegExp(this.GetKeywords("abstract boolean break byte case catch char =
class const continue debugger default delete do double else enum export =
extends false final finally float for function goto if implements import =
in instanceof int interface long native new null package private =
protected public return short static super switch synchronized this =
throw throws transient true try typeof var void volatile while with"), =
"gm"),css: "keyword"}];
    this.CssClass =3D "dp-c"
};
dp.sh.Brushes.JScript.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.JScript.Aliases =3D ["js", "jscript", "javascript"];
dp.sh.Brushes.Java =3D function() {
    this.regexList =3D [{regex: dp.sh.RegexLib.SingleLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.MultiLineCComments,css: "comment"}, =
{regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, {regex: =
dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp("\\b([\\d]+(\\.[\\d]+)?|0x[a-f0-9]+)\\b", "gi"),css: "number"}, =
{regex: new RegExp("(?!\\@interface\\b)\\@[\\$\\w]+\\b", "g"),css: =
"annotation"}, {regex: new RegExp("\\@interface\\b", "g"),css: =
"keyword"}, {regex: new RegExp(this.GetKeywords("abstract assert boolean =
break byte case catch char class const continue default do double else =
enum extends false final finally float for goto if implements import =
instanceof int interface long native new null package private protected =
public return short static strictfp super switch synchronized this throw =
throws true transient try void volatile while"), "gm"),css: "keyword"}];
    this.CssClass =3D "dp-j";
    this.Style =3D ""
};
dp.sh.Brushes.Java.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Java.Aliases =3D ["java"];
dp.sh.Brushes.Delphi =3D function() {
    this.regexList =3D [{regex: new RegExp("\\(\\*[\\s\\S]*?\\*\\)", =
"gm"),css: "comment"}, {regex: new RegExp("{(?!\\$)[\\s\\S]*?}", =
"gm"),css: "comment"}, {regex: dp.sh.RegexLib.SingleLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.SingleQuotedString,css: "string"}, =
{regex: new RegExp("\\{\\$[a-zA-Z]+ .+\\}", "g"),css: "directive"}, =
{regex: new RegExp("\\b[\\d\\.]+\\b", "g"),css: "number"}, {regex: new =
RegExp("\\$[a-zA-Z0-9]+\\b", "g"),css: "number"}, {regex: new =
RegExp(this.GetKeywords("abs addr and ansichar ansistring array as asm =
begin boolean byte cardinal case char class comp const constructor =
currency destructor div do double downto else end except exports =
extended false file finalization finally for function goto if =
implementation in inherited int64 initialization integer interface is =
label library longint longword mod nil not object of on or packed =
pansichar pansistring pchar pcurrency pdatetime pextended pint64 pointer =
private procedure program property pshortstring pstring pvariant =
pwidechar pwidestring protected public published raise real real48 =
record repeat set shl shortint shortstring shr single smallint string =
then threadvar to true try type unit until uses val var varirnt while =
widechar widestring with word write writeln xor"), "gm"),css: =
"keyword"}];
    this.CssClass =3D "dp-delphi";
    this.Style =3D ""
};
dp.sh.Brushes.Delphi.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Delphi.Aliases =3D ["delphi", "pascal"];
dp.sh.Brushes.CSS =3D function() {
    this.regexList =3D [{regex: dp.sh.RegexLib.MultiLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, =
{regex: dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp("\\#[a-zA-Z0-9]{3,6}", "g"),css: "value"}, {regex: new =
RegExp("(-?\\d+)(.\\d+)?(px|em|pt|:|%|)", "g"),css: "value"}, {regex: =
new RegExp("!important", "g"),css: "important"}, {regex: new =
RegExp(this.GetKeywordsCSS("ascent azimuth background-attachment =
background-color background-image background-position background-repeat =
background baseline bbox border-collapse border-color border-spacing =
border-style border-top border-right border-bottom border-left =
border-top-color border-right-color border-bottom-color =
border-left-color border-top-style border-right-style =
border-bottom-style border-left-style border-top-width =
border-right-width border-bottom-width border-left-width border-width =
border cap-height caption-side centerline clear clip color content =
counter-increment counter-reset cue-after cue-before cue cursor =
definition-src descent direction display elevation empty-cells float =
font-size-adjust font-family font-size font-stretch font-style =
font-variant font-weight font height letter-spacing line-height =
list-style-image list-style-position list-style-type list-style =
margin-top margin-right margin-bottom margin-left margin marker-offset =
marks mathline max-height max-width min-height min-width orphans =
outline-color outline-style outline-width outline overflow padding-top =
padding-right padding-bottom padding-left padding page page-break-after =
page-break-before page-break-inside pause pause-after pause-before pitch =
pitch-range play-during position quotes richness size slope src =
speak-header speak-numeral speak-punctuation speak speech-rate stemh =
stemv stress table-layout text-align text-decoration text-indent =
text-shadow text-transform unicode-bidi unicode-range units-per-em =
vertical-align visibility voice-family volume white-space widows width =
widths word-spacing x-height z-index"), "gm"),css: "keyword"}, {regex: =
new RegExp(this.GetValuesCSS("above absolute all always aqua armenian =
attr aural auto avoid baseline behind below bidi-override black blink =
block blue bold bolder both bottom braille capitalize caption center =
center-left center-right circle close-quote code collapse compact =
condensed continuous counter counters crop cross crosshair cursive =
dashed decimal decimal-leading-zero default digits disc dotted double =
embed embossed e-resize expanded extra-condensed extra-expanded fantasy =
far-left far-right fast faster fixed format fuchsia gray green groove =
handheld hebrew help hidden hide high higher icon inline-table inline =
inset inside invert italic justify landscape large larger left-side left =
leftwards level lighter lime line-through list-item local loud =
lower-alpha lowercase lower-greek lower-latin lower-roman lower low ltr =
marker maroon medium message-box middle mix move narrower navy ne-resize =
no-close-quote none no-open-quote no-repeat normal nowrap n-resize =
nw-resize oblique olive once open-quote outset outside overline pointer =
portrait pre print projection purple red relative repeat repeat-x =
repeat-y rgb ridge right right-side rightwards rtl run-in screen scroll =
semi-condensed semi-expanded separate se-resize show silent silver =
slower slow small small-caps small-caption smaller soft solid speech =
spell-out square s-resize static status-bar sub super sw-resize =
table-caption table-cell table-column table-column-group =
table-footer-group table-header-group table-row table-row-group teal =
text-bottom text-top thick thin top transparent tty tv ultra-condensed =
ultra-expanded underline upper-alpha uppercase upper-latin upper-roman =
url visible wait white wider w-resize x-fast x-high x-large x-loud x-low =
x-slow x-small x-soft xx-large xx-small yellow"), "g"),css: "value"}, =
{regex: new RegExp(this.GetValuesCSS("[mM]onospace [tT]ahoma [vV]erdana =
[aA]rial [hH]elvetica [sS]ans-serif [sS]erif"), "g"),css: "value"}];
    this.CssClass =3D "dp-css";
    this.Style =3D ""
};
dp.sh.Highlighter.prototype.GetKeywordsCSS =3D function(a) {
    return "\\b([a-z_]|)" + a.replace(/ /g, =
"(?=3D:)\\b|\\b([a-z_\\*]|\\*|)") + "(?=3D:)\\b"
};
dp.sh.Highlighter.prototype.GetValuesCSS =3D function(a) {
    return "\\b" + a.replace(/ /g, "(?!-)(?!:)\\b|\\b()") + ":\\b"
};
dp.sh.Brushes.CSS.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.CSS.Aliases =3D ["css"];
dp.sh.Brushes.CSharp =3D function() {
    this.regexList =3D [{regex: dp.sh.RegexLib.SingleLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.MultiLineCComments,css: "comment"}, =
{regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, {regex: =
dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp("^\\s*#.*", "gm"),css: "preprocessor"}, {regex: new =
RegExp(this.GetKeywords("abstract as base bool break byte case catch =
char checked class const continue decimal default delegate do double =
else enum event explicit extern false finally fixed float for foreach =
get goto if implicit in int interface internal is lock long namespace =
new null object operator out override params private protected public =
readonly ref return sbyte sealed set short sizeof stackalloc static =
string struct switch this throw true try typeof uint ulong unchecked =
unsafe ushort using virtual void while"), "gm"),css: "keyword"}];
    this.CssClass =3D "dp-c";
    this.Style =3D ""
};
dp.sh.Brushes.CSharp.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.CSharp.Aliases =3D ["c#", "c-sharp", "csharp"];
dp.sh.Brushes.Cpp =3D function() {
    this.regexList =3D [{regex: dp.sh.RegexLib.SingleLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.MultiLineCComments,css: "comment"}, =
{regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, {regex: =
dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new RegExp("^ =
*#.*", "gm"),css: "preprocessor"}, {regex: new =
RegExp(this.GetKeywords("ATOM BOOL BOOLEAN BYTE CHAR COLORREF DWORD =
DWORDLONG DWORD_PTR DWORD32 DWORD64 FLOAT HACCEL HALF_PTR HANDLE HBITMAP =
HBRUSH HCOLORSPACE HCONV HCONVLIST HCURSOR HDC HDDEDATA HDESK HDROP HDWP =
HENHMETAFILE HFILE HFONT HGDIOBJ HGLOBAL HHOOK HICON HINSTANCE HKEY HKL =
HLOCAL HMENU HMETAFILE HMODULE HMONITOR HPALETTE HPEN HRESULT HRGN HRSRC =
HSZ HWINSTA HWND INT INT_PTR INT32 INT64 LANGID LCID LCTYPE LGRPID LONG =
LONGLONG LONG_PTR LONG32 LONG64 LPARAM LPBOOL LPBYTE LPCOLORREF LPCSTR =
LPCTSTR LPCVOID LPCWSTR LPDWORD LPHANDLE LPINT LPLONG LPSTR LPTSTR =
LPVOID LPWORD LPWSTR LRESULT PBOOL PBOOLEAN PBYTE PCHAR PCSTR PCTSTR =
PCWSTR PDWORDLONG PDWORD_PTR PDWORD32 PDWORD64 PFLOAT PHALF_PTR PHANDLE =
PHKEY PINT PINT_PTR PINT32 PINT64 PLCID PLONG PLONGLONG PLONG_PTR =
PLONG32 PLONG64 POINTER_32 POINTER_64 PSHORT PSIZE_T PSSIZE_T PSTR =
PTBYTE PTCHAR PTSTR PUCHAR PUHALF_PTR PUINT PUINT_PTR PUINT32 PUINT64 =
PULONG PULONGLONG PULONG_PTR PULONG32 PULONG64 PUSHORT PVOID PWCHAR =
PWORD PWSTR SC_HANDLE SC_LOCK SERVICE_STATUS_HANDLE SHORT SIZE_T SSIZE_T =
TBYTE TCHAR UCHAR UHALF_PTR UINT UINT_PTR UINT32 UINT64 ULONG ULONGLONG =
ULONG_PTR ULONG32 ULONG64 USHORT USN VOID WCHAR WORD WPARAM WPARAM =
WPARAM char bool short int __int32 __int64 __int8 __int16 long float =
double __wchar_t clock_t _complex _dev_t _diskfree_t div_t ldiv_t =
_exception _EXCEPTION_POINTERS FILE _finddata_t _finddatai64_t =
_wfinddata_t _wfinddatai64_t __finddata64_t __wfinddata64_t =
_FPIEEE_RECORD fpos_t _HEAPINFO _HFILE lconv intptr_t jmp_buf mbstate_t =
_off_t _onexit_t _PNH ptrdiff_t _purecall_handler sig_atomic_t size_t =
_stat __stat64 _stati64 terminate_function time_t __time64_t _timeb =
__timeb64 tm uintptr_t _utimbuf va_list wchar_t wctrans_t wctype_t =
wint_t signed"), "gm"),css: "datatypes"}, {regex: new =
RegExp(this.GetKeywords("break case catch class const __finally =
__exception __try const_cast continue private public protected =
__declspec default delete deprecated dllexport dllimport do dynamic_cast =
else enum explicit extern if for friend goto inline mutable naked =
namespace new noinline noreturn nothrow register reinterpret_cast return =
selectany sizeof static static_cast struct switch template this thread =
throw true false try typedef typeid typename union using uuid virtual =
void volatile whcar_t while"), "gm"),css: "keyword"}];
    this.CssClass =3D "dp-cpp";
    this.Style =3D ""
};
dp.sh.Brushes.Cpp.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Cpp.Aliases =3D ["cpp", "c", "c++"];
dp.sh.Brushes.Objc =3D function() {
    var datatypes =3D 'ATOM BOOL BOOLEAN BYTE CHAR COLORREF DWORD =
DWORDLONG DWORD_PTR ' +
        'DWORD32 DWORD64 FLOAT HACCEL HALF_PTR HANDLE HBITMAP HBRUSH ' +
        'HCOLORSPACE HCONV HCONVLIST HCURSOR HDC HDDEDATA HDESK HDROP =
HDWP ' +
        'HENHMETAFILE HFILE HFONT HGDIOBJ HGLOBAL HHOOK HICON HINSTANCE =
HKEY ' +
        'HKL HLOCAL HMENU HMETAFILE HMODULE HMONITOR HPALETTE HPEN =
HRESULT ' +
        'HRGN HRSRC HSZ HWINSTA HWND INT INT_PTR INT32 INT64 LANGID LCID =
LCTYPE ' +
        'LGRPID LONG LONGLONG LONG_PTR LONG32 LONG64 LPARAM LPBOOL =
LPBYTE LPCOLORREF ' +
        'LPCSTR LPCTSTR LPCVOID LPCWSTR LPDWORD LPHANDLE LPINT LPLONG =
LPSTR LPTSTR ' +
        'LPVOID LPWORD LPWSTR LRESULT PBOOL PBOOLEAN PBYTE PCHAR PCSTR =
PCTSTR PCWSTR ' +
        'PDWORDLONG PDWORD_PTR PDWORD32 PDWORD64 PFLOAT PHALF_PTR =
PHANDLE PHKEY PINT ' +
        'PINT_PTR PINT32 PINT64 PLCID PLONG PLONGLONG PLONG_PTR PLONG32 =
PLONG64 POINTER_32 ' +
        'POINTER_64 PSHORT PSIZE_T PSSIZE_T PSTR PTBYTE PTCHAR PTSTR =
PUCHAR PUHALF_PTR ' +
        'PUINT PUINT_PTR PUINT32 PUINT64 PULONG PULONGLONG PULONG_PTR =
PULONG32 PULONG64 ' +
        'PUSHORT PVOID PWCHAR PWORD PWSTR SC_HANDLE SC_LOCK =
SERVICE_STATUS_HANDLE SHORT ' +
        'SIZE_T SSIZE_T TBYTE TCHAR UCHAR UHALF_PTR UINT UINT_PTR UINT32 =
UINT64 ULONG ' +
        'ULONGLONG ULONG_PTR ULONG32 ULONG64 USHORT USN VOID WCHAR WORD =
WPARAM WPARAM WPARAM ' +
        'char bool short int __int32 __int64 __int8 __int16 long float =
double __wchar_t ' +
        'clock_t _complex _dev_t _diskfree_t div_t ldiv_t _exception =
_EXCEPTION_POINTERS ' +
        'FILE _finddata_t _finddatai64_t _wfinddata_t _wfinddatai64_t =
__finddata64_t ' +
        '__wfinddata64_t _FPIEEE_RECORD fpos_t _HEAPINFO _HFILE lconv =
intptr_t id ' +
        'jmp_buf mbstate_t _off_t _onexit_t _PNH ptrdiff_t =
_purecall_handler ' +
        'sig_atomic_t size_t _stat __stat64 _stati64 terminate_function =
' +
        'time_t __time64_t _timeb __timeb64 tm uintptr_t _utimbuf ' +
        'va_list wchar_t wctrans_t wctype_t wint_t signed';
    var keywords =3D 'break case catch class copy const __finally =
__exception __try ' +
        'const_cast continue private public protected __declspec ' +
        'default delete deprecated dllexport dllimport do dynamic_cast ' =
+
        'else enum explicit extern if for friend getter goto inline ' +
        'mutable naked namespace new nil NO noinline nonatomic noreturn =
nothrow NULL ' +
        'readonly readwrite register reinterpret_cast retain strong =
return SEL selectany self ' +
        'setter sizeof static static_cast struct super switch template ' =
+
        'thread throw true false try typedef typeid typename union ' +
        'using uuid virtual void volatile whcar_t while YES';
    //=E9=A1=BA=E5=BA=8F=E5=BE=88=E9=87=8D=E8=A6=81
    this.regexList =3D [
        {regex: new RegExp(this.GetKeywords(datatypes), 'gm'),css: =
'keyword'},  // primitive data types
        {regex: new RegExp(this.GetKeywords(keywords), 'gm'),css: =
'keyword'},  // keywords
        {regex: new RegExp('@\\w+\\b', 'g'),css: 'keyword'},  // =
@-keywords
        {regex: new RegExp('[: ]nil', 'g'),css: 'keyword'},  // =
nil-workaround
        {regex: new RegExp('\\.\\w+', 'g'),css: 'xcodeconstants'},  // =
accessors
        {regex: new RegExp(' \\w+(?=3D[:\\]])', 'g'),css: 'vars'},  // =
messages
        {regex: dp.sh.RegexLib.SingleLineCComments,css: 'comment'},  // =
comments
        {regex: dp.sh.RegexLib.MultiLineCComments,css: 'comment'},  // =
comments
        {regex: dp.sh.RegexLib.DoubleQuotedString,css: 'string'},  // =
strings
        {regex: dp.sh.RegexLib.SingleQuotedString,css: 'string'},  // =
strings
        {regex: new RegExp('@"[^"]*"', 'gm'),css: 'string'},  // strings
        {regex: new RegExp('\\d', 'gm'),css: 'xcodenumber'},  // numeric =
values
        {regex: new RegExp('^ *#.*', 'gm'),css: 'xcodepreprocessor'},  =
// preprocessor
        {regex: new RegExp('\\w+(?=3D \\*)', 'g'),css: 'keyword'} // =
object types - variable declaration
        /*{ regex: new RegExp('\\b[A-Z]\\w+\\b(?=3D[ ,;])', 'gm'),  css: =
'xcodekeyword' },*/ // object types - protocol
    ];
    this.CssClass =3D 'dp-objc';
    this.Style =3D '.dp-objc .vars { color: #d00; }';
}
dp.sh.Brushes.Objc.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Objc.Aliases =3D ['objc'];
/*ZeroClipboard/ZeroClipboard.js*/
var ZeroClipboard =3D {version: "1.0.7",clients: {},moviePath: =
'http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf',nex=
tId: 1,$: function(thingy) {
    if (typeof (thingy) =3D=3D 'string')
        thingy =3D document.getElementById(thingy);
    if (true || !thingy.addClass) {
        thingy.hide =3D function() {
            this.style.display =3D 'none';
        };
        thingy.show =3D function() {
            this.style.display =3D 'block';
        };
        thingy.addClass =3D function(name) {
            this.removeClass(name);
            this.className +=3D ' ' + name;
        };
        thingy.removeClass =3D function(name) {
            var classes =3D this.className.split(/\s+/);
            var idx =3D -1;
            for (var k =3D 0; k < classes.length; k++) {
                if (classes[k] =3D=3D name) {
                    idx =3D k;
                    k =3D classes.length;
                }
            }
            if (idx > -1) {
                classes.splice(idx, 1);
                this.className =3D classes.join(' ');
            }
            return this;
        };
        thingy.hasClass =3D function(name) {
            return !!this.className.match(new RegExp("\\s*" + name + =
"\\s*"));
        };
    }
    return thingy;
},setMoviePath: function(path) {
    this.moviePath =3D path;
},dispatch: function(id, eventName, args) {
    var client =3D this.clients[id];
    if (client) {
        client.receiveEvent(eventName, args);
    }
},register: function(id, client) {
    this.clients[id] =3D client;
},getDOMObjectPosition: function(obj, stopObj) {
    var info =3D {left: 0,top: 0,width: obj.width ? obj.width : =
obj.offsetWidth,height: obj.height ? obj.height : obj.offsetHeight};
    while (obj && (obj !=3D stopObj)) {
        info.left +=3D obj.offsetLeft;
        info.top +=3D obj.offsetTop;
        obj =3D obj.offsetParent;
    }
    return info;
},Client: function(elem) {
    this.handlers =3D {};
    this.id =3D ZeroClipboard.nextId++;
    this.movieId =3D 'ZeroClipboardMovie_' + this.id;
    ZeroClipboard.register(this.id, this);
    if (elem)
        this.glue(elem);
}};
ZeroClipboard.Client.prototype =3D {id: 0,ready: false,movie: =
null,clipText: '',handCursorEnabled: true,cssEffects: true,handlers: =
null,glue: function(elem, appendElem, stylesToAdd) {
    this.domElement =3D ZeroClipboard.$(elem);
    var zIndex =3D 99;
    if (this.domElement.style.zIndex) {
        zIndex =3D parseInt(this.domElement.style.zIndex, 10) + 1;
    }
    if (typeof (appendElem) =3D=3D 'string') {
        appendElem =3D ZeroClipboard.$(appendElem);
    }
    else if (typeof (appendElem) =3D=3D 'undefined') {
        appendElem =3D document.getElementsByTagName('body')[0];
    }
    var box =3D ZeroClipboard.getDOMObjectPosition(this.domElement, =
appendElem);
    this.div =3D document.createElement('div');
    var style =3D this.div.style;
    style.position =3D 'absolute';
    style.left =3D '' + box.left + 'px';
    style.top =3D '' + box.top + 'px';
    style.width =3D '' + box.width + 'px';
    style.height =3D '' + box.height + 'px';
    style.zIndex =3D zIndex;
    if (typeof (stylesToAdd) =3D=3D 'object') {
        for (addedStyle in stylesToAdd) {
            style[addedStyle] =3D stylesToAdd[addedStyle];
        }
    }
    appendElem.appendChild(this.div);
    this.div.innerHTML =3D this.getHTML(box.width, box.height);
},getHTML: function(width, height) {
    var html =3D '';
    var flashvars =3D 'id=3D' + this.id + '&width=3D' + width + =
'&height=3D' + height;
    if (navigator.userAgent.match(/MSIE/)) {
        var protocol =3D location.href.match(/^https/i) ? 'https://' : =
'http://';
        html +=3D '<object =
classid=3D"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase=3D"' + =
protocol + =
'download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=3D9=
,0,0,0" width=3D"' + width + '" height=3D"' + height + '" id=3D"' + =
this.movieId + '" align=3D"middle"><param name=3D"allowScriptAccess" =
value=3D"always" /><param name=3D"allowFullScreen" value=3D"false" =
/><param name=3D"movie" value=3D"' + ZeroClipboard.moviePath + '" =
/><param name=3D"loop" value=3D"false" /><param name=3D"menu" =
value=3D"false" /><param name=3D"quality" value=3D"best" /><param =
name=3D"bgcolor" value=3D"#ffffff" /><param name=3D"flashvars" =
value=3D"' + flashvars + '"/><param name=3D"wmode" =
value=3D"transparent"/></object>';
    }
    else {
        html +=3D '<embed id=3D"' + this.movieId + '" src=3D"' + =
ZeroClipboard.moviePath + '" loop=3D"false" menu=3D"false" =
quality=3D"best" bgcolor=3D"#ffffff" width=3D"' + width + '" height=3D"' =
+ height + '" name=3D"' + this.movieId + '" align=3D"middle" =
allowScriptAccess=3D"always" allowFullScreen=3D"false" =
type=3D"application/x-shockwave-flash" =
pluginspage=3D"http://www.macromedia.com/go/getflashplayer" =
flashvars=3D"' + flashvars + '" wmode=3D"transparent" />';
    }
    return html;
},hide: function() {
    if (this.div) {
        this.div.style.left =3D '-2000px';
    }
},show: function() {
    this.reposition();
},destroy: function() {
    if (this.domElement && this.div) {
        this.hide();
        this.div.innerHTML =3D '';
        var body =3D document.getElementsByTagName('body')[0];
        try {
            body.removeChild(this.div);
        } catch (e) {
            ;
        }
        this.domElement =3D null;
        this.div =3D null;
    }
},reposition: function(elem) {
    if (elem) {
        this.domElement =3D ZeroClipboard.$(elem);
        if (!this.domElement)
            this.hide();
    }
    if (this.domElement && this.div) {
        var box =3D ZeroClipboard.getDOMObjectPosition(this.domElement);
        var style =3D this.div.style;
        style.left =3D '' + box.left + 'px';
        style.top =3D '' + box.top + 'px';
    }
},setText: function(newText) {
    this.clipText =3D newText;
    if (this.ready)
        this.movie.setText(newText);
},addEventListener: function(eventName, func) {
    eventName =3D eventName.toString().toLowerCase().replace(/^on/, '');
    if (!this.handlers[eventName])
        this.handlers[eventName] =3D [];
    this.handlers[eventName].push(func);
},setHandCursor: function(enabled) {
    this.handCursorEnabled =3D enabled;
    if (this.ready)
        this.movie.setHandCursor(enabled);
},setCSSEffects: function(enabled) {
    this.cssEffects =3D !!enabled;
},receiveEvent: function(eventName, args) {
    eventName =3D eventName.toString().toLowerCase().replace(/^on/, '');
    switch (eventName) {
        case 'load':
            this.movie =3D document.getElementById(this.movieId);
            if (!this.movie) {
                var self =3D this;
                setTimeout(function() {
                    self.receiveEvent('load', null);
                }, 1);
                return;
            }
            if (!this.ready && navigator.userAgent.match(/Firefox/) && =
navigator.userAgent.match(/Windows/)) {
                var self =3D this;
                setTimeout(function() {
                    self.receiveEvent('load', null);
                }, 100);
                this.ready =3D true;
                return;
            }
            this.ready =3D true;
            this.movie.setText(this.clipText);
            this.movie.setHandCursor(this.handCursorEnabled);
            break;
        case 'mouseover':
            if (this.domElement && this.cssEffects) {
                this.domElement.addClass('hover');
                if (this.recoverActive)
                    this.domElement.addClass('active');
            }
            break;
        case 'mouseout':
            if (this.domElement && this.cssEffects) {
                this.recoverActive =3D false;
                if (this.domElement.hasClass('active')) {
                    this.domElement.removeClass('active');
                    this.recoverActive =3D true;
                }
                this.domElement.removeClass('hover');
            }
            break;
        case 'mousedown':
            if (this.domElement && this.cssEffects) {
                this.domElement.addClass('active');
            }
            break;
        case 'mouseup':
            if (this.domElement && this.cssEffects) {
                this.domElement.removeClass('active');
                this.recoverActive =3D false;
            }
            break;
    }
    if (this.handlers[eventName]) {
        for (var idx =3D 0, len =3D this.handlers[eventName].length; idx =
< len; idx++) {
            var func =3D this.handlers[eventName][idx];
            if (typeof (func) =3D=3D 'function') {
                func(this, args);
            }
            else if ((typeof (func) =3D=3D 'object') && (func.length =
=3D=3D 2)) {
                func[0][func[1]](this, args);
            }
            else if (typeof (func) =3D=3D 'string') {
                window[func](this, args);
            }
        }
    }
}};
/*article_code.js*/
$(document).ready(function() {
    $(".article_content pre").each(function() {
        var $this =3D $(this);
        if ($this.attr("class") !=3D undefined) {
            if ($this.attr("class").indexOf("brush:") !=3D -1) {
                var lang =3D =
$this.attr("class").split(';')[0].split(':')[1];
                $this.attr('name', 'code');
                $this.attr('class', lang);
            }
            if ($this.attr("class")) {
                $this.attr('name', 'code');
            }
        }
    });
    $('.article_content textarea[name=3Dcode]').each(function() {
        var $this =3D $(this);
        if ($this.attr("class").indexOf(":") !=3D -1) {
            $this.attr("class", $this.attr("class").split(':')[0]);
        }
    });
    dp.SyntaxHighlighter.HighlightAll('code');
    $('.highlighter').addClass('dp-highlighter');
    if (!window.clipboardData) {
        setTimeout("setCopyBtn()", 500);
    }
});
function setCopyBtn() {
    $('.CopyToClipboard').each(function() {
        var clip =3D new ZeroClipboard.Client();
        clip.setHandCursor(true);
        clip.addEventListener('load', function(client) {
        });
        clip.addEventListener('mouseOver', function(client) {
            //var _c_ode =3D =
client.movie.parentNode.parentNode.parentNode.parentNode.nextSibling.inne=
rHTML;
            var _c_ode =3D =
client.movie.parentNode.parentNode.parentNode.parentNode.parentNode.nextS=
ibling.innerHTML;
            _c_ode =3D _c_ode.replace(/&lt;/g, "<").replace(/&gt;/g, =
">").replace(/&amp;/g, "&");
            client.setText(_c_ode);
        });
        clip.addEventListener('complete', function(client, text) {
            =
alert("=E4=BB=A3=E7=A0=81=E5=B7=B2=E7=BB=8F=E5=A4=8D=E5=88=B6=E5=88=B0=E4=
=BD=A0=E7=9A=84=E5=89=AA=E8=B4=B4=E6=9D=BF=E3=80=82");
        });
        clip.glue(this, this.parentNode);
    });
}

jQuery(function() {
    new CNick().showNickname();
});
/*medal...show.js*/
var __mm_arr =3D null;
function printMedal(m_arr) {
    //__mm_arr =3D m_arr;
    //var s =3D "<div id=3D'bms_box'>";
    //for (var i =3D 0; i < m_arr.length; i++) {
    //    s +=3D "<a href=3D'http://medal.blog.csdn.net/allmedal.aspx' =
target=3D_blank>";
    //    s +=3D "<img src=3D'" + m_arr[i].src + "'";
    //    s +=3D " onmouseover=3D'm_over_m(this," + i + ")'";
    //    s +=3D " onmouseout=3D'm_out_m()'";
    //    s +=3D " alt=3D'' />";
    //    s +=3D "</a>";
    //}
    //s +=3D "</div>";
    //$('#blog_medal').append($(s));
}
var __mm_over =3D false;
function m_over_m(e, i) {
    __mm_over =3D true;
    showMedalInfo(e, i);
}
function m_out_m() {
    __mm_over =3D false;
    hideMedalInfo();
}
var __mm_intro =3D null;
function showMedalInfo(e, i) {
    if (__mm_intro) {
        document.body.removeChild(__mm_intro);
        __mm_intro =3D null;
    }
    //var m =3D __mm_arr[i];
    var s =3D "";

    var img =3D $("#bms_box a img[onmouseover$=3D'" + i + =
")']").attr("src");
    var title =3D "";
    var desc =3D "";
    if (img.indexOf("zhuanlandaren")>-1)
    {
        title =3D "=E4=B8=93=E6=A0=8F=E8=BE=BE=E4=BA=BA"; desc =3D =
"=E6=8E=88=E4=BA=88=E6=88=90=E5=8A=9F=E5=88=9B=E5=BB=BA=E4=B8=AA=E4=BA=BA=
=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=E7=9A=84=E7=94=A8=E6=88=B7=E3=80=82=E4=
=B8=93=E6=A0=8F=E4=B8=AD=E6=B7=BB=E5=8A=A0=E4=BA=94=E7=AF=87=E4=BB=A5=E4=B8=
=8A=E5=8D=9A=E6=96=87=E5=8D=B3=E5=8F=AF=E7=82=B9=E4=BA=AE=EF=BC=81=E6=92=B0=
=E5=86=99=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=E6=B5=93=E7=BC=A9=E6=8A=80=E6=
=9C=AF=E7=B2=BE=E5=8D=8E=EF=BC=8C=E4=B8=93=E6=A0=8F=E8=BE=BE=E4=BA=BA=E5=B0=
=B1=E6=98=AF=E4=BD=A0=EF=BC=81";
    }
    else if (img.indexOf("chizhiyiheng")>-1)
    {
        title =3D "=E6=8C=81=E4=B9=8B=E4=BB=A5=E6=81=92"; desc =3D =
"=E6=8E=88=E4=BA=88=E6=AF=8F=E4=B8=AA=E8=87=AA=E7=84=B6=E6=9C=88=E5=86=85=
=E5=8F=91=E5=B8=834=E7=AF=87=E6=88=964=E7=AF=87=E4=BB=A5=E4=B8=8A=E5=8E=9F=
=E5=88=9B=E6=88=96=E7=BF=BB=E8=AF=91IT=E5=8D=9A=E6=96=87=E7=9A=84=E7=94=A8=
=E6=88=B7=E3=80=82=E4=B8=8D=E7=A7=AF=E8=B7=AC=E6=AD=A5=E6=97=A0=E4=BB=A5=E8=
=87=B3=E5=8D=83=E9=87=8C=EF=BC=8C=E4=B8=8D=E7=A7=AF=E5=B0=8F=E6=B5=81=E6=97=
=A0=E4=BB=A5=E6=88=90=E6=B1=9F=E6=B5=B7=EF=BC=8C=E7=A8=8B=E5=BA=8F=E4=BA=BA=
=E7=94=9F=E7=9A=84=E7=B2=BE=E5=BD=A9=E9=9C=80=E8=A6=81=E5=9D=9A=E6=8C=81=E4=
=B8=8D=E6=87=88=E5=9C=B0=E7=A7=AF=E7=B4=AF=EF=BC=81";
    }
    else if (img.indexOf("weiruanmvp")>-1) {
        title =3D "=E5=BE=AE=E8=BD=AFMVP"; desc =3D =
"=E6=8E=88=E4=BA=88=E9=80=9A=E8=BF=87CSDN=E5=8D=9A=E5=AE=A2=E5=B9=B3=E5=8F=
=B0=E7=A7=AF=E6=9E=81=E5=88=86=E4=BA=AB=E5=BE=AE=E8=BD=AF=E7=9B=B8=E5=85=B3=
=E6=8A=80=E6=9C=AF=E7=9F=A5=E8=AF=86=E5=92=8C=E4=B8=93=E4=B8=9A=E6=8A=80=E8=
=83=BD=EF=BC=8C=E5=B9=B6=E5=81=9A=E5=87=BA=E7=AA=81=E5=87=BA=E8=B4=A1=E7=8C=
=AE=E7=9A=84=E7=94=A8=E6=88=B7=E3=80=82";
    }
    else if (img.indexOf("bokezhixing")>-1) {
        title =3D "=E5=8D=9A=E5=AE=A2=E4=B9=8B=E6=98=9F"; desc =3D =
"=E6=8E=88=E4=BA=88=E9=80=9A=E8=BF=87\"CSDN=E5=8D=9A=E5=AE=A2=E4=B9=8B=E6=
=98=9F=E8=AF=84=E9=80=89\"=E4=B8=AD=E8=84=B1=E9=A2=96=E8=80=8C=E5=87=BA=E7=
=9A=84=E5=8D=81=E5=A4=A7=E5=8D=9A=E5=AE=A2=E4=B9=8B=E6=98=9F=E7=A7=B0=E5=8F=
=B7=E7=9A=84=E7=94=A8=E6=88=B7=E3=80=82";
    }

    s +=3D "<div  style=3D'  z-index:99999 ; left: 15%;  top: -9px;  =
position: absolute;  width: 0;  height: 0;  border-left: 10px solid =
transparent;  border-right: 10px solid transparent;  border-bottom: 8px =
solid #EAEAEA; '></div>";
    s +=3D "<dl onmouseover=3D'__mm_over=3Dtrue;' =
onmouseout=3D'm_out_m();'>";
    s +=3D "<dt><img src=3D'" + img.replace(".png", "") + "middle.png" + =
"' /></dt>";
    s +=3D "<dd><strong>" + title + "</strong>" + desc + "</dd>";
    s +=3D "</dl>";
    __mm_intro =3D document.createElement("div");
    __mm_intro.className =3D "medal_intro";
    var pos =3D $(e).position();
    var left =3D pos.left - 39;
    if (left < 0)
        left =3D 0;
    __mm_intro.style.left =3D left + 'px';
    __mm_intro.style.top =3D pos.top + 32 + 4 + 'px';
    __mm_intro.innerHTML =3D s;
    document.body.appendChild(__mm_intro);
}
function hideMedalInfo() {
    setTimeout(function() {
        if (!__mm_over && __mm_intro) {
            document.body.removeChild(__mm_intro);
            __mm_intro =3D null;
        }
    }, 500);
}

$("#leveImg").hover(
    function () {
        $("#smallTittle")[0].style.display=3D"inline-block";
    },
    function () {
        $("#smallTittle")[0].style.display=3D"none";
    }
);

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://medal.blog.csdn.net/showblogmedal.ashx?blogid=647202

cHJpbnRNZWRhbChbeydzcmMnOidodHRwOi8vc3RhdGljLmJsb2cuY3Nkbi5uZXQvaW1hZ2VzL21l
ZGFsL2NvbHVtbnN0YXJfcy5naWYnLCd0aXRsZSc6J+S4k+agj+i+vuS6uicsJ2Rlc2MnOifmjojk
uojmiJDlip/liJvlu7rkuKrkurrljZrlrqLkuJPmoI/nmoTnlKjmiLfjgILkuJPmoI/kuK3mt7vl
iqDkupTnr4fku6XkuIrljZrmlofljbPlj6/ngrnkuq7vvIHmkrDlhpnljZrlrqLkuJPmoI/mtZPn
vKnmioDmnK/nsr7ljY7vvIzkuJPmoI/ovr7kurrlsLHmmK/kvaDvvIEnLCdkZXNjMic6J+WIm+W7
uuS4k+agj++8jOS4lOa3u+WKoDXnr4fku6XkuIrmlofnq6DjgIInLCdjb3VudCc6MX0seydzcmMn
OidodHRwOi8vc3RhdGljLmJsb2cuY3Nkbi5uZXQvaW1hZ2VzL21lZGFsL2hvbGRvbl9zMi5naWYn
LCd0aXRsZSc6J+aMgeS5i+S7peaBkicsJ2Rlc2MnOifmjojkuojmr4/kuKroh6rnhLbmnIjlhoXl
j5HluIM056+H5oiWNOevh+S7peS4iuWOn+WIm+aIlue/u+ivkUlU5Y2a5paH55qE55So5oi344CC
5LiN56ev6Les5q2l5peg5Lul6Iez5Y2D6YeM77yM5LiN56ev5bCP5rWB5peg5Lul5oiQ5rGf5rW3
77yM56iL5bqP5Lq655Sf55qE57K+5b2p6ZyA6KaB5Z2a5oyB5LiN5oeI5Zyw56ev57Sv77yBJywn
ZGVzYzInOic05pyI5Lu95Y+R6KGoMTDnr4fljp/liJsv57+76K+R5paH56ugJywnY291bnQnOjF9
XSk7

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/JavaScript1.js

=EF=BB=BF; (function () {
    protocol =3D location.protocol.substr(0, 4) =3D=3D=3D 'http' ? '' : =
'http:';
    document.write("<link rel=3D'stylesheet' type=3D'text/css' href=3D'" =
+ protocol + "//csdnimg.cn/pubfooter/css/pub_footer_2014.css' />");
    document.write("<div class=3D'pub_fo'>");
    document.write("<div id=3D'pub_footerall' =
class=3D'pub_footer_new'>");
    document.write("<dl>");
    document.write("<dt></dt>");
    document.write(" <dd class=3D'foot_sub_menu'><a =
href=3D'http://www.csdn.net/company/about.html' =
target=3D'_blank'>=E5=85=AC=E5=8F=B8=E7=AE=80=E4=BB=8B</a><span>|</span><=
a href=3D'http://www.csdn.net/company/recruit.html' =
target=3D'_blank'>=E6=8B=9B=E8=B4=A4=E7=BA=B3=E5=A3=AB</a><span>|</span><=
a href=3D'http://www.csdn.net/company/marketing.html' =
target=3D'_blank'>=E5=B9=BF=E5=91=8A=E6=9C=8D=E5=8A=A1</a><span>|</span><=
a href=3D'http://www.csdn.net/company/contact.html' =
target=3D'_blank'>=E8=81=94=E7=B3=BB=E6=96=B9=E5=BC=8F</a><span>|</span><=
a href=3D'http://www.csdn.net/company/statement.html' =
target=3D'_blank'>=E7=89=88=E6=9D=83=E5=A3=B0=E6=98=8E</a><span>|</span><=
a href=3D'http://www.csdn.net/company/layer.html' =
target=3D'_blank'>=E6=B3=95=E5=BE=8B=E9=A1=BE=E9=97=AE</a><span>|</span><=
a =
href=3D'mailto:webmaster@csdn.net'>=E9=97=AE=E9=A2=98=E6=8A=A5=E5=91=8A</=
a><span>|</span><a target=3D'_blank' =
href=3D'http://www.csdn.net/friendlink.html'>=E5=90=88=E4=BD=9C=E4=BC=99=E4=
=BC=B4</a><span>|</span><a href=3D'http://bbs.csdn.net/forums/Service' =
target=3D'_blank'>=E8=AE=BA=E5=9D=9B=E5=8F=8D=E9=A6=88</a></dd>");
    document.write("<dd class=3D'foot_contact'><a =
href=3D'javascript:void(0);' target=3D'_blank' =
class=3D'qq'>=E7=BD=91=E7=AB=99=E5=AE=A2=E6=9C=8D</a><a =
href=3D'http://wpa.qq.com/msgrd?v=3D3&uin=3D2251809102&site=3Dqq&menu=3Dy=
es' target=3D'_blank' =
class=3D'qq'>=E6=9D=82=E5=BF=97=E5=AE=A2=E6=9C=8D</a><a =
href=3D'http://e.weibo.com/csdnsupport/profile' target=3D'_blank' =
class=3D'weibo'>=E5=BE=AE=E5=8D=9A=E5=AE=A2=E6=9C=8D</a><a =
href=3D'mailto:webmaster@csdn.net' class=3D'email' =
title=3D'=E8=81=94=E7=B3=BB=E9=82=AE=E7=AE=B1'>webmaster@csdn.net</a><spa=
n class=3D'phone' =
title=3D'=E6=9C=8D=E5=8A=A1=E7=83=AD=E7=BA=BF'>400-600-2320</span><span =
class=3D'interval'>|</span><span>=E5=8C=97=E4=BA=AC=E5=88=9B=E6=96=B0=E4=B9=
=90=E7=9F=A5=E4=BF=A1=E6=81=AF=E6=8A=80=E6=9C=AF=E6=9C=89=E9=99=90=E5=85=AC=
=E5=8F=B8 =E7=89=88=E6=9D=83=E6=89=80=E6=9C=89</span><span =
class=3D'interval'>|</span><span>=E6=B1=9F=E8=8B=8F=E7=9F=A5=E4=B9=8B=E4=B8=
=BA=E8=AE=A1=E7=AE=97=E6=9C=BA=E6=9C=89=E9=99=90=E5=85=AC=E5=8F=B8</span>=
<span =
class=3D'interval'>|</span><span>=E6=B1=9F=E8=8B=8F=E4=B9=90=E7=9F=A5=E7=BD=
=91=E7=BB=9C=E6=8A=80=E6=9C=AF=E6=9C=89=E9=99=90=E5=85=AC=E5=8F=B8</span>=
</dd>");
    document.write("<dd  =
class=3D'foot_copyright'><span>=E4=BA=AC&nbsp;ICP&nbsp;=E8=AF=81&nbsp;090=
02463&nbsp;=E5=8F=B7</span><span =
class=3D'interval'>|</span><span>Copyright &copy; 1999-2016, CSDN.NET, =
All Rights Reserved&nbsp;</span><a =
href=3D'http://www.hd315.gov.cn/beian/view.asp?bianhao=3D0102020010321000=
10' target=3D'_blank'><img =
src=3D'http://c.csdnimg.cn/pubfooter/images/gongshang_logos.gif' =
alt=3D'GongshangLogo' alt=3D'' title=3D'' /></a></dd>");
    document.write("</dl>");
    document.write("</div>");
    document.write("</div>");
    document.write('<script id=3D"noticeScript" type=3D"text/javascript" =
 btnId=3D"header_notice_num" wrapId=3D"note1" count=3D"5" subcount=3D"5" =
src=3D"' + protocol + =
'//csdnimg.cn/rabbit/notev2/js/notify.js?9d86d94"></script>');

    /*
    var head =3D document.getElementsByTagName('head')[0]
        , s, ss =3D [
            protocol + '//csdnimg.cn/rabbit/tracking-ad/main.js?75eacd8'
        ]
    ;

    for (var i =3D 0; i < ss.length; i++) {
        s =3D document.createElement('script')
        s.type =3D 'text/javascript';
        s.charset =3D 'utf-8';
        s.src =3D ss[i];
        head.insertBefore(s, null);
    }
    */
    $(".qq:first").click(function (event) {
        var qqs =3D [2431299880, 3456678348, 3455921142];
        var qq =3D (new Date().getDay() =3D=3D 0 || new Date().getDay() =
=3D=3D 6) ? qqs[0] : qqs[Math.floor(Math.random() * qqs.length)];;
        $(this).attr('href', 'http://wpa.qq.com/msgrd?v=3D3&uin=3D' + qq =
+ '&site=3Dqq&menu=3Dyes');
    });

}());
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://passport.csdn.net/content/loginbox/login.js

/*
* CSDN =E7=99=BB=E5=BD=95=E6=A1=86
* Copyright 2012, zhuhz@csdn.net
* Date: 2012-6-6
*=20
* =E8=B0=83=E7=94=A8=EF=BC=9Acsdn.showLogin(callback);
*
* =
=E8=8E=B7=E5=8F=96=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=
=90=8D=EF=BC=88=E5=8F=AF=E7=94=A8=E4=BA=8E=E5=88=A4=E6=96=AD=E7=94=A8=E6=88=
=B7=E6=98=AF=E5=90=A6=E5=A4=84=E4=BA=8E=E7=99=BB=E5=BD=95=E7=8A=B6=E6=80=81=
=EF=BC=89=EF=BC=9Acsdn.getCookie('UserName')
*/
var csdn =3D window.csdn || function () { };

csdn.domain =3D "passport.csdn.net";
csdn.doing =3D false;
csdn.$ =3D function (id) {
    return document.getElementById(id);
};
csdn.loginBack =3D null;
csdn.showLogin =3D function (callback) {

    var div =3D document.createElement("DIV");
    div.id =3D "csdn_divh";
    //div.style.marginLeft =3D "-200px";
    div.style.marginTop =3D -75 + (document.documentElement.scrollTop || =
document.body.scrollTop) + "px";

    // var title =3D '=E7=99=BB=E5=BD=95<a class=3D"close" =
href=3D"javascript:void(0);" =
onclick=3D"javascript:csdn.closeLogin();return false;" =
title=3D"=E5=85=B3=E9=97=AD=E7=AA=97=E5=8F=A3">[X]</a>';
    var title =3D '';
    var body =3D csdn.loginForm();
    var bottom =3D '';
    var s =3D csdn.openBox().replace('#title#', title).replace('#body#', =
body);
    div.innerHTML =3D s;

    csdn.shieldBody();
    document.body.appendChild(div);

    var un =3D csdn.getCookie("UN");
    if (un) {
        csdn.$('u').value =3D un;
        csdn.$('p').focus();
    }
    else {
        csdn.$('u').focus();
    }
    csdn.$('u').onkeypress =3D
    csdn.$('p').onkeypress =3D function (ev) {
        if (csdn.isEnter(ev)) {
            csdn.login();
        }
    };
    csdn.loginBack =3D callback;
};
csdn.closeLogin =3D function () {
    document.body.removeChild(csdn.$('csdn_divh'));
    document.body.removeChild(csdn.$('csdn_shield'));
};
csdn.shieldBody =3D function () {
    var shield =3D document.createElement("DIV");
    shield.id =3D "csdn_shield";
    var h1 =3D document.documentElement.clientHeight;
    var h2 =3D document.documentElement.scrollHeight;
    shield.style.height =3D Math.max(h1, h2) + "px";
    shield.style.filter =3D "alpha(opacity=3D0)";
    shield.style.opacity =3D 0;
    document.body.appendChild(shield);

    csdn.setOpacity =3D function (obj, opacity) {
        if (opacity >=3D 1) opacity =3D opacity / 100;
        try { obj.style.opacity =3D opacity; } catch (err) { }
        try {
            if (obj.filters.length > 0 && obj.filters("alpha")) {
                obj.filters("alpha").opacity =3D opacity * 150;
            } else {
                obj.style.filter =3D "alpha(opacity=3D\"" + (opacity * =
150) + "\")";
            }
        } catch (err) { }
    };
    var c =3D 0;
    csdn.doAlpha =3D function () {
        c +=3D 2;
        if (c > 20) { clearInterval(ad); return 0; }
        csdn.setOpacity(shield, c);
    };
    var ad =3D setInterval("csdn.doAlpha()", 1);
};
csdn.setStyle =3D function () {
    var lk =3D document.createElement("LINK");
    lk.type =3D "text/css";
    lk.rel =3D "stylesheet";
    lk.href =3D location.protocol + "//" + csdn.domain + =
"/content/loginbox/style.css?r=3D" + (new Date().getTime());
    var head =3D document.getElementsByTagName("head")[0];
    head.appendChild(lk);
};
csdn.isEnter =3D function (ev) {
    ev =3D ev || window.event;
    var code =3D (ev.keyCode || ev.which);
    return (code =3D=3D 10 || code =3D=3D 13);
};
csdn.getCookie =3D function (name) {
    var ck =3D document.cookie.match(new RegExp("(^| )" + name + =
"=3D([^;]*)(;|$)"));
    if (ck) return ck[2];
    else return null;
};
csdn.setCookie =3D function (name, value, expires) {
    if (expires) expires =3D '; expires=3D' + new =
Date(expires).toUTCString();
    else expires =3D '';
    var path =3D '; path=3D/';
    var domain =3D '; domain=3D' + document.domain.replace('www.', '');

    document.cookie =3D [name, '=3D', encodeURIComponent(value), =
expires, path, domain].join('');
}

csdn.openBox =3D function () {
    var text =3D
         "<div class=3D'boxbody'>#body#</div>"

    return text;
};
csdn.loginForm =3D function () {
    var fromurl =3D encodeURIComponent(location.href);
    var text =3D "<div class=3D'csdn_loginbox' style=3D'z-index: 100'>"
+ "<div class=3D'login_content'>"

+ "<input name=3D'close' type=3D'button' class=3D'close'  =
onclick=3D'javascript:csdn.closeLogin();return false;'  />"
+ "<p class=3D'point' id=3D'sperr'></p>"
+ "<input name=3D'user_id'  id=3D'u'  type=3D'text' class=3D'user_id' =
placeholder=3D'=E7=94=A8=E6=88=B7ID/=E6=B3=A8=E5=86=8C=E9=82=AE=E7=AE=B1'=
 />"
+ "<input name=3D'password' id=3D'p' type=3D'password' =
class=3D'password' placeholder=3D'=E5=AF=86=E7=A0=81'/ >"
+ "<label><p class=3D'remember clearfix'><input name=3D'checkbox'  =
id=3D'chkre' type=3D'checkbox' value=3D'checkbox' =
/>=E8=AE=B0=E4=BD=8F=E6=88=91=E4=B8=80=E5=91=A8</p></label>"
+ "<div class=3D'pw_lg'>"
+ "<a href=3D'https://" + csdn.domain + "/account/forgotpassword' =
target=3D'_blank' >=E5=BF=98=E8=AE=B0=E5=AF=86=E7=A0=81</a>|<a =
href=3D'https://" + csdn.domain + "/account/register' target=3D'_blank' =
class=3D'pw_a'>=E6=B3=A8=E5=86=8C</a>"
+ "</div>"
+ "<input name=3D'button' type=3D'button' =
onclick=3D'javascript:csdn.login();return false;' value=3D'=E7=99=BB  =
=E5=BD=95' class=3D'login_bt'/>"
+ "<div class=3D'lg_3 clearfix'>"
+ "<a href=3D'https://" + csdn.domain + "/auth/baidu?from=3D" + fromurl =
+ "' target=3D'_blank' class=3D'baidu'></a>"
+ "<a href=3D'https://" + csdn.domain + "/auth/Github?from=3D" + fromurl =
+ "' target=3D'_blank' class=3D'github'></a>"
+ "<a href=3D'https://" + csdn.domain + "/auth/qq?from=3D" + fromurl + =
"' target=3D'_blank' class=3D'qq'></a>"
+ "<a href=3D'https://" + csdn.domain + "/auth/sinat?from=3D" + fromurl =
+ "' target=3D'_blank' class=3D'weibo'></a>"
+ "=E7=AC=AC=E4=B8=89=E6=96=B9=E7=99=BB=E5=BD=95=EF=BC=9A"
+ "</div></div>"
+ "<iframe frameborder=3D'no' allowtransparency=3D'yes' =
style=3D'position: absolute; width:100%; height: 311px; left: 0; top: =
100px; border: 0; z-index: -1;'>"
+ "</div>";


    return text;
};

csdn.login =3D function () {
    if (csdn.doing) return;
    var u =3D csdn.$('u');
    var p =3D csdn.$('p');
    var er =3D csdn.$('sperr');
    if (!u.value) {
        er.innerHTML =3D '* =
=E8=AF=B7=E8=BE=93=E5=85=A5=E7=94=A8=E6=88=B7=E5=90=8D/=E9=82=AE=E7=AE=B1=
=E3=80=82';
        return;
    }
    if (!p.value) {
        er.innerHTML =3D '* =
=E8=AF=B7=E8=BE=93=E5=85=A5=E5=AF=86=E7=A0=81=E3=80=82';
        return;
    }
    csdn.doing =3D true;
    er.innerHTML =3D '=E6=AD=A3=E5=9C=A8=E7=99=BB=E5=BD=95...';
    var url =3D location.protocol + '//' + csdn.domain + =
'/ajax/accounthandler.ashx';
    var data =3D 't=3Dlog&u=3D' + encodeURIComponent(u.value)
        + '&p=3D' + encodeURIComponent(p.value)
        + '&remember=3D' + (csdn.$('chkre').checked ? 1 : 0)
        + '&callback=3Dcsdn.login_back'
        + '&r=3D' + (new Date().getTime());

    csdn.post(url + '?' + data);
};
csdn.login_back =3D function (data) {
    if (data.status) {
        var userName =3D data.data.userName;
        var userInfo =3D data.data.encryptUserInfo;
        var exp =3D csdn.$('chkre').checked ? 7 : 0;
        var url =3D location.protocol + '//' + csdn.domain + =
'/home/ssoindex'
            + '?userName=3D' + encodeURIComponent(userName)
            + '&userInfo=3D' + encodeURIComponent(userInfo)
            + '&exp=3D' + exp;

        csdn.load_frm(url, csdn.login_ok(data));
    } else {
        if (data.error.indexOf("=E6=BF=80=E6=B4=BB") > -1) {
            csdn.$('sperr').innerHTML =3D '* =
=E8=B4=A6=E6=88=B7=E6=9C=AA=E6=BF=80=E6=B4=BB=EF=BC=8C=E8=AF=B7=E5=85=88<=
a href=3D"https://' + csdn.domain + '/account/active?from=3D' + =
encodeURIComponent(location + '') + '" =
target=3D_blank>=E6=BF=80=E6=B4=BB</a>=E3=80=82';
        } else {
            csdn.$('sperr').innerHTML =3D '* ' + data.error;
        }
        csdn.doing =3D false;
    }
};
csdn.login_ok =3D function (data) {
    csdn.doing =3D false;
    csdn.$('sperr').innerHTML =3D '<span =
style=3D"color:green;">=E7=99=BB=E5=BD=95=E6=88=90=E5=8A=9F=EF=BC=81</spa=
n>';
    if (csdn.loginBack) csdn.loginBack(data);
    csdn.closeLogin();
};
csdn.post =3D function (url, callback) {
    var sc =3D document.createElement("script");
    sc.type =3D 'text/javascript';
    sc.async =3D true;
    sc.src =3D url;
    if (callback) {
        if (sc.onload) sc.onload =3D callback;
        else sc.onreadystatechange =3D callback;
    }
    document.body.appendChild(sc);
};
csdn.arr_isloaded =3D [];
csdn.load_frm =3D function (url, loaded) {
    var idx =3D csdn.arr_isloaded.length;
    csdn.arr_isloaded[idx] =3D false;
    var frm =3D document.createElement("iframe");
    frm.style.width =3D '1px';
    frm.style.height =3D '1px';
    frm.style.visibility =3D 'hidden';
    frm.src =3D url;
    if (loaded) {
        var call =3D function () {
            if (!csdn.arr_isloaded[idx]) {
                csdn.arr_isloaded[idx] =3D true;
                loaded();
            }
        };
        if (frm.onreadystatechange) {
            frm.onreadystatechange =3D call;
        } else {
            frm.onload =3D call;
        }
        setTimeout(call, 5000);
    }
    document.body.appendChild(frm);
};
/*=E5=8A=A0=E8=BD=BD=E6=A0=B7=E5=BC=8F=E8=A1=A8=E5=8D=95*/
(function () {
    if (typeof jQuery !=3D 'undefined') {
        jQuery(csdn.setStyle);
    } else {
        var ld =3D window.onload;
        window.onload =3D function () {
            if (ld) ld();
            csdn.setStyle();
        };
    }
})();



------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.csdn.net/ui/scripts/Csdn/counter.js

document.write('<script type=3D"text/javascript" charset=3D"UTF-8" =
src=3D"http://message.csdn.net/msg.popup.js"><'+'/script>');
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: 7bit
Content-Location: http://ad.csdn.net/scripts/ad-blog.js

var ad_type = 'js1616';
var ad_sc = '<script type="text/javascript" '
    + 'src="http://ad.csdn.net/scripts/ad-' + ad_type + '.js"'
    + '></'
    + 'script>';
//document.writeln(ad_sc);

ad_type = 'js1617_2';
ad_sc = '<script type="text/javascript" '
    + 'src="http://ad.csdn.net/scripts/ad-' + ad_type + '.js"'
    + '></'
    + 'script>';
//document.writeln(ad_sc);

ad_type = 'js1618_3';
ad_sc = '<script type="text/javascript" '
    + 'src="http://ad.csdn.net/scripts/ad-' + ad_type + '.js"'
    + '></'
    + 'script>';

//document.writeln(ad_sc);
/*
ad_type = 'ms1585_4';
ad_sc = '<script type="text/javascript" '
    + 'src="http://ad.csdn.net/scripts/ad-' + ad_type + '.js"'
    + '></'
    + 'script>';

document.writeln(ad_sc);

ad_type = 'ms1573_5';
ad_sc = '<script type="text/javascript" '
    + 'src="http://ad.csdn.net/scripts/ad-' + ad_type + '.js"'
    + '></'
    + 'script>';

document.writeln(ad_sc);

ad_type = 'ms1548_6';
ad_sc = '<script type="text/javascript" '
    + 'src="http://ad.csdn.net/scripts/ad-' + ad_type + '.js"'
    + '></'
    + 'script>';

document.writeln(ad_sc);
*/
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/public/common/toolbar/js/toolbar.js

// Generated by CoffeeScript 1.6.3=0A=
(function () {=0A=
  !(function (window) {=0A=
    var Toolbar;=0A=
    var currUser =3D {=0A=
      //use to join avator=0A=
      AU: ""=0A=
    };=0A=
    var isNotifyShowed =3D false;=0A=
    var AUtoAvatar =3D function (AU) {=0A=
      _AUPath =3D AU.split("").join("/");=0A=
      return "http://avatar.csdn.net/" + _AUPath + "/2_" + =
currUser.userName + ".jpg";=0A=
    }=0A=
    var getActive =3D function () {=0A=
      return document.activeElement;=0A=
    }=0A=
    Toolbar =3D function (opts) {=0A=
      this.opts =3D opts;=0A=
      this.Doms =3D {};=0A=
      this.Curr =3D null;=0A=
      this.init.apply(this, [opts]);=0A=
    };=0A=
    Toolbar.prototype =3D {=0A=
      init: function (opts) {=0A=
        opts =3D opts || this.opts;=0A=
        this.getDoms(opts).bindEvent();=0A=
        this.initFavor();=0A=
        this.initNotify();=0A=
        this.initProfile();=0A=
      },=0A=
=0A=
      /*=0A=
       * =
=E9=91=B1=E6=B0=AC=E6=82=8E=E9=8E=B5=E2=82=AC=E9=8F=88=E5=A1=AAom=E9=8E=B6=
=E6=92=B3=E5=BD=87=0A=
       */=0A=
      getDoms: function (opts) {=0A=
        opts =3D opts || this.opts;=0A=
        this.Doms.wraper =3D opts.wraper;=0A=
        this.folded =3D true;=0A=
        this.Doms.listBtns =3D $(opts.wraper + " ul.btns>li");=0A=
        this.Doms.profile =3D $(opts.wraper + " .profile");=0A=
        return this;=0A=
      },=0A=
      bindEvent: function (opts) {=0A=
        var _this =3D this;=0A=
        var $loginWrap =3D $(this.Doms.wraper + " .login-wrap");=0A=
        opts =3D opts || this.opts;=0A=
=0A=
        this.Doms.listBtns.bind('mouseover', function (event) {=0A=
          _this.Curr =3D $(this).parent().children().filter(".on")[0];=0A=
=0A=
          if ($(event.target).hasClass("notify") || =
$(event.target).parents().filter(".notify").length) {=0A=
=0A=
            if (!isNotifyShowed || opts.notifyInst.isHasNewMsg()) {=0A=
              $("#header_notice_num").trigger("click");=0A=
              isNotifyShowed =3D true;=0A=
            }=0A=
          }=0A=
          if (_this.Curr =3D=3D this) {=0A=
            return;=0A=
          }=0A=
          $(_this.Curr).removeClass("on");=0A=
          $(this).addClass("on");=0A=
          _this.folded =3D false;=0A=
        });=0A=
        $(this.Doms.wraper).bind('mouseout',function(e){=0A=
            =
if($(getActive()).parents().filter(_this.Doms.wraper).length>0){=0A=
              return;=0A=
            }=0A=
            $(document.body).trigger("toolbar-fold");=0A=
            $(_this.Doms.wraper).find(".on").removeClass("on");// hotfix =
geek.csdn.net firfox can't removeclass "on"=0A=
        });=0A=
=0A=
        $(document).bind("click", function (e) {=0A=
          if ($(e.target).parents().filter(_this.Doms.wraper).length =
<=3D 0) {=0A=
            $(document.body).trigger("toolbar-fold");=0A=
            $(_this.Doms.wraper).find(".on").removeClass("on");// hotfix =
geek.csdn.net webkit click can't removeclass "on"=0A=
          }=0A=
        });=0A=
=0A=
        $(document.body).bind("toolbar-fold", function (e) {=0A=
          _this.Doms.listBtns.filter(".on").removeClass("on");=0A=
        });=0A=
        $(this.Doms.wraper + " .search form").bind("keyup", function (e) =
{=0A=
          if (e.keycode =3D=3D 13) {=0A=
            this.submit();=0A=
          }=0A=
        });=0A=
        // $(document).bind("userLogined",function(e,userData){=0A=
        //   $loginWrap.removeClass("unlogin");=0A=
        //   userData.userName&&$loginWrap.show();=0A=
        // });=0A=
=0A=
        // $(document).bind("userLoginOut",function(e,username){=0A=
        //   $loginWrap.addClass("unlogin").removeClass("hide").show();=0A=
        // });=0A=
=0A=
=0A=
        return this;=0A=
      },=0A=
      initLogo: function (opts) {},=0A=
      initFavor: function () {=0A=
        var _wraper =3D this.Doms.wraper + " .favor"=0A=
        var _title =3D document.title;=0A=
        var _url =3D document.location.href;=0A=
        var $title =3D $(_wraper + " .title");=0A=
        var $url =3D $(_wraper + " .url");=0A=
        // var $tag =3D $(_wraper + " .tag");=0A=
        // var $description =3D $(_wraper + " .description");=0A=
        var $tag =3D $(_wraper + " #input-tag");=0A=
        var $description =3D $(_wraper + " #input-description");=0A=
        var $share =3D $(_wraper + " .share");=0A=
        var $cancel =3D $(_wraper + " .cancel");=0A=
        var $submit =3D $(_wraper + " .submit");=0A=
        var $ok =3D $(_wraper + " .ok");=0A=
=0A=
=0A=
        //set value=0A=
        $title.val(_title);=0A=
        $url.val(_url);=0A=
        $share.attr("checked", true);=0A=
=0A=
        //bind event=0A=
        $cancel.bind("click", function (e) {=0A=
          $(document.body).trigger("toolbar-fold");=0A=
          $(this).closest(".on").removeClass("on");// hotfix =
geek.csdn.net webkit and firfox click can't removeclass "on"=0A=
        });=0A=
=0A=
        $ok.bind("click", function (e) {=0A=
          $(_wraper + " .favor-failed").hide();=0A=
          $(_wraper + " .favor-success").hide();=0A=
          $(_wraper + " .favor-form").show();=0A=
          $(document.body).trigger("toolbar-fold");=0A=
        });=0A=
=0A=
=0A=
        $submit.bind("click", function (e) {=0A=
          var _data =3D {=0A=
            title: $title.val(),=0A=
            //url:encodeURIComponent($url.val()),=0A=
            url: $url.val(),=0A=
            description: $description.val(),=0A=
            tag: $tag.val(),=0A=
            share: $share[0].checked ? 1 : 0=0A=
          }=0A=
=0A=
            function resetForm() {=0A=
              $(_wraper + " .title").val($title.val());=0A=
              $(_wraper + " .url").val(window.location.href);=0A=
              $(_wraper + " .tag").val("");=0A=
              $(_wraper + " .description").val("");=0A=
            }=0A=
=0A=
            function cbSuccess() {=0A=
              $(_wraper + " .favor-failed").show();=0A=
              $(_wraper + " .favor-success").hide();=0A=
              $(_wraper + " .favor-form").hide();=0A=
            }=0A=
=0A=
            function cbError() {=0A=
              $(_wraper + " .favor-failed").hide();=0A=
              $(_wraper + " .favor-success").show();=0A=
              $(_wraper + " .favor-form").hide();=0A=
            }=0A=
          $.ajax({=0A=
            data: _data,=0A=
            jsonp: "jsonpcallback",=0A=
            dataType: "jsonp",=0A=
            url: "http://my.csdn.net/service/favorite/add_favorite",=0A=
            success: function (data) {=0A=
              if (data.success =3D=3D "-1") {=0A=
                cbSuccess();=0A=
                resetForm();=0A=
              }=0A=
              if (data.success =3D=3D "1") {=0A=
                cbError();=0A=
                resetForm();=0A=
              }=0A=
            }=0A=
          });=0A=
=0A=
          return false;=0A=
        });=0A=
=0A=
      },=0A=
      initNotify: function (opts) {=0A=
        var _this =3D this;=0A=
        var opts =3D opts || this.opts;=0A=
        if (!opts.notifyInst) {=0A=
          $(opts.wraper + " .notify").hide();=0A=
          throw "notify.js not loaded!";=0A=
        }=0A=
        $(document).bind("toolbar-setNotesNum", function (e, num) {=0A=
          var $number =3D $(_this.Doms.wraper + " .number");=0A=
          var $hasnotes =3D $(_this.Doms.wraper + " .icon-hasnotes-sm");=0A=
          if (num <=3D 0) {=0A=
            $hasnotes.hide();=0A=
            return;=0A=
          } else if (num > 0) {=0A=
            $hasnotes.show();=0A=
          }=0A=
        });=0A=
        if (opts.notifyInst) {=0A=
          opts.notifyInst.on("receive_unreads", function (e, data) {=0A=
            var num =3D opts.notifyInst.getlocalUnread().length;=0A=
            $(document).trigger("toolbar-setNotesNum", num);=0A=
          });=0A=
          opts.notifyInst.on("receive_setreaded", function (e, data) {=0A=
            var num =3D opts.notifyInst.getlocalUnread().length;=0A=
            $(document).trigger("toolbar-setNotesNum", num);=0A=
          });=0A=
        }=0A=
      },=0A=
      initProfile: function (userData) {=0A=
        var _this =3D this;=0A=
      }=0A=
    };=0A=
    return window["Toolbar"] =3D Toolbar;=0A=
  })(window);=0A=
=0A=
  var $oScriptTag =3D $("#csdn-toolbar-id");=0A=
  var inst =3D typeof csdn_note =3D=3D 'undefined' ? null : csdn_note;=0A=
  new Toolbar({=0A=
    wraper: ".csdn-toolbar",=0A=
    notifyInst: inst=0A=
  });=0A=
}).call(this);
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/comm_ask/js/libs/wmd.js

/**
 * marked - a markdown parser
 * Copyright (c) 2011-2013, Christopher Jeffrey. (MIT Licensed)
 * https://github.com/chjj/marked
 */

;(function() {

/**
 * Block-Level Grammar
 */

var block =3D {
  newline: /^\n+/,
  code: /^( {4}[^\n]+\n*)+/,
  fences: noop,
  hr: /^( *[-*_]){3,} *(?:\n+|$)/,
  heading: /^ *(#{1,6}) *([^\n]+?) *#* *(?:\n+|$)/,
  nptable: noop,
  lheading: /^([^\n]+)\n *(=3D|-){2,} *(?:\n+|$)/,
  blockquote: /^( *>[^\n]+(\n[^\n]+)*\n*)+/,
  list: /^( *)(bull) [\s\S]+?(?:hr|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,
  html: /^ *(?:comment|closed|closing) *(?:\n{2,}|\s*$)/,
  def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +["(]([^\n]+)[")])? =
*(?:\n+|$)/,
  table: noop,
  paragraph: =
/^((?:[^\n]+\n?(?!hr|heading|lheading|blockquote|tag|def))+)\n*/,
  text: /^[^\n]+/
};

block.bullet =3D /(?:[*+-]|\d+\.)/;
block.item =3D /^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/;
block.item =3D replace(block.item, 'gm')
  (/bull/g, block.bullet)
  ();

block.list =3D replace(block.list)
  (/bull/g, block.bullet)
  ('hr', /\n+(?=3D(?: *[-*_]){3,} *(?:\n+|$))/)
  ();

block._tag =3D '(?!(?:'
  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'
  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'
  + '|span|br|wbr|ins|del|img)\\b)\\w+(?!:/|@)\\b';

block.html =3D replace(block.html)
  ('comment', /<!--[\s\S]*?-->/)
  ('closed', /<(tag)[\s\S]+?<\/\1>/)
  ('closing', /<tag(?:"[^"]*"|'[^']*'|[^'">])*?>/)
  (/tag/g, block._tag)
  ();

block.paragraph =3D replace(block.paragraph)
  ('hr', block.hr)
  ('heading', block.heading)
  ('lheading', block.lheading)
  ('blockquote', block.blockquote)
  ('tag', '<' + block._tag)
  ('def', block.def)
  ();

/**
 * Normal Block Grammar
 */

block.normal =3D merge({}, block);

/**
 * GFM Block Grammar
 */

block.gfm =3D merge({}, block.normal, {
  fences: /^ *(`{3,}|~{3,}) *(\S+)? *\n([\s\S]+?)\s*\1 *(?:\n+|$)/,
  paragraph: /^/
});

block.gfm.paragraph =3D replace(block.paragraph)
  ('(?!', '(?!'
    + block.gfm.fences.source.replace('\\1', '\\2') + '|'
    + block.list.source.replace('\\1', '\\3') + '|')
  ();

/**
 * GFM + Tables Block Grammar
 */

block.tables =3D merge({}, block.gfm, {
  nptable: /^ *(\S.*\|.*)\n *([-:]+ *\|[-| =
:]*)\n((?:.*\|.*(?:\n|$))*)\n*/,
  table: /^ *\|(.+)\n *\|( *[-:]+[-| :]*)\n((?: *\|.*(?:\n|$))*)\n*/
});

/**
 * Block Lexer
 */

function Lexer(options) {
  this.tokens =3D [];
  this.tokens.links =3D {};
  this.options =3D options || marked.defaults;
  this.rules =3D block.normal;

  if (this.options.gfm) {
    if (this.options.tables) {
      this.rules =3D block.tables;
    } else {
      this.rules =3D block.gfm;
    }
  }
}

/**
 * Expose Block Rules
 */

Lexer.rules =3D block;

/**
 * Static Lex Method
 */

Lexer.lex =3D function(src, options) {
  var lexer =3D new Lexer(options);
  return lexer.lex(src);
};

/**
 * Preprocessing
 */

Lexer.prototype.lex =3D function(src) {
  src =3D src
    .replace(/\r\n|\r/g, '\n')
    .replace(/\t/g, '    ')
    .replace(/\u00a0/g, ' ')
    .replace(/\u2424/g, '\n');

  return this.token(src, true);
};

/**
 * Lexing
 */

Lexer.prototype.token =3D function(src, top) {
  var src =3D src.replace(/^ +$/gm, '')
    , next
    , loose
    , cap
    , bull
    , b
    , item
    , space
    , i
    , l;

  while (src) {
    // newline
    if (cap =3D this.rules.newline.exec(src)) {
      src =3D src.substring(cap[0].length);
      if (cap[0].length > 1) {
        this.tokens.push({
          type: 'space'
        });
      }
    }

    // code
    if (cap =3D this.rules.code.exec(src)) {
      src =3D src.substring(cap[0].length);
      cap =3D cap[0].replace(/^ {4}/gm, '');
      this.tokens.push({
        type: 'code',
        text: !this.options.pedantic
          ? cap.replace(/\n+$/, '')
          : cap
      });
      continue;
    }

    // fences (gfm)
    if (cap =3D this.rules.fences.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'code',
        lang: cap[2],
        text: cap[3]
      });
      continue;
    }

    // heading
    if (cap =3D this.rules.heading.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'heading',
        depth: cap[1].length,
        text: cap[2]
      });
      continue;
    }

    // table no leading pipe (gfm)
    if (top && (cap =3D this.rules.nptable.exec(src))) {
      src =3D src.substring(cap[0].length);

      item =3D {
        type: 'table',
        header: cap[1].replace(/^ *| *\| *$/g, '').split(/ *\| */),
        align: cap[2].replace(/^ *|\| *$/g, '').split(/ *\| */),
        cells: cap[3].replace(/\n$/, '').split('\n')
      };

      for (i =3D 0; i < item.align.length; i++) {
        if (/^ *-+: *$/.test(item.align[i])) {
          item.align[i] =3D 'right';
        } else if (/^ *:-+: *$/.test(item.align[i])) {
          item.align[i] =3D 'center';
        } else if (/^ *:-+ *$/.test(item.align[i])) {
          item.align[i] =3D 'left';
        } else {
          item.align[i] =3D null;
        }
      }

      for (i =3D 0; i < item.cells.length; i++) {
        item.cells[i] =3D item.cells[i].split(/ *\| */);
      }

      this.tokens.push(item);

      continue;
    }

    // lheading
    if (cap =3D this.rules.lheading.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'heading',
        depth: cap[2] =3D=3D=3D '=3D' ? 1 : 2,
        text: cap[1]
      });
      continue;
    }

    // hr
    if (cap =3D this.rules.hr.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'hr'
      });
      continue;
    }

    // blockquote
    if (cap =3D this.rules.blockquote.exec(src)) {
      src =3D src.substring(cap[0].length);

      this.tokens.push({
        type: 'blockquote_start'
      });

      cap =3D cap[0].replace(/^ *> ?/gm, '');

      // Pass `top` to keep the current
      // "toplevel" state. This is exactly
      // how markdown.pl works.
      this.token(cap, top);

      this.tokens.push({
        type: 'blockquote_end'
      });

      continue;
    }

    // list
    if (cap =3D this.rules.list.exec(src)) {
      src =3D src.substring(cap[0].length);
      bull =3D cap[2];

      this.tokens.push({
        type: 'list_start',
        ordered: bull.length > 1
      });

      // Get each top-level item.
      cap =3D cap[0].match(this.rules.item);

      next =3D false;
      l =3D cap.length;
      i =3D 0;

      for (; i < l; i++) {
        item =3D cap[i];

        // Remove the list item's bullet
        // so it is seen as the next token.
        space =3D item.length;
        item =3D item.replace(/^ *([*+-]|\d+\.) +/, '');

        // Outdent whatever the
        // list item contains. Hacky.
        if (~item.indexOf('\n ')) {
          space -=3D item.length;
          item =3D !this.options.pedantic
            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')
            : item.replace(/^ {1,4}/gm, '');
        }

        // Determine whether the next list item belongs here.
        // Backpedal if it does not belong in this list.
        if (this.options.smartLists && i !=3D=3D l - 1) {
          b =3D block.bullet.exec(cap[i + 1])[0];
          if (bull !=3D=3D b && !(bull.length > 1 && b.length > 1)) {
            src =3D cap.slice(i + 1).join('\n') + src;
            i =3D l - 1;
          }
        }

        // Determine whether item is loose or not.
        // Use: /(^|\n)(?! )[^\n]+\n\n(?!\s*$)/
        // for discount behavior.
        loose =3D next || /\n\n(?!\s*$)/.test(item);
        if (i !=3D=3D l - 1) {
          next =3D item.charAt(item.length - 1) =3D=3D=3D '\n';
          if (!loose) loose =3D next;
        }

        this.tokens.push({
          type: loose
            ? 'loose_item_start'
            : 'list_item_start'
        });

        // Recurse.
        this.token(item, false);

        this.tokens.push({
          type: 'list_item_end'
        });
      }

      this.tokens.push({
        type: 'list_end'
      });

      continue;
    }

    // html
    if (cap =3D this.rules.html.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: this.options.sanitize
          ? 'paragraph'
          : 'html',
        pre: cap[1] =3D=3D=3D 'pre' || cap[1] =3D=3D=3D 'script' || =
cap[1] =3D=3D=3D 'style',
        text: cap[0]
      });
      continue;
    }

    // def
    if (top && (cap =3D this.rules.def.exec(src))) {
      src =3D src.substring(cap[0].length);
      this.tokens.links[cap[1].toLowerCase()] =3D {
        href: cap[2],
        title: cap[3]
      };
      continue;
    }

    // table (gfm)
    if (top && (cap =3D this.rules.table.exec(src))) {
      src =3D src.substring(cap[0].length);

      item =3D {
        type: 'table',
        header: cap[1].replace(/^ *| *\| *$/g, '').split(/ *\| */),
        align: cap[2].replace(/^ *|\| *$/g, '').split(/ *\| */),
        cells: cap[3].replace(/(?: *\| *)?\n$/, '').split('\n')
      };

      for (i =3D 0; i < item.align.length; i++) {
        if (/^ *-+: *$/.test(item.align[i])) {
          item.align[i] =3D 'right';
        } else if (/^ *:-+: *$/.test(item.align[i])) {
          item.align[i] =3D 'center';
        } else if (/^ *:-+ *$/.test(item.align[i])) {
          item.align[i] =3D 'left';
        } else {
          item.align[i] =3D null;
        }
      }

      for (i =3D 0; i < item.cells.length; i++) {
        item.cells[i] =3D item.cells[i]
          .replace(/^ *\| *| *\| *$/g, '')
          .split(/ *\| */);
      }

      this.tokens.push(item);

      continue;
    }

    // top-level paragraph
    if (top && (cap =3D this.rules.paragraph.exec(src))) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'paragraph',
        text: cap[1].charAt(cap[1].length - 1) =3D=3D=3D '\n'
          ? cap[1].slice(0, -1)
          : cap[1]
      });
      continue;
    }

    // text
    if (cap =3D this.rules.text.exec(src)) {
      // Top-level should never reach here.
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'text',
        text: cap[0]
      });
      continue;
    }

    if (src) {
      throw new
        Error('Infinite loop on byte: ' + src.charCodeAt(0));
    }
  }

  return this.tokens;
};

/**
 * Inline-Level Grammar
 */

var inline =3D {
  escape: /^\\([\\`*{}\[\]()#+\-.!_>])/,
  autolink: /^<([^ >]+(@|:\/)[^ >]+)>/,
  url: noop,
  tag: /^<!--[\s\S]*?-->|^<\/?\w+(?:"[^"]*"|'[^']*'|[^'">])*?>/,
  link: /^!?\[(inside)\]\(href\)/,
  reflink: /^!?\[(inside)\]\s*\[([^\]]*)\]/,
  nolink: /^!?\[((?:\[[^\]]*\]|[^\[\]])*)\]/,
  strong: /^__([\s\S]+?)__(?!_)|^\*\*([\s\S]+?)\*\*(?!\*)/,
  em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,
  code: /^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/,
  br: /^ {2,}\n(?!\s*$)/,
  del: noop,
  text: /^[\s\S]+?(?=3D[\\<!\[_*`]| {2,}\n|$)/
};

inline._inside =3D /(?:\[[^\]]*\]|[^\[\]]|\](?=3D[^\[]*\]))*/;
inline._href =3D /\s*<?([\s\S]*?)>?(?:\s+['"]([\s\S]*?)['"])?\s*/;

inline.link =3D replace(inline.link)
  ('inside', inline._inside)
  ('href', inline._href)
  ();

inline.reflink =3D replace(inline.reflink)
  ('inside', inline._inside)
  ();

/**
 * Normal Inline Grammar
 */

inline.normal =3D merge({}, inline);

/**
 * Pedantic Inline Grammar
 */

inline.pedantic =3D merge({}, inline.normal, {
  strong: =
/^__(?=3D\S)([\s\S]*?\S)__(?!_)|^\*\*(?=3D\S)([\s\S]*?\S)\*\*(?!\*)/,
  em: /^_(?=3D\S)([\s\S]*?\S)_(?!_)|^\*(?=3D\S)([\s\S]*?\S)\*(?!\*)/
});

/**
 * GFM Inline Grammar
 */

inline.gfm =3D merge({}, inline.normal, {
  escape: replace(inline.escape)('])', '~|])')(),
  url: /^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/,
  del: /^~~(?=3D\S)([\s\S]*?\S)~~/,
  text: replace(inline.text)
    (']|', '~]|')
    ('|', '|https?://|')
    ()
});

/**
 * GFM + Line Breaks Inline Grammar
 */

inline.breaks =3D merge({}, inline.gfm, {
  br: replace(inline.br)('{2,}', '*')(),
  text: replace(inline.gfm.text)('{2,}', '*')()
});

/**
 * Inline Lexer & Compiler
 */

function InlineLexer(links, options) {
  this.options =3D options || marked.defaults;
  this.links =3D links;
  this.rules =3D inline.normal;

  if (!this.links) {
    throw new
      Error('Tokens array requires a `links` property.');
  }

  if (this.options.gfm) {
    if (this.options.breaks) {
      this.rules =3D inline.breaks;
    } else {
      this.rules =3D inline.gfm;
    }
  } else if (this.options.pedantic) {
    this.rules =3D inline.pedantic;
  }
}

/**
 * Expose Inline Rules
 */

InlineLexer.rules =3D inline;

/**
 * Static Lexing/Compiling Method
 */

InlineLexer.output =3D function(src, links, options) {
  var inline =3D new InlineLexer(links, options);
  return inline.output(src);
};

/**
 * Lexing/Compiling
 */

InlineLexer.prototype.output =3D function(src) {
  var out =3D ''
    , link
    , text
    , href
    , cap;

  while (src) {
    // escape
    if (cap =3D this.rules.escape.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D cap[1];
      continue;
    }

    // autolink
    if (cap =3D this.rules.autolink.exec(src)) {
      src =3D src.substring(cap[0].length);
      if (cap[2] =3D=3D=3D '@') {
        text =3D cap[1].charAt(6) =3D=3D=3D ':'
          ? this.mangle(cap[1].substring(7))
          : this.mangle(cap[1]);
        href =3D this.mangle('mailto:') + text;
      } else {
        text =3D escape(cap[1]);
        href =3D text;
      }
      out +=3D '<a href=3D"'
        + href
        + '">'
        + text
        + '</a>';
      continue;
    }

    // url (gfm)
    if (cap =3D this.rules.url.exec(src)) {
      src =3D src.substring(cap[0].length);
      text =3D escape(cap[1]);
      href =3D text;
      out +=3D '<a href=3D"'
        + href
        + '">'
        + text
        + '</a>';
      continue;
    }

    // tag
    if (cap =3D this.rules.tag.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D this.options.sanitize
        ? escape(cap[0])
        : cap[0];
      continue;
    }

    // link
    if (cap =3D this.rules.link.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D this.outputLink(cap, {
        href: cap[2],
        title: cap[3]
      });
      continue;
    }

    // reflink, nolink
    if ((cap =3D this.rules.reflink.exec(src))
        || (cap =3D this.rules.nolink.exec(src))) {
      src =3D src.substring(cap[0].length);
      link =3D (cap[2] || cap[1]).replace(/\s+/g, ' ');
      link =3D this.links[link.toLowerCase()];
      if (!link || !link.href) {
        out +=3D cap[0].charAt(0);
        src =3D cap[0].substring(1) + src;
        continue;
      }
      out +=3D this.outputLink(cap, link);
      continue;
    }

    // strong
    if (cap =3D this.rules.strong.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<strong>'
        + this.output(cap[2] || cap[1])
        + '</strong>';
      continue;
    }

    // em
    if (cap =3D this.rules.em.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<em>'
        + this.output(cap[2] || cap[1])
        + '</em>';
      continue;
    }

    // code
    if (cap =3D this.rules.code.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<code>'
        + escape(cap[2], true)
        + '</code>';
      continue;
    }

    // br
    if (cap =3D this.rules.br.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<br>';
      continue;
    }

    // del (gfm)
    if (cap =3D this.rules.del.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<del>'
        + this.output(cap[1])
        + '</del>';
      continue;
    }

    // text
    if (cap =3D this.rules.text.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D escape(this.smartypants(cap[0]));
      continue;
    }

    if (src) {
      throw new
        Error('Infinite loop on byte: ' + src.charCodeAt(0));
    }
  }

  return out;
};

/**
 * Compile Link
 */

InlineLexer.prototype.outputLink =3D function(cap, link) {
  if (cap[0].charAt(0) !=3D=3D '!') {
    return '<a href=3D"'
      + escape(link.href)
      + '"'
      + (link.title
      ? ' title=3D"'
      + escape(link.title)
      + '"'
      : '')
      + '>'
      + this.output(cap[1])
      + '</a>';
  } else {
    return '<img src=3D"'
      + escape(link.href)
      + '" alt=3D"'
      + escape(cap[1])
      + '"'
      + (link.title
      ? ' title=3D"'
      + escape(link.title)
      + '"'
      : '')
      + '>';
  }
};

/**
 * Smartypants Transformations
 */

InlineLexer.prototype.smartypants =3D function(text) {
  if (!this.options.smartypants) return text;
  return text
    // em-dashes
    .replace(/--/g, '\u2014')
    // opening singles
    .replace(/(^|[-\u2014/(\[{"\s])'/g, '$1\u2018')
    // closing singles & apostrophes
    .replace(/'/g, '\u2019')
    // opening doubles
    .replace(/(^|[-\u2014/(\[{\u2018\s])"/g, '$1\u201c')
    // closing doubles
    .replace(/"/g, '\u201d')
    // ellipses
    .replace(/\.{3}/g, '\u2026');
};

/**
 * Mangle Links
 */

InlineLexer.prototype.mangle =3D function(text) {
  var out =3D ''
    , l =3D text.length
    , i =3D 0
    , ch;

  for (; i < l; i++) {
    ch =3D text.charCodeAt(i);
    if (Math.random() > 0.5) {
      ch =3D 'x' + ch.toString(16);
    }
    out +=3D '&#' + ch + ';';
  }

  return out;
};

/**
 * Parsing & Compiling
 */

function Parser(options) {
  this.tokens =3D [];
  this.token =3D null;
  this.options =3D options || marked.defaults;
}

/**
 * Static Parse Method
 */

Parser.parse =3D function(src, options) {
  var parser =3D new Parser(options);
  return parser.parse(src);
};

/**
 * Parse Loop
 */

Parser.prototype.parse =3D function(src) {
  this.inline =3D new InlineLexer(src.links, this.options);
  this.tokens =3D src.reverse();

  var out =3D '';
  while (this.next()) {
    out +=3D this.tok();
  }

  return out;
};

/**
 * Next Token
 */

Parser.prototype.next =3D function() {
  return this.token =3D this.tokens.pop();
};

/**
 * Preview Next Token
 */

Parser.prototype.peek =3D function() {
  return this.tokens[this.tokens.length - 1] || 0;
};

/**
 * Parse Text Tokens
 */

Parser.prototype.parseText =3D function() {
  var body =3D this.token.text;

  while (this.peek().type =3D=3D=3D 'text') {
    body +=3D '\n' + this.next().text;
  }

  return this.inline.output(body);
};

/**
 * Parse Current Token
 */

Parser.prototype.tok =3D function() {
  switch (this.token.type) {
    case 'space': {
      return '';
    }
    case 'hr': {
      return '<hr>\n';
    }
    case 'heading': {
      return '<h'
        + this.token.depth
        + ' id=3D"'
        + this.token.text.toLowerCase().replace(/[^\w]+/g, '-')
        + '">'
        + this.inline.output(this.token.text)
        + '</h'
        + this.token.depth
        + '>\n';
    }
    case 'code': {
      if (this.options.highlight) {
        var code =3D this.options.highlight(this.token.text, =
this.token.lang);
        if (code !=3D null && code !=3D=3D this.token.text) {
          this.token.escaped =3D true;
          this.token.text =3D code;
        }
      }

      if (!this.token.escaped) {
        this.token.text =3D escape(this.token.text, true);
      }

      return '<pre><code'
        + (this.token.lang
        ? ' class=3D"'
        + this.options.langPrefix
        + this.token.lang
        + '"'
        : '')
        + '>'
        + this.token.text
        + '</code></pre>\n';
    }
    case 'table': {
      var body =3D ''
        , heading
        , i
        , row
        , cell
        , j;

      // header
      body +=3D '<thead>\n<tr>\n';
      for (i =3D 0; i < this.token.header.length; i++) {
        heading =3D this.inline.output(this.token.header[i]);
        body +=3D '<th';
        if (this.token.align[i]) {
          body +=3D ' style=3D"text-align:' + this.token.align[i] + '"';
        }
        body +=3D '>' + heading + '</th>\n';
      }
      body +=3D '</tr>\n</thead>\n';

      // body
      body +=3D '<tbody>\n'
      for (i =3D 0; i < this.token.cells.length; i++) {
        row =3D this.token.cells[i];
        body +=3D '<tr>\n';
        for (j =3D 0; j < row.length; j++) {
          cell =3D this.inline.output(row[j]);
          body +=3D '<td';
          if (this.token.align[j]) {
            body +=3D ' style=3D"text-align:' + this.token.align[j] + =
'"';
          }
          body +=3D '>' + cell + '</td>\n';
        }
        body +=3D '</tr>\n';
      }
      body +=3D '</tbody>\n';

      return '<table>\n'
        + body
        + '</table>\n';
    }
    case 'blockquote_start': {
      var body =3D '';

      while (this.next().type !=3D=3D 'blockquote_end') {
        body +=3D this.tok();
      }

      return '<blockquote>\n'
        + body
        + '</blockquote>\n';
    }
    case 'list_start': {
      var type =3D this.token.ordered ? 'ol' : 'ul'
        , body =3D '';

      while (this.next().type !=3D=3D 'list_end') {
        body +=3D this.tok();
      }

      return '<'
        + type
        + '>\n'
        + body
        + '</'
        + type
        + '>\n';
    }
    case 'list_item_start': {
      var body =3D '';

      while (this.next().type !=3D=3D 'list_item_end') {
        body +=3D this.token.type =3D=3D=3D 'text'
          ? this.parseText()
          : this.tok();
      }

      return '<li>'
        + body
        + '</li>\n';
    }
    case 'loose_item_start': {
      var body =3D '';

      while (this.next().type !=3D=3D 'list_item_end') {
        body +=3D this.tok();
      }

      return '<li>'
        + body
        + '</li>\n';
    }
    case 'html': {
      return !this.token.pre && !this.options.pedantic
        ? this.inline.output(this.token.text)
        : this.token.text;
    }
    case 'paragraph': {
      return '<p>'
        + this.inline.output(this.token.text)
        + '</p>\n';
    }
    case 'text': {
      return '<p>'
        + this.parseText()
        + '</p>\n';
    }
  }
};

/**
 * Helpers
 */

function escape(html, encode) {
  return html
    .replace(!encode ? /&(?!#?\w+;)/g : /&/g, '&amp;')
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;')
    .replace(/"/g, '&quot;')
    .replace(/'/g, '&#39;');
}

function replace(regex, opt) {
  regex =3D regex.source;
  opt =3D opt || '';
  return function self(name, val) {
    if (!name) return new RegExp(regex, opt);
    val =3D val.source || val;
    val =3D val.replace(/(^|[^\[])\^/g, '$1');
    regex =3D regex.replace(name, val);
    return self;
  };
}

function noop() {}
noop.exec =3D noop;

function merge(obj) {
  var i =3D 1
    , target
    , key;

  for (; i < arguments.length; i++) {
    target =3D arguments[i];
    for (key in target) {
      if (Object.prototype.hasOwnProperty.call(target, key)) {
        obj[key] =3D target[key];
      }
    }
  }

  return obj;
}

/**
 * Marked
 */

function marked(src, opt, callback) {
  if (callback || typeof opt =3D=3D=3D 'function') {
    if (!callback) {
      callback =3D opt;
      opt =3D null;
    }

    opt =3D merge({}, marked.defaults, opt || {});

    var highlight =3D opt.highlight
      , tokens
      , pending
      , i =3D 0;

    try {
      tokens =3D Lexer.lex(src, opt)
    } catch (e) {
      return callback(e);
    }

    pending =3D tokens.length;

    var done =3D function() {
      var out, err;

      try {
        out =3D Parser.parse(tokens, opt);
      } catch (e) {
        err =3D e;
      }

      opt.highlight =3D highlight;

      return err
        ? callback(err)
        : callback(null, out);
    };

    if (!highlight || highlight.length < 3) {
      return done();
    }

    delete opt.highlight;

    if (!pending) return done();

    for (; i < tokens.length; i++) {
      (function(token) {
        if (token.type !=3D=3D 'code') {
          return --pending || done();
        }
        return highlight(token.text, token.lang, function(err, code) {
          if (code =3D=3D null || code =3D=3D=3D token.text) {
            return --pending || done();
          }
          token.text =3D code;
          token.escaped =3D true;
          --pending || done();
        });
      })(tokens[i]);
    }

    return;
  }
  try {
    if (opt) opt =3D merge({}, marked.defaults, opt);
    return Parser.parse(Lexer.lex(src, opt), opt);
  } catch (e) {
    e.message +=3D '\nPlease report this to =
https://github.com/chjj/marked.';
    if ((opt || marked.defaults).silent) {
      return '<p>An error occured:</p><pre>'
        + escape(e.message + '', true)
        + '</pre>';
    }
    throw e;
  }
}

/**
 * Options
 */

marked.options =3D
marked.setOptions =3D function(opt) {
  merge(marked.defaults, opt);
  return marked;
};

marked.defaults =3D {
  gfm: true,
  tables: true,
  breaks: false,
  pedantic: false,
  sanitize: false,
  smartLists: false,
  silent: false,
  highlight: null,
  langPrefix: 'lang-',
  smartypants: false
};

/**
 * Expose
 */

marked.Parser =3D Parser;
marked.parser =3D Parser.parse;

marked.Lexer =3D Lexer;
marked.lexer =3D Lexer.lex;

marked.InlineLexer =3D InlineLexer;
marked.inlineLexer =3D InlineLexer.output;

marked.parse =3D marked;

if (typeof exports =3D=3D=3D 'object') {
  module.exports =3D marked;
} else if (typeof define =3D=3D=3D 'function' && define.amd) {
  define(function() { return marked; });
} else {
  this.marked =3D marked;
}

}).call(function() {
  return this || (typeof window !=3D=3D 'undefined' ? window : global);
}());

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/comm_ask/js/libs/showdown.js

(function(global) {
// CodeMirror version 3.15
//
// CodeMirror is the only global var we claim
    var CodeMirror =3D (function() {
        "use strict";

        // BROWSER SNIFFING

        // Crude, but necessary to handle a number of =
hard-to-feature-detect
        // bugs and behavior differences.
        var gecko =3D /gecko\/\d/i.test(navigator.userAgent);
        var ie =3D /MSIE \d/.test(navigator.userAgent);
        var ie_lt8 =3D ie && (document.documentMode =3D=3D null || =
document.documentMode < 8);
        var ie_lt9 =3D ie && (document.documentMode =3D=3D null || =
document.documentMode < 9);
        var webkit =3D /WebKit\//.test(navigator.userAgent);
        var qtwebkit =3D webkit && =
/Qt\/\d+\.\d+/.test(navigator.userAgent);
        var chrome =3D /Chrome\//.test(navigator.userAgent);
        var opera =3D /Opera\//.test(navigator.userAgent);
        var safari =3D /Apple Computer/.test(navigator.vendor);
        var khtml =3D /KHTML\//.test(navigator.userAgent);
        var mac_geLion =3D /Mac OS X =
1\d\D([7-9]|\d\d)\D/.test(navigator.userAgent);
        var mac_geMountainLion =3D /Mac OS X =
1\d\D([8-9]|\d\d)\D/.test(navigator.userAgent);
        var phantom =3D /PhantomJS/.test(navigator.userAgent);

        var ios =3D /AppleWebKit/.test(navigator.userAgent) && =
/Mobile\/\w+/.test(navigator.userAgent);
        // This is woefully incomplete. Suggestions for alternative =
methods welcome.
        var mobile =3D ios || /Android|webOS|BlackBerry|Opera Mini|Opera =
Mobi|IEMobile/i.test(navigator.userAgent);
        var mac =3D ios || /Mac/.test(navigator.platform);
        var windows =3D /windows/i.test(navigator.platform);

        var opera_version =3D opera && =
navigator.userAgent.match(/Version\/(\d*\.\d*)/);
        if (opera_version) opera_version =3D Number(opera_version[1]);
        if (opera_version && opera_version >=3D 15) { opera =3D false; =
webkit =3D true; }
        // Some browsers use the wrong event properties to signal =
cmd/ctrl on OS X
        var flipCtrlCmd =3D mac && (qtwebkit || opera && (opera_version =
=3D=3D null || opera_version < 12.11));
        var captureMiddleClick =3D gecko || (ie && !ie_lt9);

        // Optimize some code when these features are not used
        var sawReadOnlySpans =3D false, sawCollapsedSpans =3D false;

        // CONSTRUCTOR

        function CodeMirror(place, options) {
            if (!(this instanceof CodeMirror)) return new =
CodeMirror(place, options);

            this.options =3D options =3D options || {};
            // Determine effective options based on given values and =
defaults.
            for (var opt in defaults) if (!options.hasOwnProperty(opt) =
&& defaults.hasOwnProperty(opt))
                options[opt] =3D defaults[opt];
            setGuttersForLineNumbers(options);

            var docStart =3D typeof options.value =3D=3D "string" ? 0 : =
options.value.first;
            var display =3D this.display =3D makeDisplay(place, =
docStart);
            display.wrapper.CodeMirror =3D this;
            updateGutters(this);
            if (options.autofocus && !mobile) focusInput(this);

            this.state =3D {keyMaps: [],
                overlays: [],
                modeGen: 0,
                overwrite: false, focused: false,
                suppressEdits: false, pasteIncoming: false,
                draggingText: false,
                highlight: new Delayed()};

            themeChanged(this);
            if (options.lineWrapping)
                this.display.wrapper.className +=3D " CodeMirror-wrap";

            var doc =3D options.value;
            if (typeof doc =3D=3D "string") doc =3D new =
Doc(options.value, options.mode);
            operation(this, attachDoc)(this, doc);

            // Override magic textarea content restore that IE sometimes =
does
            // on our hidden textarea on reload
            if (ie) setTimeout(bind(resetInput, this, true), 20);

            registerEventHandlers(this);
            // IE throws unspecified error in certain cases, when
            // trying to access activeElement before onload
            var hasFocus; try { hasFocus =3D (document.activeElement =
=3D=3D display.input); } catch(e) { }
            if (hasFocus || (options.autofocus && !mobile)) =
setTimeout(bind(onFocus, this), 20);
            else onBlur(this);

            operation(this, function() {
                for (var opt in optionHandlers)
                    if (optionHandlers.propertyIsEnumerable(opt))
                        optionHandlers[opt](this, options[opt], Init);
                for (var i =3D 0; i < initHooks.length; ++i) =
initHooks[i](this);
            })();
        }

        // DISPLAY CONSTRUCTOR

        function makeDisplay(place, docStart) {
            var d =3D {};

            var input =3D d.input =3D elt("textarea", null, null, =
"position: absolute; padding: 0; width: 1px; height: 1em; outline: none; =
font-size: 4px;");
            if (webkit) input.style.width =3D "1000px";
            else input.setAttribute("wrap", "off");
            // if border: 0; -- iOS fails to open keyboard (issue #1287)
            if (ios) input.style.border =3D "1px solid black";
            input.setAttribute("autocorrect", "off"); =
input.setAttribute("autocapitalize", "off"); =
input.setAttribute("spellcheck", "false");

            // Wraps and hides input textarea
            d.inputDiv =3D elt("div", [input], null, "overflow: hidden; =
position: relative; width: 3px; height: 0px;");
            // The actual fake scrollbars.
            d.scrollbarH =3D elt("div", [elt("div", null, null, "height: =
1px")], "CodeMirror-hscrollbar");
            d.scrollbarV =3D elt("div", [elt("div", null, null, "width: =
1px")], "CodeMirror-vscrollbar");
            d.scrollbarFiller =3D elt("div", null, =
"CodeMirror-scrollbar-filler");
            d.gutterFiller =3D elt("div", null, =
"CodeMirror-gutter-filler");
            // DIVs containing the selection and the actual code
            d.lineDiv =3D elt("div", null, "CodeMirror-code");
            d.selectionDiv =3D elt("div", null, null, "position: =
relative; z-index: 1");
            // Blinky cursor, and element used to ensure cursor fits at =
the end of a line
            d.cursor =3D elt("div", "\u00a0", "CodeMirror-cursor");
            // Secondary cursor, shown when on a 'jump' in =
bi-directional text
            d.otherCursor =3D elt("div", "\u00a0", "CodeMirror-cursor =
CodeMirror-secondarycursor");
            // Used to measure text size
            d.measure =3D elt("div", null, "CodeMirror-measure");
            // Wraps everything that needs to exist inside the =
vertically-padded coordinate system
            d.lineSpace =3D elt("div", [d.measure, d.selectionDiv, =
d.lineDiv, d.cursor, d.otherCursor],
                null, "position: relative; outline: none");
            // Moved around its parent to cover visible view
            d.mover =3D elt("div", [elt("div", [d.lineSpace], =
"CodeMirror-lines")], null, "position: relative");
            // Set to the height of the text, causes scrolling
            d.sizer =3D elt("div", [d.mover], "CodeMirror-sizer");
            // D is needed because behavior of elts with overflow: auto =
and padding is inconsistent across browsers
            d.heightForcer =3D elt("div", null, null, "position: =
absolute; height: " + scrollerCutOff + "px; width: 1px;");
            // Will contain the gutters, if any
            d.gutters =3D elt("div", null, "CodeMirror-gutters");
            d.lineGutter =3D null;
            // Provides scrolling
            d.scroller =3D elt("div", [d.sizer, d.heightForcer, =
d.gutters], "CodeMirror-scroll");
            d.scroller.setAttribute("tabIndex", "-1");
            // The element in which the editor lives.
            d.wrapper =3D elt("div", [d.inputDiv, d.scrollbarH, =
d.scrollbarV,
                d.scrollbarFiller, d.gutterFiller, d.scroller], =
"CodeMirror");
            // Work around IE7 z-index bug
            if (ie_lt8) { d.gutters.style.zIndex =3D -1; =
d.scroller.style.paddingRight =3D 0; }
            if (place.appendChild) place.appendChild(d.wrapper); else =
place(d.wrapper);

            // Needed to hide big blue blinking cursor on Mobile Safari
            if (ios) input.style.width =3D "0px";
            if (!webkit) d.scroller.draggable =3D true;
            // Needed to handle Tab key in KHTML
            if (khtml) { d.inputDiv.style.height =3D "1px"; =
d.inputDiv.style.position =3D "absolute"; }
            // Need to set a minimum width to see the scrollbar on IE7 =
(but must not set it on IE8).
            else if (ie_lt8) d.scrollbarH.style.minWidth =3D =
d.scrollbarV.style.minWidth =3D "18px";

            // Current visible range (may be bigger than the view =
window).
            d.viewOffset =3D d.lastSizeC =3D 0;
            d.showingFrom =3D d.showingTo =3D docStart;

            // Used to only resize the line number gutter when necessary =
(when
            // the amount of lines crosses a boundary that makes its =
width change)
            d.lineNumWidth =3D d.lineNumInnerWidth =3D d.lineNumChars =
=3D null;
            // See readInput and resetInput
            d.prevInput =3D "";
            // Set to true when a non-horizontal-scrolling widget is =
added. As
            // an optimization, widget aligning is skipped when d is =
false.
            d.alignWidgets =3D false;
            // Flag that indicates whether we currently expect input to =
appear
            // (after some event like 'keypress' or 'input') and are =
polling
            // intensively.
            d.pollingFast =3D false;
            // Self-resetting timeout for the poller
            d.poll =3D new Delayed();

            d.cachedCharWidth =3D d.cachedTextHeight =3D null;
            d.measureLineCache =3D [];
            d.measureLineCachePos =3D 0;

            // Tracks when resetInput has punted to just putting a short
            // string instead of the (large) selection.
            d.inaccurateSelection =3D false;

            // Tracks the maximum line length so that the horizontal =
scrollbar
            // can be kept static when scrolling.
            d.maxLine =3D null;
            d.maxLineLength =3D 0;
            d.maxLineChanged =3D false;

            // Used for measuring wheel scrolling granularity
            d.wheelDX =3D d.wheelDY =3D d.wheelStartX =3D d.wheelStartY =
=3D null;

            return d;
        }

        // STATE UPDATES

        // Used to get the editor into a consistent state again when =
options change.

        function loadMode(cm) {
            cm.doc.mode =3D CodeMirror.getMode(cm.options, =
cm.doc.modeOption);
            cm.doc.iter(function(line) {
                if (line.stateAfter) line.stateAfter =3D null;
                if (line.styles) line.styles =3D null;
            });
            cm.doc.frontier =3D cm.doc.first;
            startWorker(cm, 100);
            cm.state.modeGen++;
            if (cm.curOp) regChange(cm);
        }

        function wrappingChanged(cm) {
            if (cm.options.lineWrapping) {
                cm.display.wrapper.className +=3D " CodeMirror-wrap";
                cm.display.sizer.style.minWidth =3D "";
            } else {
                cm.display.wrapper.className =3D =
cm.display.wrapper.className.replace(" CodeMirror-wrap", "");
                computeMaxLength(cm);
            }
            estimateLineHeights(cm);
            regChange(cm);
            clearCaches(cm);
            setTimeout(function(){updateScrollbars(cm);}, 100);
        }

        function estimateHeight(cm) {
            var th =3D textHeight(cm.display), wrapping =3D =
cm.options.lineWrapping;
            var perLine =3D wrapping && Math.max(5, =
cm.display.scroller.clientWidth / charWidth(cm.display) - 3);
            return function(line) {
                if (lineIsHidden(cm.doc, line))
                    return 0;
                else if (wrapping)
                    return (Math.ceil(line.text.length / perLine) || 1) =
* th;
                else
                    return th;
            };
        }

        function estimateLineHeights(cm) {
            var doc =3D cm.doc, est =3D estimateHeight(cm);
            doc.iter(function(line) {
                var estHeight =3D est(line);
                if (estHeight !=3D line.height) updateLineHeight(line, =
estHeight);
            });
        }

        function keyMapChanged(cm) {
            var map =3D keyMap[cm.options.keyMap], style =3D map.style;
            cm.display.wrapper.className =3D =
cm.display.wrapper.className.replace(/\s*cm-keymap-\S+/g, "") +
                (style ? " cm-keymap-" + style : "");
            cm.state.disableInput =3D map.disableInput;
        }

        function themeChanged(cm) {
            cm.display.wrapper.className =3D =
cm.display.wrapper.className.replace(/\s*cm-s-\S+/g, "") +
                cm.options.theme.replace(/(^|\s)\s*/g, " cm-s-");
            clearCaches(cm);
        }

        function guttersChanged(cm) {
            updateGutters(cm);
            regChange(cm);
            setTimeout(function(){alignHorizontally(cm);}, 20);
        }

        function updateGutters(cm) {
            var gutters =3D cm.display.gutters, specs =3D =
cm.options.gutters;
            removeChildren(gutters);
            for (var i =3D 0; i < specs.length; ++i) {
                var gutterClass =3D specs[i];
                var gElt =3D gutters.appendChild(elt("div", null, =
"CodeMirror-gutter " + gutterClass));
                if (gutterClass =3D=3D "CodeMirror-linenumbers") {
                    cm.display.lineGutter =3D gElt;
                    gElt.style.width =3D (cm.display.lineNumWidth || 1) =
+ "px";
                }
            }
            gutters.style.display =3D i ? "" : "none";
        }

        function lineLength(doc, line) {
            if (line.height =3D=3D 0) return 0;
            var len =3D line.text.length, merged, cur =3D line;
            while (merged =3D collapsedSpanAtStart(cur)) {
                var found =3D merged.find();
                cur =3D getLine(doc, found.from.line);
                len +=3D found.from.ch - found.to.ch;
            }
            cur =3D line;
            while (merged =3D collapsedSpanAtEnd(cur)) {
                var found =3D merged.find();
                len -=3D cur.text.length - found.from.ch;
                cur =3D getLine(doc, found.to.line);
                len +=3D cur.text.length - found.to.ch;
            }
            return len;
        }

        function computeMaxLength(cm) {
            var d =3D cm.display, doc =3D cm.doc;
            d.maxLine =3D getLine(doc, doc.first);
            d.maxLineLength =3D lineLength(doc, d.maxLine);
            d.maxLineChanged =3D true;
            doc.iter(function(line) {
                var len =3D lineLength(doc, line);
                if (len > d.maxLineLength) {
                    d.maxLineLength =3D len;
                    d.maxLine =3D line;
                }
            });
        }

        // Make sure the gutters options contains the element
        // "CodeMirror-linenumbers" when the lineNumbers option is true.
        function setGuttersForLineNumbers(options) {
            var found =3D false;
            for (var i =3D 0; i < options.gutters.length; ++i) {
                if (options.gutters[i] =3D=3D "CodeMirror-linenumbers") =
{
                    if (options.lineNumbers) found =3D true;
                    else options.gutters.splice(i--, 1);
                }
            }
            if (!found && options.lineNumbers)
                options.gutters.push("CodeMirror-linenumbers");
        }

        // SCROLLBARS

        // Re-synchronize the fake scrollbars with the actual size of =
the
        // content. Optionally force a scrollTop.
        function updateScrollbars(cm) {
            var d =3D cm.display, docHeight =3D cm.doc.height;
            var totalHeight =3D docHeight + paddingVert(d);
            d.sizer.style.minHeight =3D d.heightForcer.style.top =3D =
totalHeight + "px";
            d.gutters.style.height =3D Math.max(totalHeight, =
d.scroller.clientHeight - scrollerCutOff) + "px";
            var scrollHeight =3D Math.max(totalHeight, =
d.scroller.scrollHeight);
            var needsH =3D d.scroller.scrollWidth > =
(d.scroller.clientWidth + 1);
            var needsV =3D scrollHeight > (d.scroller.clientHeight + 1);
            if (needsV) {
                d.scrollbarV.style.display =3D "block";
                d.scrollbarV.style.bottom =3D needsH ? =
scrollbarWidth(d.measure) + "px" : "0";
                d.scrollbarV.firstChild.style.height =3D
                    (scrollHeight - d.scroller.clientHeight + =
d.scrollbarV.clientHeight) + "px";
            } else d.scrollbarV.style.display =3D "";
            if (needsH) {
                d.scrollbarH.style.display =3D "block";
                d.scrollbarH.style.right =3D needsV ? =
scrollbarWidth(d.measure) + "px" : "0";
                d.scrollbarH.firstChild.style.width =3D
                    (d.scroller.scrollWidth - d.scroller.clientWidth + =
d.scrollbarH.clientWidth) + "px";
            } else d.scrollbarH.style.display =3D "";
            if (needsH && needsV) {
                d.scrollbarFiller.style.display =3D "block";
                d.scrollbarFiller.style.height =3D =
d.scrollbarFiller.style.width =3D scrollbarWidth(d.measure) + "px";
            } else d.scrollbarFiller.style.display =3D "";
            if (needsH && cm.options.coverGutterNextToScrollbar && =
cm.options.fixedGutter) {
                d.gutterFiller.style.display =3D "block";
                d.gutterFiller.style.height =3D =
scrollbarWidth(d.measure) + "px";
                d.gutterFiller.style.width =3D d.gutters.offsetWidth + =
"px";
            } else d.gutterFiller.style.display =3D "";

            if (mac_geLion && scrollbarWidth(d.measure) =3D=3D=3D 0)
                d.scrollbarV.style.minWidth =3D =
d.scrollbarH.style.minHeight =3D mac_geMountainLion ? "18px" : "12px";
        }

        function visibleLines(display, doc, viewPort) {
            var top =3D display.scroller.scrollTop, height =3D =
display.wrapper.clientHeight;
            if (typeof viewPort =3D=3D "number") top =3D viewPort;
            else if (viewPort) {top =3D viewPort.top; height =3D =
viewPort.bottom - viewPort.top;}
            top =3D Math.floor(top - paddingTop(display));
            var bottom =3D Math.ceil(top + height);
            return {from: lineAtHeight(doc, top), to: lineAtHeight(doc, =
bottom)};
        }

        // LINE NUMBERS

        function alignHorizontally(cm) {
            var display =3D cm.display;
            if (!display.alignWidgets && (!display.gutters.firstChild || =
!cm.options.fixedGutter)) return;
            var comp =3D compensateForHScroll(display) - =
display.scroller.scrollLeft + cm.doc.scrollLeft;
            var gutterW =3D display.gutters.offsetWidth, l =3D comp + =
"px";
            for (var n =3D display.lineDiv.firstChild; n; n =3D =
n.nextSibling) if (n.alignable) {
                for (var i =3D 0, a =3D n.alignable; i < a.length; ++i) =
a[i].style.left =3D l;
            }
            if (cm.options.fixedGutter)
                display.gutters.style.left =3D (comp + gutterW) + "px";
        }

        function maybeUpdateLineNumberWidth(cm) {
            if (!cm.options.lineNumbers) return false;
            var doc =3D cm.doc, last =3D lineNumberFor(cm.options, =
doc.first + doc.size - 1), display =3D cm.display;
            if (last.length !=3D display.lineNumChars) {
                var test =3D display.measure.appendChild(elt("div", =
[elt("div", last)],
                    "CodeMirror-linenumber CodeMirror-gutter-elt"));
                var innerW =3D test.firstChild.offsetWidth, padding =3D =
test.offsetWidth - innerW;
                display.lineGutter.style.width =3D "";
                display.lineNumInnerWidth =3D Math.max(innerW, =
display.lineGutter.offsetWidth - padding);
                display.lineNumWidth =3D display.lineNumInnerWidth + =
padding;
                display.lineNumChars =3D display.lineNumInnerWidth ? =
last.length : -1;
                display.lineGutter.style.width =3D display.lineNumWidth =
+ "px";
                return true;
            }
            return false;
        }

        function lineNumberFor(options, i) {
            return String(options.lineNumberFormatter(i + =
options.firstLineNumber));
        }
        function compensateForHScroll(display) {
            return getRect(display.scroller).left - =
getRect(display.sizer).left;
        }

        // DISPLAY DRAWING

        function updateDisplay(cm, changes, viewPort, forced) {
            var oldFrom =3D cm.display.showingFrom, oldTo =3D =
cm.display.showingTo, updated;
            var visible =3D visibleLines(cm.display, cm.doc, viewPort);
            for (;;) {
                if (!updateDisplayInner(cm, changes, visible, forced)) =
break;
                forced =3D false;
                updated =3D true;
                updateSelection(cm);
                updateScrollbars(cm);

                // Clip forced viewport to actual scrollable area
                if (viewPort)
                    viewPort =3D =
Math.min(cm.display.scroller.scrollHeight - =
cm.display.scroller.clientHeight,
                            typeof viewPort =3D=3D "number" ? viewPort : =
viewPort.top);
                visible =3D visibleLines(cm.display, cm.doc, viewPort);
                if (visible.from >=3D cm.display.showingFrom && =
visible.to <=3D cm.display.showingTo)
                    break;
                changes =3D [];
            }

            if (updated) {
                signalLater(cm, "update", cm);
                if (cm.display.showingFrom !=3D oldFrom || =
cm.display.showingTo !=3D oldTo)
                    signalLater(cm, "viewportChange", cm, =
cm.display.showingFrom, cm.display.showingTo);
            }
            return updated;
        }

        // Uses a set of changes plus the current scroll position to
        // determine which DOM updates have to be made, and makes the
        // updates.
        function updateDisplayInner(cm, changes, visible, forced) {
            var display =3D cm.display, doc =3D cm.doc;
            if (!display.wrapper.clientWidth) {
                display.showingFrom =3D display.showingTo =3D doc.first;
                display.viewOffset =3D 0;
                return;
            }

            // Bail out if the visible area is already rendered and =
nothing changed.
            if (!forced && changes.length =3D=3D 0 &&
                visible.from > display.showingFrom && visible.to < =
display.showingTo)
                return;

            if (maybeUpdateLineNumberWidth(cm))
                changes =3D [{from: doc.first, to: doc.first + =
doc.size}];
            var gutterW =3D display.sizer.style.marginLeft =3D =
display.gutters.offsetWidth + "px";
            display.scrollbarH.style.left =3D cm.options.fixedGutter ? =
gutterW : "0";

            // Used to determine which lines need their line numbers =
updated
            var positionsChangedFrom =3D Infinity;
            if (cm.options.lineNumbers)
                for (var i =3D 0; i < changes.length; ++i)
                    if (changes[i].diff) { positionsChangedFrom =3D =
changes[i].from; break; }

            var end =3D doc.first + doc.size;
            var from =3D Math.max(visible.from - =
cm.options.viewportMargin, doc.first);
            var to =3D Math.min(end, visible.to + =
cm.options.viewportMargin);
            if (display.showingFrom < from && from - display.showingFrom =
< 20) from =3D Math.max(doc.first, display.showingFrom);
            if (display.showingTo > to && display.showingTo - to < 20) =
to =3D Math.min(end, display.showingTo);
            if (sawCollapsedSpans) {
                from =3D lineNo(visualLine(doc, getLine(doc, from)));
                while (to < end && lineIsHidden(doc, getLine(doc, to))) =
++to;
            }

            // Create a range of theoretically intact lines, and punch =
holes
            // in that using the change info.
            var intact =3D [{from: Math.max(display.showingFrom, =
doc.first),
                to: Math.min(display.showingTo, end)}];
            if (intact[0].from >=3D intact[0].to) intact =3D [];
            else intact =3D computeIntact(intact, changes);
            // When merged lines are present, we might have to reduce =
the
            // intact ranges because changes in continued fragments of =
the
            // intact lines do require the lines to be redrawn.
            if (sawCollapsedSpans)
                for (var i =3D 0; i < intact.length; ++i) {
                    var range =3D intact[i], merged;
                    while (merged =3D collapsedSpanAtEnd(getLine(doc, =
range.to - 1))) {
                        var newTo =3D merged.find().from.line;
                        if (newTo > range.from) range.to =3D newTo;
                        else { intact.splice(i--, 1); break; }
                    }
                }

            // Clip off the parts that won't be visible
            var intactLines =3D 0;
            for (var i =3D 0; i < intact.length; ++i) {
                var range =3D intact[i];
                if (range.from < from) range.from =3D from;
                if (range.to > to) range.to =3D to;
                if (range.from >=3D range.to) intact.splice(i--, 1);
                else intactLines +=3D range.to - range.from;
            }
            if (!forced && intactLines =3D=3D to - from && from =3D=3D =
display.showingFrom && to =3D=3D display.showingTo) {
                updateViewOffset(cm);
                return;
            }
            intact.sort(function(a, b) {return a.from - b.from;});

            // Avoid crashing on IE's "unspecified error" when in =
iframes
            try {
                var focused =3D document.activeElement;
            } catch(e) {}
            if (intactLines < (to - from) * .7) =
display.lineDiv.style.display =3D "none";
            patchDisplay(cm, from, to, intact, positionsChangedFrom);
            display.lineDiv.style.display =3D "";
            if (focused && document.activeElement !=3D focused && =
focused.offsetHeight) focused.focus();

            var different =3D from !=3D display.showingFrom || to !=3D =
display.showingTo ||
                display.lastSizeC !=3D display.wrapper.clientHeight;
            // This is just a bogus formula that detects when the editor =
is
            // resized or the font size changes.
            if (different) {
                display.lastSizeC =3D display.wrapper.clientHeight;
                startWorker(cm, 400);
            }
            display.showingFrom =3D from; display.showingTo =3D to;

            updateHeightsInViewport(cm);
            updateViewOffset(cm);

            return true;
        }

        function updateHeightsInViewport(cm) {
            var display =3D cm.display;
            var prevBottom =3D display.lineDiv.offsetTop;
            for (var node =3D display.lineDiv.firstChild, height; node; =
node =3D node.nextSibling) if (node.lineObj) {
                if (ie_lt8) {
                    var bot =3D node.offsetTop + node.offsetHeight;
                    height =3D bot - prevBottom;
                    prevBottom =3D bot;
                } else {
                    var box =3D getRect(node);
                    height =3D box.bottom - box.top;
                }
                var diff =3D node.lineObj.height - height;
                if (height < 2) height =3D textHeight(display);
                if (diff > .001 || diff < -.001) {
                    updateLineHeight(node.lineObj, height);
                    var widgets =3D node.lineObj.widgets;
                    if (widgets) for (var i =3D 0; i < widgets.length; =
++i)
                        widgets[i].height =3D =
widgets[i].node.offsetHeight;
                }
            }
        }

        function updateViewOffset(cm) {
            var off =3D cm.display.viewOffset =3D heightAtLine(cm, =
getLine(cm.doc, cm.display.showingFrom));
            // Position the mover div to align with the current virtual =
scroll position
            cm.display.mover.style.top =3D off + "px";
        }

        function computeIntact(intact, changes) {
            for (var i =3D 0, l =3D changes.length || 0; i < l; ++i) {
                var change =3D changes[i], intact2 =3D [], diff =3D =
change.diff || 0;
                for (var j =3D 0, l2 =3D intact.length; j < l2; ++j) {
                    var range =3D intact[j];
                    if (change.to <=3D range.from && change.diff) {
                        intact2.push({from: range.from + diff, to: =
range.to + diff});
                    } else if (change.to <=3D range.from || change.from =
>=3D range.to) {
                        intact2.push(range);
                    } else {
                        if (change.from > range.from)
                            intact2.push({from: range.from, to: =
change.from});
                        if (change.to < range.to)
                            intact2.push({from: change.to + diff, to: =
range.to + diff});
                    }
                }
                intact =3D intact2;
            }
            return intact;
        }

        function getDimensions(cm) {
            var d =3D cm.display, left =3D {}, width =3D {};
            for (var n =3D d.gutters.firstChild, i =3D 0; n; n =3D =
n.nextSibling, ++i) {
                left[cm.options.gutters[i]] =3D n.offsetLeft;
                width[cm.options.gutters[i]] =3D n.offsetWidth;
            }
            return {fixedPos: compensateForHScroll(d),
                gutterTotalWidth: d.gutters.offsetWidth,
                gutterLeft: left,
                gutterWidth: width,
                wrapperWidth: d.wrapper.clientWidth};
        }

        function patchDisplay(cm, from, to, intact, updateNumbersFrom) {
            var dims =3D getDimensions(cm);
            var display =3D cm.display, lineNumbers =3D =
cm.options.lineNumbers;
            if (!intact.length && (!webkit || =
!cm.display.currentWheelTarget))
                removeChildren(display.lineDiv);
            var container =3D display.lineDiv, cur =3D =
container.firstChild;

            function rm(node) {
                var next =3D node.nextSibling;
                if (webkit && mac && cm.display.currentWheelTarget =
=3D=3D node) {
                    node.style.display =3D "none";
                    node.lineObj =3D null;
                } else {
                    node.parentNode.removeChild(node);
                }
                return next;
            }

            var nextIntact =3D intact.shift(), lineN =3D from;
            cm.doc.iter(from, to, function(line) {
                if (nextIntact && nextIntact.to =3D=3D lineN) nextIntact =
=3D intact.shift();
                if (lineIsHidden(cm.doc, line)) {
                    if (line.height !=3D 0) updateLineHeight(line, 0);
                    if (line.widgets && cur.previousSibling) for (var i =
=3D 0; i < line.widgets.length; ++i) {
                        var w =3D line.widgets[i];
                        if (w.showIfHidden) {
                            var prev =3D cur.previousSibling;
                            if (/pre/i.test(prev.nodeName)) {
                                var wrap =3D elt("div", null, null, =
"position: relative");
                                prev.parentNode.replaceChild(wrap, =
prev);
                                wrap.appendChild(prev);
                                prev =3D wrap;
                            }
                            var wnode =3D prev.appendChild(elt("div", =
[w.node], "CodeMirror-linewidget"));
                            if (!w.handleMouseEvents) wnode.ignoreEvents =
=3D true;
                            positionLineWidget(w, wnode, prev, dims);
                        }
                    }
                } else if (nextIntact && nextIntact.from <=3D lineN && =
nextIntact.to > lineN) {
                    // This line is intact. Skip to the actual node. =
Update its
                    // line number if needed.
                    while (cur.lineObj !=3D line) cur =3D rm(cur);
                    if (lineNumbers && updateNumbersFrom <=3D lineN && =
cur.lineNumber)
                        setTextContent(cur.lineNumber, =
lineNumberFor(cm.options, lineN));
                    cur =3D cur.nextSibling;
                } else {
                    // For lines with widgets, make an attempt to find =
and reuse
                    // the existing element, so that widgets aren't =
needlessly
                    // removed and re-inserted into the dom
                    if (line.widgets) for (var j =3D 0, search =3D cur, =
reuse; search && j < 20; ++j, search =3D search.nextSibling)
                        if (search.lineObj =3D=3D line && =
/div/i.test(search.nodeName)) { reuse =3D search; break; }
                    // This line needs to be generated.
                    var lineNode =3D buildLineElement(cm, line, lineN, =
dims, reuse);
                    if (lineNode !=3D reuse) {
                        container.insertBefore(lineNode, cur);
                    } else {
                        while (cur !=3D reuse) cur =3D rm(cur);
                        cur =3D cur.nextSibling;
                    }

                    lineNode.lineObj =3D line;
                }
                ++lineN;
            });
            while (cur) cur =3D rm(cur);
        }

        function buildLineElement(cm, line, lineNo, dims, reuse) {
            var lineElement =3D lineContent(cm, line);
            var markers =3D line.gutterMarkers, display =3D cm.display, =
wrap;

            if (!cm.options.lineNumbers && !markers && !line.bgClass && =
!line.wrapClass && !line.widgets)
                return lineElement;

            // Lines with gutter elements, widgets or a background class =
need
            // to be wrapped again, and have the extra elements added to =
the
            // wrapper div

            if (reuse) {
                reuse.alignable =3D null;
                var isOk =3D true, widgetsSeen =3D 0, insertBefore =3D =
null;
                for (var n =3D reuse.firstChild, next; n; n =3D next) {
                    next =3D n.nextSibling;
                    if (!/\bCodeMirror-linewidget\b/.test(n.className)) =
{
                        reuse.removeChild(n);
                    } else {
                        for (var i =3D 0; i < line.widgets.length; ++i) =
{
                            var widget =3D line.widgets[i];
                            if (widget.node =3D=3D n.firstChild) {
                                if (!widget.above && !insertBefore) =
insertBefore =3D n;
                                positionLineWidget(widget, n, reuse, =
dims);
                                ++widgetsSeen;
                                break;
                            }
                        }
                        if (i =3D=3D line.widgets.length) { isOk =3D =
false; break; }
                    }
                }
                reuse.insertBefore(lineElement, insertBefore);
                if (isOk && widgetsSeen =3D=3D line.widgets.length) {
                    wrap =3D reuse;
                    reuse.className =3D line.wrapClass || "";
                }
            }
            if (!wrap) {
                wrap =3D elt("div", null, line.wrapClass, "position: =
relative");
                wrap.appendChild(lineElement);
            }
            // Kludge to make sure the styled element lies behind the =
selection (by z-index)
            if (line.bgClass)
                wrap.insertBefore(elt("div", null, line.bgClass + " =
CodeMirror-linebackground"), wrap.firstChild);
            if (cm.options.lineNumbers || markers) {
                var gutterWrap =3D wrap.insertBefore(elt("div", null, =
null, "position: absolute; left: " +
                        (cm.options.fixedGutter ? dims.fixedPos : =
-dims.gutterTotalWidth) + "px"),
                    wrap.firstChild);
                if (cm.options.fixedGutter) (wrap.alignable || =
(wrap.alignable =3D [])).push(gutterWrap);
                if (cm.options.lineNumbers && (!markers || =
!markers["CodeMirror-linenumbers"]))
                    wrap.lineNumber =3D gutterWrap.appendChild(
                        elt("div", lineNumberFor(cm.options, lineNo),
                            "CodeMirror-linenumber =
CodeMirror-gutter-elt",
                                "left: " + =
dims.gutterLeft["CodeMirror-linenumbers"] + "px; width: "
                                + display.lineNumInnerWidth + "px"));
                if (markers)
                    for (var k =3D 0; k < cm.options.gutters.length; =
++k) {
                        var id =3D cm.options.gutters[k], found =3D =
markers.hasOwnProperty(id) && markers[id];
                        if (found)
                            gutterWrap.appendChild(elt("div", [found], =
"CodeMirror-gutter-elt", "left: " +
                                dims.gutterLeft[id] + "px; width: " + =
dims.gutterWidth[id] + "px"));
                    }
            }
            if (ie_lt8) wrap.style.zIndex =3D 2;
            if (line.widgets && wrap !=3D reuse) for (var i =3D 0, ws =
=3D line.widgets; i < ws.length; ++i) {
                var widget =3D ws[i], node =3D elt("div", [widget.node], =
"CodeMirror-linewidget");
                if (!widget.handleMouseEvents) node.ignoreEvents =3D =
true;
                positionLineWidget(widget, node, wrap, dims);
                if (widget.above)
                    wrap.insertBefore(node, cm.options.lineNumbers && =
line.height !=3D 0 ? gutterWrap : lineElement);
                else
                    wrap.appendChild(node);
                signalLater(widget, "redraw");
            }
            return wrap;
        }

        function positionLineWidget(widget, node, wrap, dims) {
            if (widget.noHScroll) {
                (wrap.alignable || (wrap.alignable =3D [])).push(node);
                var width =3D dims.wrapperWidth;
                node.style.left =3D dims.fixedPos + "px";
                if (!widget.coverGutter) {
                    width -=3D dims.gutterTotalWidth;
                    node.style.paddingLeft =3D dims.gutterTotalWidth + =
"px";
                }
                node.style.width =3D width + "px";
            }
            if (widget.coverGutter) {
                node.style.zIndex =3D 5;
                node.style.position =3D "relative";
                if (!widget.noHScroll) node.style.marginLeft =3D =
-dims.gutterTotalWidth + "px";
            }
        }

        // SELECTION / CURSOR

        function updateSelection(cm) {
            var display =3D cm.display;
            var collapsed =3D posEq(cm.doc.sel.from, cm.doc.sel.to);
            if (collapsed || cm.options.showCursorWhenSelecting)
                updateSelectionCursor(cm);
            else
                display.cursor.style.display =3D =
display.otherCursor.style.display =3D "none";
            if (!collapsed)
                updateSelectionRange(cm);
            else
                display.selectionDiv.style.display =3D "none";

            // Move the hidden textarea near the cursor to prevent =
scrolling artifacts
            if (cm.options.moveInputWithCursor) {
                var headPos =3D cursorCoords(cm, cm.doc.sel.head, =
"div");
                var wrapOff =3D getRect(display.wrapper), lineOff =3D =
getRect(display.lineDiv);
                display.inputDiv.style.top =3D Math.max(0, =
Math.min(display.wrapper.clientHeight - 10,
                        headPos.top + lineOff.top - wrapOff.top)) + =
"px";
                display.inputDiv.style.left =3D Math.max(0, =
Math.min(display.wrapper.clientWidth - 10,
                        headPos.left + lineOff.left - wrapOff.left)) + =
"px";
            }
        }

        // No selection, plain cursor
        function updateSelectionCursor(cm) {
            var display =3D cm.display, pos =3D cursorCoords(cm, =
cm.doc.sel.head, "div");
            display.cursor.style.left =3D pos.left + "px";
            display.cursor.style.top =3D pos.top + "px";
            display.cursor.style.height =3D Math.max(0, pos.bottom - =
pos.top) * cm.options.cursorHeight + "px";
            display.cursor.style.display =3D "";

            if (pos.other) {
                display.otherCursor.style.display =3D "";
                display.otherCursor.style.left =3D pos.other.left + =
"px";
                display.otherCursor.style.top =3D pos.other.top + "px";
                display.otherCursor.style.height =3D (pos.other.bottom - =
pos.other.top) * .85 + "px";
            } else { display.otherCursor.style.display =3D "none"; }
        }

        // Highlight selection
        function updateSelectionRange(cm) {
            var display =3D cm.display, doc =3D cm.doc, sel =3D =
cm.doc.sel;
            var fragment =3D document.createDocumentFragment();
            var clientWidth =3D display.lineSpace.offsetWidth, pl =3D =
paddingLeft(cm.display);

            function add(left, top, width, bottom) {
                if (top < 0) top =3D 0;
                fragment.appendChild(elt("div", null, =
"CodeMirror-selected", "position: absolute; left: " + left +
                    "px; top: " + top + "px; width: " + (width =3D=3D =
null ? clientWidth - left : width) +
                    "px; height: " + (bottom - top) + "px"));
            }

            function drawForLine(line, fromArg, toArg) {
                var lineObj =3D getLine(doc, line);
                var lineLen =3D lineObj.text.length;
                var start, end;
                function coords(ch, bias) {
                    return charCoords(cm, Pos(line, ch), "div", lineObj, =
bias);
                }

                iterateBidiSections(getOrder(lineObj), fromArg || 0, =
toArg =3D=3D null ? lineLen : toArg, function(from, to, dir) {
                    var leftPos =3D coords(from, "left"), rightPos, =
left, right;
                    if (from =3D=3D to) {
                        rightPos =3D leftPos;
                        left =3D right =3D leftPos.left;
                    } else {
                        rightPos =3D coords(to - 1, "right");
                        if (dir =3D=3D "rtl") { var tmp =3D leftPos; =
leftPos =3D rightPos; rightPos =3D tmp; }
                        left =3D leftPos.left;
                        right =3D rightPos.right;
                    }
                    if (fromArg =3D=3D null && from =3D=3D 0) left =3D =
pl;
                    if (rightPos.top - leftPos.top > 3) { // Different =
lines, draw top part
                        add(left, leftPos.top, null, leftPos.bottom);
                        left =3D pl;
                        if (leftPos.bottom < rightPos.top) add(left, =
leftPos.bottom, null, rightPos.top);
                    }
                    if (toArg =3D=3D null && to =3D=3D lineLen) right =
=3D clientWidth;
                    if (!start || leftPos.top < start.top || leftPos.top =
=3D=3D start.top && leftPos.left < start.left)
                        start =3D leftPos;
                    if (!end || rightPos.bottom > end.bottom || =
rightPos.bottom =3D=3D end.bottom && rightPos.right > end.right)
                        end =3D rightPos;
                    if (left < pl + 1) left =3D pl;
                    add(left, rightPos.top, right - left, =
rightPos.bottom);
                });
                return {start: start, end: end};
            }

            if (sel.from.line =3D=3D sel.to.line) {
                drawForLine(sel.from.line, sel.from.ch, sel.to.ch);
            } else {
                var fromLine =3D getLine(doc, sel.from.line), toLine =3D =
getLine(doc, sel.to.line);
                var singleVLine =3D visualLine(doc, fromLine) =3D=3D =
visualLine(doc, toLine);
                var leftEnd =3D drawForLine(sel.from.line, sel.from.ch, =
singleVLine ? fromLine.text.length : null).end;
                var rightStart =3D drawForLine(sel.to.line, singleVLine =
? 0 : null, sel.to.ch).start;
                if (singleVLine) {
                    if (leftEnd.top < rightStart.top - 2) {
                        add(leftEnd.right, leftEnd.top, null, =
leftEnd.bottom);
                        add(pl, rightStart.top, rightStart.left, =
rightStart.bottom);
                    } else {
                        add(leftEnd.right, leftEnd.top, rightStart.left =
- leftEnd.right, leftEnd.bottom);
                    }
                }
                if (leftEnd.bottom < rightStart.top)
                    add(pl, leftEnd.bottom, null, rightStart.top);
            }

            removeChildrenAndAdd(display.selectionDiv, fragment);
            display.selectionDiv.style.display =3D "";
        }

        // Cursor-blinking
        function restartBlink(cm) {
            if (!cm.state.focused) return;
            var display =3D cm.display;
            clearInterval(display.blinker);
            var on =3D true;
            display.cursor.style.visibility =3D =
display.otherCursor.style.visibility =3D "";
            display.blinker =3D setInterval(function() {
                display.cursor.style.visibility =3D =
display.otherCursor.style.visibility =3D (on =3D !on) ? "" : "hidden";
            }, cm.options.cursorBlinkRate);
        }

        // HIGHLIGHT WORKER

        function startWorker(cm, time) {
            if (cm.doc.mode.startState && cm.doc.frontier < =
cm.display.showingTo)
                cm.state.highlight.set(time, bind(highlightWorker, cm));
        }

        function highlightWorker(cm) {
            var doc =3D cm.doc;
            if (doc.frontier < doc.first) doc.frontier =3D doc.first;
            if (doc.frontier >=3D cm.display.showingTo) return;
            var end =3D +new Date + cm.options.workTime;
            var state =3D copyState(doc.mode, getStateBefore(cm, =
doc.frontier));
            var changed =3D [], prevChange;
            doc.iter(doc.frontier, Math.min(doc.first + doc.size, =
cm.display.showingTo + 500), function(line) {
                if (doc.frontier >=3D cm.display.showingFrom) { // =
Visible
                    var oldStyles =3D line.styles;
                    line.styles =3D highlightLine(cm, line, state);
                    var ischange =3D !oldStyles || oldStyles.length !=3D =
line.styles.length;
                    for (var i =3D 0; !ischange && i < oldStyles.length; =
++i) ischange =3D oldStyles[i] !=3D line.styles[i];
                    if (ischange) {
                        if (prevChange && prevChange.end =3D=3D =
doc.frontier) prevChange.end++;
                        else changed.push(prevChange =3D {start: =
doc.frontier, end: doc.frontier + 1});
                    }
                    line.stateAfter =3D copyState(doc.mode, state);
                } else {
                    processLine(cm, line, state);
                    line.stateAfter =3D doc.frontier % 5 =3D=3D 0 ? =
copyState(doc.mode, state) : null;
                }
                ++doc.frontier;
                if (+new Date > end) {
                    startWorker(cm, cm.options.workDelay);
                    return true;
                }
            });
            if (changed.length)
                operation(cm, function() {
                    for (var i =3D 0; i < changed.length; ++i)
                        regChange(this, changed[i].start, =
changed[i].end);
                })();
        }

        // Finds the line to start with when starting a parse. Tries to
        // find a line with a stateAfter, so that it can start with a
        // valid state. If that fails, it returns the line with the
        // smallest indentation, which tends to need the least context =
to
        // parse correctly.
        function findStartLine(cm, n, precise) {
            var minindent, minline, doc =3D cm.doc;
            for (var search =3D n, lim =3D n - 100; search > lim; =
--search) {
                if (search <=3D doc.first) return doc.first;
                var line =3D getLine(doc, search - 1);
                if (line.stateAfter && (!precise || search <=3D =
doc.frontier)) return search;
                var indented =3D countColumn(line.text, null, =
cm.options.tabSize);
                if (minline =3D=3D null || minindent > indented) {
                    minline =3D search - 1;
                    minindent =3D indented;
                }
            }
            return minline;
        }

        function getStateBefore(cm, n, precise) {
            var doc =3D cm.doc, display =3D cm.display;
            if (!doc.mode.startState) return true;
            var pos =3D findStartLine(cm, n, precise), state =3D pos > =
doc.first && getLine(doc, pos-1).stateAfter;
            if (!state) state =3D startState(doc.mode);
            else state =3D copyState(doc.mode, state);
            doc.iter(pos, n, function(line) {
                processLine(cm, line, state);
                var save =3D pos =3D=3D n - 1 || pos % 5 =3D=3D 0 || pos =
>=3D display.showingFrom && pos < display.showingTo;
                line.stateAfter =3D save ? copyState(doc.mode, state) : =
null;
                ++pos;
            });
            return state;
        }

        // POSITION MEASUREMENT

        function paddingTop(display) {return =
display.lineSpace.offsetTop;}
        function paddingVert(display) {return display.mover.offsetHeight =
- display.lineSpace.offsetHeight;}
        function paddingLeft(display) {
            var e =3D removeChildrenAndAdd(display.measure, elt("pre", =
null, null, "text-align: left")).appendChild(elt("span", "x"));
            return e.offsetLeft;
        }

        function measureChar(cm, line, ch, data, bias) {
            var dir =3D -1;
            data =3D data || measureLine(cm, line);

            for (var pos =3D ch;; pos +=3D dir) {
                var r =3D data[pos];
                if (r) break;
                if (dir < 0 && pos =3D=3D 0) dir =3D 1;
            }
            bias =3D pos > ch ? "left" : pos < ch ? "right" : bias;
            if (bias =3D=3D "left" && r.leftSide) r =3D r.leftSide;
            else if (bias =3D=3D "right" && r.rightSide) r =3D =
r.rightSide;
            return {left: pos < ch ? r.right : r.left,
                right: pos > ch ? r.left : r.right,
                top: r.top,
                bottom: r.bottom};
        }

        function findCachedMeasurement(cm, line) {
            var cache =3D cm.display.measureLineCache;
            for (var i =3D 0; i < cache.length; ++i) {
                var memo =3D cache[i];
                if (memo.text =3D=3D line.text && memo.markedSpans =
=3D=3D line.markedSpans &&
                    cm.display.scroller.clientWidth =3D=3D memo.width &&
                    memo.classes =3D=3D line.textClass + "|" + =
line.bgClass + "|" + line.wrapClass)
                    return memo;
            }
        }

        function clearCachedMeasurement(cm, line) {
            var exists =3D findCachedMeasurement(cm, line);
            if (exists) exists.text =3D exists.measure =3D =
exists.markedSpans =3D null;
        }

        function measureLine(cm, line) {
            // First look in the cache
            var cached =3D findCachedMeasurement(cm, line);
            if (cached) return cached.measure;

            // Failing that, recompute and store result in cache
            var measure =3D measureLineInner(cm, line);
            var cache =3D cm.display.measureLineCache;
            var memo =3D {text: line.text, width: =
cm.display.scroller.clientWidth,
                markedSpans: line.markedSpans, measure: measure,
                classes: line.textClass + "|" + line.bgClass + "|" + =
line.wrapClass};
            if (cache.length =3D=3D 16) =
cache[++cm.display.measureLineCachePos % 16] =3D memo;
            else cache.push(memo);
            return measure;
        }

        function measureLineInner(cm, line) {
            var display =3D cm.display, measure =3D =
emptyArray(line.text.length);
            var pre =3D lineContent(cm, line, measure, true);

            // IE does not cache element positions of inline elements =
between
            // calls to getBoundingClientRect. This makes the loop =
below,
            // which gathers the positions of all the characters on the =
line,
            // do an amount of layout work quadratic to the number of
            // characters. When line wrapping is off, we try to improve =
things
            // by first subdividing the line into a bunch of inline =
blocks, so
            // that IE can reuse most of the layout information from =
caches
            // for those blocks. This does interfere with line wrapping, =
so it
            // doesn't work when wrapping is on, but in that case the
            // situation is slightly better, since IE does cache =
line-wrapping
            // information and only recomputes per-line.
            if (ie && !ie_lt8 && !cm.options.lineWrapping && =
pre.childNodes.length > 100) {
                var fragment =3D document.createDocumentFragment();
                var chunk =3D 10, n =3D pre.childNodes.length;
                for (var i =3D 0, chunks =3D Math.ceil(n / chunk); i < =
chunks; ++i) {
                    var wrap =3D elt("div", null, null, "display: =
inline-block");
                    for (var j =3D 0; j < chunk && n; ++j) {
                        wrap.appendChild(pre.firstChild);
                        --n;
                    }
                    fragment.appendChild(wrap);
                }
                pre.appendChild(fragment);
            }

            removeChildrenAndAdd(display.measure, pre);

            var outer =3D getRect(display.lineDiv);
            var vranges =3D [], data =3D emptyArray(line.text.length), =
maxBot =3D pre.offsetHeight;
            // Work around an IE7/8 bug where it will sometimes have =
randomly
            // replaced our pre with a clone at this point.
            if (ie_lt9 && display.measure.first !=3D pre)
                removeChildrenAndAdd(display.measure, pre);

            function measureRect(rect) {
                var top =3D rect.top - outer.top, bot =3D rect.bottom - =
outer.top;
                if (bot > maxBot) bot =3D maxBot;
                if (top < 0) top =3D 0;
                for (var i =3D vranges.length - 2; i >=3D 0; i -=3D 2) {
                    var rtop =3D vranges[i], rbot =3D vranges[i+1];
                    if (rtop > bot || rbot < top) continue;
                    if (rtop <=3D top && rbot >=3D bot ||
                        top <=3D rtop && bot >=3D rbot ||
                        Math.min(bot, rbot) - Math.max(top, rtop) >=3D =
(bot - top) >> 1) {
                        vranges[i] =3D Math.min(top, rtop);
                        vranges[i+1] =3D Math.max(bot, rbot);
                        break;
                    }
                }
                if (i < 0) { i =3D vranges.length; vranges.push(top, =
bot); }
                return {left: rect.left - outer.left,
                    right: rect.right - outer.left,
                    top: i, bottom: null};
            }
            function finishRect(rect) {
                rect.bottom =3D vranges[rect.top+1];
                rect.top =3D vranges[rect.top];
            }

            for (var i =3D 0, cur; i < measure.length; ++i) if (cur =3D =
measure[i]) {
                var node =3D cur, rect =3D null;
                // A widget might wrap, needs special care
                if (/\bCodeMirror-widget\b/.test(cur.className) && =
cur.getClientRects) {
                    if (cur.firstChild.nodeType =3D=3D 1) node =3D =
cur.firstChild;
                    var rects =3D node.getClientRects();
                    if (rects.length > 1) {
                        rect =3D data[i] =3D measureRect(rects[0]);
                        rect.rightSide =3D =
measureRect(rects[rects.length - 1]);
                    }
                }
                if (!rect) rect =3D data[i] =3D =
measureRect(getRect(node));
                if (cur.measureRight) rect.right =3D =
getRect(cur.measureRight).left;
                if (cur.leftSide) rect.leftSide =3D =
measureRect(getRect(cur.leftSide));
            }
            for (var i =3D 0, cur; i < data.length; ++i) if (cur =3D =
data[i]) {
                finishRect(cur);
                if (cur.leftSide) finishRect(cur.leftSide);
                if (cur.rightSide) finishRect(cur.rightSide);
            }
            return data;
        }

        function measureLineWidth(cm, line) {
            var hasBadSpan =3D false;
            if (line.markedSpans) for (var i =3D 0; i < =
line.markedSpans; ++i) {
                var sp =3D line.markedSpans[i];
                if (sp.collapsed && (sp.to =3D=3D null || sp.to =3D=3D =
line.text.length)) hasBadSpan =3D true;
            }
            var cached =3D !hasBadSpan && findCachedMeasurement(cm, =
line);
            if (cached) return measureChar(cm, line, line.text.length, =
cached.measure, "right").right;

            var pre =3D lineContent(cm, line, null, true);
            var end =3D =
pre.appendChild(zeroWidthElement(cm.display.measure));
            removeChildrenAndAdd(cm.display.measure, pre);
            return getRect(end).right - =
getRect(cm.display.lineDiv).left;
        }

        function clearCaches(cm) {
            cm.display.measureLineCache.length =3D =
cm.display.measureLineCachePos =3D 0;
            cm.display.cachedCharWidth =3D cm.display.cachedTextHeight =
=3D null;
            if (!cm.options.lineWrapping) cm.display.maxLineChanged =3D =
true;
            cm.display.lineNumChars =3D null;
        }

        function pageScrollX() { return window.pageXOffset || =
(document.documentElement || document.body).scrollLeft; }
        function pageScrollY() { return window.pageYOffset || =
(document.documentElement || document.body).scrollTop; }

        // Context is one of "line", "div" (display.lineDiv), =
"local"/null (editor), or "page"
        function intoCoordSystem(cm, lineObj, rect, context) {
            if (lineObj.widgets) for (var i =3D 0; i < =
lineObj.widgets.length; ++i) if (lineObj.widgets[i].above) {
                var size =3D widgetHeight(lineObj.widgets[i]);
                rect.top +=3D size; rect.bottom +=3D size;
            }
            if (context =3D=3D "line") return rect;
            if (!context) context =3D "local";
            var yOff =3D heightAtLine(cm, lineObj);
            if (context =3D=3D "local") yOff +=3D =
paddingTop(cm.display);
            else yOff -=3D cm.display.viewOffset;
            if (context =3D=3D "page" || context =3D=3D "window") {
                var lOff =3D getRect(cm.display.lineSpace);
                yOff +=3D lOff.top + (context =3D=3D "window" ? 0 : =
pageScrollY());
                var xOff =3D lOff.left + (context =3D=3D "window" ? 0 : =
pageScrollX());
                rect.left +=3D xOff; rect.right +=3D xOff;
            }
            rect.top +=3D yOff; rect.bottom +=3D yOff;
            return rect;
        }

        // Context may be "window", "page", "div", or "local"/null
        // Result is in "div" coords
        function fromCoordSystem(cm, coords, context) {
            if (context =3D=3D "div") return coords;
            var left =3D coords.left, top =3D coords.top;
            // First move into "page" coordinate system
            if (context =3D=3D "page") {
                left -=3D pageScrollX();
                top -=3D pageScrollY();
            } else if (context =3D=3D "local" || !context) {
                var localBox =3D getRect(cm.display.sizer);
                left +=3D localBox.left;
                top +=3D localBox.top;
            }

            var lineSpaceBox =3D getRect(cm.display.lineSpace);
            return {left: left - lineSpaceBox.left, top: top - =
lineSpaceBox.top};
        }

        function charCoords(cm, pos, context, lineObj, bias) {
            if (!lineObj) lineObj =3D getLine(cm.doc, pos.line);
            return intoCoordSystem(cm, lineObj, measureChar(cm, lineObj, =
pos.ch, null, bias), context);
        }

        function cursorCoords(cm, pos, context, lineObj, measurement) {
            lineObj =3D lineObj || getLine(cm.doc, pos.line);
            if (!measurement) measurement =3D measureLine(cm, lineObj);
            function get(ch, right) {
                var m =3D measureChar(cm, lineObj, ch, measurement, =
right ? "right" : "left");
                if (right) m.left =3D m.right; else m.right =3D m.left;
                return intoCoordSystem(cm, lineObj, m, context);
            }
            function getBidi(ch, partPos) {
                var part =3D order[partPos], right =3D part.level % 2;
                if (ch =3D=3D bidiLeft(part) && partPos && part.level < =
order[partPos - 1].level) {
                    part =3D order[--partPos];
                    ch =3D bidiRight(part) - (part.level % 2 ? 0 : 1);
                    right =3D true;
                } else if (ch =3D=3D bidiRight(part) && partPos < =
order.length - 1 && part.level < order[partPos + 1].level) {
                    part =3D order[++partPos];
                    ch =3D bidiLeft(part) - part.level % 2;
                    right =3D false;
                }
                if (right && ch =3D=3D part.to && ch > part.from) return =
get(ch - 1);
                return get(ch, right);
            }
            var order =3D getOrder(lineObj), ch =3D pos.ch;
            if (!order) return get(ch);
            var partPos =3D getBidiPartAt(order, ch);
            var val =3D getBidi(ch, partPos);
            if (bidiOther !=3D null) val.other =3D getBidi(ch, =
bidiOther);
            return val;
        }

        function PosWithInfo(line, ch, outside, xRel) {
            var pos =3D new Pos(line, ch);
            pos.xRel =3D xRel;
            if (outside) pos.outside =3D true;
            return pos;
        }

        // Coords must be lineSpace-local
        function coordsChar(cm, x, y) {
            var doc =3D cm.doc;
            y +=3D cm.display.viewOffset;
            if (y < 0) return PosWithInfo(doc.first, 0, true, -1);
            var lineNo =3D lineAtHeight(doc, y), last =3D doc.first + =
doc.size - 1;
            if (lineNo > last)
                return PosWithInfo(doc.first + doc.size - 1, =
getLine(doc, last).text.length, true, 1);
            if (x < 0) x =3D 0;

            for (;;) {
                var lineObj =3D getLine(doc, lineNo);
                var found =3D coordsCharInner(cm, lineObj, lineNo, x, =
y);
                var merged =3D collapsedSpanAtEnd(lineObj);
                var mergedPos =3D merged && merged.find();
                if (merged && (found.ch > mergedPos.from.ch || found.ch =
=3D=3D mergedPos.from.ch && found.xRel > 0))
                    lineNo =3D mergedPos.to.line;
                else
                    return found;
            }
        }

        function coordsCharInner(cm, lineObj, lineNo, x, y) {
            var innerOff =3D y - heightAtLine(cm, lineObj);
            var wrongLine =3D false, adjust =3D 2 * =
cm.display.wrapper.clientWidth;
            var measurement =3D measureLine(cm, lineObj);

            function getX(ch) {
                var sp =3D cursorCoords(cm, Pos(lineNo, ch), "line",
                    lineObj, measurement);
                wrongLine =3D true;
                if (innerOff > sp.bottom) return sp.left - adjust;
                else if (innerOff < sp.top) return sp.left + adjust;
                else wrongLine =3D false;
                return sp.left;
            }

            var bidi =3D getOrder(lineObj), dist =3D =
lineObj.text.length;
            var from =3D lineLeft(lineObj), to =3D lineRight(lineObj);
            var fromX =3D getX(from), fromOutside =3D wrongLine, toX =3D =
getX(to), toOutside =3D wrongLine;

            if (x > toX) return PosWithInfo(lineNo, to, toOutside, 1);
            // Do a binary search between these bounds.
            for (;;) {
                if (bidi ? to =3D=3D from || to =3D=3D =
moveVisually(lineObj, from, 1) : to - from <=3D 1) {
                    var ch =3D x < fromX || x - fromX <=3D toX - x ? =
from : to;
                    var xDiff =3D x - (ch =3D=3D from ? fromX : toX);
                    while =
(isExtendingChar.test(lineObj.text.charAt(ch))) ++ch;
                    var pos =3D PosWithInfo(lineNo, ch, ch =3D=3D from ? =
fromOutside : toOutside,
                            xDiff < 0 ? -1 : xDiff ? 1 : 0);
                    return pos;
                }
                var step =3D Math.ceil(dist / 2), middle =3D from + =
step;
                if (bidi) {
                    middle =3D from;
                    for (var i =3D 0; i < step; ++i) middle =3D =
moveVisually(lineObj, middle, 1);
                }
                var middleX =3D getX(middle);
                if (middleX > x) {to =3D middle; toX =3D middleX; if =
(toOutside =3D wrongLine) toX +=3D 1000; dist =3D step;}
                else {from =3D middle; fromX =3D middleX; fromOutside =
=3D wrongLine; dist -=3D step;}
            }
        }

        var measureText;
        function textHeight(display) {
            if (display.cachedTextHeight !=3D null) return =
display.cachedTextHeight;
            if (measureText =3D=3D null) {
                measureText =3D elt("pre");
                // Measure a bunch of lines, for browsers that compute
                // fractional heights.
                for (var i =3D 0; i < 49; ++i) {
                    =
measureText.appendChild(document.createTextNode("x"));
                    measureText.appendChild(elt("br"));
                }
                measureText.appendChild(document.createTextNode("x"));
            }
            removeChildrenAndAdd(display.measure, measureText);
            var height =3D measureText.offsetHeight / 50;
            if (height > 3) display.cachedTextHeight =3D height;
            removeChildren(display.measure);
            return height || 1;
        }

        function charWidth(display) {
            if (display.cachedCharWidth !=3D null) return =
display.cachedCharWidth;
            var anchor =3D elt("span", "x");
            var pre =3D elt("pre", [anchor]);
            removeChildrenAndAdd(display.measure, pre);
            var width =3D anchor.offsetWidth;
            if (width > 2) display.cachedCharWidth =3D width;
            return width || 10;
        }

        // OPERATIONS

        // Operations are used to wrap changes in such a way that each
        // change won't have to update the cursor and display (which =
would
        // be awkward, slow, and error-prone), but instead updates are
        // batched and then all combined and executed at once.

        var nextOpId =3D 0;
        function startOperation(cm) {
            cm.curOp =3D {
                // An array of ranges of lines that have to be updated. =
See
                // updateDisplay.
                changes: [],
                forceUpdate: false,
                updateInput: null,
                userSelChange: null,
                textChanged: null,
                selectionChanged: false,
                cursorActivity: false,
                updateMaxLine: false,
                updateScrollPos: false,
                id: ++nextOpId
            };
            if (!delayedCallbackDepth++) delayedCallbacks =3D [];
        }

        function endOperation(cm) {
            var op =3D cm.curOp, doc =3D cm.doc, display =3D cm.display;
            cm.curOp =3D null;

            if (op.updateMaxLine) computeMaxLength(cm);
            if (display.maxLineChanged && !cm.options.lineWrapping && =
display.maxLine) {
                var width =3D measureLineWidth(cm, display.maxLine);
                display.sizer.style.minWidth =3D Math.max(0, width + 3 + =
scrollerCutOff) + "px";
                display.maxLineChanged =3D false;
                var maxScrollLeft =3D Math.max(0, =
display.sizer.offsetLeft + display.sizer.offsetWidth - =
display.scroller.clientWidth);
                if (maxScrollLeft < doc.scrollLeft && =
!op.updateScrollPos)
                    setScrollLeft(cm, =
Math.min(display.scroller.scrollLeft, maxScrollLeft), true);
            }
            var newScrollPos, updated;
            if (op.updateScrollPos) {
                newScrollPos =3D op.updateScrollPos;
            } else if (op.selectionChanged && =
display.scroller.clientHeight) { // don't rescroll if not visible
                var coords =3D cursorCoords(cm, doc.sel.head);
                newScrollPos =3D calculateScrollPos(cm, coords.left, =
coords.top, coords.left, coords.bottom);
            }
            if (op.changes.length || op.forceUpdate || newScrollPos && =
newScrollPos.scrollTop !=3D null) {
                updated =3D updateDisplay(cm, op.changes, newScrollPos =
&& newScrollPos.scrollTop, op.forceUpdate);
                if (cm.display.scroller.offsetHeight) cm.doc.scrollTop =
=3D cm.display.scroller.scrollTop;
            }
            if (!updated && op.selectionChanged) updateSelection(cm);
            if (op.updateScrollPos) {
                display.scroller.scrollTop =3D =
display.scrollbarV.scrollTop =3D doc.scrollTop =3D =
newScrollPos.scrollTop;
                display.scroller.scrollLeft =3D =
display.scrollbarH.scrollLeft =3D doc.scrollLeft =3D =
newScrollPos.scrollLeft;
                alignHorizontally(cm);
                if (op.scrollToPos)
                    scrollPosIntoView(cm, clipPos(cm.doc, =
op.scrollToPos), op.scrollToPosMargin);
            } else if (newScrollPos) {
                scrollCursorIntoView(cm);
            }
            if (op.selectionChanged) restartBlink(cm);

            if (cm.state.focused && op.updateInput)
                resetInput(cm, op.userSelChange);

            var hidden =3D op.maybeHiddenMarkers, unhidden =3D =
op.maybeUnhiddenMarkers;
            if (hidden) for (var i =3D 0; i < hidden.length; ++i)
                if (!hidden[i].lines.length) signal(hidden[i], "hide");
            if (unhidden) for (var i =3D 0; i < unhidden.length; ++i)
                if (unhidden[i].lines.length) signal(unhidden[i], =
"unhide");

            var delayed;
            if (!--delayedCallbackDepth) {
                delayed =3D delayedCallbacks;
                delayedCallbacks =3D null;
            }
            if (op.textChanged)
                signal(cm, "change", cm, op.textChanged);
            if (op.cursorActivity) signal(cm, "cursorActivity", cm);
            if (delayed) for (var i =3D 0; i < delayed.length; ++i) =
delayed[i]();
        }

        // Wraps a function in an operation. Returns the wrapped =
function.
        function operation(cm1, f) {
            return function() {
                var cm =3D cm1 || this, withOp =3D !cm.curOp;
                if (withOp) startOperation(cm);
                try { var result =3D f.apply(cm, arguments); }
                finally { if (withOp) endOperation(cm); }
                return result;
            };
        }
        function docOperation(f) {
            return function() {
                var withOp =3D this.cm && !this.cm.curOp, result;
                if (withOp) startOperation(this.cm);
                try { result =3D f.apply(this, arguments); }
                finally { if (withOp) endOperation(this.cm); }
                return result;
            };
        }
        function runInOp(cm, f) {
            var withOp =3D !cm.curOp, result;
            if (withOp) startOperation(cm);
            try { result =3D f(); }
            finally { if (withOp) endOperation(cm); }
            return result;
        }

        function regChange(cm, from, to, lendiff) {
            if (from =3D=3D null) from =3D cm.doc.first;
            if (to =3D=3D null) to =3D cm.doc.first + cm.doc.size;
            cm.curOp.changes.push({from: from, to: to, diff: lendiff});
        }

        // INPUT HANDLING

        function slowPoll(cm) {
            if (cm.display.pollingFast) return;
            cm.display.poll.set(cm.options.pollInterval, function() {
                readInput(cm);
                if (cm.state.focused) slowPoll(cm);
            });
        }

        function fastPoll(cm) {
            var missed =3D false;
            cm.display.pollingFast =3D true;
            function p() {
                var changed =3D readInput(cm);
                if (!changed && !missed) {missed =3D true; =
cm.display.poll.set(60, p);}
                else {cm.display.pollingFast =3D false; slowPoll(cm);}
            }
            cm.display.poll.set(20, p);
        }

        // prevInput is a hack to work with IME. If we reset the =
textarea
        // on every change, that breaks IME. So we look for changes
        // compared to the previous content instead. (Modern browsers =
have
        // events that indicate IME taking place, but these are not =
widely
        // supported or compatible enough yet to rely on.)
        function readInput(cm) {
            var input =3D cm.display.input, prevInput =3D =
cm.display.prevInput, doc =3D cm.doc, sel =3D doc.sel;
            if (!cm.state.focused || hasSelection(input) || =
isReadOnly(cm) || cm.state.disableInput) return false;
            var text =3D input.value;
            if (text =3D=3D prevInput && posEq(sel.from, sel.to)) return =
false;
            if (ie && !ie_lt9 && cm.display.inputHasSelection =3D=3D=3D =
text) {
                resetInput(cm, true);
                return false;
            }

            var withOp =3D !cm.curOp;
            if (withOp) startOperation(cm);
            sel.shift =3D false;
            var same =3D 0, l =3D Math.min(prevInput.length, =
text.length);
            while (same < l && prevInput.charCodeAt(same) =3D=3D =
text.charCodeAt(same)) ++same;
            var from =3D sel.from, to =3D sel.to;
            if (same < prevInput.length)
                from =3D Pos(from.line, from.ch - (prevInput.length - =
same));
            else if (cm.state.overwrite && posEq(from, to) && =
!cm.state.pasteIncoming)
                to =3D Pos(to.line, Math.min(getLine(doc, =
to.line).text.length, to.ch + (text.length - same)));

            var updateInput =3D cm.curOp.updateInput;
            var changeEvent =3D {from: from, to: to, text: =
splitLines(text.slice(same)),
                origin: cm.state.pasteIncoming ? "paste" : "+input"};
            makeChange(cm.doc, changeEvent, "end");
            cm.curOp.updateInput =3D updateInput;
            signalLater(cm, "inputRead", cm, changeEvent);

            if (text.length > 1000 || text.indexOf("\n") > -1) =
input.value =3D cm.display.prevInput =3D "";
            else cm.display.prevInput =3D text;
            if (withOp) endOperation(cm);
            cm.state.pasteIncoming =3D false;
            return true;
        }

        function resetInput(cm, user) {
            var minimal, selected, doc =3D cm.doc;
            if (!posEq(doc.sel.from, doc.sel.to)) {
                cm.display.prevInput =3D "";
                minimal =3D hasCopyEvent &&
                    (doc.sel.to.line - doc.sel.from.line > 100 || =
(selected =3D cm.getSelection()).length > 1000);
                var content =3D minimal ? "-" : selected || =
cm.getSelection();
                cm.display.input.value =3D content;
                if (cm.state.focused) selectInput(cm.display.input);
                if (ie && !ie_lt9) cm.display.inputHasSelection =3D =
content;
            } else if (user) {
                cm.display.prevInput =3D cm.display.input.value =3D "";
                if (ie && !ie_lt9) cm.display.inputHasSelection =3D =
null;
            }
            cm.display.inaccurateSelection =3D minimal;
        }

        function focusInput(cm) {
            if (cm.options.readOnly !=3D "nocursor" && (!mobile || =
document.activeElement !=3D cm.display.input))
                try {cm.display.input.focus();} catch(e) {}
        }

        function isReadOnly(cm) {
            return cm.options.readOnly || cm.doc.cantEdit;
        }

        // EVENT HANDLERS

        function registerEventHandlers(cm) {
            var d =3D cm.display;
            on(d.scroller, "mousedown", operation(cm, onMouseDown));
            if (ie)
                on(d.scroller, "dblclick", operation(cm, function(e) {
                    if (signalDOMEvent(cm, e)) return;
                    var pos =3D posFromMouse(cm, e);
                    if (!pos || clickInGutter(cm, e) || =
eventInWidget(cm.display, e)) return;
                    e_preventDefault(e);
                    var word =3D findWordAt(getLine(cm.doc, =
pos.line).text, pos);
                    extendSelection(cm.doc, word.from, word.to);
                }));
            else
                on(d.scroller, "dblclick", function(e) { =
signalDOMEvent(cm, e) || e_preventDefault(e); });
            on(d.lineSpace, "selectstart", function(e) {
                if (!eventInWidget(d, e)) e_preventDefault(e);
            });
            // Gecko browsers fire contextmenu *after* opening the menu, =
at
            // which point we can't mess with it anymore. Context menu =
is
            // handled in onMouseDown for Gecko.
            if (!captureMiddleClick) on(d.scroller, "contextmenu", =
function(e) {onContextMenu(cm, e);});

            on(d.scroller, "scroll", function() {
                if (d.scroller.clientHeight) {
                    setScrollTop(cm, d.scroller.scrollTop);
                    setScrollLeft(cm, d.scroller.scrollLeft, true);
                    signal(cm, "scroll", cm);
                }
            });
            on(d.scrollbarV, "scroll", function() {
                if (d.scroller.clientHeight) setScrollTop(cm, =
d.scrollbarV.scrollTop);
            });
            on(d.scrollbarH, "scroll", function() {
                if (d.scroller.clientHeight) setScrollLeft(cm, =
d.scrollbarH.scrollLeft);
            });

            on(d.scroller, "mousewheel", function(e){onScrollWheel(cm, =
e);});
            on(d.scroller, "DOMMouseScroll", =
function(e){onScrollWheel(cm, e);});

            function reFocus() { if (cm.state.focused) =
setTimeout(bind(focusInput, cm), 0); }
            on(d.scrollbarH, "mousedown", reFocus);
            on(d.scrollbarV, "mousedown", reFocus);
            // Prevent wrapper from ever scrolling
            on(d.wrapper, "scroll", function() { d.wrapper.scrollTop =3D =
d.wrapper.scrollLeft =3D 0; });

            var resizeTimer;
            function onResize() {
                if (resizeTimer =3D=3D null) resizeTimer =3D =
setTimeout(function() {
                    resizeTimer =3D null;
                    // Might be a text scaling operation, clear size =
caches.
                    d.cachedCharWidth =3D d.cachedTextHeight =3D =
knownScrollbarWidth =3D null;
                    clearCaches(cm);
                    runInOp(cm, bind(regChange, cm));
                }, 100);
            }
            on(window, "resize", onResize);
            // Above handler holds on to the editor and its data =
structures.
            // Here we poll to unregister it when the editor is no =
longer in
            // the document, so that it can be garbage-collected.
            function unregister() {
                for (var p =3D d.wrapper.parentNode; p && p !=3D =
document.body; p =3D p.parentNode) {}
                if (p) setTimeout(unregister, 5000);
                else off(window, "resize", onResize);
            }
            setTimeout(unregister, 5000);

            on(d.input, "keyup", operation(cm, function(e) {
                if (signalDOMEvent(cm, e) || cm.options.onKeyEvent && =
cm.options.onKeyEvent(cm, addStop(e))) return;
                if (e.keyCode =3D=3D 16) cm.doc.sel.shift =3D false;
            }));
            on(d.input, "input", bind(fastPoll, cm));
            on(d.input, "keydown", operation(cm, onKeyDown));
            on(d.input, "keypress", operation(cm, onKeyPress));
            on(d.input, "focus", bind(onFocus, cm));
            on(d.input, "blur", bind(onBlur, cm));

            function drag_(e) {
                if (signalDOMEvent(cm, e) || cm.options.onDragEvent && =
cm.options.onDragEvent(cm, addStop(e))) return;
                e_stop(e);
            }
            if (cm.options.dragDrop) {
                on(d.scroller, "dragstart", function(e){onDragStart(cm, =
e);});
                on(d.scroller, "dragenter", drag_);
                on(d.scroller, "dragover", drag_);
                on(d.scroller, "drop", operation(cm, onDrop));
            }
            on(d.scroller, "paste", function(e){
                if (eventInWidget(d, e)) return;
                focusInput(cm);
                fastPoll(cm);
            });
            on(d.input, "paste", function() {
                cm.state.pasteIncoming =3D true;
                fastPoll(cm);
            });

            function prepareCopy() {
                if (d.inaccurateSelection) {
                    d.prevInput =3D "";
                    d.inaccurateSelection =3D false;
                    d.input.value =3D cm.getSelection();
                    selectInput(d.input);
                }
            }
            on(d.input, "cut", prepareCopy);
            on(d.input, "copy", prepareCopy);

            // Needed to handle Tab key in KHTML
            if (khtml) on(d.sizer, "mouseup", function() {
                if (document.activeElement =3D=3D d.input) =
d.input.blur();
                focusInput(cm);
            });
        }

        function eventInWidget(display, e) {
            for (var n =3D e_target(e); n !=3D display.wrapper; n =3D =
n.parentNode) {
                if (!n || n.ignoreEvents || n.parentNode =3D=3D =
display.sizer && n !=3D display.mover) return true;
            }
        }

        function posFromMouse(cm, e, liberal) {
            var display =3D cm.display;
            if (!liberal) {
                var target =3D e_target(e);
                if (target =3D=3D display.scrollbarH || target =3D=3D =
display.scrollbarH.firstChild ||
                    target =3D=3D display.scrollbarV || target =3D=3D =
display.scrollbarV.firstChild ||
                    target =3D=3D display.scrollbarFiller || target =
=3D=3D display.gutterFiller) return null;
            }
            var x, y, space =3D getRect(display.lineSpace);
            // Fails unpredictably on IE[67] when mouse is dragged =
around quickly.
            try { x =3D e.clientX; y =3D e.clientY; } catch (e) { return =
null; }
            return coordsChar(cm, x - space.left, y - space.top);
        }

        var lastClick, lastDoubleClick;
        function onMouseDown(e) {
            if (signalDOMEvent(this, e)) return;
            var cm =3D this, display =3D cm.display, doc =3D cm.doc, sel =
=3D doc.sel;
            sel.shift =3D e.shiftKey;

            if (eventInWidget(display, e)) {
                if (!webkit) {
                    display.scroller.draggable =3D false;
                    setTimeout(function(){display.scroller.draggable =3D =
true;}, 100);
                }
                return;
            }
            if (clickInGutter(cm, e)) return;
            var start =3D posFromMouse(cm, e);

            switch (e_button(e)) {
                case 3:
                    if (captureMiddleClick) onContextMenu.call(cm, cm, =
e);
                    return;
                case 2:
                    if (start) extendSelection(cm.doc, start);
                    setTimeout(bind(focusInput, cm), 20);
                    e_preventDefault(e);
                    return;
            }
            // For button 1, if it was clicked inside the editor
            // (posFromMouse returning non-null), we have to adjust the
            // selection.
            if (!start) {if (e_target(e) =3D=3D display.scroller) =
e_preventDefault(e); return;}

            if (!cm.state.focused) onFocus(cm);

            var now =3D +new Date, type =3D "single";
            if (lastDoubleClick && lastDoubleClick.time > now - 400 && =
posEq(lastDoubleClick.pos, start)) {
                type =3D "triple";
                e_preventDefault(e);
                setTimeout(bind(focusInput, cm), 20);
                selectLine(cm, start.line);
            } else if (lastClick && lastClick.time > now - 400 && =
posEq(lastClick.pos, start)) {
                type =3D "double";
                lastDoubleClick =3D {time: now, pos: start};
                e_preventDefault(e);
                var word =3D findWordAt(getLine(doc, start.line).text, =
start);
                extendSelection(cm.doc, word.from, word.to);
            } else { lastClick =3D {time: now, pos: start}; }

            var last =3D start;
            if (cm.options.dragDrop && dragAndDrop && !isReadOnly(cm) && =
!posEq(sel.from, sel.to) &&
                !posLess(start, sel.from) && !posLess(sel.to, start) && =
type =3D=3D "single") {
                var dragEnd =3D operation(cm, function(e2) {
                    if (webkit) display.scroller.draggable =3D false;
                    cm.state.draggingText =3D false;
                    off(document, "mouseup", dragEnd);
                    off(display.scroller, "drop", dragEnd);
                    if (Math.abs(e.clientX - e2.clientX) + =
Math.abs(e.clientY - e2.clientY) < 10) {
                        e_preventDefault(e2);
                        extendSelection(cm.doc, start);
                        focusInput(cm);
                    }
                });
                // Let the drag handler handle this.
                if (webkit) display.scroller.draggable =3D true;
                cm.state.draggingText =3D dragEnd;
                // IE's approach to draggable
                if (display.scroller.dragDrop) =
display.scroller.dragDrop();
                on(document, "mouseup", dragEnd);
                on(display.scroller, "drop", dragEnd);
                return;
            }
            e_preventDefault(e);
            if (type =3D=3D "single") extendSelection(cm.doc, =
clipPos(doc, start));

            var startstart =3D sel.from, startend =3D sel.to, lastPos =
=3D start;

            function doSelect(cur) {
                if (posEq(lastPos, cur)) return;
                lastPos =3D cur;

                if (type =3D=3D "single") {
                    extendSelection(cm.doc, clipPos(doc, start), cur);
                    return;
                }

                startstart =3D clipPos(doc, startstart);
                startend =3D clipPos(doc, startend);
                if (type =3D=3D "double") {
                    var word =3D findWordAt(getLine(doc, cur.line).text, =
cur);
                    if (posLess(cur, startstart)) =
extendSelection(cm.doc, word.from, startend);
                    else extendSelection(cm.doc, startstart, word.to);
                } else if (type =3D=3D "triple") {
                    if (posLess(cur, startstart)) =
extendSelection(cm.doc, startend, clipPos(doc, Pos(cur.line, 0)));
                    else extendSelection(cm.doc, startstart, =
clipPos(doc, Pos(cur.line + 1, 0)));
                }
            }

            var editorSize =3D getRect(display.wrapper);
            // Used to ensure timeout re-tries don't fire when another =
extend
            // happened in the meantime (clearTimeout isn't reliable -- =
at
            // least on Chrome, the timeouts still happen even when =
cleared,
            // if the clear happens after their scheduled firing time).
            var counter =3D 0;

            function extend(e) {
                var curCount =3D ++counter;
                var cur =3D posFromMouse(cm, e, true);
                if (!cur) return;
                if (!posEq(cur, last)) {
                    if (!cm.state.focused) onFocus(cm);
                    last =3D cur;
                    doSelect(cur);
                    var visible =3D visibleLines(display, doc);
                    if (cur.line >=3D visible.to || cur.line < =
visible.from)
                        setTimeout(operation(cm, function(){if (counter =
=3D=3D curCount) extend(e);}), 150);
                } else {
                    var outside =3D e.clientY < editorSize.top ? -20 : =
e.clientY > editorSize.bottom ? 20 : 0;
                    if (outside) setTimeout(operation(cm, function() {
                        if (counter !=3D curCount) return;
                        display.scroller.scrollTop +=3D outside;
                        extend(e);
                    }), 50);
                }
            }

            function done(e) {
                counter =3D Infinity;
                e_preventDefault(e);
                focusInput(cm);
                off(document, "mousemove", move);
                off(document, "mouseup", up);
            }

            var move =3D operation(cm, function(e) {
                if (!ie && !e_button(e)) done(e);
                else extend(e);
            });
            var up =3D operation(cm, done);
            on(document, "mousemove", move);
            on(document, "mouseup", up);
        }

        function clickInGutter(cm, e) {
            var display =3D cm.display;
            try { var mX =3D e.clientX, mY =3D e.clientY; }
            catch(e) { return false; }

            if (mX >=3D Math.floor(getRect(display.gutters).right)) =
return false;
            e_preventDefault(e);
            if (!hasHandler(cm, "gutterClick")) return true;

            var lineBox =3D getRect(display.lineDiv);
            if (mY > lineBox.bottom) return true;
            mY -=3D lineBox.top - display.viewOffset;

            for (var i =3D 0; i < cm.options.gutters.length; ++i) {
                var g =3D display.gutters.childNodes[i];
                if (g && getRect(g).right >=3D mX) {
                    var line =3D lineAtHeight(cm.doc, mY);
                    var gutter =3D cm.options.gutters[i];
                    signalLater(cm, "gutterClick", cm, line, gutter, e);
                    break;
                }
            }
            return true;
        }

        // Kludge to work around strange IE behavior where it'll =
sometimes
        // re-fire a series of drag-related events right after the drop =
(#1551)
        var lastDrop =3D 0;

        function onDrop(e) {
            var cm =3D this;
            if (signalDOMEvent(cm, e) || eventInWidget(cm.display, e) || =
(cm.options.onDragEvent && cm.options.onDragEvent(cm, addStop(e))))
                return;
            e_preventDefault(e);
            if (ie) lastDrop =3D +new Date;
            var pos =3D posFromMouse(cm, e, true), files =3D =
e.dataTransfer.files;
            if (!pos || isReadOnly(cm)) return;
            if (files && files.length && window.FileReader && =
window.File) {
                var n =3D files.length, text =3D Array(n), read =3D 0;
                var loadFile =3D function(file, i) {
                    var reader =3D new FileReader;
                    reader.onload =3D function() {
                        text[i] =3D reader.result;
                        if (++read =3D=3D n) {
                            pos =3D clipPos(cm.doc, pos);
                            makeChange(cm.doc, {from: pos, to: pos, =
text: splitLines(text.join("\n")), origin: "paste"}, "around");
                        }
                    };
                    reader.readAsText(file);
                };
                for (var i =3D 0; i < n; ++i) loadFile(files[i], i);
            } else {
                // Don't do a replace if the drop happened inside of the =
selected text.
                if (cm.state.draggingText && !(posLess(pos, =
cm.doc.sel.from) || posLess(cm.doc.sel.to, pos))) {
                    cm.state.draggingText(e);
                    // Ensure the editor is re-focused
                    setTimeout(bind(focusInput, cm), 20);
                    return;
                }
                try {
                    var text =3D e.dataTransfer.getData("Text");
                    if (text) {
                        var curFrom =3D cm.doc.sel.from, curTo =3D =
cm.doc.sel.to;
                        setSelection(cm.doc, pos, pos);
                        if (cm.state.draggingText) replaceRange(cm.doc, =
"", curFrom, curTo, "paste");
                        cm.replaceSelection(text, null, "paste");
                        focusInput(cm);
                        onFocus(cm);
                    }
                }
                catch(e){}
            }
        }

        function onDragStart(cm, e) {
            if (ie && (!cm.state.draggingText || +new Date - lastDrop < =
100)) { e_stop(e); return; }
            if (signalDOMEvent(cm, e) || eventInWidget(cm.display, e)) =
return;

            var txt =3D cm.getSelection();
            e.dataTransfer.setData("Text", txt);

            // Use dummy image instead of default browsers image.
            // Recent Safari (~6.0.2) have a tendency to segfault when =
this happens, so we don't do it there.
            if (e.dataTransfer.setDragImage && !safari) {
                var img =3D elt("img", null, null, "position: fixed; =
left: 0; top: 0;");
                if (opera) {
                    img.width =3D img.height =3D 1;
                    cm.display.wrapper.appendChild(img);
                    // Force a relayout, or Opera won't use our image =
for some obscure reason
                    img._top =3D img.offsetTop;
                }
                e.dataTransfer.setDragImage(img, 0, 0);
                if (opera) img.parentNode.removeChild(img);
            }
        }

        function setScrollTop(cm, val) {
            if (Math.abs(cm.doc.scrollTop - val) < 2) return;
            cm.doc.scrollTop =3D val;
            if (!gecko) updateDisplay(cm, [], val);
            if (cm.display.scroller.scrollTop !=3D val) =
cm.display.scroller.scrollTop =3D val;
            if (cm.display.scrollbarV.scrollTop !=3D val) =
cm.display.scrollbarV.scrollTop =3D val;
            if (gecko) updateDisplay(cm, []);
            startWorker(cm, 100);
        }
        function setScrollLeft(cm, val, isScroller) {
            if (isScroller ? val =3D=3D cm.doc.scrollLeft : =
Math.abs(cm.doc.scrollLeft - val) < 2) return;
            val =3D Math.min(val, cm.display.scroller.scrollWidth - =
cm.display.scroller.clientWidth);
            cm.doc.scrollLeft =3D val;
            alignHorizontally(cm);
            if (cm.display.scroller.scrollLeft !=3D val) =
cm.display.scroller.scrollLeft =3D val;
            if (cm.display.scrollbarH.scrollLeft !=3D val) =
cm.display.scrollbarH.scrollLeft =3D val;
        }

        // Since the delta values reported on mouse wheel events are
        // unstandardized between browsers and even browser versions, =
and
        // generally horribly unpredictable, this code starts by =
measuring
        // the scroll effect that the first few mouse wheel events have,
        // and, from that, detects the way it can convert deltas to =
pixel
        // offsets afterwards.
        //
        // The reason we want to know the amount a wheel event will =
scroll
        // is that it gives us a chance to update the display before the
        // actual scrolling happens, reducing flickering.

        var wheelSamples =3D 0, wheelPixelsPerUnit =3D null;
        // Fill in a browser-detected starting value on browsers where =
we
        // know one. These don't have to be accurate -- the result of =
them
        // being wrong would just be a slight flicker on the first wheel
        // scroll (if it is large enough).
        if (ie) wheelPixelsPerUnit =3D -.53;
        else if (gecko) wheelPixelsPerUnit =3D 15;
        else if (chrome) wheelPixelsPerUnit =3D -.7;
        else if (safari) wheelPixelsPerUnit =3D -1/3;

        function onScrollWheel(cm, e) {
            var dx =3D e.wheelDeltaX, dy =3D e.wheelDeltaY;
            if (dx =3D=3D null && e.detail && e.axis =3D=3D =
e.HORIZONTAL_AXIS) dx =3D e.detail;
            if (dy =3D=3D null && e.detail && e.axis =3D=3D =
e.VERTICAL_AXIS) dy =3D e.detail;
            else if (dy =3D=3D null) dy =3D e.wheelDelta;

            var display =3D cm.display, scroll =3D display.scroller;
            // Quit if there's nothing to scroll here
            if (!(dx && scroll.scrollWidth > scroll.clientWidth ||
                dy && scroll.scrollHeight > scroll.clientHeight)) =
return;

            // Webkit browsers on OS X abort momentum scrolls when the =
target
            // of the scroll event is removed from the scrollable =
element.
            // This hack (see related code in patchDisplay) makes sure =
the
            // element is kept around.
            if (dy && mac && webkit) {
                for (var cur =3D e.target; cur !=3D scroll; cur =3D =
cur.parentNode) {
                    if (cur.lineObj) {
                        cm.display.currentWheelTarget =3D cur;
                        break;
                    }
                }
            }

            // On some browsers, horizontal scrolling will cause redraws =
to
            // happen before the gutter has been realigned, causing it =
to
            // wriggle around in a most unseemly way. When we have an
            // estimated pixels/delta value, we just handle horizontal
            // scrolling entirely here. It'll be slightly off from =
native, but
            // better than glitching out.
            if (dx && !gecko && !opera && wheelPixelsPerUnit !=3D null) =
{
                if (dy)
                    setScrollTop(cm, Math.max(0, =
Math.min(scroll.scrollTop + dy * wheelPixelsPerUnit, scroll.scrollHeight =
- scroll.clientHeight)));
                setScrollLeft(cm, Math.max(0, Math.min(scroll.scrollLeft =
+ dx * wheelPixelsPerUnit, scroll.scrollWidth - scroll.clientWidth)));
                e_preventDefault(e);
                display.wheelStartX =3D null; // Abort measurement, if =
in progress
                return;
            }

            if (dy && wheelPixelsPerUnit !=3D null) {
                var pixels =3D dy * wheelPixelsPerUnit;
                var top =3D cm.doc.scrollTop, bot =3D top + =
display.wrapper.clientHeight;
                if (pixels < 0) top =3D Math.max(0, top + pixels - 50);
                else bot =3D Math.min(cm.doc.height, bot + pixels + 50);
                updateDisplay(cm, [], {top: top, bottom: bot});
            }

            if (wheelSamples < 20) {
                if (display.wheelStartX =3D=3D null) {
                    display.wheelStartX =3D scroll.scrollLeft; =
display.wheelStartY =3D scroll.scrollTop;
                    display.wheelDX =3D dx; display.wheelDY =3D dy;
                    setTimeout(function() {
                        if (display.wheelStartX =3D=3D null) return;
                        var movedX =3D scroll.scrollLeft - =
display.wheelStartX;
                        var movedY =3D scroll.scrollTop - =
display.wheelStartY;
                        var sample =3D (movedY && display.wheelDY && =
movedY / display.wheelDY) ||
                            (movedX && display.wheelDX && movedX / =
display.wheelDX);
                        display.wheelStartX =3D display.wheelStartY =3D =
null;
                        if (!sample) return;
                        wheelPixelsPerUnit =3D (wheelPixelsPerUnit * =
wheelSamples + sample) / (wheelSamples + 1);
                        ++wheelSamples;
                    }, 200);
                } else {
                    display.wheelDX +=3D dx; display.wheelDY +=3D dy;
                }
            }
        }

        function doHandleBinding(cm, bound, dropShift) {
            if (typeof bound =3D=3D "string") {
                bound =3D commands[bound];
                if (!bound) return false;
            }
            // Ensure previous input has been read, so that the handler =
sees a
            // consistent view of the document
            if (cm.display.pollingFast && readInput(cm)) =
cm.display.pollingFast =3D false;
            var doc =3D cm.doc, prevShift =3D doc.sel.shift, done =3D =
false;
            try {
                if (isReadOnly(cm)) cm.state.suppressEdits =3D true;
                if (dropShift) doc.sel.shift =3D false;
                done =3D bound(cm) !=3D Pass;
            } finally {
                doc.sel.shift =3D prevShift;
                cm.state.suppressEdits =3D false;
            }
            return done;
        }

        function allKeyMaps(cm) {
            var maps =3D cm.state.keyMaps.slice(0);
            if (cm.options.extraKeys) maps.push(cm.options.extraKeys);
            maps.push(cm.options.keyMap);
            return maps;
        }

        var maybeTransition;
        function handleKeyBinding(cm, e) {
            // Handle auto keymap transitions
            var startMap =3D getKeyMap(cm.options.keyMap), next =3D =
startMap.auto;
            clearTimeout(maybeTransition);
            if (next && !isModifierKey(e)) maybeTransition =3D =
setTimeout(function() {
                if (getKeyMap(cm.options.keyMap) =3D=3D startMap) {
                    cm.options.keyMap =3D (next.call ? next.call(null, =
cm) : next);
                    keyMapChanged(cm);
                }
            }, 50);

            var name =3D keyName(e, true), handled =3D false;
            if (!name) return false;
            var keymaps =3D allKeyMaps(cm);

            if (e.shiftKey) {
                // First try to resolve full name (including 'Shift-'). =
Failing
                // that, see if there is a cursor-motion command =
(starting with
                // 'go') bound to the keyname without 'Shift-'.
                handled =3D lookupKey("Shift-" + name, keymaps, =
function(b) {return doHandleBinding(cm, b, true);})
                    || lookupKey(name, keymaps, function(b) {
                        if (typeof b =3D=3D "string" ? =
/^go[A-Z]/.test(b) : b.motion)
                            return doHandleBinding(cm, b);
                    });
            } else {
                handled =3D lookupKey(name, keymaps, function(b) { =
return doHandleBinding(cm, b); });
            }

            if (handled) {
                e_preventDefault(e);
                restartBlink(cm);
                if (ie_lt9) { e.oldKeyCode =3D e.keyCode; e.keyCode =3D =
0; }
                signalLater(cm, "keyHandled", cm, name, e);
            }
            return handled;
        }

        function handleCharBinding(cm, e, ch) {
            var handled =3D lookupKey("'" + ch + "'", allKeyMaps(cm),
                function(b) { return doHandleBinding(cm, b, true); });
            if (handled) {
                e_preventDefault(e);
                restartBlink(cm);
                signalLater(cm, "keyHandled", cm, "'" + ch + "'", e);
            }
            return handled;
        }

        var lastStoppedKey =3D null;
        function onKeyDown(e) {
            var cm =3D this;
            if (!cm.state.focused) onFocus(cm);
            if (ie && e.keyCode =3D=3D 27) { e.returnValue =3D false; }
            if (signalDOMEvent(cm, e) || cm.options.onKeyEvent && =
cm.options.onKeyEvent(cm, addStop(e))) return;
            var code =3D e.keyCode;
            // IE does strange things with escape.
            cm.doc.sel.shift =3D code =3D=3D 16 || e.shiftKey;
            // First give onKeyEvent option a chance to handle this.
            var handled =3D handleKeyBinding(cm, e);
            if (opera) {
                lastStoppedKey =3D handled ? code : null;
                // Opera has no cut event... we try to at least catch =
the key combo
                if (!handled && code =3D=3D 88 && !hasCopyEvent && (mac =
? e.metaKey : e.ctrlKey))
                    cm.replaceSelection("");
            }
        }

        function onKeyPress(e) {
            var cm =3D this;
            if (signalDOMEvent(cm, e) || cm.options.onKeyEvent && =
cm.options.onKeyEvent(cm, addStop(e))) return;
            var keyCode =3D e.keyCode, charCode =3D e.charCode;
            if (opera && keyCode =3D=3D lastStoppedKey) {lastStoppedKey =
=3D null; e_preventDefault(e); return;}
            if (((opera && (!e.which || e.which < 10)) || khtml) && =
handleKeyBinding(cm, e)) return;
            var ch =3D String.fromCharCode(charCode =3D=3D null ? =
keyCode : charCode);
            if (this.options.electricChars && =
this.doc.mode.electricChars &&
                this.options.smartIndent && !isReadOnly(this) &&
                this.doc.mode.electricChars.indexOf(ch) > -1)
                setTimeout(operation(cm, function() {indentLine(cm, =
cm.doc.sel.to.line, "smart");}), 75);
            if (handleCharBinding(cm, e, ch)) return;
            if (ie && !ie_lt9) cm.display.inputHasSelection =3D null;
            fastPoll(cm);
        }

        function onFocus(cm) {
            if (cm.options.readOnly =3D=3D "nocursor") return;
            if (!cm.state.focused) {
                signal(cm, "focus", cm);
                cm.state.focused =3D true;
                if =
(cm.display.wrapper.className.search(/\bCodeMirror-focused\b/) =3D=3D =
-1)
                    cm.display.wrapper.className +=3D " =
CodeMirror-focused";
                resetInput(cm, true);
            }
            slowPoll(cm);
            restartBlink(cm);
        }
        function onBlur(cm) {
            if (cm.state.focused) {
                signal(cm, "blur", cm);
                cm.state.focused =3D false;
                cm.display.wrapper.className =3D =
cm.display.wrapper.className.replace(" CodeMirror-focused", "");
            }
            clearInterval(cm.display.blinker);
            setTimeout(function() {if (!cm.state.focused) =
cm.doc.sel.shift =3D false;}, 150);
        }

        var detectingSelectAll;
        function onContextMenu(cm, e) {
            if (signalDOMEvent(cm, e, "contextmenu")) return;
            var display =3D cm.display, sel =3D cm.doc.sel;
            if (eventInWidget(display, e)) return;

            var pos =3D posFromMouse(cm, e), scrollPos =3D =
display.scroller.scrollTop;
            if (!pos || opera) return; // Opera is difficult.
            if (posEq(sel.from, sel.to) || posLess(pos, sel.from) || =
!posLess(pos, sel.to))
                operation(cm, setSelection)(cm.doc, pos, pos);

            var oldCSS =3D display.input.style.cssText;
            display.inputDiv.style.position =3D "absolute";
            display.input.style.cssText =3D "position: fixed; width: =
30px; height: 30px; top: " + (e.clientY - 5) +
                "px; left: " + (e.clientX - 5) + "px; z-index: 1000; =
background: white; outline: none;" +
                "border-width: 0; outline: none; overflow: hidden; =
opacity: .05; -ms-opacity: .05; filter: alpha(opacity=3D5);";
            focusInput(cm);
            resetInput(cm, true);
            // Adds "Select all" to context menu in FF
            if (posEq(sel.from, sel.to)) display.input.value =3D =
display.prevInput =3D " ";

            function prepareSelectAllHack() {
                if (display.input.selectionStart !=3D null) {
                    var extval =3D display.input.value =3D " " + =
(posEq(sel.from, sel.to) ? "" : display.input.value);
                    display.prevInput =3D " ";
                    display.input.selectionStart =3D 1; =
display.input.selectionEnd =3D extval.length;
                }
            }
            function rehide() {
                display.inputDiv.style.position =3D "relative";
                display.input.style.cssText =3D oldCSS;
                if (ie_lt9) display.scrollbarV.scrollTop =3D =
display.scroller.scrollTop =3D scrollPos;
                slowPoll(cm);

                // Try to detect the user choosing select-all
                if (display.input.selectionStart !=3D null) {
                    if (!ie || ie_lt9) prepareSelectAllHack();
                    clearTimeout(detectingSelectAll);
                    var i =3D 0, poll =3D function(){
                        if (display.prevInput =3D=3D " " && =
display.input.selectionStart =3D=3D 0)
                            operation(cm, commands.selectAll)(cm);
                        else if (i++ < 10) detectingSelectAll =3D =
setTimeout(poll, 500);
                        else resetInput(cm);
                    };
                    detectingSelectAll =3D setTimeout(poll, 200);
                }
            }

            if (ie && !ie_lt9) prepareSelectAllHack();
            if (captureMiddleClick) {
                e_stop(e);
                var mouseup =3D function() {
                    off(window, "mouseup", mouseup);
                    setTimeout(rehide, 20);
                };
                on(window, "mouseup", mouseup);
            } else {
                setTimeout(rehide, 50);
            }
        }

        // UPDATING

        var changeEnd =3D CodeMirror.changeEnd =3D function(change) {
            if (!change.text) return change.to;
            return Pos(change.from.line + change.text.length - 1,
                    lst(change.text).length + (change.text.length =3D=3D =
1 ? change.from.ch : 0));
        };

        // Make sure a position will be valid after the given change.
        function clipPostChange(doc, change, pos) {
            if (!posLess(change.from, pos)) return clipPos(doc, pos);
            var diff =3D (change.text.length - 1) - (change.to.line - =
change.from.line);
            if (pos.line > change.to.line + diff) {
                var preLine =3D pos.line - diff, lastLine =3D doc.first =
+ doc.size - 1;
                if (preLine > lastLine) return Pos(lastLine, =
getLine(doc, lastLine).text.length);
                return clipToLen(pos, getLine(doc, =
preLine).text.length);
            }
            if (pos.line =3D=3D change.to.line + diff)
                return clipToLen(pos, lst(change.text).length + =
(change.text.length =3D=3D 1 ? change.from.ch : 0) +
                    getLine(doc, change.to.line).text.length - =
change.to.ch);
            var inside =3D pos.line - change.from.line;
            return clipToLen(pos, change.text[inside].length + (inside ? =
0 : change.from.ch));
        }

        // Hint can be null|"end"|"start"|"around"|{anchor,head}
        function computeSelAfterChange(doc, change, hint) {
            if (hint && typeof hint =3D=3D "object") // Assumed to be =
{anchor, head} object
                return {anchor: clipPostChange(doc, change, =
hint.anchor),
                    head: clipPostChange(doc, change, hint.head)};

            if (hint =3D=3D "start") return {anchor: change.from, head: =
change.from};

            var end =3D changeEnd(change);
            if (hint =3D=3D "around") return {anchor: change.from, head: =
end};
            if (hint =3D=3D "end") return {anchor: end, head: end};

            // hint is null, leave the selection alone as much as =
possible
            var adjustPos =3D function(pos) {
                if (posLess(pos, change.from)) return pos;
                if (!posLess(change.to, pos)) return end;

                var line =3D pos.line + change.text.length - =
(change.to.line - change.from.line) - 1, ch =3D pos.ch;
                if (pos.line =3D=3D change.to.line) ch +=3D end.ch - =
change.to.ch;
                return Pos(line, ch);
            };
            return {anchor: adjustPos(doc.sel.anchor), head: =
adjustPos(doc.sel.head)};
        }

        function filterChange(doc, change, update) {
            var obj =3D {
                canceled: false,
                from: change.from,
                to: change.to,
                text: change.text,
                origin: change.origin,
                cancel: function() { this.canceled =3D true; }
            };
            if (update) obj.update =3D function(from, to, text, origin) =
{
                if (from) this.from =3D clipPos(doc, from);
                if (to) this.to =3D clipPos(doc, to);
                if (text) this.text =3D text;
                if (origin !=3D=3D undefined) this.origin =3D origin;
            };
            signal(doc, "beforeChange", doc, obj);
            if (doc.cm) signal(doc.cm, "beforeChange", doc.cm, obj);

            if (obj.canceled) return null;
            return {from: obj.from, to: obj.to, text: obj.text, origin: =
obj.origin};
        }

        // Replace the range from from to to by the strings in =
replacement.
        // change is a {from, to, text [, origin]} object
        function makeChange(doc, change, selUpdate, ignoreReadOnly) {
            if (doc.cm) {
                if (!doc.cm.curOp) return operation(doc.cm, =
makeChange)(doc, change, selUpdate, ignoreReadOnly);
                if (doc.cm.state.suppressEdits) return;
            }

            if (hasHandler(doc, "beforeChange") || doc.cm && =
hasHandler(doc.cm, "beforeChange")) {
                change =3D filterChange(doc, change, true);
                if (!change) return;
            }

            // Possibly split or suppress the update based on the =
presence
            // of read-only spans in its range.
            var split =3D sawReadOnlySpans && !ignoreReadOnly && =
removeReadOnlyRanges(doc, change.from, change.to);
            if (split) {
                for (var i =3D split.length - 1; i >=3D 1; --i)
                    makeChangeNoReadonly(doc, {from: split[i].from, to: =
split[i].to, text: [""]});
                if (split.length)
                    makeChangeNoReadonly(doc, {from: split[0].from, to: =
split[0].to, text: change.text}, selUpdate);
            } else {
                makeChangeNoReadonly(doc, change, selUpdate);
            }
        }

        function makeChangeNoReadonly(doc, change, selUpdate) {
            var selAfter =3D computeSelAfterChange(doc, change, =
selUpdate);
            addToHistory(doc, change, selAfter, doc.cm ? doc.cm.curOp.id =
: NaN);

            makeChangeSingleDoc(doc, change, selAfter, =
stretchSpansOverChange(doc, change));
            var rebased =3D [];

            linkedDocs(doc, function(doc, sharedHist) {
                if (!sharedHist && indexOf(rebased, doc.history) =3D=3D =
-1) {
                    rebaseHist(doc.history, change);
                    rebased.push(doc.history);
                }
                makeChangeSingleDoc(doc, change, null, =
stretchSpansOverChange(doc, change));
            });
        }

        function makeChangeFromHistory(doc, type) {
            if (doc.cm && doc.cm.state.suppressEdits) return;

            var hist =3D doc.history;
            var event =3D (type =3D=3D "undo" ? hist.done : =
hist.undone).pop();
            if (!event) return;

            var anti =3D {changes: [], anchorBefore: event.anchorAfter, =
headBefore: event.headAfter,
                anchorAfter: event.anchorBefore, headAfter: =
event.headBefore,
                generation: hist.generation};
            (type =3D=3D "undo" ? hist.undone : hist.done).push(anti);
            hist.generation =3D event.generation || =
++hist.maxGeneration;

            var filter =3D hasHandler(doc, "beforeChange") || doc.cm && =
hasHandler(doc.cm, "beforeChange");

            for (var i =3D event.changes.length - 1; i >=3D 0; --i) {
                var change =3D event.changes[i];
                change.origin =3D type;
                if (filter && !filterChange(doc, change, false)) {
                    (type =3D=3D "undo" ? hist.done : =
hist.undone).length =3D 0;
                    return;
                }

                anti.changes.push(historyChangeFromChange(doc, change));

                var after =3D i ? computeSelAfterChange(doc, change, =
null)
                    : {anchor: event.anchorBefore, head: =
event.headBefore};
                makeChangeSingleDoc(doc, change, after, =
mergeOldSpans(doc, change));
                var rebased =3D [];

                linkedDocs(doc, function(doc, sharedHist) {
                    if (!sharedHist && indexOf(rebased, doc.history) =
=3D=3D -1) {
                        rebaseHist(doc.history, change);
                        rebased.push(doc.history);
                    }
                    makeChangeSingleDoc(doc, change, null, =
mergeOldSpans(doc, change));
                });
            }
        }

        function shiftDoc(doc, distance) {
            function shiftPos(pos) {return Pos(pos.line + distance, =
pos.ch);}
            doc.first +=3D distance;
            if (doc.cm) regChange(doc.cm, doc.first, doc.first, =
distance);
            doc.sel.head =3D shiftPos(doc.sel.head); doc.sel.anchor =3D =
shiftPos(doc.sel.anchor);
            doc.sel.from =3D shiftPos(doc.sel.from); doc.sel.to =3D =
shiftPos(doc.sel.to);
        }

        function makeChangeSingleDoc(doc, change, selAfter, spans) {
            if (doc.cm && !doc.cm.curOp)
                return operation(doc.cm, makeChangeSingleDoc)(doc, =
change, selAfter, spans);

            if (change.to.line < doc.first) {
                shiftDoc(doc, change.text.length - 1 - (change.to.line - =
change.from.line));
                return;
            }
            if (change.from.line > doc.lastLine()) return;

            // Clip the change to the size of this doc
            if (change.from.line < doc.first) {
                var shift =3D change.text.length - 1 - (doc.first - =
change.from.line);
                shiftDoc(doc, shift);
                change =3D {from: Pos(doc.first, 0), to: =
Pos(change.to.line + shift, change.to.ch),
                    text: [lst(change.text)], origin: change.origin};
            }
            var last =3D doc.lastLine();
            if (change.to.line > last) {
                change =3D {from: change.from, to: Pos(last, =
getLine(doc, last).text.length),
                    text: [change.text[0]], origin: change.origin};
            }

            change.removed =3D getBetween(doc, change.from, change.to);

            if (!selAfter) selAfter =3D computeSelAfterChange(doc, =
change, null);
            if (doc.cm) makeChangeSingleDocInEditor(doc.cm, change, =
spans, selAfter);
            else updateDoc(doc, change, spans, selAfter);
        }

        function makeChangeSingleDocInEditor(cm, change, spans, =
selAfter) {
            var doc =3D cm.doc, display =3D cm.display, from =3D =
change.from, to =3D change.to;

            var recomputeMaxLength =3D false, checkWidthStart =3D =
from.line;
            if (!cm.options.lineWrapping) {
                checkWidthStart =3D lineNo(visualLine(doc, getLine(doc, =
from.line)));
                doc.iter(checkWidthStart, to.line + 1, function(line) {
                    if (line =3D=3D display.maxLine) {
                        recomputeMaxLength =3D true;
                        return true;
                    }
                });
            }

            if (!posLess(doc.sel.head, change.from) && =
!posLess(change.to, doc.sel.head))
                cm.curOp.cursorActivity =3D true;

            updateDoc(doc, change, spans, selAfter, estimateHeight(cm));

            if (!cm.options.lineWrapping) {
                doc.iter(checkWidthStart, from.line + =
change.text.length, function(line) {
                    var len =3D lineLength(doc, line);
                    if (len > display.maxLineLength) {
                        display.maxLine =3D line;
                        display.maxLineLength =3D len;
                        display.maxLineChanged =3D true;
                        recomputeMaxLength =3D false;
                    }
                });
                if (recomputeMaxLength) cm.curOp.updateMaxLine =3D true;
            }

            // Adjust frontier, schedule worker
            doc.frontier =3D Math.min(doc.frontier, from.line);
            startWorker(cm, 400);

            var lendiff =3D change.text.length - (to.line - from.line) - =
1;
            // Remember that these lines changed, for updating the =
display
            regChange(cm, from.line, to.line + 1, lendiff);

            if (hasHandler(cm, "change")) {
                var changeObj =3D {from: from, to: to,
                    text: change.text,
                    removed: change.removed,
                    origin: change.origin};
                if (cm.curOp.textChanged) {
                    for (var cur =3D cm.curOp.textChanged; cur.next; cur =
=3D cur.next) {}
                    cur.next =3D changeObj;
                } else cm.curOp.textChanged =3D changeObj;
            }
        }

        function replaceRange(doc, code, from, to, origin) {
            if (!to) to =3D from;
            if (posLess(to, from)) { var tmp =3D to; to =3D from; from =
=3D tmp; }
            if (typeof code =3D=3D "string") code =3D splitLines(code);
            makeChange(doc, {from: from, to: to, text: code, origin: =
origin}, null);
        }

        // POSITION OBJECT

        function Pos(line, ch) {
            if (!(this instanceof Pos)) return new Pos(line, ch);
            this.line =3D line; this.ch =3D ch;
        }
        CodeMirror.Pos =3D Pos;

        function posEq(a, b) {return a.line =3D=3D b.line && a.ch =3D=3D =
b.ch;}
        function posLess(a, b) {return a.line < b.line || (a.line =3D=3D =
b.line && a.ch < b.ch);}
        function copyPos(x) {return Pos(x.line, x.ch);}

        // SELECTION

        function clipLine(doc, n) {return Math.max(doc.first, =
Math.min(n, doc.first + doc.size - 1));}
        function clipPos(doc, pos) {
            if (pos.line < doc.first) return Pos(doc.first, 0);
            var last =3D doc.first + doc.size - 1;
            if (pos.line > last) return Pos(last, getLine(doc, =
last).text.length);
            return clipToLen(pos, getLine(doc, pos.line).text.length);
        }
        function clipToLen(pos, linelen) {
            var ch =3D pos.ch;
            if (ch =3D=3D null || ch > linelen) return Pos(pos.line, =
linelen);
            else if (ch < 0) return Pos(pos.line, 0);
            else return pos;
        }
        function isLine(doc, l) {return l >=3D doc.first && l < =
doc.first + doc.size;}

        // If shift is held, this will move the selection anchor. =
Otherwise,
        // it'll set the whole selection.
        function extendSelection(doc, pos, other, bias) {
            if (doc.sel.shift || doc.sel.extend) {
                var anchor =3D doc.sel.anchor;
                if (other) {
                    var posBefore =3D posLess(pos, anchor);
                    if (posBefore !=3D posLess(other, anchor)) {
                        anchor =3D pos;
                        pos =3D other;
                    } else if (posBefore !=3D posLess(pos, other)) {
                        pos =3D other;
                    }
                }
                setSelection(doc, anchor, pos, bias);
            } else {
                setSelection(doc, pos, other || pos, bias);
            }
            if (doc.cm) doc.cm.curOp.userSelChange =3D true;
        }

        function filterSelectionChange(doc, anchor, head) {
            var obj =3D {anchor: anchor, head: head};
            signal(doc, "beforeSelectionChange", doc, obj);
            if (doc.cm) signal(doc.cm, "beforeSelectionChange", doc.cm, =
obj);
            obj.anchor =3D clipPos(doc, obj.anchor); obj.head =3D =
clipPos(doc, obj.head);
            return obj;
        }

        // Update the selection. Last two args are only used by
        // updateDoc, since they have to be expressed in the line
        // numbers before the update.
        function setSelection(doc, anchor, head, bias, checkAtomic) {
            if (!checkAtomic && hasHandler(doc, "beforeSelectionChange") =
|| doc.cm && hasHandler(doc.cm, "beforeSelectionChange")) {
                var filtered =3D filterSelectionChange(doc, anchor, =
head);
                head =3D filtered.head;
                anchor =3D filtered.anchor;
            }

            var sel =3D doc.sel;
            sel.goalColumn =3D null;
            // Skip over atomic spans.
            if (checkAtomic || !posEq(anchor, sel.anchor))
                anchor =3D skipAtomic(doc, anchor, bias, checkAtomic =
!=3D "push");
            if (checkAtomic || !posEq(head, sel.head))
                head =3D skipAtomic(doc, head, bias, checkAtomic !=3D =
"push");

            if (posEq(sel.anchor, anchor) && posEq(sel.head, head)) =
return;

            sel.anchor =3D anchor; sel.head =3D head;
            var inv =3D posLess(head, anchor);
            sel.from =3D inv ? head : anchor;
            sel.to =3D inv ? anchor : head;

            if (doc.cm)
                doc.cm.curOp.updateInput =3D =
doc.cm.curOp.selectionChanged =3D
                    doc.cm.curOp.cursorActivity =3D true;

            signalLater(doc, "cursorActivity", doc);
        }

        function reCheckSelection(cm) {
            setSelection(cm.doc, cm.doc.sel.from, cm.doc.sel.to, null, =
"push");
        }

        function skipAtomic(doc, pos, bias, mayClear) {
            var flipped =3D false, curPos =3D pos;
            var dir =3D bias || 1;
            doc.cantEdit =3D false;
            search: for (;;) {
                var line =3D getLine(doc, curPos.line);
                if (line.markedSpans) {
                    for (var i =3D 0; i < line.markedSpans.length; ++i) =
{
                        var sp =3D line.markedSpans[i], m =3D sp.marker;
                        if ((sp.from =3D=3D null || (m.inclusiveLeft ? =
sp.from <=3D curPos.ch : sp.from < curPos.ch)) &&
                            (sp.to =3D=3D null || (m.inclusiveRight ? =
sp.to >=3D curPos.ch : sp.to > curPos.ch))) {
                            if (mayClear) {
                                signal(m, "beforeCursorEnter");
                                if (m.explicitlyCleared) {
                                    if (!line.markedSpans) break;
                                    else {--i; continue;}
                                }
                            }
                            if (!m.atomic) continue;
                            var newPos =3D m.find()[dir < 0 ? "from" : =
"to"];
                            if (posEq(newPos, curPos)) {
                                newPos.ch +=3D dir;
                                if (newPos.ch < 0) {
                                    if (newPos.line > doc.first) newPos =
=3D clipPos(doc, Pos(newPos.line - 1));
                                    else newPos =3D null;
                                } else if (newPos.ch > line.text.length) =
{
                                    if (newPos.line < doc.first + =
doc.size - 1) newPos =3D Pos(newPos.line + 1, 0);
                                    else newPos =3D null;
                                }
                                if (!newPos) {
                                    if (flipped) {
                                        // Driven in a corner -- no =
valid cursor position found at all
                                        // -- try again *with* clearing, =
if we didn't already
                                        if (!mayClear) return =
skipAtomic(doc, pos, bias, true);
                                        // Otherwise, turn off editing =
until further notice, and return the start of the doc
                                        doc.cantEdit =3D true;
                                        return Pos(doc.first, 0);
                                    }
                                    flipped =3D true; newPos =3D pos; =
dir =3D -dir;
                                }
                            }
                            curPos =3D newPos;
                            continue search;
                        }
                    }
                }
                return curPos;
            }
        }

        // SCROLLING

        function scrollCursorIntoView(cm) {
            var coords =3D scrollPosIntoView(cm, cm.doc.sel.head, =
cm.options.cursorScrollMargin);
            if (!cm.state.focused) return;
            var display =3D cm.display, box =3D getRect(display.sizer), =
doScroll =3D null;
            if (coords.top + box.top < 0) doScroll =3D true;
            else if (coords.bottom + box.top > (window.innerHeight || =
document.documentElement.clientHeight)) doScroll =3D false;
            if (doScroll !=3D null && !phantom) {
                var hidden =3D display.cursor.style.display =3D=3D =
"none";
                if (hidden) {
                    display.cursor.style.display =3D "";
                    display.cursor.style.left =3D coords.left + "px";
                    display.cursor.style.top =3D (coords.top - =
display.viewOffset) + "px";
                }
                display.cursor.scrollIntoView(doScroll);
                if (hidden) display.cursor.style.display =3D "none";
            }
        }

        function scrollPosIntoView(cm, pos, margin) {
            if (margin =3D=3D null) margin =3D 0;
            for (;;) {
                var changed =3D false, coords =3D cursorCoords(cm, pos);
                var scrollPos =3D calculateScrollPos(cm, coords.left, =
coords.top - margin, coords.left, coords.bottom + margin);
                var startTop =3D cm.doc.scrollTop, startLeft =3D =
cm.doc.scrollLeft;
                if (scrollPos.scrollTop !=3D null) {
                    setScrollTop(cm, scrollPos.scrollTop);
                    if (Math.abs(cm.doc.scrollTop - startTop) > 1) =
changed =3D true;
                }
                if (scrollPos.scrollLeft !=3D null) {
                    setScrollLeft(cm, scrollPos.scrollLeft);
                    if (Math.abs(cm.doc.scrollLeft - startLeft) > 1) =
changed =3D true;
                }
                if (!changed) return coords;
            }
        }

        function scrollIntoView(cm, x1, y1, x2, y2) {
            var scrollPos =3D calculateScrollPos(cm, x1, y1, x2, y2);
            if (scrollPos.scrollTop !=3D null) setScrollTop(cm, =
scrollPos.scrollTop);
            if (scrollPos.scrollLeft !=3D null) setScrollLeft(cm, =
scrollPos.scrollLeft);
        }

        function calculateScrollPos(cm, x1, y1, x2, y2) {
            var display =3D cm.display, snapMargin =3D =
textHeight(cm.display);
            if (y1 < 0) y1 =3D 0;
            var screen =3D display.scroller.clientHeight - =
scrollerCutOff, screentop =3D display.scroller.scrollTop, result =3D {};
            var docBottom =3D cm.doc.height + paddingVert(display);
            var atTop =3D y1 < snapMargin, atBottom =3D y2 > docBottom - =
snapMargin;
            if (y1 < screentop) {
                result.scrollTop =3D atTop ? 0 : y1;
            } else if (y2 > screentop + screen) {
                var newTop =3D Math.min(y1, (atBottom ? docBottom : y2) =
- screen);
                if (newTop !=3D screentop) result.scrollTop =3D newTop;
            }

            var screenw =3D display.scroller.clientWidth - =
scrollerCutOff, screenleft =3D display.scroller.scrollLeft;
            x1 +=3D display.gutters.offsetWidth; x2 +=3D =
display.gutters.offsetWidth;
            var gutterw =3D display.gutters.offsetWidth;
            var atLeft =3D x1 < gutterw + 10;
            if (x1 < screenleft + gutterw || atLeft) {
                if (atLeft) x1 =3D 0;
                result.scrollLeft =3D Math.max(0, x1 - 10 - gutterw);
            } else if (x2 > screenw + screenleft - 3) {
                result.scrollLeft =3D x2 + 10 - screenw;
            }
            return result;
        }

        function updateScrollPos(cm, left, top) {
            cm.curOp.updateScrollPos =3D {scrollLeft: left =3D=3D null ? =
cm.doc.scrollLeft : left,
                scrollTop: top =3D=3D null ? cm.doc.scrollTop : top};
        }

        function addToScrollPos(cm, left, top) {
            var pos =3D cm.curOp.updateScrollPos || =
(cm.curOp.updateScrollPos =3D {scrollLeft: cm.doc.scrollLeft, scrollTop: =
cm.doc.scrollTop});
            var scroll =3D cm.display.scroller;
            pos.scrollTop =3D Math.max(0, Math.min(scroll.scrollHeight - =
scroll.clientHeight, pos.scrollTop + top));
            pos.scrollLeft =3D Math.max(0, Math.min(scroll.scrollWidth - =
scroll.clientWidth, pos.scrollLeft + left));
        }

        // API UTILITIES

        function indentLine(cm, n, how, aggressive) {
            var doc =3D cm.doc;
            if (how =3D=3D null) how =3D "add";
            if (how =3D=3D "smart") {
                if (!cm.doc.mode.indent) how =3D "prev";
                else var state =3D getStateBefore(cm, n);
            }

            var tabSize =3D cm.options.tabSize;
            var line =3D getLine(doc, n), curSpace =3D =
countColumn(line.text, null, tabSize);
            var curSpaceString =3D line.text.match(/^\s*/)[0], =
indentation;
            if (how =3D=3D "smart") {
                indentation =3D cm.doc.mode.indent(state, =
line.text.slice(curSpaceString.length), line.text);
                if (indentation =3D=3D Pass) {
                    if (!aggressive) return;
                    how =3D "prev";
                }
            }
            if (how =3D=3D "prev") {
                if (n > doc.first) indentation =3D =
countColumn(getLine(doc, n-1).text, null, tabSize);
                else indentation =3D 0;
            } else if (how =3D=3D "add") {
                indentation =3D curSpace + cm.options.indentUnit;
            } else if (how =3D=3D "subtract") {
                indentation =3D curSpace - cm.options.indentUnit;
            } else if (typeof how =3D=3D "number") {
                indentation =3D curSpace + how;
            }
            indentation =3D Math.max(0, indentation);

            var indentString =3D "", pos =3D 0;
            if (cm.options.indentWithTabs)
                for (var i =3D Math.floor(indentation / tabSize); i; =
--i) {pos +=3D tabSize; indentString +=3D "\t";}
            if (pos < indentation) indentString +=3D =
spaceStr(indentation - pos);

            if (indentString !=3D curSpaceString)
                replaceRange(cm.doc, indentString, Pos(n, 0), Pos(n, =
curSpaceString.length), "+input");
            line.stateAfter =3D null;
        }

        function changeLine(cm, handle, op) {
            var no =3D handle, line =3D handle, doc =3D cm.doc;
            if (typeof handle =3D=3D "number") line =3D getLine(doc, =
clipLine(doc, handle));
            else no =3D lineNo(handle);
            if (no =3D=3D null) return null;
            if (op(line, no)) regChange(cm, no, no + 1);
            else return null;
            return line;
        }

        function findPosH(doc, pos, dir, unit, visually) {
            var line =3D pos.line, ch =3D pos.ch, origDir =3D dir;
            var lineObj =3D getLine(doc, line);
            var possible =3D true;
            function findNextLine() {
                var l =3D line + dir;
                if (l < doc.first || l >=3D doc.first + doc.size) return =
(possible =3D false);
                line =3D l;
                return lineObj =3D getLine(doc, l);
            }
            function moveOnce(boundToLine) {
                var next =3D (visually ? moveVisually : =
moveLogically)(lineObj, ch, dir, true);
                if (next =3D=3D null) {
                    if (!boundToLine && findNextLine()) {
                        if (visually) ch =3D (dir < 0 ? lineRight : =
lineLeft)(lineObj);
                        else ch =3D dir < 0 ? lineObj.text.length : 0;
                    } else return (possible =3D false);
                } else ch =3D next;
                return true;
            }

            if (unit =3D=3D "char") moveOnce();
            else if (unit =3D=3D "column") moveOnce(true);
            else if (unit =3D=3D "word" || unit =3D=3D "group") {
                var sawType =3D null, group =3D unit =3D=3D "group";
                for (var first =3D true;; first =3D false) {
                    if (dir < 0 && !moveOnce(!first)) break;
                    var cur =3D lineObj.text.charAt(ch) || "\n";
                    var type =3D isWordChar(cur) ? "w"
                        : !group ? null
                        : /\s/.test(cur) ? null
                        : "p";
                    if (sawType && sawType !=3D type) {
                        if (dir < 0) {dir =3D 1; moveOnce();}
                        break;
                    }
                    if (type) sawType =3D type;
                    if (dir > 0 && !moveOnce(!first)) break;
                }
            }
            var result =3D skipAtomic(doc, Pos(line, ch), origDir, =
true);
            if (!possible) result.hitSide =3D true;
            return result;
        }

        function findPosV(cm, pos, dir, unit) {
            var doc =3D cm.doc, x =3D pos.left, y;
            if (unit =3D=3D "page") {
                var pageSize =3D =
Math.min(cm.display.wrapper.clientHeight, window.innerHeight || =
document.documentElement.clientHeight);
                y =3D pos.top + dir * (pageSize - (dir < 0 ? 1.5 : .5) * =
textHeight(cm.display));
            } else if (unit =3D=3D "line") {
                y =3D dir > 0 ? pos.bottom + 3 : pos.top - 3;
            }
            for (;;) {
                var target =3D coordsChar(cm, x, y);
                if (!target.outside) break;
                if (dir < 0 ? y <=3D 0 : y >=3D doc.height) { =
target.hitSide =3D true; break; }
                y +=3D dir * 5;
            }
            return target;
        }

        function findWordAt(line, pos) {
            var start =3D pos.ch, end =3D pos.ch;
            if (line) {
                if ((pos.xRel < 0 || end =3D=3D line.length) && start) =
--start; else ++end;
                var startChar =3D line.charAt(start);
                var check =3D isWordChar(startChar) ? isWordChar
                    : /\s/.test(startChar) ? function(ch) {return =
/\s/.test(ch);}
                    : function(ch) {return !/\s/.test(ch) && =
!isWordChar(ch);};
                while (start > 0 && check(line.charAt(start - 1))) =
--start;
                while (end < line.length && check(line.charAt(end))) =
++end;
            }
            return {from: Pos(pos.line, start), to: Pos(pos.line, end)};
        }

        function selectLine(cm, line) {
            extendSelection(cm.doc, Pos(line, 0), clipPos(cm.doc, =
Pos(line + 1, 0)));
        }

        // PROTOTYPE

        // The publicly visible API. Note that operation(null, f) means
        // 'wrap f in an operation, performed on its `this` parameter'

        CodeMirror.prototype =3D {
            constructor: CodeMirror,
            focus: function(){window.focus(); focusInput(this); =
onFocus(this); fastPoll(this);},

            setOption: function(option, value) {
                var options =3D this.options, old =3D options[option];
                if (options[option] =3D=3D value && option !=3D "mode") =
return;
                options[option] =3D value;
                if (optionHandlers.hasOwnProperty(option))
                    operation(this, optionHandlers[option])(this, value, =
old);
            },

            getOption: function(option) {return this.options[option];},
            getDoc: function() {return this.doc;},

            addKeyMap: function(map, bottom) {
                this.state.keyMaps[bottom ? "push" : "unshift"](map);
            },
            removeKeyMap: function(map) {
                var maps =3D this.state.keyMaps;
                for (var i =3D 0; i < maps.length; ++i)
                    if (maps[i] =3D=3D map || (typeof maps[i] !=3D =
"string" && maps[i].name =3D=3D map)) {
                        maps.splice(i, 1);
                        return true;
                    }
            },

            addOverlay: operation(null, function(spec, options) {
                var mode =3D spec.token ? spec : =
CodeMirror.getMode(this.options, spec);
                if (mode.startState) throw new Error("Overlays may not =
be stateful.");
                this.state.overlays.push({mode: mode, modeSpec: spec, =
opaque: options && options.opaque});
                this.state.modeGen++;
                regChange(this);
            }),
            removeOverlay: operation(null, function(spec) {
                var overlays =3D this.state.overlays;
                for (var i =3D 0; i < overlays.length; ++i) {
                    var cur =3D overlays[i].modeSpec;
                    if (cur =3D=3D spec || typeof spec =3D=3D "string" =
&& cur.name =3D=3D spec) {
                        overlays.splice(i, 1);
                        this.state.modeGen++;
                        regChange(this);
                        return;
                    }
                }
            }),

            indentLine: operation(null, function(n, dir, aggressive) {
                if (typeof dir !=3D "string" && typeof dir !=3D =
"number") {
                    if (dir =3D=3D null) dir =3D =
this.options.smartIndent ? "smart" : "prev";
                    else dir =3D dir ? "add" : "subtract";
                }
                if (isLine(this.doc, n)) indentLine(this, n, dir, =
aggressive);
            }),
            indentSelection: operation(null, function(how) {
                var sel =3D this.doc.sel;
                if (posEq(sel.from, sel.to)) return indentLine(this, =
sel.from.line, how);
                var e =3D sel.to.line - (sel.to.ch ? 0 : 1);
                for (var i =3D sel.from.line; i <=3D e; ++i) =
indentLine(this, i, how);
            }),

            // Fetch the parser token for a given character. Useful for =
hacks
            // that want to inspect the mode state (say, for =
completion).
            getTokenAt: function(pos, precise) {
                var doc =3D this.doc;
                pos =3D clipPos(doc, pos);
                var state =3D getStateBefore(this, pos.line, precise), =
mode =3D this.doc.mode;
                var line =3D getLine(doc, pos.line);
                var stream =3D new StringStream(line.text, =
this.options.tabSize);
                while (stream.pos < pos.ch && !stream.eol()) {
                    stream.start =3D stream.pos;
                    var style =3D mode.token(stream, state);
                }
                return {start: stream.start,
                    end: stream.pos,
                    string: stream.current(),
                    className: style || null, // Deprecated, use 'type' =
instead
                    type: style || null,
                    state: state};
            },

            getTokenTypeAt: function(pos) {
                pos =3D clipPos(this.doc, pos);
                var styles =3D getLineStyles(this, getLine(this.doc, =
pos.line));
                var before =3D 0, after =3D (styles.length - 1) / 2, ch =
=3D pos.ch;
                if (ch =3D=3D 0) return styles[2];
                for (;;) {
                    var mid =3D (before + after) >> 1;
                    if ((mid ? styles[mid * 2 - 1] : 0) >=3D ch) after =
=3D mid;
                    else if (styles[mid * 2 + 1] < ch) before =3D mid + =
1;
                    else return styles[mid * 2 + 2];
                }
            },

            getModeAt: function(pos) {
                var mode =3D this.doc.mode;
                if (!mode.innerMode) return mode;
                return CodeMirror.innerMode(mode, =
this.getTokenAt(pos).state).mode;
            },

            getHelper: function(pos, type) {
                if (!helpers.hasOwnProperty(type)) return;
                var help =3D helpers[type], mode =3D =
this.getModeAt(pos);
                return mode[type] && help[mode[type]] ||
                    mode.helperType && help[mode.helperType] ||
                    help[mode.name];
            },

            getStateAfter: function(line, precise) {
                var doc =3D this.doc;
                line =3D clipLine(doc, line =3D=3D null ? doc.first + =
doc.size - 1: line);
                return getStateBefore(this, line + 1, precise);
            },

            cursorCoords: function(start, mode) {
                var pos, sel =3D this.doc.sel;
                if (start =3D=3D null) pos =3D sel.head;
                else if (typeof start =3D=3D "object") pos =3D =
clipPos(this.doc, start);
                else pos =3D start ? sel.from : sel.to;
                return cursorCoords(this, pos, mode || "page");
            },

            charCoords: function(pos, mode) {
                return charCoords(this, clipPos(this.doc, pos), mode || =
"page");
            },

            coordsChar: function(coords, mode) {
                coords =3D fromCoordSystem(this, coords, mode || =
"page");
                return coordsChar(this, coords.left, coords.top);
            },

            lineAtHeight: function(height, mode) {
                height =3D fromCoordSystem(this, {top: height, left: 0}, =
mode || "page").top;
                return lineAtHeight(this.doc, height + =
this.display.viewOffset);
            },
            heightAtLine: function(line, mode) {
                var end =3D false, last =3D this.doc.first + =
this.doc.size - 1;
                if (line < this.doc.first) line =3D this.doc.first;
                else if (line > last) { line =3D last; end =3D true; }
                var lineObj =3D getLine(this.doc, line);
                return intoCoordSystem(this, getLine(this.doc, line), =
{top: 0, left: 0}, mode || "page").top +
                    (end ? lineObj.height : 0);
            },

            defaultTextHeight: function() { return =
textHeight(this.display); },
            defaultCharWidth: function() { return =
charWidth(this.display); },

            setGutterMarker: operation(null, function(line, gutterID, =
value) {
                return changeLine(this, line, function(line) {
                    var markers =3D line.gutterMarkers || =
(line.gutterMarkers =3D {});
                    markers[gutterID] =3D value;
                    if (!value && isEmpty(markers)) line.gutterMarkers =
=3D null;
                    return true;
                });
            }),

            clearGutter: operation(null, function(gutterID) {
                var cm =3D this, doc =3D cm.doc, i =3D doc.first;
                doc.iter(function(line) {
                    if (line.gutterMarkers && =
line.gutterMarkers[gutterID]) {
                        line.gutterMarkers[gutterID] =3D null;
                        regChange(cm, i, i + 1);
                        if (isEmpty(line.gutterMarkers)) =
line.gutterMarkers =3D null;
                    }
                    ++i;
                });
            }),

            addLineClass: operation(null, function(handle, where, cls) {
                return changeLine(this, handle, function(line) {
                    var prop =3D where =3D=3D "text" ? "textClass" : =
where =3D=3D "background" ? "bgClass" : "wrapClass";
                    if (!line[prop]) line[prop] =3D cls;
                    else if (new RegExp("(?:^|\\s)" + cls + =
"(?:$|\\s)").test(line[prop])) return false;
                    else line[prop] +=3D " " + cls;
                    return true;
                });
            }),

            removeLineClass: operation(null, function(handle, where, =
cls) {
                return changeLine(this, handle, function(line) {
                    var prop =3D where =3D=3D "text" ? "textClass" : =
where =3D=3D "background" ? "bgClass" : "wrapClass";
                    var cur =3D line[prop];
                    if (!cur) return false;
                    else if (cls =3D=3D null) line[prop] =3D null;
                    else {
                        var found =3D cur.match(new RegExp("(?:^|\\s+)" =
+ cls + "(?:$|\\s+)"));
                        if (!found) return false;
                        var end =3D found.index + found[0].length;
                        line[prop] =3D cur.slice(0, found.index) + =
(!found.index || end =3D=3D cur.length ? "" : " ") + cur.slice(end) || =
null;
                    }
                    return true;
                });
            }),

            addLineWidget: operation(null, function(handle, node, =
options) {
                return addLineWidget(this, handle, node, options);
            }),

            removeLineWidget: function(widget) { widget.clear(); },

            lineInfo: function(line) {
                if (typeof line =3D=3D "number") {
                    if (!isLine(this.doc, line)) return null;
                    var n =3D line;
                    line =3D getLine(this.doc, line);
                    if (!line) return null;
                } else {
                    var n =3D lineNo(line);
                    if (n =3D=3D null) return null;
                }
                return {line: n, handle: line, text: line.text, =
gutterMarkers: line.gutterMarkers,
                    textClass: line.textClass, bgClass: line.bgClass, =
wrapClass: line.wrapClass,
                    widgets: line.widgets};
            },

            getViewport: function() { return {from: =
this.display.showingFrom, to: this.display.showingTo};},

            addWidget: function(pos, node, scroll, vert, horiz) {
                var display =3D this.display;
                pos =3D cursorCoords(this, clipPos(this.doc, pos));
                var top =3D pos.bottom, left =3D pos.left;
                node.style.position =3D "absolute";
                display.sizer.appendChild(node);
                if (vert =3D=3D "over") {
                    top =3D pos.top;
                } else if (vert =3D=3D "above" || vert =3D=3D "near") {
                    var vspace =3D =
Math.max(display.wrapper.clientHeight, this.doc.height),
                        hspace =3D Math.max(display.sizer.clientWidth, =
display.lineSpace.clientWidth);
                    // Default to positioning above (if specified and =
possible); otherwise default to positioning below
                    if ((vert =3D=3D 'above' || pos.bottom + =
node.offsetHeight > vspace) && pos.top > node.offsetHeight)
                        top =3D pos.top - node.offsetHeight;
                    else if (pos.bottom + node.offsetHeight <=3D vspace)
                        top =3D pos.bottom;
                    if (left + node.offsetWidth > hspace)
                        left =3D hspace - node.offsetWidth;
                }
                node.style.top =3D top + "px";
                node.style.left =3D node.style.right =3D "";
                if (horiz =3D=3D "right") {
                    left =3D display.sizer.clientWidth - =
node.offsetWidth;
                    node.style.right =3D "0px";
                } else {
                    if (horiz =3D=3D "left") left =3D 0;
                    else if (horiz =3D=3D "middle") left =3D =
(display.sizer.clientWidth - node.offsetWidth) / 2;
                    node.style.left =3D left + "px";
                }
                if (scroll)
                    scrollIntoView(this, left, top, left + =
node.offsetWidth, top + node.offsetHeight);
            },

            triggerOnKeyDown: operation(null, onKeyDown),

            execCommand: function(cmd) {return commands[cmd](this);},

            findPosH: function(from, amount, unit, visually) {
                var dir =3D 1;
                if (amount < 0) { dir =3D -1; amount =3D -amount; }
                for (var i =3D 0, cur =3D clipPos(this.doc, from); i < =
amount; ++i) {
                    cur =3D findPosH(this.doc, cur, dir, unit, =
visually);
                    if (cur.hitSide) break;
                }
                return cur;
            },

            moveH: operation(null, function(dir, unit) {
                var sel =3D this.doc.sel, pos;
                if (sel.shift || sel.extend || posEq(sel.from, sel.to))
                    pos =3D findPosH(this.doc, sel.head, dir, unit, =
this.options.rtlMoveVisually);
                else
                    pos =3D dir < 0 ? sel.from : sel.to;
                extendSelection(this.doc, pos, pos, dir);
            }),

            deleteH: operation(null, function(dir, unit) {
                var sel =3D this.doc.sel;
                if (!posEq(sel.from, sel.to)) replaceRange(this.doc, "", =
sel.from, sel.to, "+delete");
                else replaceRange(this.doc, "", sel.from, =
findPosH(this.doc, sel.head, dir, unit, false), "+delete");
                this.curOp.userSelChange =3D true;
            }),

            findPosV: function(from, amount, unit, goalColumn) {
                var dir =3D 1, x =3D goalColumn;
                if (amount < 0) { dir =3D -1; amount =3D -amount; }
                for (var i =3D 0, cur =3D clipPos(this.doc, from); i < =
amount; ++i) {
                    var coords =3D cursorCoords(this, cur, "div");
                    if (x =3D=3D null) x =3D coords.left;
                    else coords.left =3D x;
                    cur =3D findPosV(this, coords, dir, unit);
                    if (cur.hitSide) break;
                }
                return cur;
            },

            moveV: operation(null, function(dir, unit) {
                var sel =3D this.doc.sel;
                var pos =3D cursorCoords(this, sel.head, "div");
                if (sel.goalColumn !=3D null) pos.left =3D =
sel.goalColumn;
                var target =3D findPosV(this, pos, dir, unit);

                if (unit =3D=3D "page") addToScrollPos(this, 0, =
charCoords(this, target, "div").top - pos.top);
                extendSelection(this.doc, target, target, dir);
                sel.goalColumn =3D pos.left;
            }),

            toggleOverwrite: function(value) {
                if (value !=3D null && value =3D=3D =
this.state.overwrite) return;
                if (this.state.overwrite =3D !this.state.overwrite)
                    this.display.cursor.className +=3D " =
CodeMirror-overwrite";
                else
                    this.display.cursor.className =3D =
this.display.cursor.className.replace(" CodeMirror-overwrite", "");
            },
            hasFocus: function() { return this.state.focused; },

            scrollTo: operation(null, function(x, y) {
                updateScrollPos(this, x, y);
            }),
            getScrollInfo: function() {
                var scroller =3D this.display.scroller, co =3D =
scrollerCutOff;
                return {left: scroller.scrollLeft, top: =
scroller.scrollTop,
                    height: scroller.scrollHeight - co, width: =
scroller.scrollWidth - co,
                    clientHeight: scroller.clientHeight - co, =
clientWidth: scroller.clientWidth - co};
            },

            scrollIntoView: operation(null, function(pos, margin) {
                if (typeof pos =3D=3D "number") pos =3D Pos(pos, 0);
                if (!margin) margin =3D 0;
                var coords =3D pos;

                if (!pos || pos.line !=3D null) {
                    this.curOp.scrollToPos =3D pos ? clipPos(this.doc, =
pos) : this.doc.sel.head;
                    this.curOp.scrollToPosMargin =3D margin;
                    coords =3D cursorCoords(this, =
this.curOp.scrollToPos);
                }
                var sPos =3D calculateScrollPos(this, coords.left, =
coords.top - margin, coords.right, coords.bottom + margin);
                updateScrollPos(this, sPos.scrollLeft, sPos.scrollTop);
            }),

            setSize: operation(null, function(width, height) {
                function interpret(val) {
                    return typeof val =3D=3D "number" || =
/^\d+$/.test(String(val)) ? val + "px" : val;
                }
                if (width !=3D null) this.display.wrapper.style.width =
=3D interpret(width);
                if (height !=3D null) this.display.wrapper.style.height =
=3D interpret(height);
                if (this.options.lineWrapping)
                    this.display.measureLineCache.length =3D =
this.display.measureLineCachePos =3D 0;
                this.curOp.forceUpdate =3D true;
            }),

            operation: function(f){return runInOp(this, f);},

            refresh: operation(null, function() {
                clearCaches(this);
                updateScrollPos(this, this.doc.scrollLeft, =
this.doc.scrollTop);
                regChange(this);
            }),

            swapDoc: operation(null, function(doc) {
                var old =3D this.doc;
                old.cm =3D null;
                attachDoc(this, doc);
                clearCaches(this);
                resetInput(this, true);
                updateScrollPos(this, doc.scrollLeft, doc.scrollTop);
                return old;
            }),

            getInputField: function(){return this.display.input;},
            getWrapperElement: function(){return this.display.wrapper;},
            getScrollerElement: function(){return =
this.display.scroller;},
            getGutterElement: function(){return this.display.gutters;}
        };
        eventMixin(CodeMirror);

        // OPTION DEFAULTS

        var optionHandlers =3D CodeMirror.optionHandlers =3D {};

        // The default configuration options.
        var defaults =3D CodeMirror.defaults =3D {};

        function option(name, deflt, handle, notOnInit) {
            CodeMirror.defaults[name] =3D deflt;
            if (handle) optionHandlers[name] =3D
                notOnInit ? function(cm, val, old) {if (old !=3D Init) =
handle(cm, val, old);} : handle;
        }

        var Init =3D CodeMirror.Init =3D {toString: function(){return =
"CodeMirror.Init";}};

        // These two are, on init, called from the constructor because =
they
        // have to be initialized before the editor can start at all.
        option("value", "", function(cm, val) {
            cm.setValue(val);
        }, true);
        option("mode", null, function(cm, val) {
            cm.doc.modeOption =3D val;
            loadMode(cm);
        }, true);

        option("indentUnit", 2, loadMode, true);
        option("indentWithTabs", false);
        option("smartIndent", true);
        option("tabSize", 4, function(cm) {
            loadMode(cm);
            clearCaches(cm);
            regChange(cm);
        }, true);
        option("electricChars", true);
        option("rtlMoveVisually", !windows);

        option("theme", "default", function(cm) {
            themeChanged(cm);
            guttersChanged(cm);
        }, true);
        option("keyMap", "default", keyMapChanged);
        option("extraKeys", null);

        option("onKeyEvent", null);
        option("onDragEvent", null);

        option("lineWrapping", false, wrappingChanged, true);
        option("gutters", [], function(cm) {
            setGuttersForLineNumbers(cm.options);
            guttersChanged(cm);
        }, true);
        option("fixedGutter", true, function(cm, val) {
            cm.display.gutters.style.left =3D val ? =
compensateForHScroll(cm.display) + "px" : "0";
            cm.refresh();
        }, true);
        option("coverGutterNextToScrollbar", false, updateScrollbars, =
true);
        option("lineNumbers", false, function(cm) {
            setGuttersForLineNumbers(cm.options);
            guttersChanged(cm);
        }, true);
        option("firstLineNumber", 1, guttersChanged, true);
        option("lineNumberFormatter", function(integer) {return =
integer;}, guttersChanged, true);
        option("showCursorWhenSelecting", false, updateSelection, true);

        option("readOnly", false, function(cm, val) {
            if (val =3D=3D "nocursor") {onBlur(cm); =
cm.display.input.blur();}
            else if (!val) resetInput(cm, true);
        });
        option("dragDrop", true);

        option("cursorBlinkRate", 530);
        option("cursorScrollMargin", 0);
        option("cursorHeight", 1);
        option("workTime", 100);
        option("workDelay", 100);
        option("flattenSpans", true);
        option("pollInterval", 100);
        option("undoDepth", 40, function(cm, =
val){cm.doc.history.undoDepth =3D val;});
        option("historyEventDelay", 500);
        option("viewportMargin", 10, function(cm){cm.refresh();}, true);
        option("maxHighlightLength", 10000, function(cm){loadMode(cm); =
cm.refresh();}, true);
        option("moveInputWithCursor", true, function(cm, val) {
            if (!val) cm.display.inputDiv.style.top =3D =
cm.display.inputDiv.style.left =3D 0;
        });

        option("tabindex", null, function(cm, val) {
            cm.display.input.tabIndex =3D val || "";
        });
        option("autofocus", null);

        // MODE DEFINITION AND QUERYING

        // Known modes, by name and by MIME
        var modes =3D CodeMirror.modes =3D {}, mimeModes =3D =
CodeMirror.mimeModes =3D {};

        CodeMirror.defineMode =3D function(name, mode) {
            if (!CodeMirror.defaults.mode && name !=3D "null") =
CodeMirror.defaults.mode =3D name;
            if (arguments.length > 2) {
                mode.dependencies =3D [];
                for (var i =3D 2; i < arguments.length; ++i) =
mode.dependencies.push(arguments[i]);
            }
            modes[name] =3D mode;
        };

        CodeMirror.defineMIME =3D function(mime, spec) {
            mimeModes[mime] =3D spec;
        };

        CodeMirror.resolveMode =3D function(spec) {
            if (typeof spec =3D=3D "string" && =
mimeModes.hasOwnProperty(spec)) {
                spec =3D mimeModes[spec];
            } else if (spec && typeof spec.name =3D=3D "string" && =
mimeModes.hasOwnProperty(spec.name)) {
                var found =3D mimeModes[spec.name];
                spec =3D createObj(found, spec);
                spec.name =3D found.name;
            } else if (typeof spec =3D=3D "string" && =
/^[\w\-]+\/[\w\-]+\+xml$/.test(spec)) {
                return CodeMirror.resolveMode("application/xml");
            }
            if (typeof spec =3D=3D "string") return {name: spec};
            else return spec || {name: "null"};
        };

        CodeMirror.getMode =3D function(options, spec) {
            var spec =3D CodeMirror.resolveMode(spec);
            var mfactory =3D modes[spec.name];
            if (!mfactory) return CodeMirror.getMode(options, =
"text/plain");
            var modeObj =3D mfactory(options, spec);
            if (modeExtensions.hasOwnProperty(spec.name)) {
                var exts =3D modeExtensions[spec.name];
                for (var prop in exts) {
                    if (!exts.hasOwnProperty(prop)) continue;
                    if (modeObj.hasOwnProperty(prop)) modeObj["_" + =
prop] =3D modeObj[prop];
                    modeObj[prop] =3D exts[prop];
                }
            }
            modeObj.name =3D spec.name;

            return modeObj;
        };

        CodeMirror.defineMode("null", function() {
            return {token: function(stream) {stream.skipToEnd();}};
        });
        CodeMirror.defineMIME("text/plain", "null");

        var modeExtensions =3D CodeMirror.modeExtensions =3D {};
        CodeMirror.extendMode =3D function(mode, properties) {
            var exts =3D modeExtensions.hasOwnProperty(mode) ? =
modeExtensions[mode] : (modeExtensions[mode] =3D {});
            copyObj(properties, exts);
        };

        // EXTENSIONS

        CodeMirror.defineExtension =3D function(name, func) {
            CodeMirror.prototype[name] =3D func;
        };
        CodeMirror.defineDocExtension =3D function(name, func) {
            Doc.prototype[name] =3D func;
        };
        CodeMirror.defineOption =3D option;

        var initHooks =3D [];
        CodeMirror.defineInitHook =3D function(f) {initHooks.push(f);};

        var helpers =3D CodeMirror.helpers =3D {};
        CodeMirror.registerHelper =3D function(type, name, value) {
            if (!helpers.hasOwnProperty(type)) helpers[type] =3D =
CodeMirror[type] =3D {};
            helpers[type][name] =3D value;
        };

        // UTILITIES

        CodeMirror.isWordChar =3D isWordChar;

        // MODE STATE HANDLING

        // Utility functions for working with state. Exported because =
modes
        // sometimes need to do this.
        function copyState(mode, state) {
            if (state =3D=3D=3D true) return state;
            if (mode.copyState) return mode.copyState(state);
            var nstate =3D {};
            for (var n in state) {
                var val =3D state[n];
                if (val instanceof Array) val =3D val.concat([]);
                nstate[n] =3D val;
            }
            return nstate;
        }
        CodeMirror.copyState =3D copyState;

        function startState(mode, a1, a2) {
            return mode.startState ? mode.startState(a1, a2) : true;
        }
        CodeMirror.startState =3D startState;

        CodeMirror.innerMode =3D function(mode, state) {
            while (mode.innerMode) {
                var info =3D mode.innerMode(state);
                if (!info || info.mode =3D=3D mode) break;
                state =3D info.state;
                mode =3D info.mode;
            }
            return info || {mode: mode, state: state};
        };

        // STANDARD COMMANDS

        var commands =3D CodeMirror.commands =3D {
            selectAll: function(cm) {cm.setSelection(Pos(cm.firstLine(), =
0), Pos(cm.lastLine()));},
            killLine: function(cm) {
                var from =3D cm.getCursor(true), to =3D =
cm.getCursor(false), sel =3D !posEq(from, to);
                if (!sel && cm.getLine(from.line).length =3D=3D from.ch)
                    cm.replaceRange("", from, Pos(from.line + 1, 0), =
"+delete");
                else cm.replaceRange("", from, sel ? to : =
Pos(from.line), "+delete");
            },
            deleteLine: function(cm) {
                var l =3D cm.getCursor().line;
                cm.replaceRange("", Pos(l, 0), Pos(l), "+delete");
            },
            delLineLeft: function(cm) {
                var cur =3D cm.getCursor();
                cm.replaceRange("", Pos(cur.line, 0), cur, "+delete");
            },
            undo: function(cm) {cm.undo();},
            redo: function(cm) {cm.redo();},
            goDocStart: function(cm) =
{cm.extendSelection(Pos(cm.firstLine(), 0));},
            goDocEnd: function(cm) =
{cm.extendSelection(Pos(cm.lastLine()));},
            goLineStart: function(cm) {
                cm.extendSelection(lineStart(cm, cm.getCursor().line));
            },
            goLineStartSmart: function(cm) {
                var cur =3D cm.getCursor(), start =3D lineStart(cm, =
cur.line);
                var line =3D cm.getLineHandle(start.line);
                var order =3D getOrder(line);
                if (!order || order[0].level =3D=3D 0) {
                    var firstNonWS =3D Math.max(0, =
line.text.search(/\S/));
                    var inWS =3D cur.line =3D=3D start.line && cur.ch =
<=3D firstNonWS && cur.ch;
                    cm.extendSelection(Pos(start.line, inWS ? 0 : =
firstNonWS));
                } else cm.extendSelection(start);
            },
            goLineEnd: function(cm) {
                cm.extendSelection(lineEnd(cm, cm.getCursor().line));
            },
            goLineRight: function(cm) {
                var top =3D cm.charCoords(cm.getCursor(), "div").top + =
5;
                cm.extendSelection(cm.coordsChar({left: =
cm.display.lineDiv.offsetWidth + 100, top: top}, "div"));
            },
            goLineLeft: function(cm) {
                var top =3D cm.charCoords(cm.getCursor(), "div").top + =
5;
                cm.extendSelection(cm.coordsChar({left: 0, top: top}, =
"div"));
            },
            goLineUp: function(cm) {cm.moveV(-1, "line");},
            goLineDown: function(cm) {cm.moveV(1, "line");},
            goPageUp: function(cm) {cm.moveV(-1, "page");},
            goPageDown: function(cm) {cm.moveV(1, "page");},
            goCharLeft: function(cm) {cm.moveH(-1, "char");},
            goCharRight: function(cm) {cm.moveH(1, "char");},
            goColumnLeft: function(cm) {cm.moveH(-1, "column");},
            goColumnRight: function(cm) {cm.moveH(1, "column");},
            goWordLeft: function(cm) {cm.moveH(-1, "word");},
            goGroupRight: function(cm) {cm.moveH(1, "group");},
            goGroupLeft: function(cm) {cm.moveH(-1, "group");},
            goWordRight: function(cm) {cm.moveH(1, "word");},
            delCharBefore: function(cm) {cm.deleteH(-1, "char");},
            delCharAfter: function(cm) {cm.deleteH(1, "char");},
            delWordBefore: function(cm) {cm.deleteH(-1, "word");},
            delWordAfter: function(cm) {cm.deleteH(1, "word");},
            delGroupBefore: function(cm) {cm.deleteH(-1, "group");},
            delGroupAfter: function(cm) {cm.deleteH(1, "group");},
            indentAuto: function(cm) {cm.indentSelection("smart");},
            indentMore: function(cm) {cm.indentSelection("add");},
            indentLess: function(cm) {cm.indentSelection("subtract");},
            insertTab: function(cm) {cm.replaceSelection("\t", "end", =
"+input");},
            defaultTab: function(cm) {
                if (cm.somethingSelected()) cm.indentSelection("add");
                else cm.replaceSelection("\t", "end", "+input");
            },
            transposeChars: function(cm) {
                var cur =3D cm.getCursor(), line =3D =
cm.getLine(cur.line);
                if (cur.ch > 0 && cur.ch < line.length - 1)
                    cm.replaceRange(line.charAt(cur.ch) + =
line.charAt(cur.ch - 1),
                        Pos(cur.line, cur.ch - 1), Pos(cur.line, cur.ch =
+ 1));
            },
            newlineAndIndent: function(cm) {
                operation(cm, function() {
                    cm.replaceSelection("\n", "end", "+input");
                    cm.indentLine(cm.getCursor().line, null, true);
                })();
            },
            toggleOverwrite: function(cm) {cm.toggleOverwrite();}
        };

        // STANDARD KEYMAPS

        var keyMap =3D CodeMirror.keyMap =3D {};
        keyMap.basic =3D {
            "Left": "goCharLeft", "Right": "goCharRight", "Up": =
"goLineUp", "Down": "goLineDown",
            "End": "goLineEnd", "Home": "goLineStartSmart", "PageUp": =
"goPageUp", "PageDown": "goPageDown",
            "Delete": "delCharAfter", "Backspace": "delCharBefore", =
"Tab": "defaultTab", "Shift-Tab": "indentAuto",
            "Enter": "newlineAndIndent", "Insert": "toggleOverwrite"
        };
        // Note that the save and find-related commands aren't defined =
by
        // default. Unknown commands are simply ignored.
        keyMap.pcDefault =3D {
            "Ctrl-A": "selectAll", "Ctrl-D": "deleteLine", "Ctrl-Z": =
"undo", "Shift-Ctrl-Z": "redo", "Ctrl-Y": "redo",
            "Ctrl-Home": "goDocStart", "Alt-Up": "goDocStart", =
"Ctrl-End": "goDocEnd", "Ctrl-Down": "goDocEnd",
            "Ctrl-Left": "goGroupLeft", "Ctrl-Right": "goGroupRight", =
"Alt-Left": "goLineStart", "Alt-Right": "goLineEnd",
            "Ctrl-Backspace": "delGroupBefore", "Ctrl-Delete": =
"delGroupAfter", "Ctrl-S": "save", "Ctrl-F": "find",
            "Ctrl-G": "findNext", "Shift-Ctrl-G": "findPrev", =
"Shift-Ctrl-F": "replace", "Shift-Ctrl-R": "replaceAll",
            "Ctrl-[": "indentLess", "Ctrl-]": "indentMore",
            fallthrough: "basic"
        };
        keyMap.macDefault =3D {
            "Cmd-A": "selectAll", "Cmd-D": "deleteLine", "Cmd-Z": =
"undo", "Shift-Cmd-Z": "redo", "Cmd-Y": "redo",
            "Cmd-Up": "goDocStart", "Cmd-End": "goDocEnd", "Cmd-Down": =
"goDocEnd", "Alt-Left": "goGroupLeft",
            "Alt-Right": "goGroupRight", "Cmd-Left": "goLineStart", =
"Cmd-Right": "goLineEnd", "Alt-Backspace": "delGroupBefore",
            "Ctrl-Alt-Backspace": "delGroupAfter", "Alt-Delete": =
"delGroupAfter", "Cmd-S": "save", "Cmd-F": "find",
            "Cmd-G": "findNext", "Shift-Cmd-G": "findPrev", "Cmd-Alt-F": =
"replace", "Shift-Cmd-Alt-F": "replaceAll",
            "Cmd-[": "indentLess", "Cmd-]": "indentMore", =
"Cmd-Backspace": "delLineLeft",
            fallthrough: ["basic", "emacsy"]
        };
        keyMap["default"] =3D mac ? keyMap.macDefault : =
keyMap.pcDefault;
        keyMap.emacsy =3D {
            "Ctrl-F": "goCharRight", "Ctrl-B": "goCharLeft", "Ctrl-P": =
"goLineUp", "Ctrl-N": "goLineDown",
            "Alt-F": "goWordRight", "Alt-B": "goWordLeft", "Ctrl-A": =
"goLineStart", "Ctrl-E": "goLineEnd",
            "Ctrl-V": "goPageDown", "Shift-Ctrl-V": "goPageUp", =
"Ctrl-D": "delCharAfter", "Ctrl-H": "delCharBefore",
            "Alt-D": "delWordAfter", "Alt-Backspace": "delWordBefore", =
"Ctrl-K": "killLine", "Ctrl-T": "transposeChars"
        };

        // KEYMAP DISPATCH

        function getKeyMap(val) {
            if (typeof val =3D=3D "string") return keyMap[val];
            else return val;
        }

        function lookupKey(name, maps, handle) {
            function lookup(map) {
                map =3D getKeyMap(map);
                var found =3D map[name];
                if (found =3D=3D=3D false) return "stop";
                if (found !=3D null && handle(found)) return true;
                if (map.nofallthrough) return "stop";

                var fallthrough =3D map.fallthrough;
                if (fallthrough =3D=3D null) return false;
                if (Object.prototype.toString.call(fallthrough) !=3D =
"[object Array]")
                    return lookup(fallthrough);
                for (var i =3D 0, e =3D fallthrough.length; i < e; ++i) =
{
                    var done =3D lookup(fallthrough[i]);
                    if (done) return done;
                }
                return false;
            }

            for (var i =3D 0; i < maps.length; ++i) {
                var done =3D lookup(maps[i]);
                if (done) return done !=3D "stop";
            }
        }
        function isModifierKey(event) {
            var name =3D keyNames[event.keyCode];
            return name =3D=3D "Ctrl" || name =3D=3D "Alt" || name =
=3D=3D "Shift" || name =3D=3D "Mod";
        }
        function keyName(event, noShift) {
            if (opera && event.keyCode =3D=3D 34 && event["char"]) =
return false;
            var name =3D keyNames[event.keyCode];
            if (name =3D=3D null || event.altGraphKey) return false;
            if (event.altKey) name =3D "Alt-" + name;
            if (flipCtrlCmd ? event.metaKey : event.ctrlKey) name =3D =
"Ctrl-" + name;
            if (flipCtrlCmd ? event.ctrlKey : event.metaKey) name =3D =
"Cmd-" + name;
            if (!noShift && event.shiftKey) name =3D "Shift-" + name;
            return name;
        }
        CodeMirror.lookupKey =3D lookupKey;
        CodeMirror.isModifierKey =3D isModifierKey;
        CodeMirror.keyName =3D keyName;

        // FROMTEXTAREA

        CodeMirror.fromTextArea =3D function(textarea, options) {
            if (!options) options =3D {};
            options.value =3D textarea.value;
            if (!options.tabindex && textarea.tabindex)
                options.tabindex =3D textarea.tabindex;
            if (!options.placeholder && textarea.placeholder)
                options.placeholder =3D textarea.placeholder;
            // Set autofocus to true if this textarea is focused, or if =
it has
            // autofocus and no other element is focused.
            if (options.autofocus =3D=3D null) {
                var hasFocus =3D document.body;
                // doc.activeElement occasionally throws on IE
                try { hasFocus =3D document.activeElement; } catch(e) {}
                options.autofocus =3D hasFocus =3D=3D textarea ||
                    textarea.getAttribute("autofocus") !=3D null && =
hasFocus =3D=3D document.body;
            }

            function save() {textarea.value =3D cm.getValue();}
            if (textarea.form) {
                on(textarea.form, "submit", save);
                // Deplorable hack to make the submit method do the =
right thing.
                if (!options.leaveSubmitMethodAlone) {
                    var form =3D textarea.form, realSubmit =3D =
form.submit;
                    try {
                        var wrappedSubmit =3D form.submit =3D function() =
{
                            save();
                            form.submit =3D realSubmit;
                            form.submit();
                            form.submit =3D wrappedSubmit;
                        };
                    } catch(e) {}
                }
            }

            textarea.style.display =3D "none";
            var cm =3D CodeMirror(function(node) {
                textarea.parentNode.insertBefore(node, =
textarea.nextSibling);
            }, options);
            cm.save =3D save;
            cm.getTextArea =3D function() { return textarea; };
            cm.toTextArea =3D function() {
                save();
                textarea.parentNode.removeChild(cm.getWrapperElement());
                textarea.style.display =3D "";
                if (textarea.form) {
                    off(textarea.form, "submit", save);
                    if (typeof textarea.form.submit =3D=3D "function")
                        textarea.form.submit =3D realSubmit;
                }
            };
            return cm;
        };

        // STRING STREAM

        // Fed to the mode parsers, provides helper functions to make
        // parsers more succinct.

        // The character stream used by a mode's parser.
        function StringStream(string, tabSize) {
            this.pos =3D this.start =3D 0;
            this.string =3D string;
            this.tabSize =3D tabSize || 8;
            this.lastColumnPos =3D this.lastColumnValue =3D 0;
        }

        StringStream.prototype =3D {
            eol: function() {return this.pos >=3D this.string.length;},
            sol: function() {return this.pos =3D=3D 0;},
            peek: function() {return this.string.charAt(this.pos) || =
undefined;},
            next: function() {
                if (this.pos < this.string.length)
                    return this.string.charAt(this.pos++);
            },
            eat: function(match) {
                var ch =3D this.string.charAt(this.pos);
                if (typeof match =3D=3D "string") var ok =3D ch =3D=3D =
match;
                else var ok =3D ch && (match.test ? match.test(ch) : =
match(ch));
                if (ok) {++this.pos; return ch;}
            },
            eatWhile: function(match) {
                var start =3D this.pos;
                while (this.eat(match)){}
                return this.pos > start;
            },
            eatSpace: function() {
                var start =3D this.pos;
                while (/[\s\u00a0]/.test(this.string.charAt(this.pos))) =
++this.pos;
                return this.pos > start;
            },
            skipToEnd: function() {this.pos =3D this.string.length;},
            skipTo: function(ch) {
                var found =3D this.string.indexOf(ch, this.pos);
                if (found > -1) {this.pos =3D found; return true;}
            },
            backUp: function(n) {this.pos -=3D n;},
            column: function() {
                if (this.lastColumnPos < this.start) {
                    this.lastColumnValue =3D countColumn(this.string, =
this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue);
                    this.lastColumnPos =3D this.start;
                }
                return this.lastColumnValue;
            },
            indentation: function() {return countColumn(this.string, =
null, this.tabSize);},
            match: function(pattern, consume, caseInsensitive) {
                if (typeof pattern =3D=3D "string") {
                    var cased =3D function(str) {return caseInsensitive =
? str.toLowerCase() : str;};
                    var substr =3D this.string.substr(this.pos, =
pattern.length);
                    if (cased(substr) =3D=3D cased(pattern)) {
                        if (consume !=3D=3D false) this.pos +=3D =
pattern.length;
                        return true;
                    }
                } else {
                    var match =3D =
this.string.slice(this.pos).match(pattern);
                    if (match && match.index > 0) return null;
                    if (match && consume !=3D=3D false) this.pos +=3D =
match[0].length;
                    return match;
                }
            },
            current: function(){return this.string.slice(this.start, =
this.pos);}
        };
        CodeMirror.StringStream =3D StringStream;

        // TEXTMARKERS

        function TextMarker(doc, type) {
            this.lines =3D [];
            this.type =3D type;
            this.doc =3D doc;
        }
        CodeMirror.TextMarker =3D TextMarker;
        eventMixin(TextMarker);

        TextMarker.prototype.clear =3D function() {
            if (this.explicitlyCleared) return;
            var cm =3D this.doc.cm, withOp =3D cm && !cm.curOp;
            if (withOp) startOperation(cm);
            if (hasHandler(this, "clear")) {
                var found =3D this.find();
                if (found) signalLater(this, "clear", found.from, =
found.to);
            }
            var min =3D null, max =3D null;
            for (var i =3D 0; i < this.lines.length; ++i) {
                var line =3D this.lines[i];
                var span =3D getMarkedSpanFor(line.markedSpans, this);
                if (span.to !=3D null) max =3D lineNo(line);
                line.markedSpans =3D removeMarkedSpan(line.markedSpans, =
span);
                if (span.from !=3D null)
                    min =3D lineNo(line);
                else if (this.collapsed && !lineIsHidden(this.doc, line) =
&& cm)
                    updateLineHeight(line, textHeight(cm.display));
            }
            if (cm && this.collapsed && !cm.options.lineWrapping) for =
(var i =3D 0; i < this.lines.length; ++i) {
                var visual =3D visualLine(cm.doc, this.lines[i]), len =
=3D lineLength(cm.doc, visual);
                if (len > cm.display.maxLineLength) {
                    cm.display.maxLine =3D visual;
                    cm.display.maxLineLength =3D len;
                    cm.display.maxLineChanged =3D true;
                }
            }

            if (min !=3D null && cm) regChange(cm, min, max + 1);
            this.lines.length =3D 0;
            this.explicitlyCleared =3D true;
            if (this.atomic && this.doc.cantEdit) {
                this.doc.cantEdit =3D false;
                if (cm) reCheckSelection(cm);
            }
            if (withOp) endOperation(cm);
        };

        TextMarker.prototype.find =3D function() {
            var from, to;
            for (var i =3D 0; i < this.lines.length; ++i) {
                var line =3D this.lines[i];
                var span =3D getMarkedSpanFor(line.markedSpans, this);
                if (span.from !=3D null || span.to !=3D null) {
                    var found =3D lineNo(line);
                    if (span.from !=3D null) from =3D Pos(found, =
span.from);
                    if (span.to !=3D null) to =3D Pos(found, span.to);
                }
            }
            if (this.type =3D=3D "bookmark") return from;
            return from && {from: from, to: to};
        };

        TextMarker.prototype.changed =3D function() {
            var pos =3D this.find(), cm =3D this.doc.cm;
            if (!pos || !cm) return;
            var line =3D getLine(this.doc, pos.from.line);
            clearCachedMeasurement(cm, line);
            if (pos.from.line >=3D cm.display.showingFrom && =
pos.from.line < cm.display.showingTo) {
                for (var node =3D cm.display.lineDiv.firstChild; node; =
node =3D node.nextSibling) if (node.lineObj =3D=3D line) {
                    if (node.offsetHeight !=3D line.height) =
updateLineHeight(line, node.offsetHeight);
                    break;
                }
                runInOp(cm, function() {
                    cm.curOp.selectionChanged =3D cm.curOp.forceUpdate =
=3D cm.curOp.updateMaxLine =3D true;
                });
            }
        };

        TextMarker.prototype.attachLine =3D function(line) {
            if (!this.lines.length && this.doc.cm) {
                var op =3D this.doc.cm.curOp;
                if (!op.maybeHiddenMarkers || =
indexOf(op.maybeHiddenMarkers, this) =3D=3D -1)
                    (op.maybeUnhiddenMarkers || (op.maybeUnhiddenMarkers =
=3D [])).push(this);
            }
            this.lines.push(line);
        };
        TextMarker.prototype.detachLine =3D function(line) {
            this.lines.splice(indexOf(this.lines, line), 1);
            if (!this.lines.length && this.doc.cm) {
                var op =3D this.doc.cm.curOp;
                (op.maybeHiddenMarkers || (op.maybeHiddenMarkers =3D =
[])).push(this);
            }
        };

        function markText(doc, from, to, options, type) {
            if (options && options.shared) return markTextShared(doc, =
from, to, options, type);
            if (doc.cm && !doc.cm.curOp) return operation(doc.cm, =
markText)(doc, from, to, options, type);

            var marker =3D new TextMarker(doc, type);
            if (type =3D=3D "range" && !posLess(from, to)) return =
marker;
            if (options) copyObj(options, marker);
            if (marker.replacedWith) {
                marker.collapsed =3D true;
                marker.replacedWith =3D elt("span", =
[marker.replacedWith], "CodeMirror-widget");
                if (!options.handleMouseEvents) =
marker.replacedWith.ignoreEvents =3D true;
            }
            if (marker.collapsed) sawCollapsedSpans =3D true;

            if (marker.addToHistory)
                addToHistory(doc, {from: from, to: to, origin: =
"markText"},
                    {head: doc.sel.head, anchor: doc.sel.anchor}, NaN);

            var curLine =3D from.line, size =3D 0, collapsedAtStart, =
collapsedAtEnd, cm =3D doc.cm, updateMaxLine;
            doc.iter(curLine, to.line + 1, function(line) {
                if (cm && marker.collapsed && !cm.options.lineWrapping =
&& visualLine(doc, line) =3D=3D cm.display.maxLine)
                    updateMaxLine =3D true;
                var span =3D {from: null, to: null, marker: marker};
                size +=3D line.text.length;
                if (curLine =3D=3D from.line) {span.from =3D from.ch; =
size -=3D from.ch;}
                if (curLine =3D=3D to.line) {span.to =3D to.ch; size =
-=3D line.text.length - to.ch;}
                if (marker.collapsed) {
                    if (curLine =3D=3D to.line) collapsedAtEnd =3D =
collapsedSpanAt(line, to.ch);
                    if (curLine =3D=3D from.line) collapsedAtStart =3D =
collapsedSpanAt(line, from.ch);
                    else updateLineHeight(line, 0);
                }
                addMarkedSpan(line, span);
                ++curLine;
            });
            if (marker.collapsed) doc.iter(from.line, to.line + 1, =
function(line) {
                if (lineIsHidden(doc, line)) updateLineHeight(line, 0);
            });

            if (marker.clearOnEnter) on(marker, "beforeCursorEnter", =
function() { marker.clear(); });

            if (marker.readOnly) {
                sawReadOnlySpans =3D true;
                if (doc.history.done.length || =
doc.history.undone.length)
                    doc.clearHistory();
            }
            if (marker.collapsed) {
                if (collapsedAtStart !=3D collapsedAtEnd)
                    throw new Error("Inserting collapsed marker =
overlapping an existing one");
                marker.size =3D size;
                marker.atomic =3D true;
            }
            if (cm) {
                if (updateMaxLine) cm.curOp.updateMaxLine =3D true;
                if (marker.className || marker.title || =
marker.startStyle || marker.endStyle || marker.collapsed)
                    regChange(cm, from.line, to.line + 1);
                if (marker.atomic) reCheckSelection(cm);
            }
            return marker;
        }

        // SHARED TEXTMARKERS

        function SharedTextMarker(markers, primary) {
            this.markers =3D markers;
            this.primary =3D primary;
            for (var i =3D 0, me =3D this; i < markers.length; ++i) {
                markers[i].parent =3D this;
                on(markers[i], "clear", function(){me.clear();});
            }
        }
        CodeMirror.SharedTextMarker =3D SharedTextMarker;
        eventMixin(SharedTextMarker);

        SharedTextMarker.prototype.clear =3D function() {
            if (this.explicitlyCleared) return;
            this.explicitlyCleared =3D true;
            for (var i =3D 0; i < this.markers.length; ++i)
                this.markers[i].clear();
            signalLater(this, "clear");
        };
        SharedTextMarker.prototype.find =3D function() {
            return this.primary.find();
        };

        function markTextShared(doc, from, to, options, type) {
            options =3D copyObj(options);
            options.shared =3D false;
            var markers =3D [markText(doc, from, to, options, type)], =
primary =3D markers[0];
            var widget =3D options.replacedWith;
            linkedDocs(doc, function(doc) {
                if (widget) options.replacedWith =3D =
widget.cloneNode(true);
                markers.push(markText(doc, clipPos(doc, from), =
clipPos(doc, to), options, type));
                for (var i =3D 0; i < doc.linked.length; ++i)
                    if (doc.linked[i].isParent) return;
                primary =3D lst(markers);
            });
            return new SharedTextMarker(markers, primary);
        }

        // TEXTMARKER SPANS

        function getMarkedSpanFor(spans, marker) {
            if (spans) for (var i =3D 0; i < spans.length; ++i) {
                var span =3D spans[i];
                if (span.marker =3D=3D marker) return span;
            }
        }
        function removeMarkedSpan(spans, span) {
            for (var r, i =3D 0; i < spans.length; ++i)
                if (spans[i] !=3D span) (r || (r =3D =
[])).push(spans[i]);
            return r;
        }
        function addMarkedSpan(line, span) {
            line.markedSpans =3D line.markedSpans ? =
line.markedSpans.concat([span]) : [span];
            span.marker.attachLine(line);
        }

        function markedSpansBefore(old, startCh, isInsert) {
            if (old) for (var i =3D 0, nw; i < old.length; ++i) {
                var span =3D old[i], marker =3D span.marker;
                var startsBefore =3D span.from =3D=3D null || =
(marker.inclusiveLeft ? span.from <=3D startCh : span.from < startCh);
                if (startsBefore || marker.type =3D=3D "bookmark" && =
span.from =3D=3D startCh && (!isInsert || !span.marker.insertLeft)) {
                    var endsAfter =3D span.to =3D=3D null || =
(marker.inclusiveRight ? span.to >=3D startCh : span.to > startCh);
                    (nw || (nw =3D [])).push({from: span.from,
                        to: endsAfter ? null : span.to,
                        marker: marker});
                }
            }
            return nw;
        }

        function markedSpansAfter(old, endCh, isInsert) {
            if (old) for (var i =3D 0, nw; i < old.length; ++i) {
                var span =3D old[i], marker =3D span.marker;
                var endsAfter =3D span.to =3D=3D null || =
(marker.inclusiveRight ? span.to >=3D endCh : span.to > endCh);
                if (endsAfter || marker.type =3D=3D "bookmark" && =
span.from =3D=3D endCh && (!isInsert || span.marker.insertLeft)) {
                    var startsBefore =3D span.from =3D=3D null || =
(marker.inclusiveLeft ? span.from <=3D endCh : span.from < endCh);
                    (nw || (nw =3D [])).push({from: startsBefore ? null =
: span.from - endCh,
                        to: span.to =3D=3D null ? null : span.to - =
endCh,
                        marker: marker});
                }
            }
            return nw;
        }

        function stretchSpansOverChange(doc, change) {
            var oldFirst =3D isLine(doc, change.from.line) && =
getLine(doc, change.from.line).markedSpans;
            var oldLast =3D isLine(doc, change.to.line) && getLine(doc, =
change.to.line).markedSpans;
            if (!oldFirst && !oldLast) return null;

            var startCh =3D change.from.ch, endCh =3D change.to.ch, =
isInsert =3D posEq(change.from, change.to);
            // Get the spans that 'stick out' on both sides
            var first =3D markedSpansBefore(oldFirst, startCh, =
isInsert);
            var last =3D markedSpansAfter(oldLast, endCh, isInsert);

            // Next, merge those two ends
            var sameLine =3D change.text.length =3D=3D 1, offset =3D =
lst(change.text).length + (sameLine ? startCh : 0);
            if (first) {
                // Fix up .to properties of first
                for (var i =3D 0; i < first.length; ++i) {
                    var span =3D first[i];
                    if (span.to =3D=3D null) {
                        var found =3D getMarkedSpanFor(last, =
span.marker);
                        if (!found) span.to =3D startCh;
                        else if (sameLine) span.to =3D found.to =3D=3D =
null ? null : found.to + offset;
                    }
                }
            }
            if (last) {
                // Fix up .from in last (or move them into first in case =
of sameLine)
                for (var i =3D 0; i < last.length; ++i) {
                    var span =3D last[i];
                    if (span.to !=3D null) span.to +=3D offset;
                    if (span.from =3D=3D null) {
                        var found =3D getMarkedSpanFor(first, =
span.marker);
                        if (!found) {
                            span.from =3D offset;
                            if (sameLine) (first || (first =3D =
[])).push(span);
                        }
                    } else {
                        span.from +=3D offset;
                        if (sameLine) (first || (first =3D =
[])).push(span);
                    }
                }
            }
            if (sameLine && first) {
                // Make sure we didn't create any zero-length spans
                for (var i =3D 0; i < first.length; ++i)
                    if (first[i].from !=3D null && first[i].from =3D=3D =
first[i].to && first[i].marker.type !=3D "bookmark")
                        first.splice(i--, 1);
                if (!first.length) first =3D null;
            }

            var newMarkers =3D [first];
            if (!sameLine) {
                // Fill gap with whole-line-spans
                var gap =3D change.text.length - 2, gapMarkers;
                if (gap > 0 && first)
                    for (var i =3D 0; i < first.length; ++i)
                        if (first[i].to =3D=3D null)
                            (gapMarkers || (gapMarkers =3D =
[])).push({from: null, to: null, marker: first[i].marker});
                for (var i =3D 0; i < gap; ++i)
                    newMarkers.push(gapMarkers);
                newMarkers.push(last);
            }
            return newMarkers;
        }

        function mergeOldSpans(doc, change) {
            var old =3D getOldSpans(doc, change);
            var stretched =3D stretchSpansOverChange(doc, change);
            if (!old) return stretched;
            if (!stretched) return old;

            for (var i =3D 0; i < old.length; ++i) {
                var oldCur =3D old[i], stretchCur =3D stretched[i];
                if (oldCur && stretchCur) {
                    spans: for (var j =3D 0; j < stretchCur.length; ++j) =
{
                        var span =3D stretchCur[j];
                        for (var k =3D 0; k < oldCur.length; ++k)
                            if (oldCur[k].marker =3D=3D span.marker) =
continue spans;
                        oldCur.push(span);
                    }
                } else if (stretchCur) {
                    old[i] =3D stretchCur;
                }
            }
            return old;
        }

        function removeReadOnlyRanges(doc, from, to) {
            var markers =3D null;
            doc.iter(from.line, to.line + 1, function(line) {
                if (line.markedSpans) for (var i =3D 0; i < =
line.markedSpans.length; ++i) {
                    var mark =3D line.markedSpans[i].marker;
                    if (mark.readOnly && (!markers || indexOf(markers, =
mark) =3D=3D -1))
                        (markers || (markers =3D [])).push(mark);
                }
            });
            if (!markers) return null;
            var parts =3D [{from: from, to: to}];
            for (var i =3D 0; i < markers.length; ++i) {
                var mk =3D markers[i], m =3D mk.find();
                for (var j =3D 0; j < parts.length; ++j) {
                    var p =3D parts[j];
                    if (posLess(p.to, m.from) || posLess(m.to, p.from)) =
continue;
                    var newParts =3D [j, 1];
                    if (posLess(p.from, m.from) || !mk.inclusiveLeft && =
posEq(p.from, m.from))
                        newParts.push({from: p.from, to: m.from});
                    if (posLess(m.to, p.to) || !mk.inclusiveRight && =
posEq(p.to, m.to))
                        newParts.push({from: m.to, to: p.to});
                    parts.splice.apply(parts, newParts);
                    j +=3D newParts.length - 1;
                }
            }
            return parts;
        }

        function collapsedSpanAt(line, ch) {
            var sps =3D sawCollapsedSpans && line.markedSpans, found;
            if (sps) for (var sp, i =3D 0; i < sps.length; ++i) {
                sp =3D sps[i];
                if (!sp.marker.collapsed) continue;
                if ((sp.from =3D=3D null || sp.from < ch) &&
                    (sp.to =3D=3D null || sp.to > ch) &&
                    (!found || found.width < sp.marker.width))
                    found =3D sp.marker;
            }
            return found;
        }
        function collapsedSpanAtStart(line) { return =
collapsedSpanAt(line, -1); }
        function collapsedSpanAtEnd(line) { return collapsedSpanAt(line, =
line.text.length + 1); }

        function visualLine(doc, line) {
            var merged;
            while (merged =3D collapsedSpanAtStart(line))
                line =3D getLine(doc, merged.find().from.line);
            return line;
        }

        function lineIsHidden(doc, line) {
            var sps =3D sawCollapsedSpans && line.markedSpans;
            if (sps) for (var sp, i =3D 0; i < sps.length; ++i) {
                sp =3D sps[i];
                if (!sp.marker.collapsed) continue;
                if (sp.from =3D=3D null) return true;
                if (sp.marker.replacedWith) continue;
                if (sp.from =3D=3D 0 && sp.marker.inclusiveLeft && =
lineIsHiddenInner(doc, line, sp))
                    return true;
            }
        }
        function lineIsHiddenInner(doc, line, span) {
            if (span.to =3D=3D null) {
                var end =3D span.marker.find().to, endLine =3D =
getLine(doc, end.line);
                return lineIsHiddenInner(doc, endLine, =
getMarkedSpanFor(endLine.markedSpans, span.marker));
            }
            if (span.marker.inclusiveRight && span.to =3D=3D =
line.text.length)
                return true;
            for (var sp, i =3D 0; i < line.markedSpans.length; ++i) {
                sp =3D line.markedSpans[i];
                if (sp.marker.collapsed && !sp.marker.replacedWith && =
sp.from =3D=3D span.to &&
                    (sp.marker.inclusiveLeft || =
span.marker.inclusiveRight) &&
                    lineIsHiddenInner(doc, line, sp)) return true;
            }
        }

        function detachMarkedSpans(line) {
            var spans =3D line.markedSpans;
            if (!spans) return;
            for (var i =3D 0; i < spans.length; ++i)
                spans[i].marker.detachLine(line);
            line.markedSpans =3D null;
        }

        function attachMarkedSpans(line, spans) {
            if (!spans) return;
            for (var i =3D 0; i < spans.length; ++i)
                spans[i].marker.attachLine(line);
            line.markedSpans =3D spans;
        }

        // LINE WIDGETS

        var LineWidget =3D CodeMirror.LineWidget =3D function(cm, node, =
options) {
            if (options) for (var opt in options) if =
(options.hasOwnProperty(opt))
                this[opt] =3D options[opt];
            this.cm =3D cm;
            this.node =3D node;
        };
        eventMixin(LineWidget);
        function widgetOperation(f) {
            return function() {
                var withOp =3D !this.cm.curOp;
                if (withOp) startOperation(this.cm);
                try {var result =3D f.apply(this, arguments);}
                finally {if (withOp) endOperation(this.cm);}
                return result;
            };
        }
        LineWidget.prototype.clear =3D widgetOperation(function() {
            var ws =3D this.line.widgets, no =3D lineNo(this.line);
            if (no =3D=3D null || !ws) return;
            for (var i =3D 0; i < ws.length; ++i) if (ws[i] =3D=3D this) =
ws.splice(i--, 1);
            if (!ws.length) this.line.widgets =3D null;
            var aboveVisible =3D heightAtLine(this.cm, this.line) < =
this.cm.doc.scrollTop;
            updateLineHeight(this.line, Math.max(0, this.line.height - =
widgetHeight(this)));
            if (aboveVisible) addToScrollPos(this.cm, 0, -this.height);
            regChange(this.cm, no, no + 1);
        });
        LineWidget.prototype.changed =3D widgetOperation(function() {
            var oldH =3D this.height;
            this.height =3D null;
            var diff =3D widgetHeight(this) - oldH;
            if (!diff) return;
            updateLineHeight(this.line, this.line.height + diff);
            var no =3D lineNo(this.line);
            regChange(this.cm, no, no + 1);
        });

        function widgetHeight(widget) {
            if (widget.height !=3D null) return widget.height;
            if (!widget.node.parentNode || =
widget.node.parentNode.nodeType !=3D 1)
                removeChildrenAndAdd(widget.cm.display.measure, =
elt("div", [widget.node], null, "position: relative"));
            return widget.height =3D widget.node.offsetHeight;
        }

        function addLineWidget(cm, handle, node, options) {
            var widget =3D new LineWidget(cm, node, options);
            if (widget.noHScroll) cm.display.alignWidgets =3D true;
            changeLine(cm, handle, function(line) {
                var widgets =3D line.widgets || (line.widgets =3D []);
                if (widget.insertAt =3D=3D null) widgets.push(widget);
                else widgets.splice(Math.min(widgets.length - 1, =
Math.max(0, widget.insertAt)), 0, widget);
                widget.line =3D line;
                if (!lineIsHidden(cm.doc, line) || widget.showIfHidden) =
{
                    var aboveVisible =3D heightAtLine(cm, line) < =
cm.doc.scrollTop;
                    updateLineHeight(line, line.height + =
widgetHeight(widget));
                    if (aboveVisible) addToScrollPos(cm, 0, =
widget.height);
                }
                return true;
            });
            return widget;
        }

        // LINE DATA STRUCTURE

        // Line objects. These hold state related to a line, including
        // highlighting info (the styles array).
        var Line =3D CodeMirror.Line =3D function(text, markedSpans, =
estimateHeight) {
            this.text =3D text;
            attachMarkedSpans(this, markedSpans);
            this.height =3D estimateHeight ? estimateHeight(this) : 1;
        };
        eventMixin(Line);

        function updateLine(line, text, markedSpans, estimateHeight) {
            line.text =3D text;
            if (line.stateAfter) line.stateAfter =3D null;
            if (line.styles) line.styles =3D null;
            if (line.order !=3D null) line.order =3D null;
            detachMarkedSpans(line);
            attachMarkedSpans(line, markedSpans);
            var estHeight =3D estimateHeight ? estimateHeight(line) : 1;
            if (estHeight !=3D line.height) updateLineHeight(line, =
estHeight);
        }

        function cleanUpLine(line) {
            line.parent =3D null;
            detachMarkedSpans(line);
        }

        // Run the given mode's parser over a line, update the styles
        // array, which contains alternating fragments of text and CSS
        // classes.
        function runMode(cm, text, mode, state, f) {
            var flattenSpans =3D mode.flattenSpans;
            if (flattenSpans =3D=3D null) flattenSpans =3D =
cm.options.flattenSpans;
            var curStart =3D 0, curStyle =3D null;
            var stream =3D new StringStream(text, cm.options.tabSize), =
style;
            if (text =3D=3D "" && mode.blankLine) mode.blankLine(state);
            while (!stream.eol()) {
                if (stream.pos > cm.options.maxHighlightLength) {
                    flattenSpans =3D false;
                    // Webkit seems to refuse to render text nodes =
longer than 57444 characters
                    stream.pos =3D Math.min(text.length, stream.start + =
50000);
                    style =3D null;
                } else {
                    style =3D mode.token(stream, state);
                }
                if (!flattenSpans || curStyle !=3D style) {
                    if (curStart < stream.start) f(stream.start, =
curStyle);
                    curStart =3D stream.start; curStyle =3D style;
                }
                stream.start =3D stream.pos;
            }
            if (curStart < stream.pos) f(stream.pos, curStyle);
        }

        function highlightLine(cm, line, state) {
            // A styles array always starts with a number identifying =
the
            // mode/overlays that it is based on (for easy =
invalidation).
            var st =3D [cm.state.modeGen];
            // Compute the base array of styles
            runMode(cm, line.text, cm.doc.mode, state, function(end, =
style) {st.push(end, style);});

            // Run overlays, adjust style array.
            for (var o =3D 0; o < cm.state.overlays.length; ++o) {
                var overlay =3D cm.state.overlays[o], i =3D 1, at =3D 0;
                runMode(cm, line.text, overlay.mode, true, function(end, =
style) {
                    var start =3D i;
                    // Ensure there's a token end at the current =
position, and that i points at it
                    while (at < end) {
                        var i_end =3D st[i];
                        if (i_end > end)
                            st.splice(i, 1, end, st[i+1], i_end);
                        i +=3D 2;
                        at =3D Math.min(end, i_end);
                    }
                    if (!style) return;
                    if (overlay.opaque) {
                        st.splice(start, i - start, end, style);
                        i =3D start + 2;
                    } else {
                        for (; start < i; start +=3D 2) {
                            var cur =3D st[start+1];
                            st[start+1] =3D cur ? cur + " " + style : =
style;
                        }
                    }
                });
            }

            return st;
        }

        function getLineStyles(cm, line) {
            if (!line.styles || line.styles[0] !=3D cm.state.modeGen)
                line.styles =3D highlightLine(cm, line, line.stateAfter =
=3D getStateBefore(cm, lineNo(line)));
            return line.styles;
        }

        // Lightweight form of highlight -- proceed over this line and
        // update state, but don't save a style array.
        function processLine(cm, line, state) {
            var mode =3D cm.doc.mode;
            var stream =3D new StringStream(line.text, =
cm.options.tabSize);
            if (line.text =3D=3D "" && mode.blankLine) =
mode.blankLine(state);
            while (!stream.eol() && stream.pos <=3D =
cm.options.maxHighlightLength) {
                mode.token(stream, state);
                stream.start =3D stream.pos;
            }
        }

        var styleToClassCache =3D {};
        function styleToClass(style) {
            if (!style) return null;
            return styleToClassCache[style] ||
                (styleToClassCache[style] =3D "cm-" + style.replace(/ =
+/g, " cm-"));
        }

        function lineContent(cm, realLine, measure, copyWidgets) {
            var merged, line =3D realLine, empty =3D true;
            while (merged =3D collapsedSpanAtStart(line))
                line =3D getLine(cm.doc, merged.find().from.line);

            var builder =3D {pre: elt("pre"), col: 0, pos: 0,
                measure: null, measuredSomething: false, cm: cm,
                copyWidgets: copyWidgets};
            if (line.textClass) builder.pre.className =3D =
line.textClass;

            do {
                if (line.text) empty =3D false;
                builder.measure =3D line =3D=3D realLine && measure;
                builder.pos =3D 0;
                builder.addToken =3D builder.measure ? buildTokenMeasure =
: buildToken;
                if ((ie || webkit) && cm.getOption("lineWrapping"))
                    builder.addToken =3D =
buildTokenSplitSpaces(builder.addToken);
                var next =3D insertLineContent(line, builder, =
getLineStyles(cm, line));
                if (measure && line =3D=3D realLine && =
!builder.measuredSomething) {
                    measure[0] =3D =
builder.pre.appendChild(zeroWidthElement(cm.display.measure));
                    builder.measuredSomething =3D true;
                }
                if (next) line =3D getLine(cm.doc, next.to.line);
            } while (next);

            if (measure && !builder.measuredSomething && !measure[0])
                measure[0] =3D builder.pre.appendChild(empty ? =
elt("span", "\u00a0") : zeroWidthElement(cm.display.measure));
            if (!builder.pre.firstChild && !lineIsHidden(cm.doc, =
realLine))
                =
builder.pre.appendChild(document.createTextNode("\u00a0"));

            var order;
            // Work around problem with the reported dimensions of =
single-char
            // direction spans on IE (issue #1129). See also the comment =
in
            // cursorCoords.
            if (measure && ie && (order =3D getOrder(line))) {
                var l =3D order.length - 1;
                if (order[l].from =3D=3D order[l].to) --l;
                var last =3D order[l], prev =3D order[l - 1];
                if (last.from + 1 =3D=3D last.to && prev && last.level < =
prev.level) {
                    var span =3D measure[builder.pos - 1];
                    if (span) =
span.parentNode.insertBefore(span.measureRight =3D =
zeroWidthElement(cm.display.measure),
                        span.nextSibling);
                }
            }

            signal(cm, "renderLine", cm, realLine, builder.pre);
            return builder.pre;
        }

        var tokenSpecialChars =3D =
/[\t\u0000-\u0019\u00ad\u200b\u2028\u2029\uFEFF]/g;
        function buildToken(builder, text, style, startStyle, endStyle, =
title) {
            if (!text) return;
            if (!tokenSpecialChars.test(text)) {
                builder.col +=3D text.length;
                var content =3D document.createTextNode(text);
            } else {
                var content =3D document.createDocumentFragment(), pos =
=3D 0;
                while (true) {
                    tokenSpecialChars.lastIndex =3D pos;
                    var m =3D tokenSpecialChars.exec(text);
                    var skipped =3D m ? m.index - pos : text.length - =
pos;
                    if (skipped) {
                        =
content.appendChild(document.createTextNode(text.slice(pos, pos + =
skipped)));
                        builder.col +=3D skipped;
                    }
                    if (!m) break;
                    pos +=3D skipped + 1;
                    if (m[0] =3D=3D "\t") {
                        var tabSize =3D builder.cm.options.tabSize, =
tabWidth =3D tabSize - builder.col % tabSize;
                        content.appendChild(elt("span", =
spaceStr(tabWidth), "cm-tab"));
                        builder.col +=3D tabWidth;
                    } else {
                        var token =3D elt("span", "\u2022", =
"cm-invalidchar");
                        token.title =3D "\\u" + =
m[0].charCodeAt(0).toString(16);
                        content.appendChild(token);
                        builder.col +=3D 1;
                    }
                }
            }
            if (style || startStyle || endStyle || builder.measure) {
                var fullStyle =3D style || "";
                if (startStyle) fullStyle +=3D startStyle;
                if (endStyle) fullStyle +=3D endStyle;
                var token =3D elt("span", [content], fullStyle);
                if (title) token.title =3D title;
                return builder.pre.appendChild(token);
            }
            builder.pre.appendChild(content);
        }

        function buildTokenMeasure(builder, text, style, startStyle, =
endStyle) {
            var wrapping =3D builder.cm.options.lineWrapping;
            for (var i =3D 0; i < text.length; ++i) {
                var ch =3D text.charAt(i), start =3D i =3D=3D 0;
                if (ch >=3D "\ud800" && ch < "\udbff" && i < text.length =
- 1) {
                    ch =3D text.slice(i, i + 2);
                    ++i;
                } else if (i && wrapping && spanAffectsWrapping(text, =
i)) {
                    builder.pre.appendChild(elt("wbr"));
                }
                var old =3D builder.measure[builder.pos];
                var span =3D builder.measure[builder.pos] =3D
                    buildToken(builder, ch, style,
                            start && startStyle, i =3D=3D text.length - =
1 && endStyle);
                if (old) span.leftSide =3D old.leftSide || old;
                // In IE single-space nodes wrap differently than spaces
                // embedded in larger text nodes, except when set to
                // white-space: normal (issue #1268).
                if (ie && wrapping && ch =3D=3D " " && i && =
!/\s/.test(text.charAt(i - 1)) &&
                    i < text.length - 1 && !/\s/.test(text.charAt(i + =
1)))
                    span.style.whiteSpace =3D "normal";
                builder.pos +=3D ch.length;
            }
            if (text.length) builder.measuredSomething =3D true;
        }

        function buildTokenSplitSpaces(inner) {
            function split(old) {
                var out =3D " ";
                for (var i =3D 0; i < old.length - 2; ++i) out +=3D i % =
2 ? " " : "\u00a0";
                out +=3D " ";
                return out;
            }
            return function(builder, text, style, startStyle, endStyle, =
title) {
                return inner(builder, text.replace(/ {3,}/, split), =
style, startStyle, endStyle, title);
            };
        }

        function buildCollapsedSpan(builder, size, marker, ignoreWidget) =
{
            var widget =3D !ignoreWidget && marker.replacedWith;
            if (widget) {
                if (builder.copyWidgets) widget =3D =
widget.cloneNode(true);
                builder.pre.appendChild(widget);
                if (builder.measure) {
                    if (size) {
                        builder.measure[builder.pos] =3D widget;
                    } else {
                        var elt =3D builder.measure[builder.pos] =3D =
zeroWidthElement(builder.cm.display.measure);
                        if (marker.type !=3D "bookmark" || =
marker.insertLeft)
                            builder.pre.insertBefore(elt, widget);
                        else
                            builder.pre.appendChild(elt);
                    }
                    builder.measuredSomething =3D true;
                }
            }
            builder.pos +=3D size;
        }

        // Outputs a number of spans to make up a line, taking =
highlighting
        // and marked text into account.
        function insertLineContent(line, builder, styles) {
            var spans =3D line.markedSpans, allText =3D line.text, at =
=3D 0;
            if (!spans) {
                for (var i =3D 1; i < styles.length; i+=3D2)
                    builder.addToken(builder, allText.slice(at, at =3D =
styles[i]), styleToClass(styles[i+1]));
                return;
            }

            var len =3D allText.length, pos =3D 0, i =3D 1, text =3D "", =
style;
            var nextChange =3D 0, spanStyle, spanEndStyle, =
spanStartStyle, title, collapsed;
            for (;;) {
                if (nextChange =3D=3D pos) { // Update current marker =
set
                    spanStyle =3D spanEndStyle =3D spanStartStyle =3D =
title =3D "";
                    collapsed =3D null; nextChange =3D Infinity;
                    var foundBookmark =3D null;
                    for (var j =3D 0; j < spans.length; ++j) {
                        var sp =3D spans[j], m =3D sp.marker;
                        if (sp.from <=3D pos && (sp.to =3D=3D null || =
sp.to > pos)) {
                            if (sp.to !=3D null && nextChange > sp.to) { =
nextChange =3D sp.to; spanEndStyle =3D ""; }
                            if (m.className) spanStyle +=3D " " + =
m.className;
                            if (m.startStyle && sp.from =3D=3D pos) =
spanStartStyle +=3D " " + m.startStyle;
                            if (m.endStyle && sp.to =3D=3D nextChange) =
spanEndStyle +=3D " " + m.endStyle;
                            if (m.title && !title) title =3D m.title;
                            if (m.collapsed && (!collapsed || =
collapsed.marker.size < m.size))
                                collapsed =3D sp;
                        } else if (sp.from > pos && nextChange > =
sp.from) {
                            nextChange =3D sp.from;
                        }
                        if (m.type =3D=3D "bookmark" && sp.from =3D=3D =
pos && m.replacedWith) foundBookmark =3D m;
                    }
                    if (collapsed && (collapsed.from || 0) =3D=3D pos) {
                        buildCollapsedSpan(builder, (collapsed.to =3D=3D =
null ? len : collapsed.to) - pos,
                            collapsed.marker, collapsed.from =3D=3D =
null);
                        if (collapsed.to =3D=3D null) return =
collapsed.marker.find();
                    }
                    if (foundBookmark && !collapsed) =
buildCollapsedSpan(builder, 0, foundBookmark);
                }
                if (pos >=3D len) break;

                var upto =3D Math.min(len, nextChange);
                while (true) {
                    if (text) {
                        var end =3D pos + text.length;
                        if (!collapsed) {
                            var tokenText =3D end > upto ? text.slice(0, =
upto - pos) : text;
                            builder.addToken(builder, tokenText, style ? =
style + spanStyle : spanStyle,
                                spanStartStyle, pos + tokenText.length =
=3D=3D nextChange ? spanEndStyle : "", title);
                        }
                        if (end >=3D upto) {text =3D text.slice(upto - =
pos); pos =3D upto; break;}
                        pos =3D end;
                        spanStartStyle =3D "";
                    }
                    text =3D allText.slice(at, at =3D styles[i++]);
                    style =3D styleToClass(styles[i++]);
                }
            }
        }

        // DOCUMENT DATA STRUCTURE

        function updateDoc(doc, change, markedSpans, selAfter, =
estimateHeight) {
            function spansFor(n) {return markedSpans ? markedSpans[n] : =
null;}
            function update(line, text, spans) {
                updateLine(line, text, spans, estimateHeight);
                signalLater(line, "change", line, change);
            }

            var from =3D change.from, to =3D change.to, text =3D =
change.text;
            var firstLine =3D getLine(doc, from.line), lastLine =3D =
getLine(doc, to.line);
            var lastText =3D lst(text), lastSpans =3D =
spansFor(text.length - 1), nlines =3D to.line - from.line;

            // First adjust the line structure
            if (from.ch =3D=3D 0 && to.ch =3D=3D 0 && lastText =3D=3D =
"") {
                // This is a whole-line replace. Treated specially to =
make
                // sure line objects move the way they are supposed to.
                for (var i =3D 0, e =3D text.length - 1, added =3D []; i =
< e; ++i)
                    added.push(new Line(text[i], spansFor(i), =
estimateHeight));
                update(lastLine, lastLine.text, lastSpans);
                if (nlines) doc.remove(from.line, nlines);
                if (added.length) doc.insert(from.line, added);
            } else if (firstLine =3D=3D lastLine) {
                if (text.length =3D=3D 1) {
                    update(firstLine, firstLine.text.slice(0, from.ch) + =
lastText + firstLine.text.slice(to.ch), lastSpans);
                } else {
                    for (var added =3D [], i =3D 1, e =3D text.length - =
1; i < e; ++i)
                        added.push(new Line(text[i], spansFor(i), =
estimateHeight));
                    added.push(new Line(lastText + =
firstLine.text.slice(to.ch), lastSpans, estimateHeight));
                    update(firstLine, firstLine.text.slice(0, from.ch) + =
text[0], spansFor(0));
                    doc.insert(from.line + 1, added);
                }
            } else if (text.length =3D=3D 1) {
                update(firstLine, firstLine.text.slice(0, from.ch) + =
text[0] + lastLine.text.slice(to.ch), spansFor(0));
                doc.remove(from.line + 1, nlines);
            } else {
                update(firstLine, firstLine.text.slice(0, from.ch) + =
text[0], spansFor(0));
                update(lastLine, lastText + lastLine.text.slice(to.ch), =
lastSpans);
                for (var i =3D 1, e =3D text.length - 1, added =3D []; i =
< e; ++i)
                    added.push(new Line(text[i], spansFor(i), =
estimateHeight));
                if (nlines > 1) doc.remove(from.line + 1, nlines - 1);
                doc.insert(from.line + 1, added);
            }

            signalLater(doc, "change", doc, change);
            setSelection(doc, selAfter.anchor, selAfter.head, null, =
true);
        }

        function LeafChunk(lines) {
            this.lines =3D lines;
            this.parent =3D null;
            for (var i =3D 0, e =3D lines.length, height =3D 0; i < e; =
++i) {
                lines[i].parent =3D this;
                height +=3D lines[i].height;
            }
            this.height =3D height;
        }

        LeafChunk.prototype =3D {
            chunkSize: function() { return this.lines.length; },
            removeInner: function(at, n) {
                for (var i =3D at, e =3D at + n; i < e; ++i) {
                    var line =3D this.lines[i];
                    this.height -=3D line.height;
                    cleanUpLine(line);
                    signalLater(line, "delete");
                }
                this.lines.splice(at, n);
            },
            collapse: function(lines) {
                lines.splice.apply(lines, [lines.length, =
0].concat(this.lines));
            },
            insertInner: function(at, lines, height) {
                this.height +=3D height;
                this.lines =3D this.lines.slice(0, =
at).concat(lines).concat(this.lines.slice(at));
                for (var i =3D 0, e =3D lines.length; i < e; ++i) =
lines[i].parent =3D this;
            },
            iterN: function(at, n, op) {
                for (var e =3D at + n; at < e; ++at)
                    if (op(this.lines[at])) return true;
            }
        };

        function BranchChunk(children) {
            this.children =3D children;
            var size =3D 0, height =3D 0;
            for (var i =3D 0, e =3D children.length; i < e; ++i) {
                var ch =3D children[i];
                size +=3D ch.chunkSize(); height +=3D ch.height;
                ch.parent =3D this;
            }
            this.size =3D size;
            this.height =3D height;
            this.parent =3D null;
        }

        BranchChunk.prototype =3D {
            chunkSize: function() { return this.size; },
            removeInner: function(at, n) {
                this.size -=3D n;
                for (var i =3D 0; i < this.children.length; ++i) {
                    var child =3D this.children[i], sz =3D =
child.chunkSize();
                    if (at < sz) {
                        var rm =3D Math.min(n, sz - at), oldHeight =3D =
child.height;
                        child.removeInner(at, rm);
                        this.height -=3D oldHeight - child.height;
                        if (sz =3D=3D rm) { this.children.splice(i--, =
1); child.parent =3D null; }
                        if ((n -=3D rm) =3D=3D 0) break;
                        at =3D 0;
                    } else at -=3D sz;
                }
                if (this.size - n < 25) {
                    var lines =3D [];
                    this.collapse(lines);
                    this.children =3D [new LeafChunk(lines)];
                    this.children[0].parent =3D this;
                }
            },
            collapse: function(lines) {
                for (var i =3D 0, e =3D this.children.length; i < e; =
++i) this.children[i].collapse(lines);
            },
            insertInner: function(at, lines, height) {
                this.size +=3D lines.length;
                this.height +=3D height;
                for (var i =3D 0, e =3D this.children.length; i < e; =
++i) {
                    var child =3D this.children[i], sz =3D =
child.chunkSize();
                    if (at <=3D sz) {
                        child.insertInner(at, lines, height);
                        if (child.lines && child.lines.length > 50) {
                            while (child.lines.length > 50) {
                                var spilled =3D =
child.lines.splice(child.lines.length - 25, 25);
                                var newleaf =3D new LeafChunk(spilled);
                                child.height -=3D newleaf.height;
                                this.children.splice(i + 1, 0, newleaf);
                                newleaf.parent =3D this;
                            }
                            this.maybeSpill();
                        }
                        break;
                    }
                    at -=3D sz;
                }
            },
            maybeSpill: function() {
                if (this.children.length <=3D 10) return;
                var me =3D this;
                do {
                    var spilled =3D =
me.children.splice(me.children.length - 5, 5);
                    var sibling =3D new BranchChunk(spilled);
                    if (!me.parent) { // Become the parent node
                        var copy =3D new BranchChunk(me.children);
                        copy.parent =3D me;
                        me.children =3D [copy, sibling];
                        me =3D copy;
                    } else {
                        me.size -=3D sibling.size;
                        me.height -=3D sibling.height;
                        var myIndex =3D indexOf(me.parent.children, me);
                        me.parent.children.splice(myIndex + 1, 0, =
sibling);
                    }
                    sibling.parent =3D me.parent;
                } while (me.children.length > 10);
                me.parent.maybeSpill();
            },
            iterN: function(at, n, op) {
                for (var i =3D 0, e =3D this.children.length; i < e; =
++i) {
                    var child =3D this.children[i], sz =3D =
child.chunkSize();
                    if (at < sz) {
                        var used =3D Math.min(n, sz - at);
                        if (child.iterN(at, used, op)) return true;
                        if ((n -=3D used) =3D=3D 0) break;
                        at =3D 0;
                    } else at -=3D sz;
                }
            }
        };

        var nextDocId =3D 0;
        var Doc =3D CodeMirror.Doc =3D function(text, mode, firstLine) {
            if (!(this instanceof Doc)) return new Doc(text, mode, =
firstLine);
            if (firstLine =3D=3D null) firstLine =3D 0;

            BranchChunk.call(this, [new LeafChunk([new Line("", =
null)])]);
            this.first =3D firstLine;
            this.scrollTop =3D this.scrollLeft =3D 0;
            this.cantEdit =3D false;
            this.history =3D makeHistory();
            this.cleanGeneration =3D 1;
            this.frontier =3D firstLine;
            var start =3D Pos(firstLine, 0);
            this.sel =3D {from: start, to: start, head: start, anchor: =
start, shift: false, extend: false, goalColumn: null};
            this.id =3D ++nextDocId;
            this.modeOption =3D mode;

            if (typeof text =3D=3D "string") text =3D splitLines(text);
            updateDoc(this, {from: start, to: start, text: text}, null, =
{head: start, anchor: start});
        };

        Doc.prototype =3D createObj(BranchChunk.prototype, {
            constructor: Doc,
            iter: function(from, to, op) {
                if (op) this.iterN(from - this.first, to - from, op);
                else this.iterN(this.first, this.first + this.size, =
from);
            },

            insert: function(at, lines) {
                var height =3D 0;
                for (var i =3D 0, e =3D lines.length; i < e; ++i) height =
+=3D lines[i].height;
                this.insertInner(at - this.first, lines, height);
            },
            remove: function(at, n) { this.removeInner(at - this.first, =
n); },

            getValue: function(lineSep) {
                var lines =3D getLines(this, this.first, this.first + =
this.size);
                if (lineSep =3D=3D=3D false) return lines;
                return lines.join(lineSep || "\n");
            },
            setValue: function(code) {
                var top =3D Pos(this.first, 0), last =3D this.first + =
this.size - 1;
                makeChange(this, {from: top, to: Pos(last, getLine(this, =
last).text.length),
                        text: splitLines(code), origin: "setValue"},
                    {head: top, anchor: top}, true);
            },
            replaceRange: function(code, from, to, origin) {
                from =3D clipPos(this, from);
                to =3D to ? clipPos(this, to) : from;
                replaceRange(this, code, from, to, origin);
            },
            getRange: function(from, to, lineSep) {
                var lines =3D getBetween(this, clipPos(this, from), =
clipPos(this, to));
                if (lineSep =3D=3D=3D false) return lines;
                return lines.join(lineSep || "\n");
            },

            getLine: function(line) {var l =3D this.getLineHandle(line); =
return l && l.text;},
            setLine: function(line, text) {
                if (isLine(this, line))
                    replaceRange(this, text, Pos(line, 0), clipPos(this, =
Pos(line)));
            },
            removeLine: function(line) {
                if (line) replaceRange(this, "", clipPos(this, Pos(line =
- 1)), clipPos(this, Pos(line)));
                else replaceRange(this, "", Pos(0, 0), clipPos(this, =
Pos(1, 0)));
            },

            getLineHandle: function(line) {if (isLine(this, line)) =
return getLine(this, line);},
            getLineNumber: function(line) {return lineNo(line);},

            getLineHandleVisualStart: function(line) {
                if (typeof line =3D=3D "number") line =3D getLine(this, =
line);
                return visualLine(this, line);
            },

            lineCount: function() {return this.size;},
            firstLine: function() {return this.first;},
            lastLine: function() {return this.first + this.size - 1;},

            clipPos: function(pos) {return clipPos(this, pos);},

            getCursor: function(start) {
                var sel =3D this.sel, pos;
                if (start =3D=3D null || start =3D=3D "head") pos =3D =
sel.head;
                else if (start =3D=3D "anchor") pos =3D sel.anchor;
                else if (start =3D=3D "end" || start =3D=3D=3D false) =
pos =3D sel.to;
                else pos =3D sel.from;
                return copyPos(pos);
            },
            somethingSelected: function() {return !posEq(this.sel.head, =
this.sel.anchor);},

            setCursor: docOperation(function(line, ch, extend) {
                var pos =3D clipPos(this, typeof line =3D=3D "number" ? =
Pos(line, ch || 0) : line);
                if (extend) extendSelection(this, pos);
                else setSelection(this, pos, pos);
            }),
            setSelection: docOperation(function(anchor, head) {
                setSelection(this, clipPos(this, anchor), clipPos(this, =
head || anchor));
            }),
            extendSelection: docOperation(function(from, to) {
                extendSelection(this, clipPos(this, from), to && =
clipPos(this, to));
            }),

            getSelection: function(lineSep) {return =
this.getRange(this.sel.from, this.sel.to, lineSep);},
            replaceSelection: function(code, collapse, origin) {
                makeChange(this, {from: this.sel.from, to: this.sel.to, =
text: splitLines(code), origin: origin}, collapse || "around");
            },
            undo: docOperation(function() {makeChangeFromHistory(this, =
"undo");}),
            redo: docOperation(function() {makeChangeFromHistory(this, =
"redo");}),

            setExtending: function(val) {this.sel.extend =3D val;},

            historySize: function() {
                var hist =3D this.history;
                return {undo: hist.done.length, redo: =
hist.undone.length};
            },
            clearHistory: function() {this.history =3D =
makeHistory(this.history.maxGeneration);},

            markClean: function() {
                this.cleanGeneration =3D this.changeGeneration();
            },
            changeGeneration: function() {
                this.history.lastOp =3D this.history.lastOrigin =3D =
null;
                return this.history.generation;
            },
            isClean: function (gen) {
                return this.history.generation =3D=3D (gen || =
this.cleanGeneration);
            },

            getHistory: function() {
                return {done: copyHistoryArray(this.history.done),
                    undone: copyHistoryArray(this.history.undone)};
            },
            setHistory: function(histData) {
                var hist =3D this.history =3D =
makeHistory(this.history.maxGeneration);
                hist.done =3D histData.done.slice(0);
                hist.undone =3D histData.undone.slice(0);
            },

            markText: function(from, to, options) {
                return markText(this, clipPos(this, from), clipPos(this, =
to), options, "range");
            },
            setBookmark: function(pos, options) {
                var realOpts =3D {replacedWith: options && =
(options.nodeType =3D=3D null ? options.widget : options),
                    insertLeft: options && options.insertLeft};
                pos =3D clipPos(this, pos);
                return markText(this, pos, pos, realOpts, "bookmark");
            },
            findMarksAt: function(pos) {
                pos =3D clipPos(this, pos);
                var markers =3D [], spans =3D getLine(this, =
pos.line).markedSpans;
                if (spans) for (var i =3D 0; i < spans.length; ++i) {
                    var span =3D spans[i];
                    if ((span.from =3D=3D null || span.from <=3D pos.ch) =
&&
                        (span.to =3D=3D null || span.to >=3D pos.ch))
                        markers.push(span.marker.parent || span.marker);
                }
                return markers;
            },
            getAllMarks: function() {
                var markers =3D [];
                this.iter(function(line) {
                    var sps =3D line.markedSpans;
                    if (sps) for (var i =3D 0; i < sps.length; ++i)
                        if (sps[i].from !=3D null) =
markers.push(sps[i].marker);
                });
                return markers;
            },

            posFromIndex: function(off) {
                var ch, lineNo =3D this.first;
                this.iter(function(line) {
                    var sz =3D line.text.length + 1;
                    if (sz > off) { ch =3D off; return true; }
                    off -=3D sz;
                    ++lineNo;
                });
                return clipPos(this, Pos(lineNo, ch));
            },
            indexFromPos: function (coords) {
                coords =3D clipPos(this, coords);
                var index =3D coords.ch;
                if (coords.line < this.first || coords.ch < 0) return 0;
                this.iter(this.first, coords.line, function (line) {
                    index +=3D line.text.length + 1;
                });
                return index;
            },

            copy: function(copyHistory) {
                var doc =3D new Doc(getLines(this, this.first, =
this.first + this.size), this.modeOption, this.first);
                doc.scrollTop =3D this.scrollTop; doc.scrollLeft =3D =
this.scrollLeft;
                doc.sel =3D {from: this.sel.from, to: this.sel.to, head: =
this.sel.head, anchor: this.sel.anchor,
                    shift: this.sel.shift, extend: false, goalColumn: =
this.sel.goalColumn};
                if (copyHistory) {
                    doc.history.undoDepth =3D this.history.undoDepth;
                    doc.setHistory(this.getHistory());
                }
                return doc;
            },

            linkedDoc: function(options) {
                if (!options) options =3D {};
                var from =3D this.first, to =3D this.first + this.size;
                if (options.from !=3D null && options.from > from) from =
=3D options.from;
                if (options.to !=3D null && options.to < to) to =3D =
options.to;
                var copy =3D new Doc(getLines(this, from, to), =
options.mode || this.modeOption, from);
                if (options.sharedHist) copy.history =3D this.history;
                (this.linked || (this.linked =3D [])).push({doc: copy, =
sharedHist: options.sharedHist});
                copy.linked =3D [{doc: this, isParent: true, sharedHist: =
options.sharedHist}];
                return copy;
            },
            unlinkDoc: function(other) {
                if (other instanceof CodeMirror) other =3D other.doc;
                if (this.linked) for (var i =3D 0; i < =
this.linked.length; ++i) {
                    var link =3D this.linked[i];
                    if (link.doc !=3D other) continue;
                    this.linked.splice(i, 1);
                    other.unlinkDoc(this);
                    break;
                }
                // If the histories were shared, split them again
                if (other.history =3D=3D this.history) {
                    var splitIds =3D [other.id];
                    linkedDocs(other, function(doc) =
{splitIds.push(doc.id);}, true);
                    other.history =3D makeHistory();
                    other.history.done =3D =
copyHistoryArray(this.history.done, splitIds);
                    other.history.undone =3D =
copyHistoryArray(this.history.undone, splitIds);
                }
            },
            iterLinkedDocs: function(f) {linkedDocs(this, f);},

            getMode: function() {return this.mode;},
            getEditor: function() {return this.cm;}
        });

        Doc.prototype.eachLine =3D Doc.prototype.iter;

        // The Doc methods that should be available on CodeMirror =
instances
        var dontDelegate =3D "iter insert remove copy getEditor".split(" =
");
        for (var prop in Doc.prototype) if =
(Doc.prototype.hasOwnProperty(prop) && indexOf(dontDelegate, prop) < 0)
            CodeMirror.prototype[prop] =3D (function(method) {
                return function() {return method.apply(this.doc, =
arguments);};
            })(Doc.prototype[prop]);

        eventMixin(Doc);

        function linkedDocs(doc, f, sharedHistOnly) {
            function propagate(doc, skip, sharedHist) {
                if (doc.linked) for (var i =3D 0; i < doc.linked.length; =
++i) {
                    var rel =3D doc.linked[i];
                    if (rel.doc =3D=3D skip) continue;
                    var shared =3D sharedHist && rel.sharedHist;
                    if (sharedHistOnly && !shared) continue;
                    f(rel.doc, shared);
                    propagate(rel.doc, doc, shared);
                }
            }
            propagate(doc, null, true);
        }

        function attachDoc(cm, doc) {
            if (doc.cm) throw new Error("This document is already in =
use.");
            cm.doc =3D doc;
            doc.cm =3D cm;
            estimateLineHeights(cm);
            loadMode(cm);
            if (!cm.options.lineWrapping) computeMaxLength(cm);
            cm.options.mode =3D doc.modeOption;
            regChange(cm);
        }

        // LINE UTILITIES

        function getLine(chunk, n) {
            n -=3D chunk.first;
            while (!chunk.lines) {
                for (var i =3D 0;; ++i) {
                    var child =3D chunk.children[i], sz =3D =
child.chunkSize();
                    if (n < sz) { chunk =3D child; break; }
                    n -=3D sz;
                }
            }
            return chunk.lines[n];
        }

        function getBetween(doc, start, end) {
            var out =3D [], n =3D start.line;
            doc.iter(start.line, end.line + 1, function(line) {
                var text =3D line.text;
                if (n =3D=3D end.line) text =3D text.slice(0, end.ch);
                if (n =3D=3D start.line) text =3D text.slice(start.ch);
                out.push(text);
                ++n;
            });
            return out;
        }
        function getLines(doc, from, to) {
            var out =3D [];
            doc.iter(from, to, function(line) { out.push(line.text); });
            return out;
        }

        function updateLineHeight(line, height) {
            var diff =3D height - line.height;
            for (var n =3D line; n; n =3D n.parent) n.height +=3D diff;
        }

        function lineNo(line) {
            if (line.parent =3D=3D null) return null;
            var cur =3D line.parent, no =3D indexOf(cur.lines, line);
            for (var chunk =3D cur.parent; chunk; cur =3D chunk, chunk =
=3D chunk.parent) {
                for (var i =3D 0;; ++i) {
                    if (chunk.children[i] =3D=3D cur) break;
                    no +=3D chunk.children[i].chunkSize();
                }
            }
            return no + cur.first;
        }

        function lineAtHeight(chunk, h) {
            var n =3D chunk.first;
            outer: do {
                for (var i =3D 0, e =3D chunk.children.length; i < e; =
++i) {
                    var child =3D chunk.children[i], ch =3D =
child.height;
                    if (h < ch) { chunk =3D child; continue outer; }
                    h -=3D ch;
                    n +=3D child.chunkSize();
                }
                return n;
            } while (!chunk.lines);
            for (var i =3D 0, e =3D chunk.lines.length; i < e; ++i) {
                var line =3D chunk.lines[i], lh =3D line.height;
                if (h < lh) break;
                h -=3D lh;
            }
            return n + i;
        }

        function heightAtLine(cm, lineObj) {
            lineObj =3D visualLine(cm.doc, lineObj);

            var h =3D 0, chunk =3D lineObj.parent;
            for (var i =3D 0; i < chunk.lines.length; ++i) {
                var line =3D chunk.lines[i];
                if (line =3D=3D lineObj) break;
                else h +=3D line.height;
            }
            for (var p =3D chunk.parent; p; chunk =3D p, p =3D =
chunk.parent) {
                for (var i =3D 0; i < p.children.length; ++i) {
                    var cur =3D p.children[i];
                    if (cur =3D=3D chunk) break;
                    else h +=3D cur.height;
                }
            }
            return h;
        }

        function getOrder(line) {
            var order =3D line.order;
            if (order =3D=3D null) order =3D line.order =3D =
bidiOrdering(line.text);
            return order;
        }

        // HISTORY

        function makeHistory(startGen) {
            return {
                // Arrays of history events. Doing something adds an =
event to
                // done and clears undo. Undoing moves events from done =
to
                // undone, redoing moves them in the other direction.
                done: [], undone: [], undoDepth: Infinity,
                // Used to track when changes can be merged into a =
single undo
                // event
                lastTime: 0, lastOp: null, lastOrigin: null,
                // Used by the isClean() method
                generation: startGen || 1, maxGeneration: startGen || 1
            };
        }

        function attachLocalSpans(doc, change, from, to) {
            var existing =3D change["spans_" + doc.id], n =3D 0;
            doc.iter(Math.max(doc.first, from), Math.min(doc.first + =
doc.size, to), function(line) {
                if (line.markedSpans)
                    (existing || (existing =3D change["spans_" + doc.id] =
=3D {}))[n] =3D line.markedSpans;
                ++n;
            });
        }

        function historyChangeFromChange(doc, change) {
            var from =3D { line: change.from.line, ch: change.from.ch };
            var histChange =3D {from: from, to: changeEnd(change), text: =
getBetween(doc, change.from, change.to)};
            attachLocalSpans(doc, histChange, change.from.line, =
change.to.line + 1);
            linkedDocs(doc, function(doc) {attachLocalSpans(doc, =
histChange, change.from.line, change.to.line + 1);}, true);
            return histChange;
        }

        function addToHistory(doc, change, selAfter, opId) {
            var hist =3D doc.history;
            hist.undone.length =3D 0;
            var time =3D +new Date, cur =3D lst(hist.done);

            if (cur &&
                (hist.lastOp =3D=3D opId ||
                    hist.lastOrigin =3D=3D change.origin && =
change.origin &&
                    ((change.origin.charAt(0) =3D=3D "+" && doc.cm && =
hist.lastTime > time - doc.cm.options.historyEventDelay) ||
                        change.origin.charAt(0) =3D=3D "*"))) {
                // Merge this change into the last event
                var last =3D lst(cur.changes);
                if (posEq(change.from, change.to) && posEq(change.from, =
last.to)) {
                    // Optimized case for simple insertion -- don't want =
to add
                    // new changesets for every character typed
                    last.to =3D changeEnd(change);
                } else {
                    // Add new sub-event
                    cur.changes.push(historyChangeFromChange(doc, =
change));
                }
                cur.anchorAfter =3D selAfter.anchor; cur.headAfter =3D =
selAfter.head;
            } else {
                // Can not be merged, start a new event.
                cur =3D {changes: [historyChangeFromChange(doc, =
change)],
                    generation: hist.generation,
                    anchorBefore: doc.sel.anchor, headBefore: =
doc.sel.head,
                    anchorAfter: selAfter.anchor, headAfter: =
selAfter.head};
                hist.done.push(cur);
                hist.generation =3D ++hist.maxGeneration;
                while (hist.done.length > hist.undoDepth)
                    hist.done.shift();
            }
            hist.lastTime =3D time;
            hist.lastOp =3D opId;
            hist.lastOrigin =3D change.origin;
        }

        function removeClearedSpans(spans) {
            if (!spans) return null;
            for (var i =3D 0, out; i < spans.length; ++i) {
                if (spans[i].marker.explicitlyCleared) { if (!out) out =
=3D spans.slice(0, i); }
                else if (out) out.push(spans[i]);
            }
            return !out ? spans : out.length ? out : null;
        }

        function getOldSpans(doc, change) {
            var found =3D change["spans_" + doc.id];
            if (!found) return null;
            for (var i =3D 0, nw =3D []; i < change.text.length; ++i)
                nw.push(removeClearedSpans(found[i]));
            return nw;
        }

        // Used both to provide a JSON-safe object in .getHistory, and, =
when
        // detaching a document, to split the history in two
        function copyHistoryArray(events, newGroup) {
            for (var i =3D 0, copy =3D []; i < events.length; ++i) {
                var event =3D events[i], changes =3D event.changes, =
newChanges =3D [];
                copy.push({changes: newChanges, anchorBefore: =
event.anchorBefore, headBefore: event.headBefore,
                    anchorAfter: event.anchorAfter, headAfter: =
event.headAfter});
                for (var j =3D 0; j < changes.length; ++j) {
                    var change =3D changes[j], m;
                    newChanges.push({from: change.from, to: change.to, =
text: change.text});
                    if (newGroup) for (var prop in change) if (m =3D =
prop.match(/^spans_(\d+)$/)) {
                        if (indexOf(newGroup, Number(m[1])) > -1) {
                            lst(newChanges)[prop] =3D change[prop];
                            delete change[prop];
                        }
                    }
                }
            }
            return copy;
        }

        // Rebasing/resetting history to deal with externally-sourced =
changes

        function rebaseHistSel(pos, from, to, diff) {
            if (to < pos.line) {
                pos.line +=3D diff;
            } else if (from < pos.line) {
                pos.line =3D from;
                pos.ch =3D 0;
            }
        }

        // Tries to rebase an array of history events given a change in =
the
        // document. If the change touches the same lines as the event, =
the
        // event, and everything 'behind' it, is discarded. If the =
change is
        // before the event, the event's positions are updated. Uses a
        // copy-on-write scheme for the positions, to avoid having to
        // reallocate them all on every rebase, but also avoid problems =
with
        // shared position objects being unsafely updated.
        function rebaseHistArray(array, from, to, diff) {
            for (var i =3D 0; i < array.length; ++i) {
                var sub =3D array[i], ok =3D true;
                for (var j =3D 0; j < sub.changes.length; ++j) {
                    var cur =3D sub.changes[j];
                    if (!sub.copied) { cur.from =3D copyPos(cur.from); =
cur.to =3D copyPos(cur.to); }
                    if (to < cur.from.line) {
                        cur.from.line +=3D diff;
                        cur.to.line +=3D diff;
                    } else if (from <=3D cur.to.line) {
                        ok =3D false;
                        break;
                    }
                }
                if (!sub.copied) {
                    sub.anchorBefore =3D copyPos(sub.anchorBefore); =
sub.headBefore =3D copyPos(sub.headBefore);
                    sub.anchorAfter =3D copyPos(sub.anchorAfter); =
sub.readAfter =3D copyPos(sub.headAfter);
                    sub.copied =3D true;
                }
                if (!ok) {
                    array.splice(0, i + 1);
                    i =3D 0;
                } else {
                    rebaseHistSel(sub.anchorBefore); =
rebaseHistSel(sub.headBefore);
                    rebaseHistSel(sub.anchorAfter); =
rebaseHistSel(sub.headAfter);
                }
            }
        }

        function rebaseHist(hist, change) {
            var from =3D change.from.line, to =3D change.to.line, diff =
=3D change.text.length - (to - from) - 1;
            rebaseHistArray(hist.done, from, to, diff);
            rebaseHistArray(hist.undone, from, to, diff);
        }

        // EVENT OPERATORS

        function stopMethod() {e_stop(this);}
        // Ensure an event has a stop method.
        function addStop(event) {
            if (!event.stop) event.stop =3D stopMethod;
            return event;
        }

        function e_preventDefault(e) {
            if (e.preventDefault) e.preventDefault();
            else e.returnValue =3D false;
        }
        function e_stopPropagation(e) {
            if (e.stopPropagation) e.stopPropagation();
            else e.cancelBubble =3D true;
        }
        function e_defaultPrevented(e) {
            return e.defaultPrevented !=3D null ? e.defaultPrevented : =
e.returnValue =3D=3D false;
        }
        function e_stop(e) {e_preventDefault(e); e_stopPropagation(e);}
        CodeMirror.e_stop =3D e_stop;
        CodeMirror.e_preventDefault =3D e_preventDefault;
        CodeMirror.e_stopPropagation =3D e_stopPropagation;

        function e_target(e) {return e.target || e.srcElement;}
        function e_button(e) {
            var b =3D e.which;
            if (b =3D=3D null) {
                if (e.button & 1) b =3D 1;
                else if (e.button & 2) b =3D 3;
                else if (e.button & 4) b =3D 2;
            }
            if (mac && e.ctrlKey && b =3D=3D 1) b =3D 3;
            return b;
        }

        // EVENT HANDLING

        function on(emitter, type, f) {
            if (emitter.addEventListener)
                emitter.addEventListener(type, f, false);
            else if (emitter.attachEvent)
                emitter.attachEvent("on" + type, f);
            else {
                var map =3D emitter._handlers || (emitter._handlers =3D =
{});
                var arr =3D map[type] || (map[type] =3D []);
                arr.push(f);
            }
        }

        function off(emitter, type, f) {
            if (emitter.removeEventListener)
                emitter.removeEventListener(type, f, false);
            else if (emitter.detachEvent)
                emitter.detachEvent("on" + type, f);
            else {
                var arr =3D emitter._handlers && =
emitter._handlers[type];
                if (!arr) return;
                for (var i =3D 0; i < arr.length; ++i)
                    if (arr[i] =3D=3D f) { arr.splice(i, 1); break; }
            }
        }

        function signal(emitter, type /*, values...*/) {
            var arr =3D emitter._handlers && emitter._handlers[type];
            if (!arr) return;
            var args =3D Array.prototype.slice.call(arguments, 2);
            for (var i =3D 0; i < arr.length; ++i) arr[i].apply(null, =
args);
        }

        var delayedCallbacks, delayedCallbackDepth =3D 0;
        function signalLater(emitter, type /*, values...*/) {
            var arr =3D emitter._handlers && emitter._handlers[type];
            if (!arr) return;
            var args =3D Array.prototype.slice.call(arguments, 2);
            if (!delayedCallbacks) {
                ++delayedCallbackDepth;
                delayedCallbacks =3D [];
                setTimeout(fireDelayed, 0);
            }
            function bnd(f) {return function(){f.apply(null, args);};};
            for (var i =3D 0; i < arr.length; ++i)
                delayedCallbacks.push(bnd(arr[i]));
        }

        function signalDOMEvent(cm, e, override) {
            signal(cm, override || e.type, cm, e);
            return e_defaultPrevented(e) || e.codemirrorIgnore;
        }

        function fireDelayed() {
            --delayedCallbackDepth;
            var delayed =3D delayedCallbacks;
            delayedCallbacks =3D null;
            for (var i =3D 0; i < delayed.length; ++i) delayed[i]();
        }

        function hasHandler(emitter, type) {
            var arr =3D emitter._handlers && emitter._handlers[type];
            return arr && arr.length > 0;
        }

        CodeMirror.on =3D on; CodeMirror.off =3D off; CodeMirror.signal =
=3D signal;

        function eventMixin(ctor) {
            ctor.prototype.on =3D function(type, f) {on(this, type, =
f);};
            ctor.prototype.off =3D function(type, f) {off(this, type, =
f);};
        }

        // MISC UTILITIES

        // Number of pixels added to scroller and sizer to hide =
scrollbar
        var scrollerCutOff =3D 30;

        // Returned or thrown by various protocols to signal 'I'm not
        // handling this'.
        var Pass =3D CodeMirror.Pass =3D {toString: function(){return =
"CodeMirror.Pass";}};

        function Delayed() {this.id =3D null;}
        Delayed.prototype =3D {set: function(ms, f) =
{clearTimeout(this.id); this.id =3D setTimeout(f, ms);}};

        // Counts the column offset in a string, taking tabs into =
account.
        // Used mostly to find indentation.
        function countColumn(string, end, tabSize, startIndex, =
startValue) {
            if (end =3D=3D null) {
                end =3D string.search(/[^\s\u00a0]/);
                if (end =3D=3D -1) end =3D string.length;
            }
            for (var i =3D startIndex || 0, n =3D startValue || 0; i < =
end; ++i) {
                if (string.charAt(i) =3D=3D "\t") n +=3D tabSize - (n % =
tabSize);
                else ++n;
            }
            return n;
        }
        CodeMirror.countColumn =3D countColumn;

        var spaceStrs =3D [""];
        function spaceStr(n) {
            while (spaceStrs.length <=3D n)
                spaceStrs.push(lst(spaceStrs) + " ");
            return spaceStrs[n];
        }

        function lst(arr) { return arr[arr.length-1]; }

        function selectInput(node) {
            if (ios) { // Mobile Safari apparently has a bug where =
select() is broken.
                node.selectionStart =3D 0;
                node.selectionEnd =3D node.value.length;
            } else {
                // Suppress mysterious IE10 errors
                try { node.select(); }
                catch(_e) {}
            }
        }

        function indexOf(collection, elt) {
            if (collection.indexOf) return collection.indexOf(elt);
            for (var i =3D 0, e =3D collection.length; i < e; ++i)
                if (collection[i] =3D=3D elt) return i;
            return -1;
        }

        function createObj(base, props) {
            function Obj() {}
            Obj.prototype =3D base;
            var inst =3D new Obj();
            if (props) copyObj(props, inst);
            return inst;
        }

        function copyObj(obj, target) {
            if (!target) target =3D {};
            for (var prop in obj) if (obj.hasOwnProperty(prop)) =
target[prop] =3D obj[prop];
            return target;
        }

        function emptyArray(size) {
            for (var a =3D [], i =3D 0; i < size; ++i) =
a.push(undefined);
            return a;
        }

        function bind(f) {
            var args =3D Array.prototype.slice.call(arguments, 1);
            return function(){return f.apply(null, args);};
        }

        var nonASCIISingleCaseWordChar =3D =
/[\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;
        function isWordChar(ch) {
            return /\w/.test(ch) || ch > "\x80" &&
                (ch.toUpperCase() !=3D ch.toLowerCase() || =
nonASCIISingleCaseWordChar.test(ch));
        }

        function isEmpty(obj) {
            for (var n in obj) if (obj.hasOwnProperty(n) && obj[n]) =
return false;
            return true;
        }

        var isExtendingChar =3D =
/[\u0300-\u036F\u0483-\u0487\u0488-\u0489\u0591-\u05BD\u05BF\u05C1-\u05C2=
\u05C4-\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u=
06E4\u06E7-\u06E8\u06EA-\u06ED\uA66F\uA670-\uA672\uA674-\uA67D\uA69F\udc0=
0-\udfff]/;

        // DOM UTILITIES

        function elt(tag, content, className, style) {
            var e =3D document.createElement(tag);
            if (className) e.className =3D className;
            if (style) e.style.cssText =3D style;
            if (typeof content =3D=3D "string") setTextContent(e, =
content);
            else if (content) for (var i =3D 0; i < content.length; ++i) =
e.appendChild(content[i]);
            return e;
        }

        function removeChildren(e) {
            for (var count =3D e.childNodes.length; count > 0; --count)
                e.removeChild(e.firstChild);
            return e;
        }

        function removeChildrenAndAdd(parent, e) {
            return removeChildren(parent).appendChild(e);
        }

        function setTextContent(e, str) {
            if (ie_lt9) {
                e.innerHTML =3D "";
                e.appendChild(document.createTextNode(str));
            } else e.textContent =3D str;
        }

        function getRect(node) {
            return node.getBoundingClientRect();
        }
        CodeMirror.replaceGetRect =3D function(f) { getRect =3D f; };

        // FEATURE DETECTION

        // Detect drag-and-drop
        var dragAndDrop =3D function() {
            // There is *some* kind of drag-and-drop support in IE6-8, =
but I
            // couldn't get it to work yet.
            if (ie_lt9) return false;
            var div =3D elt('div');
            return "draggable" in div || "dragDrop" in div;
        }();

        // For a reason I have yet to figure out, some browsers disallow
        // word wrapping between certain characters *only* if a new =
inline
        // element is started between them. This makes it hard to =
reliably
        // measure the position of things, since that requires inserting =
an
        // extra span. This terribly fragile set of tests matches the
        // character combinations that suffer from this phenomenon on =
the
        // various browsers.
        function spanAffectsWrapping() { return false; }
        if (gecko) // Only for "$'"
            spanAffectsWrapping =3D function(str, i) {
                return str.charCodeAt(i - 1) =3D=3D 36 && =
str.charCodeAt(i) =3D=3D 39;
            };
        else if (safari && =
!/Version\/([6-9]|\d\d)\b/.test(navigator.userAgent))
            spanAffectsWrapping =3D function(str, i) {
                return /\-[^ \-?]|\?[^ =
!\'\"\),.\-\/:;\?\]\}]/.test(str.slice(i - 1, i + 1));
            };
        else if (webkit && =
!/Chrome\/(?:29|[3-9]\d|\d\d\d)\./.test(navigator.userAgent))
            spanAffectsWrapping =3D function(str, i) {
                if (i > 1 && str.charCodeAt(i - 1) =3D=3D 45) {
                    if (/\w/.test(str.charAt(i - 2)) && =
/[^\-?\.]/.test(str.charAt(i))) return true;
                    if (i > 2 && /[\d\.,]/.test(str.charAt(i - 2)) && =
/[\d\.,]/.test(str.charAt(i))) return false;
                }
                return =
/[~!#%&*)=3D+}\]|\"\.>,:;][({[<]|-[^\-?\.\u2010-\u201f\u2026]|\?[\w~`@#$%=
\^&*(_=3D+{[|><]|=E2=80=A6[\w~`@#$%\^&*(_=3D+{[><]/.test(str.slice(i - =
1, i + 1));
            };

        var knownScrollbarWidth;
        function scrollbarWidth(measure) {
            if (knownScrollbarWidth !=3D null) return =
knownScrollbarWidth;
            var test =3D elt("div", null, null, "width: 50px; height: =
50px; overflow-x: scroll");
            removeChildrenAndAdd(measure, test);
            if (test.offsetWidth)
                knownScrollbarWidth =3D test.offsetHeight - =
test.clientHeight;
            return knownScrollbarWidth || 0;
        }

        var zwspSupported;
        function zeroWidthElement(measure) {
            if (zwspSupported =3D=3D null) {
                var test =3D elt("span", "\u200b");
                removeChildrenAndAdd(measure, elt("span", [test, =
document.createTextNode("x")]));
                if (measure.firstChild.offsetHeight !=3D 0)
                    zwspSupported =3D test.offsetWidth <=3D 1 && =
test.offsetHeight > 2 && !ie_lt8;
            }
            if (zwspSupported) return elt("span", "\u200b");
            else return elt("span", "\u00a0", null, "display: =
inline-block; width: 1px; margin-right: -1px");
        }

        // See if "".split is the broken IE version, if so, provide an
        // alternative way to split lines.
        var splitLines =3D "\n\nb".split(/\n/).length !=3D 3 ? =
function(string) {
            var pos =3D 0, result =3D [], l =3D string.length;
            while (pos <=3D l) {
                var nl =3D string.indexOf("\n", pos);
                if (nl =3D=3D -1) nl =3D string.length;
                var line =3D string.slice(pos, string.charAt(nl - 1) =
=3D=3D "\r" ? nl - 1 : nl);
                var rt =3D line.indexOf("\r");
                if (rt !=3D -1) {
                    result.push(line.slice(0, rt));
                    pos +=3D rt + 1;
                } else {
                    result.push(line);
                    pos =3D nl + 1;
                }
            }
            return result;
        } : function(string){return string.split(/\r\n?|\n/);};
        CodeMirror.splitLines =3D splitLines;

        var hasSelection =3D window.getSelection ? function(te) {
            try { return te.selectionStart !=3D te.selectionEnd; }
            catch(e) { return false; }
        } : function(te) {
            try {var range =3D =
te.ownerDocument.selection.createRange();}
            catch(e) {}
            if (!range || range.parentElement() !=3D te) return false;
            return range.compareEndPoints("StartToEnd", range) !=3D 0;
        };

        var hasCopyEvent =3D (function() {
            var e =3D elt("div");
            if ("oncopy" in e) return true;
            e.setAttribute("oncopy", "return;");
            return typeof e.oncopy =3D=3D 'function';
        })();

        // KEY NAMING

        var keyNames =3D {3: "Enter", 8: "Backspace", 9: "Tab", 13: =
"Enter", 16: "Shift", 17: "Ctrl", 18: "Alt",
            19: "Pause", 20: "CapsLock", 27: "Esc", 32: "Space", 33: =
"PageUp", 34: "PageDown", 35: "End",
            36: "Home", 37: "Left", 38: "Up", 39: "Right", 40: "Down", =
44: "PrintScrn", 45: "Insert",
            46: "Delete", 59: ";", 91: "Mod", 92: "Mod", 93: "Mod", 109: =
"-", 107: "=3D", 127: "Delete",
            186: ";", 187: "=3D", 188: ",", 189: "-", 190: ".", 191: =
"/", 192: "`", 219: "[", 220: "\\",
            221: "]", 222: "'", 63276: "PageUp", 63277: "PageDown", =
63275: "End", 63273: "Home",
            63234: "Left", 63232: "Up", 63235: "Right", 63233: "Down", =
63302: "Insert", 63272: "Delete"};
        CodeMirror.keyNames =3D keyNames;
        (function() {
            // Number keys
            for (var i =3D 0; i < 10; i++) keyNames[i + 48] =3D =
String(i);
            // Alphabetic keys
            for (var i =3D 65; i <=3D 90; i++) keyNames[i] =3D =
String.fromCharCode(i);
            // Function keys
            for (var i =3D 1; i <=3D 12; i++) keyNames[i + 111] =3D =
keyNames[i + 63235] =3D "F" + i;
        })();

        // BIDI HELPERS

        function iterateBidiSections(order, from, to, f) {
            if (!order) return f(from, to, "ltr");
            var found =3D false;
            for (var i =3D 0; i < order.length; ++i) {
                var part =3D order[i];
                if (part.from < to && part.to > from || from =3D=3D to =
&& part.to =3D=3D from) {
                    f(Math.max(part.from, from), Math.min(part.to, to), =
part.level =3D=3D 1 ? "rtl" : "ltr");
                    found =3D true;
                }
            }
            if (!found) f(from, to, "ltr");
        }

        function bidiLeft(part) { return part.level % 2 ? part.to : =
part.from; }
        function bidiRight(part) { return part.level % 2 ? part.from : =
part.to; }

        function lineLeft(line) { var order =3D getOrder(line); return =
order ? bidiLeft(order[0]) : 0; }
        function lineRight(line) {
            var order =3D getOrder(line);
            if (!order) return line.text.length;
            return bidiRight(lst(order));
        }

        function lineStart(cm, lineN) {
            var line =3D getLine(cm.doc, lineN);
            var visual =3D visualLine(cm.doc, line);
            if (visual !=3D line) lineN =3D lineNo(visual);
            var order =3D getOrder(visual);
            var ch =3D !order ? 0 : order[0].level % 2 ? =
lineRight(visual) : lineLeft(visual);
            return Pos(lineN, ch);
        }
        function lineEnd(cm, lineN) {
            var merged, line;
            while (merged =3D collapsedSpanAtEnd(line =3D =
getLine(cm.doc, lineN)))
                lineN =3D merged.find().to.line;
            var order =3D getOrder(line);
            var ch =3D !order ? line.text.length : order[0].level % 2 ? =
lineLeft(line) : lineRight(line);
            return Pos(lineN, ch);
        }

        function compareBidiLevel(order, a, b) {
            var linedir =3D order[0].level;
            if (a =3D=3D linedir) return true;
            if (b =3D=3D linedir) return false;
            return a < b;
        }
        var bidiOther;
        function getBidiPartAt(order, pos) {
            for (var i =3D 0, found; i < order.length; ++i) {
                var cur =3D order[i];
                if (cur.from < pos && cur.to > pos) { bidiOther =3D =
null; return i; }
                if (cur.from =3D=3D pos || cur.to =3D=3D pos) {
                    if (found =3D=3D null) {
                        found =3D i;
                    } else if (compareBidiLevel(order, cur.level, =
order[found].level)) {
                        bidiOther =3D found;
                        return i;
                    } else {
                        bidiOther =3D i;
                        return found;
                    }
                }
            }
            bidiOther =3D null;
            return found;
        }

        function moveInLine(line, pos, dir, byUnit) {
            if (!byUnit) return pos + dir;
            do pos +=3D dir;
            while (pos > 0 && =
isExtendingChar.test(line.text.charAt(pos)));
            return pos;
        }

        // This is somewhat involved. It is needed in order to move
        // 'visually' through bi-directional text -- i.e., pressing left
        // should make the cursor go left, even when in RTL text. The
        // tricky part is the 'jumps', where RTL and LTR text touch each
        // other. This often requires the cursor offset to move more =
than
        // one unit, in order to visually move one unit.
        function moveVisually(line, start, dir, byUnit) {
            var bidi =3D getOrder(line);
            if (!bidi) return moveLogically(line, start, dir, byUnit);
            var pos =3D getBidiPartAt(bidi, start), part =3D bidi[pos];
            var target =3D moveInLine(line, start, part.level % 2 ? -dir =
: dir, byUnit);

            for (;;) {
                if (target > part.from && target < part.to) return =
target;
                if (target =3D=3D part.from || target =3D=3D part.to) {
                    if (getBidiPartAt(bidi, target) =3D=3D pos) return =
target;
                    part =3D bidi[pos +=3D dir];
                    return (dir > 0) =3D=3D part.level % 2 ? part.to : =
part.from;
                } else {
                    part =3D bidi[pos +=3D dir];
                    if (!part) return null;
                    if ((dir > 0) =3D=3D part.level % 2)
                        target =3D moveInLine(line, part.to, -1, =
byUnit);
                    else
                        target =3D moveInLine(line, part.from, 1, =
byUnit);
                }
            }
        }

        function moveLogically(line, start, dir, byUnit) {
            var target =3D start + dir;
            if (byUnit) while (target > 0 && =
isExtendingChar.test(line.text.charAt(target))) target +=3D dir;
            return target < 0 || target > line.text.length ? null : =
target;
        }

        // Bidirectional ordering algorithm
        // See http://unicode.org/reports/tr9/tr9-13.html for the =
algorithm
        // that this (partially) implements.

        // One-char codes used for character types:
        // L (L):   Left-to-Right
        // R (R):   Right-to-Left
        // r (AL):  Right-to-Left Arabic
        // 1 (EN):  European Number
        // + (ES):  European Number Separator
        // % (ET):  European Number Terminator
        // n (AN):  Arabic Number
        // , (CS):  Common Number Separator
        // m (NSM): Non-Spacing Mark
        // b (BN):  Boundary Neutral
        // s (B):   Paragraph Separator
        // t (S):   Segment Separator
        // w (WS):  Whitespace
        // N (ON):  Other Neutrals

        // Returns null if characters are ordered as they appear
        // (left-to-right), or an array of sections ({from, to, level}
        // objects) in the order in which they occur visually.
        var bidiOrdering =3D (function() {
            // Character types for codepoints 0 to 0xff
            var lowTypes =3D =
"bbbbbbbbbtstwsbbbbbbbbbbbbbbssstwNN%%%NNNNNN,N,N1111111111NNNNNNNLLLLLLL=
LLLLLLLLLLLLLLLLLLLNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNbbbbbbsbbbbbbbbbbb=
bbbbbbbbbbbbbbb,N%%%%NNNNLNNNNN%%11NLNNN1LNNNNNLLLLLLLLLLLLLLLLLLLLLLLNLL=
LLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLL";
            // Character types for codepoints 0x600 to 0x6ff
            var arabicTypes =3D =
"rrrrrrrrrrrr,rNNmmmmmmrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr=
rrrmmmmmmmmmmmmmmrrrrrrrnnnnnnnnnn%nnrrrmrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr=
rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrmmmm=
mmmmmmmmmmmmmmmNmmmmrrrrrrrrrrrrrrrrrr";
            function charType(code) {
                if (code <=3D 0xff) return lowTypes.charAt(code);
                else if (0x590 <=3D code && code <=3D 0x5f4) return "R";
                else if (0x600 <=3D code && code <=3D 0x6ff) return =
arabicTypes.charAt(code - 0x600);
                else if (0x700 <=3D code && code <=3D 0x8ac) return "r";
                else return "L";
            }

            var bidiRE =3D /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac]/;
            var isNeutral =3D /[stwN]/, isStrong =3D /[LRr]/, =
countsAsLeft =3D /[Lb1n]/, countsAsNum =3D /[1n]/;
            // Browsers seem to always treat the boundaries of block =
elements as being L.
            var outerType =3D "L";

            return function(str) {
                if (!bidiRE.test(str)) return false;
                var len =3D str.length, types =3D [];
                for (var i =3D 0, type; i < len; ++i)
                    types.push(type =3D charType(str.charCodeAt(i)));

                // W1. Examine each non-spacing mark (NSM) in the level =
run, and
                // change the type of the NSM to the type of the =
previous
                // character. If the NSM is at the start of the level =
run, it will
                // get the type of sor.
                for (var i =3D 0, prev =3D outerType; i < len; ++i) {
                    var type =3D types[i];
                    if (type =3D=3D "m") types[i] =3D prev;
                    else prev =3D type;
                }

                // W2. Search backwards from each instance of a European =
number
                // until the first strong type (R, L, AL, or sor) is =
found. If an
                // AL is found, change the type of the European number =
to Arabic
                // number.
                // W3. Change all ALs to R.
                for (var i =3D 0, cur =3D outerType; i < len; ++i) {
                    var type =3D types[i];
                    if (type =3D=3D "1" && cur =3D=3D "r") types[i] =3D =
"n";
                    else if (isStrong.test(type)) { cur =3D type; if =
(type =3D=3D "r") types[i] =3D "R"; }
                }

                // W4. A single European separator between two European =
numbers
                // changes to a European number. A single common =
separator between
                // two numbers of the same type changes to that type.
                for (var i =3D 1, prev =3D types[0]; i < len - 1; ++i) {
                    var type =3D types[i];
                    if (type =3D=3D "+" && prev =3D=3D "1" && types[i+1] =
=3D=3D "1") types[i] =3D "1";
                    else if (type =3D=3D "," && prev =3D=3D types[i+1] =
&&
                        (prev =3D=3D "1" || prev =3D=3D "n")) types[i] =
=3D prev;
                    prev =3D type;
                }

                // W5. A sequence of European terminators adjacent to =
European
                // numbers changes to all European numbers.
                // W6. Otherwise, separators and terminators change to =
Other
                // Neutral.
                for (var i =3D 0; i < len; ++i) {
                    var type =3D types[i];
                    if (type =3D=3D ",") types[i] =3D "N";
                    else if (type =3D=3D "%") {
                        for (var end =3D i + 1; end < len && types[end] =
=3D=3D "%"; ++end) {}
                        var replace =3D (i && types[i-1] =3D=3D "!") || =
(end < len - 1 && types[end] =3D=3D "1") ? "1" : "N";
                        for (var j =3D i; j < end; ++j) types[j] =3D =
replace;
                        i =3D end - 1;
                    }
                }

                // W7. Search backwards from each instance of a European =
number
                // until the first strong type (R, L, or sor) is found. =
If an L is
                // found, then change the type of the European number to =
L.
                for (var i =3D 0, cur =3D outerType; i < len; ++i) {
                    var type =3D types[i];
                    if (cur =3D=3D "L" && type =3D=3D "1") types[i] =3D =
"L";
                    else if (isStrong.test(type)) cur =3D type;
                }

                // N1. A sequence of neutrals takes the direction of the
                // surrounding strong text if the text on both sides has =
the same
                // direction. European and Arabic numbers act as if they =
were R in
                // terms of their influence on neutrals. =
Start-of-level-run (sor)
                // and end-of-level-run (eor) are used at level run =
boundaries.
                // N2. Any remaining neutrals take the embedding =
direction.
                for (var i =3D 0; i < len; ++i) {
                    if (isNeutral.test(types[i])) {
                        for (var end =3D i + 1; end < len && =
isNeutral.test(types[end]); ++end) {}
                        var before =3D (i ? types[i-1] : outerType) =
=3D=3D "L";
                        var after =3D (end < len - 1 ? types[end] : =
outerType) =3D=3D "L";
                        var replace =3D before || after ? "L" : "R";
                        for (var j =3D i; j < end; ++j) types[j] =3D =
replace;
                        i =3D end - 1;
                    }
                }

                // Here we depart from the documented algorithm, in =
order to avoid
                // building up an actual levels array. Since there are =
only three
                // levels (0, 1, 2) in an implementation that doesn't =
take
                // explicit embedding into account, we can build up the =
order on
                // the fly, without following the level-based algorithm.
                var order =3D [], m;
                for (var i =3D 0; i < len;) {
                    if (countsAsLeft.test(types[i])) {
                        var start =3D i;
                        for (++i; i < len && =
countsAsLeft.test(types[i]); ++i) {}
                        order.push({from: start, to: i, level: 0});
                    } else {
                        var pos =3D i, at =3D order.length;
                        for (++i; i < len && types[i] !=3D "L"; ++i) {}
                        for (var j =3D pos; j < i;) {
                            if (countsAsNum.test(types[j])) {
                                if (pos < j) order.splice(at, 0, {from: =
pos, to: j, level: 1});
                                var nstart =3D j;
                                for (++j; j < i && =
countsAsNum.test(types[j]); ++j) {}
                                order.splice(at, 0, {from: nstart, to: =
j, level: 2});
                                pos =3D j;
                            } else ++j;
                        }
                        if (pos < i) order.splice(at, 0, {from: pos, to: =
i, level: 1});
                    }
                }
                if (order[0].level =3D=3D 1 && (m =3D =
str.match(/^\s+/))) {
                    order[0].from =3D m[0].length;
                    order.unshift({from: 0, to: m[0].length, level: 0});
                }
                if (lst(order).level =3D=3D 1 && (m =3D =
str.match(/\s+$/))) {
                    lst(order).to -=3D m[0].length;
                    order.push({from: len - m[0].length, to: len, level: =
0});
                }
                if (order[0].level !=3D lst(order).level)
                    order.push({from: len, to: len, level: =
order[0].level});

                return order;
            };
        })();

        // THE END

        CodeMirror.version =3D "3.15.0";

        return CodeMirror;
    })();

    var listRE =3D /^(\s*)([*+-]|(\d+)\.)([\w+(\s+\w+)]|[\s*])/,
        emptyListRE =3D /^(\s*)([*+-]|(\d+)\.)(\s*)$/,
        unorderedBullets =3D '*+-';

    var inListState =3D function(cm, pos){
        return cm.getStateAfter(pos.line).list || null;
    };

    var inListOrNot =3D function(cm){
        var pos =3D cm.getCursor();
        return inListState(cm, pos);
    };

    CodeMirror.commands.shiftTabAndIndentContinueMarkdownList =3D =
function(cm){
        var inList =3D inListOrNot(cm);

        if(inList !=3D=3D null){
            cm.execCommand('insertTab');
            return;
        }

        cm.execCommand('indentLess');
    };

    CodeMirror.commands.tabAndIndentContinueMarkdownList =3D =
function(cm){
        var inList =3D inListOrNot(cm);

        if(inList !=3D=3D null){
            cm.execCommand('insertTab');
            return;
        }

        cm.execCommand('indentMore');
    };

    CodeMirror.commands.newlineAndIndentContinueMarkdownList =3D =
function(cm){
        var pos, tok, match, emptyMatch, inList;

        pos =3D cm.getCursor();
        tok =3D cm.getTokenAt(pos);
        emptyMatch =3D cm.getLine(pos.line).match(emptyListRE);
        inList =3D inListState(cm, pos);

        if (!inList && emptyMatch){
            cm.replaceRange("", {line: pos.line , ch:tok.start}, =
{line:pos.line , ch:tok.end});
            cm.execCommand('delLineLeft');
            cm.execCommand('newlineAndIndent');
            return;
        }

        if (!inList || !(match =3D cm.getLine(pos.line).match(listRE))) =
{
            cm.execCommand('newlineAndIndent');
            return;
        }

        var indent =3D match[1], after =3D " ";
        var bullet =3D unorderedBullets.indexOf(match[2]) >=3D 0
            ? match[2]
            : (parseInt(match[3], 10) + 1) + '.';

        cm.replaceSelection('\n' + indent + bullet + after, 'end');
    };

    CodeMirror.defineMode("xml", function(config, parserConfig) {
        var indentUnit =3D config.indentUnit;
        var multilineTagIndentFactor =3D =
parserConfig.multilineTagIndentFactor || 1;
        var multilineTagIndentPastTag =3D =
parserConfig.multilineTagIndentPastTag || true;

        var Kludges =3D parserConfig.htmlMode ? {
            autoSelfClosers: {'area': true, 'base': true, 'br': true, =
'col': true, 'command': true,
                'embed': true, 'frame': true, 'hr': true, 'img': true, =
'input': true,
                'keygen': true, 'link': true, 'meta': true, 'param': =
true, 'source': true,
                'track': true, 'wbr': true},
            implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, =
'option': true, 'p': true,
                'rp': true, 'rt': true, 'tbody': true, 'td': true, =
'tfoot': true,
                'th': true, 'tr': true},
            contextGrabbers: {
                'dd': {'dd': true, 'dt': true},
                'dt': {'dd': true, 'dt': true},
                'li': {'li': true},
                'option': {'option': true, 'optgroup': true},
                'optgroup': {'optgroup': true},
                'p': {'address': true, 'article': true, 'aside': true, =
'blockquote': true, 'dir': true,
                    'div': true, 'dl': true, 'fieldset': true, 'footer': =
true, 'form': true,
                    'h1': true, 'h2': true, 'h3': true, 'h4': true, =
'h5': true, 'h6': true,
                    'header': true, 'hgroup': true, 'hr': true, 'menu': =
true, 'nav': true, 'ol': true,
                    'p': true, 'pre': true, 'section': true, 'table': =
true, 'ul': true},
                'rp': {'rp': true, 'rt': true},
                'rt': {'rp': true, 'rt': true},
                'tbody': {'tbody': true, 'tfoot': true},
                'td': {'td': true, 'th': true},
                'tfoot': {'tbody': true},
                'th': {'td': true, 'th': true},
                'thead': {'tbody': true, 'tfoot': true},
                'tr': {'tr': true}
            },
            doNotIndent: {"pre": true},
            allowUnquoted: true,
            allowMissing: true
        } : {
            autoSelfClosers: {},
            implicitlyClosed: {},
            contextGrabbers: {},
            doNotIndent: {},
            allowUnquoted: false,
            allowMissing: false
        };
        var alignCDATA =3D parserConfig.alignCDATA;

        // Return variables for tokenizers
        var tagName, type;

        function inText(stream, state) {
            function chain(parser) {
                state.tokenize =3D parser;
                return parser(stream, state);
            }

            var ch =3D stream.next();
            if (ch =3D=3D "<") {
                if (stream.eat("!")) {
                    if (stream.eat("[")) {
                        if (stream.match("CDATA[")) return =
chain(inBlock("atom", "]]>"));
                        else return null;
                    } else if (stream.match("--")) {
                        return chain(inBlock("comment", "-->"));
                    } else if (stream.match("DOCTYPE", true, true)) {
                        stream.eatWhile(/[\w\._\-]/);
                        return chain(doctype(1));
                    } else {
                        return null;
                    }
                } else if (stream.eat("?")) {
                    stream.eatWhile(/[\w\._\-]/);
                    state.tokenize =3D inBlock("meta", "?>");
                    return "meta";
                } else {
                    var isClose =3D stream.eat("/");
                    tagName =3D "";
                    var c;
                    while ((c =3D =
stream.eat(/[^\s\u00a0=3D<>\"\'\/?]/))) tagName +=3D c;
                    if (!tagName) return "error";
                    type =3D isClose ? "closeTag" : "openTag";
                    state.tokenize =3D inTag;
                    return "tag";
                }
            } else if (ch =3D=3D "&") {
                var ok;
                if (stream.eat("#")) {
                    if (stream.eat("x")) {
                        ok =3D stream.eatWhile(/[a-fA-F\d]/) && =
stream.eat(";");
                    } else {
                        ok =3D stream.eatWhile(/[\d]/) && =
stream.eat(";");
                    }
                } else {
                    ok =3D stream.eatWhile(/[\w\.\-:]/) && =
stream.eat(";");
                }
                return ok ? "atom" : "error";
            } else {
                stream.eatWhile(/[^&<]/);
                return null;
            }
        }

        function inTag(stream, state) {
            var ch =3D stream.next();
            if (ch =3D=3D ">" || (ch =3D=3D "/" && stream.eat(">"))) {
                state.tokenize =3D inText;
                type =3D ch =3D=3D ">" ? "endTag" : "selfcloseTag";
                return "tag";
            } else if (ch =3D=3D "=3D") {
                type =3D "equals";
                return null;
            } else if (ch =3D=3D "<") {
                return "error";
            } else if (/[\'\"]/.test(ch)) {
                state.tokenize =3D inAttribute(ch);
                state.stringStartCol =3D stream.column();
                return state.tokenize(stream, state);
            } else {
                stream.eatWhile(/[^\s\u00a0=3D<>\"\']/);
                return "word";
            }
        }

        function inAttribute(quote) {
            var closure =3D function(stream, state) {
                while (!stream.eol()) {
                    if (stream.next() =3D=3D quote) {
                        state.tokenize =3D inTag;
                        break;
                    }
                }
                return "string";
            };
            closure.isInAttribute =3D true;
            return closure;
        }

        function inBlock(style, terminator) {
            return function(stream, state) {
                while (!stream.eol()) {
                    if (stream.match(terminator)) {
                        state.tokenize =3D inText;
                        break;
                    }
                    stream.next();
                }
                return style;
            };
        }
        function doctype(depth) {
            return function(stream, state) {
                var ch;
                while ((ch =3D stream.next()) !=3D null) {
                    if (ch =3D=3D "<") {
                        state.tokenize =3D doctype(depth + 1);
                        return state.tokenize(stream, state);
                    } else if (ch =3D=3D ">") {
                        if (depth =3D=3D 1) {
                            state.tokenize =3D inText;
                            break;
                        } else {
                            state.tokenize =3D doctype(depth - 1);
                            return state.tokenize(stream, state);
                        }
                    }
                }
                return "meta";
            };
        }

        var curState, curStream, setStyle;
        function pass() {
            for (var i =3D arguments.length - 1; i >=3D 0; i--) =
curState.cc.push(arguments[i]);
        }
        function cont() {
            pass.apply(null, arguments);
            return true;
        }

        function pushContext(tagName, startOfLine) {
            var noIndent =3D Kludges.doNotIndent.hasOwnProperty(tagName) =
|| (curState.context && curState.context.noIndent);
            curState.context =3D {
                prev: curState.context,
                tagName: tagName,
                indent: curState.indented,
                startOfLine: startOfLine,
                noIndent: noIndent
            };
        }
        function popContext() {
            if (curState.context) curState.context =3D =
curState.context.prev;
        }

        function element(type) {
            if (type =3D=3D "openTag") {
                curState.tagName =3D tagName;
                curState.tagStart =3D curStream.column();
                return cont(attributes, endtag(curState.startOfLine));
            } else if (type =3D=3D "closeTag") {
                var err =3D false;
                if (curState.context) {
                    if (curState.context.tagName !=3D tagName) {
                        if =
(Kludges.implicitlyClosed.hasOwnProperty(curState.context.tagName.toLower=
Case())) {
                            popContext();
                        }
                        err =3D !curState.context || =
curState.context.tagName !=3D tagName;
                    }
                } else {
                    err =3D true;
                }
                if (err) setStyle =3D "error";
                return cont(endclosetag(err));
            }
            return cont();
        }
        function endtag(startOfLine) {
            return function(type) {
                var tagName =3D curState.tagName;
                curState.tagName =3D curState.tagStart =3D null;
                if (type =3D=3D "selfcloseTag" ||
                    (type =3D=3D "endTag" && =
Kludges.autoSelfClosers.hasOwnProperty(tagName.toLowerCase()))) {
                    maybePopContext(tagName.toLowerCase());
                    return cont();
                }
                if (type =3D=3D "endTag") {
                    maybePopContext(tagName.toLowerCase());
                    pushContext(tagName, startOfLine);
                    return cont();
                }
                return cont();
            };
        }
        function endclosetag(err) {
            return function(type) {
                if (err) setStyle =3D "error";
                if (type =3D=3D "endTag") { popContext(); return cont(); =
}
                setStyle =3D "error";
                return cont(arguments.callee);
            };
        }
        function maybePopContext(nextTagName) {
            var parentTagName;
            while (true) {
                if (!curState.context) {
                    return;
                }
                parentTagName =3D =
curState.context.tagName.toLowerCase();
                if =
(!Kludges.contextGrabbers.hasOwnProperty(parentTagName) ||
                    =
!Kludges.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {
                    return;
                }
                popContext();
            }
        }

        function attributes(type) {
            if (type =3D=3D "word") {setStyle =3D "attribute"; return =
cont(attribute, attributes);}
            if (type =3D=3D "endTag" || type =3D=3D "selfcloseTag") =
return pass();
            setStyle =3D "error";
            return cont(attributes);
        }
        function attribute(type) {
            if (type =3D=3D "equals") return cont(attvalue, attributes);
            if (!Kludges.allowMissing) setStyle =3D "error";
            else if (type =3D=3D "word") setStyle =3D "attribute";
            return (type =3D=3D "endTag" || type =3D=3D "selfcloseTag") =
? pass() : cont();
        }
        function attvalue(type) {
            if (type =3D=3D "string") return cont(attvaluemaybe);
            if (type =3D=3D "word" && Kludges.allowUnquoted) {setStyle =
=3D "string"; return cont();}
            setStyle =3D "error";
            return (type =3D=3D "endTag" || type =3D=3D "selfCloseTag") =
? pass() : cont();
        }
        function attvaluemaybe(type) {
            if (type =3D=3D "string") return cont(attvaluemaybe);
            else return pass();
        }

        return {
            startState: function() {
                return {tokenize: inText, cc: [], indented: 0, =
startOfLine: true, tagName: null, tagStart: null, context: null};
            },

            token: function(stream, state) {
                if (!state.tagName && stream.sol()) {
                    state.startOfLine =3D true;
                    state.indented =3D stream.indentation();
                }
                if (stream.eatSpace()) return null;

                setStyle =3D type =3D tagName =3D null;
                var style =3D state.tokenize(stream, state);
                state.type =3D type;
                if ((style || type) && style !=3D "comment") {
                    curState =3D state; curStream =3D stream;
                    while (true) {
                        var comb =3D state.cc.pop() || element;
                        if (comb(type || style)) break;
                    }
                }
                state.startOfLine =3D false;
                return setStyle || style;
            },

            indent: function(state, textAfter, fullLine) {
                var context =3D state.context;
                // Indent multi-line strings (e.g. css).
                if (state.tokenize.isInAttribute) {
                    return state.stringStartCol + 1;
                }
                if ((state.tokenize !=3D inTag && state.tokenize !=3D =
inText) ||
                    context && context.noIndent)
                    return fullLine ? fullLine.match(/^(\s*)/)[0].length =
: 0;
                // Indent the starts of attribute names.
                if (state.tagName) {
                    if (multilineTagIndentPastTag)
                        return state.tagStart + state.tagName.length + =
2;
                    else
                        return state.tagStart + indentUnit * =
multilineTagIndentFactor;
                }
                if (alignCDATA && /<!\[CDATA\[/.test(textAfter)) return =
0;
                if (context && /^<\//.test(textAfter))
                    context =3D context.prev;
                while (context && !context.startOfLine)
                    context =3D context.prev;
                if (context) return context.indent + indentUnit;
                else return 0;
            },

            electricChars: "/",
            blockCommentStart: "<!--",
            blockCommentEnd: "-->",

            configuration: parserConfig.htmlMode ? "html" : "xml",
            helperType: parserConfig.htmlMode ? "html" : "xml"
        };
    });

    CodeMirror.defineMIME("text/xml", "xml");
    CodeMirror.defineMIME("application/xml", "xml");
    if (!CodeMirror.mimeModes.hasOwnProperty("text/html"))
        CodeMirror.defineMIME("text/html", {name: "xml", htmlMode: =
true});

    CodeMirror.defineMode("markdown", function(cmCfg, modeCfg) {

        var htmlFound =3D CodeMirror.modes.hasOwnProperty("xml");
        var htmlMode =3D CodeMirror.getMode(cmCfg, htmlFound ? {name: =
"xml", htmlMode: true} : "text/plain");
        var aliases =3D {
            html: "htmlmixed",
            js: "javascript",
            json: "application/json",
            c: "text/x-csrc",
            "c++": "text/x-c++src",
            java: "text/x-java",
            csharp: "text/x-csharp",
            "c#": "text/x-csharp",
            scala: "text/x-scala"
        };

        var getMode =3D (function () {
            var i, modes =3D {}, mimes =3D {}, mime;

            var list =3D [];
            for (var m in CodeMirror.modes)
                if (CodeMirror.modes.propertyIsEnumerable(m)) =
list.push(m);
            for (i =3D 0; i < list.length; i++) {
                modes[list[i]] =3D list[i];
            }
            var mimesList =3D [];
            for (var m in CodeMirror.mimeModes)
                if (CodeMirror.mimeModes.propertyIsEnumerable(m))
                    mimesList.push({mime: m, mode: =
CodeMirror.mimeModes[m]});
            for (i =3D 0; i < mimesList.length; i++) {
                mime =3D mimesList[i].mime;
                mimes[mime] =3D mimesList[i].mime;
            }

            for (var a in aliases) {
                if (aliases[a] in modes || aliases[a] in mimes)
                    modes[a] =3D aliases[a];
            }

            return function (lang) {
                return modes[lang] ? CodeMirror.getMode(cmCfg, =
modes[lang]) : null;
            };
        }());

        // Should underscores in words open/close em/strong?
        if (modeCfg.underscoresBreakWords =3D=3D=3D undefined)
            modeCfg.underscoresBreakWords =3D true;

        // Turn on fenced code blocks? ("```" to start/end)
        if (modeCfg.fencedCodeBlocks =3D=3D=3D undefined) =
modeCfg.fencedCodeBlocks =3D false;

        // Turn on task lists? ("- [ ] " and "- [x] ")
        if (modeCfg.taskLists =3D=3D=3D undefined) modeCfg.taskLists =3D =
false;

        var codeDepth =3D 0;

        var header   =3D 'header'
            ,   code     =3D 'comment'
            ,   quote1   =3D 'atom'
            ,   quote2   =3D 'number'
            ,   list1    =3D 'variable-2'
            ,   list2    =3D 'variable-3'
            ,   list3    =3D 'keyword'
            ,   hr       =3D 'hr'
            ,   image    =3D 'tag'
            ,   linkinline =3D 'link'
            ,   linkemail =3D 'link'
            ,   linktext =3D 'link'
            ,   linkhref =3D 'string'
            ,   em       =3D 'em'
            ,   strong   =3D 'strong'
            ,   strike   =3D 'strike';

        var hrRE =3D /^([*\-=3D_])(?:\s*\1){4,}\s*$/
            ,   ulRE =3D /^[*\-+]\s+/
            ,   olRE =3D /^[0-9]+\.\s+/
            ,   taskListRE =3D /^\[(x| )\](?=3D\s)/ // Must follow ulRE =
or olRE
            ,   headerRE =3D /^(?:\=3D{1,}|-{1,})$/
            ,   textRE =3D /^[^!\[\]*_~\\<>` "'(]+/;

        function switchInline(stream, state, f) {
            state.f =3D state.inline =3D f;
            return f(stream, state);
        }

        function switchBlock(stream, state, f) {
            state.f =3D state.block =3D f;
            return f(stream, state);
        }


        // Blocks

        function blankLine(state) {
            // Reset linkTitle state
            state.linkTitle =3D false;
            // Reset EM state
            state.em =3D false;
            // Reset STRONG state
            state.strong =3D false;
            // Reset STRIKE state
            state.strike =3D false;

            // Reset state.quote
            state.quote =3D 0;
            if (!htmlFound && state.f =3D=3D htmlBlock) {
                state.f =3D inlineNormal;
                state.block =3D blockNormal;
            }
            // Reset state.trailingSpace
            state.trailingSpace =3D 0;
            state.trailingSpaceNewLine =3D false;
            // Mark this line as blank
            state.thisLineHasContent =3D false;
            return null;
        }

        function blockNormal(stream, state) {

            var prevLineIsList =3D (state.list !=3D=3D false);
            if (state.list !=3D=3D false && state.indentationDiff >=3D =
0) { // Continued list
                if (state.indentationDiff < 4) { // Only adjust =
indentation if *not* a code block
                    state.indentation -=3D state.indentationDiff;
                }
                state.list =3D null;
            } else if (state.list !=3D=3D false && state.indentation > =
0) {
                state.list =3D null;
                state.listDepth =3D Math.floor(state.indentation / 4);
            } else if (state.list !=3D=3D false) { // No longer a list
                state.list =3D false;
                state.listDepth =3D 0;
            }

            if (state.indentationDiff >=3D 4) {
                state.indentation -=3D 4;
                stream.skipToEnd();
                return code;
            } else if (stream.eatSpace()) {
                return null;
            } else if (stream.peek() =3D=3D=3D '#' || =
(state.prevLineHasContent && stream.match(headerRE)) ) {
                state.header =3D true;
            } else if (stream.eat('>')) {
                state.indentation++;
                state.quote =3D 1;
                stream.eatSpace();
                while (stream.eat('>')) {
                    stream.eatSpace();
                    state.quote++;
                }
            } else if (stream.peek() =3D=3D=3D '[') {
                return switchInline(stream, state, footnoteLink);
            } else if (stream.match(hrRE, true)) {
                return hr;
            } else if ((!state.prevLineHasContent || prevLineIsList) && =
(stream.match(ulRE, true) || stream.match(olRE, true))) {
                state.indentation +=3D 4;
                state.list =3D true;
                state.listDepth++;
                if (modeCfg.taskLists && stream.match(taskListRE, =
false)) {
                    state.taskList =3D true;
                }
            } else if (modeCfg.fencedCodeBlocks && =
stream.match(/^```([\w+#]*)/, true)) {
                // try switching mode
                state.localMode =3D getMode(RegExp.$1);
                if (state.localMode) state.localState =3D =
state.localMode.startState();
                switchBlock(stream, state, local);
                return code;
            }

            return switchInline(stream, state, state.inline);
        }

        function htmlBlock(stream, state) {
            var style =3D htmlMode.token(stream, state.htmlState);
            if (htmlFound && style =3D=3D=3D 'tag' && =
state.htmlState.type !=3D=3D 'openTag' && !state.htmlState.context) {
                state.f =3D inlineNormal;
                state.block =3D blockNormal;
            }
            if (state.md_inside && stream.current().indexOf(">")!=3D-1) =
{
                state.f =3D inlineNormal;
                state.block =3D blockNormal;
                state.htmlState.context =3D undefined;
            }
            return style;
        }

        function local(stream, state) {
            if (stream.sol() && stream.match(/^```/, true)) {
                state.localMode =3D state.localState =3D null;
                state.f =3D inlineNormal;
                state.block =3D blockNormal;
                return code;
            } else if (state.localMode) {
                return state.localMode.token(stream, state.localState);
            } else {
                stream.skipToEnd();
                return code;
            }
        }

        // Inline
        function getType(state) {
            var styles =3D [];

            if (state.taskOpen) { return "meta"; }
            if (state.taskClosed) { return "property"; }

            if (state.strong) { styles.push(strong); }
            if (state.strike) { styles.push(strike); }
            if (state.em) { styles.push(em); }

            if (state.linkText) { styles.push(linktext); }

            if (state.code) { styles.push(code); }

            if (state.header) { styles.push(header); }
            if (state.quote) { styles.push(state.quote % 2 ? quote1 : =
quote2); }
            if (state.list !=3D=3D false) {
                var listMod =3D (state.listDepth - 1) % 3;
                if (!listMod) {
                    styles.push(list1);
                } else if (listMod =3D=3D=3D 1) {
                    styles.push(list2);
                } else {
                    styles.push(list3);
                }
            }

            if (state.trailingSpaceNewLine) {
                styles.push("trailing-space-new-line");
            } else if (state.trailingSpace) {
                styles.push("trailing-space-" + (state.trailingSpace % 2 =
? "a" : "b"));
            }

            return styles.length ? styles.join(' ') : null;
        }

        function handleText(stream, state) {
            if (stream.match(textRE, true)) {
                return getType(state);
            }
            return undefined;
        }

        function inlineNormal(stream, state) {
            var style =3D state.text(stream, state);
            if (typeof style !=3D=3D 'undefined')
                return style;

            if (state.list) { // List marker (*, +, -, 1., etc)
                state.list =3D null;
                return getType(state);
            }

            if (state.taskList) {
                var taskOpen =3D stream.match(taskListRE, true)[1] =
!=3D=3D "x";
                if (taskOpen) state.taskOpen =3D true;
                else state.taskClosed =3D true;
                state.taskList =3D false;
                return getType(state);
            }

            state.taskOpen =3D false;
            state.taskClosed =3D false;

            var ch =3D stream.next();

            if (ch =3D=3D=3D '\\') {
                stream.next();
                return getType(state);
            }

            // Matches link titles present on next line
            if (state.linkTitle) {
                state.linkTitle =3D false;
                var matchCh =3D ch;
                if (ch =3D=3D=3D '(') {
                    matchCh =3D ')';
                }
                matchCh =3D =
(matchCh+'').replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1");
                var regex =3D '^\\s*(?:[^' + matchCh + =
'\\\\]+|\\\\\\\\|\\\\.)' + matchCh;
                if (stream.match(new RegExp(regex), true)) {
                    return linkhref;
                }
            }

            // If this block is changed, it may need to be updated in =
GFM mode
            if (ch =3D=3D=3D '`') {
                var t =3D getType(state);
                var before =3D stream.pos;
                stream.eatWhile('`');
                var difference =3D 1 + stream.pos - before;
                if (!state.code) {
                    codeDepth =3D difference;
                    state.code =3D true;
                    return getType(state);
                } else {
                    if (difference =3D=3D=3D codeDepth) { // Must be =
exact
                        state.code =3D false;
                        return t;
                    }
                    return getType(state);
                }
            } else if (state.code) {
                return getType(state);
            }

            if (ch =3D=3D=3D '!' && stream.match(/\[[^\]]*\] =
?(?:\(|\[)/, false)) {
                stream.match(/\[[^\]]*\]/);
                state.inline =3D state.f =3D linkHref;
                return image;
            }

            if (ch =3D=3D=3D '[' && stream.match(/.*\](\(| ?\[)/, =
false)) {
                state.linkText =3D true;
                return getType(state);
            }

            if (ch =3D=3D=3D ']' && state.linkText) {
                var type =3D getType(state);
                state.linkText =3D false;
                state.inline =3D state.f =3D linkHref;
                return type;
            }

            if (ch =3D=3D=3D '<' && =
stream.match(/^(https?|ftps?):\/\/(?:[^\\>]|\\.)+>/, false)) {
                return switchInline(stream, state, =
inlineElement(linkinline, '>'));
            }

            if (ch =3D=3D=3D '<' && stream.match(/^[^> =
\\]+@(?:[^\\>]|\\.)+>/, false)) {
                return switchInline(stream, state, =
inlineElement(linkemail, '>'));
            }

            if (ch =3D=3D=3D '<' && stream.match(/^\w/, false)) {
                if (stream.string.indexOf(">")!=3D-1) {
                    var atts =3D =
stream.string.substring(1,stream.string.indexOf(">"));
                    if =
(/markdown\s*=3D\s*('|"){0,1}1('|"){0,1}/.test(atts)) {
                        state.md_inside =3D true;
                    }
                }
                stream.backUp(1);
                return switchBlock(stream, state, htmlBlock);
            }

            if (ch =3D=3D=3D '<' && stream.match(/^\/\w*?>/)) {
                state.md_inside =3D false;
                return "tag";
            }

            var ignoreUnderscore =3D false;
            if (!modeCfg.underscoresBreakWords) {
                if (ch =3D=3D=3D '_' && stream.peek() !=3D=3D '_' && =
stream.match(/(\w)/, false)) {
                    var prevPos =3D stream.pos - 2;
                    if (prevPos >=3D 0) {
                        var prevCh =3D stream.string.charAt(prevPos);
                        if (prevCh !=3D=3D '_' && prevCh.match(/(\w)/, =
false)) {
                            ignoreUnderscore =3D true;
                        }
                    }
                }
            }
            var t =3D getType(state);
            if (ch =3D=3D=3D '*' || (ch =3D=3D=3D '_' && =
!ignoreUnderscore)) {
                if (state.strong =3D=3D=3D ch && stream.eat(ch) && =
stream.peek(ch)) { // Remove STRONG
                    state.strong =3D false;
                    return t;
                } else if (!state.strong && stream.eat(ch) && =
stream.peek(ch)) { // Add STRONG
                    state.strong =3D ch;
                    return getType(state);
                } else if (state.em =3D=3D=3D ch) { // Remove EM
                    state.em =3D false;
                    return t;
                } else if (!state.em) { // Add EM
                    state.em =3D ch;
                    return getType(state);
                }
            } else if (ch =3D=3D=3D '~'){
                if (state.strike =3D=3D=3D ch && stream.eat(ch)) { // =
Remove SRTIKE
                    state.strike =3D false;
                    return t;
                } else if (!state.strike && stream.eat(ch)) { // Add =
STRIKE
                    state.strike =3D ch;
                    return getType(state);
                }
            } else if (ch =3D=3D=3D ' ') {
                if (stream.eat('*') || stream.eat('_')) { // Probably =
surrounded by spaces
                    if (stream.peek() =3D=3D=3D ' ') { // Surrounded by =
spaces, ignore
                        return getType(state);
                    } else { // Not surrounded by spaces, back up =
pointer
                        stream.backUp(1);
                    }
                }
            }

            if (ch =3D=3D=3D ' ') {
                if (stream.match(/ +$/, false)) {
                    state.trailingSpace++;
                } else if (state.trailingSpace) {
                    state.trailingSpaceNewLine =3D true;
                }
            }

            return getType(state);
        }

        function linkHref(stream, state) {
            // Check if space, and return NULL if so (to avoid marking =
the space)
            if(stream.eatSpace()){
                return null;
            }
            var ch =3D stream.next();
            if (ch =3D=3D=3D '(' || ch =3D=3D=3D '[') {
                return switchInline(stream, state, =
inlineElement(linkhref, ch =3D=3D=3D '(' ? ')' : ']'));
            }
            return 'error';
        }

        function footnoteLink(stream, state) {
            if (stream.match(/^[^\]]*\]:/, true)) {
                state.f =3D footnoteUrl;
                return linktext;
            }
            return switchInline(stream, state, inlineNormal);
        }

        function footnoteUrl(stream, state) {
            // Check if space, and return NULL if so (to avoid marking =
the space)
            if(stream.eatSpace()){
                return null;
            }
            // Match URL
            stream.match(/^[^\s]+/, true);
            // Check for link title
            if (stream.peek() =3D=3D=3D undefined) { // End of line, set =
flag to check next line
                state.linkTitle =3D true;
            } else { // More content on line, check if link title
                =
stream.match(/^(?:\s+(?:"(?:[^"\\]|\\\\|\\.)+"|'(?:[^'\\]|\\\\|\\.)+'|\((=
?:[^)\\]|\\\\|\\.)+\)))?/, true);
            }
            state.f =3D state.inline =3D inlineNormal;
            return linkhref;
        }

        var savedInlineRE =3D [];
        function inlineRE(endChar) {
            if (!savedInlineRE[endChar]) {
                // Escape endChar for RegExp (taken from =
http://stackoverflow.com/a/494122/526741)
                endChar =3D =
(endChar+'').replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1");
                // Match any non-endChar, escaped character, as well as =
the closing
                // endChar.
                savedInlineRE[endChar] =3D new =
RegExp('^(?:[^\\\\]|\\\\.)*?(' + endChar + ')');
            }
            return savedInlineRE[endChar];
        }

        function inlineElement(type, endChar, next) {
            next =3D next || inlineNormal;
            return function(stream, state) {
                stream.match(inlineRE(endChar));
                state.inline =3D state.f =3D next;
                return type;
            };
        }

        return {
            startState: function() {
                return {
                    f: blockNormal,

                    prevLineHasContent: false,
                    thisLineHasContent: false,

                    block: blockNormal,
                    htmlState: CodeMirror.startState(htmlMode),
                    indentation: 0,

                    inline: inlineNormal,
                    text: handleText,

                    linkText: false,
                    linkTitle: false,
                    em: false,
                    strong: false,
                    strike: false,
                    header: false,
                    taskList: false,
                    list: false,
                    listDepth: 0,
                    quote: 0,
                    trailingSpace: 0,
                    trailingSpaceNewLine: false
                };
            },

            copyState: function(s) {
                return {
                    f: s.f,

                    prevLineHasContent: s.prevLineHasContent,
                    thisLineHasContent: s.thisLineHasContent,

                    block: s.block,
                    htmlState: CodeMirror.copyState(htmlMode, =
s.htmlState),
                    indentation: s.indentation,

                    localMode: s.localMode,
                    localState: s.localMode ? =
CodeMirror.copyState(s.localMode, s.localState) : null,

                    inline: s.inline,
                    text: s.text,
                    linkTitle: s.linkTitle,
                    em: s.em,
                    strong: s.strong,
                    strike: s.strike,
                    header: s.header,
                    taskList: s.taskList,
                    list: s.list,
                    listDepth: s.listDepth,
                    quote: s.quote,
                    trailingSpace: s.trailingSpace,
                    trailingSpaceNewLine: s.trailingSpaceNewLine,
                    md_inside: s.md_inside
                };
            },

            token: function(stream, state) {
                if (stream.sol()) {
                    if (stream.match(/^\s*$/, true)) {
                        state.prevLineHasContent =3D false;
                        return blankLine(state);
                    } else {
                        state.prevLineHasContent =3D =
state.thisLineHasContent;
                        state.thisLineHasContent =3D true;
                    }

                    // Reset state.header
                    state.header =3D false;

                    // Reset state.taskList
                    state.taskList =3D false;

                    // Reset state.code
                    state.code =3D false;

                    // Reset state.trailingSpace
                    state.trailingSpace =3D 0;
                    state.trailingSpaceNewLine =3D false;

                    state.f =3D state.block;
                    var indentation =3D stream.match(/^\s*/, =
true)[0].replace(/\t/g, '    ').length;
                    var difference =3D Math.floor((indentation - =
state.indentation) / 4) * 4;
                    if (difference > 4) difference =3D 4;
                    var adjustedIndentation =3D state.indentation + =
difference;
                    state.indentationDiff =3D adjustedIndentation - =
state.indentation;
                    state.indentation =3D adjustedIndentation;
                    if (indentation > 0) return null;
                }
                return state.f(stream, state);
            },

            blankLine: blankLine,

            getType: getType
        };

    }, "xml");

    CodeMirror.defineMIME("text/x-markdown", "markdown");


    var isMac =3D /Mac/.test(navigator.platform);

    var shortcuts =3D {
        'Cmd-Alt-1': toggleHeadline,
        'Cmd-Alt-2': toggleHeading,
        'Cmd-B': toggleBold,
        'Cmd-I': toggleItalic,
        'Cmd-K': drawLink,
        'Cmd-Alt-I': drawImage,
        "Cmd-'": toggleBlockquote,
        "Cmd-,": drawCode,
        'Cmd-Alt-L': toggleOrderedList,
        'Cmd-L': toggleUnOrderedList,
        'Cmd-Z': undo,
        'Cmd-Shift-Z': redo
    };


    /**
     * Fix shortcut. Mac use Command, others use Ctrl.
     */
    function fixShortcut(name) {
        if (isMac) {
            name =3D name.replace('Ctrl', 'Cmd');
        } else {
            name =3D name.replace('Cmd', 'Ctrl');
        }
        return name;
    }


    /**
     * Create icon element for toolbar.
     */
    function createIcon(name, options) {
        options =3D options || {};
        var el =3D document.createElement('a');

        var shortcut =3D options.shortcut || shortcuts[name];
        if (shortcut) {
            shortcut =3D fixShortcut(shortcut);
            el.title =3D shortcut;
            el.title =3D el.title.replace('Cmd', '=E2=8C=98');
            if (isMac) {
                el.title =3D el.title.replace('Alt', '=E2=8C=A5');
            }
        }

        el.className =3D options.className || 'icon-' + name;
        return el;
    }

    function createSep() {
        var el =3D document.createElement('i');
        el.className =3D 'separator';
        el.innerHTML =3D '|';
        return el;
    }


    /**
     * The state of CodeMirror at the given position.
     */
    function getState(cm, pos) {
        pos =3D pos || cm.getCursor('start');
        var stat =3D cm.getTokenAt(pos);
        if (!stat.type) return {};

        var types =3D stat.type.split(' ');

        var ret =3D {}, data, text;
        for (var i =3D 0; i < types.length; i++) {
            data =3D types[i];
            if (data =3D=3D=3D 'strong') {
                ret.bold =3D true;
            } else if (data =3D=3D=3D 'variable-2') {
                text =3D cm.getLine(pos.line);
                if (/^\s*\d+\.\s/.test(text)) {
                    ret['list-ol'] =3D true;
                } else {
                    ret['list-ul'] =3D true;
                }
            } else if (data =3D=3D=3D 'atom') {
                ret.quote =3D true;
            } else if (data =3D=3D=3D 'em') {
                ret.italic =3D true;
            } else if (data =3D=3D=3D 'header') {
                text =3D cm.getLine(pos.line);
                if (/^\s*\##\s/.test(text)) {
                    ret['heading'] =3D true;
                }else {
                    ret['headline'] =3D true;
                }
            }
        }
        return ret;
    }


    /**
     * Toggle full screen of the editor.
     */
    function toggleFullScreen(editor) {
        var el =3D editor.codemirror.getWrapperElement();

        // =
https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode
        var doc =3D document;
        var isFull =3D doc.fullScreen || doc.mozFullScreen || =
doc.webkitFullScreen;
        var request =3D function() {
            if (el.requestFullScreen) {
                el.requestFullScreen();
            } else if (el.mozRequestFullScreen) {
                el.mozRequestFullScreen();
            } else if (el.webkitRequestFullScreen) {
                =
el.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);
            }
        };
        var cancel =3D function() {
            if (doc.cancelFullScreen) {
                doc.cancelFullScreen();
            } else if (doc.mozCancelFullScreen) {
                doc.mozCancelFullScreen();
            } else if (doc.webkitCancelFullScreen) {
                doc.webkitCancelFullScreen();
            }
        };
        if (!isFull) {
            request();
        } else if (cancel) {
            cancel();
        }
    }

    /**
     * Action for toggling heading.
     */
    function toggleHeadline(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'headline');
    }

    function toggleHeading(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'heading');
    }


    /**
     * Action for toggling bold.
     */
    function toggleBold(editor) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);

        var text;
        var start =3D '**';
        var end =3D '**';

        var startPoint =3D cm.getCursor('start');
        var endPoint =3D cm.getCursor('end');
        if (stat.bold) {
            text =3D cm.getLine(startPoint.line);
            start =3D text.slice(0, startPoint.ch);
            end =3D text.slice(startPoint.ch);

            start =3D start.replace(/^(.*)?(\*|\_){2}(\S+.*)?$/, =
'$1$3');
            end =3D end.replace(/^(.*\S+)?(\*|\_){2}(\s+.*)?$/, '$1$3');
            startPoint.ch -=3D 2;
            endPoint.ch -=3D 2;
            cm.setLine(startPoint.line, start + end);
        } else {
            text =3D cm.getSelection();
            cm.replaceSelection(start + text + end);

            startPoint.ch +=3D 2;
            endPoint.ch +=3D 2;
        }
        cm.setSelection(startPoint, endPoint);
        cm.focus();
    }


    /**
     * Action for toggling italic.
     */
    function toggleItalic(editor) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);

        var text;
        var start =3D '_';
        var end =3D '_';

        var startPoint =3D cm.getCursor('start');
        var endPoint =3D cm.getCursor('end');
        if (stat.italic) {
            text =3D cm.getLine(startPoint.line);
            start =3D text.slice(0, startPoint.ch);
            end =3D text.slice(startPoint.ch);

            start =3D start.replace(/^(._)?(\*|\_)(\S+._)?$/, '$1$3');
            end =3D end.replace(/^(._\S+)?(\*|\_)(\s+._)?$/, '$1$3');
            startPoint.ch -=3D 1;
            endPoint.ch -=3D 1;
            cm.setLine(startPoint.line, start + end);
        } else {
            text =3D cm.getSelection();
            cm.replaceSelection(start + text + end);

            startPoint.ch +=3D 1;
            endPoint.ch +=3D 1;
        }
        cm.setSelection(startPoint, endPoint);
        cm.focus();
    }


    /**
     * Action for toggling blockquote.
     */
    function toggleBlockquote(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'quote');
    }

    function drawCode(editor) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);
        _replaceSelection(cm, stat.code, '\n\n```\n ', =
'=E5=9C=A8=E8=BF=99=E9=87=8C=E4=B9=A6=E5=86=99=E4=BB=A3=E7=A0=81=E7=89=87=
  \n```\n\n');
    }


    /**
     * Action for toggling ul.
     */
    function toggleUnOrderedList(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'list-ul');
    }


    /**
     * Action for toggling ol.
     */
    function toggleOrderedList(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'list-ol');
    }


    /**
     * Action for drawing a link.
     */
    function drawLink(editor) {
        $('.cm_dialog').fadeIn(300);
        $('.cm_add_link').slideDown(300);
        $('.cm_add_img').slideUp(300);
    }
    function cmDrawLink(editor, prefix_str) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);
        var cm_link_txt =3D $('#'+prefix_str+'cm_link_txt').val();
        var cm_link_url =3D $('#'+prefix_str+'cm_link_url').val();
        var cm_link_tit =3D $('#'+prefix_str+'cm_link_tit').val();
        if(cm_link_txt!=3D"" || cm_link_url!=3D"" || cm_link_tit!=3D""){
           _replaceSelection(cm, stat.link, '[',cm_link_txt =
+']('+cm_link_url+' "'+cm_link_tit+'")');
        }
        $('.cm_add_link').slideUp(300);
        $('.cm_dialog').fadeOut(300);
    }


    /**
     * Action for drawing an img.
     */
    function drawImage(editor) {
        $('.cm_dialog').fadeIn(300);
        $('.cm_add_link').slideUp(300);
        $('.cm_add_img').slideDown(300);
    }
    function cmDrawImage(editor, prefix_str) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);
        var cm_img_url =3D $('#'+prefix_str+'cm_img_url').val();
        var cm_img_alt =3D $('#'+prefix_str+'cm_img_alt').val();
        if(cm_img_url!=3D"" || cm_img_alt!=3D""){
            _replaceSelection(cm, stat.image, '![', =
cm_img_alt+']('+cm_img_url+')');
        }
        $('.cm_add_img').slideUp(300);
        $('.cm_dialog').fadeOut(300);
    }

    function cmDrawImageUp(editor, url) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);
        _replaceSelection(cm, stat.image, '![', =
'=E5=9B=BE=E7=89=87=E8=AF=B4=E6=98=8E]('+ url +')');
        $('.cm_add_img').slideUp(300);
        $('.cm_dialog').fadeOut(300);
    }

    window.cmDrawLink =3D cmDrawLink;
    window.cmDrawImage =3D cmDrawImage;
    window.cmDrawImageUp =3D cmDrawImageUp;

    /**
     * Undo action.
     */
    function undo(editor) {
        var cm =3D editor.codemirror;
        cm.undo();
        cm.focus();
    }


    /**
     * Redo action.
     */
    function redo(editor) {
        var cm =3D editor.codemirror;
        cm.redo();
        cm.focus();
    }

    /**
     * Preview action.
     */
    function togglePreview(editor) {
        var toolbar =3D editor.toolbar.preview;
        var parse =3D editor.constructor.markdown;
        var cm =3D editor.codemirror;
        var wrapper =3D cm.getWrapperElement();
        var preview =3D wrapper.lastChild;
        if (!/editor-preview/.test(preview.className)) {
            preview =3D document.createElement('div');
            preview.className =3D 'editor-preview';
            wrapper.appendChild(preview);
        }
        if (/editor-preview-active/.test(preview.className)) {
            preview.className =3D preview.className.replace(
                /\s*editor-preview-active\s*/g, ''
            );
            toolbar.className =3D =
toolbar.className.replace(/\s*active\s*/g, '');
        } else {
            /* When the preview button is clicked for the first time,
             * give some time for the transition from editor.css to fire =
and the view to slide from right to left,
             * instead of just appearing.
             */
            setTimeout(function() {preview.className +=3D ' =
editor-preview-active'}, 1);
            toolbar.className +=3D ' active';
        }
        var text =3D cm.getValue();
        preview.innerHTML =3D parse(text);
    }

    function _replaceSelection(cm, active, start, end) {
        var text;
        var startPoint =3D cm.getCursor('start');
        var endPoint =3D cm.getCursor('end');
        if (active) {
            text =3D cm.getLine(startPoint.line);
            start =3D text.slice(0, startPoint.ch);
            end =3D text.slice(startPoint.ch);
            cm.setLine(startPoint.line, start + end);
        } else {
            text =3D cm.getSelection();
            cm.replaceSelection(start + text + end);

            startPoint.ch +=3D start.length;
            endPoint.ch +=3D start.length;
        }
        cm.setSelection(startPoint, endPoint);
        cm.focus();
    }


    function _toggleLine(cm, name) {
        var stat =3D getState(cm);
        var startPoint =3D cm.getCursor('start');
        var endPoint =3D cm.getCursor('end');
        var repl =3D {
            headline: /^(\s*)\#\s+/,
            heading: /^(\s*)\##\s+/,
            quote: /^(\s*)\>\s+/,
            'list-ul': /^(\s*)(\*|\-|\+)\s+/,
            'list-ol': /^(\s*)\d+\.\s+/
        };
        var map =3D {
            headline: '# ',
            heading: '## ',
            quote: '> ',
            'list-ul': '* ',
            'list-ol': '1. '
        };
        for (var i =3D startPoint.line; i <=3D endPoint.line; i++) {
            (function(i) {
                var text =3D cm.getLine(i);
                if (stat[name]) {
                    text =3D text.replace(repl[name], '$1');
                } else {
                    text =3D map[name] + text;
                }
                cm.setLine(i, text);
            })(i);
        }
        cm.focus();
    }


    /* The right word count in respect for CJK. */
    function wordCount(data) {
        var pattern =3D =
/[a-zA-Z0-9_\u0392-\u03c9]+|[\u4E00-\u9FFF\u3400-\u4dbf\uf900-\ufaff\u304=
0-\u309f\uac00-\ud7af]+/g;
        var m =3D data.match(pattern);
        var count =3D 0;
        if( m =3D=3D=3D null ) return count;
        for (var i =3D 0; i < m.length; i++) {
            if (m[i].charCodeAt(0) >=3D 0x4E00) {
                count +=3D m[i].length;
            } else {
                count +=3D 1;
            }
        }
        return count;
    }

    var toolbar =3D [
        '|',
        {name: 'headline', action: =
toggleHeadline,title:'=E6=A0=87=E9=A2=98=E4=B8=80=EF=BC=88Ctrl+Alt+1=EF=BC=
=89'},
        {name: 'heading', action: =
toggleHeading,title:'=E6=A0=87=E9=A2=98=E4=BA=8C=EF=BC=88Ctrl+Alt+2=EF=BC=
=89'},
        {name: 'bold', action: =
toggleBold,title:'=E7=B2=97=E4=BD=93=EF=BC=88Ctrl+B=EF=BC=89'},
        {name: 'italic', action: =
toggleItalic,title:'=E6=96=9C=E4=BD=93=EF=BC=88Ctrl+I=EF=BC=89'},
        '|',

        {name: 'quote-left', action: =
toggleBlockquote,title:'=E5=BC=95=E7=94=A8=EF=BC=88Ctrl+=E2=80=99=EF=BC=89=
'},
        {name: 'code', action: =
drawCode,title:'=E6=8F=92=E5=85=A5=E4=BB=A3=E7=A0=81=E7=89=87=EF=BC=88Ctr=
l+,=EF=BC=89'},
        {name: 'list-ul', action: =
toggleUnOrderedList,title:'=E6=97=A0=E5=BA=8F=E5=88=97=E8=A1=A8=EF=BC=88C=
trl+L=EF=BC=89'},
        {name: 'list-ol', action: =
toggleOrderedList,title:'=E6=9C=89=E5=BA=8F=E5=88=97=E8=A1=A8=EF=BC=88Ctr=
l+Alt+L=EF=BC=89'},
        '|',

        {name: 'link', =
title:'=E6=B7=BB=E5=8A=A0=E9=93=BE=E6=8E=A5=EF=BC=88Ctrl+K=EF=BC=89'},   =
 //action: drawLink,
        {name: 'picture', =
title:'=E6=B7=BB=E5=8A=A0=E5=9B=BE=E7=89=87=EF=BC=88Ctrl+Alt+I=EF=BC=89'}=
,   //action: drawImage,
        '|',

        {name: 'reply', action: =
undo,title:'=E6=92=A4=E9=80=80=EF=BC=88Ctrl+Z=EF=BC=89'},
        {name: 'share-alt', action: =
redo,title:'=E5=89=8D=E8=BF=9B=EF=BC=88Ctrl+Shift+Z=EF=BC=89'},
        '|',
        {name: 'info', action: =
'http://ask.csdn.net/pages/markdown',title:'markdown=E8=AF=AD=E6=B3=95=E5=
=8F=82=E8=80=83'},
        {name: 'preview', action: =
togglePreview,title:'=E9=A2=84=E8=A7=88'},
        //{name: 'fullscreen', action: toggleFullScreen},
        '|'
    ];

    /**
     * Interface of Editor.
     */
    function Editor(options) {
        options =3D options || {};

        if (options.element) {
            this.element =3D options.element;
        }

        options.toolbar =3D options.toolbar || Editor.toolbar;
        // you can customize toolbar with object
        // [{name: 'bold', shortcut: 'Ctrl-B', className: 'icon-bold'}]

        if (!options.hasOwnProperty('status')) {
            options.status =3D ['lines', 'words', 'cursor'];
        }

        this.options =3D options;

        // If user has passed an element, it should auto rendered
        if (this.element) {
            this.render();
        }
    }

    /**
     * Default toolbar elements.
     */
    Editor.toolbar =3D toolbar;

    /**
     * Default markdown render.
     */
    Editor.markdown =3D function(text) {
        if (window.marked) {
            // use marked as markdown parser
            return marked(text);
        }
    };

    /**
     * Render editor to the given element.
     */
    Editor.prototype.render =3D function(el) {
        if (!el) {
            el =3D this.element || =
document.getElementsByTagName('textarea')[0];
        }

        if (this._rendered && this._rendered =3D=3D=3D el) {
            // Already rendered.
            return;
        }

        this.element =3D el;
        var options =3D this.options;

        var self =3D this;
        var keyMaps =3D {};

        for (var key in shortcuts) {
            (function(key) {
                keyMaps[fixShortcut(key)] =3D function(cm) {
                    shortcuts[key](self);
                };
            })(key);
        }

        keyMaps["Enter"] =3D "newlineAndIndentContinueMarkdownList";
        keyMaps['Tab'] =3D 'tabAndIndentContinueMarkdownList';
        keyMaps['Shift-Tab'] =3D =
'shiftTabAndIndentContinueMarkdownList';

        this.codemirror =3D CodeMirror.fromTextArea(el, {
            mode: 'markdown',
            theme: 'paper',
            tabSize: '2',
            indentWithTabs: true,
            lineNumbers: false,
            autofocus: true,
            extraKeys: keyMaps
        });

        if (options.toolbar !=3D=3D false) {
            this.createToolbar();
        }
        if (options.status !=3D=3D false) {
            this.createStatusbar();
        }

        this._rendered =3D this.element;
    };

    Editor.prototype.createToolbar =3D function(items) {
        items =3D items || this.options.toolbar;

        if (!items || items.length =3D=3D=3D 0) {
            return;
        }

        var bar =3D document.createElement('div');
        bar.className =3D 'editor-toolbar';

        var self =3D this;

        var el;
        self.toolbar =3D {};

        for (var i =3D 0; i < items.length; i++) {
            (function(item) {
                var el;
                if (item.name) {
                    el =3D createIcon(item.name, item);
                } else if (item =3D=3D=3D '|') {
                    el =3D createSep();
                } else {
                    el =3D createIcon(item);
                }

                // bind events, special for info
                if (item.action) {
                    if (typeof item.action =3D=3D=3D 'function') {
                        el.onclick =3D function(e) {
                            item.action(self);
                        };
                    } else if (typeof item.action =3D=3D=3D 'string') {
                        el.href =3D item.action;
                        el.target =3D '_blank';
                    }
                }
                if(item.title){
                    el.title =3D item.title;
                }
                self.toolbar[item.name || item] =3D el;
                bar.appendChild(el);
            })(items[i]);
        }

        var cm =3D this.codemirror;
        cm.on('cursorActivity', function() {
            var stat =3D getState(cm);

            for (var key in self.toolbar) {
                (function(key) {
                    var el =3D self.toolbar[key];
                    if (stat[key]) {
                        el.className +=3D ' active';
                    } else {
                        el.className =3D =
el.className.replace(/\s*active\s*/g, '');
                    }
                })(key);
            }
        });

        var cmWrapper =3D cm.getWrapperElement();
        cmWrapper.parentNode.insertBefore(bar, cmWrapper);
        return bar;
    };

    Editor.prototype.createStatusbar =3D function(status) {
        status =3D status || this.options.status;

        if (!status || status.length =3D=3D=3D 0) return;

        var bar =3D document.createElement('div');
        bar.className =3D 'editor-statusbar';

        var pos, cm =3D this.codemirror;
        for (var i =3D 0; i < status.length; i++) {
            (function(name) {
                var el =3D document.createElement('span');
                el.className =3D name;
                if (name =3D=3D=3D 'words') {
                    el.innerHTML =3D '0';
                    cm.on('update', function() {
                        el.innerHTML =3D wordCount(cm.getValue());
                    });
                } else if (name =3D=3D=3D 'lines') {
                    el.innerHTML =3D '0';
                    cm.on('update', function() {
                        el.innerHTML =3D cm.lineCount();
                    });
                } else if (name =3D=3D=3D 'cursor') {
                    el.innerHTML =3D '0:0';
                    cm.on('cursorActivity', function() {
                        pos =3D cm.getCursor();
                        el.innerHTML =3D pos.line + ':' + pos.ch;
                    });
                }
                bar.appendChild(el);
            })(status[i]);
        }
        var cmWrapper =3D this.codemirror.getWrapperElement();
        cmWrapper.parentNode.insertBefore(bar, cmWrapper.nextSibling);
        return bar;
    };

    /**
     * Get or set the text content.
     */
    Editor.prototype.value =3D function(val) {
        if (val) {
            this.codemirror.getDoc().setValue(val);
            return this;
        } else {
            return this.codemirror.getValue();
        }
    };


    /**
     * Bind static methods for exports.
     */
    Editor.toggleHeadline =3D toggleHeadline;
    Editor.toggleHeading =3D toggleHeading;
    Editor.toggleBold =3D toggleBold;
    Editor.toggleItalic =3D toggleItalic;
    Editor.toggleBlockquote =3D toggleBlockquote;
    Editor.drawCode =3D drawCode;
    Editor.toggleUnOrderedList =3D toggleUnOrderedList;
    Editor.toggleOrderedList =3D toggleOrderedList;
    Editor.drawLink =3D drawLink;
    Editor.drawImage =3D drawImage;
    Editor.undo =3D undo;
    Editor.redo =3D redo;
    Editor.togglePreview =3D togglePreview;
    Editor.toggleFullScreen =3D toggleFullScreen;

    /**
     * Bind instance methods for exports.
     */
    Editor.prototype.toggleHeadline =3D function() {
        toggleHeadline(this);
    };
    Editor.prototype.toggleHeading =3D function() {
        toggleHeading(this);
    };
    Editor.prototype.toggleBold =3D function() {
        toggleBold(this);
    };
    Editor.prototype.toggleItalic =3D function() {
        toggleItalic(this);
    };
    Editor.prototype.toggleBlockquote =3D function() {
        toggleBlockquote(this);
    };
    Editor.prototype.drawCode =3D function() {
        drawCode(this);
    };
    Editor.prototype.toggleUnOrderedList =3D function() {
        toggleUnOrderedList(this);
    };
    Editor.prototype.toggleOrderedList =3D function() {
        toggleOrderedList(this);
    };
    Editor.prototype.drawLink =3D function() {
        drawLink(this);
    };
    Editor.prototype.drawImage =3D function() {
        drawImage(this);
    };
    Editor.prototype.undo =3D function() {
        undo(this);
    };
    Editor.prototype.redo =3D function() {
        redo(this);
    };
    Editor.prototype.togglePreview =3D function() {
        togglePreview(this);
    };
    Editor.prototype.toggleFullScreen =3D function() {
        toggleFullScreen(this);
    };

    global.Editor =3D Editor;
})(this);
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: 7bit
Content-Location: http://c.csdnimg.cn/comm_ask/js/libs/prettify.js

//marked
------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/comm_ask/js/apps/ask_float_block.js

var editor_change_ask_o_domain =3D "";
function editor_change_ask_o(str){
    var editor =3D $( document ).data('editor_all');
    //editor.render(document.getElementById('editor_all'));
    window.cmDrawImageUp(editor, str);

    if (editor_change_ask_o_domain !=3D "") {
        document.domain =3D editor_change_ask_o_domain;
        editor_change_ask_o_domain =3D "";
    }
}
(function(){
    $(function(){
        var prot =3D window.location.protocol;
        var afont =3D prot + =
"//ask.csdn.net/assets/ask_float_fonts_css-6b30a53970eb5c3a2a045e3df585b4=
75.css";//=E8=AF=A5=E6=A0=B7=E5=BC=8F=E6=96=87=E4=BB=B6=E5=90=8D=E7=A7=B0=
=E8=A6=81=E6=A0=B9=E6=8D=AE=E6=AF=8F=E6=AC=A1=E5=8F=91=E5=B8=83=E5=90=8E=E7=
=9A=84=E5=8A=A8=E6=80=81=E5=90=8D=E7=A7=B0=E6=9D=A5=E4=BF=AE=E6=94=B9=E3=80=
=82//font-awesome.min-58872ef19fd8eb4c71bc6667c200b0c0.css";
        $('body').append('<link rel=3D"stylesheet" type=3D"text/css" =
media=3D"screen" href=3D"' + afont + '">');

        var first_pop_str=3D"<div class=3D'pop_edit ask_first =
comm_ask_first' style=3D'display: none;'><h3>=E6=8F=90=E9=97=AE</h3><a =
href=3D'#' nodetype=3D'close' class=3D'close'>=C3=97</a>"+
            " <div class=3D'context'>"+
            " <form id=3D'form' nodetype=3D'form-popup' =
class=3D'form'>"+
            "<div class=3D'askFirst_desc'><span class=3D'afd_p'>CSDN =
=E9=97=AE=E7=AD=94=E6=98=AF=E4=B8=80=E4=B8=AA=E7=9C=9F=E8=AF=9A=E3=80=81=E8=
=AE=A4=E7=9C=9F=E3=80=81=E6=9C=89=E6=B4=BB=E5=8A=9B=E7=9A=84=E6=8A=80=E6=9C=
=AF=E7=A4=BE=E5=8C=BA=E3=80=82</span><br><span =
class=3D'afd_p'>=E6=88=91=E4=BB=AC=E5=BE=88=E6=84=BF=E6=84=8F=E5=B8=AE=E5=
=8A=A9=E6=82=A8=EF=BC=8C=E5=B8=8C=E6=9C=9B=E6=82=A8=E6=8F=90=E5=87=BA=E7=9A=
=84=E6=AF=8F=E4=B8=80=E4=B8=AA=E9=97=AE=E9=A2=98=E9=83=BD=E8=83=BD=E5=BE=97=
=E5=88=B0=E8=A7=A3=E7=AD=94=EF=BC=8C=E5=90=8C=E6=97=B6=E4=B9=9F=E5=B8=8C=E6=
=9C=9B=E6=82=A8=E7=9F=A5=E9=81=93=EF=BC=8C=E4=B8=80=E4=B8=AA=E5=A5=BD=E7=9A=
=84=E9=97=AE=E9=A2=98</span><br><span"+
            " =
class=3D'afd_p'>=E6=9B=B4=E5=AE=B9=E6=98=93=E5=BE=97=E5=88=B0=E5=A5=BD=E7=
=9A=84=E7=AD=94=E6=A1=88<span>&nbsp;&nbsp;</span><a =
href=3D'//ask.csdn.net/help?#rule12' =
target=3D'_blank'>=E6=80=8E=E6=A0=B7=E6=8F=90=E5=87=BA=E4=B8=80=E4=B8=AA=E5=
=A5=BD=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=9F</a></span><br>"+
            "<span =
class=3D'afd_p'>=E6=8F=90=E9=97=AE=E6=97=B6=E5=BA=94=E9=81=B5=E5=BE=AA=E8=
=AE=A4=E7=9C=9F=E3=80=81=E7=AE=80=E6=B4=81=E3=80=81=E6=98=8E=E7=A1=AE=E3=80=
=81=E8=A7=84=E8=8C=83=E7=9A=84=E5=8E=9F=E5=88=99</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E9=A6=96=E5=85=88=E7=A1=AE=E5=AE=9A=E6=82=A8=E6=98=AF=E5=90=A6=E9=9C=80=E8=
=A6=81=E4=BD=BF=E7=94=A8=E6=82=AC=E8=B5=8F=E6=8F=90=E9=97=AE=EF=BC=9B</sp=
an><br><span class=3D'afd_p'>=E2=80=A2 =
=E9=97=AE=E9=A2=98=E4=B8=AD=E6=B2=A1=E5=BF=85=E8=A6=81=E5=87=BA=E7=8E=B0=E2=
=80=9C=E5=A4=A7=E7=A5=9E=E5=B8=AE=E5=B8=AE=E5=BF=99=E2=80=9D=E3=80=81=E2=80=
=9C=E6=95=99=E6=8E=88=E6=95=91=E6=95=91=E6=88=91=E2=80=9D=E4=B9=8B=E7=B1=BB=
=E4=B8=8E=E6=8A=80=E6=9C=AF=E9=97=AE=E9=A2=98=E6=97=A0=E5=85=B3=E7=9A=84=E4=
=BF=A1=E6=81=AF=EF=BC=8C=E5=8F=8A=E6=97=B6=E9=87=87=E7=BA=B3=E6=9C=80=E4=BD=
=B3=E7=AD=94=E6=A1=88=E5=B0=B1=E6=98=AF=E5=AF=B9=E5=9B=9E=E7=AD=94=E4=BA=BA=
=E7=9A=84=E6=9C=80=E5=A5=BD=E8=AE=A4=E5=8F=AF=EF=BC=9B</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E9=97=AE=E9=A2=98=E6=A0=87=E9=A2=98=E8=A6=81=E6=9C=89=E6=98=8E=E7=A1=AE=E8=
=80=8C=E6=9C=89=E4=BB=B7=E5=80=BC=E7=9A=84=E4=BF=A1=E6=81=AF=EF=BC=8C=E2=80=
=9C=E6=9C=89=E4=BA=BA=E9=81=87=E5=88=B0=E8=BF=87=E8=BF=99=E7=A7=8D=E6=83=85=
=E5=86=B5=E5=90=97=EF=BC=9F=E5=B8=AE=E5=BF=99=E8=BF=9B=E6=9D=A5=E7=9C=8B=E7=
=9C=8B=E2=80=9D=E8=BF=99=E7=A7=8D=E6=A0=87=E9=A2=98=E5=8F=AA=E4=BC=9A=E9=99=
=8D=E4=BD=8E=E6=82=A8=E7=9A=84=E9=97=AE=E9=A2=98=E8=A2=AB=E5=9B=9E=E7=AD=94=
=E7=9A=84=E6=A6=82=E7=8E=87=EF=BC=9B</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E2=80=9C=E6=B1=82=E4=BB=A3=E7=A0=81=E2=80=9D=E7=B1=BB=E7=9A=84=E9=97=AE=E9=
=A2=98=E8=AF=B7=E6=82=A8=E6=82=AC=E8=B5=8F=E6=8F=90=E9=97=AE=EF=BC=8C=E6=88=
=91=E4=BB=AC=E4=B9=90=E4=BA=8E=E5=B0=86=E5=85=B6=E7=9C=8B=E6=88=90=E4=B8=80=
=E7=A7=8D=E4=BA=A4=E6=98=93=E3=80=82</span><br><br><span"+
            " =
class=3D'afd_p'>=E9=97=AE=E7=AD=94=E9=A2=91=E9=81=93=E5=B9=B6=E4=B8=8D=E6=
=AC=A2=E8=BF=8E=E8=BF=99=E7=A7=8D=E9=97=AE=E9=A2=98</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E5=92=8C=E5=B7=B2=E6=9C=89=E9=97=AE=E9=A2=98=E5=AE=8C=E5=85=A8=E9=87=8D=E5=
=A4=8D=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=8C=E4=B8=BA=E9=81=BF=E5=85=8D=E9=87=
=8D=E5=A4=8D=EF=BC=8C=E6=8F=90=E9=97=AE=E5=89=8D=E8=AF=B7=E5=85=88=E8=BF=9B=
=E8=A1=8C=E6=90=9C=E7=B4=A2=EF=BC=9B</span><br><span =
class=3D'afd_p'>=E2=80=A2 =E6=8B=9B=E8=81=98 / =
=E6=B1=82=E8=81=8C=E3=80=81=E4=BA=A4=E6=98=93 / =
=E5=90=88=E4=BD=9C=E3=80=81=E5=AF=BB=E4=BA=BA / =
=E5=BE=81=E5=8F=8B=EF=BC=9B</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E6=97=A0=E6=98=8E=E7=A1=AE=E7=AD=94=E6=A1=88=E7=9A=84=E8=B0=83=E6=9F=A5=E7=
=B1=BB=E9=97=AE=E9=A2=98=E3=80=82=E5=A6=82=E8=8B=B9=E6=9E=9C=E5=92=8C=E8=B0=
=B7=E6=AD=8C=EF=BC=8C=E5=A4=A7=E5=AE=B6=E6=9B=B4=E6=AC=A3=E8=B5=8F=E8=B0=81=
=EF=BC=9F</span><br><span =
class=3D'afd_p'>=E6=83=B3=E5=AD=A6=E4=BC=9A=E6=9B=B4=E5=A5=BD=E7=9A=84=E6=
=8F=90=E9=97=AE=EF=BC=8C=E8=AF=B7=E6=9F=A5=E7=9C=8B<span>&nbsp;</span><a"=
+
            " href=3D'//ask.csdn.net/help' =
target=3D'_blank'>=E9=97=AE=E7=AD=94=E9=A2=91=E9=81=93=E6=8F=90=E9=97=AE=E8=
=A7=84=E8=8C=83</a></span></div>"+
            "<div =
class=3D'askFirst_se'><span>=E6=8F=90=E9=97=AE=E5=89=8D=E8=AF=B7=E6=90=9C=
=E7=B4=A2</span></div>"+
            "<div class=3D'search_div'><input id=3D'askInput' =
type=3D'text' =
placeholder=3D'=E8=BE=93=E5=85=A5=E9=97=AE=E9=A2=98=EF=BC=8C=E6=9F=A5=E7=9C=
=8B=E6=98=AF=E5=90=A6=E5=AD=98=E5=9C=A8=E7=9B=B8=E4=BC=BC=E7=9A=84=E9=97=AE=
=E9=A2=98'></div></form> </div>"+
            " <div class=3D'success'></div></div>";
        var second_pop_str=3D"<div class=3D'pop_edit ask_second =
comm_ask_second'><h3>=E6=8F=90=E9=97=AE</h3><span =
class=3D'ask_float_span'>=E6=82=A8=E7=9A=84=E9=97=AE=E9=A2=98=E5=B0=86=E4=
=BC=9A=E8=A2=AB=E5=8F=91=E5=B8=83=E5=9C=A8=E2=80=9C<a =
class=3D'ask_float_channel' href=3D'//ask.csdn.net' target=3D'_blank' =
style=3D'cursor:pointer'>=E6=8A=80=E6=9C=AF=E9=97=AE=E7=AD=94</a>=E2=80=9D=
=E9=A2=91=E9=81=93</span><a href=3D'#' nodeType=3D'close' =
class=3D'close'>=C3=97</a><div class=3D'context'><div =
class=3D'err_div'><span class=3D'err_ico'></span>"+
            "<span =
class=3D'err_txt'>=E8=AF=A5=E9=97=AE=E9=A2=98=E5=B7=B2=E5=AD=98=E5=9C=A8=EF=
=BC=8C=E8=AF=B7=E5=8B=BF=E9=87=8D=E5=A4=8D=E6=8F=90=E9=97=AE</span></div>=
"+
            "<div class=3D'input_div'><input id=3D'askInputSecond' =
type=3D'text' style=3D'font-size:14px;' =
placeholder=3D'=E9=97=AE=E9=A2=98=E6=A0=87=E9=A2=98'/></div>"+
            "<div class=3D'cm_box'><div class=3D'cm_dialog'></div> <div =
class=3D'pop_cm cm_add_link'><input type=3D'text' =
placeholder=3D'=E9=93=BE=E6=8E=A5=E5=86=85=E5=AE=B9' =
id=3D'af_cm_link_txt'><input type=3D'text' =
placeholder=3D'=E9=93=BE=E6=8E=A5=E5=9C=B0=E5=9D=80' =
id=3D'af_cm_link_url'><input type=3D'text' =
placeholder=3D'=E9=93=BE=E6=8E=A5=E6=8F=90=E7=A4=BA' =
id=3D'af_cm_link_tit'><div class=3D'text-right'><span class=3D'btn =
btn-default btn-sm' =
id=3D'add_link_btn'>=E6=8F=92=E5=85=A5=E9=93=BE=E6=8E=A5</span> </div> =
</div>"+
            "<div class=3D'pop_cm cm_add_img'><div class=3D'nav-tabs'><a =
class=3D'img_tab active' =
href=3D'#tab_upload'>=E6=9C=AC=E5=9C=B0=E4=B8=8A=E4=BC=A0</a><a =
class=3D'img_tab' =
href=3D'#tab_weburl'>=E7=BD=91=E7=BB=9C=E5=9B=BE=E7=89=87</a></div><div =
class=3D'tab_panel active' id=3D'tab_upload'><div =
class=3D'set_img'><iframe =
src=3D'http://ask.csdn.net/upload.html'></iframe></div></div><div =
class=3D'tab_panel' id=3D'tab_weburl'><input type=3D'text' =
placeholder=3D'=E5=9B=BE=E7=89=87=E5=9C=B0=E5=9D=80' =
id=3D'af_cm_img_url'><input type=3D'text' =
placeholder=3D'=E5=9B=BE=E7=89=87=E8=AF=B4=E6=98=8E' =
id=3D'af_cm_img_alt'><div class=3D'text-right'><span class=3D'btn =
btn-default btn-sm' =
id=3D'add_img_btn'>=E6=8F=92=E5=85=A5=E5=9B=BE=E7=89=87</span> =
</div></div> </div></div> "+
            "<textarea id=3D'editor_all' rows=3D'8'></textarea>"+
            "<div class=3D'div_tags clearfix'><div id=3D'divSearchTags' =
class=3D'tags_con'>"+
            "<input type=3D'text'/></div><input type=3D'hidden' =
name=3D'txtSearchTags'/></div>"+
            "<div id=3D'ask2_tagRecomm_div' class=3D'drt_tagRecomm =
tracking-ad' data-mod=3D'popu_73'><span =
class=3D'drt_tit'>=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE=EF=BC=9A</span></d=
iv></div>"+
            "<div class=3D'success'><div class=3D'left_area'><input =
id=3D'chk_cb' type=3D'checkbox'/><span =
class=3D'wyxs'>=E6=88=91=E8=A6=81=E6=82=AC=E8=B5=8F</span><input =
id=3D'cb_num'  class=3D'cb_num' readonly=3D'true'/>"+
            "<span class=3D'phib_rii'><span> =
=E5=B8=81</span></span></div><a href=3D'#' nodeType=3D'cancel' =
class=3D'cancel'>=E5=8F=96=E6=B6=88</a><a href=3D'#' nodeType=3D'ok' =
class=3D'ok'>=E5=8F=91=E5=B8=83</a></div></div>";

        =
//=E8=AF=A5=E5=80=BC=E6=98=AF=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8=E5=88=B0=
=E4=B8=8A=E9=9D=A2=E7=9A=84=E8=B7=9D=E7=A6=BB=EF=BC=8C=E5=A4=A7=E7=BA=A6=E5=
=9C=A8%55=E5=A4=84
        var back_top_value =
=3DMath.ceil(document.documentElement.clientHeight *0.55);
        =
//=E7=8E=B0=E5=9C=A8=E6=88=91=E4=BB=AC=E5=BC=80=E5=A7=8B=E5=8A=A0=E5=85=A5=
=E4=BA=8C=E7=BB=B4=E7=A0=81=E5=8A=9F=E8=83=BD=EF=BC=8C=E7=84=B6=E5=90=8E=E6=
=8A=8A=E6=8F=90=E9=97=AE=E6=94=B9=E4=B8=BAapp=E4=B8=8B=E8=BD=BD
        if(window.quickReplyflag) {
            =
//=E6=B3=A8=E9=87=8A=E7=9A=84=E9=83=A8=E5=88=86=E6=98=AF=E4=BB=A5=E5=89=8D=
=E6=8F=90=E9=97=AE=E7=9A=84=EF=BC=8C=E8=BF=99=E4=B8=AA=E6=97=B6=E5=80=99=E5=
=85=B6=E5=AE=9E=E5=90=8E=E7=BB=AD=E7=9A=84=E5=BE=88=E5=A4=9A=E4=B8=8E=E8=BF=
=99=E4=B8=AA=E6=8C=89=E9=92=AE=E7=9B=B8=E5=85=B3=E7=9A=84=E4=BB=A3=E7=A0=81=
=E6=B2=A1=E7=94=A8=E4=BA=86=EF=BC=8C=E5=B0=B1=E6=98=AF=E9=82=A3=E4=BA=9B=E5=
=BC=B9=E5=87=BA=E7=9A=84=E6=8F=90=E9=97=AE=E6=A1=86=EF=BC=8C=E5=85=88=E4=B8=
=8D=E5=88=A0=E9=99=A4=E5=90=A7=E3=80=82
            /* var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'tracking-ad' chg-blk=3D'0' ><a id=3D'com-ask-float-block'  =
title=3D'=E6=8F=90=E9=97=AE=E6=8C=89=E9=92=AE' =
style=3D'top:"+(back_top_value-82)+"px'></a>"+
             "<a id=3D'com-quick-reply'  =
title=3D'=E5=BF=AB=E9=80=9F=E5=9B=9E=E5=A4=8D' =
style=3D'top:"+(back_top_value-41)+"px'></a><a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' ></a> =
</div>";*/
            /*var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'tracking-ad' chg-blk=3D'0' ><a id=3D'com-appcode-float-block' =
href=3D'http://www.csdn.net/app/' target=3D'_blank' =
title=3D'APP=E4=BA=8C=E7=BB=B4=E7=A0=81' =
style=3D'top:"+(back_top_value-160)+"px'><span =
id=3D'appcode-close'></span></a><a id=3D'com-app-float-block' =
href=3D'http://www.csdn.net/app/' title=3D'APP=E4=B8=8B=E8=BD=BD' =
style=3D'top:"+(back_top_value-76)+"px'></a>"+
                "<a id=3D'com-quick-reply'  =
title=3D'=E5=BF=AB=E9=80=9F=E5=9B=9E=E5=A4=8D' =
style=3D'top:"+(back_top_value-38)+"px'></a><a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' ></a> =
</div>";*/
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'csdn-tracking-statistics' chg-blk=3D'0' ><a =
id=3D'com-quick-reply'  title=3D'=E5=BF=AB=E9=80=9F=E5=9B=9E=E5=A4=8D' =
style=3D'top:"+(back_top_value-38)+"px'></a><a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' ></a> =
</div>";
        } else if (window.eduCallCenter) {
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'csdn-tracking-statistics' chg-blk=3D'0' >" +
                /*"<a id=3D'com-appcode-float-block' =
href=3D'http://edu.csdn.net/app/' target=3D'_blank' =
title=3D'APP=E4=BA=8C=E7=BB=B4=E7=A0=81' =
style=3D'display:none;top:"+(back_top_value-135)+"px; background: =
url(http://edu.csdn.net/images/weix.png) no-repeat top =
left;background-size:100% auto; '><span id=3D'appcode-close' =
style=3D''></span></a> <a id=3D'com-app-float-block'  =
title=3D'APP=E4=B8=8B=E8=BD=BD' =
style=3D'top:"+(back_top_value-76)+"px'></a>"+
*/                "<a id=3D'com-edu-call-center'  =
title=3D'=E5=AD=A6=E9=99=A2=E5=AE=A2=E6=9C=8D' =
style=3D'top:"+(back_top_value-38)+"px' target=3D'_blank' =
href=3D'http://wpa.qq.com/msgrd?v=3D3&amp;uin=3D3390397209&amp;site=3Dqq&=
amp;menu=3Dyes'></a>"+
                "<a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' =
></a></div>";
        } else if (window.bbsInfoflag) {=20
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'csdn-tracking-statistics' chg-blk=3D'0' >"+
                "<a id=3D'com-quick-reply-bbs' =
title=3D'=E5=BF=AB=E9=80=9F=E5=9B=9E=E5=A4=8D' =
style=3D'top:"+(back_top_value-114)+"px'></a>" +
                "<a id=3D'com-back-channel' =
title=3D'=E5=9B=9E=E5=88=B0=E9=A2=91=E9=81=93' =
style=3D'top:"+(back_top_value-76)+"px'></a>" +
                "<a id=3D'com-back-home' =
title=3D'=E5=9B=9E=E5=88=B0=E9=A6=96=E9=A1=B5' =
style=3D'top:"+(back_top_value-38)+"px'></a>" +
                "<a id=3D'com-d-top-a' =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' ></a> =
</div>";
        }
        =
//=E5=86=8D=E6=AC=A1=E9=87=8D=E6=96=B0=E5=8A=A0=E5=85=A5ask=E4=BE=9B=E5=95=
=86=E5=8A=A1=E9=A1=B9=E7=9B=AE=E9=82=A3=E8=BE=B9=E4=BD=BF=E7=94=A82015061=
0=20
        else if (window.askForBussenessFlag) {
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'csdn-tracking-statistics' chg-blk=3D'0' >"+
                 "<a id=3D'com-ask-float-block'  =
style=3D'top:"+(back_top_value-38)+"px' =
title=3D'=E6=88=91=E8=A6=81=E6=8F=90=E9=97=AE' onclick=3D'' ></a>"+
                "<a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' =
></a></div>";
        }
        else {
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'csdn-tracking-statistics' chg-blk=3D'0' >"+
                "<a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' =
></a></div>";
        }

        //=E6=90=9C=E7=B4=A2=E5=BB=BA=E8=AE=AE=E7=9A=84HTML
        var common_ask_div_sc=3D"<div id=3D\"common_ask_div_sc\" =
class=3D\"searchContainer\"><div =
class=3D\"sTitle\">=E5=8F=AF=E8=83=BD=E5=AD=98=E5=9C=A8=E7=B1=BB=E4=BC=BC=
=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=9A</div><div class=3D\"sFooter\"><a =
class=3D\"sFirstNewAsk\">=E6=88=91=E6=83=B3=E6=8F=90=E4=B8=80=E4=B8=AA=E6=
=96=B0=E9=97=AE=E9=A2=98</a></div></div>"
        var =
total_ask_str=3Dfloat_ask_img+second_pop_str+common_ask_div_sc;//float_as=
k_img+first_pop_str+second_pop_str+common_ask_div_sc
        $("body").append(total_ask_str);

        =
//=E7=82=B9=E5=87=BB=E5=85=B3=E9=97=AD=E4=BA=8C=E7=BB=B4=E7=A0=81

        $("#com-appcode-float-block #appcode-close").click(function(){
            $("#com-appcode-float-block").hide('slow');
			return false;
            //$("#com-appcode-float-block").remove();

        })

        //=E5=AD=A6=E9=99=A2APP=E4=B8=8B=E8=BD=BD

        $("#com-app-float-block").click(function(){
            if (window.eduCallCenter){
                $("#com-appcode-float-block").show();
            }
        });

        $( 'body').bind( 'click', function ( evt ) {
            $target =3D $( evt.target );
            if ( $target.attr( 'id') =3D=3D 'add_img_btn' )
            {
                cmDrawImage(editor, "af_");
                return false;
            }else if( $target.attr( 'class') =3D=3D 'img_tab' ){
                =
$target.addClass('active').siblings('.img_tab').removeClass('active');
                var _target =3D $target.attr('href');
                =
$(_target).addClass('active').siblings('.tab_panel').removeClass('active'=
);
            }else if( $target.attr( 'id') =3D=3D 'add_link_btn' ) {
                cmDrawLink(editor, "af_");
                return false;
            }else if( $target.attr( 'class') =3D=3D 'cm_dialog'){
                $('.pop_cm').hide(300);
                $('.cm_dialog').hide();
                if (editor_change_ask_o_domain !=3D "") {
                    document.domain =3D editor_change_ask_o_domain;
                    editor_change_ask_o_domain =3D "";
                }
            }else if ($target.hasClass('icon-link')){     //icon-link
                var $ft =3D $target.parents()[1];
                //var $ft =3D $tb.parents()[0];
                $(".cm_dialog", $ft).fadeIn(300);
                $(".cm_add_link", $ft).slideDown(300);
                $(".cm_add_img", $ft).slideUp(300);

            }else if ($target.hasClass('icon-picture')){     //icon-link
                var $ft =3D $target.parents()[1];
                //var $ft =3D $tb.parents()[0];
                $(".cm_dialog", $ft).fadeIn(300);
                $(".cm_add_link", $ft).slideUp(300);
                $(".cm_add_img", $ft).slideDown(300);
                editor_change_ask_o_domain =3D document.domain;
                document.domain =3D "csdn.net";
            }
        } )

        =
//=E5=88=A4=E6=96=AD=E6=98=AF=E4=B8=8D=E6=98=AF=E6=9C=89=E5=BF=AB=E9=80=9F=
=E5=9B=9E=E5=A4=8D=EF=BC=8C=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8start
        $("#com-quick-reply").click(function(){
            if($("#comment_content").length>0){
                setEditorFocus();
            }
            else{
                window.location.href =3D "https://passport.csdn.net/";
            }
        });


        var d_top =3D $('#com-d-top-a');

        $(document).scroll(function(){
            var scrTop =3D (document.body.scrollTop || =
document.documentElement.scrollTop);
            if (scrTop > 500)
            {
                d_top.show();
            } else
            {
                d_top.hide();
            }

        })
        $('#com-d-top-a').click(function ()
        {
            scrollTo(0, 0);
            this.blur();
            return false;
        });
        =
//=E5=88=A4=E6=96=AD=E6=98=AF=E4=B8=8D=E6=98=AF=E6=9C=89=E5=BF=AB=E9=80=9F=
=E5=9B=9E=E5=A4=8D=EF=BC=8C=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8end

        var coin_flag=3Dfalse;
        //var prot =3D window.location.protocol;
        =
//=E5=88=A4=E6=96=AD=E6=98=AF=E5=90=A6=E9=A6=96=E6=AC=A1=E7=82=B9=E5=87=BB=
=E6=8F=90=E9=97=AE=E6=8C=89=E9=92=AE
        var check_accept_rules_url =3D prot + =
"//ask.csdn.net/users/check_accept_rules.js";
        =
//=E6=8F=90=E9=97=AE=E6=97=B6=EF=BC=8C=E6=A0=87=E9=A2=98=E5=BD=95=E5=85=A5=
=E6=A1=86=E7=9A=84=E8=87=AA=E5=8A=A8=E5=AE=8C=E6=88=90
        var ask_topic_autocomplete_url =3D prot + =
"//ask.csdn.net/questions/autocomplete.js";
        =
//=E6=8F=90=E9=97=AE=E6=97=B6=EF=BC=8C=E5=85=89=E6=A0=87=E7=A6=BB=E5=BC=80=
=E6=A0=87=E9=A2=98=E5=90=8E=E7=9A=84=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE
        // var ask_topic_tag_suggest_url =3D " =
http://ask.csdn.net/questions/tag_autocomplete.js";
        var ask_topic_tag_suggest_proxy =3D prot + =
"//internalapi.csdn.net/proxy.html";
        var ask_topic_tag_suggest_url =3D prot + =
"//internalapi.csdn.net/myapi/ask_topic/ask_topic_tag_suggest";//?x-acl-t=
oken=3DYz3GAP4stGOIrLaIrnDed-uThp8K";
        =
//=E6=8F=90=E9=97=AE=E6=97=B6=EF=BC=8C=E5=8F=91=E5=B8=83=E9=97=AE=E9=A2=98=
=E7=9A=84=E5=9C=B0=E5=9D=80
        var create_question_proxy =3D prot + =
"//ask.csdn.net/proxy.html";
        var create_question_url =3D prot + =
"//ask.csdn.net/questions/create_question.json";
        //=E9=AA=8C=E8=AF=81C=E5=B8=81
        var valid_coin=3D   prot + "//ask.csdn.net/users/get_scores.js";
        //=E9=97=AE=E9=A2=98=E9=93=BE=E6=8E=A5=E8=B7=B3=E8=BD=AC
        var ask_detail_url =3D  prot + "//ask.csdn.net/questions/";
        var ajaxProxyCaches =3D {};

        var isSubmitting =3D false;


        var editor =3D new Editor();
        $( document ).data( 'editor_all', editor );
        editor.render(document.getElementById('editor_all'));

        function ajaxProxy(proxyUrl, opts) {
            var c =3D ajaxProxyCaches[proxyUrl];
            if (c =3D=3D=3D undefined) {
                c =3D ajaxProxyCaches[proxyUrl] =3D [];
                var func =3D arguments.callee;
                $('<iframe class=3D"poxy_uc" src=3D"' + proxyUrl + '" =
style=3D"display:none">').load(function () {
                    c.contentWindow =3D this.contentWindow;
                    func(proxyUrl, opts);
                }).prependTo('body');
            } else if (c.contentWindow =3D=3D=3D undefined) {
                c.push(opts);
            } else {
                do {
                    c.contentWindow.jQuery.ajax(opts);
                } while (opts =3D c.shift());
            }
        }

        //json =3D {status:false, error:1, msg: =
'=E8=AF=B7=E5=85=88=E7=99=BB=E5=BD=95'}
        //json =3D {status:false, error:2, msg: =
'=E6=82=A8=E5=B7=B2=E8=A2=ABCSDN=E9=97=AE=E7=AD=94=E7=A6=81=E8=A8=80'}
        //json =3D {status:false, error:3, msg: =
'=E6=82=A8=E5=B7=B2=E8=A2=AB=E5=B0=81=E5=8F=B7'}
        //json =3D {status:true, error:0, msg: =
'=E6=82=A8=E5=B7=B2=E7=BB=8F=E7=99=BB=E5=BD=95'}

        =
//=E6=98=AF=E5=90=A6=E9=A6=96=E6=AC=A1=E7=82=B9=E5=87=BB=E6=8F=90=E9=97=AE=

        $("#com-ask-float-block").bind('click', function(){
            =
//$('.editor-preview.editor-preview-active').removeClass('editor-preview-=
active');
            //$('.icon-preview.active').removeClass('active');
            //document.domain=3D"csdn.net";
            //pop($("body > .ask_second"));
            //editor.codemirror.getValue =3D "";
            $(".ask_second").remove();
            $("body").append(second_pop_str);
            editor =3D new Editor();
            $( document ).data( 'editor_all', editor );
            editor.render(document.getElementById('editor_all'));


            $("#askInputSecond").focus();//
            $(".CodeMirror").removeClass("CodeMirror-focused");
            $(".comm_ask_second .CodeMirror textarea").blur();
            //$(".CodeMirror-code, .CodeMirror-measure").html("");
            $.ajax({
                type: "get",
                url: check_accept_rules_url, =
//"http://ask.csdn.net/users/check_accept_rules",//=E5=88=A4=E6=96=AD=E6=98=
=AF=E5=90=A6=E7=99=BB=E5=BD=95=EF=BC=8C
                dataType: "jsonp",
                jsonp: "callback",
                success: function(obj) {

                    if (obj.error =3D=3D 0) {
                        pop($("body > .ask_second"));

                        =
$(".CodeMirror").removeClass("CodeMirror-focused");
                    } else if (obj.error =3D=3D 1) {
                        window.location.href =3D =
"https://passport.csdn.net/";
                    } else {
                        alert(obj.msg);
                    }
                },
                error: function(err) {
                    var i =3D 0;
                }
            });

        });

        function pop($popup){
            //=E9=81=AE=E7=BD=A9
            var w =3D $( document ).width();
            var h =3D $( document ).height();
            var $marker =3D $( '<div class=3D"marker"></div>' );
            if ( $.browser && $.browser.msie) {
                w =3D w - 18;
            }

            $marker.css( {
                opacity: 0.5,
                width: w + 'px',
                height: h + 'px'
            } );

            $( 'body' ).append( $marker );
            //=E4=BD=8D=E7=BD=AE=E5=8F=8A=E5=BC=B9=E5=87=BA

            //var top =3D $( window ).height() / 2 + $( window =
).scrollTop();
            //var top =3Ddocument.documentElement.clientHeight / 2 + $( =
window ).scrollTop();

            /*$popup.css( {
             top: top + 'px',
             left:"50%"

             } );*/

            setTimeout( function () {
                $popup.show();
                $popup.css( {
                    opacity: 1
                } );
                $(".CodeMirror").removeClass("CodeMirror-focused");
            }, 200 );
            =
//=E5=88=9D=E5=A7=8B=E5=8C=96=E5=9F=BA=E6=9C=AC=E7=9A=84=E4=BA=8B=E4=BB=B6=
=E7=BB=91=E5=AE=9A=E7=AD=89
            //=E5=8F=96=E6=B6=88=E4=BA=8B=E4=BB=B6=E7=BB=91=E5=AE=9A

            var $cancel=3D$popup.find( '[nodetype=3D"cancel"]' );
            var $close =3D $popup.find( '[nodetype=3D"close"]' );
            $cancel.add($close).unbind( 'click' );
            $cancel.add($close).bind( 'click', function () {
                $("#common_ask_div_sc").css("display","none");
                $popup.css( {
                    opacity: 0
                } );
                var $btn_sub =3D $popup.find( '[nodetype=3D"ok"]' );
                $btn_sub.css("background-color", "#be0000");
                isSubmitting =3D false;
                setTimeout( function () {
                    $popup.hide();
                }, 350 );
                $( '.marker' ).remove();
                return false;
            } );
            =
//=E6=8F=90=E4=BA=A4=E4=BA=8B=E4=BB=B6=E7=BB=91=E5=AE=9A=EF=BC=8C=E9=9C=80=
=E8=A6=81=E5=88=A4=E6=96=AD=E6=98=AF=E4=B8=8D=E6=98=AF=E7=AC=AC=E4=BA=8C=E4=
=B8=AA=E5=BC=B9=E7=AA=97

            if($popup.hasClass("ask_first")){

                //=E7=BB=91=E5=AE=9A=E8=87=AA=E5=8A=A8=E6=90=9C=E7=B4=A2
                AskSearch({ $inputBox: $(".comm_ask_first #askInput"),
                    $container: $("body > #common_ask_div_sc"),
                    searchUrl: ask_topic_autocomplete_url, =
//"http://192.168.6.227:9403/ask_topic/autocomplete", =
//=E6=90=9C=E7=B4=A2=E7=9A=84Url
                    isFirst: true

                })
            }

            else{
                //=E8=BF=98=E8=BF=9C=E9=87=8D=E8=AE=BE=E5=80=BC
                $(".err_div").css("display", "none");
                $(" .comm_ask_second #askInputSecond").val("");
                $(" .comm_ask_second #wmd-input").val("");
                $(" .comm_ask_second span.tag").remove();
                //$(" .comm_ask_second  #ask2_tagRecomm_div =
label").remove();
                $(" .comm_ask_second  #ask2_tagRecomm_div a").remove();
                $(".comm_ask_second #chk_cb").attr("checked",false);
                $(".comm_ask_second #cb_num").attr("readonly",true);
                $(" .comm_ask_second #cb_num").val("");
                $(" .comm_ask_second #wmd-preview").empty();
                $(" .comm_ask_second [name=3D'txtSearchTags']").val("");
                /*$(" .comm_ask_second =
#wmd-preview").css("display","none");
                 $(" .comm_ask_second =
#wmd-input").css("display","block");*/


                =
//=E7=BB=99=E6=A0=87=E7=AD=BE=E5=8A=A0=E4=B8=8Afoucs=E6=95=88=E6=9E=9C
                $(" .comm_ask_second #divSearchTags =
input").focus(function(){
                    $(" .comm_ask_second =
#divSearchTags").addClass('focus');
                }).blur(function(){
                    $(" .comm_ask_second =
#divSearchTags").removeClass('focus');
                })
                //=E6=82=AC=E8=B5=8F=E7=9A=84=E5=BC=80=E5=90=AF
                $(".comm_ask_second #chk_cb").click(function(){
                    if ($(".comm_ask_second #chk_cb")[0].checked) {
                        $(".comm_ask_second =
#cb_num").attr("readonly",false)

                    }
                    else{
                        $(".comm_ask_second =
#cb_num").attr("readonly",true);
                        $(".comm_ask_second #cb_num").val("");
                        coin_flag =3D false;
                    }
                })
                var $submit =3D $popup.find( '[nodetype=3D"ok"]' );
                $submit.unbind('click');
                $submit.bind( 'click', function () {
                    var _this =3D this;
                    if (isSubmitting) return;
                    isSubmitting =3D true;
                    $(this).css("background-color", "#999");
                    // data =3D =
_this.getBackData();=E9=9C=80=E8=A6=81=E8=87=AA=E8=A1=8C=E5=BA=8F=E5=88=97=
=E5=8C=96=E5=80=BC
                    var _title =3D $(".comm_ask_second =
#askInputSecond").val();
                    var _content =3D editor.codemirror.getValue();
                    /* if (_content) {
                     _content =3D _content.replace(/\<br\>/g, "\n");
                     _content =3D _content.replace(/\<p\>/g, "");
                     _content =3D _content.replace(/\<\/p\>/g, "");
                     }*/
                    var _tagList =3D $(".comm_ask_second =
[name=3D'txtSearchTags']").val();
                    var _fromType =3D =
window.location.hostname;//"read_index";

                    var _isreward =3D $(" .comm_ask_second =
#chk_cb")[0].checked;

                    var _coin =3D $(" .comm_ask_second #cb_num").val();

                    //=E9=AA=8C=E8=AF=81
                    $(".err_div").css("display", "none");
                    if (!valid($(" .comm_ask_second =
#askInputSecond"),_title,"=E9=97=AE=E9=A2=98=E6=A0=87=E9=A2=98",10,50)){

                        return false;
                    }


                    if( !valid($(" .comm_ask_second =
#wmd-input"),_content,"=E9=97=AE=E9=A2=98=E6=8F=8F=E8=BF=B0",30,10000)){
                        return false;
                    };
                    if( !valid( $(" .comm_ask_second =
#divSearchTags"),_tagList.split(','),"=E9=97=AE=E9=A2=98=E6=A0=87=E7=AD=BE=
",1,5)){
                        $(" .comm_ask_second =
#divSearchTags").addClass('focus');
                        return false;
                    };

                    =
//=E9=82=A3=E4=B8=AAC=E5=B8=81=E9=82=A3=E4=B8=AA=E5=A6=82=E6=9E=9C=E5=8B=BE=
=E9=80=89=E4=BA=86=E6=89=8D=E9=AA=8C=E8=AF=81=E6=98=AF=E4=B8=8D=E6=98=AF=E6=
=95=B0=E5=AD=97,=E8=BF=98=E9=9C=80=E9=AA=8C=E8=AF=81C=E5=B8=81=E7=9A=84=E5=
=80=BC=E5=A4=9F=E4=B8=8D=E5=A4=9F
                    var _cbNum =3D $(".comm_ask_second #cb_num").val();
                    if ($(".comm_ask_second #chk_cb")[0].checked) {
                        if (!/^[1-9]\d*$/.test(_cbNum)) {
                            $(".err_div").css("display", "block");
                            =
$(".err_txt").text("=E6=88=91=E8=A6=81=E6=82=AC=E8=B5=8F=E5=8F=AA=E8=83=BD=
=E5=BD=95=E5=85=A5=E6=95=B0=E5=AD=97=EF=BC=81");
                            $(".comm_ask_second #cb_num").focus();

                            $(_this).css("background-color", "#be0000");
                            isSubmitting =3D false;
                            return false;
                        }
                    }

                    function valid(fild,fild_value,name,minL,maxL){

                        if((fild_value && fild_value[0] =3D=3D "") || =
fild_value.length=3D=3D0){
                            mess =3D '=E8=AF=B7=E8=BE=93=E5=85=A5' + =
name;
                            $(".err_div").css("display", "block");
                            $(".err_txt").text(mess);
                            fild.focus();

                            $(_this).css("background-color", "#be0000");
                            isSubmitting =3D false;

                            return false;
                        }
                        =
if(fild_value.length<minL||fild_value.length>maxL){
                            mess =3D =
'=E8=AF=B7=E8=BE=93=E5=85=A5=E9=95=BF=E5=BA=A6=E4=B8=BA' =
+minL+"-"+maxL+"=E7=9A=84"+name;

                            $(".err_txt").text(mess);
                            $(".err_div").css("display", "block");
                            fild.focus();

                            $(_this).css("background-color", "#be0000");
                            isSubmitting =3D false;

                            return false;
                        }
                        else{
                            return true;
                        }
                    }
                    =
//=E9=AA=8C=E8=AF=81C=E5=B8=81=E4=B8=8D=E5=A4=9F=E4=B8=8D=E8=AE=B8=E6=8F=90=
=E4=BA=A4
                    if(coin_flag){
                        $(".err_div").css("display", "block");
                        $(_this).css("background-color", "#be0000");
                        isSubmitting =3D false;
                        return false;
                    }
                    var tempDomain =3D document.domain;
                    document.domain =3D 'csdn.net';
                    //_fromType =3D "";
                    =
//=E7=95=99=E6=84=8F=E8=AF=A5=E6=8E=A5=E5=8F=A3=E8=AF=B7=E6=B1=82=E7=B1=BB=
=E5=9E=8B,=E5=BC=82=E6=AD=A5=E6=8F=90=E4=BA=A4=E6=95=B0=E6=8D=AE=EF=BC=8C=
=E5=9C=A8=E8=AF=A5=E6=AC=A1=E5=8A=A0=E5=85=A5=E4=BA=86=E9=AA=8C=E8=AF=81=E7=
=9A=84=E8=83=BD=E5=8A=9B=EF=BC=8C
                    //$.ajax({
                    //	type: "get",
                    ajaxProxy(create_question_proxy, {
                        type: "post",
                        data: {
                            "question[title]": _title,
                            "question[body]": _content,
                            "question[tag_list]": _tagList,
                            "question[from_type]": _fromType,
                            "question[is_reward]": _isreward,
                            "question[coin]": _coin
                        },
                        url: create_question_url,
                        dataType: "json",
                        //dataType: "jsonp",
                        //jsonp: "callback",
                        //async: false,
                        success: function(obj) {
                            document.domain =3D tempDomain;
                            if (obj.status) {
                                =
//=E8=B7=B3=E8=BD=AC=E5=88=B0=E6=96=B0=E9=A1=B5=E9=9D=A2,=E5=85=B3=E9=97=AD=
,=E9=87=8D=E8=AE=BE=E8=BF=99=E4=B8=AA=E5=80=BC=E5=BD=93=E5=89=8D=E9=A1=B5=
=E9=9D=A2
                                =
$(".comm_ask_second").css("display","none");
                                $(_this).css("background-color", =
"#be0000");
                                isSubmitting =3D false;
                                $( '.marker' ).remove();
                                var =
href=3D"//ask.csdn.net/questions/"+obj.id;
                                window.open(href, =
"target=3D_blank,location=3D1");
                                =
alert("=E4=BD=A0=E7=9A=84=E9=97=AE=E9=A2=98=E5=B7=B2=E5=8F=91=E5=B8=83=E5=
=88=B0=E6=8A=80=E6=9C=AF=E9=97=AE=E7=AD=94=E9=A2=91=E9=81=93=E3=80=82");
                            } else {
                                $(".err_div").css("display", "block");
                                $(".err_txt").text(obj.msg);
                                $(_this).css("background-color", =
"#be0000");
                                isSubmitting =3D false;
                            }
                        },
                        error: function(err) {
                            document.domain =3D tempDomain;
                            var i =3D 0;
                        }
                    });

                    =
//=E9=9C=80=E8=A6=81=E8=B0=83=E7=94=A8=E5=85=B3=E9=97=AD=E8=BF=99=E4=B8=AA=
=E7=AA=97=E5=8F=A3
                    return false;
                } );
                //=E7=BB=91=E5=AE=9A=E8=87=AA=E5=8A=A8=E6=90=9C=E7=B4=A2
                AskSearch({    $inputBox: $(".comm_ask_second =
#askInputSecond"),
                    $container: $("body > #common_ask_div_sc"),
                    searchUrl: ask_topic_autocomplete_url, =
//"http://192.168.6.227:9403/ask_topic/autocomplete", =
//=E6=90=9C=E7=B4=A2=E7=9A=84Url
                    isFirst: false
                });

                $(".comm_ask_second .CodeMirror textarea").bind("focus", =
function() {
                    $(".CodeMirror").addClass("CodeMirror-focused");
                });

                =
//=E5=8A=A8=E6=80=81=E5=8E=BB=E5=90=8E=E5=8F=B0=E8=8E=B7=E5=8F=96=E6=8E=A8=
=E8=8D=90=E6=A0=87=E7=AD=BEstart
                $(".comm_ask_second #askInputSecond").bind("blur", =
function(){
                    var _title =3D $(".comm_ask_second =
#askInputSecond").val();
                    var _content =3D =
editor.codemirror.getValue();//$(".comm_ask_second #wmd-input").val();
                    /* if (_content) {
                     _content =3D _content.replace(/\<br\>/g, "\n");
                     } else {
                     _content =3D "";
                     }*/
                    setTimeout(function(){$("#div_sc").css("display", =
"none");},400);
                    loadRecommTags( _title, _content);
                });
                $(".comm_ask_second .CodeMirror textarea").bind("blur", =
function(){
                    var _title =3D $(".comm_ask_second =
#askInputSecond").val();
                    var _content =3D =
editor.codemirror.getValue();//$(".comm_ask_second #wmd-input").val();
                    /*if (_content) {
                     _content =3D _content.replace(/\<br\>/g, "\n");
                     } else {
                     _content =3D "";
                     }*/
                    loadRecommTags( _title, _content);
                });
                =
//=E5=8A=A8=E6=80=81=E5=8E=BB=E5=90=8E=E5=8F=B0=E8=8E=B7=E5=8F=96=E6=8E=A8=
=E8=8D=90=E6=A0=87=E7=AD=BEend
                =
//=E5=BC=82=E6=AD=A5=E5=90=8E=E5=8F=B0=E9=AA=8C=E8=AF=81C=E5=B8=81=E8=B6=B3=
=E5=A4=9F=EF=BC=9F
                $(".comm_ask_second #cb_num").bind("blur",function(){

                    if($(".comm_ask_second #chk_cb")[0].checked){
                        $(".err_div").css("display", "none");
                        if (!/^[0-9]\d*$/.test( $(".comm_ask_second =
#cb_num").val())) {
                            $(".err_div").css("display", "block");
                            =
$(".err_txt").text("=E6=88=91=E8=A6=81=E6=82=AC=E8=B5=8F=E5=8F=AA=E8=83=BD=
=E5=BD=95=E5=85=A5=E6=95=B0=E5=AD=97=EF=BC=81");
                            $(".comm_ask_second #cb_num").focus();
                            return false;
                        }
                        $.ajax({
                            type: "get",
                            url: valid_coin,
                            dataType: "jsonp",
                            jsonp: "callback",
                            async: false,
                            success: function(obj) {
                                if (obj.error=3D=3D0) {
                                    =
//=E8=BF=99=E4=B8=AA=E7=8A=B6=E6=80=81=E4=B8=8B=E8=A1=A8=E7=A4=BA=E6=8B=BF=
=E5=88=B0=E4=BA=86C=E5=B8=81
                                    if( $(".comm_ask_second =
#cb_num").val()>obj.score){
                                        $(".err_div").css("display", =
"block");
                                        =
$(".err_txt").text("=E6=82=A8=E7=9A=84C=E5=B8=81=E4=BD=99=E9=A2=9D=E4=B8=8D=
=E8=B6=B3");
                                        =
//=E9=AA=8C=E8=AF=81=E4=B8=8D=E9=80=9A=E8=BF=87=E4=B8=8D=E8=AE=B8=E6=8F=90=
=E4=BA=A4
                                        coin_flag=3Dtrue;
                                    }
                                    else{
                                        coin_flag=3Dfalse;
                                    }
                                } else {
                                    $(".err_div").css("display", =
"block");
                                    $(".err_txt").text(obj.msg);
                                    coin_flag=3Dtrue;
                                }
                            },
                            error: function(err) {
                                // =
alert("=E5=90=8E=E5=8F=B0=E5=87=BA=E9=94=99=E4=BA=86");
                            }
                        });}

                })
                =
//=E6=8F=90=E9=97=AE=E7=9A=84=E8=87=AA=E5=8A=A8TAG,=E9=9C=80=E8=A6=81=E4=BD=
=A0=E8=87=AA=E8=A1=8C=E7=B2=98=E8=B4=B4=E9=82=A3=E4=B8=AAJS=E6=96=87=E4=BB=
=B6
                Creat_Dynamic_Tag(".comm_ask_second #divSearchTags", =
ask_topic_tag_suggest_url, ".comm_ask_second =
input[name=3D'txtSearchTags']");

            }

        }//close pop function

        function ShowSecondPop() {
            // =
askFirst.popup.closeFun();=E9=9A=90=E8=97=8F=E8=B5=B7=E6=9D=A5

            $("body > .ask_first").find( '[nodetype=3D"close"]' =
).click();//=E9=9A=90=E8=97=8F=E8=B5=B7=E6=9D=A5=E7=AC=AC=E4=B8=80=E4=B8=AA=


            pop($("body > .ask_second"));
        }

        //=E8=87=AA=E5=8A=A8=E6=90=9C=E7=B4=A2=E6=8F=90=E7=A4=BA
        function AskSearch(conf) {

            $("body").click(function(e){

                var target=3D  e.target;

                if($(target).closest("#common_ask_div_sc").length<1){
                    conf.$container.css("display","none");
                }

            })

            var $inputBox =3D conf.$inputBox;
            var $container =3D conf.$container;
            var searchUrl =3D conf.searchUrl;
            var isFirst =3D conf.isFirst;  =
//=E8=B0=83=E7=94=A8=E6=90=9C=E7=B4=A2=E7=9A=84=E6=98=AF=E9=A6=96=E6=AC=A1=
=E5=BC=B9=E5=87=BA=E7=AA=97=E8=BF=98=E6=98=AF=E6=8F=90=E9=97=AE=E5=BC=B9=E5=
=87=BA=E7=AA=97
            var nowItem =3D -1;
            var userInput =3D "";
            $container.css("display", "none");
            $inputBox.css("autocomplete", "off");
            $container.css("z-index", "1100");

            //$inputBox.unbind("keyup");
            $inputBox[0].onkeyup=3Dfunction(ev) {//propertychange
                var oEvent =3D ev||event;
                if(oEvent.keyCode =3D=3D 40 || oEvent.keyCode =3D=3D 38 =
|| oEvent.keyCode =3D=3D 27 || (oEvent.keyCode >=3D 113 && =
oEvent.keyCode <=3D 123) ||
                    oEvent.keyCode =3D=3D 16 || oEvent.keyCode =3D=3D 17 =
|| oEvent.keyCode =3D=3D 18 || oEvent.keyCode =3D=3D 9 || oEvent.keyCode =
=3D=3D 20){
                    return;
                }
                $container.css("opacity", 0);
                var rect =3D this.getBoundingClientRect();
                var scrTop =3D (document.body.scrollTop || =
document.documentElement.scrollTop);
                $container.css("left", rect.left);
                $container.css("top", rect.bottom + scrTop);//rect.top + =
rect.height
                //$container.css("top", rect.bottom);
                var inVal =3D this.value;
                if ( this.value.length > 0 ) {
                    showHint(inVal,$container,$inputBox,isFirst);
                } else {
                    $container.css("display", "none");
                }
                userInput =3D inVal;

            };
            //$inputBox.unbind("keydown");
            $inputBox[0].onkeydown=3Dfunction(ev){
                var evt =3D ev||event;
                if (evt.keyCode =3D=3D 27) {
                    $container.css("display", "none");
                    $inputBox.val(userInput);
                }
                if (evt.keyCode =3D=3D 13) {
                    $container.css("display", "none");
                }
                if (evt.keyCode =3D=3D 40) {
                    nowItem ++;
                    var suggItems =3D $(".sItem", $container);
                    var itemCnt =3D suggItems.length;
                    if ( nowItem =3D=3D=3D itemCnt) {
                        nowItem =3D -1;
                    }
                    suggItems.removeClass("sItemHover");
                    if (nowItem !=3D -1) {
                        var nowSugg =3D suggItems.eq(nowItem);
                        nowSugg.addClass("sItemHover");
                        $inputBox.val($(".sfirst", nowSugg).text());
                    } else {
                        $inputBox.val(userInput);
                    }
                }
                if (evt.keyCode =3D=3D 38) {
                    nowItem --;
                    var suggItems =3D $(".sItem", $container);
                    var itemCnt =3D suggItems.length;
                    if (nowItem =3D=3D -2) {
                        nowItem =3D itemCnt - 1;
                    }
                    suggItems.removeClass("sItemHover");
                    if (nowItem !=3D -1) {
                        var nowSugg =3D suggItems.eq(nowItem);
                        nowSugg.addClass("sItemHover");
                        $inputBox.val($(".sfirst", nowSugg).text());
                    } else {
                        $inputBox.val(userInput);
                    }
                }
            };
        }
        =
//=E4=BB=A5=E4=B8=8B=E6=96=B9=E6=B3=95=E6=98=AFAskSerch=E7=9A=84=E5=8E=9F=
=E5=9E=8B=E6=96=B9=E6=B3=95=E6=8B=86=E8=A7=A3
        function showHint(inVal,$container,$inputBox,isFirst) {
            $container.css("display", "block");
            $.ajax( {
                type: "get",
                url: ask_topic_autocomplete_url, =
//"http://192.168.6.210//mcs/problem_solving/10710/1",
                data: {query: inVal, fields:"title,id,comments"},
                dataType: 'jsonp',
                jsonp: "callback",
                async: false,
                success: function (obj) {
                    if (obj !=3D null && obj.contents) {
                        fillSuggestData($container, =
obj.contents,$inputBox,isFirst);
                    }
                },
                error: function(err){
                    var i =3D 0;
                    //alert('err');
                }
            } );
        }

        function fillSuggestData ($container, items,$inputBox,isFirst) {
            if (isFirst) {
                $container.html("<div =
class=3D\"sTitle\">=E5=8F=AF=E8=83=BD=E5=AD=98=E5=9C=A8=E7=B1=BB=E4=BC=BC=
=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=9A</div><div class=3D\"sFooter\"><a =
class=3D\"sFirstNewAsk\">=E6=88=91=E6=83=B3=E6=8F=90=E4=B8=80=E4=B8=AA=E6=
=96=B0=E9=97=AE=E9=A2=98</a></div>");
            } else {
                $container.html("<div =
class=3D\"sTitle\">=E5=8F=AF=E8=83=BD=E5=AD=98=E5=9C=A8=E7=B1=BB=E4=BC=BC=
=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=9A</div>");
            }
            var tpl =3D '<div class=3D"sItem clearfix"><a href=3D"{2}" =
target=3D"_blank"><span class=3D"sfirst">{0}</span><span =
class=3D"ssecond">{1}</span></a></div>';

            if (items.length > 0) {
                $container.css("opacity", 1);
                //$container.css("display", "none");
            }
            for (var i =3D 0; i < items.length; i++){
                var item =3D items[i];
                var itemHtml =3D tpl.replace(/\{0\}/, item.title)
                    .replace(/\{1\}/, item.comments + =
"=E4=B8=AA=E5=9B=9E=E7=AD=94")
                    .replace(/\{2\}/, ask_detail_url + item.id);

                if (isFirst) {
                    $(".sFooter", $container).before(itemHtml);
                } else {
                    $container.append(itemHtml);
                }
            }
            if (isFirst) {
                $("#common_ask_div_sc .sFirstNewAsk").unbind("click");
                $("#common_ask_div_sc .sFirstNewAsk").bind("click", =
function(){
                    ShowSecondPop();
                });
            }
            $(".sItem", $container).each(function(i, item) {
                    var _i =3D i;
                    var _item =3D $(item);
                    _item.bind("mouseover", function() {
                        $(".sItem", =
$container).removeClass("sItemHover");
                        $(this).addClass("sItemHover");
                        nowItem =3D _i;
                    });
                    _item.bind("click", function() {
                        //$inputBox.val($(".sfirst", $(this)).text());
                        $container.css("display","none");
                    });
                }
            );
        }
        =
//=E8=8E=B7=E5=8F=96=E5=90=8E=E5=8F=B0=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE=

        function  loadRecommTags( _title, _content){
            if (_title =3D=3D "" && _content=3D=3D"") return;
            var dataStr =3D JSON.stringify({title: _title, body: =
_content, size: 4});
            //$.ajax({

            var tempDomain =3D document.domain;
            document.domain =3D 'csdn.net';
            ajaxProxy(ask_topic_tag_suggest_proxy, {
                headers: {
                    'X-acl-token': 'Yz3GAP4stGOIrLaIrnDed-uThp8K'
                },
                type: "POST",
                url: ask_topic_tag_suggest_url + "?dataType=3Djson",
                data: dataStr,//{title: _title, body: _content, size: =
4},
                contentType: "application/json",
                dataType: "json",
                //dataType: "jsonp",
                //jsonp: "callback",
                //contentType:'application/x-www-form-urlencoded; =
charset=3DUTF-8',
                success: function(obj) {
                    document.domain =3D tempDomain;
                    if (obj!=3Dnull && obj.length > 0) {
                        var $dataContainer =3D $( ".comm_ask_second =
#ask2_tagRecomm_div");
                        $dataContainer.html("<span =
class=3D\"drt_tit\">=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE=EF=BC=9A</span>"=
);
                        //var tpl =3D "<label =
class=3D\"se_key\">{0}</label>";
                        var tpl =3D "<a href=3D\"#\" =
class=3D\"se_key\">{0}</a>";

                        var items =3D obj;
                        for (var i =3D 0; i < items.length; i++){
                            var item =3D items[i];
                            if (item.name =3D=3D "") continue;
                            var itemHtml =3D tpl.replace(/\{0\}/, =
item.name + "&nbsp;&nbsp;=EF=BC=8B");
                            $dataContainer.append(itemHtml);
                            if (i =3D=3D 4) {
                                break;
                            }
                        }
                        try {
                            window['trackingAd']($dataContainer);
                        } catch (ex) {}
                        $(".comm_ask_second =
.se_key").each(function(i,item){
                            var _item =3D $(item);
                            _item.bind("click", function(){
                                var cTagsObj =3D $(".comm_ask_second =
input[name=3D'txtSearchTags']");
                                var cTags =3D cTagsObj.val();
                                var tagArr =3D cTags.split(',');

                                var tagText =3D _item.text();
                                var tagName =3D tagText.substring(0, =
tagText.length - 3);

                                for (var i =3D 0; i < tagArr.length; i =
++) {
                                    if (tagArr[i] =3D=3D=3D tagName) {
                                        return;
                                    }
                                }
                                var oTagStr =3D cTags;
                                if (tagArr.length >=3D 5) {
                                    //$(".err_div").css("display", =
"block");
                                    =
//$(".err_txt").text("=E6=A0=87=E7=AD=BE=E6=9C=80=E5=A4=9A=E5=8F=AA=E8=83=
=BD=E5=BD=95=E5=85=A55=E4=B8=AA=EF=BC=81");
                                    =
//setTimeout(function(){$(".err_div").css("display", "none");}, 5000);
                                    return;
                                    //oTagStr =3D "";
                                    //for (var i =3D 0; i < 4; i ++) {
                                    //  oTagStr +=3D tagArr[i] + ",";
                                    //}
                                    //oTagStr =3D oTagStr.substring(0, =
oTagStr.length-1);
                                }
                                var tagCon =3D $(".comm_ask_second =
#divSearchTags");
                                var tagInput =3D tagCon.find("input");

                                var preNode =3D =
tagInput[0].previousSibling;
                                if (tagArr.length >=3D 5 && preNode) {
                                    =
tagInput[0].parentNode.removeChild(preNode);
                                }
                                tagInput.before('<span =
class=3D"tag">'+'<span>'+tagName+'</span>'+'<a =
title=3D"=E5=88=A0=E9=99=A4=E6=A0=87=E7=AD=BE" =
href=3D"javascript:;">'+'=C3=97'+'</a>'+'</span>');

                                var newTags =3D oTagStr =3D=3D "" ? =
tagName : oTagStr + "," + tagName;
                                cTagsObj.val(newTags);
                                return false;
                            });
                        });
                    }
                },
                error: function(err){
                    document.domain =3D tempDomain;
                    var i =3D 0;
                    =
//alert('=E5=88=9D=E5=A7=8B=E5=8C=96=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE=E9=
=94=99=E8=AF=AF=EF=BC=81');
                }
            });
        }

        //=E8=87=AA=E5=8A=A8Tag
        function Creat_Dynamic_Tag(conid,dataurl,subinput)
        {
            var oTagscon=3D$(conid)[0];
            var tagInput=3D$(conid).find('input')[0];

            var iNow=3D-1;
            var oldValue=3D'';
            var tags_array =3D [];

            var oUl =3D document.createElement('ul');
            oUl.className =3D 'complete_list';
            var oBody=3Ddocument.getElementsByTagName('body')[0];
            oBody.appendChild(oUl);

            tagInput.onkeyup=3Dfunction(ev)
            {
                var oEvent=3Dev || event;

                if(oEvent.keyCode=3D=3D40 || oEvent.keyCode=3D=3D38|| =
oEvent.keyCode=3D=3D13){
                    return false;
                }

                $(this).removeAttr("style");

                if(oEvent.keyCode=3D=3D8&&tagInput.value=3D=3D''){

                    oUl.style.display =3D 'none';
                    return false;
                }

                $.ajax({
                    type: "get",
                    //url:dataurl,
                    url: "https://recommend-api.csdn.net/tag/complete?",
                    //data:{'title': tagInput.value, body: =
tagInput.value, size: 4},
                    data: {'query': tagInput.value},
                    dataType:"jsonp",
                    //jsonp: "callback",
                    success: function(jsonstr){
                        =
//=E8=8E=B7=E5=8F=96input=E8=BE=93=E5=85=A5=E6=A1=86=E7=9A=84=E7=BB=9D=E5=
=AF=B9=E4=BD=8D=E7=BD=AE
                        var tagInput_pos =3D getPos(tagInput);
                        var scrTop =3D (document.body.scrollTop || =
document.documentElement.scrollTop);

                        =
//=E5=BC=B9=E5=87=BA=E4=B8=8B=E6=8B=89=E6=A1=86=E7=9B=B8=E5=AF=B9=E4=BA=8E=
input=E8=BE=93=E5=85=A5=E6=A1=86=E5=90=91=E4=B8=8B=E5=81=8F=E7=A7=BB=E5=80=
=BC
                        var mp =3D242;
                        iNow=3D-1;
                        oldValue=3DtagInput.value;

                        var data =3D jsonstr.suggestions;

                        if(data.length!=3D0)
                        {

                            var bb =3D $( window ).height() - =
tagInput_pos.top;
                            $(oUl).empty();
                            =
//$(oUl).css({left:tagInput_pos.left,top:tagInput_pos.top+mp+scrTop})
                            =
$(oUl).css({left:tagInput_pos.left,bottom:bb});
                            for(var i=3D0;i<data.length;i++)
                            {
                                $(oUl).append('<li>'+data[i]+'</li>');
                            }
                            $(oUl).css('display','block');
                        }

                        var aLi =3D oUl.children;

                        for(var i=3D0; i<aLi.length; i++)
                        {
                            aLi[i].index=3Di;

                            aLi[i].onmouseover=3Dfunction(){

                                tagInput.value =3D this.innerHTML;

                                for(var i=3D0; i<aLi.length; i++){
                                    aLi[i].className=3D'';
                                }
                                this.className =3D 'outborder';
                                iNow=3Dthis.index;
                            }
                        }
                    }

                });
            }

            tagInput.onblur =3D function()
            {
                if(tagInput.value=3D=3D'')
                {
                    return false;
                }
                else
                {
                    if ($(subinput).val() !=3D "") {
                        tags_array =3D $(subinput).val().split(",");
                    }
                    var re=3D/[^0-9a-zA-Z\u4e00-\u9fa5\-+#]+/;
                    var re2 =3D /\-$/;
                    var re3 =3D /^\-/;
                    var str_arr =3D tagInput.value.split(re);
                    var str =3D str_arr.join("-");

                    if(str=3D=3D'-')
                    {
                        $(tagInput).css('background-color','#fbd8db');
                        return false;
                    }

                    if(re2.test(str))
                    {
                        str =3D str.substring(0,str.length-1);
                    }

                    if(re3.test(str))
                    {
                        str =3D str.substr(1);
                    }

                    if(find_in_arr(tags_array,str))
                    {
                        $(tagInput).css('background-color','#fbd8db');
                        return false;
                    }
                    var tags_len =3D tags_array.length;
                    if (tags_len >=3D 5) {
                        //$(".err_div").css("display", "block");
                        =
//$(".err_txt").text("=E6=A0=87=E7=AD=BE=E6=9C=80=E5=A4=9A=E5=8F=AA=E8=83=
=BD=E5=BD=95=E5=85=A55=E4=B8=AA=EF=BC=81");
                        =
//setTimeout(function(){$(".err_div").css("display", "none");}, 5000);
                        return;
                        //tags_array.splice(tags_len - 1, 1);
                        //_remove_last_tag(conid);
                    }

                    _add_tag(conid,str);
                    tagInput.value =3D '';
                    tags_array.push(str);
                    $(subinput).val(tags_array.join(','));
                    oUl.style.display =3D 'none';
                    return false;
                }
            }

            tagInput.onkeydown=3Dfunction(ev){

                var aLi =3D oUl.children;

                var oEvent=3Dev || event;

                if(oEvent.keyCode=3D=3D13||oEvent.keyCode=3D=3D188){

                    if(tagInput.value=3D=3D'')
                    {
                        return false;
                    }
                    else
                    {
                        if ($(subinput).val() !=3D "") {
                            tags_array =3D $(subinput).val().split(",");
                        }
                        var re=3D/[^0-9a-zA-Z\u4e00-\u9fa5\-+#]+/;
                        var re2 =3D /\-$/;
                        var re3 =3D /^\-/;
                        var str_arr =3D tagInput.value.split(re);
                        var str =3D str_arr.join("-");
                        if(str=3D=3D'-')
                        {
                            =
$(tagInput).css('background-color','#fbd8db');
                            return false;
                        }

                        if(re2.test(str))
                        {
                            str =3D str.substring(0,str.length-1);
                        }

                        if(re3.test(str))
                        {
                            str =3D str.substr(1);
                        }

                        if(find_in_arr(tags_array,str))
                        {
                            =
$(tagInput).css('background-color','#fbd8db');
                            return false;
                        }
                        var tags_len =3D tags_array.length;
                        if (tags_len >=3D 5) {
                            //$(".err_div").css("display", "block");
                            =
//$(".err_txt").text("=E6=A0=87=E7=AD=BE=E6=9C=80=E5=A4=9A=E5=8F=AA=E8=83=
=BD=E5=BD=95=E5=85=A55=E4=B8=AA=EF=BC=81");
                            =
//setTimeout(function(){$(".err_div").css("display", "none");}, 5000);
                            return;
                            //tags_array.splice(tags_len - 1, 1);
                            //_remove_last_tag(conid);
                        }

                        _add_tag(conid,str);
                        tagInput.value =3D '';
                        oUl.style.display =3D 'none';
                        tags_array.push(str);
                        $(subinput).val(tags_array.join(','));
                        return false;
                    }
                }

                if(oEvent.keyCode=3D=3D8&&tagInput.value=3D=3D''){

                    _remove_last_tag(conid);
                    oUl.style.display =3D 'none';
                    tags_array.pop();
                    $(subinput).val(tags_array.join(','));
                }

                if(oEvent.keyCode=3D=3D40){
                    iNow++;

                    if(iNow=3D=3DaLi.length){
                        iNow=3D-1;
                    }

                    for(var i=3D0; i<aLi.length; i++){
                        aLi[i].className=3D'';
                    }
                    if(iNow!=3D-1){
                        aLi[iNow].className=3D'outborder';
                        tagInput.value=3DaLi[iNow].innerHTML;
                    }else{
                        tagInput.value=3DoldValue;
                    }
                }

                if(oEvent.keyCode=3D=3D38){
                    iNow--;
                    if(iNow=3D=3D-2){
                        iNow=3DaLi.length-1;
                    }

                    for(var i=3D0; i<aLi.length; i++){
                        aLi[i].className=3D'';
                    }
                    if(iNow!=3D-1){
                        aLi[iNow].className=3D'outborder';
                        tagInput.value=3DaLi[iNow].innerHTML;
                    }else{
                        tagInput.value=3DoldValue;
                    }
                    return false;
                }
            }

            =
//=E7=82=B9=E5=87=BB=E6=AF=8F=E4=B8=AA=E6=A0=87=E7=AD=BE=E5=90=8E=E7=9A=84=
'x'=E5=88=A0=E9=99=A4=E5=BD=93=E5=89=8D=E6=A0=87=E7=AD=BE

            oTagscon.onclick =3D function(e)
            {
                var e =3D e || window.event;
                var target =3D e.srcElement || e.target;

                if (target.title =
=3D=3D"=E5=88=A0=E9=99=A4=E6=A0=87=E7=AD=BE")
                {
                    if ($(subinput).val() !=3D "") {
                        tags_array =3D $(subinput).val().split(",");
                    }
                    var cur_str =3D =
target.parentNode.children[0].innerHTML;
                    tags_array =3D remove_in_arr(tags_array,cur_str);
                    $(subinput).val(tags_array.join(','));
                    _remove_cur_tag($(target));
                    tagInput.focus();
                    $(tagInput).css('background-color','#fbd8db');
                    $(oUl).css('display','none');
                }
            }

            tagInput.onclick=3Dfunction(ev){
                var oEvent=3Dev || event;
                oEvent.cancelBubble=3Dtrue;
            }

            document.onclick =3D function()
            {
                oUl.style.display =3D 'none';
            }

            =
//=E6=9F=A5=E6=89=BE=E6=95=B0=E7=BB=84=E4=B8=AD=E6=8C=87=E5=AE=9A=E7=9A=84=
=E5=85=83=E7=B4=A0,=E5=B9=B6=E4=B8=94=E5=88=A0=E9=99=A4=E8=BF=99=E4=B8=AA=
=E5=85=83=E7=B4=A0
            function remove_in_arr(arr,str)
            {
                for(var i=3D0;i<arr.length;i++)
                {
                    if(arr[i]=3D=3Dstr)
                    {
                        arr.splice(i,1);
                    }
                }
                return arr;
            }
        }


        =
//=E6=9F=A5=E6=89=BE=E6=95=B0=E7=BB=84=E4=B8=AD=E6=8C=87=E5=AE=9A=E7=9A=84=
=E5=85=83=E7=B4=A0,=E5=B9=B6=E4=B8=94=E5=88=A0=E9=99=A4=E8=BF=99=E4=B8=AA=
=E5=85=83=E7=B4=A0
        function remove_in_arr(arr,str)
        {
            for(var i=3D0;i<arr.length;i++)
            {
                if(arr[i]=3D=3Dstr)
                {
                    arr.splice(i,1);
                }
            }
            return arr;
        }


        =
//=E6=9F=A5=E6=89=BE=E6=95=B0=E7=BB=84=E4=B8=AD=E6=9C=89=E6=B2=A1=E6=9C=89=
=E7=9B=B8=E5=90=8C=E7=9A=84=E5=85=83=E7=B4=A0
        function find_in_arr(arr,str)
        {
            var find =3D false;

            for(var i=3D0;i<arr.length;i++)
            {
                if(arr[i]=3D=3Dstr)
                {
                    find =3D true;
                }
            }
            return find;
        }

        //=E5=A2=9E=E5=8A=A0=E6=A0=87=E7=AD=BE =
obj=E4=B8=BA=E5=A2=9E=E5=8A=A0=E6=A0=87=E7=AD=BE=E7=9A=84=E5=AE=B9=E5=99=A8=
=EF=BC=8Cstr=E4=B8=BA=E6=A0=87=E7=AD=BE=E4=B8=AD=E7=9A=84=E6=96=87=E5=AD=97=
=E5=86=85=E5=AE=B9=E3=80=82
        function _add_tag(obj,str)
        {
            var tagCon =3D $(obj);
            var tagInput =3D tagCon.find('input');
            tagInput.before('<span =
class=3D"tag">'+'<span>'+str+'</span>'+'<a =
title=3D"=E5=88=A0=E9=99=A4=E6=A0=87=E7=AD=BE" =
href=3D"javascript:;">'+'=C3=97'+'</a>'+'</span>');
        }

        =
//=E5=88=A0=E9=99=A4=E6=9C=80=E5=90=8E=E4=B8=80=E4=B8=AA=E6=A0=87=E7=AD=BE=

        function _remove_last_tag(obj)
        {
            var tagCon =3D $(obj);
            tagCon.find('.tag').last().remove();
        }

        //=E5=88=A0=E9=99=A4=E5=BD=93=E5=89=8D=E6=A0=87=E7=AD=BE
        function _remove_cur_tag(obj)
        {
            obj.parent().remove();
        }

        function getPos(obj)
        {
            var l=3D0;
            var t=3D0;
            while(obj)
            {
                l+=3Dobj.offsetLeft;
                t+=3Dobj.offsetTop;
                obj=3Dobj.offsetParent;
            };
            return {left:l,top:t}
        };

    });
})();

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/saveToCode.js

/*=0A=
* @file =
=E5=8D=9A=E5=AE=A2=E7=9A=84=E4=BB=A3=E7=A0=81=E7=89=87=E6=AE=B5=E4=BF=9D=E5=
=AD=98=E5=88=B0code=E7=9A=84=E4=BB=A3=E7=A0=81=E7=89=87=0A=
* @author liwz=0A=
* @create Time 2016-5-19=0A=
* */=0A=
=0A=
$(function()=0A=
{=0A=
    (function(){=0A=
        var oBlog_code =3D {},=0A=
            $target,=0A=
            i =3D 0,b =3D false,=0A=
            title =3D $.trim($(".list_c_t a").text() || $(".link_title =
a").text()),=0A=
            code,lang,username,description,tags,=0A=
            newVal =3D'';=0A=
        username =3D currentUserName;=0A=
        =
//=E8=8E=B7=E5=8F=96=E9=A1=B5=E9=9D=A2=E4=B8=AD=E9=BB=98=E8=AE=A4=E7=9A=84=
tag=0A=
        oBlog_code.getTag =3D function (){=0A=
            var pageTags =3D $('.link_categories a');=0A=
            var len =3D pageTags.length,oPageTag=3D'';=0A=
            len =3D len <=3D 5 ? len : 5;=0A=
            pageTags.each(function(){=0A=
                oPageTag +=3D '<span class=3D\"label blog_tag\"><span>' =
+ $(this).text() +=0A=
                        '</span><a title=3D\"Removing tag\" =
href=3D\"javascript:;\">x</a></span>';=0A=
                newVal +=3D  $(this).text() + ',';=0A=
            });=0A=
            i=3Dlen;=0A=
            return oPageTag;=0A=
        };=0A=
        /**=0A=
         * =
=E9=A1=B5=E9=9D=A2=E5=BC=80=E5=A7=8B=E5=8A=A0=E8=BD=BD=E6=97=B6=E6=8A=8A=E6=
=94=B6=E8=97=8F=E4=BB=A3=E7=A0=81=E7=89=87=E7=9A=84=E6=8C=89=E9=92=AE=E5=92=
=8C=E5=BC=B9=E5=B1=82=E9=A2=84=E5=85=88=E5=8A=A0=E8=BD=BD=E5=88=B0=E9=A1=B5=
=E9=9D=A2=E4=B8=AD,=E4=B8=8A=E6=8A=A5=0A=
         * */=0A=
=0A=
        oBlog_code.preLoad =3D function(){=0A=
            var _this =3D this;=0A=
            var oWrap =3D $(".dp-highlighter,.prettyprint"),=0A=
                    oSnippetsBtn =3D '<div class=3D"save_code =
tracking-ad" data-mod=3D"popu_249"><a href=3D"javascript:;"><img =
src=3D"http://static.blog.csdn.net/images/save_snippets.png"/></a></div>'=
,=0A=
                    winHref=3D window.location.href,=0A=
                    oTagHtml;=0A=
            oWrap.each(function(){=0A=
                $(this).append(oSnippetsBtn);=0A=
            });=0A=
            oTagHtml =3D _this.getTag();=0A=
            $('body').append("<div id=3D'mask_code'></div>");=0A=
            var oHtml =3D '<div class=3D"gist_edit" ><div =
class=3D"save_snippets clearfix">'+=0A=
                    '<div =
class=3D"tit"><h3>=E4=BF=9D=E5=AD=98=E4=BB=A3=E7=A0=81=E7=89=87</h3><span=
>=E6=95=B4=E7=90=86=E5=92=8C=E5=88=86=E4=BA=AB=E4=BF=9D=E5=AD=98=E7=9A=84=
=E4=BB=A3=E7=A0=81=E7=89=87=EF=BC=8C=E8=AF=B7=E8=AE=BF=E9=97=AE<a =
href=3D"https://code.csdn.net/snippets_manage" =
target=3D"_blank">=E4=BB=A3=E7=A0=81=E7=AC=94=E8=AE=B0</a></span></div>'+=0A=
                    '<div class=3D"con_form"><ul class=3D"gist_edit_list =
clearfix"><li><span class=3D"red">*</span><span =
class=3D"txt">=E6=A0=87=E9=A2=98</span>'+=0A=
                    '<input id=3D"form_title" class=3D"form-input" =
placeholder=3D"'+decodeURIComponent(title)+'" =
type=3D"text"></li><li><span class=3D"red">*</span><span =
class=3D"txt">=E6=8F=8F=E8=BF=B0</span><textarea id=3D"form-textarea" =
class=3D"form-textarea" placeholder=3D"'+decodeURIComponent(title) + =
'=EF=BC=9A ' + winHref + '"></textarea></li><li><span =
class=3D"red">&nbsp;</span><span =
class=3D"txt">=E6=A0=87=E7=AD=BE</span>'+=0A=
                    '<div id=3D"divSearchTags">';=0A=
            oHtml +=3D oTagHtml;=0A=
            oHtml +=3D'<input id=3D"insertTag" class=3D"insertTag" =
placeholder=3D"=E8=AF=B7=E8=BE=93=E5=85=A5=E6=A0=87=E7=AD=BE=EF=BC=8C=E6=8C=
=89Enter=E7=94=9F=E6=88=90(=E6=9C=80=E5=A4=9A5=E9=A1=B9)" type=3D"text" =
value=3D"" name=3D"insertTag"  maxlength=3D"21" style=3D"color: rgb(51, =
51, 51);">'+=0A=
                    '<input id=3D"OrganTag" class=3D"OrganTag" =
type=3D"hidden" name=3D"OrganTag" value=3D'+newVal+'>'+=0A=
                    '<input id=3D"OldOrganTag" class=3D"OldOrganTag" =
type=3D"hidden" name=3D"OldOrganTag" value=3D""><input type=3D"hidden" =
name=3D"txtSearchTags"></div>'+=0A=
=0A=
                    '</li></ul></div><div class=3D"bottom-bar"><a =
href=3D"javascript:;" class=3D"btn-submit =
btn-cancel">=E5=8F=96=E6=B6=88</a><span class=3D"tracking-ad"  =
data-mod=3D"popu_250"><a class=3D"btn-submit btn-confirm"  =
href=3D"javascript:;">=E7=A1=AE=E5=AE=9A</a></span></div></div></div>';=0A=
=0A=
            $('body').append(oHtml);=0A=
        }=0A=
        oBlog_code.preLoad();=0A=
=0A=
=0A=
         =
//=E9=BC=A0=E6=A0=87=E7=A7=BB=E4=B8=8A=E5=8E=BB=E6=98=BE=E7=A4=BA=E4=BF=9D=
=E5=AD=98=E5=88=B0=E6=88=91=E7=9A=84=E4=BB=A3=E7=A0=81=E7=89=87=E6=8C=89=E9=
=92=AE=0A=
        (function()=0A=
        {=0A=
            =
$(document).delegate('.dp-highlighter,.prettyprint','mouseenter',function=
()=0A=
            {=0A=
                if($(this).height() < 80){=0A=
                    //$(this).addClass("pad_bot");=0A=
                    $(this).find(".save_code =
img").attr("src",'http://static.blog.csdn.net/images/save_snippets_01.png=
');=0A=
                }=0A=
                $(this).find('.save_code').show();=0A=
                return false;=0A=
            });=0A=
            =
$(document).delegate('.dp-highlighter,.prettyprint','mouseleave',function=
()=0A=
            {=0A=
                $(this).find('.save_code').hide();=0A=
                //$(this).removeClass("pad_bot");=0A=
                return false;=0A=
            });=0A=
        })();=0A=
        oBlog_code.getLang =3D function (str,htmlEdit){=0A=
            var _this =3D this;=0A=
            if(str !=3D undefined){=0A=
                str =3D str.split(' ')[0];=0A=
                str =3D str.substring(9,str.length);=0A=
                //lang =3D preLan;=0A=
                _this.handle(str);=0A=
            }else{=0A=
                htmlEdit =3D =
encodeURIComponent(htmlEdit.substring(1,htmlEdit.length-1));=0A=
                _this.handle(htmlEdit);=0A=
            }=0A=
        };=0A=
        =
//=E5=A4=84=E7=90=86=E5=AD=97=E7=AC=A6=E4=B8=B2=E6=88=90code=E5=8F=AF=E8=AF=
=86=E5=88=AB=E7=9A=84=E8=AF=AD=E8=A8=80=E7=B1=BB=E5=9E=8B=0A=
        oBlog_code.handle =3D function (str){=0A=
            var langArr =3D {=0A=
                'cpp':'c++',=0A=
                'csharp':'c#',=0A=
                'obj-c':'objective-c',=0A=
                'objc':'objective-c'=0A=
            };=0A=
            for(var key in langArr){=0A=
                if(str.toLowerCase() =3D=3D key ){=0A=
                    if(str !=3D langArr[str]){=0A=
                        str =3D langArr[str];=0A=
                    }=0A=
                }=0A=
            }=0A=
            lang =3D encodeURIComponent(str);=0A=
        };=0A=
        =
//=E7=82=B9=E5=87=BB=E4=BF=9D=E5=AD=98=E6=8C=89=E9=92=AE=E5=BC=B9=E5=87=BA=
=E5=BC=B9=E5=B1=82=0A=
        oBlog_code.showPop =3D function()=0A=
        {=0A=
            var _this =3D this;=0A=
=0A=
            $(document).delegate('.save_code','click',function(ev)=0A=
            {=0A=
                var event =3D ev || event;=0A=
                title =3D $.trim($(".list_c_t a").text() || =
$(".link_title a").text());=0A=
                $target =3D $(event.target || event.srcElement);=0A=
                code =3D =
$(this).parents('.prettyprint').find('code').text() || =
$(this).parents('.dp-highlighter').next('pre').text();=0A=
                code =3D encodeURIComponent(code);=0A=
                var preLan =3D =
$(this).parents('.prettyprint').find('code').attr('class');=0A=
                var htmlEdit =3D =
$(this).parents('.dp-highlighter').find('.bar').find('strong').text() || =
$(this).parents('.dp-highlighter').find('.bar').find('b').text();=0A=
                //=E8=8E=B7=E5=8F=96=E8=AF=AD=E8=A8=80=E7=B1=BB=E5=9E=8B=0A=
                _this.getLang(preLan,htmlEdit);=0A=
=0A=
                if(currentUserName)=0A=
                {=0A=
                    $('#mask_code').show();=0A=
                    $('.gist_edit').show();=0A=
=0A=
                    var offsetTop =3D $(window).scrollTop() + =
$(window).height()/2;=0A=
                    $(".gist_edit").css({=0A=
                        "top":offsetTop=0A=
                    });=0A=
                }=0A=
                else=0A=
                {=0A=
                    window.location.href =3D =
"https://passport.csdn.net/";=0A=
                }=0A=
            })=0A=
        };=0A=
        oBlog_code.showPop();=0A=
=0A=
        oBlog_code.hidePop =3D function(obj)=0A=
        {=0A=
            var _this =3D this;=0A=
            $(document).delegate('.btn-cancel','click',function()=0A=
            {=0A=
                $("#form-textarea").val('');=0A=
                $("#form_title").val('');=0A=
                _this.resetTag(obj);=0A=
            });=0A=
=0A=
            =
//=E7=82=B9=E5=87=BB=E7=A1=AE=E5=AE=9A=E4=BF=9D=E5=AD=98=E5=88=B0code=E7=9A=
=84=E4=BB=A3=E7=A0=81=E6=AE=B5=0A=
            $(document).delegate('.btn-confirm','click',function()=0A=
            {=0A=
                description =3D =
encodeURIComponent($("#form-textarea").val() || =
$("#form-textarea").attr('placeholder'));=0A=
                title =3D encodeURIComponent($("#form_title").val() || =
title);=0A=
                tags =3D encodeURIComponent($("#OrganTag").val());=0A=
=0A=
                $.ajax({=0A=
                    type: "post",=0A=
                    /*dataType:"jsonp",=0A=
                    jsonp:'callback',*/=0A=
                    url: =
"http://blog.csdn.net/"+currentUserName+"/svc/addpostcode",=0A=
                    data: 'code=3D'+code+'&lang=3D'+lang + =
'&username=3D'+username + '&title=3D'+title + =
'&description=3D'+description + '&tags=3D'+tags,=0A=
                    success: function(msg){=0A=
                        if(msg)=0A=
                        {=0A=
                            =
alert("=E4=BF=9D=E5=AD=98=E6=88=90=E5=8A=9F=EF=BC=81");=0A=
                            _this.resetTag(obj);=0A=
                        }=0A=
                    },=0A=
                    error:function()=0A=
                    {=0A=
                        alert("=E4=BF=9D=E5=AD=98=E5=A4=B1=E8=B4=A5");=0A=
                    }=0A=
                });=0A=
            });=0A=
        };=0A=
        oBlog_code.hidePop('#divSearchTags');=0A=
=0A=
        //=E6=8A=8A=E5=BC=B9=E5=B1=82=E9=9A=90=E8=97=8F=0A=
        oBlog_code.resetTag =3D function ()=0A=
        {=0A=
            $('#mask_code').hide();=0A=
            $('.gist_edit').hide();=0A=
        };=0A=
=0A=
        oBlog_code.enterTag =3D function (Wrap,insert){=0A=
            var _this =3D this;=0A=
            var event =3D arguments.callee.caller.arguments[0] || =
window.event; =
//=E6=B6=88=E9=99=A4=E6=B5=8F=E8=A7=88=E5=99=A8=E5=B7=AE=E5=BC=82=0A=
            if (event.keyCode =3D=3D 13 || event.keyCode =3D=3D 188) {=0A=
                _this.addTag(Wrap,insert);=0A=
            }=0A=
        };=0A=
        oBlog_code.addTag =3D function (Wrap,insert)=0A=
        {=0A=
            var insertval =3D $.trim($(insert).val());=0A=
            if (insertval !=3D "")=0A=
            {=0A=
                //=E6=8E=92=E9=87=8D=0A=
                $(''+Wrap+'>span>span').each(=0A=
                        function ()=0A=
                        {=0A=
                            var spanval =3D$.trim($(this).html());=0A=
                            if (insertval =3D=3D spanval)=0A=
                            {=0A=
                                b =3D true;=0A=
                                =
//=E5=80=BC=E7=9B=B8=E5=90=8C=EF=BC=8C=E6=8A=8Aflg=E7=9A=84=E5=80=BC=E8=AE=
=BE=E4=B8=BAtrue=EF=BC=8C=E5=86=8D=E8=B0=83=E7=94=A8test()=E6=96=B9=E6=B3=
=95=E6=97=B6=E5=BC=B9=E5=87=BA=E2=80=9C=E6=AD=A4=E9=A1=B9=E5=B7=B2=E8=A2=AB=
=E9=80=89=E6=8B=A9=E2=80=9D=0A=
                                $(insert).off('keydown');   =
//=E5=85=88=E6=8A=8Akeydown=E4=BA=8B=E4=BB=B6=E5=85=B3=E9=97=AD=E4=BA=86=EF=
=BC=8C=E5=86=8D=E6=8C=89=E7=A9=BA=E6=A0=BC=E7=9A=84=E6=97=B6=E5=80=99=E8=AE=
=A9test()=E6=96=B9=E6=B3=95=E7=94=9F=E6=95=88=0A=
                                if(i < 5)    =
//=E5=8F=AA=E6=9C=89=E5=9C=A8i<5=E7=9A=84=E6=97=B6=E5=80=99=E6=89=8D=E8=AE=
=A9=E2=80=9C=E6=AD=A4=E9=A1=B9=E5=B7=B2=E9=80=89=E6=8B=A9=E5=BC=B9=E5=87=BA=
=E2=80=9D,=E5=A6=82=E6=9E=9Ci>5=E6=97=B6=E4=B9=9F=E8=BE=93=E5=85=A5=E4=B8=
=80=E4=B8=AA=E5=92=8C=E5=89=8D=E9=9D=A2=E9=87=8D=E5=A4=8D=E7=9A=84=E6=A0=87=
=E7=AD=BE=E7=9A=84=E8=AF=9D=EF=BC=8C=E8=BF=99=E5=8F=A5=E8=AF=9D=E5=B0=B1=E4=
=B8=8D=E5=86=8D=E5=BC=B9=E5=87=BA=0A=
                                {=0A=
                                    test(true);=0A=
                                }=0A=
                                return;=0A=
                            }=0A=
                        }=0A=
                );=0A=
                =
//=E5=A6=82=E6=9E=9C=E6=A0=87=E7=AD=BE=E4=B8=AA=E6=95=B0=E5=A4=A7=E4=BA=8E=
5=EF=BC=8C=E5=B0=B1=E6=8A=8Ab=E7=BD=AE=E4=B8=BAtrue,=E5=8D=B3=E4=B8=8D=E8=
=AE=A9=E5=86=8D=E6=B7=BB=E5=8A=A0=0A=
                if(i>=3D5)=0A=
                {=0A=
                    b =3D true;=0A=
                    test(false);=0A=
                }=0A=
                if(b=3D=3Dfalse)    =
//=E5=8F=AA=E6=9C=89b=3Dfalse=E7=9A=84=E6=97=B6=E5=80=99=E6=89=8D=E6=B7=BB=
=E5=8A=A0=E6=A0=87=E7=AD=BE=0A=
                {=0A=
=0A=
                    $(insert).before('<span class=3D\"label =
blog_tag\"><span>' + insertval +=0A=
                            '</span><a title=3D\"Removing tag\" =
href=3D\"javascript:;\">x</a></span>');=0A=
                    newVal +=3D  insertval + ',';=0A=
                    i++;=0A=
                }=0A=
                if(b =3D=3D true)=0A=
                {=0A=
                    b =3D false;      =
//b=3Dtrue=E6=9C=89=E4=B8=A4=E7=A7=8D=E6=83=85=E5=86=B5=EF=BC=8C=EF=BC=88=
1=EF=BC=89=E6=98=AF=E5=92=8C=E5=89=8D=E9=9D=A2=E6=A0=87=E7=AD=BE=E9=87=8D=
=E5=A4=8D=E4=BA=86  =
=EF=BC=882=EF=BC=89=E5=B7=B2=E7=BB=8F=E5=A4=A7=E4=BA=8E5=E9=A1=B9=EF=BC=8C=
=E5=A6=82=E6=9E=9C=E6=98=AF=E7=AC=AC=E4=B8=80=E7=A7=8D=E6=83=85=E5=86=B5=EF=
=BC=8C=E6=8A=8Ab=E7=BD=AE=EF=BC=8C=E9=82=A3=E5=90=8E=E9=9D=A2=E5=B0=B1=E8=
=A6=81=E5=86=8D=E6=8A=8Ab=E7=BD=AE=E4=B8=BAfalse=EF=BC=8C=E8=AE=A9=E5=90=8E=
=E9=9D=A2=E7=9A=84=E8=BF=98=E5=8F=AF=E4=BB=A5=E5=86=8D=E6=B7=BB=E5=8A=A0=0A=
                    $(insert).val('');=0A=
                }=0A=
            }=0A=
            $(insert).val('');   =
//=E6=B7=BB=E5=8A=A0=E6=88=90=E4=B8=BA=E6=A0=87=E7=AD=BE=E4=BA=86=EF=BC=8C=
=E5=86=8D=E6=8A=8A=E8=BE=93=E5=85=A5=E6=A1=86=E4=B8=AD=E7=9A=84=E5=80=BC=E7=
=BB=99=E6=B8=85=E7=A9=BA=0A=
            $('#OrganTag').val(newVal);=0A=
=0A=
            =
//=E8=BE=93=E5=85=A5=E6=A1=86=E7=9A=84=E6=97=B6=E5=80=99=EF=BC=8C=E5=A6=82=
=E6=9E=9C=E6=9C=89=E7=9B=B8=E5=90=8C=E7=9A=84=E5=B0=B1=E5=BB=B6=E6=97=B63=
00ms=E5=BC=B9=E5=87=BA=E8=AD=A6=E5=91=8A=0A=
            function test(flg)=0A=
            {=0A=
                if(flg)=0A=
                {=0A=
                    setTimeout(function(){=0A=
                        =
alert("=E6=AD=A4=E9=A1=B9=E5=B7=B2=E8=A2=AB=E9=80=89=E6=8B=A9");=0A=
                    },300);=0A=
                }=0A=
                else{=0A=
                    setTimeout(function(){=0A=
                        alert("=E5=B7=B2=E9=80=89=E6=8B=A95=E9=A1=B9");=0A=
                    },300);=0A=
                }=0A=
            }=0A=
        };=0A=
        /**=0A=
         * =E5=88=A0=E9=99=A4=E6=A0=87=E7=AD=BE=0A=
         * */=0A=
        oBlog_code.DelTag =3D function(obj) {=0A=
            $(obj).parent("span").remove();=0A=
            var delVal =3D $(obj).siblings("span").text();=0A=
            newVal =3D newVal.substring(0,newVal.length-1);=0A=
            if(newVal.indexOf(delVal) !=3D -1){=0A=
                var newValArr =3D newVal.split(',');=0A=
                for(var j =3D0;j<newValArr.length; j++){=0A=
                    if(delVal =3D=3D newValArr[j]){=0A=
                        newValArr.splice(j,1);=0A=
                    }=0A=
                }=0A=
                newVal =3D newValArr.join(',') + ',';=0A=
                $('#OrganTag').val(newVal);=0A=
            }=0A=
            i--;=0A=
        };=0A=
=0A=
        oBlog_code.Tag =3D function(Wrap,insert){=0A=
            var _this =3D this;=0A=
            $(document).delegate($(insert),'keydown',function()=0A=
            {=0A=
                _this.enterTag(Wrap,insert);=0A=
            });=0A=
            $(document).delegate(''+Wrap+' span a','click',function()=0A=
            {=0A=
                _this.DelTag(this);=0A=
            });=0A=
        };=0A=
        oBlog_code.Tag('#divSearchTags','#insertTag');=0A=
=0A=
    }).call(this);=0A=
});=0A=

------=_NextPart_000_0000_01D24FAB.DB890E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://csdnimg.cn/rabbit/tracking-ad/main.js?75eacd8

// Generated by CoffeeScript 1.8.0=0A=
=0A=
/*=0A=
 @file =E6=8E=A8=E5=B9=BF=E4=BD=8D=E8=B7=9F=E8=B8=AA=0A=
 @author =E6=9B=B9=E5=AE=87 <caoyu#at#csdn.net>=0A=
 @version 20130902=0A=
 */=0A=
=0A=
(function() {=0A=
  (function(definition, undef) {=0A=
    var $, exports, global, i;=0A=
    global =3D this;=0A=
    $ =3D global.jQuery;=0A=
    exports =3D {};=0A=
    definition(global, exports, $);=0A=
    if (global.csdn =3D=3D=3D undef) {=0A=
      global.csdn =3D exports;=0A=
    }=0A=
    for (i in exports) {=0A=
      global[i] =3D global.csdn[i] =3D exports[i];=0A=
    }=0A=
  })(function(global, exports, $, undef) {=0A=
    var iarr =3D [], _key=3D0;=0A=
    var ads, crossdomainGet, domReadyListener, done, findAllAds, =
linksContent, protocol, ref, s, trackingAd, viewedHeight;=0A=
    protocol =3D global.location.protocol.substr(0, 4) =3D=3D=3D 'http' =
? '' : 'http:';=0A=
    ref =3D global.document.referrer || '-';=0A=
    ads =3D [];=0A=
    viewedHeight =3D 0;=0A=
    domReadyListener =3D function() {=0A=
      var ad, groups, k, n, v, w, _i, _len, _ref, _ref1;=0A=
      n =3D 0;=0A=
      w =3D $(global).scroll(function() {=0A=
        if (!ads[0]) {=0A=
          return;=0A=
        }=0A=
        global.clearTimeout(n);=0A=
        return n =3D global.setTimeout(function() { =0A=
          var ad, top, _i, _len;=0A=
          top =3D w.scrollTop() || document.body.scrollTop || =
document.documentElement.scrollTop  + w.height();  =
//IE=E5=85=BC=E5=AE=B9=E9=97=AE=E9=A2=98=0A=
          if (top > viewedHeight) {=0A=
            viewedHeight =3D top;=0A=
            for (_i =3D 0, _len =3D ads.length; _i < _len; _i++) {=0A=
              ad =3D ads[_i];=0A=
              if (!(!ad.viewed && top >=3D ad.top)) {=0A=
                continue;=0A=
              }=0A=
              ad.viewed =3D true;=0A=
              crossdomainGet(ad.data(), true);=0A=
            }=0A=
          }=0A=
        }, 100);=0A=
      });=0A=
      groups =3D {};=0A=
      _ref =3D $('.tracking-ad,.csdn-tracking-statistics');=0A=
      for (_i =3D 0, _len =3D _ref.length; _i < _len; _i++) {=0A=
        ad =3D _ref[_i];=0A=
        k =3D $(ad).attr('data-mod');=0A=
        ((_ref1 =3D groups[k]) !=3D null ? _ref1.push(ad) : void 0) || =
(groups[k] =3D [ad]);=0A=
      }=0A=
      for (k in groups) {=0A=
        v =3D groups[k];=0A=
        trackingAd($(v));=0A=
      }=0A=
      return w.triggerHandler('scroll');=0A=
    };=0A=
=0A=
    /*=0A=
     =
=E8=B7=9F=E8=B8=AA=E6=8C=87=E5=AE=9A=E7=9A=84=E6=8E=A8=E5=B9=BF=E4=BD=8D=EF=
=BC=8C=E5=8C=85=E6=8B=AC=E6=9B=9D=E5=85=89=E5=92=8C=E7=82=B9=E5=87=BB=0A=
     @param {CSS Selector/jQuery Object/DOMElement/DOMElement[]} ele =
=E5=8C=85=E5=90=AB=E6=8E=A8=E5=B9=BF=E9=93=BE=E6=8E=A5=E7=9A=84=E6=8E=A8=E5=
=B9=BF=E4=BD=8D=E5=AE=B9=E5=99=A8=E6=A0=87=E7=AD=BE=0A=
     @param {Object} opts =E9=80=89=E9=A1=B9=EF=BC=8C=E5=A6=82=E4=B8=8B=0A=
     @param {String} opts.pid =
=E4=BA=A7=E5=93=81=E7=BA=BF=E6=A0=87=E8=AF=86=EF=BC=8C=E5=8F=AF=E9=80=89=EF=
=BC=8C=E9=BB=98=E8=AE=A4=E5=8F=96=E5=BD=93=E5=89=8D=E9=A1=B5=E5=9F=9F=E5=90=
=8D=E4=B8=ADfoo.csdn.net=E4=B8=AD=E7=9A=84foo=EF=BC=8C=E4=B8=8D=E4=BC=9A=E5=
=A4=84=E7=90=86=E4=B8=89=E7=BA=A7=E5=9F=9F=E5=90=8D=E7=9A=84=E6=83=85=E5=86=
=B5=0A=
     @param {String} opts.mod =
=E6=A8=A1=E5=9D=97id=EF=BC=8C=E5=BF=85=E9=A1=BB=0A=
     @param {String} opts.mtp =
=E6=A8=A1=E5=9D=97=E7=B1=BB=E5=9E=8B=EF=BC=8C=E5=8F=AF=E9=80=89=EF=BC=8C=E9=
=BB=98=E8=AE=A4=E4=BC=9A=E6=8E=A2=E6=B5=8B=E6=98=AF=E5=90=A6=E6=9C=89=E5=B8=
=A6=E9=93=BE=E6=8E=A5=E7=9A=84=E5=9B=BE=E7=89=87=EF=BC=8C=E5=A6=82=E6=9E=9C=
=E6=9C=89=E5=88=99=E6=98=AF3=E5=9B=BE=E7=89=87=EF=BC=8C=E5=90=A6=E5=88=99=
2=E6=96=87=E5=AD=97=0A=
     @param {String/RegExp} opts.trim =
=E5=AF=B9=E6=9C=80=E7=BB=88=E5=90=8D=E7=A7=B0=E5=81=9A=E8=BF=9B=E4=B8=80=E6=
=AD=A5=E8=A3=81=E5=89=AA=E7=9A=84=E6=AD=A3=E5=88=99=EF=BC=8C=E5=8F=AF=E9=80=
=89=EF=BC=8C=E5=A7=8B=E7=BB=88=E4=BC=9A=E5=85=88=E8=A3=81=E5=89=AA=E6=8E=89=
=E4=B8=A4=E8=BE=B9=E7=9A=84=E7=A9=BA=E7=99=BD=E5=AD=97=E7=AC=A6=0A=
     @param {CSS Selector} filter =
=E5=8F=AF=E9=80=89=EF=BC=8C=E5=AF=B9=E8=B7=9F=E8=B8=AA=E7=9A=84=E6=8E=A8=E5=
=B9=BF=E9=93=BE=E6=8E=A5=E8=BF=9B=E4=B8=80=E6=AD=A5=E8=BF=87=E6=BB=A4=EF=BC=
=8C=E8=BF=99=E9=87=8C=E5=B0=86=E5=8C=85=E5=90=AB=E9=82=A3=E4=BA=9Bclass=3D=
"foo"=E4=BD=86=E6=98=AF=E4=B8=8D=E5=8C=85=E6=8B=ACclass=3D"foo =
bar"=E7=9A=84=E9=93=BE=E6=8E=A5=0A=
     */=0A=
    trackingAd =3D exports.trackingAd =3D function(ele, opts) { =0A=
      var filter, mod, mtp, pid, trim, _ref,dsm;=0A=
      if (opts =3D=3D null) {=0A=
        opts =3D {};=0A=
      }=0A=
      if (typeof ele =3D=3D=3D 'string' || !ele instanceof $) {=0A=
        ele =3D $(ele);=0A=
      }=0A=
      pid =3D opts.pid || ele.attr('data-pid') || =
global.document.body.getAttribute('data-pid') || ((_ref =3D =
/(\w+)\.\w+\.\w+$/.exec(global.location.host)) !=3D null ? _ref[1] : =
void 0);=0A=
      mod =3D opts.mod || ele.attr('data-mod');=0A=
      blk =3D opts.blk || ele.attr("chg-blk");=0A=
      mtp =3D opts.mtp || ele.attr('data-mtp') || ($('a img', ele)[0] ? =
3 : 2);=0A=
      trim =3D opts.trim || ele.attr('data-trim');=0A=
      //=E6=8F=90=E4=BA=A4=E6=A8=A1=E5=BC=8F =
=E9=BB=98=E8=AE=A4GET=E6=A8=A1=E5=BC=8F=0A=
      dsm =3D typeof (dsm=3Dopts.dsm || ele.attr('data-dsm') || 'get') =
=3D=3D=3D "string" ? (dsm.toLowerCase()) : 'get'; =0A=
      =0A=
      if (typeof trim =3D=3D=3D 'string' && trim.charAt(0) =3D=3D=3D =
'/') {=0A=
        trim =3D trim.split('/');=0A=
        trim =3D new RegExp(trim.slice(1, -1), trim.slice(-1));=0A=
      }=0A=
=0A=
      filter =3D opts.filter || ele.attr('data-filter') || '';=0A=
      return findAllAds(ele, filter, function(links) {=0A=
        var ad, con;=0A=
        con =3D linksContent(mtp, trim, links);=0A=
        ad =3D {=0A=
          top: ele.offset().top,=0A=
          ele: ele,=0A=
          viewed: false,=0A=
          data: function() {=0A=
            var _ref1;=0A=
            return {=0A=
              uid: ((_ref1 =3D /(; =
)?(UserName|_javaeye_cookie_id_)=3D([^;]+)/.exec(global.document.cookie))=
 !=3D null ? _ref1[3] : void 0) || '-',=0A=
              ref: ref,=0A=
              pid: pid,=0A=
              mod: mod,=0A=
              dsm: dsm,=0A=
              mtp: mtp,=0A=
              con: con,=0A=
              ck: '-'=0A=
            };=0A=
          }=0A=
        };=0A=
        ads.push(ad);=0A=
        if (viewedHeight > ad.top) {=0A=
          $(global).triggerHandler('scroll');=0A=
        }=0A=
        links.each(function() {=0A=
          if (blk =3D=3D=3D "0") return;=0A=
          if (this.target =3D=3D=3D '') {=0A=
            return this.target =3D '_blank';=0A=
          }=0A=
        });=0A=
        return links.click(function() {=0A=
          var d;=0A=
          if (this.href && this.innerHTML.replace(/^\s+|\s+$/g, '')) {=0A=
            d =3D ad.data();=0A=
            d.ck =3D linksContent(mtp, trim, $(this));=0A=
            crossdomainGet(d);=0A=
          }=0A=
        });=0A=
      });=0A=
    };=0A=
    findAllAds =3D function(cont, filter, callback) {=0A=
      var count, iframes, links;=0A=
      links =3D $('a' + filter, cont); =0A=
      iframes =3D $('iframe', cont);=0A=
      if (iframes[0]) {=0A=
        count =3D iframes.length;=0A=
        return iframes.each(function() {=0A=
          var ifr, listener;=0A=
          ifr =3D $(this);=0A=
          listener =3D function() {=0A=
            if (ifr =3D=3D=3D null) {=0A=
              return;=0A=
            }=0A=
            links =3D links.add(ifr.contents().find('a' + filter));=0A=
            ifr =3D null;=0A=
            count--;=0A=
            if (count =3D=3D=3D 0) {=0A=
              return callback(links);=0A=
            }=0A=
          };=0A=
          return ifr.load(listener);=0A=
        });=0A=
      } else {=0A=
        return callback(links);=0A=
      }=0A=
    };=0A=
    linksContent =3D function(mtp, trim, ele) {=0A=
      return ele.map(function() {=0A=
        var img, text;=0A=
        if (mtp =3D=3D=3D 3) {=0A=
          img =3D $('img', this)[0];=0A=
          if (img) {=0A=
            text =3D img.title || img.alt || img.src;=0A=
          }=0A=
        }=0A=
        if (!text) {=0A=
          text =3D this.innerHTML.replace(/<[^>]+>/g, =
'').replace(/^\s+|\s+$/g, '') || this.title || this.alt || =
this.innerHTML.replace(/^\s+|\s+$/g, '');=0A=
        }=0A=
          =0A=
        if (trim) {=0A=
          text =3D (text + '').replace(trim, '');=0A=
        }=0A=
        if (this.attributes['strategy'])=0A=
        {=0A=
            return text + ',' + this.href + ',' + =
this.attributes['strategy'].nodeValue;=0A=
        }=0A=
        else=0A=
        {=0A=
            return text + ',' + this.href;=0A=
        }=0A=
=0A=
      }).get().join(';');=0A=
    };=0A=
    crossdomainGet =3D function(data, isA) {=0A=
      =
//=E6=B5=8B=E8=AF=95=E5=9C=B0=E5=9D=80=E5=92=8C=E7=9C=9F=E5=AE=9E=E8=AE=BF=
=E9=97=AE=E5=9C=B0=E5=9D=80=EF=BC=8C=E6=B5=8B=E8=AF=95=E5=86=85=E5=AE=B9=E8=
=87=AA=E5=B7=B1=E6=9C=AC=E5=9C=B0=E6=A8=A1=E4=BB=BF=0A=
      var _url =3D protocol + '//dc.csdn.net/re?dataType=3Dtext',dsm;=0A=
      var str =3D '';=0A=
      if (!data.con) {=0A=
        return;=0A=
      }=0A=
      dsm =3D data['dsm']; =0A=
      data[Math.random() * 10000 | 0] =3D '';=0A=
      data['x-acl-token'] =3D 'status_js_dkuyqthzbajmncbsb_token';=0A=
      //=E5=A4=84=E7=90=86body=E5=AD=97=E7=AC=A6=E6=A0=BC=E5=BC=8F=0A=
      if((data['dsm']).toLowerCase()=3D=3D=3D"post")=0A=
      {=0A=
         str =3D JSON.stringify(data);=0A=
         str =3D ("["+str+"]").toString();=0A=
      }=0A=
      if(dsm=3D=3D=3D"get")=0A=
      {   =0A=
          if (isA) {=0A=
            var ik =3D iarr.push(new Image()) - 1;=0A=
            iarr[ik].onload =3D iarr[ik].onerror =3D function () {=0A=
              var _a =3D ik;=0A=
              iarr[_a].onload =3D iarr[_a].onerror =3D null;=0A=
              iarr[_a].removeAttribute("src");=0A=
              return iarr[_a] =3D null;=0A=
            }=0A=
            return iarr[ik].src =3D protocol + '//dc.csdn.net/re?' + =
$.param(data);=0A=
          } else {=0A=
            var i;=0A=
            i =3D new Image();=0A=
            i.onload =3D i.onerror =3D function() {=0A=
              i.onload =3D i.onerror =3D null;=0A=
              i.removeAttribute('src');=0A=
              return i =3D null;=0A=
            };=0A=
            return i.src =3D protocol + '//dc.csdn.net/re?' + =
$.param(data);=0A=
          }=0A=
      }=0A=
      if(dsm=3D=3D=3D"post")=0A=
      {    =0A=
           $.ajax({=0A=
               url:_url,=0A=
               type:'post',=0A=
               async:true,=0A=
               contentType:'text/plain',=0A=
               dataType:'json',=0A=
               xhrFields:{=0A=
                 withCredentials:true=0A=
               },=0A=
               success:function(reponse){=0A=
               },=0A=
               data:str,=0A=
               error:function(){=0A=
                   =
console.error('=E6=9C=8D=E5=8A=A1=E5=99=A8=E6=9B=9D=E5=85=89=E9=94=99=E8=AF=
=AF=EF=BC=81')=0A=
               }=0A=
           });=0A=
      } =0A=
    };=0A=
    if ($ =3D=3D=3D undef) {=0A=
      done =3D false;=0A=
      s =3D document.createElement('script');=0A=
      s.type =3D 'text/javascript';=0A=
      s.charset =3D 'utf-8';=0A=
      current_protocol =3D location.protocol;=0A=
      s.src =3D =
current_protocol+'//c.csdnimg.cn/public/common/libs/jquery/jquery-1.11.1.=
min.js';=0A=
      s.onload =3D s.onreadystatechange =3D function() {=0A=
        if (!done && (!this.readyState || this.readyState =3D=3D=3D =
'loaded' || this.readyState =3D=3D=3D 'complete')) {=0A=
          done =3D true;=0A=
          global.jQuery.noConflict();=0A=
          $ =3D global.jQuery;=0A=
          //=E8=AE=BE=E7=BD=AEIE=E8=B7=A8=E5=9F=9F=E8=AE=BF=E9=97=AE =
=E5=85=BC=E5=AE=B9=E5=88=B0=E5=8C=85=E5=90=AB9=E4=BB=A5=E4=B8=8B=0A=
          if(window.navigator.appVersion.match(/MSIE =
(\d)*/i)&&Number(window.navigator.appVersion.match(/MSIE =
(\d)*/i)[1],10)<=3D9)=0A=
          {=0A=
            $.support.cors =3D true;=0A=
          }=0A=
          $(domReadyListener);=0A=
          return s.onload =3D s.onreadystatechange =3D null;=0A=
        }=0A=
      };=0A=
      document.getElementsByTagName('head')[0].insertBefore(s, null);=0A=
    } else {=0A=
      $(domReadyListener);=0A=
    }=0A=
  });=0A=
=0A=
}).call(this);=0A=
=0A=
///#//// sourceMappingURL=3Dmain.js.map     ///=0A=

------=_NextPart_000_0000_01D24FAB.DB890E40--
