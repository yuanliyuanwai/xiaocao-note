From: =?gb2312?B?08kgV2luZG93cyBJbnRlcm5ldCBFeHBsb3JlciA4ILGjtOY=?=
Subject: =?gb2312?B?anZttffTxS0tsunV0tfuusRDUFW1xLT6wusgLSBPb3BzT3V0T2ZNZW1vcnk=?=
	=?gb2312?B?yqLA+7XEsqm/zSAtILKpv83GtbXAIC0gQ1NETi5ORVQ=?=
Date: Mon, 21 Nov 2016 16:58:15 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01D24418.73BB6310"
X-MimeOLE: Produced By Microsoft MimeOLE V6.1.7600.16543

这是 MIME 格式的多方邮件。

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://blog.csdn.net/oopsoom/article/details/23917699

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" =
"http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<HTML =
xmlns=3D"http://www.w3.org/1999/xhtml"><HEAD><TITLE>jvm=E8=B0=83=E4=BC=98=
--=E6=9F=A5=E6=89=BE=E6=9C=80=E8=80=97CPU=E7=9A=84=E4=BB=A3=E7=A0=81 - =
OopsOutOfMemory=E7=9B=9B=E5=88=A9=E7=9A=84=E5=8D=9A=E5=AE=A2 - =
=E5=8D=9A=E5=AE=A2=E9=A2=91=E9=81=93 - CSDN.NET</TITLE>
<SCRIPT type=3Dtext/javascript charset=3Dutf-8=20
src=3D"http://c.csdnimg.cn/pubfooter/js/tracking.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript>
        var protocol =3D window.location.protocol;
        document.write('<script type=3D"text/javascript" src=3D"' + =
protocol + '//csdnimg.cn/pubfooter/js/repoAddr2.js?v=3D' + Math.random() =
+ '"></' + 'script>');
    </SCRIPT>

<META content=3Dno-siteapp http-equiv=3DCache-Control><LINK =
rel=3Dalternate href=3D"#"=20
media=3Dhandheld>
<META content=3D"text/html; charset=3Dutf-8" http-equiv=3DContent-Type>
<META name=3Ddescription=20
content=3D=E6=96=B9=E5=BC=8F=E4=B8=80=EF=BC=9A=E9=87=87=E7=94=A8ServletCo=
ntext=E8=AF=BB=E5=8F=96=EF=BC=8C=E8=AF=BB=E5=8F=96=E9=85=8D=E7=BD=AE=E6=96=
=87=E4=BB=B6=E7=9A=84realpath=EF=BC=8C=E7=84=B6=E5=90=8E=E9=80=9A=E8=BF=87=
=E6=96=87=E4=BB=B6=E6=B5=81=E8=AF=BB=E5=8F=96=E5=87=BA=E6=9D=A5=E3=80=82=E5=
=9B=A0=E4=B8=BA=E6=98=AF=E7=94=A8ServletContext=E8=AF=BB=E5=8F=96=E6=96=87=
=E4=BB=B6=E8=B7=AF=E5=BE=84=EF=BC=8C=E6=89=80=E4=BB=A5=E9=85=8D=E7=BD=AE=E6=
=96=87=E4=BB=B6=E5=8F=AF=E4=BB=A5=E6=94=BE=E5=85=A5=E5=9C=A8web-info=E7=9A=
=84classes=E7=9B=AE=E5=BD=95=E4=B8=AD=EF=BC=8C=E4=B9=9F=E5=8F=AF=E4=BB=A5=
=E5=9C=A8=E5=BA=94=E7=94=A8=E5=B1=82=E7=BA=A7=E5=8F=8Aweb-info=E7=9A=84=E7=
=9B=AE=E5=BD=95=E4=B8=AD=E3=80=82=E6=96=87=E4=BB=B6=E5=AD=98=E6=94=BE=E4=BD=
=8D=E7=BD=AE=E5=85=B7=E4=BD=93=E5=9C=A8eclipse=E5=B7=A5=E7=A8=8B=E4=B8=AD=
=E7=9A=84=E8=A1=A8=E7=8E=B0=E6=98=AF=EF=BC=9A=E5=8F=AF=E4=BB=A5=E6=94=BE=E5=
=9C=A8src=E4=B8=8B=E9=9D=A2=EF=BC=8C=E4=B9=9F=E5=8F=AF=E6=94=BE=E5=9C=A8w=
eb-info=E5=8F=8Awebroot=E4=B8=8B=E9=9D=A2=E7=AD=89=E3=80=82=E5=9B=A0=E4=B8=
=BA=E6=98=AF=E8=AF=BB=E5=8F=96=E5=87=BA=E8=B7=AF=E5=BE=84=E5=90=8E=EF=BC=8C=
=E7=94=A8>
<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/jquery.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/jquery-version.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/ad.js?v=3D1.1"></SCRIPT>
<!--new top--><LINK rel=3Dstylesheet=20
href=3D"http://c.csdnimg.cn/public/common/toolbar/css/index.css"><!--new =
top--><!-- ad begin -->
<SCRIPT language=3Djavascript type=3Dtext/javascript=20
src=3D"http://ads.csdn.net/js/tracking.js"></SCRIPT>
<!-- ad end--><LINK rel=3DStylesheet type=3Dtext/css=20
href=3D"http://static.blog.csdn.net/skin/dark1/css/style.css?v=3D1.1"><LI=
NK=20
id=3DRSSLink title=3DRSS rel=3Dalternate type=3Dapplication/rss+xml=20
href=3D"/u014388509/rss/list"><LINK rel=3D"shortcut icon"=20
href=3D"http://c.csdnimg.cn/public/favicon.ico"><LINK rel=3Dstylesheet =
type=3Dtext/css=20
href=3D"http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/defa=
ult.css">
<SCRIPT>
    var _hmt =3D _hmt || [];
    (function () {
        var hm =3D document.createElement("script");
        hm.src =3D =
"//hm.baidu.com/hm.js?6bcd52f51e9b3dce32bec4a3997715ac";
        var s =3D document.getElementsByTagName("script")[0];
        s.parentNode.insertBefore(hm, s);
    })();
</SCRIPT>

<META name=3DGENERATOR content=3D"MSHTML 8.00.7600.16385"></HEAD>
<BODY><!-- =E5=B9=BF=E5=91=8A=E4=BD=8D=E5=BC=80=E5=A7=8B --><INS =
data-revive-id=3D"8c38e720de1c90a6f6ff52f3f89c4d57"=20
data-revive-zoneid=3D"149"></INS><!-- =
=E5=B9=BF=E5=91=8A=E4=BD=8D=E7=BB=93=E6=9D=9F --><!--new top-->
<SCRIPT id=3Dtoolbar-tpl-scriptId type=3Dtext/javascript=20
src=3D"http://c.csdnimg.cn/public/common/toolbar/js/html.js" =
skin=3D"black"=20
prod=3D"blog" fixed=3D"true"></SCRIPT>
<!--new top-->
<DIV id=3Dcontainer>
<DIV id=3Dheader>
<DIV class=3Dheader>
<DIV id=3Dblog_title>
<H2><A =
href=3D"http://blog.csdn.net/oopsoom">OopsOutOfMemory=E7=9B=9B=E5=88=A9=E7=
=9A=84=E5=8D=9A=E5=AE=A2</A></H2>
<H3>=E5=88=86=E5=B8=83=E5=BC=8F=E8=AE=A1=E7=AE=97||=E6=95=B0=E6=8D=AE=E4=BB=
=93=E5=BA=93||=E6=95=B0=E6=8D=AE=E6=8C=96=E6=8E=98</H3>
<DIV class=3Dclear></DIV></DIV>
<DIV class=3Dclear></DIV></DIV></DIV>
<DIV id=3Dnavigator>
<DIV class=3Dnavigator_bg></DIV>
<DIV class=3Dnavigator>
<UL>
  <LI id=3DbtnContents><A=20
  href=3D"http://blog.csdn.net/oopsoom?viewmode=3Dcontents"><SPAN=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_mulu'])"><IMG=20
  =
src=3D"http://static.blog.csdn.net/images/ico_list.gif">=E7=9B=AE=E5=BD=95=
=E8=A7=86=E5=9B=BE</SPAN></A></LI>
  <LI id=3DbtnView><A =
href=3D"http://blog.csdn.net/oopsoom?viewmode=3Dlist"><SPAN=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_zhaiyao'])"><IMG=20
  =
src=3D"http://static.blog.csdn.net/images/ico_summary.gif">=E6=91=98=E8=A6=
=81=E8=A7=86=E5=9B=BE</SPAN></A></LI>
  <LI id=3DbtnRss><A =
href=3D"http://blog.csdn.net/oopsoom/rss/list"><SPAN=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_RSS'])"><IMG=20
  =
src=3D"http://static.blog.csdn.net/images/ico_rss.gif">=E8=AE=A2=E9=98=85=
</SPAN></A></LI></UL></DIV></DIV>
<SCRIPT type=3Dtext/javascript>
    var username =3D "u014388509";
    var _blogger =3D username;
    var blog_address =3D "http://blog.csdn.net/oopsoom";
    var static_host =3D "http://static.blog.csdn.net";
    var currentUserName =3D ""; =20
</SCRIPT>

<DIV id=3Dbody>
<DIV id=3Dmain>
<DIV class=3Dmain>
<DIV class=3Dad_class>
<DIV class=3D"notice tracking-ad" data-mod=3D"popu_3"><A=20
href=3D"http://huiyi.csdn.net/activity/product/goods_list?project_id=3D32=
52"><FONT=20
color=3Dblue>=E7=A7=BB=E5=8A=A8=E4=BF=A1=E6=81=AF=E5=AE=89=E5=85=A8=E7=9A=
=84=E6=BC=8F=E6=B4=9E=E5=92=8C=E9=80=86=E5=90=91=E5=8E=9F=E7=90=86 =
</FONT></A>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A=20
href=3D"http://blog.csdn.net/turingbooks/article/details/53079366"><FONT =

color=3Dred>=E7=A8=8B=E5=BA=8F=E5=91=9811=E6=9C=88=E4=B9=A6=E8=AE=AF=EF=BC=
=8C=E8=AF=84=E8=AE=BA=E5=BE=97=E4=B9=A6=E5=95=A6 =
</FONT></A>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A=20
href=3D"http://geek.csdn.net/news/detail/110921"><FONT color=3Dblue>Get=20
IT=E6=8A=80=E8=83=BD=E7=9F=A5=E8=AF=86=E5=BA=93=EF=BC=8C50=E4=B8=AA=E9=A2=
=86=E5=9F=9F=E4=B8=80=E9=94=AE=E7=9B=B4=E8=BE=BE=20
</FONT></A></FONT></A></FONT></A></DIV></DIV><!-- =
=E5=B9=BF=E5=91=8A=E4=BD=8D=E5=BC=80=E5=A7=8B --><INS=20
data-revive-id=3D"8c38e720de1c90a6f6ff52f3f89c4d57" =
data-revive-zoneid=3D"72"></INS><!-- =
=E5=B9=BF=E5=91=8A=E4=BD=8D=E7=BB=93=E6=9D=9F --><LINK rel=3Dstylesheet =
type=3Dtext/css=20
href=3D"http://static.blog.csdn.net/css/comment1.css"><LINK =
rel=3Dstylesheet=20
type=3Dtext/css href=3D"http://static.blog.csdn.net/css/style1.css">
<SCRIPT language=3DJavaScript type=3Dtext/javascript=20
src=3D"http://download.csdn.net/js/jquery.cookie.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://c.csdnimg.cn/rabbit/search-service/main.js"></SCRIPT>
<LINK rel=3Dstylesheet=20
href=3D"http://static.blog.csdn.net/public/res-min/markdown_views.css?v=3D=
1.0"><LINK=20
rel=3Dstylesheet =
href=3D"http://static.blog.csdn.net/css/category.css?v=3D1.0">
<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/public/res/bower-libs/MathJax/MathJax.=
js?config=3DTeX-AMS_HTML"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/web-storage-cache.min.js"></SC=
RIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/replace.min.js"></SCRIPT>

<SCRIPT type=3Dtext/ecmascript>
      window.quickReplyflag =3D true;
          =20
            var isBole =3D false;
           =20
         =20
    </SCRIPT>

<DIV id=3Darticle_details class=3Ddetails>
<DIV class=3Darticle_title><SPAN class=3D"ico ico_type_Original"></SPAN>
<H1><SPAN class=3Dlink_title><A=20
href=3D"http://blog.csdn.net/oopsoom/article/details/23917699">jvm=E8=B0=83=
=E4=BC=98--=E6=9F=A5=E6=89=BE=E6=9C=80=E8=80=97CPU=E7=9A=84=E4=BB=A3=E7=A0=
=81=20
</A></SPAN></H1></DIV>
<DIV class=3D"article_manage clearfix">
<DIV class=3Darticle_l><SPAN =
class=3Dlink_categories>=E6=A0=87=E7=AD=BE=EF=BC=9A <A=20
onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_tag']);"=20
href=3D"http://www.csdn.net/tag/java" target=3D_blank>java</A><A=20
onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_tag']);"=20
href=3D"http://www.csdn.net/tag/jvm" target=3D_blank>jvm</A><A=20
onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_tag']);"=20
href=3D"http://www.csdn.net/tag/maven" target=3D_blank>maven</A><A=20
onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_tag']);"=20
href=3D"http://www.csdn.net/tag/gradle" target=3D_blank>gradle</A><A=20
onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_tag']);"=20
href=3D"http://www.csdn.net/tag/%e7%bc%96%e8%af%91%e5%99%a8" =
target=3D_blank>=E7=BC=96=E8=AF=91=E5=99=A8</A>=20
</SPAN></DIV>
<DIV class=3Darticle_r><SPAN class=3Dlink_postdate>2014-04-17 =
11:25</SPAN> <SPAN=20
class=3Dlink_view =
title=3D=E9=98=85=E8=AF=BB=E6=AC=A1=E6=95=B0>1811=E4=BA=BA=E9=98=85=E8=AF=
=BB</SPAN> <SPAN class=3Dlink_comments=20
title=3D=E8=AF=84=E8=AE=BA=E6=AC=A1=E6=95=B0><A=20
onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_pinglun'])"=20
href=3D"http://blog.csdn.net/oopsoom/article/details/23917699#comments">=E8=
=AF=84=E8=AE=BA</A>(0)</SPAN>=20
<SPAN class=3D"link_collect tracking-ad" data-mod=3D"popu_171"><A =
title=3D=E6=94=B6=E8=97=8F=20
onclick=3D"javascript:collectArticle('jvm=E8=B0=83=E4=BC=98--=E6=9F=A5=E6=
=89=BE=E6=9C=80=E8=80=97CPU=E7=9A=84=E4=BB=A3=E7=A0=81','23917699');retur=
n false;"=20
href=3D"javascript:void(0);">=E6=94=B6=E8=97=8F</A></SPAN> <SPAN =
class=3Dlink_report><A title=3D=E4=B8=BE=E6=8A=A5=20
onclick=3D"javascript:report(23917699,2);return false;"=20
href=3D"http://blog.csdn.net/oopsoom/article/details/23917699#report">=E4=
=B8=BE=E6=8A=A5</A></SPAN>=20
</DIV></DIV>
<DIV style=3D"DISPLAY: none" id=3Dembody class=3Dembody><SPAN=20
class=3Dembody_t>=E6=9C=AC=E6=96=87=E7=AB=A0=E5=B7=B2=E6=94=B6=E5=BD=95=E4=
=BA=8E=EF=BC=9A</SPAN>=20
<DIV id=3Dlib class=3Dembody_c =
value=3D'{"err":0,"msg":"ok","data":[]}'></DIV></DIV>
<STYLE type=3Dtext/css>.embody {
	BORDER-BOTTOM: #ededed 1px solid; PADDING-BOTTOM: 10px; MARGIN: 0px =
-20px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; PADDING-TOP: 10px
}
.embody_b {
	PADDING-BOTTOM: 10px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 10px
}
.embody .embody_t {
	DISPLAY: inline-block; MARGIN-RIGHT: 10px
}
.embody .embody_c {
	DISPLAY: inline-block; MARGIN-RIGHT: 10px
}
.embody_t {
	COLOR: #999; FONT-SIZE: 12px
}
.embody_c {
	FONT-SIZE: 12px
}
.embody_c IMG {
	DISPLAY: inline-block; VERTICAL-ALIGN: middle
}
.embody_c EM {
	DISPLAY: inline-block; VERTICAL-ALIGN: middle
}
.embody_c IMG {
	WIDTH: 30px; HEIGHT: 30px
}
.embody_c EM {
	FONT-STYLE: normal; MARGIN: 0px 20px 0px 10px; COLOR: #333
}
</STYLE>

<SCRIPT type=3Dtext/javascript>
        $(function () {
            try
            {
                var lib =3D eval("("+$("#lib").attr("value")+")");
                var html =3D "";
                if (lib.err =3D=3D 0) {
                    $.each(lib.data, function (i) {
                        var obj =3D lib.data[i];
                        //html +=3D '<img src=3D"' + obj.logo + '"/>' + =
obj.name + "&nbsp;&nbsp;";
                        html +=3D ' <a href=3D"' + obj.url + '" =
target=3D"_blank">';
                        html +=3D ' <img src=3D"' + obj.logo + '">';
                        html +=3D ' <em><b>' + obj.name + '</b></em>';
                        html +=3D ' </a>';
                    });
                    if (html !=3D "") {
                        setTimeout(function () {
                            $("#lib").html(html);                     =20
                            $("#embody").show();
                        }, 100);
                    }
                }     =20
            } catch (err)
            { }
           =20
        });
    </SCRIPT>

<DIV class=3D"category clearfix">
<DIV class=3Dcategory_l><IMG=20
src=3D"http://static.blog.csdn.net/images/category_icon.jpg"> =
<SPAN>=E5=88=86=E7=B1=BB=EF=BC=9A</SPAN>=20
</DIV>
<DIV class=3Dcategory_r><LABEL=20
onclick=3D"GetCategoryArticles('2145253','u014388509','top','23917699');"=
><SPAN=20
onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_fenlei']);">java<EM>=EF=BC=883=EF=BC=89</EM></SPAN>=20
<IMG style=3D"DISPLAY: inline" class=3Darrow-down=20
src=3D"http://static.blog.csdn.net/images/arrow_triangle%20_down.jpg"> =
<IMG=20
style=3D"DISPLAY: none" class=3Darrow-up=20
src=3D"http://static.blog.csdn.net/images/arrow_triangle_up.jpg">=20
<DIV class=3DsubItem>
<DIV class=3DsubItem_t><A=20
href=3D"http://blog.csdn.net/u014388509/article/category/2145253"=20
target=3D_blank>=E4=BD=9C=E8=80=85=E5=90=8C=E7=B1=BB=E6=96=87=E7=AB=A0</A=
><I class=3DJ_close>X</I></DIV>
<UL id=3Dtop_2145253 class=3DsubItem_l></UL></DIV></LABEL></DIV></DIV>
<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/category.js"></SCRIPT>

<DIV id=3Darticle_content class=3Darticle_content>
<H1 style=3D"TEXT-ALIGN: =
center">jvm=E8=B0=83=E4=BC=98--=E6=9F=A5=E6=89=BE=E6=9C=80=E8=80=97CPU=E7=
=9A=84=E4=BB=A3=E7=A0=81</H1>
<H2>1.=E5=9C=BA=E6=99=AF</H2>
<P>=E4=BB=8A=E5=A4=A9=E5=9C=A8=E5=85=AC=E5=8F=B8=E7=94=A8mvn=E7=BC=96=E8=AF=
=91=E7=9A=84=E6=97=B6=E5=80=99=EF=BC=8C=E5=87=BA=E7=8E=B0=E6=9C=BA=E5=99=A8=
=E5=8D=A1=E6=AD=BB=E7=9A=84=E6=83=85=E5=86=B5=EF=BC=8C=E8=AE=A9=E6=88=91=E6=
=B7=B1=E6=B7=B1=E7=9A=84=E5=8F=8D=E7=9C=81=E4=BA=86=E4=B8=80=E4=B8=8B=E3=80=
=82</P>
<P></P><PRE class=3Djava name=3D"code">../apache-maven-3.0.5/bin/mvn  =
-Dhadoop.version=3D0.20.2-cdh3u5 -DskipTests clean package</PRE><BR>
<P></P>
<P>=E8=BF=99=E6=A0=B7=E7=9A=84=E7=BC=96=E8=AF=91=E4=BC=9A=E5=87=BA=E7=8E=B0=
=E9=97=AE=E9=A2=98=EF=BC=8C=E7=BC=96=E8=AF=91=E4=B8=8D=E4=B8=8B=E5=8E=BB=EF=
=BC=8C=E5=9B=A0=E4=B8=BAmaven=E9=9C=80=E8=A6=81=E8=AE=BE=E7=BD=AE=E4=B8=80=
=E4=B8=8Bjvm=E5=8F=82=E6=95=B0=E6=89=8D=E8=A1=8C=E3=80=82</P>
<P></P><PRE class=3Djava name=3D"code">export MAVEN_OPTS=3D"-Xmx1g =
-XX:MaxPermSize=3D512M -XX:ReservedCodeCacheSize=3D512m" </PRE><BR><SPAN =

style=3D"PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; PADDING-TOP: 0px"><SPAN=20
style=3D"PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; PADDING-TOP: 0px">-Xmx1g=20
&nbsp; -&gt; =
JVM=E6=9C=80=E5=A4=A7=E5=85=81=E8=AE=B8=E5=88=86=E9=85=8D=E7=9A=84=E5=A0=86=
=E5=86=85=E5=AD=98=EF=BC=8C=E6=8C=89=E9=9C=80=E5=88=86=E9=85=8D</SPAN></S=
PAN>=20
<P></P>
<P>-XX:MaxPermSize -&gt; =
JVM=E6=B0=B8=E4=B9=85=E5=B8=A6=E7=9A=84=E6=9C=80=E5=A4=A7=E5=86=85=E5=AD=98=
=EF=BC=8C=E6=8C=89=E9=9C=80=E5=88=86=E9=85=8D</P>
<P>-XX:ReservedCodeCacheSize -&gt; =
=E7=BC=96=E8=AF=91=E5=99=A8=E7=9A=84=E4=BB=A3=E7=A0=81=E7=BC=93=E5=AD=98=E5=
=A4=A7=E5=B0=8F</P>
<P>=E8=BF=99=E6=A0=B7=E4=B8=80=E8=88=AC=E9=83=BD=E4=BC=9A=E6=89=A7=E8=A1=8C=
=E4=B8=8B=E5=8E=BB=EF=BC=8C=E4=BD=86=E6=98=AF=E5=BD=93=E6=9C=BA=E5=99=A8=E8=
=B4=9F=E8=BD=BD=E5=BE=88=E9=AB=98=E7=9A=84=E6=83=85=E5=86=B5=E4=B8=8B=E6=89=
=A7=E8=A1=8C=E8=BF=99=E4=B8=AA=E7=9A=84=E8=AF=9D=EF=BC=8C=E4=BC=9A=E5=87=BA=
=E7=8E=B0=E6=9C=BA=E5=99=A8=E5=8D=A1=E6=AD=BB=E3=80=82</P>
<P><BR></P>
<H2>2.=E5=BC=95=E5=AD=90</H2>
<P>=E5=92=A8=E8=AF=A2=E4=BA=86=E4=B8=8B=E5=90=8C=E4=BA=8B=EF=BC=8C=E8=87=AA=
=E5=B7=B1=E6=9F=A5=E4=BA=86=E6=9F=A5=E8=B5=84=E6=96=99=E6=80=BB=E7=BB=93=E4=
=BA=86=E4=B8=8B=EF=BC=8C=E6=98=AF=E5=9B=A0=E4=B8=BAmaven=E6=9C=AC=E8=BA=AB=
=E5=90=AF=E5=8A=A8=E7=9A=84=E4=B9=9F=E6=98=AF=E4=B8=80=E4=B8=AAjvm=E7=A8=8B=
=E5=BA=8F=EF=BC=8C=E5=83=8Fgradle=E4=B8=80=E6=A0=B7=EF=BC=8C=E8=BF=99=E6=A0=
=B7=E7=9A=84=E6=9E=84=E5=BB=BA=E9=83=BD=E6=98=AF=E5=90=AF=E5=8A=A8jvm=E6=9D=
=A5=E8=B0=83=E7=94=A8=E5=8E=9F=E7=94=9F=E7=9A=84java=E7=BC=96=E8=AF=91=E5=
=99=A8=E6=9D=A5=E8=BF=9B=E8=A1=8C=E7=BC=96=E8=AF=91=E3=80=82</P>
<P>maven=E6=9C=AC=E8=BA=AB=E4=B9=9F=E9=9C=80=E8=A6=81=E5=86=85=E5=AD=98=E6=
=9D=A5=E4=B8=8B=E8=BD=BD=E4=BE=9D=E8=B5=96=EF=BC=8C=E5=90=AF=E5=8A=A8=E8=87=
=AA=E5=B7=B1=E7=9A=84=E6=8F=92=E4=BB=B6=EF=BC=8C=E6=9D=A5fork=E8=BF=9B=E7=
=A8=8B=E6=89=A7=E8=A1=8C=E5=85=B6=E5=AE=83=E7=9A=84=E6=93=8D=E4=BD=9C=E3=80=
=82</P>
<P>=E4=BA=86=E8=A7=A3=E4=BA=86=E5=8E=9F=E5=9B=A0=EF=BC=8C=E4=BB=A5=E5=90=8E=
=E7=BC=96=E8=AF=91=E5=A4=A7=E5=9E=8B=E9=A1=B9=E7=9B=AE=E7=9A=84=E6=97=B6=E5=
=80=99=EF=BC=8C=E8=A6=81=E5=85=88=E6=9F=A5=E7=9C=8B=E4=B8=8B=E6=9C=BA=E5=99=
=A8=E7=9A=84=E8=B4=9F=E8=BD=BD=EF=BC=8C=E4=B8=8D=E7=84=B6=E5=BE=88=E5=AE=B9=
=E6=98=93=E4=BC=9Adone=E6=8E=89=E3=80=82</P>
<P><BR></P>
<H2>3.=E6=9F=A5=E6=89=BE=E6=9C=80=E8=80=97CPU=E7=9A=84=E4=BB=A3=E7=A0=81<=
/H2>
<P>=E5=85=B6=E5=AE=9E=E8=BF=99=E4=B8=AA=E6=9F=A5=E6=89=BE=E6=9C=80=E8=80=97=
CPU=E7=9A=84=E4=BB=A3=E7=A0=81=E6=9C=AC=E4=B8=8D=E8=AF=A5=E6=94=BE=E5=9C=A8=
=E8=BF=99=E9=87=8C=EF=BC=8C=E8=B2=8C=E4=BC=BC=E5=92=8C=E5=92=8C=E4=B8=8A=E9=
=9D=A2=E7=9A=84=E5=9C=BA=E6=99=AF=E6=97=A0=E5=85=B3=EF=BC=8C=E4=BD=86=E6=98=
=AF=E6=88=91=E8=BF=98=E6=98=AF=E6=83=B3=E5=86=99=E5=9C=A8=E8=BF=99=E9=87=8C=
=EF=BC=8C=E6=9D=83=E4=B8=94=E5=BD=93=E4=B8=AA=E7=AC=94=E8=AE=B0=E5=90=A7=E3=
=80=82</P>
<P>=E6=88=91=E5=9C=A8ubuntu12.04=E4=B8=8A=E5=90=AF=E5=8A=A8=E4=BA=86=E4=B8=
=80=E4=B8=AAitellij ideal =
=E8=BF=99=E4=B8=AAIDE=EF=BC=8C=E5=AE=83=E4=B9=9F=E5=90=AF=E5=8A=A8=E4=BA=86=
=E4=B8=80=E4=B8=AAjvm=E3=80=82</P>
<P><BR></P>
<P>=E9=A6=96=E5=85=88=EF=BC=8C=E6=9F=A5=E7=9C=8B=E4=B8=80=E4=B8=8B=E7=B3=BB=
=E7=BB=9F=E7=9A=84=E8=B4=9F=E8=BD=BD=E6=83=85=E5=86=B5=EF=BC=8C=E8=BF=99=E9=
=87=8C=E5=8F=AF=E4=BB=A5=E7=9C=8B=E5=88=B0PID=E4=B8=BA9764=E7=9A=84=E6=B6=
=88=E8=80=97=E7=9A=84CPU=E5=92=8CMEM=E6=9C=80=E5=A4=9A=EF=BC=8Ccommand=E6=
=98=AFjava=EF=BC=8C=E5=85=B6=E5=AE=9E=E5=B0=B1=E6=98=AF=E6=88=91=E7=9A=84=
intellij=E3=80=82</P>
<P></P><PRE class=3Djava name=3D"code">top</PRE><IMG alt=3D""=20
src=3D"http://img.blog.csdn.net/20140417110947625?watermark/2/text/aHR0cD=
ovL2Jsb2cuY3Nkbi5uZXQvb29wc29vbQ=3D=3D/font/5a6L5L2T/fontsize/400/fill/I0=
JBQkFCMA=3D=3D/dissolve/70/gravity/SouthEast"><BR><BR>
<P></P>
<P>=E7=AC=AC=E4=BA=8C=E6=AD=A5=EF=BC=8C=E6=9F=A5=E7=9C=8B=E4=B8=80=E4=B8=8B=
9764=E8=BF=99=E4=B8=AA=E8=BF=9B=E7=A8=8B=E7=9A=84=E5=AD=90=E8=BF=9B=E7=A8=
=8B=E3=80=82</P>
<P></P><PRE class=3Djava name=3D"code">top -p 9764 -H</PRE>
<P></P>
<P>=E5=8F=91=E7=8E=B0pid=E4=B8=BA9791=E7=9A=84=E5=AD=90=E8=BF=9B=E7=A8=8B=
(=E6=88=91=E7=90=86=E8=A7=A3=E4=B8=BA=E7=BA=BF=E7=A8=8B)=E6=9C=80=E8=80=97=
=E8=B4=B9=E8=B5=84=E6=BA=90=EF=BC=8C=E5=BD=93=E7=84=B6=E8=BF=98=E6=9C=89=E4=
=B8=80=E4=B8=AA9924=EF=BC=88=E7=95=A5=EF=BC=89=E3=80=82&nbsp;</P><IMG =
alt=3D""=20
src=3D"http://img.blog.csdn.net/20140417111223906?watermark/2/text/aHR0cD=
ovL2Jsb2cuY3Nkbi5uZXQvb29wc29vbQ=3D=3D/font/5a6L5L2T/fontsize/400/fill/I0=
JBQkFCMA=3D=3D/dissolve/70/gravity/SouthEast"><BR>
<P><BR></P>
<P>=E7=AC=AC=E4=B8=89=E6=AD=A5=EF=BC=8C=E5=B0=86=E8=BF=99=E4=B8=AApid=E8=BD=
=AC=E6=8D=A2=E4=B8=BA16=E8=BF=9B=E5=88=B6,=E7=BB=93=E6=9E=9C=E4=B8=BA263f=
</P>
<P></P><PRE class=3Djava name=3D"code">printf "%x\n" 9791</PRE><PRE =
class=3Djava =
name=3D"code">263f</PRE><BR>=E7=AC=AC=E5=9B=9B=E6=AD=A5=EF=BC=8C=E7=94=A8=
jstack=E6=89=93=E5=8D=B0=E5=87=BA=E7=88=B6=E8=BF=9B=E7=A8=8B=E7=9A=84=E6=A0=
=88=EF=BC=8C=E4=BB=8E=E8=80=8C=E6=89=BE=E5=88=B0pid=E4=B8=BA263f=E7=9A=84=
=E8=BF=99=E4=B8=AA=E7=BA=BF=E7=A8=8B=E7=9A=84=E6=A0=88=E4=BF=A1=E6=81=AF=E3=
=80=82=20

<P></P>
<P></P><PRE class=3Djava name=3D"code">jstack 9764 | grep 263f -A =
30</PRE><BR>
<P></P>
<P><IMG alt=3D""=20
src=3D"http://img.blog.csdn.net/20140417111857750?watermark/2/text/aHR0cD=
ovL2Jsb2cuY3Nkbi5uZXQvb29wc29vbQ=3D=3D/font/5a6L5L2T/fontsize/400/fill/I0=
JBQkFCMA=3D=3D/dissolve/70/gravity/SouthEast"><BR></P>
<P><BR></P>
<P>=E5=8F=AF=E4=BB=A5=E7=9C=8B=E5=87=BA=EF=BC=9A</P>
<P>1. =
java=E7=9A=84=E7=BA=BF=E7=A8=8B=E6=B1=A0=E8=BF=90=E8=A1=8C=E4=BB=BB=E5=8A=
=A1=E6=AF=94=E8=BE=83=E8=80=97=E8=B4=B9=E8=B5=84=E6=BA=90=E3=80=82</P>
<P>2. =
=E4=BA=8B=E4=BB=B6=E8=BD=AE=E8=AF=A2=E5=92=8C=E6=B4=BE=E5=8F=91=E6=AF=94=E8=
=BE=83=E8=80=97=E8=B4=B9=E8=B5=84=E6=BA=90=E3=80=82</P>
<P><BR></P>
<H2>=E6=80=BB=E7=BB=93=EF=BC=9A</H2>
<P>1. =
=E4=BB=A5=E5=90=8E=E7=94=A8maven=E7=BC=96=E8=AF=91=E8=A6=81=E5=85=85=E5=88=
=86=E8=80=83=E8=99=91=E6=9C=BA=E5=99=A8=E7=9A=84=E8=B4=9F=E8=BD=BD=EF=BC=8C=
=E5=92=8Cmaven=E7=BC=96=E8=AF=91=E7=9A=84=E7=9B=AE=E6=A0=87=E6=89=80=E9=9C=
=80=E8=A6=81=E7=9A=84=E8=B5=84=E6=BA=90=E6=83=85=E5=86=B5=E3=80=82</P>
<P>2. =
=E6=8E=92=E6=9F=A5=E6=9C=80=E8=80=97=E8=B4=B9=E7=B3=BB=E7=BB=9F=E8=B5=84=E6=
=BA=90=E7=9A=84java=E4=BB=A3=E7=A0=81=EF=BC=9A</P>
<P>&nbsp; &nbsp; 2.1 =
=E6=89=BE=E5=87=BAtop=E4=B8=AD=E6=9C=80=E8=80=97=E8=B4=B9=E7=B3=BB=E7=BB=9F=
=E8=B5=84=E6=BA=90=E7=9A=84PID</P>
<P>&nbsp; &nbsp; =
2.2=E6=89=BE=E5=87=BA=E8=BF=99=E4=B8=AAPID=E7=9A=84=E5=AD=90=E8=BF=9B=E7=A8=
=8B=E6=9C=80=E8=80=97=E8=B4=B9=E8=B5=84=E6=BA=90=E7=9A=84PID</P>
<P>&nbsp; &nbsp; =
2.3=E5=B0=86PID=E8=BD=AC=E6=8D=A2=E4=B8=BA16=E8=BF=9B=E5=88=B6</P>
<P>&nbsp; &nbsp; 2.4=E7=94=A8jstack pid | grep =
=E5=AD=90PID=E5=8D=81=E5=85=AD=E8=BF=9B=E5=88=B6 -A 30 =
=E6=9D=A5=E6=89=BE=E5=87=BA=E8=BF=99=E4=B8=AA=E7=89=87=E6=AE=B5=E3=80=82<=
/P>
<P><BR></P>
<P>=E5=8E=9F=E5=88=9B=EF=BC=8C=E8=BD=AC=E8=BD=BD=E8=AF=B7=E6=B3=A8=E6=98=8E=
=E5=87=BA=E5=A4=84<A =
href=3D"http://blog.csdn.net/oopsoom/article/details/23917699"=20
target=3D_blank>http://blog.csdn.net/oopsoom/article/details/23917699</A>=
</P>
<P>=E2=80=94EOF=E2=80=94</P></DIV><!-- Baidu Button BEGIN -->
<DIV style=3D"FLOAT: right" class=3D"bdsharebuttonbox tracking-ad"=20
data-mod=3D"popu_172"><A=20
style=3D"BACKGROUND-IMAGE: =
url(http://bdimg.share.baidu.com/static/api/img/share/icons_0_16.png?v=3D=
d754dcc0.png) !important; BACKGROUND-POSITION: 0px 0px"=20
class=3Dbds_more =
href=3D"http://blog.csdn.net/oopsoom/article/details/23917699#"=20
data-cmd=3D"more"></A><A style=3D"BACKGROUND-POSITION: 0px -52px" =
class=3Dbds_qzone=20
title=3D=E5=88=86=E4=BA=AB=E5=88=B0QQ=E7=A9=BA=E9=97=B4 =
href=3D"http://blog.csdn.net/oopsoom/article/details/23917699#"=20
data-cmd=3D"qzone"></A><A style=3D"BACKGROUND-POSITION: 0px -104px" =
class=3Dbds_tsina=20
title=3D=E5=88=86=E4=BA=AB=E5=88=B0=E6=96=B0=E6=B5=AA=E5=BE=AE=E5=8D=9A =
href=3D"http://blog.csdn.net/oopsoom/article/details/23917699#"=20
data-cmd=3D"tsina"></A><A style=3D"BACKGROUND-POSITION: 0px -260px" =
class=3Dbds_tqq=20
title=3D=E5=88=86=E4=BA=AB=E5=88=B0=E8=85=BE=E8=AE=AF=E5=BE=AE=E5=8D=9A =
href=3D"http://blog.csdn.net/oopsoom/article/details/23917699#"=20
data-cmd=3D"tqq"></A><A style=3D"BACKGROUND-POSITION: 0px -208px" =
class=3Dbds_renren=20
title=3D=E5=88=86=E4=BA=AB=E5=88=B0=E4=BA=BA=E4=BA=BA=E7=BD=91 =
href=3D"http://blog.csdn.net/oopsoom/article/details/23917699#"=20
data-cmd=3D"renren"></A><A style=3D"BACKGROUND-POSITION: 0px -1612px"=20
class=3Dbds_weixin title=3D=E5=88=86=E4=BA=AB=E5=88=B0=E5=BE=AE=E4=BF=A1 =

href=3D"http://blog.csdn.net/oopsoom/article/details/23917699#"=20
data-cmd=3D"weixin"></A></DIV>
<SCRIPT>window._bd_share_config =3D { "common": { "bdSnsKey": {}, =
"bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", =
"bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) =
0[(getElementsByTagName('head')[0] || =
body).appendChild(createElement('script')).src =3D =
'http://bdimg.share.baidu.com/static/api/js/share.js?v=3D89860593.js?cdnv=
ersion=3D' + ~(-new Date() / 36e5)];</SCRIPT>
<!-- Baidu Button END --><LINK rel=3Dstylesheet=20
href=3D"http://static.blog.csdn.net/css/blog_detail.css"><!--172.16.140.1=
3--><!-- Baidu Button BEGIN -->
<SCRIPT id=3Dbdshare_js type=3Dtext/javascript=20
data=3D"type=3Dtools&amp;uid=3D1536434"></SCRIPT>

<SCRIPT id=3Dbdshell_js type=3Dtext/javascript></SCRIPT>

<SCRIPT type=3Dtext/javascript>
    document.getElementById("bdshell_js").src =3D =
"http://bdimg.share.baidu.com/static/js/shell_v2.js?cdnversion=3D" + =
Math.ceil(new Date()/3600000)
</SCRIPT>
<!-- Baidu Button END -->
<DIV id=3Ddigg ArticleId=3D"23917699">
<DL id=3DbtnDigg class=3D"digg digg_disable" onclick=3Dbtndigga();>
  <DT>=E9=A1=B6</DT>
  <DD>0</DD></DL>
<DL id=3DbtnBury class=3D"digg digg_disable" onclick=3Dbtnburya();>
  <DT>=E8=B8=A9</DT>
  <DD>0</DD></DL></DIV>
<DIV class=3Dtracking-ad data-mod=3D"popu_222"><A =
href=3D"javascript:void(0);"></A>=20
</DIV>
<DIV class=3Dtracking-ad data-mod=3D"popu_223"><A=20
href=3D"javascript:void(0);"></A>&nbsp;</DIV>
<SCRIPT type=3Dtext/javascript>
                function btndigga() {
                    $(".tracking-ad[data-mod=3D'popu_222'] a").click();
                }
                function btnburya() {
                    $(".tracking-ad[data-mod=3D'popu_223'] a").click();
                }
            </SCRIPT>

<UL class=3Darticle_next_prev>
  <LI class=3Dprev_article><SPAN=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_shangyipian']);location.href=3D'/oopsoom/article/details/2=
3865255';">=E4=B8=8A=E4=B8=80=E7=AF=87</SPAN><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_shangyipian'])"=20
  href=3D"http://blog.csdn.net/oopsoom/article/details/23865255">RDD=20
  =
Dependency=E8=AF=A6=E8=A7=A3---Spark=E5=AD=A6=E4=B9=A0=E7=AC=94=E8=AE=B09=
</A></LI>
  <LI class=3Dnext_article><SPAN=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_xiayipian']);location.href=3D'/oopsoom/article/details/239=
68361';">=E4=B8=8B=E4=B8=80=E7=AF=87</SPAN><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_xiayipian'])"=20
  =
href=3D"http://blog.csdn.net/oopsoom/article/details/23968361">Spark0.91=E7=
=BC=96=E8=AF=91=E8=AE=B0=E5=BD=95maven</A></LI></UL>
<DIV style=3D"HEIGHT: 10px; CLEAR: both"></DIV>
<DIV style=3D"DISPLAY: none" class=3Dsimilar_article>
<H4>=E6=88=91=E7=9A=84=E5=90=8C=E7=B1=BB=E6=96=87=E7=AB=A0</H4>
<DIV style=3D"MARGIN: 20px 0px 0px" class=3Dsimilar_c>
<DIV class=3Dsimilar_c_t><LABEL class=3Dsimilar_cur><SPAN =
style=3D"CURSOR: pointer"=20
onclick=3D"GetCategoryArticles('2145253','u014388509','foot','23917699');=
">java<EM>=EF=BC=883=EF=BC=89</EM></SPAN>=20
</LABEL></DIV>
<DIV style=3D"MAX-HEIGHT: 195px" class=3D"similar_wrap tracking-ad"=20
data-mod=3D"popu_141"><A style=3D"DISPLAY: none"=20
href=3D"http://blog.csdn.net/">http://blog.csdn.net/</A>=20
<UL class=3D"similar_list fl"></UL>
<UL class=3D"similar_list fr"></UL></DIV></DIV></DIV>
<SCRIPT type=3Dtext/javascript>
        $(function () {
            GetCategoryArticles('2145253', =
'u014388509','foot','23917699');
        });
    </SCRIPT>
</DIV>
<DIV id=3Dsuggest></DIV>
<SCRIPT language=3Djavascript type=3Dtext/javascript>    =20
             $(function(){
                 =
$.get("/u014388509/svc/GetSuggestContent/23917699",function(data){
                     $("#suggest").html(data);
                 });    =20
             });            =20
         </SCRIPT>

<STYLE>.blog-ass-articl DD {
	PADDING-BOTTOM: 0px; MARGIN: 0px 30px 0px 0px; PADDING-LEFT: 10px; =
WIDTH: 99%; PADDING-RIGHT: 0px; FONT: 12px/23px "SimSun"; BACKGROUND: =
url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) =
no-repeat 0px 10px; FLOAT: left; HEIGHT: 23px; COLOR: #369; OVERFLOW: =
hidden; PADDING-TOP: 0px
}
</STYLE>
<LINK rel=3Dstylesheet =
href=3D"http://static.blog.csdn.net/css/replace.css">
<DIV id=3Drelate class=3Dtracking-ad data-mod=3D"popu_218">
<DIV class=3Drelate_t>
<H3><SPAN>=E5=8F=82=E8=80=83=E7=9F=A5=E8=AF=86=E5=BA=93</SPAN></H3></DIV>=

<DIV class=3Drelate_c></DIV></DIV>
<DL id=3Dres-relatived class=3Dblog-ass-articl>
  <DIV style=3D"DISPLAY: none" id=3Dlibkeyparent class=3D"embody =
embody_b"><SPAN=20
  =
class=3Dembody_t>=E6=9B=B4=E5=A4=9A=E8=B5=84=E6=96=99=E8=AF=B7=E5=8F=82=E8=
=80=83=EF=BC=9A</SPAN>=20
  <DIV id=3Dlibkey class=3Dembody_c></DIV></DIV>
  <DT><SPAN>=E7=8C=9C=E4=BD=A0=E5=9C=A8=E6=89=BE</SPAN></DT>
  <DIV style=3D"WIDTH: 42%; FLOAT: left" id=3DadCollege>
  <SCRIPT type=3Dtext/javascript=20
  src=3D"http://csdnimg.cn/jobreco/job_reco.js"></SCRIPT>

  <SCRIPT type=3Dtext/javascript>
            csdn.position.showEdu({
                sourceType: "blog",
                searchType: "detail",
                searchKey: "23917699",
                username: "",
                recordcount: "5",
                containerId: "adCollege" =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82=20
            });
        </SCRIPT>
  </DIV>
  <DIV style=3D"WIDTH: 42%; FLOAT: left; MARGIN-RIGHT: 30px" id=3Dres=20
  class=3Dtracking-ad data-mod=3D"popu_36"></DIV></DL>
<SCRIPT type=3Dtext/javascript>
    $(function () {
        setTimeout(function () {
            var searchtitletags =3D =
'jvm=E8=B0=83=E4=BC=98--=E6=9F=A5=E6=89=BE=E6=9C=80=E8=80=97CPU=E7=9A=84=E4=
=BB=A3=E7=A0=81' + ',' + $("#tags").html();
            searchService({
                index: 'blog',
                query: searchtitletags,
                from: 5,
                size: 5,
                appendTo: '#res',
                url: 'recommend',
                his: 2,
                client: "blog_cf_enhance",
                tmpl: '<dd =
style=3D"background:url(http://static.blog.csdn.net/skin/default/images/b=
log-dot-red3.gif) no-repeat 0 10px;"><a href=3D"#{ url }" title=3D"#{ =
title }" strategy=3D"#{ strategy }">#{ title }</a></dd>'
            });
        }, 500);
    });   =20

 </SCRIPT>

<DIV id=3Dad_cen><!-- =E5=B9=BF=E5=91=8A=E4=BD=8D=E5=BC=80=E5=A7=8B =
--><INS=20
data-revive-id=3D"8c38e720de1c90a6f6ff52f3f89c4d57" =
data-revive-zoneid=3D"71"></INS><!-- =
=E5=B9=BF=E5=91=8A=E4=BD=8D=E7=BB=93=E6=9D=9F --></DIV>
<DIV class=3Dcomment_class>
<DIV id=3Dcomment_title class=3Dpanel_head><SPAN =
class=3Dsee_comment>=E6=9F=A5=E7=9C=8B=E8=AF=84=E8=AE=BA</SPAN><A=20
name=3Dcomments></A></DIV>
<DIV id=3Dcomment_list></DIV>
<DIV id=3Dcomment_bar></DIV>
<DIV id=3Dcomment_form></DIV>
<DIV class=3Dannounce>* =
=E4=BB=A5=E4=B8=8A=E7=94=A8=E6=88=B7=E8=A8=80=E8=AE=BA=E5=8F=AA=E4=BB=A3=E8=
=A1=A8=E5=85=B6=E4=B8=AA=E4=BA=BA=E8=A7=82=E7=82=B9=EF=BC=8C=E4=B8=8D=E4=BB=
=A3=E8=A1=A8CSDN=E7=BD=91=E7=AB=99=E7=9A=84=E8=A7=82=E7=82=B9=E6=88=96=E7=
=AB=8B=E5=9C=BA<A name=3Dreply></A><A=20
name=3Dquote></A></DIV></DIV>
<SCRIPT type=3Dtext/javascript>
    var fileName =3D '23917699';
    var commentscount =3D 0;
    var islock =3D false
</SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/comment.js"></SCRIPT>

<DIV id=3Dad_bot></DIV>
<DIV id=3Dreport_dialog></DIV>
<DIV style=3D"BOTTOM: 60px" id=3Dd-top><A style=3D"DISPLAY: none" =
id=3Dquick-reply=20
class=3D"btn btn-top q-reply" =
title=3D=E5=BF=AB=E9=80=9F=E5=9B=9E=E5=A4=8D><IMG =
alt=3D=E5=BF=AB=E9=80=9F=E5=9B=9E=E5=A4=8D=20
src=3D"http://static.blog.csdn.net/images/blog-icon-reply.png"> </A><A=20
style=3D"DISPLAY: none" id=3Dd-top-a class=3D"btn btn-top backtop" =
title=3D=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8=20
onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_huidaodingbu'])"><IMG=20
alt=3DTOP src=3D"http://static.blog.csdn.net/images/top.png"> </A></DIV>
<SCRIPT type=3Dtext/javascript>
    $(function ()
    {
        $("#ad_frm_0").height("90px");
       =20
        setTimeout(function(){
            $("#ad_frm_2").height("200px");
        },1000);   =20
    });
 =20
</SCRIPT>

<STYLE type=3Dtext/css>.tag_list {
	LIST-STYLE: none none outside; BORDER-BOTTOM: #d7cbc1 1px solid; =
BORDER-LEFT: #d7cbc1 1px solid; PADDING-BOTTOM: 1px; LINE-HEIGHT: 20px; =
MARGIN: 10px 2% 0px 1%; PADDING-LEFT: 1px; PADDING-RIGHT: 1px; =
BACKGROUND: #ffffff 0px 0px; COLOR: #000000; FONT-SIZE: 12px; =
BORDER-TOP: #d7cbc1 1px solid; BORDER-RIGHT: #d7cbc1 1px solid; =
PADDING-TOP: 1px
}
.tag_list H5 {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 24px; MARGIN: 0px; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; BACKGROUND: #e0dbd3 0px 0px; HEIGHT: 24px; COLOR: =
#47381c; FONT-SIZE: 12px; PADDING-TOP: 0px
}
.tag_list H5 A {
	COLOR: #47381c
}
.classify {
	PADDING-BOTTOM: 8px; MARGIN: 10px 0px; PADDING-LEFT: 12px; =
PADDING-RIGHT: 12px; PADDING-TOP: 4px
}
.classify A {
	WHITE-SPACE: nowrap; MARGIN-RIGHT: 20px
}
</STYLE>

<DIV style=3D"DISPLAY: none" class=3Dtag_list></DIV>
<SCRIPT language=3Djavascript type=3Dtext/javascript>    =20
      $(function(){
              setTimeout(function(){
                  $.get("/u014388509/svc/GetTagContent",function(data){
                      $(".tag_list").html(data).show();
                  });    =20
              });
          },500);                      =20
 </SCRIPT>

<DIV=20
style=3D"Z-INDEX: 10000; BORDER-BOTTOM: rgb(220,220,220) 1px solid; =
POSITION: absolute; BORDER-LEFT: rgb(220,220,220) 1px solid; DISPLAY: =
none; BACKGROUND: rgb(255,255,255) 0px 0px; BORDER-TOP: rgb(220,220,220) =
1px solid; TOP: 222.5px; BORDER-RIGHT: rgb(220,220,220) 1px solid; LEFT: =
630px; opacity: 1"=20
id=3Dpop_win></DIV>
<DIV id=3Dpopup_mask></DIV>
<STYLE>#popup_mask {
	Z-INDEX: 9999; POSITION: absolute; FILTER: alpha(opacity=3D30); WIDTH: =
100%; DISPLAY: none; BACKGROUND: #000; HEIGHT: 100%; TOP: 0px; LEFT: =
0px; opacity: 0.3
}
</STYLE>

<SCRIPT type=3Dtext/javascript>
    $(function(){
        setTimeout(function(){
            =
$(".comment_body:contains('=E5=9B=9E=E5=A4=8D')").each(function(index,ite=
m){
                var =
u=3D$(this).text().split('=EF=BC=9A')[0].toString().replace("=E5=9B=9E=E5=
=A4=8D","")
                var thisComment=3D$(this);
                if(u)
                {
                    =
$.getJSON("https://passport.csdn.net/get/nick?callback=3D?", {users: u}, =
function(a) {
                        if(a!=3Dnull&&a.data!=3Dnull&&a.data.length>0)
                        {
                            nick=3Da.data[0].n;=20
                            if(u!=3Dnick)
                            {
                                =
thisComment.text(thisComment.text().replace(u,nick)); =20
                            }
                        }      =20
                    }); =20
                }
            });        =20

        },200); =20

        setTimeout(function(){
            =
$(".math").each(function(index,value){$(this).find("span").last().css("co=
lor","#fff"); })
        },5000);

        setTimeout(function(){
            =
$(".math").each(function(index,value){$(this).find("span").last().css("co=
lor","#fff"); })
        },10000);

        setTimeout(function(){
            =
$(".math").each(function(index,value){$(this).find("span").last().css("co=
lor","#fff"); })
        },15000);
       =20
        setTimeout(function(){
            $("a =
img[src=3D'http://js.tongji.linezing.com/stats.gif']").parent().css({"pos=
ition":"absolute","left":"50%"});
        },300);
    });

    function loginbox(){
        var $logpop=3D$("#pop_win");
        $logpop.html('<iframe =
src=3D"https://passport.csdn.net/account/loginbox?service=3Dhttp://static=
.blog.csdn.net/callback.htm" frameborder=3D"0" height=3D"600" =
width=3D"400" scrolling=3D"no"></iframe>');

        $('#popup_mask').css({
            opacity: 0.5,
            width: $( document ).width() + 'px',
            height:  $( document ).height() + 'px'
        });
        $('#popup_mask').css("display","block");
=20
        $logpop.css( {
            top: ($( window ).height() - $logpop.height())/ 2  + $( =
window=20
       ).scrollTop() + 'px',
            left:($( window ).width() - $logpop.width())/ 2
        } );
=20
        setTimeout( function () {
            $logpop.show();
            $logpop.css( {
                opacity: 1
            } );
        }, 200 );
=20
        $('#popup_mask').unbind("click");
        $('#popup_mask').bind("click", function(){
            $('#popup_mask').hide();
            var $clopop =3D $("#pop_win");
            $("#common_ask_div_sc").css("display","none");
            $clopop.css( {
                opacity: 0
            } );
            setTimeout( function () {
                $clopop.hide();
            }, 350 );
            return false;
        });
    }  =20

</SCRIPT>

<SCRIPT language=3Djavascript type=3Dtext/javascript=20
src=3D"http://ads.csdn.net/js/async_new.js"></SCRIPT>

<DIV class=3Dclear></DIV></DIV></DIV>
<DIV id=3Dside>
<DIV class=3Dside>
<DIV id=3Dpanel_Profile class=3Dpanel>
<UL =
class=3Dpanel_head><SPAN>=E4=B8=AA=E4=BA=BA=E8=B5=84=E6=96=99</SPAN></UL>=

<UL class=3D"panel_body profile">
  <DIV id=3Dblog_userface><A href=3D"http://my.csdn.net/u014388509"=20
  target=3D_blank><IMG style=3D"MAX-WIDTH: 90%" =
title=3D=E8=AE=BF=E9=97=AE=E6=88=91=E7=9A=84=E7=A9=BA=E9=97=B4=20
  src=3D"http://avatar.csdn.net/8/C/2/1_u014388509.jpg"> =
</A><BR><SPAN><A=20
  class=3Duser_name href=3D"http://my.csdn.net/u014388509"=20
  target=3D_blank>u014388509</A></SPAN> </DIV>
  <DIV class=3Dinteract><A id=3Dspan_add_follow class=3Dattent =
title=3D[=E5=8A=A0=E5=85=B3=E6=B3=A8]=20
  href=3D"javascript:void(0);"></A><A class=3Dletter =
title=3D[=E5=8F=91=E7=A7=81=E4=BF=A1]=20
  =
onclick=3D"window.open('http://msg.csdn.net/letters/model?receiver=3Du014=
388509','_blank','height=3D350,width=3D700');_gaq.push(['_trackEvent','fu=
nction', 'onclick', 'blog_articles_sixin'])"=20
  href=3D"javascript:void(0);"></A></DIV>
  <DIV id=3Dblog_medal>
  <DIV=20
  style=3D"WIDTH: 60px; BACKGROUND: =
url(http://c.csdnimg.cn/jifen/images/xunzhang/xunzhang/bokezhuanjiamiddle=
.png) no-repeat; HEIGHT: 60px; CURSOR: pointer"=20
  class=3Dico_expert title=3DCSDN=E8=AE=A4=E8=AF=81=E4=B8=93=E5=AE=B6=20
  =
onclick=3D"javascript:location=3D'http://blog.csdn.net/experts/rule.html'=
"></DIV>
  <DIV id=3Dbms_box><A target=3D_blank><IMG =
onmouseover=3Dm_over_m(this,2)=20
  onmouseout=3Dm_out_m() alt=3D1=20
  =
src=3D"http://c.csdnimg.cn/jifen/images/xunzhang/xunzhang/zhuanlandaren.p=
ng">=20
  </A></DIV></DIV>
  <UL id=3Dblog_rank>
    <LI>=E8=AE=BF=E9=97=AE=EF=BC=9A<SPAN>350131=E6=AC=A1</SPAN></LI>
    <LI>=E7=A7=AF=E5=88=86=EF=BC=9A<SPAN>4215</SPAN> </LI>
    <LI>=E7=AD=89=E7=BA=A7=EF=BC=9A <SPAN=20
    style=3D"Z-INDEX: 1; POSITION: relative; DISPLAY: inline-block"><IMG =

    style=3D"VERTICAL-ALIGN: middle" id=3DleveImg alt=3D""=20
    =
src=3D"http://c.csdnimg.cn/jifen/images/xunzhang/jianzhang/blog5.png">=20
    <DIV=20
    style=3D"Z-INDEX: 999; BORDER-BOTTOM: #dddddd 2px solid; POSITION: =
absolute; TEXT-ALIGN: center; BORDER-LEFT: #dddddd 2px solid; =
LINE-HEIGHT: 32px; BACKGROUND-COLOR: #fff; WIDTH: 101px; DISPLAY: none; =
HEIGHT: 32px; BORDER-TOP: #dddddd 2px solid; TOP: 25px; BORDER-RIGHT: =
#dddddd 2px solid; LEFT: -24px"=20
    id=3DsmallTittle>
    <DIV=20
    style=3D"BORDER-BOTTOM: #eaeaea 8px solid; POSITION: absolute; =
BORDER-LEFT: transparent 10px solid; WIDTH: 0px; HEIGHT: 0px; TOP: -8px; =
BORDER-RIGHT: transparent 10px solid; LEFT: =
42%"></DIV>=E7=A7=AF=E5=88=86=EF=BC=9A4215=20
    </DIV></SPAN></LI>
    =
<LI>=E6=8E=92=E5=90=8D=EF=BC=9A<SPAN>=E7=AC=AC5495=E5=90=8D</SPAN></LI></=
UL>
  <UL id=3Dblog_statistics>
    <LI>=E5=8E=9F=E5=88=9B=EF=BC=9A<SPAN>80=E7=AF=87</SPAN></LI>
    <LI>=E8=BD=AC=E8=BD=BD=EF=BC=9A<SPAN>0=E7=AF=87</SPAN></LI>
    <LI>=E8=AF=91=E6=96=87=EF=BC=9A<SPAN>1=E7=AF=87</SPAN></LI>
    =
<LI>=E8=AF=84=E8=AE=BA=EF=BC=9A<SPAN>62=E6=9D=A1</SPAN></LI></UL></UL></D=
IV>
<DIV id=3Dpanel_Category class=3Dpanel>
<UL =
class=3Dpanel_head><SPAN>=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F</SPAN></UL>=

<UL id=3Dsp_column class=3Dpanel_body>
  <TABLE cellSpacing=3D0 cellPadding=3D0>
    <TBODY>
    <TR>
      <TD=20
      style=3D"PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
10px; PADDING-TOP: 10px"><A=20
        href=3D"http://blog.csdn.net/column/details/sparksql.html"=20
        target=3D_blank><IMG style=3D"WIDTH: 75px; HEIGHT: 75px"=20
        src=3D"http://img.blog.csdn.net/20151123180051817"></A> </TD>
      <TD=20
      style=3D"PADDING-BOTTOM: 10px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; VERTICAL-ALIGN: top; PADDING-TOP: 10px"><A=20
        href=3D"http://blog.csdn.net/column/details/sparksql.html"=20
        target=3D_blank>Spark =
SQL=E6=BA=90=E7=A0=81=E5=88=86=E6=9E=90=E7=B3=BB=E5=88=97</A>=20
        =
<P>=E6=96=87=E7=AB=A0=EF=BC=9A11=E7=AF=87</P><SPAN>=E9=98=85=E8=AF=BB=EF=BC=
=9A68792</SPAN> </TD></TR></TBODY></TABLE></UL></DIV>
<DIV id=3Dcustom_column_37221183 class=3Dpanel>
<UL class=3Dpanel_head><SPAN>=E5=BE=AE=E5=8D=9A</SPAN></UL>
<UL class=3Dpanel_body><IFRAME class=3Dshare_self height=3D550 =
src=3D"about:blank"=20
  frameBorder=3D0 width=3D"100%" scrolling=3Dno></IFRAME></UL></DIV>
<DIV id=3Dpanel_Search class=3Dpanel>
<UL =
class=3Dpanel_head><SPAN>=E6=96=87=E7=AB=A0=E6=90=9C=E7=B4=A2</SPAN></UL>=

<UL class=3Dpanel_body>
  <FORM id=3DfrmSearch class=3Dform_search =
action=3Dhttp://so.csdn.net/search=20
  target=3D_blank><SPAN><INPUT id=3DinputSearch class=3Dblogsearch =
title=3D=E8=AF=B7=E8=BE=93=E5=85=A5=E5=85=B3=E9=94=AE=E5=AD=97=20
  type=3Dtext></SPAN> <INPUT id=3DbtnSubmit title=3D"search in blog" =
value=3D=E6=90=9C=E7=B4=A2 type=3Dbutton> <INPUT=20
  id=3DinputQ type=3Dhidden name=3Dq> <INPUT value=3Dblog type=3Dhidden =
name=3Dt> <A=20
  id=3DbtnSearchBlog target=3D_blank></A></FORM></UL></DIV>
<SCRIPT type=3Dtext/javascript>
    $(function () {
        $("#btnSubmit").click(function () {          =20
            search();
        });

        $("#frmSearch").submit(function () {
            search();
            return false;
        });

        function search()
        {
            var url =3D "http://so.csdn.net/so/search/s.do?q=3D" + =
encodeURIComponent($("#inputSearch").val()) + "&u=3D" + username + =
"&t=3Dblog";
            window.location.href =3D url;
        }  =20
    });
</SCRIPT>

<DIV id=3Dpanel_Category class=3Dpanel>
<UL =
class=3Dpanel_head><SPAN>=E6=96=87=E7=AB=A0=E5=88=86=E7=B1=BB</SPAN></UL>=

<UL class=3Dpanel_body>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2145257">spark</=
A><SPAN>(42)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2145245">hive</A=
><SPAN>(8)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2145255">scala</=
A><SPAN>(8)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2145249">machine=
=20
  learning</A><SPAN>(3)</SPAN> </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2168919">shark</=
A><SPAN>(3)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2145253">java</A=
><SPAN>(4)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2145243">hadoop<=
/A><SPAN>(3)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2202615">=E7=9B=91=
=E6=8E=A7</A><SPAN>(2)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2145251">mahout<=
/A><SPAN>(0)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2145259">hbase</=
A><SPAN>(0)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2145267">alogrit=
hm</A><SPAN>(0)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2145269">storm</=
A><SPAN>(0)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2145271">kafka</=
A><SPAN>(0)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2145273">flume</=
A><SPAN>(0)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2145835">etl</A>=
<SPAN>(1)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2150263">ubuntu<=
/A><SPAN>(1)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2176401">mesos</=
A><SPAN>(0)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2309197">nio</A>=
<SPAN>(0)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2465281">tachyon=
</A><SPAN>(1)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/2762007">docker<=
/A><SPAN>(1)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/5595259">cubert<=
/A><SPAN>(4)</SPAN>=20
  </LI>
  <LI><A=20
  onclick=3D"_gaq.push(['_trackEvent','function', 'onclick', =
'blog_articles_wenzhangfenlei']); "=20
  =
href=3D"http://blog.csdn.net/u014388509/article/category/5725965">helix</=
A><SPAN>(1)</SPAN>=20
  </LI></UL></DIV>
<DIV id=3Dpanel_Archive class=3Dpanel>
<UL =
class=3Dpanel_head><SPAN>=E6=96=87=E7=AB=A0=E5=AD=98=E6=A1=A3</SPAN></UL>=

<UL class=3Dpanel_body>
  <DIV id=3Darchive_list><!--=E5=BD=92=E6=A1=A3=E7=BB=9F=E8=AE=A1-->
  <LI><A=20
  =
href=3D"http://blog.csdn.net/u014388509/article/month/2015/08">2015=E5=B9=
=B408=E6=9C=88</A><SPAN>(2)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/u014388509/article/month/2015/07">2015=E5=B9=
=B407=E6=9C=88</A><SPAN>(2)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/u014388509/article/month/2015/06">2015=E5=B9=
=B406=E6=9C=88</A><SPAN>(2)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/u014388509/article/month/2015/04">2015=E5=B9=
=B404=E6=9C=88</A><SPAN>(3)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/u014388509/article/month/2014/12">2014=E5=B9=
=B412=E6=9C=88</A><SPAN>(3)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/u014388509/article/month/2014/11">2014=E5=B9=
=B411=E6=9C=88</A><SPAN>(3)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/u014388509/article/month/2014/10">2014=E5=B9=
=B410=E6=9C=88</A><SPAN>(3)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/u014388509/article/month/2014/09">2014=E5=B9=
=B409=E6=9C=88</A><SPAN>(4)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/u014388509/article/month/2014/08">2014=E5=B9=
=B408=E6=9C=88</A><SPAN>(5)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/u014388509/article/month/2014/07">2014=E5=B9=
=B407=E6=9C=88</A><SPAN>(11)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/u014388509/article/month/2014/06">2014=E5=B9=
=B406=E6=9C=88</A><SPAN>(7)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/u014388509/article/month/2014/05">2014=E5=B9=
=B405=E6=9C=88</A><SPAN>(6)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/u014388509/article/month/2014/04">2014=E5=B9=
=B404=E6=9C=88</A><SPAN>(22)</SPAN></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/u014388509/article/month/2014/03">2014=E5=B9=
=B403=E6=9C=88</A><SPAN>(8)</SPAN></LI></DIV></UL></DIV>
<DIV id=3Dhotarticls class=3Dpanel>
<UL class=3Dpanel_head><SPAN>=E9=98=85=E8=AF=BB=E6=8E=92=E8=A1=8C =
</SPAN></UL>
<UL class=3D"panel_body itemlist">
  <LI><A title=3D"Spark RDD Transformation =
=E8=AF=A6=E8=A7=A3---Spark=E5=AD=A6=E4=B9=A0=E7=AC=94=E8=AE=B07"=20
  href=3D"http://blog.csdn.net/oopsoom/article/details/22918991">Spark =
RDD=20
  Transformation =
=E8=AF=A6=E8=A7=A3---Spark=E5=AD=A6=E4=B9=A0=E7=AC=94=E8=AE=B07</A><SPAN>=
(15755)</SPAN> </LI>
  <LI><A title=3D"Spark SQL =
=E6=BA=90=E7=A0=81=E5=88=86=E6=9E=90=E7=B3=BB=E5=88=97=E6=96=87=E7=AB=A0"=
=20
  href=3D"http://blog.csdn.net/oopsoom/article/details/38257749">Spark =
SQL=20
  =
=E6=BA=90=E7=A0=81=E5=88=86=E6=9E=90=E7=B3=BB=E5=88=97=E6=96=87=E7=AB=A0<=
/A><SPAN>(14187)</SPAN> </LI>
  <LI><A title=3DSpark=E6=93=8D=E4=BD=9Chbase=20
  =
href=3D"http://blog.csdn.net/oopsoom/article/details/36071323">Spark=E6=93=
=8D=E4=BD=9Chbase</A><SPAN>(12325)</SPAN>=20
  </LI>
  <LI><A title=3D"Spark Executor =
Driver=E8=B5=84=E6=BA=90=E8=B0=83=E5=BA=A6=E5=B0=8F=E7=BB=93"=20
  href=3D"http://blog.csdn.net/oopsoom/article/details/38763985">Spark =
Executor=20
  =
Driver=E8=B5=84=E6=BA=90=E8=B0=83=E5=BA=A6=E5=B0=8F=E7=BB=93</A><SPAN>(10=
857)</SPAN> </LI>
  <LI><A title=3D"Spark SQL with Hive"=20
  href=3D"http://blog.csdn.net/oopsoom/article/details/37603261">Spark =
SQL with=20
  Hive</A><SPAN>(10183)</SPAN> </LI>
  <LI><A title=3D"Spark =
Streaming=E7=9A=84=E7=AA=97=E5=8F=A3=E6=93=8D=E4=BD=9C"=20
  href=3D"http://blog.csdn.net/oopsoom/article/details/23776477">Spark=20
  =
Streaming=E7=9A=84=E7=AA=97=E5=8F=A3=E6=93=8D=E4=BD=9C</A><SPAN>(9849)</S=
PAN> </LI>
  <LI><A title=3D"Spark =
Hadoop=E9=9B=86=E7=BE=A4=E9=83=A8=E7=BD=B2=E4=B8=8ESpark=E6=93=8D=E4=BD=9C=
HDFS=E8=BF=90=E8=A1=8C=E8=AF=A6=E8=A7=A3---Spark=E5=AD=A6=E4=B9=A0=E7=AC=94=
=E8=AE=B010"=20
  href=3D"http://blog.csdn.net/oopsoom/article/details/24257981">Spark=20
  =
Hadoop=E9=9B=86=E7=BE=A4=E9=83=A8=E7=BD=B2=E4=B8=8ESpark=E6=93=8D=E4=BD=9C=
HDFS=E8=BF=90=E8=A1=8C=E8=AF=A6=E8=A7=A3---Spark=E5=AD=A6=E4=B9=A0=E7=AC=94=
=E8=AE=B010</A><SPAN>(9135)</SPAN> </LI>
  <LI><A title=3D"Spark =
SQL=E6=BA=90=E7=A0=81=E5=88=86=E6=9E=90=E4=B9=8B=E6=A0=B8=E5=BF=83=E6=B5=81=
=E7=A8=8B"=20
  href=3D"http://blog.csdn.net/oopsoom/article/details/37658021">Spark=20
  =
SQL=E6=BA=90=E7=A0=81=E5=88=86=E6=9E=90=E4=B9=8B=E6=A0=B8=E5=BF=83=E6=B5=81=
=E7=A8=8B</A><SPAN>(8876)</SPAN> </LI>
  <LI><A title=3D"Docker =E5=AE=89=E8=A3=85 on Mac OS X"=20
  href=3D"http://blog.csdn.net/oopsoom/article/details/41785999">Docker =
=E5=AE=89=E8=A3=85 on Mac=20
  OS X</A><SPAN>(8455)</SPAN> </LI>
  <LI><A title=3D"scala implicit =E9=9A=90=E5=BC=8F=E8=BD=AC=E6=8D=A2"=20
  href=3D"http://blog.csdn.net/oopsoom/article/details/24643869">scala =
implicit=20
  =E9=9A=90=E5=BC=8F=E8=BD=AC=E6=8D=A2</A><SPAN>(8197)</SPAN> =
</LI></UL></DIV>
<DIV id=3Dhotarticls2 class=3Dpanel>
<UL =
class=3Dpanel_head><SPAN>=E8=AF=84=E8=AE=BA=E6=8E=92=E8=A1=8C</SPAN></UL>=

<UL class=3D"panel_body itemlist">
  <LI><A title=3DSpark=E6=93=8D=E4=BD=9Chbase=20
  =
href=3D"http://blog.csdn.net/oopsoom/article/details/36071323">Spark=E6=93=
=8D=E4=BD=9Chbase</A><SPAN>(9)</SPAN>=20
  </LI>
  <LI><A title=3D"Spark SQL =
Catalyst=E6=BA=90=E7=A0=81=E5=88=86=E6=9E=90=E4=B9=8BSqlParser"=20
  href=3D"http://blog.csdn.net/oopsoom/article/details/37943507">Spark =
SQL=20
  =
Catalyst=E6=BA=90=E7=A0=81=E5=88=86=E6=9E=90=E4=B9=8BSqlParser</A><SPAN>(=
7)</SPAN> </LI>
  <LI><A =
title=3DSpark=E5=AE=9E=E4=BE=8BTopN---Spark=E5=AD=A6=E4=B9=A0=E7=AC=94=E8=
=AE=B011=20
  =
href=3D"http://blog.csdn.net/oopsoom/article/details/25815443">Spark=E5=AE=
=9E=E4=BE=8BTopN---Spark=E5=AD=A6=E4=B9=A0=E7=AC=94=E8=AE=B011</A><SPAN>(=
5)</SPAN>=20
  </LI>
  <LI><A =
title=3DSpark=E6=BA=90=E7=A0=81=E7=BC=96=E8=AF=91---Spark=E5=AD=A6=E4=B9=A0=
=E7=AC=94=E8=AE=B01=20
  =
href=3D"http://blog.csdn.net/oopsoom/article/details/22345777">Spark=E6=BA=
=90=E7=A0=81=E7=BC=96=E8=AF=91---Spark=E5=AD=A6=E4=B9=A0=E7=AC=94=E8=AE=B0=
1</A><SPAN>(5)</SPAN>=20
  </LI>
  <LI><A title=3D"Spark Streaming=E5=88=9D=E6=8E=A2"=20
  href=3D"http://blog.csdn.net/oopsoom/article/details/23692079">Spark=20
  Streaming=E5=88=9D=E6=8E=A2</A><SPAN>(4)</SPAN> </LI>
  <LI><A title=3D"Spark =
SQL=E6=BA=90=E7=A0=81=E5=88=86=E6=9E=90=E4=B9=8B=E6=A0=B8=E5=BF=83=E6=B5=81=
=E7=A8=8B"=20
  href=3D"http://blog.csdn.net/oopsoom/article/details/37658021">Spark=20
  =
SQL=E6=BA=90=E7=A0=81=E5=88=86=E6=9E=90=E4=B9=8B=E6=A0=B8=E5=BF=83=E6=B5=81=
=E7=A8=8B</A><SPAN>(3)</SPAN> </LI>
  <LI><A =
title=3DScala=E7=9A=84cons=EF=BC=8C=E9=9B=86=E5=90=88=E5=90=88=E5=B9=B6=E4=
=B8=8E=E6=B7=BB=E5=8A=A0=20
  =
href=3D"http://blog.csdn.net/oopsoom/article/details/23454133">Scala=E7=9A=
=84cons=EF=BC=8C=E9=9B=86=E5=90=88=E5=90=88=E5=B9=B6=E4=B8=8E=E6=B7=BB=E5=
=8A=A0</A><SPAN>(3)</SPAN>=20
  </LI>
  <LI><A title=3D"scala implicit =E9=9A=90=E5=BC=8F=E8=BD=AC=E6=8D=A2"=20
  href=3D"http://blog.csdn.net/oopsoom/article/details/24643869">scala =
implicit=20
  =E9=9A=90=E5=BC=8F=E8=BD=AC=E6=8D=A2</A><SPAN>(3)</SPAN> </LI>
  <LI><A title=3D"Spark =
Hadoop=E9=9B=86=E7=BE=A4=E9=83=A8=E7=BD=B2=E4=B8=8ESpark=E6=93=8D=E4=BD=9C=
HDFS=E8=BF=90=E8=A1=8C=E8=AF=A6=E8=A7=A3---Spark=E5=AD=A6=E4=B9=A0=E7=AC=94=
=E8=AE=B010"=20
  href=3D"http://blog.csdn.net/oopsoom/article/details/24257981">Spark=20
  =
Hadoop=E9=9B=86=E7=BE=A4=E9=83=A8=E7=BD=B2=E4=B8=8ESpark=E6=93=8D=E4=BD=9C=
HDFS=E8=BF=90=E8=A1=8C=E8=AF=A6=E8=A7=A3---Spark=E5=AD=A6=E4=B9=A0=E7=AC=94=
=E8=AE=B010</A><SPAN>(2)</SPAN> </LI>
  <LI><A title=3D"Spark  RDD Action =
=E8=AF=A6=E8=A7=A3---Spark=E5=AD=A6=E4=B9=A0=E7=AC=94=E8=AE=B08"=20
  href=3D"http://blog.csdn.net/oopsoom/article/details/22948207">Spark =
RDD Action=20
  =
=E8=AF=A6=E8=A7=A3---Spark=E5=AD=A6=E4=B9=A0=E7=AC=94=E8=AE=B08</A><SPAN>=
(2)</SPAN> </LI></UL></DIV>
<DIV id=3DhomepageArticles class=3D"panel tracking-ad" =
data-mod=3D"popu_4">
<UL =
class=3Dpanel_head><SPAN>=E6=8E=A8=E8=8D=90=E6=96=87=E7=AB=A0</SPAN></UL>=

<UL id=3Dad_commend class=3Dpanel_body>
  <UL>
    <LI><A =
href=3D"http://blog.csdn.net/turingbooks/article/details/52522830"=20
    target=3D_blank>* =
=E7=A8=8B=E5=BA=8F=E5=91=9810=E6=9C=88=E4=B9=A6=E8=AE=AF=EF=BC=8C=E8=AF=84=
=E8=AE=BA=E5=BE=97=E4=B9=A6</A></LI>
    <LI><A=20
    =
href=3D"http://blog.csdn.net/jiangwei0910410003/article/details/52836241"=
=20
    target=3D_blank>* =
Android=E4=B8=ADXposed=E6=A1=86=E6=9E=B6=E7=AF=87---=E4=BF=AE=E6=94=B9=E7=
=B3=BB=E7=BB=9F=E4=BD=8D=E7=BD=AE=E4=BF=A1=E6=81=AF=E5=AE=9E=E7=8E=B0=E8=87=
=AA=E8=BA=AB=E9=9A=90=E8=97=8F=E5=8A=9F=E8=83=BD</A></LI>
    <LI><A =
href=3D"http://blog.csdn.net/luoshengyang/article/details/52773402"=20
    target=3D_blank>* =
Chromium=E6=8F=92=E4=BB=B6=EF=BC=88Plugin=EF=BC=89=E6=A8=A1=E5=9D=97=EF=BC=
=88Module=EF=BC=89=E5=8A=A0=E8=BD=BD=E8=BF=87=E7=A8=8B=E5=88=86=E6=9E=90<=
/A></LI>
    <LI><A =
href=3D"http://blog.csdn.net/hejjunlin/article/details/52966319"=20
    target=3D_blank>* Android =
TV=E5=BC=80=E5=8F=91=E6=80=BB=E7=BB=93--=E6=9E=84=E5=BB=BA=E4=B8=80=E4=B8=
=AATV =
app=E7=9A=84=E7=9B=B4=E6=92=AD=E8=8A=82=E7=9B=AE=E5=AE=9E=E4=BE=8B</A></L=
I>
    <LI><A =
href=3D"http://blog.csdn.net/yinwenjie/article/details/52935140"=20
    target=3D_blank>* =
=E6=9E=B6=E6=9E=84=E8=AE=BE=E8=AE=A1=EF=BC=9A=E7=B3=BB=E7=BB=9F=E5=AD=98=E5=
=82=A8--MySQL=E7=AE=80=E5=8D=95=E4=B8=BB=E4=BB=8E=E6=96=B9=E6=A1=88=E5=8F=
=8A=E6=9A=B4=E9=9C=B2=E7=9A=84=E9=97=AE=E9=A2=98</A></LI></UL></UL></DIV>=

<DIV id=3Dnewcomments class=3Dpanel>
<UL =
class=3Dpanel_head><SPAN>=E6=9C=80=E6=96=B0=E8=AF=84=E8=AE=BA</SPAN></UL>=

<UL class=3D"panel_body itemlist">
  <LI><A=20
  =
href=3D"http://blog.csdn.net/oopsoom/article/details/37658021#comments">S=
park=20
  =
SQL=E6=BA=90=E7=A0=81=E5=88=86=E6=9E=90=E4=B9=8B=E6=A0=B8=E5=BF=83=E6=B5=81=
=E7=A8=8B</A>=20
  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/wangxiaotongfan">wangxiaotongfan</A>:=20
  =
=E5=A6=82=E6=9E=9C=E5=8F=AF=E4=BB=A5=E6=8A=8A=E9=87=8C=E8=BE=B9=E7=9A=84=E8=
=A7=A3=E6=9E=90=E3=80=81=E5=88=86=E6=9E=90=E3=80=81=E4=BC=98=E5=8C=96=E7=9A=
=84=E7=AD=96=E7=95=A5=E5=86=8D=E8=A7=A3=E9=87=8A=E4=B8=80=E4=B8=8B=E5=B0=B1=
=E5=AE=8C=E7=BE=8E=E4=BA=86 </P></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/oopsoom/article/details/34462329#comments">S=
park=E6=9C=BA=E5=99=A8=E5=AD=A6=E4=B9=A0=E5=BA=93mllib=E4=B9=8B=E5=8D=8F=E5=
=90=8C=E8=BF=87=E6=BB=A4</A>=20

  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/bo_hai">bo_hai</A>: val numIterations =3D =
30=20
  =
=E6=97=B6=E6=8A=A5=E9=94=99=EF=BC=8C=E6=8A=8A=E5=80=BC=E4=BF=AE=E6=94=B9=E6=
=88=9010=E5=90=8E=EF=BC=8C=E6=B2=A1=E6=9C=89=E6=8A=A5=E5=80=BC=E3=80=82=E4=
=B8=8D=E7=9F=A5=E9=81=93=E5=8E=9F=E5=9B=A0=E3=80=82 </P></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/oopsoom/article/details/34104115#comments">H=
ive=E4=B8=ADreduce=E4=B8=AA=E6=95=B0=E8=AE=BE=E5=AE=9A</A>=20

  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/bo_hai">bo_hai</A>: =
=E5=BE=88=E5=A5=BD=E7=9A=84=E6=80=9D=E8=B7=AF=E3=80=82=E4=B8=8D=E8=BF=87,=
filter push down =E6=B2=A1=E6=9C=89=E6=87=82=E3=80=82=20
  </P></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/oopsoom/article/details/37943507#comments">S=
park=20
  SQL Catalyst=E6=BA=90=E7=A0=81=E5=88=86=E6=9E=90=E4=B9=8BSqlParser</A> =

  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/u010924834">u010924834</A>: =
=E4=BA=86=E8=A7=A3=E4=B8=80=E4=B8=8B=EF=BC=81 </P></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/oopsoom/article/details/24257981#comments">S=
park=20
  =
Hadoop=E9=9B=86=E7=BE=A4=E9=83=A8=E7=BD=B2=E4=B8=8ESpark=E6=93=8D=E4=BD=9C=
HDFS=E8=BF=90=E8=A1=8C=E8=AF=A6=E8=A7=A3---Spark=E5=AD=A6=E4=B9=A0=E7=AC=94=
=E8=AE=B010</A>=20
  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/yin_wuzhe">yin_wuzhe</A>: =
=E5=BE=88=E5=A5=BD=E7=9A=84=E6=96=87=E7=AB=A0 </P></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/oopsoom/article/details/36071323#comments">S=
park=E6=93=8D=E4=BD=9Chbase</A>=20

  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/ghexian">ghexian</A>: =
@stevenpzz:=E6=88=91=E4=B9=9F=E6=98=AF=E8=BF=99=E4=B8=AA=E9=97=AE=E9=A2=98=
=EF=BC=8C=E8=AF=B7=E9=97=AE=E6=82=A8=E8=A7=A3=E5=86=B3=E4=BA=86=E5=90=97 =

  </P></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/oopsoom/article/details/41318599#comments">s=
bt=E5=8F=91=E5=B8=83assembly=E8=A7=A3=E5=86=B3jar=E5=8C=85=E5=86=B2=E7=AA=
=81=E9=97=AE=E9=A2=98=20
  deduplicate: different file contents found in the following</A>=20
  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/poised">poised</A>: =
=E5=8D=9A=E4=B8=BB=E5=86=99=E7=9A=84=E5=BE=88=E8=AF=A6=E7=BB=86=EF=BC=8C=E8=
=B5=9E=EF=BC=81 </P></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/oopsoom/article/details/39395641#comments">S=
park=20
  SQL Catalyst=E6=BA=90=E7=A0=81=E5=88=86=E6=9E=90=E4=B9=8BUDF</A>=20
  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/chencheng12077">chencheng12077</A>: =
=E5=A4=A7=E7=A5=9E=E7=9F=A5=E9=81=93udaf=E6=80=8E=E4=B9=88=E7=94=A8=E4=B9=
=88=20
  </P></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/oopsoom/article/details/39395641#comments">S=
park=E6=93=8D=E4=BD=9Chbase</A>=20

  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/qq_29684051">qq_29684051</A>:=20
  =
=E6=A5=BC=E4=B8=BB=E4=BD=A0=E5=A5=BD=EF=BC=8C=E6=88=91=E4=BB=8A=E5=A4=A9=E7=
=94=A8=E7=9A=84=E5=B0=B1=E6=98=AF=E7=9A=84=E6=96=B9=E6=A1=882=EF=BC=8C=E4=
=BD=86=E6=98=AF=E6=88=91=E5=8D=95=E7=8B=AC=E6=9F=A5=E6=89=BEkey=E5=8F=AF=E4=
=BB=A5=E5=AE=9E=E7=8E=B0=EF=BC=8C=E4=BD=86=E6=98=AF=E6=9F=A5=E6=89=BEvalu=
e=E7=9A=84=E8=AF=9D=E4=BC=9A=E6=8A=A5=E9=94=99:25:... </P></LI>
  <LI><A=20
  =
href=3D"http://blog.csdn.net/oopsoom/article/details/22918991#comments">S=
park=20
  RDD Transformation =
=E8=AF=A6=E8=A7=A3---Spark=E5=AD=A6=E4=B9=A0=E7=AC=94=E8=AE=B07</A>=20
  <P style=3D"MARGIN: 0px"><A class=3Duser_name=20
  href=3D"http://blog.csdn.net/u011878191">u011878191</A>: =
=E9=82=A3=E4=B8=AAgroupByKey=E7=9A=84=E7=BB=93=E6=9E=9C=E4=B8=8D=E6=98=AF=
=E5=BE=88=E6=B8=85=E6=A5=9A=E2=80=A6=E2=80=A6=20
  </P></LI></UL></DIV></DIV>
<DIV class=3Dclear></DIV><!-- =
=E5=B9=BF=E5=91=8A=E4=BD=8D=E5=BC=80=E5=A7=8B --><INS=20
data-revive-id=3D"8c38e720de1c90a6f6ff52f3f89c4d57"=20
data-revive-zoneid=3D"190"></INS><!-- =
=E5=B9=BF=E5=91=8A=E4=BD=8D=E7=BB=93=E6=9D=9F --></DIV>
<DIV class=3Dclear></DIV></DIV>
<SCRIPT type=3Dtext/javascript=20
src=3D"http://c.csdnimg.cn/rabbit/cnick/cnick.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/newblog.min.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://medal.blog.csdn.net/showblogmedal.ashx?blogid=3D2798943"></=
SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/JavaScript1.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://passport.csdn.net/content/loginbox/login.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript>document.write("<img =
src=3Dhttp://counter.csdn.net/pv.aspx?id=3D24 border=3D0 width=3D0 =
height=3D0>");</SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://www.csdn.net/ui/scripts/Csdn/counter.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://ad.csdn.net/scripts/ad-blog.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript>
    $(function () {
        function __get_code_toolbar(snippet_id) {
            return $("<span class=3D'tracking-ad' =
data-mod=3D'popu_167'><a href=3D'https://code.csdn.net/snippets/"
                    + snippet_id
                    + "' target=3D'_blank' =
title=3D'=E5=9C=A8CODE=E4=B8=8A=E6=9F=A5=E7=9C=8B=E4=BB=A3=E7=A0=81=E7=89=
=87'  style=3D'text-indent:0;'><img =
src=3D'https://code.csdn.net/assets/CODE_ico.png' width=3D12 height=3D12 =
alt=3D'=E5=9C=A8CODE=E4=B8=8A=E6=9F=A5=E7=9C=8B=E4=BB=A3=E7=A0=81=E7=89=87=
' style=3D'position:relative;top:1px;left:2px;'/></a></span>"
                    + "<span class=3D'tracking-ad' =
data-mod=3D'popu_170'><a href=3D'https://code.csdn.net/snippets/"
                    + snippet_id
                    + "/fork' target=3D'_blank' =
title=3D'=E6=B4=BE=E7=94=9F=E5=88=B0=E6=88=91=E7=9A=84=E4=BB=A3=E7=A0=81=E7=
=89=87' style=3D'text-indent:0;'><img =
src=3D'https://code.csdn.net/assets/ico_fork.svg' width=3D12 height=3D12 =
alt=3D'=E6=B4=BE=E7=94=9F=E5=88=B0=E6=88=91=E7=9A=84=E4=BB=A3=E7=A0=81=E7=
=89=87' style=3D'position:relative;top:2px;left:2px;'/></a></span>");
        }
       =20
        $("[code_snippet_id]").each(function () {
            __s_id =3D $(this).attr("code_snippet_id");
            if (__s_id !=3D null && __s_id !=3D "" && __s_id !=3D 0 && =
parseInt(__s_id) > 70020) {
                __code_tool =3D __get_code_toolbar(__s_id);
                $(this).prev().find(".tools").append(__code_tool);
            }
        });

        $(".bar").show();
    });
</SCRIPT>
</DIV><!--new top-->
<SCRIPT id=3Dcsdn-toolbar-id type=3Dtext/javascript=20
src=3D"http://c.csdnimg.cn/public/common/toolbar/js/toolbar.js" =
subCount=3D"5"=20
count=3D"5" wrapId=3D"note1" btnId=3D"header_notice_num"></SCRIPT>
<!--new top--><LINK rel=3Dstylesheet type=3Dtext/css=20
href=3D"http://c.csdnimg.cn/comm_ask/css/ask_float_block.css">
<SCRIPT language=3DJavaScript type=3Dtext/javascript=20
src=3D"http://c.csdnimg.cn/comm_ask/js/libs/wmd.js"></SCRIPT>

<SCRIPT language=3DJavaScript type=3Dtext/javascript=20
src=3D"http://c.csdnimg.cn/comm_ask/js/libs/showdown.js"></SCRIPT>

<SCRIPT language=3DJavaScript type=3Dtext/javascript=20
src=3D"http://c.csdnimg.cn/comm_ask/js/libs/prettify.js"></SCRIPT>

<SCRIPT language=3DJavaScript type=3Dtext/javascript=20
src=3D"http://c.csdnimg.cn/comm_ask/js/apps/ask_float_block.js"></SCRIPT>=


<DIV style=3D"WIDTH: 1px; DISPLAY: none; HEIGHT: 1px" id=3Da52b5334d>
<SCRIPT id=3DadJs52b5334></SCRIPT>

<SCRIPT>document.getElementById("adJs52b5334").src =3D =
"http://ads.csdn.net/js/opt/52b5334.js?t=3D" + Math.random();</SCRIPT>
</DIV><LINK rel=3Dstylesheet =
href=3D"http://static.blog.csdn.net/css/blog_code.css">
<SCRIPT type=3Dtext/javascript=20
src=3D"http://static.blog.csdn.net/scripts/saveToCode.js"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://csdnimg.cn/rabbit/tracking-ad/main.js?75eacd8"></SCRIPT>
</BODY></HTML>

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/ico_list.gif

R0lGODlhEAAQAIAAAGZmZv///yH5BAEAAAEALAAAAAAQABAAAAIejI+pmwDnojQOysmy3rvSG30W
+HDmqXkB6alsicYFADs=

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/ico_summary.gif

R0lGODlhEAAQAIAAAGZmZv///yH5BAEAAAEALAAAAAAQABAAAAIajI+pmwDnojQOysmyVrfHDW6e
F5bL2JnqGhQAOw==

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/ico_rss.gif

R0lGODlhHAAQAOYAAP///v/+/P737f3s1v716f/68/758v/8+PaUHfaVH/aWIfaXIvaXJPaYJvaZ
KPaaKfebK/ecLfeeM/egN/ehOPeiOvekP/imRPinRvipSPipSviqTPirT/iuVfiwWPmyXfmzX/m1
Y/m2Zvm3Z/m5bPm7b/m9c/q+dvq+d/q/ePrAefrCfvrGhvrHiPrHifrIi/rIjPvMlPvNlfvNlvvO
mPvPmfvQm/vQnfvTo/vUpfvVpvzZrvzasfzasvzbtPzctfzfvP3iwf3jxP3kxv3lx/3nzP3ozv3p
0f7u2/7v3P7v3f7w3/7x4f7y4/7z5f727P737v/69P/79v3lyf7t2v7u3P7v3v7w4P7y5P716/74
8f/58//69f/79//8+f/9+//+/f///////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAEAAGIALAAAAAAcABAAAAfTgGJiCISFhoeIhYKDiY2OCIyPko8XKi4rFYUcNzQfCQgQLTgnEo5F
AFpeBygIL18HX1gNFk9fUl4wjldYChlQBRFdSAwTHQhTXxsIHpmNSkmEP18UX0WGVAcPk1UEHStc
1kBhTCaEJAFRNw6PA2ACYAbaCTNaYEILCCJJYFAhjklYLMQIwMLQjzApCpUAk8WREiuEniwxVAFA
DUNPvDhq4oTQkC8ajvCwkRHDjiIyiAAI4qiHD3NUQBjhIoXACAQ6CkjZkoPBpJ+JIgF1tGgoUTGB
AAA7

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/category_icon.jpg

/9j/4QAYRXhpZgAASUkqAAgAAAAAAAAAAAAAAP/sABFEdWNreQABAAQAAABkAAD/4QN6aHR0cDov
L25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENl
aGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4
OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjMtYzAxMSA2Ni4xNDU2NjEsIDIwMTIvMDIvMDYtMTQ6
NTY6MjcgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5
OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHht
bG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0i
aHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1w
PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9
InhtcC5kaWQ6Y2MxNTQ4NjUtYmQ3NC02YTRjLTliYmYtNDMyNmUxMDBlZjY0IiB4bXBNTTpEb2N1
bWVudElEPSJ4bXAuZGlkOkJDRjYxODRDOEU2MzExRTU4MTZEQTgxMjlCOUE4QzUzIiB4bXBNTTpJ
bnN0YW5jZUlEPSJ4bXAuaWlkOkJDRjYxODRCOEU2MzExRTU4MTZEQTgxMjlCOUE4QzUzIiB4bXA6
Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDQyAoV2luZG93cykiPiA8eG1wTU06RGVyaXZl
ZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpmMDM5MTA2Yi0wMmI3LWMyNGMtODkwOC00
NWEyYzdjY2Q4NmUiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6Y2MxNTQ4NjUtYmQ3NC02YTRj
LTliYmYtNDMyNmUxMDBlZjY0Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4
bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+/+4ADkFkb2JlAGTAAAAAAf/bAIQAAQEBAQEBAQEB
AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgICAwMDAwMDAwMDAwEB
AQEBAQECAQECAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
AwMDAwMD/8AAEQgADQAPAwERAAIRAQMRAf/EAGIAAQEAAAAAAAAAAAAAAAAAAAYIAQEAAAAAAAAA
AAAAAAAAAAAAEAAAAwUFCAMAAAAAAAAAAAACAwUBEwQGBwARNjcIEhU1VmZnCjoyFiYRAQAAAAAA
AAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/ALalMDuhKSFz5RJF+pPUwPYoO2+oQnsFRk19VBron8zE
7bxDZc26YBTOzaF8mg0pbiZT9urLmsOaWGcpJ34Z3G5O6u3bYDiKUgFUPQgy7G+U1HwYtQ+o8cWZ
RpLgkmpBSwNOow1YhakkQKwtFREmw6g8DLx4jCjTl77OIZJQrw2BHS3Eyn7dWXNYc0sM5STvwzuN
yd1du2wf/9k=

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/arrow_triangle%20_down.jpg

/9j/4QAYRXhpZgAASUkqAAgAAAAAAAAAAAAAAP/sABFEdWNreQABAAQAAABGAAD/4QN6aHR0cDov
L25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENl
aGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4
OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjMtYzAxMSA2Ni4xNDU2NjEsIDIwMTIvMDIvMDYtMTQ6
NTY6MjcgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5
OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHht
bG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0i
aHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1w
PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9
InhtcC5kaWQ6Y2MxNTQ4NjUtYmQ3NC02YTRjLTliYmYtNDMyNmUxMDBlZjY0IiB4bXBNTTpEb2N1
bWVudElEPSJ4bXAuZGlkOjEzMjQzMjREOERERDExRTVBNzNBOEFDRjdFQTYxODYzIiB4bXBNTTpJ
bnN0YW5jZUlEPSJ4bXAuaWlkOjEzMjQzMjRDOERERDExRTVBNzNBOEFDRjdFQTYxODYzIiB4bXA6
Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDQyAoV2luZG93cykiPiA8eG1wTU06RGVyaXZl
ZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpmMDM5MTA2Yi0wMmI3LWMyNGMtODkwOC00
NWEyYzdjY2Q4NmUiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6Y2MxNTQ4NjUtYmQ3NC02YTRj
LTliYmYtNDMyNmUxMDBlZjY0Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4
bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+/+4ADkFkb2JlAGTAAAAAAf/bAIQABAMDAwMDBAMD
BAYEAwQGBwUEBAUHCAYGBwYGCAoICQkJCQgKCgwMDAwMCgwMDQ0MDBERERERFBQUFBQUFBQUFAEE
BQUIBwgPCgoPFA4ODhQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU
FBQUFBQU/8AAEQgABQAKAwERAAIRAQMRAf/EAF8AAQAAAAAAAAAAAAAAAAAAAAcBAQAAAAAAAAAA
AAAAAAAAAAAQAAADBQUJAAAAAAAAAAAAAAECAwAREhMEIUFxoSJi0jNjNAUlFgcRAQAAAAAAAAAA
AAAAAAAAAAD/2gAMAwEAAhEDEQA/AHeoJ8v95jBaoDsc1yiJEiDRTn2iVQFI5L7gTw0sD94/k8HY
6fcyYP/Z

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/arrow_triangle_up.jpg

/9j/4QAYRXhpZgAASUkqAAgAAAAAAAAAAAAAAP/sABFEdWNreQABAAQAAABGAAD/4QN6aHR0cDov
L25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENl
aGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4
OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjMtYzAxMSA2Ni4xNDU2NjEsIDIwMTIvMDIvMDYtMTQ6
NTY6MjcgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5
OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHht
bG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0i
aHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1w
PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9
InhtcC5kaWQ6Y2MxNTQ4NjUtYmQ3NC02YTRjLTliYmYtNDMyNmUxMDBlZjY0IiB4bXBNTTpEb2N1
bWVudElEPSJ4bXAuZGlkOjEzMjQzMjQ5OERERDExRTVBNzNBOEFDRjdFQTYxODYzIiB4bXBNTTpJ
bnN0YW5jZUlEPSJ4bXAuaWlkOjEzMjQzMjQ4OERERDExRTVBNzNBOEFDRjdFQTYxODYzIiB4bXA6
Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDQyAoV2luZG93cykiPiA8eG1wTU06RGVyaXZl
ZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpmMDM5MTA2Yi0wMmI3LWMyNGMtODkwOC00
NWEyYzdjY2Q4NmUiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6Y2MxNTQ4NjUtYmQ3NC02YTRj
LTliYmYtNDMyNmUxMDBlZjY0Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4
bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+/+4ADkFkb2JlAGTAAAAAAf/bAIQABAMDAwMDBAMD
BAYEAwQGBwUEBAUHCAYGBwYGCAoICQkJCQgKCgwMDAwMCgwMDQ0MDBERERERFBQUFBQUFBQUFAEE
BQUIBwgPCgoPFA4ODhQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU
FBQUFBQU/8AAEQgABQAJAwERAAIRAQMRAf/EAFgAAQEAAAAAAAAAAAAAAAAAAAcIAQEAAAAAAAAA
AAAAAAAAAAAAEAABAwIHAQAAAAAAAAAAAAABEQISAAMiMlOTBAUH0xEBAAAAAAAAAAAAAAAAAAAA
AP/aAAwDAQACEQMRAD8AprkH1Q+iW3NY0YVtW2veerHDUSBfEFVzGM5IgRKBbn2GhZ3n/Kg//9k=

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://img.blog.csdn.net/20140417110947625?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvb29wc29vbQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast

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

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://img.blog.csdn.net/20140417111223906?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvb29wc29vbQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast

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
OJdJbsjh/ck23hP6DJvSzybq8A8RBVWQolAoFAqFQnmXKXykJfpeqePCxxPBuVHGxVGU5sPJyWng
wIGVKendu3f5L8uoEj7iGp5NjWTOjTwautRv17XfpJGdnZ8eGrj0alrxS2LWoV2nehC9JkJZTrKy
IiSzc2toI5W/Z20MUhs39xbKvKyEhGSV3jfPZm2WLuqRfSc4NDFbLXPs0sYe+MRX+kUAJ/++ZeeU
vX6H9tT57ui5yAyt3M7DKefMoWsv9E1t5uJ/3X9l+orVOxfx311NkLh0G9YU4GUpvYr4Rxkwbtz4
0dl3FVaOkgenj8XpnAY4N/buS/CbNG1SZlCahZPxg5NHY2vhbZ+8xbyF3VHQyn2JVk2aWAEAAFGm
xMfn8gVPj20M9t729Ybl8oN3oPXMAC8UvHr3s1p54yi2rkoHgCGFFY4oPi3kdqzUZ9PyEdy+ey+I
w4c+c3qyCRv+SudAasiSSjBpNuPLzorwqIRcYunabqzf53YZvx6IUAFAwbNTu8JHrVmyYn7OzgvZ
rqOXj3BJ/nns/Ty9UiYim7fyuiR2XWeNcH3x5HlqPli5th3jN9D29Zl9T1T6O0Vcf0kce6/1axJ7
835YsgKbu/UaN7UVRC+LVIq+zhg0w6Tl1INLB9vBQKvHA6Y/KKjWYBPXlZWboUdhjVPjDfX3K3xT
1Akhz6DLmBkjHh8KSVQhm5YOpSJ51M927wmbsWz5NlBd8Ps9jquaFIVCoVAoFMq7iwQQoHLeijJB
F0WfhCweYlacrBo6h0glZojF2H32noNTbXJin9z/dcXkbcf/Si51O2rs2tIJMi9FK8r7DiorMmo6
6fubPg7Ch4/XH/wYlMdH9xl3V98EaNZYxth2+mrdaDsjANCkPb37zYx1x1INRNcTxYOFgyckzvOd
Nm3laFMAPjfm5v6rR/Q7LIB7eXbMaPNvV0xYv20Qw6VHPGcACF+yOVXhaxcfabbKe+cubz4r8sc5
F0/EaXSmqJ9+s2BPq3Vjv9nxKc6O2jvnfGCspsaz60ntW3rZgvlHAVdKZAW9v6B3j5PpmEveP32q
+cpF89Zv/QoUERe2frL0dEItxFcAAIisq/IBYEBhxSOqIPL7gX7st7O+PHVyLgDOiru7dcbX66I0
INZhwZpYOTTtP2vsdAcZgDr90Z97R67ffVVISaJ9vmPyl/IVc3x37F+MNC/uHhk9ZbswcvVJiaPy
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

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://img.blog.csdn.net/20140417111857750?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvb29wc29vbQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast

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
QcECq4iNjnmqLWuFvColMgoAgNGla8vWVnrQyUBueU+/2gtCI7QgrffFl3U1t+feVghmS1V4l8VD
iUFXzt1UAgSFWrYKn9/1M5f98mTw7DZptEfC/76atSJCDwB2lsNgmEMpzdD2tZyBjU/INMwuPism
hQUfLycaxIftBzs2bfxLCQCXw+n3/5oys9v6cweSOJM6pDz8pk30/H97dx4nR1XuDfw5p6p6m30y
k30lCQlZgIQEkB2RVVEQVJTNwOUFZXG5Loi7iAjqVUBEBZVFQEAFVBYV2QSSQELIDknIPslkJrP2
3lXnPO8fp7umpmemZxICSYbf9+YO3bWcOl09uZ9bT57zPK9efuL1DzZpInp1DR/zys2XnTT87nsa
wrMuv/mU8gU/+NhH79ta9FC5O1+lu3NVM18yrsaRQ8785eN3lf9sxll/rR9foxvX7XBL3UMvvn1N
nOx0c89H+dLTCI86aBRtW7g1O3juoZnve/vXIbXsjot/GD9ZzL9tafBqdlV1Zltuzm+f/LdFauur
j3znW7c8vCHDZNeOrqbkssZc2aFjysvDoyuzq7el6dDRlQ6ZgIUc9rG71v50lkWUXfrrU29dnij+
fLp1+fz18qITxkfu3bF3F2ABAAAAAOwqm4QQ3FvKgglCCKGUF2IOCzeqU5I9aRLLpU2Wk5ZlSkaU
sLWUlhCeUp7nem7OzWa06wotmYWrNZm1JprdbM7L5TzPy7muIFJaKc/zXNd1XU2ClSYyxTWZNQut
tfK0UvloBbMmEqKvNqyDljX0Axfe+MVzTpk2skYmmxOxEG0vc96lZTB9XkvvnP+b/2Yf/PDpB92y
eglPPP/s0e3//uELbfzuzHCAA6qW9Q0pmjyi3CJyJh41UbQ8/fTG3G5cbyDc7YtebKbz54yO/HFb
os+jIpOOnmSFyu56efFdga07JtQ6tGPk7EPraNW3nt62Z6aok5vejpdPHFE5pPb8mZKc004Y9s+O
iRVtaxuSPPB7OHDCCYckuSl39/++7XP3sB/vzl8H1fLCPbe80OPerLv38in3ElmxsYeeeu2Pvv37
B2PNp37v2Y7C/vSqb515+q9Ey2bvsKu7nah3/ufbR507csK04z7/5Sue+aM4/tO/fqN7LMrt3N5K
5SOr0OAUAAAAAPY7dqGCRbeIhWYWomtLpbtzrLt+WmZJpWqRKiOEZDuSDA1dHZm1NTK5xRkuWGkS
WinX08ozxSlc0lZO5dM1TJcPz/NynucppbRmzcxKae15nut6iqRSigolNrXSnvI81+V8R1PurYCF
mfqgTnN2xp3357u/cMDLd/7v5S+ubhfDj/nyQ1+t2wvX4o7n7/5P+z1nXHzQHWvtT54/sumBe5Z2
vjsz3IUBWWkSJvPHcizSrrdLT9OqY2MrOcNG11oUNwkCVtUBwx1qCeQL+Ex1Wi59ASGkoNYnLrrk
9yu7EhHYbd+WITKhOEV7SnbT0u36yMkzjps0c80fbrE/ccEHp740nDb9ZXtmAPew8DEGnp7EmbaW
FB0wtsqi1kDuzP59D0vZO38dVGrz4ke/+o3pZzx02sXTbnp2fqZ1azuVDRsek97Oxs1Esn7oyCi1
be10/TMSDSuWNqxY+tpz6ytW/fH8Lxx877yF3TIppBMNkdeefW9uGwAAAADAHmRHy2ImvtD1HMGF
AIYQtnYrVdvY1PLJudUjI2555VArFCHW7KZTmbjqfJVySa/84Lhdp2RIa+0pz1PKU57yFJHyPE1C
UL40BXv59qVKKU1Emklp5Xme1lpppZXifHSCNDNpLQQJIQuTyk8sQBCR0IN6SUhkwgdmyq0/v+mu
h97KEdH6iu0ZCj7/cDaVo2hN+Z6oqFfyWty5+I93N5xx6aWnLI+cNuTNX/1mVWZgMySyhhx3/vmn
yAW33ffqju4PTdrNukSxyoikuB7QNPqS3bJsO50y+wND7UWb+1iK0nMaumPxM+voq6edNPyR3zco
IrJHHHveFFr90xU9C19Exh3zwXpeNX9LyaII6XUvv82nz5pjN/51ZaroubzxjeUtdMZFJ4145E8N
bi/nlvwqe7mHunXNWx31R112ac3qO7//m9DseZd+umZY+3Pr4pqorL97yLlkhqhiSMyiTjWwaWQ2
vvoWnXDyzKqfb2jpuj379z0s5b3/6+AT0v8/arrpjVe30Kc+Obf64adaNcm6uafOpO13LO0lHESK
mYTV47NHRs0YRzv+ud0lAAAAAID9jP3l7173jz8/un7N2lQiqQqlIswyEWIOkTssvmp8etk43hKr
O8SumxSqGiFIux3bIs3rRrevyOayKXaSFbNd21ZaK6U8z1Wu63pKsKuUNmEFZmZNyvWUKVqRD1go
5ZmQhWKyWQfSKDQXGpiyFFKxCmZ8vI9kNy1eQ0dfdPVnlt23eHNaDDl4WKTbfrdh6br05Sd+/5qP
3fTSTnvYuIo3/nL/uuy7cq3smjvvWn71d793K6WfvubJ9d7AziKKHXzFvd8+t57Oql52xlWvd6sS
oOMblrbQZz97yYXtC+LVw+3XH314fa7fAXvjbfjb3f+56vs//NV16vbnNtmjj/vUQUTb+5uG9/aj
tz98+c9/dvtX9P/9c4088Pyvfm1O5z/P+8sWt1COduTc405OtEbHHnHZFy+etO2Rq58u/airG578
xa8u/901991Vc/uDT6xucaP1k0d2PHbf81s8Srxx53f/e/Ivr//j36f+4d6X396RtauGjbAX//Xh
9bl+v8pe72F606K1zsfOGP3ip5/fscV+aPF3f3SifPX6LbmBfCm68+0F2+mayz53WeuzTZUjw6//
5cG3+5mG1/jyfcvk/116xoQn73u7Kyi0f9/DfeWvQ2za1Z//QHzFm5s6uWrsnIuv+Xh9y9/uWZUm
osxbD/9k4Xm33njz96L3zqdDv/Cdo8TCH965JkdEdv0xX/rM2C0rNzamqHrsYRddc1Zd82N/WFkU
Dood8rFjapufeXrLe7KMBgAAAABgT7IPPXzOoYfP+fsjf33yz491trXlcjkikjL/z3ShbGJix2vD
nUSodly4osbiNHVuICEszoXLKrzyYfXx5kzLKw3RqRm70lTfVForpbVSglirQqNUJrMCxFNKMbMg
1qa2JrPWrFmTNl1UTcxCMBGT1ppIsBD+fHpiOagDGbkN9593VdX/ffGi3//xC2Eizsa3rfrvuqT/
xMetz9/8uftvuPGC7z1yCXmtq373lSceXJfdpVUyPNBrqU1/u+ORL/7qvMTDP3yu69/Y+zuLsltf
+dfWs88Tr/y75yNTesWPvvnAtOvP+9Ud56m21b//yj//vD7X74C98rb/46ILK37+/UtvuvVs6e1c
tVESsQqsPuh1GrrlhSs/eV3z9z5/0+/OK6fU+lf+NO+q2/7RoolIpza9uGjreRf88LHPEqmWpf+6
/WM33P1iZ+/LGfytHH/9G+deuvlrV37ucz+4sIxIda576e7nHnh+i0fkNdz9+U/tuPTKr37i8jvP
jxFRsnH5H7/9zz+vz+n+vsreJ9+x5qWtNGn+vc+2sRYv/eKf8RMPWrAizgP5Uij71s+uveuQH1/8
s19+VLe/+buvPPXQ2/1NQ2176Of/+OYfPv+Lj//n4w9vcwfFPdxH/jpYsephB53+pYuvGhYhyu5c
+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
MDD96ZvuAAAAAElFTkSuQmCC

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://static.blog.csdn.net/images/blog-icon-reply.png

iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAIAAAADnC86AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAyJpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdp
bj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6
eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2LjE0
NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJo
dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlw
dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAv
IiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RS
ZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpD
cmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNiAoV2luZG93cykiIHhtcE1NOkluc3RhbmNl
SUQ9InhtcC5paWQ6MDU3N0IzQUZCQkMzMTFFMzhERUQ4NDA5QTM1Njc1MTYiIHhtcE1NOkRvY3Vt
ZW50SUQ9InhtcC5kaWQ6MDU3N0IzQjBCQkMzMTFFMzhERUQ4NDA5QTM1Njc1MTYiPiA8eG1wTU06
RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDowNTc3QjNBREJCQzMxMUUzOERF
RDg0MDlBMzU2NzUxNiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDowNTc3QjNBRUJCQzMxMUUz
OERFRDg0MDlBMzU2NzUxNiIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1w
bWV0YT4gPD94cGFja2V0IGVuZD0iciI/PrioHQwAAAFUSURBVHjaYkxPT2cYCMDEMEBg1OJRi0ct
HrV41OJRi2licXxPT62goOAA+JiHR7q9rTXdyYmJiYnuQc3IZBgW1tdaIScnR5o+klogjIyMOjo6
ZmZmmgYmPKyMKHL//+3bf2Djxo0/f/4kxigW4m3l5OTMympUVeXD5XUnJydDQ8MVK1ZcvHiRakEN
jMWMylactsKAoKCAKxcXNX3s4JCqLkbIxD/fm9q6nz17Rk2Lnfz14OyPd5dMWHL33TuPiRPN4YLf
Xx8vb17+69cvIg0kymI2NjYRdmYg4+7ixd1Hj8KE/8HT1amFi+YdP05SqmYhLr+6AUlgit2OsBVm
+a9PLR0TiAxeki3+8+ffu3cPdu7ciSr8+MEDhr4+EoIXGTCbmJgQVPT//8MHD56/efMGVfj+kSMX
//79S8MiE+inW7dujdZOoxaPWjxq8ajFI81igAADACNfcOuEJwsaAAAAAElFTkSuQmCC

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: image/png
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/images/top.png

=89PNG
=1A=0A=
=00=00=00=0DIHDR=00=00=00(=00=00=00(=08=02=00=00=00=03=9C/:=00=00=00=19tE=
XtSoftware=00Adobe =
ImageReadyq=C9e<=00=00=03"iTXtXML:com.adobe.xmp=00=00=00=00=00<?xpacket =
begin=3D"=EF=BB=BF" id=3D"W5M0MpCehiHzreSzNTczkc9d"?> <x:xmpmeta =
xmlns:x=3D"adobe:ns:meta/" x:xmptk=3D"Adobe XMP Core 5.3-c011 66.145661, =
2012/02/06-14:56:27        "> <rdf:RDF =
xmlns:rdf=3D"http://www.w3.org/1999/02/22-rdf-syntax-ns#"> =
<rdf:Description rdf:about=3D"" =
xmlns:xmp=3D"http://ns.adobe.com/xap/1.0/" =
xmlns:xmpMM=3D"http://ns.adobe.com/xap/1.0/mm/" =
xmlns:stRef=3D"http://ns.adobe.com/xap/1.0/sType/ResourceRef#" =
xmp:CreatorTool=3D"Adobe Photoshop CS6 (Windows)" =
xmpMM:InstanceID=3D"xmp.iid:44FC3851BBC411E3905BE64DDF9843EE" =
xmpMM:DocumentID=3D"xmp.did:44FC3852BBC411E3905BE64DDF9843EE"> =
<xmpMM:DerivedFrom =
stRef:instanceID=3D"xmp.iid:44FC384FBBC411E3905BE64DDF9843EE" =
stRef:documentID=3D"xmp.did:44FC3850BBC411E3905BE64DDF9843EE"/> =
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket =
end=3D"r"?>=0F=1B=FB=F5=00=00=00=9DIDATx=DA=EC=D7=ED	=80 =
=10=06`=ADfq=02=C7h=0F=17t=1A=A7I=12D=B2=F3=E3,=8Cx=EF=87=88=C8=3Dx=CA=81=
=D2=18#f=C4"&=05`=C0=80=01=03=FE-=BC=9F1=02o=83=AA=B5=96=07=AFZk=B6=AA=94=
=F2=A3s=EEu8=AF0=DB=EE=80=A9{=E5=D9=ADp=F951=EC&8W=FD=9B=F2L=F0xv=1D=BEU=03=
=1C=3D=86]=81)5=CCG=EC=BE=06=92=AA=D4=CA3=A5N=CFD=19-{8=9D+&*dl=D9s	=
=89=9F=04`=C0=80=01=03=FE=1C|=080=00=B6=1Ea=A5{=B0=C2=D5=00=00=00=00IEND=AE=
B`=82
------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://avatar.csdn.net/8/C/2/1_u014388509.jpg

/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCACWAJYDASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDrLbc8
zxRg+bIoUZ6KvrXW6ZGGZI4yDEi4zjkmuLs3lluRGpOXxk9wK7vT8QWxkwAB/OvHpVOecm+h7OPj
OErJlhoghDNjcxwBika3O/aMflVeOZ57rewyF6e1WoJd6ljXTGXtI3Z50nUirlC+QxqFGMk+lcT4
hvnlhljtzEDDIASa7bU3wjOCOFJxXMaTo1pfTzwXUQPmnea47c1TkR6OGrKEOeRw6idLkXUIUN/E
jYI/Cup0a/TZLIV2bULEN6ituT4c6crO0M06sw4+bgfhWJdeDdW0+B0tZBcq2RkjBANOVGpF6HY8
ZQrRtzWINX1qKezWCPBeQZ3DtXQaNKLnTYpOCwGDx3rO0r4eSxhZby66jJjA6fjWjaWLaRqD2yEi
KQZTPrUVIVIxuzOdanNctN7Graok29B9/HIx3pvlEHa33wfSo7NymoMmPnIyCO/rWi8fnIXQfODz
TjzOCOKU5Re5UMTL8uQGPtV4QrJGqkgZGN2KSOA3FvnrInBpYo3VGifgHp7Gtaakr36mMqknsyF7
Ftjxk8qODjrXF6nZNa3Jcj5D0ru470RkJcdV43Vl69ZK65ADK3I9qbUbWR14LEThU5ZdTz2+tEux
hzg9uKyJNCmQ5R0I9xXRtGUkZWyCDSdOBz7mp0Pp41LbHJXHhua5O54l/CiuuA4opj5zd0CzdZXl
kHzYAWt+S6WWUQR/6tB831rMkuFsbN2H3iOKdo5Mts0zdXOa45S5VofMVoc7c5G3ZZ8mbHUjC055
4re4WzDfvCmadYkJAznoK4vUNVaLxHFLkkNJt49K6nU5IJI54UZTm+V6I6S6JmiCd2O2onC2Ou2q
gYDx7D9afGM3EDDs2frVnW0UpBdAY8mQMT7Vrh1ePP1IndS5Wa8Zcr83WntnGDyaWIhlVv7wyKkH
Iya74tvc43bmuQ4JYk4rO1m1E1usqj95FyuP1rXx370yRA4w3cYqa0eaNiov3rnCatfmyls75OIw
wDn2PWtaHVFk1J/LOAQrgeq4rL8U2DNplxAvG35lrnfDmpSTapaiXPyxmM+9eLKbg+U9X6vCdL2h
6jG8bKXjOCwzgetRW9ysmUl++p4NQWrmFxk5U1FdqY5i6cZrqnVvBM4FRXNoO1SASRsy9xxWFYao
GZrK8bkHCk1tw3IniMT/AHex9643XwtrfM38R5U+lc8ppu66ndhaPO3F6Mm1izMM5GAR1BHeskKR
2OfpWtBcTzWccdwoE+0NG56MPStuxjjvlUxxAt/FgfdIroorndmd0MZ7OFmr26nIeXLj7p/Kiu9F
tCi4Kr+VFb+xfcr+0P7pxl5ctMACeCK6DRRixX6YriZLoB8HsK67QZxNpox2ryOruGLpqMdDflk8
rSpDnFcLZQ/bdSlkZeEOFz3NdZqVwP7EBz9a5/w7eWa30aPKqOW5D+tdUI+1qcvY46HuUZSN8Mwt
gBkNGwP5VtywC909kYcOmfpWXfosFz50ZDRS/fx0BrT0yXfbBerKTn6V2YbRuB59W7ipDtLctZIr
n54vlatAHt+NUo0EF6SB8kvX61dXkkn1xXZE5Zbi4prg4qQCmMeab7CW5ia/biS0ZsZ45+neuE0z
Tzb36yn7ivnd7V6XeoJLZ0Y4DAg1wtsUWWe13bmQkCvKxdK0rnrYOo5UnA6pfmVQo+vtSTkmHB+8
oqjoN2bzTkaXiRMq/wBe1aEuGT3qGrxsYbTsc/bXvk3rwMeDyvtWb4ygLWCXC8sv36brkgtdRDA4
arkkseq6LLFnL7efyriT1selGm4yVRbMh8KtFqujGKd/ngOB6gdqu2Es2l372+7EM/RsdWrlfCM/
2bVxbyEBJvkbPqOlejT6VHcxbSSGHIYfwmvYpLmipI5sRanNwlsVmfkhnP5UVPCMR7JUG5eMnvRX
QZ8540Ll5zkgg9K7XwXcGSKaI9QePpXFtdw3zCSCHygBtxnvXS+EJfJvnRuARjPrXiOPvHuYxN0j
ptYyunzpnCbSVPvXnK6frJ8OXmqXF0Nto5xER1r0+9tUvrJ4lONy8H0NUNPs4L611HR7gANPzwPb
HFdeHSbZ5SquEEkecXOs6louiWl6usLJ9qAP2bB7+9dp4e8cldNS4uoGDKMSqPvAdjVYafNo1qml
ar4cOpJC3+jzxpnI7Z9K1tG8L3t5PdajqFstt5ibLe2U8Kvv71u4TUrompOlOPvdTqdN8Q2GsRD7
JOrt1KnqK14nEiBh9CD1rkdL8HwadcrLApUA53A4rq/uuHGNwGMmumnNnm16cE/3buidpFUZY9Oh
9K5LXvHGnaY3lxN58+cBE5Oa39Rt5LuyeJHKlupWue0zwjZLcrdXECmSMnax5JzTk2tiqUaUVzzO
EvfE+s+IbS7vUv4NOsYCVaKQ/M5FZPhDWruS9MkyqIXztk5+Y+ldPqfhq30y+vbbVNLlu9NuZTJH
LAhYqSenFRvo0moLDb6bp8ljp1kfM8yRdryH0xXHWhJnq0KtNe6vhLHhfUr+38W31pcN5tm4zEfQ
133HI75zXAWls0VnPdqxMjPuUjtjtXW6dfi7sopF9Bkelc0pW0ZjXpWk5I5XxpmK5gl7YIqloGpb
JWBIIPBHoK0/HSgWcTDnD9ay9F0j7TpL6hbqRPFIQ4zwy4rnUeZ3R6MJx+rpSHPbfZtVE8PKB96k
V6faSefbpJ3ZQa85jZWC4OecV33h6QS6eAfvKcGvTwbuuVnnZimknPcsT2+9iaKsyuFJyKK6zz1N
nz3pC7rKRgOj10elZtb2OQn5S3NcX4W1RrfTrp9iuY/m2seK6vQ9QXVbMXQXa+cMo6D6V5Mqbvc+
tqtyjojurG4CXD2ztk/eX6VJLZrLfxXY3RuhwGU/d9/esVpWCwXSdcbTXQ2d2s8SkNyRz7VEJOEr
ni1oNXSOhgScRoTIHOPv9M/hVj58dBn1rO0+8CHyJDkfwt61rZBXJ/CvapVFNXPFqQcWRgADrj2p
pTJ+7ipmxxTMU2kioiAYGBSOGBG3HuKBIN30qdcGiJMld3ZXdHZQOPXB9Ko3dpNeQNA5CRkYO09R
9a1iQKhcgUpDg3HY4P7H9htZbU8iJz19MVleGdRMdxNCx/d+YduT27V0PiqZbeOeUYU7ck151Yah
AuprDG2WZck+9eTiYq59Hh4udC7Ov8aJ5mlqR/C4NZHhfUbm1tZbWEr+8fIB7+1a2pH+0NAP95ea
qeG1hsPOuJk5CfJxk5zUYZe8S2lRs0S3VnJbTB5ECeZzgdjW3oupx2Qk8xsK/NY90Z75wWR2LdAe
gzVu205vPW0nyrDnPrXdBOM7xMq/JNLnep0w1S2nXcs4IorGufDis3yuwHsaK6Lvscvs6fc8A0qR
LY3NozBvOiJH4VY8C+Ivs2pfYpP9XMcLk8A1z1szC8SRTnA2/mKsW2jvBOZ5H8oK2UPc1i4q2p6z
9tUnaGx7vbEPDNATkj5hS2V0beTk/KeMVg+HtYS/0+KZTmSPh17nFab3ERvZIg4Rsb1X1FefJXZP
LZ8stzcXUZbWdRMM2z/ckH8Dehrq7C+E8QUnLD8jXF2EyNm3mwVPr61vW9u0KBrc5UdV/u1vh5Sg
eZiqSudGWyOKI23dM4qjZXyzuY3+SUdVPerke7cx3jHYV6UZcyPOlGzIdxWVgQeasoxqMLyS5FAk
xSWg2rolc45zVOeXAJGeOtSyvlQRWTqd8ltbvNI4SNRzmpmzSjDmehxPxA1JI4UtwSWc/MP9mvP5
HS1uIbuN1CBhgZ59xTPE2uz3+ry3PkyBVOIyeQVrl5Jmnf5y2c5xnpXnzpuTufVYaChDkPaILwNa
lQflZcj8aIruW3uFWMIVZPmLLmsPw1di70aE/wAQ4P4dKreJtWl03VLVY+Q0fzCsKcZJuxnGhze4
eo2skckSPG65XpxVpporiaMlQsyHj0P415vpHie3ZeJShPBUnit+HXvKlDykEHoR0rqo1nCWpwVs
BPU79pIgoLYz9KK4KbxjPExVbfeOxorr+sROP6lUPBdDIWd3I6LxmtSYeYu3PbINU7WNIm4IBIqd
HOMGuOUrs+sw9JqFjsfAxs7i2aDeIdQgPyoTxKvf8a0vFVtOdNXUbJit5ZncMf3f7tcArSQzpc25
KTpyriuv03x1b3a/Z9WiEUsn7t2H3W464rVcstzy69KVKdzR8OeIE1q0WfBjlU4bsNw9K9A0bUDM
FQnBH389xXL6V4e8NQxASzC3kzuA80ANnuKtM8WnXKlbyF4jwrBxzUypuEro4KrVXR6Hby6bBdyL
LJ9+NsoQcZq08UYOAjMD3rL0i5M9rv8AP+ZRjBFalpeRTRE+YpIO1jnvXZHbU8ipFp2Q17eFkwdy
mkciNck8Dr9KfPcRIpYuuB6muP1/xbb2oKq+6XoEQ5z+NS5pOxrRoTqS8jdvNVgt18tpDuPIQDJI
rx/x7feJ9dk+zafYXC2YbLFeM13mj30lt4f1DxDqG3ftPlK3YDp+dcYvxovAhzpqH05ot1N4QcW4
0/vOBs4PE9hIRHbXHHUOmQa6VtFu08PXeoaxpkNsQo8pxwzE+tT3HxjvZGcpp8asemTmuV1jxdqv
iaUC8lxCORGnAzUySsejRnNM6HwHd5kltiT8wzS+Pjt1m2HpHWR4MmMHiGDJ4bgitLx+xfxEoHO1
K5FGzbPVot+0VyhphJnXGOtb9souL0QwyHJGSM1zllII8v0O3Aq7o1+9tqbOMcKc5PNZSbb0Oqpa
MG2dBcWNzG2C5/OillvluAHedUY/wminyyOLngecncjqw9KswyEplh1NF5AF2svSpURTGAOlU9T0
IcyJEkGKVrJLrO1gCeADVSRWi+ZTT4bzBGeG7GmgmoTXLMlubq5FktjfBiYiTDNk8D0rLM1wRlbi
UEdRuPHuK6mG6gu4DBcgFTwGxWLeaelvOQpzGelbxqXVmebWwdvh2PQ/hprupXQmgncSJEhBbOTj
1qQeINV0+a4ignGzzWILDmqXwo8pdfurV/lM1vhfzrsJNFtWlkWSMFlkKk+tVNu2h5tL2cajjNHL
y6vrOotsa5Yg9kFaGneHvmEtyWLE8L7mumttKgt0yiAVY07bJq6ggFLddzHtWUItyTZVaslBxijk
/irqS6X4dstEtyAZcNIB1wK8aIAGOncV2nj7UTrXiy5lLZihPlJj2rkZowqnFbt62DDUnCj6meqZ
Y+tSRApyO1Rq205oEzBjjoaXkaU9GbOjy+VqUcwP3SK2vFkiz6y8wPYD9K57TWDTsRWpcsZ1LN96
ueejsezQpqUVMWJAbYdz161s+CdQ0608Tl9TdBC0ZQGRRgGqWn2fm2bFuwrFuUxOw9DSg7MrFUnU
p8idj6BPhnw5qiC68qGRX6FHwKK8Js9VurSNo4p5NucgbjRXR7Rdjw/7PqfzCFQ6evoKhhOwtGaj
jnKN14qchZMSL171yn0cWmSMgZcEVmyxFWx2zWqMldxqGaLzFyBTTFOCbuV4i0QBHK9xV+JlmXDc
46VQjba2xuhqZVaJsr92k/IFtY3PC91/YniW0u8/uFfa/wBDXrc0inUJmTlHAkQg8HNeKRuGA3cg
/Lj1rpdD8QT6ZLHDeSmW2A2qT1QVtGr7tmeRjcB73tEelT3a29qzv0AzVO4uTofgi91Kbi4nyVU8
EZ4x/Wqem3EWs6kqmbbY237xif4j6VxXxD8R3GvamLCzjlaytjhdqnDN61rBWjc8iUOapyrockz7
iZHbLHkk96z7qVeSKW4aS2YrIrK4/hYYqkHVm3t970otfU9CTfLyoTZ8mT19KSSIiMGpkUytuYYF
TSqPJPNBPK1qJow/0ogjqK3nUeX71h6Xxdk+1bTPkYrmqfEezgv4SuWLedorYoOprHlObhia0S2E
FZkh/ek0kdExWjZDle9FXQA0SH2opmfKjOUcU9JjGwA70UUC6l2OXcRxVl4lLCiikzR7FK7hCEFT
g06Es0eC1FFAkWFjwRhqnb5E3ZzgUUUluKt/DZ7DokmNBt3VVBKDOFHPFQSXB8+UBIxt5+4KKK6u
h8z9tnmHxOiSTUbS6ACtJHhsDFcWsagZoooOumTIeKcT8hoopI3ew3Tjm6rd8vjrRRWM9zuw/wAJ
FcHy1Hes15cv0oopI2kTGbgcUUUUEn//2Q==

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://c.csdnimg.cn/jifen/images/xunzhang/xunzhang/zhuanlandaren.png

iVBORw0KGgoAAAANSUhEUgAAABUAAAAYCAYAAAAVibZIAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz
AAALEgAACxIB0t1+/AAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtzIENTNXG14zYAAAAW
dEVYdENyZWF0aW9uIFRpbWUAMDkvMTAvMTSoU35bAAACHElEQVQ4jbWVv2tTURTHP+82iRUyNENN
NRZihJulVVtwdC0kgzWLuPkDK+oadKvSFgR/4SCIUnHxHxAp7+HiYqOlTjqIRlKt1FSSBtImaWiS
vjjkNSTp47YN6Xe775z34XvOu+8crVqt0mlpqqDUDTdwC7gCHAWWgFfAw3g4lN8TVOqGA7gKTACH
bFJSwF3gZTwcquwIlbpxFngABFVVWPoB3I6HQ29toVI3TgOPgTO7gLXqAxCNh0OfATSr1GfAWBuw
Vk0DNwUw3gi80N+PS4h2oWPAuCZ1IwX0AtwbHCTiO0IiX+Di/DyZUoloUHItEFCSvmSznP80t3VM
O7aAAHOZDOHDfSQKeTKlEgAzyWV+5QtK6IqVa6lXk7pRv/09Tif5SoUel4uVjY3dlrxNjsZDtlwm
GpS8SCzUnzmF4GBXlxJSNk2Km5v20KfDQ4x4vUR8PkZnY7WeSsnlY34l9NvaGpHYR3vou+V/SLeb
r6ur9Z6+XlzkfSqlhOYqzT9VU0+dQlAxTZxCUDJNJUilJqdOTePR0CmexH/yu1D74h6Xi77ubrXT
cpmlYtEeev/kCUa8XoY9Hs5ZPb1+PMAlv18J/Z7LMToba4Kmse7qTDLJASH4s75e7+nzxAJv/iZ3
dNqgtCZ1YwK4o3xrb5oUwBS1QdAJTQNT+zP6WqOdGNLbZpyVMADcoLY27JSy4gOtQFunLa7bW3z7
saL/AxYTzWdL9R0nAAAAAElFTkSuQmCC

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://c.csdnimg.cn/jifen/images/xunzhang/jianzhang/blog5.png

iVBORw0KGgoAAAANSUhEUgAAADAAAAAQCAYAAABQrvyxAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz
AAALEgAACxIB0t1+/AAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtzIENTNXG14zYAAAAW
dEVYdENyZWF0aW9uIFRpbWUAMDkvMTAvMTSoU35bAAAB+klEQVRIicWWv2sTYRjHP2eTtG964IGW
Ij0ImKYQEbFCKbHU7pnExcHOXeSK4CLcHHDpFBzs7NJFOjreX1DEJUNACKSFdjqh8drUpg7lznvv
3uslepxfuOV5nx/f59d7r3ZsvboiJ5RqdQzLxm23GHY7mfi8lYmXCWFYNqVaPRNfuSYw7HZw2y0g
uyRy78C4SVyORgw8T/mFoYV3QBNlimYl5uyi36NoVmJzm6avIu/D3wdAuRMDz+P4YsTdpxucfu8G
cvfbAQ8Wq+oEph8uc3vrbSyw225hWDYn25uSPEn/x+6OUh61vymJgedxubLO4tYbycZpNqQECuHD
q/MzKVA4gApJ+lF5EvxxMiwbw7I5/fyJn86X4NyvvNNsJPqQd6A0ExAp1eoUFuJjkDWG3Q7uxx0A
9BdywlNCAGA8esKd1TXM5y9j9lIHCnPz1wY3VP1v4O+K6u7XRDmIG4W4ZwLw+P2HQNbf35N0pA78
OuwB160/2d4Mbot/RdGsKIuiiTJi9VlQ+ejI9ff3cJoNnGaDr+9eK31LHdCm/4wQEIxQVD6pvmoU
08gDFGZ19OoSAPr9WnoC/vJFq5UkD9/n4+hPQh5Ary5J46P0ledbCMYnP/A8eodHyrPEazQPFM1K
KnmAWSEkoknI9SkR/q+k/SPGxX95jWZFHuA3WGrW8loEYD4AAAAASUVORK5CYII=

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://img.blog.csdn.net/20151123180051817

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

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/public/common/toolbar/css/index.css

.csdn-toolbar {
	BORDER-BOTTOM: #e9e9e9 1px solid; PADDING-BOTTOM: 0px; LINE-HEIGHT: =
1.5em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: "Helvetica", =
"Tahoma, Arial", "sans-serif"; BACKGROUND: #fff; COLOR: #333; FONT-SIZE: =
0.75em; PADDING-TOP: 0px
}
.csdn-toolbar * {
	BOX-SIZING: content-box; -webkit-box-sizing: content-box; =
-moz-box-sizing: content-box
}
.csdn-toolbar *:before {
	BOX-SIZING: content-box; -webkit-box-sizing: content-box; =
-moz-box-sizing: content-box
}
.csdn-toolbar *:after {
	BOX-SIZING: content-box; -webkit-box-sizing: content-box; =
-moz-box-sizing: content-box
}
.csdn-toolbar DIV {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar DL {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar DT {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar DD {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar UL {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar LI {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar H1 {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar H2 {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar H3 {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar H4 {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar H5 {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar H6 {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar PRE {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar CODE {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar FORM {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar FIELDSET {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar LEGEND {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar INPUT {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar TEXTAREA {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar P {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar BLOCKQUOTE {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar TH {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar TD {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar TABLE {
	BORDER-SPACING: 0; BORDER-COLLAPSE: collapse; TABLE-LAYOUT: fixed
}
.csdn-toolbar FIELDSET {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
.csdn-toolbar IMG {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
.csdn-toolbar ADDRESS {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.csdn-toolbar CAPTION {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.csdn-toolbar CITE {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.csdn-toolbar CODE {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.csdn-toolbar DFN {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.csdn-toolbar EM {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.csdn-toolbar STRONG {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.csdn-toolbar TH {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.csdn-toolbar VAR {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.csdn-toolbar UL {
	LIST-STYLE-TYPE: none; LIST-STYLE-IMAGE: none
}
.csdn-toolbar CAPTION {
	TEXT-ALIGN: left
}
.csdn-toolbar TH {
	TEXT-ALIGN: left
}
.csdn-toolbar .clearfix:before {
	DISPLAY: table; CONTENT: " "
}
.csdn-toolbar .clearfix:after {
	DISPLAY: table; CONTENT: " "
}
.csdn-toolbar .clearfix:after {
	CLEAR: both
}
.csdn-toolbar .clearfix {
	OVERFLOW: visible
}
.csdn-toolbar .col-sm-2 {
	FLOAT: left
}
.csdn-toolbar H1 {
	TEXT-ALIGN: left; LINE-HEIGHT: 1.5em; MARGIN: 0px; FONT-FAMILY: =
"Helvetica", "Tahoma, Arial", "sans-serif"; BACKGROUND: none transparent =
scroll repeat 0% 0%; COLOR: #333; FONT-WEIGHT: bold
}
.csdn-toolbar H2 {
	TEXT-ALIGN: left; LINE-HEIGHT: 1.5em; MARGIN: 0px; FONT-FAMILY: =
"Helvetica", "Tahoma, Arial", "sans-serif"; BACKGROUND: none transparent =
scroll repeat 0% 0%; COLOR: #333; FONT-WEIGHT: bold
}
.csdn-toolbar H3 {
	TEXT-ALIGN: left; LINE-HEIGHT: 1.5em; MARGIN: 0px; FONT-FAMILY: =
"Helvetica", "Tahoma, Arial", "sans-serif"; BACKGROUND: none transparent =
scroll repeat 0% 0%; COLOR: #333; FONT-WEIGHT: bold
}
.csdn-toolbar H4 {
	TEXT-ALIGN: left; LINE-HEIGHT: 1.5em; MARGIN: 0px; FONT-FAMILY: =
"Helvetica", "Tahoma, Arial", "sans-serif"; BACKGROUND: none transparent =
scroll repeat 0% 0%; COLOR: #333; FONT-WEIGHT: bold
}
.csdn-toolbar H5 {
	TEXT-ALIGN: left; LINE-HEIGHT: 1.5em; MARGIN: 0px; FONT-FAMILY: =
"Helvetica", "Tahoma, Arial", "sans-serif"; BACKGROUND: none transparent =
scroll repeat 0% 0%; COLOR: #333; FONT-WEIGHT: bold
}
.csdn-toolbar H6 {
	TEXT-ALIGN: left; LINE-HEIGHT: 1.5em; MARGIN: 0px; FONT-FAMILY: =
"Helvetica", "Tahoma, Arial", "sans-serif"; BACKGROUND: none transparent =
scroll repeat 0% 0%; COLOR: #333; FONT-WEIGHT: bold
}
.csdn-toolbar H1 {
	FONT-SIZE: 3em
}
.csdn-toolbar H2 {
	FONT-SIZE: 2.5em
}
.csdn-toolbar H3 {
	FONT-SIZE: 2em
}
.csdn-toolbar H4 {
	FONT-SIZE: 1.5em
}
.csdn-toolbar H5 {
	FONT-SIZE: 1.16em
}
.csdn-toolbar H6 {
	FONT-SIZE: 1em
}
.csdn-toolbar TEXTAREA {
	resize: none
}
.csdn-toolbar A:link {
	COLOR: #333; TEXT-DECORATION: none
}
.csdn-toolbar A:visited {
	COLOR: #333; TEXT-DECORATION: none
}
.csdn-toolbar A:hover {
	COLOR: #c00; TEXT-DECORATION: none
}
.csdn-toolbar H1 A:link {
	COLOR: #333
}
.csdn-toolbar H1 A:visited {
	COLOR: #333
}
.csdn-toolbar H2 A:link {
	COLOR: #333
}
.csdn-toolbar H2 A:visited {
	COLOR: #333
}
.csdn-toolbar H3 A:link {
	COLOR: #333
}
.csdn-toolbar H3 A:visited {
	COLOR: #333
}
.csdn-toolbar H4 A:link {
	COLOR: #333
}
.csdn-toolbar H4 A:visited {
	COLOR: #333
}
.csdn-toolbar H5 A:link {
	COLOR: #333
}
.csdn-toolbar H5 A:visited {
	COLOR: #333
}
.csdn-toolbar H6 A:link {
	COLOR: #333
}
.csdn-toolbar H6 A:visited {
	COLOR: #333
}
.csdn-toolbar H1 A:hover {
	COLOR: #c00
}
.csdn-toolbar H2 A:hover {
	COLOR: #c00
}
.csdn-toolbar H3 A:hover {
	COLOR: #c00
}
.csdn-toolbar H4 A:hover {
	COLOR: #c00
}
.csdn-toolbar H5 A:hover {
	COLOR: #c00
}
.csdn-toolbar H6 A:hover {
	COLOR: #c00
}
.csdn-toolbar A:focus {
	OUTLINE-STYLE: none; OUTLINE-COLOR: invert; OUTLINE-WIDTH: medium
}
.csdn-toolbar A.f-blue:link {
	COLOR: #2981a9; TEXT-DECORATION: none
}
.csdn-toolbar A.f-blue:visited {
	COLOR: #2981a9; TEXT-DECORATION: none
}
.csdn-toolbar A.f-blue:visited {
	COLOR: #025d87; TEXT-DECORATION: none
}
.csdn-toolbar A.f-undline:link {
	TEXT-DECORATION: underline
}
.csdn-toolbar A.f-undline:visited {
	TEXT-DECORATION: underline
}
.csdn-toolbar A.f-undline:visited {
	TEXT-DECORATION: underline
}
.csdn-toolbar .col-sm-1 {
	FLOAT: left
}
.csdn-toolbar .col-sm-2 {
	FLOAT: left
}
.csdn-toolbar .col-sm-3 {
	FLOAT: left
}
.csdn-toolbar .col-sm-4 {
	FLOAT: left
}
.csdn-toolbar .col-sm-5 {
	FLOAT: left
}
.csdn-toolbar .col-sm-6 {
	FLOAT: left
}
.csdn-toolbar .col-sm-7 {
	FLOAT: left
}
.csdn-toolbar .col-sm-8 {
	FLOAT: left
}
.csdn-toolbar .col-sm-9 {
	FLOAT: left
}
.csdn-toolbar .col-sm-10 {
	FLOAT: left
}
.csdn-toolbar .col-sm-11 {
	FLOAT: left
}
.csdn-toolbar .form-horizontal .form-group:after {
	CLEAR: both
}
.csdn-toolbar .form-horizontal .form-group:before {
	DISPLAY: table; CONTENT: " "
}
.csdn-toolbar .form-horizontal .form-group:after {
	DISPLAY: table; CONTENT: " "
}
.csdn-toolbar .col-sm-12 {
	WIDTH: 100%
}
.csdn-toolbar .col-sm-11 {
	WIDTH: 91.66%
}
.csdn-toolbar .col-sm-10 {
	WIDTH: 86.33%
}
.csdn-toolbar .col-sm-9 {
	WIDTH: 75%
}
.csdn-toolbar .col-sm-8 {
	WIDTH: 66.66%
}
.csdn-toolbar .col-sm-7 {
	WIDTH: 58.33%
}
.csdn-toolbar .col-sm-6 {
	WIDTH: 50%
}
.csdn-toolbar .col-sm-5 {
	WIDTH: 41.66%
}
.csdn-toolbar .col-sm-4 {
	WIDTH: 33.33%
}
.csdn-toolbar .col-sm-3 {
	WIDTH: 25%
}
.csdn-toolbar .col-sm-2 {
	WIDTH: 16.66%
}
.csdn-toolbar .col-sm-1 {
	WIDTH: 8.33%
}
.csdn-toolbar .pull-left {
	FLOAT: left
}
.csdn-toolbar .pull-right {
	FLOAT: right
}
.csdn-toolbar A {
	COLOR: #999; FONT-SIZE: 12px; FONT-WEIGHT: normal; TEXT-DECORATION: =
none
}
.csdn-toolbar A:hover {
	COLOR: #333
}
.csdn-toolbar DL {
	MARGIN: 0px; FONT-SIZE: 12px
}
.csdn-toolbar UL {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.csdn-toolbar LI {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.csdn-toolbar LI {
	BORDER-BOTTOM: #eee 0px solid; POSITION: relative; BORDER-LEFT: #eee =
1px solid; LIST-STYLE-TYPE: none; WIDTH: 40px; BACKGROUND: none =
transparent scroll repeat 0% 0%; FLOAT: left; HEIGHT: 40px; BORDER-TOP: =
#eee 0px solid; LIST-STYLE-IMAGE: none; BORDER-RIGHT: #fff 1px solid
}
.csdn-toolbar .hide {
	DISPLAY: none
}
.csdn-toolbar .open .dropdown-menu {
	MIN-WIDTH: 70px; DISPLAY: block; TOP: 23px; border-radius: 0
}
.csdn-toolbar .open .dropdown-menu LI {
	BORDER-BOTTOM: 0px; TEXT-ALIGN: center; BORDER-LEFT: 0px; WIDTH: 100%; =
PADDING-RIGHT: 10px; FLOAT: left; HEIGHT: auto; COLOR: #333; BORDER-TOP: =
0px; BORDER-RIGHT: 0px
}
.csdn-toolbar INPUT:focus {
	BORDER-BOTTOM-COLOR: #9cf; BORDER-TOP-COLOR: #9cf; BORDER-RIGHT-COLOR: =
#9cf; BORDER-LEFT-COLOR: #9cf; box-shadow: none
}
.csdn-toolbar TEXTAREA:focus {
	BORDER-BOTTOM-COLOR: #9cf; BORDER-TOP-COLOR: #9cf; BORDER-RIGHT-COLOR: =
#9cf; BORDER-LEFT-COLOR: #9cf; box-shadow: none
}
.csdn-toolbar .form-horizontal .form-group {
	MARGIN: 0px 0px 10px
}
.csdn-toolbar .form-horizontal .form-group .ft {
	PADDING-LEFT: 12px; WIDTH: 362px; MARGIN-LEFT: 25px
}
.csdn-toolbar .form-horizontal .control-label {
	BOX-SIZING: border-box; TEXT-ALIGN: right; PADDING-BOTTOM: 0px; =
PADDING-LEFT: 0px; WIDTH: 38px; PADDING-RIGHT: 10px; PADDING-TOP: 7px; =
-webkit-box-sizing: border-box; -moz-box-sizing: border-box
}
.csdn-toolbar .form-control {
	BACKGROUND-IMAGE: none; BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: =
#ccc 1px solid; PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.4285; =
BACKGROUND-COLOR: #fff; PADDING-LEFT: 7px; WIDTH: 100%; PADDING-RIGHT: =
7px; DISPLAY: block; HEIGHT: 28px; COLOR: #555; FONT-SIZE: 14px; =
VERTICAL-ALIGN: middle; BORDER-TOP: #ccc 1px solid; BORDER-RIGHT: #ccc =
1px solid; PADDING-TOP: 0px; border-radius: 0; box-shadow: none; =
-webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); =
-webkit-transition: border-color ease-in-out 0.15s, box-shadow =
ease-in-out 0.15s; transition: border-color ease-in-out 0.15s, =
box-shadow ease-in-out 0.15s
}
.csdn-toolbar TEXTAREA.form-control {
	HEIGHT: 70px; PADDING-TOP: 5px
}
.csdn-toolbar .nobg {
	BACKGROUND: none transparent scroll repeat 0% 0%
}
.csdn-toolbar .icon-hasnotes-sm {
	BACKGROUND-IMAGE: url(../images/f_icon.png)
}
.csdn-toolbar .icon-enter-sm {
	BACKGROUND-IMAGE: url(../images/f_icon.png)
}
.csdn-toolbar .write-icon {
	BACKGROUND-IMAGE: url(../images/f_icon.png)
}
.csdn-toolbar .icon-enter-sm {
	BACKGROUND-POSITION: 0px -192px
}
.csdn-toolbar .icon {
	BACKGROUND-IMAGE: url(../images/f_icon.png); Z-INDEX: 1001; POSITION: =
relative; MARGIN: 10px auto 0px; WIDTH: 20px; BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: 1px 1px; HEIGHT: 20px; FONT-SIZE: 16px
}
.csdn-toolbar .icon .wrap {
	BORDER-BOTTOM: #ccc 1px solid; POSITION: absolute; BORDER-LEFT: #ccc =
1px solid; PADDING-BOTTOM: 7px; PADDING-LEFT: 7px; PADDING-RIGHT: 7px; =
DISPLAY: none; BACKGROUND: #fff; FONT-SIZE: 12px; BORDER-TOP: #ccc 1px =
solid; TOP: 30px; BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 7px; =
box-shadow: 0px 3px 2px rgba(0, 0, 0, 0.15)
}
.csdn-toolbar .icon .curr-icon-wrap {
	BORDER-BOTTOM: #fff 1px solid; POSITION: absolute; WIDTH: 41px; HEIGHT: =
3px; TOP: -4px
}
.csdn-toolbar .on {
	BORDER-BOTTOM-COLOR: #ccc; BORDER-RIGHT-WIDTH: 1px; BACKGROUND-COLOR: =
#fff; BORDER-TOP-COLOR: #ccc; BORDER-TOP-WIDTH: 0px; =
BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-COLOR: #ccc; BORDER-LEFT-COLOR: =
#ccc; BORDER-LEFT-WIDTH: 1px
}
.csdn-toolbar .on .wrap {
	DISPLAY: block
}
.csdn-toolbar .container {
	MARGIN: 0px auto; WIDTH: 960px
}
.csdn-toolbar .container:before {
	DISPLAY: table; CONTENT: " "
}
.csdn-toolbar .container:after {
	DISPLAY: table; CONTENT: " "
}
.csdn-toolbar .btn {
	BACKGROUND-IMAGE: none; BOX-SIZING: border-box; BORDER-BOTTOM: =
transparent 1px solid; TEXT-ALIGN: center; BORDER-LEFT: transparent 1px =
solid; PADDING-BOTTOM: 0px; LINE-HEIGHT: 28px; PADDING-LEFT: 0px; WIDTH: =
80px; PADDING-RIGHT: 0px; DISPLAY: inline-block; WHITE-SPACE: nowrap; =
MARGIN-BOTTOM: 0px; HEIGHT: 28px; COLOR: #fff; FONT-SIZE: 14px; =
VERTICAL-ALIGN: middle; BORDER-TOP: transparent 1px solid; CURSOR: =
pointer; FONT-WEIGHT: normal; BORDER-RIGHT: transparent 1px solid; =
PADDING-TOP: 0px; -webkit-box-sizing: border-box; -moz-box-sizing: =
border-box; border-radius: 0; -webkit-user-select: none; =
-moz-user-select: none; -ms-user-select: none; -o-user-select: none; =
user-select: none
}
.csdn-toolbar .btn:focus {
	OUTLINE-STYLE: dotted; OUTLINE-COLOR: #333; OUTLINE-WIDTH: thin; =
outline-offset: -2px
}
.csdn-toolbar .btn:hover {
	COLOR: #333; TEXT-DECORATION: none
}
.csdn-toolbar .btn:focus {
	COLOR: #333; TEXT-DECORATION: none
}
.csdn-toolbar .btn:active {
	BACKGROUND-IMAGE: none; OUTLINE-STYLE: none; OUTLINE-COLOR: invert; =
OUTLINE-WIDTH: 0px; box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125); =
-webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125)
}
.csdn-toolbar .disabled.btn {
	CURSOR: not-allowed; box-shadow: none; -webkit-box-shadow: none; =
pointer-events: none; opacity: 0.65
}
.csdn-toolbar [disabled].btn {
	CURSOR: not-allowed; box-shadow: none; -webkit-box-shadow: none; =
pointer-events: none; opacity: 0.65
}
.csdn-toolbar FIELDSET[disabled] .btn {
	CURSOR: not-allowed; box-shadow: none; -webkit-box-shadow: none; =
pointer-events: none; opacity: 0.65
}
.csdn-toolbar .btn:hover {
	COLOR: #fff
}
.csdn-toolbar .btn:focus {
	COLOR: #fff
}
.csdn-toolbar .btn-default:hover {
	BORDER-BOTTOM-COLOR: #adadad; BACKGROUND-COLOR: #ebebeb; =
BORDER-TOP-COLOR: #adadad; COLOR: #eee; BORDER-RIGHT-COLOR: #adadad; =
BORDER-LEFT-COLOR: #adadad
}
.csdn-toolbar .btn-default:focus {
	BORDER-BOTTOM-COLOR: #adadad; BACKGROUND-COLOR: #ebebeb; =
BORDER-TOP-COLOR: #adadad; COLOR: #eee; BORDER-RIGHT-COLOR: #adadad; =
BORDER-LEFT-COLOR: #adadad
}
.csdn-toolbar .btn-default:active {
	BORDER-BOTTOM-COLOR: #adadad; BACKGROUND-COLOR: #ebebeb; =
BORDER-TOP-COLOR: #adadad; COLOR: #eee; BORDER-RIGHT-COLOR: #adadad; =
BORDER-LEFT-COLOR: #adadad
}
.csdn-toolbar .active.btn-default {
	BORDER-BOTTOM-COLOR: #adadad; BACKGROUND-COLOR: #ebebeb; =
BORDER-TOP-COLOR: #adadad; COLOR: #eee; BORDER-RIGHT-COLOR: #adadad; =
BORDER-LEFT-COLOR: #adadad
}
.csdn-toolbar .open .btn-default.dropdown-toggle {
	BORDER-BOTTOM-COLOR: #adadad; BACKGROUND-COLOR: #ebebeb; =
BORDER-TOP-COLOR: #adadad; COLOR: #eee; BORDER-RIGHT-COLOR: #adadad; =
BORDER-LEFT-COLOR: #adadad
}
.csdn-toolbar .btn-default:hover {
	BACKGROUND-COLOR: #666
}
.csdn-toolbar .btn-default:focus {
	BACKGROUND-COLOR: #666
}
.csdn-toolbar .btn-default {
	BACKGROUND-COLOR: #999
}
.csdn-toolbar .btn-primary {
	BACKGROUND-COLOR: #dc3c00
}
.csdn-toolbar .btn-primary:hover {
	BACKGROUND-COLOR: #b43200
}
.csdn-toolbar .btn-primary:focus {
	BACKGROUND-COLOR: #b43200
}
.csdn-toolbar .loginlink {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 10px; =
PADDING-LEFT: 13px; PADDING-RIGHT: 13px; DISPLAY: none; BACKGROUND: none =
transparent scroll repeat 0% 0%; HEIGHT: 20px; BORDER-TOP: 0px; =
BORDER-RIGHT: 0px; PADDING-TOP: 10px
}
.csdn-toolbar .logo {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; WIDTH: auto; PADDING-RIGHT: =
0px; HEIGHT: 40px; FONT-SIZE: 12px; PADDING-TOP: 0px
}
.csdn-toolbar .logo .icon {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 0px; PADDING-LEFT: 0px; =
WIDTH: 40px; PADDING-RIGHT: 0px; DISPLAY: block; BACKGROUND-POSITION: =
0px 0px; FLOAT: left; HEIGHT: 40px; PADDING-TOP: 0px
}
.csdn-toolbar .logo .img {
	BACKGROUND-IMAGE: url(../images/f_name.png); WIDTH: 120px; FLOAT: left; =
HEIGHT: 40px; MARGIN-LEFT: 10px
}
.csdn-toolbar .none {
	BACKGROUND-POSITION: 0px 45px
}
.csdn-toolbar .blog-icon {
	BACKGROUND-POSITION: 0px -52px
}
.csdn-toolbar .down-icon {
	BACKGROUND-POSITION: 0px -102px
}
.csdn-toolbar .bbs-icon {
	BACKGROUND-POSITION: 0px -152px
}
.csdn-toolbar .space-icon {
	BACKGROUND-POSITION: 0px -202px
}
.csdn-toolbar .code-icon {
	BACKGROUND-POSITION: 0px -252px
}
.csdn-toolbar .share-icon {
	BACKGROUND-POSITION: 0px -305px
}
.csdn-toolbar .tag-icon {
	BACKGROUND-POSITION: 0px -354px
}
.csdn-toolbar .dashboard-icon {
	BACKGROUND-POSITION: 0px -403px
}
.csdn-toolbar .news-icon {
	BACKGROUND-POSITION: 0px 16px
}
.csdn-toolbar .tag-icon {
	BACKGROUND-POSITION: 0px -354px
}
.csdn-toolbar .notify-icon {
	BACKGROUND-POSITION: 0px -456px
}
.csdn-toolbar .ask-icon {
	BACKGROUND-POSITION: 0px -503px
}
.csdn-toolbar .search .icon {
	BACKGROUND-POSITION: 0px -130px
}
.csdn-toolbar .search .wrap {
	PADDING-BOTTOM: 10px; PADDING-LEFT: 10px; WIDTH: 400px; PADDING-RIGHT: =
10px; PADDING-TOP: 10px
}
.csdn-toolbar .search .wrap .border {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; BORDER-TOP: =
#ccc 1px solid; BORDER-RIGHT: #ccc 1px solid
}
.csdn-toolbar .search .wrap INPUT {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: =
22px; PADDING-LEFT: 5px; WIDTH: 356px; PADDING-RIGHT: 5px; HEIGHT: 26px; =
BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar .search .wrap INPUT:focus {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; OUTLINE-STYLE: =
none; OUTLINE-COLOR: invert; OUTLINE-WIDTH: medium; BORDER-TOP: medium =
none; BORDER-RIGHT: medium none
}
.csdn-toolbar .search .wrap .btn {
	HEIGHT: 26px
}
.csdn-toolbar .search .wrap .icon-enter-sm {
	POSITION: absolute; MARGIN-TOP: 4px; WIDTH: 20px; HEIGHT: 18px; RIGHT: =
15px
}
.csdn-toolbar .on .on-search-icon {
	BACKGROUND-POSITION: -20px -130px
}
.csdn-toolbar .on .on-search-icon .wrap {
	RIGHT: -221px
}
.csdn-toolbar .on .on-search-icon .curr-icon-wrap {
	RIGHT: 209px
}
.csdn-toolbar .unlogin .search {
	BORDER-RIGHT-WIDTH: 1px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: =
0px; BORDER-LEFT-WIDTH: 1px
}
.csdn-toolbar .unlogin .search .wrap {
	RIGHT: -53px
}
.csdn-toolbar .unlogin .search .curr-icon-wrap {
	RIGHT: 41px
}
.csdn-toolbar .favor .icon {
	BACKGROUND-POSITION: 0px -111px
}
.csdn-toolbar .favor .favor-btns {
	TEXT-ALIGN: right; PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.csdn-toolbar .favor .favor-btns .btn {
	MARGIN-LEFT: 4px
}
.csdn-toolbar .favor .wrap {
	PADDING-BOTTOM: 20px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; =
PADDING-TOP: 20px
}
.csdn-toolbar .favor .checkbox LABEL {
	DISPLAY: block
}
.csdn-toolbar .favor .share {
	POSITION: static; MARGIN: 2px 5px 0px 0px; HEIGHT: 14px; =
VERTICAL-ALIGN: middle
}
.csdn-toolbar .on .on-favor-icon {
	BACKGROUND-POSITION: -20px -111px
}
.csdn-toolbar .on .on-favor-icon .wrap {
	WIDTH: 400px; HEIGHT: 230px; RIGHT: -179px
}
.csdn-toolbar .on .on-favor-icon .curr-icon-wrap {
	RIGHT: 167px
}
.csdn-toolbar .on .on-favor-icon .last {
	MARGIN-RIGHT: 0px
}
.csdn-toolbar .on .on-favor-icon .favor-form .alert {
	DISPLAY: none
}
.csdn-toolbar .on .on-favor-icon .favor-form .error .alert {
	MARGIN: 5px 0px 0px 81px; WIDTH: 300px; DISPLAY: block
}
.csdn-toolbar .on .on-favor-icon .favor-failed {
	TEXT-ALIGN: center; MARGIN-TOP: 60px
}
.csdn-toolbar .on .on-favor-icon .favor-success {
	TEXT-ALIGN: center; MARGIN-TOP: 60px
}
.csdn-toolbar .on .on-favor-icon .favor-failed .msg {
	LINE-HEIGHT: 40px; FONT-SIZE: 18px; VERTICAL-ALIGN: top
}
.csdn-toolbar .on .on-favor-icon .favor-success .msg {
	LINE-HEIGHT: 40px; FONT-SIZE: 18px; VERTICAL-ALIGN: top
}
.csdn-toolbar .on .on-favor-icon .favor-failed .btns {
	TEXT-ALIGN: center; MARGIN-TOP: 10px
}
.csdn-toolbar .on .on-favor-icon .favor-success .btns {
	TEXT-ALIGN: center; MARGIN-TOP: 10px
}
.csdn-toolbar .on .on-favor-icon .favor-failed .btns A {
	MARGIN-LEFT: 10px
}
.csdn-toolbar .on .on-favor-icon .favor-success .btns A {
	MARGIN-LEFT: 10px
}
.csdn-toolbar .notify .on-notify-icon {
	DISPLAY: block !important
}
.csdn-toolbar .notify .icon {
	BACKGROUND-POSITION: 0px -90px
}
.csdn-toolbar .notify .icon-hasnotes-sm {
	Z-INDEX: 1002; POSITION: absolute; WIDTH: 10px; BACKGROUND-POSITION: =
-23px -196px; HEIGHT: 10px; TOP: 9px; LEFT: 23px
}
.csdn-toolbar .notify .number {
	Z-INDEX: 1002; POSITION: absolute; TEXT-ALIGN: center; LINE-HEIGHT: =
14px; WIDTH: 12px; BACKGROUND: #dc3c00 0px 0px; HEIGHT: 13px; COLOR: =
#fff; FONT-SIZE: 12px; TOP: 9px; LEFT: 24px
}
.csdn-toolbar #header_notice_num {
	DISPLAY: none; BACKGROUND: none transparent scroll repeat 0% 0%
}
.csdn-toolbar .csdn_note {
	DISPLAY: block !important
}
.csdn-toolbar .csdn_note .close1 {
	DISPLAY: none
}
.csdn-toolbar .csdn_note .go_all {
	BACKGROUND: none transparent scroll repeat 0% 0%; FLOAT: right
}
.csdn-toolbar .csdn_note .read_all {
	BACKGROUND: none transparent scroll repeat 0% 0%; FLOAT: right
}
.csdn-toolbar .csdn_note .go_back {
	LINE-HEIGHT: 39px
}
.csdn-toolbar .csdn_note .detail_con {
	MIN-HEIGHT: 312px !important
}
.csdn-toolbar .csdn_note .notifications .count_down {
	COLOR: #ccc
}
.csdn-toolbar .csdn_note .notifications .list DT {
	LINE-HEIGHT: 27px
}
.csdn-toolbar .csdn_note .notifications .menu_title A {
	MARGIN-RIGHT: 5px
}
.csdn-toolbar .on .on-notify-icon {
	BACKGROUND-POSITION: -20px -90px
}
.csdn-toolbar .on .on-notify-icon .wrap {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; WIDTH: 450px !important; =
PADDING-RIGHT: 0px; RIGHT: -137px !important; PADDING-TOP: 0px; LEFT: =
auto !important
}
.csdn-toolbar .on .on-notify-icon .curr-icon-wrap {
	RIGHT: 125px
}
.csdn-toolbar .on .on-notify-icon .csdn_note .box {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; TOP: 0px; =
BORDER-RIGHT: 0px; LEFT: 0px; box-shadow: none
}
.csdn-toolbar .on .on-notify-icon .last {
	MARGIN-RIGHT: 0px
}
.csdn-toolbar .ugc .icon {
	BACKGROUND-POSITION: 0px -70px
}
.csdn-toolbar .ugc .p-news .icon {
	BACKGROUND-POSITION: -42px -52px
}
.csdn-toolbar .ugc .p-news:hover .icon {
	BACKGROUND-POSITION: -62px -52px
}
.csdn-toolbar .ugc .p-down .icon {
	BACKGROUND-POSITION: -42px -72px
}
.csdn-toolbar .ugc .p-down:hover .icon {
	BACKGROUND-POSITION: -62px -72px
}
.csdn-toolbar .ugc .p-doc .icon {
	BACKGROUND-POSITION: -42px -72px
}
.csdn-toolbar .ugc .p-doc:hover .icon {
	BACKGROUND-POSITION: -62px -72px
}
.csdn-toolbar .ugc .p-ask .icon {
	BACKGROUND-POSITION: -42px -131px
}
.csdn-toolbar .ugc .p-ask:hover .icon {
	BACKGROUND-POSITION: -62px -131px
}
.csdn-toolbar .ugc .c-obj .icon {
	BACKGROUND-POSITION: -42px -92px
}
.csdn-toolbar .ugc .c-obj:hover .icon {
	BACKGROUND-POSITION: -62px -92px
}
.csdn-toolbar .ugc .c-code .icon {
	BACKGROUND-POSITION: -42px -191px
}
.csdn-toolbar .ugc .c-code:hover .icon {
	BACKGROUND-POSITION: -62px -191px
}
.csdn-toolbar .ugc .p-src .icon {
	BACKGROUND-POSITION: -42px -170px
}
.csdn-toolbar .ugc .p-src:hover .icon {
	BACKGROUND-POSITION: -62px -170px
}
.csdn-toolbar .ugc .p-blog .icon {
	BACKGROUND-POSITION: -42px -111px
}
.csdn-toolbar .ugc .p-blog:hover .icon {
	BACKGROUND-POSITION: -62px -111px
}
.csdn-toolbar .ugc .p-bbs .icon {
	BACKGROUND-POSITION: -42px -132px
}
.csdn-toolbar .ugc .p-bbs:hover .icon {
	BACKGROUND-POSITION: -62px -132px
}
.csdn-toolbar .ugc .c-grop .icon {
	BACKGROUND-POSITION: -42px -152px
}
.csdn-toolbar .ugc .c-grop:hover .icon {
	BACKGROUND-POSITION: -62px -152px
}
.csdn-toolbar .on .on-ugc-icon {
	BACKGROUND-POSITION: -20px -70px
}
.csdn-toolbar .on .on-ugc-icon .wrap {
	PADDING-BOTTOM: 12px; PADDING-LEFT: 0px; WIDTH: 161px; PADDING-RIGHT: =
0px; RIGHT: -95px; PADDING-TOP: 12px
}
.csdn-toolbar .on .on-ugc-icon DL {
	MARGIN: 0px
}
.csdn-toolbar .on .on-ugc-icon DL DT {
	WIDTH: 100%; FONT-WEIGHT: normal
}
.csdn-toolbar .on .on-ugc-icon DL DT EM.icon {
	MARGIN: 0px 8px 0px 0px; WIDTH: 16px; FLOAT: left; HEIGHT: 16px
}
.csdn-toolbar .on .on-ugc-icon DL DT SPAN {
	LINE-HEIGHT: 12px; MARGIN-TOP: 3px; DISPLAY: block; FLOAT: left; =
HEIGHT: 12px
}
.csdn-toolbar .on .on-ugc-icon DL DT A {
	TEXT-ALIGN: left; PADDING-BOTTOM: 10px; PADDING-LEFT: 13px; =
PADDING-RIGHT: 13px; DISPLAY: block; PADDING-TOP: 10px
}
.csdn-toolbar .on .on-ugc-icon DL DT A:hover {
	BACKGROUND: #eee; COLOR: #333
}
.csdn-toolbar .on .on-ugc-icon .curr-icon-wrap {
	RIGHT: 83px
}
.csdn-toolbar .on .on-ugc-icon .last {
	MARGIN-RIGHT: 0px
}
.csdn-toolbar .profile .icon {
	BACKGROUND-POSITION: 0px 1px
}
.csdn-toolbar .profile .curr-icon-img {
	MARGIN: 0px; WIDTH: 20px; DISPLAY: block; HEIGHT: 20px
}
.csdn-toolbar .on .settings {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
BACKGROUND-POSITION: 0px -150px; MARGIN-RIGHT: 2px; PADDING-TOP: 0px
}
.csdn-toolbar .on .quit {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
BACKGROUND-POSITION: 0px -170px; PADDING-TOP: 0px
}
.csdn-toolbar .on .on-profile-icon {
	BACKGROUND-POSITION: -20px 0px; FONT-SIZE: 12px
}
.csdn-toolbar .on .on-profile-icon .wrap {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; WIDTH: 251px; PADDING-RIGHT: =
0px; RIGHT: -53px; PADDING-TOP: 0px
}
.csdn-toolbar .on .on-profile-icon .curr-icon-wrap {
	RIGHT: 41px
}
.csdn-toolbar .on .on-profile-icon .bd {
	PADDING-BOTTOM: 20px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; =
PADDING-TOP: 20px
}
.csdn-toolbar .on .on-profile-icon .bd .write-icon {
	PADDING-BOTTOM: 3px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
BACKGROUND-POSITION: -78px -50px; PADDING-TOP: 3px
}
.csdn-toolbar .on .on-profile-icon .bd .img {
	WIDTH: 100px; MARGIN-RIGHT: 7px
}
.csdn-toolbar .on .on-profile-icon .bd .info {
	TEXT-ALIGN: left; WIDTH: 103px; WORD-WRAP: break-word; FLOAT: right
}
.csdn-toolbar .on .on-profile-icon .bd .info .nickname {
	FONT-SIZE: 14px
}
.csdn-toolbar .on .on-profile-icon .bd .info A {
	PADDING-BOTTOM: 5px; DISPLAY: block
}
.csdn-toolbar .on .on-profile-icon .bd .info .fill-dec {
	COLOR: #666
}
.csdn-toolbar .on .on-profile-icon .ft {
	POSITION: relative; PADDING-BOTTOM: 0px; LINE-HEIGHT: 40px; =
BACKGROUND-COLOR: #f5f5f5; PADDING-LEFT: 20px; PADDING-RIGHT: 12px; =
PADDING-TOP: 0px
}
.csdn-toolbar .on .on-profile-icon .ft .icon-cog {
	MARGIN-TOP: -1px; WIDTH: 16px; DISPLAY: inline-block; BACKGROUND: =
url(../images/f_icon.png) no-repeat -2px -152px; HEIGHT: 16px; =
VERTICAL-ALIGN: middle; MARGIN-RIGHT: 2px
}
.csdn-toolbar .on .on-profile-icon .ft .icon-signout {
	MARGIN-TOP: -1px; WIDTH: 16px; DISPLAY: inline-block; BACKGROUND: =
url(../images/f_icon.png) no-repeat -2px -152px; HEIGHT: 16px; =
VERTICAL-ALIGN: middle; MARGIN-RIGHT: 2px
}
.csdn-toolbar .on .on-profile-icon .ft .icon-signout {
	BACKGROUND-POSITION: -2px -172px
}
.csdn-toolbar .on .on-profile-icon .ft A {
	LINE-HEIGHT: 40px
}
.csdn-toolbar .on .on-profile-icon .ft .pull-right {
	MARGIN-TOP: 13px
}
.csdn-toolbar .on .on-profile-icon .ft .pull-right .out {
	DISPLAY: none
}
.csdn-toolbar .on .on-profile-icon .ft .pull-right:hover .out {
	BORDER-BOTTOM: #999 1px solid; POSITION: absolute; TEXT-ALIGN: center; =
BORDER-LEFT: #999 1px solid; PADDING-BOTTOM: 2px; LINE-HEIGHT: 16px; =
PADDING-LEFT: 2px; WIDTH: 32px; PADDING-RIGHT: 2px; DISPLAY: block; =
BACKGROUND: #f5f5f5; HEIGHT: 16px; COLOR: #666; BORDER-TOP: #999 1px =
solid; TOP: -12px; RIGHT: -10px; BORDER-RIGHT: #999 1px solid; =
PADDING-TOP: 2px; border-radius: 5px
}
.csdn-toolbar .on .on-profile-icon .ft A:hover .settings {
	BACKGROUND-POSITION: -20px -150px
}
.csdn-toolbar .on .on-profile-icon .ft A:hover .quit {
	BACKGROUND-POSITION: -20px -170px
}
.csdn-toolbar .apps {
	BORDER-RIGHT-WIDTH: 1px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: =
0px; BORDER-RIGHT-COLOR: #eee; BORDER-LEFT-WIDTH: 1px
}
.csdn-toolbar .apps .icon {
	BACKGROUND-POSITION: 0px -51px
}
.csdn-toolbar .on.apps {
	BORDER-RIGHT-WIDTH: 1px; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: =
0px; BORDER-RIGHT-COLOR: #ccc; BORDER-LEFT-WIDTH: 1px
}
.csdn-toolbar .hasnew {
	BACKGROUND-IMAGE: url(../images/f_icon.png); Z-INDEX: 1002; POSITION: =
absolute; WIDTH: 10px; BACKGROUND-POSITION: -23px -196px; HEIGHT: 10px; =
TOP: 9px; LEFT: 23px
}
.csdn-toolbar .on .on-apps-icon {
	BACKGROUND-POSITION: -20px -51px
}
.csdn-toolbar .on .on-apps-icon .wrap {
	PADDING-BOTTOM: 20px; PADDING-LEFT: 20px; WIDTH: 310px; PADDING-RIGHT: =
20px; RIGHT: -11px; PADDING-TOP: 0px
}
.csdn-toolbar .on .on-apps-icon .curr-icon-wrap {
	RIGHT: 0px
}
.csdn-toolbar .on .on-apps-icon .detail {
	WIDTH: 90px; FLOAT: left; FONT-SIZE: 14px; MARGIN-RIGHT: 20px
}
.csdn-toolbar .on .on-apps-icon .detail DT {
	BORDER-BOTTOM: #666 1px solid; LINE-HEIGHT: 31px; MARGIN-TOP: 15px; =
COLOR: #333; FONT-WEIGHT: bold
}
.csdn-toolbar .on .on-apps-icon .detail DD {
	BORDER-BOTTOM: #ddd 1px solid; LINE-HEIGHT: 31px
}
.csdn-toolbar .on .on-apps-icon .detail DD A {
	COLOR: #333
}
.csdn-toolbar .on .on-apps-icon .last.detail {
	MARGIN-RIGHT: 0px
}
.csdn-toolbar .unlogin .loginlink {
	LINE-HEIGHT: 24px; WIDTH: 60px; DISPLAY: block; HEIGHT: 20px; =
FONT-SIZE: 12px; BORDER-RIGHT: medium none
}
.csdn-toolbar .unlogin .favor {
	DISPLAY: none
}
.csdn-toolbar .unlogin .notify {
	DISPLAY: none
}
.csdn-toolbar .unlogin .ugc {
	DISPLAY: none
}
.csdn-toolbar .unlogin .profile {
	DISPLAY: none
}
.csdn_notice_tip {
	DISPLAY: none !important
}
.csdn-toolbar-skin-black {
	BORDER-BOTTOM: medium none; BACKGROUND: #48525e; HEIGHT: 40px
}
.csdn-toolbar-skin-black LI {
	BORDER-LEFT: #74797e 1px solid; HEIGHT: 40px; BORDER-RIGHT: #48525e 1px =
solid
}
.csdn-toolbar-skin-black LI.on {
	WIDTH: 40px; HEIGHT: 40px; BORDER-RIGHT: #fff 1px solid
}
.csdn-toolbar-skin-black .icon .wrap {
	TOP: 30px
}
.csdn-toolbar-skin-black .icon .curr-icon-wrap {
	WIDTH: 41px
}
.csdn-toolbar-skin-black .apps {
	BORDER-RIGHT-COLOR: #74797e
}
.csdn-toolbar-skin-black .on .on-apps-icon .wrap {
	RIGHT: -12px
}
.csdn-toolbar-skin-black .loginlink {
	BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: #ddd
}
.csdn-toolbar-skin-black .loginlink A {
	COLOR: #ddd
}
.csdn-toolbar-skin-black .loginlink A:hover {
	COLOR: #fefefe
}
.csdn-toolbar-skin-black .blog-icon {
	BACKGROUND-POSITION: -162px -52px
}
.csdn-toolbar-skin-black .down-icon {
	BACKGROUND-POSITION: -162px -102px
}
.csdn-toolbar-skin-black .bbs-icon {
	BACKGROUND-POSITION: -162px -152px
}
.csdn-toolbar-skin-black .space-icon {
	BACKGROUND-POSITION: -162px -202px
}
.csdn-toolbar-skin-black .code-icon {
	BACKGROUND-POSITION: -162px -252px
}
.csdn-toolbar-skin-black .share-icon {
	BACKGROUND-POSITION: -162px -305px
}
.csdn-toolbar-skin-black .tag-icon {
	BACKGROUND-POSITION: -162px -354px
}
.csdn-toolbar-skin-black .dashboard-icon {
	BACKGROUND-POSITION: -162px -403px
}
.csdn-toolbar-skin-black .news-icon {
	BACKGROUND-POSITION: -162px -3px
}
.csdn-toolbar-skin-black .tag-icon {
	BACKGROUND-POSITION: -162px -354px
}
.csdn-toolbar-skin-black .notify-icon {
	BACKGROUND-POSITION: -162px -456px
}
.csdn-toolbar-skin-black .ask-icon {
	BACKGROUND-POSITION: -162px -503px
}
.navbar-fixed-top {
	Z-INDEX: 1030; POSITION: fixed; RIGHT: 0px; LEFT: 0px
}
.navbar-fixed-bottom {
	Z-INDEX: 1030; POSITION: fixed; RIGHT: 0px; LEFT: 0px
}
.navbar-fixed-top {
	TOP: 0px
}
.csdn-toolbar .icon-signout {
	LINE-HEIGHT: 40px
}
.csdn-toolbar .on .on-profile-icon .ft .icon-cog:before {
	DISPLAY: none
}
.csdn-toolbar .on .on-profile-icon .ft .icon-signout:before {
	DISPLAY: none
}

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://blog.csdn.net/css/common.css

BODY {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
FORM {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H1 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H2 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H3 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H4 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.side LI {
	LIST-STYLE-TYPE: none; LIST-STYLE-IMAGE: none
}
.side UL {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
IMG {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none
}
PRE {
	WORD-WRAP: break-word; WHITE-SPACE: pre-wrap
}
.share_buttons {
	TEXT-ALIGN: right; MARGIN: 5px 0px; WIDTH: 170px; FONT: 12px/24px =
Arial, Helvetica, sans-serif; FLOAT: right
}
.share_buttons SPAN {
	LINE-HEIGHT: 30px; DISPLAY: inline-block; COLOR: green; VERTICAL-ALIGN: =
middle; FONT-WEIGHT: bold
}
.share_buttons A {
	WIDTH: 25px; DISPLAY: inline-block; BACKGROUND-POSITION: 0px 5px; =
HEIGHT: 30px; VERTICAL-ALIGN: middle; CURSOR: pointer
}
.share_douban {
	BACKGROUND-IMAGE: url(../images/ico_douban.gif)
}
.share_renren {
	BACKGROUND-IMAGE: url(../images/ico_renren.gif)
}
.share_sina {
	BACKGROUND: url(../images/ico_sina.gif) no-repeat center center
}
.share_qq {
	BACKGROUND: url(../images/ico_qq.gif) no-repeat center center
}
.article_description {
	TEXT-INDENT: 2em
}
.list_opended {
	BACKGROUND-IMAGE: url(../images/dir_arr.gif); BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: 0px 7px
}
.list_opended:hover {
	BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: 0px -15px
}
.list_closed {
	BACKGROUND-IMAGE: url(../images/dir_arr.gif); BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: 0px -45px
}
.list_closed:hover {
	BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: 0px -69px
}
.comment_item {
	MARGIN: 2px 10px; FONT: 12px/26px Arial, Helvetica, sans-serif
}
.comment_item FIELDSET {
	BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; FONT: 12px/26px =
Arial, Helvetica, sans-serif; BORDER-TOP: 1px solid; BORDER-RIGHT: 1px =
solid
}
.comment_reply {
	MARGIN-LEFT: 50px
}
.comment_list {
	CLEAR: both
}
.comment_list DL {
	DISPLAY: block; CLEAR: both; OVERFLOW: hidden
}
.comment_item .user {
=09
}
.comment_item_reply {
	MARGIN-LEFT: 50px
}
.comment_userface {
	MARGIN: 4px; FLOAT: left
}
.comment_userface IMG {
	WIDTH: 40px; HEIGHT: 40px
}
.comment_body {
	PADDING-BOTTOM: 5px; LINE-HEIGHT: 20px; MIN-HEIGHT: 35px; PADDING-LEFT: =
5px; PADDING-RIGHT: 5px; MARGIN-LEFT: 50px; PADDING-TOP: 5px
}
.commentform {
=09
}
.commentform UL {
	MARGIN: 0px 20px 5px; FONT: 12px/24px Arial, Helvetica, sans-serif; =
CLEAR: both
}
.commentform .left {
	WIDTH: 80px; DISPLAY: block; FLOAT: left
}
.commentform .right {
	DISPLAY: block; MARGIN-LEFT: 90px
}
.commentform TEXTAREA {
	BORDER-BOTTOM: #ddd 1px solid; BORDER-LEFT: #ddd 1px solid; =
PADDING-BOTTOM: 5px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; FONT: =
14px/24px Arial, Helvetica, sans-serif; COLOR: #555; BORDER-TOP: #ddd =
1px solid; BORDER-RIGHT: #ddd 1px solid; PADDING-TOP: 5px
}
.guest_link {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 10px; BACKGROUND-COLOR: #f5f5f5; MARGIN: 10px; =
PADDING-LEFT: 10px; PADDING-RIGHT: 10px; FONT-SIZE: 12px; BORDER-TOP: =
#ccc 1px solid; BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 10px
}
#lang_list {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
BACKGROUND-COLOR: #ffffff; FONT-SIZE: 12px; BORDER-TOP: #ccc 1px solid; =
BORDER-RIGHT: #ccc 1px solid
}
#lang_list A {
	TEXT-ALIGN: center; PADDING-BOTTOM: 0px; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; DISPLAY: inline-block; FLOAT: left; CURSOR: pointer; =
BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 0px
}
#lang_list A:hover {
	BACKGROUND-COLOR: #666; COLOR: #fff
}
A.cmt_btn {
	PADDING-BOTTOM: 1px; TEXT-INDENT: -2000px; PADDING-LEFT: 1px; WIDTH: =
16px; PADDING-RIGHT: 1px; DISPLAY: inline-block; BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: left top; MARGIN-BOTTOM: -5px; HEIGHT: =
16px; OVERFLOW: hidden; PADDING-TOP: 1px; _margin-bottom: 4px
}
A.cmt_btn:hover {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: =
#ccc 1px solid; BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 0px
}
A.reply {
	BACKGROUND-IMAGE: url(../images/ico_reply.png)
}
A.quote {
	BACKGROUND-IMAGE: url(../images/ico_quote.png)
}
A.report {
	BACKGROUND-IMAGE: url(../images/ico_report.png)
}
A.delete {
	BACKGROUND-IMAGE: url(../images/ico_del.png)
}
#report_dialog {
	Z-INDEX: 99; POSITION: absolute; TOP: 33%; RIGHT: 33%; LEFT: 30%
}
#panel_report {
	BORDER-BOTTOM: #ddd 1px solid; BORDER-LEFT: #ddd 1px solid; =
PADDING-BOTTOM: 20px; PADDING-LEFT: 8px; WIDTH: 440px; PADDING-RIGHT: =
8px; BACKGROUND: #fff; BORDER-TOP: #ddd 1px solid; BORDER-RIGHT: #ddd =
1px solid; PADDING-TOP: 8px; border-radius: 5px; -moz-border-radius: =
5px; -webkit-border-radius: 5px
}
#panel_report .pop_table {
	LINE-HEIGHT: 20px; MARGIN: 10px 0px 0px 12px
}
#panel_report TH {
	PADDING-BOTTOM: 4px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
VERTICAL-ALIGN: top; PADDING-TOP: 4px
}
#panel_report TD {
	PADDING-BOTTOM: 4px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
VERTICAL-ALIGN: top; PADDING-TOP: 4px
}
#panel_report TH {
	TEXT-ALIGN: right; FONT-WEIGHT: normal
}
#panel_report H3 {
	LINE-HEIGHT: 60px
}
#report_other_content {
	BORDER-BOTTOM: #999 1px solid; BORDER-LEFT: #999 1px solid; =
PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; HEIGHT: =
16px; BORDER-TOP: #999 1px solid; BORDER-RIGHT: #999 1px solid; =
PADDING-TOP: 0px
}
#btnSubmitReport {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
#bms_box {
	TEXT-ALIGN: left; PADDING-BOTTOM: 4px; MARGIN-TOP: 4px; PADDING-LEFT: =
0px; PADDING-RIGHT: 4px; DISPLAY: block; BORDER-TOP: #ccc 1px dashed; =
PADDING-TOP: 14px
}
#bms_box IMG {
	MARGIN-LEFT: 6px; CURSOR: pointer
}
.medal_intro {
	Z-INDEX: 100; BORDER-BOTTOM: #dddddd 2px solid; POSITION: absolute; =
TEXT-ALIGN: center; BORDER-LEFT: #dddddd 2px solid; PADDING-BOTTOM: =
20px; BACKGROUND-COLOR: #fff; MIN-HEIGHT: 100px; PADDING-LEFT: 20px; =
WIDTH: 252px; PADDING-RIGHT: 20px; DISPLAY: block; FONT-FAMILY: =
"=CE=A2=C8=ED=D1=C5=BA=DA"; VERTICAL-ALIGN: top; BORDER-TOP: #dddddd 2px =
solid; TOP: 33px; BORDER-RIGHT: #dddddd 2px solid; PADDING-TOP: 20px; =
LEFT: -55px; box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.1); _padding-top: =
26px
}
.medal_intro:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
.medal_intro DL {
	MARGIN: 0px
}
.medal_intro DT {
	FLOAT: left; MARGIN-RIGHT: 18px
}
.medal_intro DD {
	TEXT-ALIGN: left; LINE-HEIGHT: 18px; MARGIN: 0px; WIDTH: 180px; FLOAT: =
left; COLOR: #666666
}
.medal_intro DD STRONG {
	PADDING-BOTTOM: 10px; DISPLAY: block; COLOR: #004279; FONT-SIZE: 18px
}
#sp_column IMG {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; BORDER-TOP: =
#ccc 1px solid; BORDER-RIGHT: #ccc 1px solid
}
#sp_column P {
	PADDING-BOTTOM: 6px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 6px
}
.interact {
	TEXT-ALIGN: center; PADDING-BOTTOM: 15px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.interact .attent {
	WIDTH: 59px; DISPLAY: inline-block; HEIGHT: 20px; OVERFLOW: hidden; =
CURSOR: pointer
}
.interact .attented {
	WIDTH: 59px; DISPLAY: inline-block; HEIGHT: 20px; OVERFLOW: hidden; =
CURSOR: pointer
}
.interact .letter {
	WIDTH: 59px; DISPLAY: inline-block; HEIGHT: 20px; OVERFLOW: hidden; =
CURSOR: pointer
}
.interact .attent {
	BACKGROUND: url(../images/btn_attent.gif) no-repeat 0px 0px
}
.interact .attented {
	BACKGROUND: url(../images/btn_attented.gif) no-repeat 0px 0px
}
.interact .letter {
	MARGIN: 0px 10px 0px 0px; BACKGROUND: url(../images/btn_sendletter.gif) =
no-repeat 0px 0px
}
.panel_body LI SPAN {
	POSITION: relative; PADDING-LEFT: 6px
}
.itemlist LI A {
	WIDTH: 130px; DISPLAY: inline-block; WHITE-SPACE: nowrap; HEIGHT: 15px; =
OVERFLOW: hidden
}
.itemlist LI SPAN {
	DISPLAY: inline-block; FLOAT: right; HEIGHT: 14px; _margin-top: -18px
}
#newcomments .itemlist LI A {
	WIDTH: 98%
}
#newcomments .itemlist LI A.user_name {
	WIDTH: auto; DISPLAY: inline
}
#side #blog_userface A {
	COLOR: #333
}
#d-top {
	Z-INDEX: 10; POSITION: fixed; BOTTOM: 10px; FLOAT: right; RIGHT: 10px
}
#d-top IMG {
	FILTER: alpha(opcity=3D30); WIDTH: 42px; opacity: 0.3; -moz-opacity: =
0.3; -khtml-opacity: 0.3
}
#d-top A:hover IMG {
	FILTER: alpha(opcity=3D100); opacity: 1; -moz-opacity: 1; =
-khtml-opacity: 1
}
.article_next_prev {
	MARGIN-TOP: 30px
}
.tag2box {
	MARGIN: 10px 0px
}
.tag2box A {
	BORDER-BOTTOM: #eee 1px solid; BORDER-LEFT: #eee 1px solid; =
PADDING-BOTTOM: 4px; LINE-HEIGHT: 100%; BACKGROUND-COLOR: #eee; =
PADDING-LEFT: 10px; PADDING-RIGHT: 10px; DISPLAY: inline-block; =
BORDER-TOP: #eee 1px solid; MARGIN-RIGHT: 10px; BORDER-RIGHT: #eee 1px =
solid; PADDING-TOP: 4px; border-radius: 10px
}

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/skin/dark1/css/style.css?v=1.1

@import url( ../../../css/common.css );
BODY {
	FONT-FAMILY: Arial, Console, Verdana, Courier New; BACKGROUND: =
url(../images/body_bg.jpg) center top; FONT-SIZE: 12px
}
P {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
A {
	COLOR: #ca0000; TEXT-DECORATION: none
}
A:hover {
	COLOR: #200; TEXT-DECORATION: none
}
.csdn-toolbar .container {
	MARGIN: 0px auto; WIDTH: 96%; MAX-WIDTH: 1200px
}
#header {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; MARGIN: 0px auto; PADDING-LEFT: =
0px; WIDTH: 980px; PADDING-RIGHT: 0px; HEIGHT: 36px; PADDING-TOP: 35px
}
#blog_title H2 {
	MARGIN: 0px 25px 0px 0px; FONT: bold 32px/32px "Microsoft YaHei"; =
COLOR: #000
}
#blog_title H3 {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: =
15px/30px "Microsoft YaHei"; COLOR: #ffa200; PADDING-TOP: 2px
}
#blog_title A {
	COLOR: #fff
}
#blog_title A:hover {
	COLOR: #def; TEXT-DECORATION: none
}
#navigator {
	TEXT-ALIGN: left; PADDING-BOTTOM: 0px; MARGIN: 0px auto; PADDING-LEFT: =
0px; WIDTH: 96%; PADDING-RIGHT: 0px; DISPLAY: block; MAX-WIDTH: 1200px; =
HEIGHT: 42px; CLEAR: both; PADDING-TOP: 100px
}
.navigator {
	TEXT-ALIGN: right
}
.navigator:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
.navigator UL {
	FLOAT: right
}
.navigator LI {
	MARGIN: 0px 5px; DISPLAY: inline; FLOAT: left
}
.navigator LI A {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 10px; PADDING-RIGHT: 0px; DISPLAY: =
inline-block; FONT: 12px/26px Arial, Helvetica, sans-serif; BACKGROUND: =
url(../../../images/btn_pub_nav.gif) no-repeat left 0px; HEIGHT: 26px; =
COLOR: #666; CURSOR: pointer; TEXT-DECORATION: none; PADDING-TOP: 0px
}
.navigator LI A SPAN {
	PADDING-BOTTOM: 5px; LINE-HEIGHT: 16px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 10px; DISPLAY: inline-block; BACKGROUND: =
url(../../../images/btn_pub_nav.gif) no-repeat right -26px; HEIGHT: =
16px; PADDING-TOP: 5px
}
.navigator LI A SPAN IMG {
	MARGIN: 0px 4px 0px 0px; VERTICAL-ALIGN: middle
}
#body {
	TEXT-ALIGN: left; MARGIN: 10px auto; WIDTH: 96%; DISPLAY: block; =
MAX-WIDTH: 1200px
}
#body:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
.panel_head {
	PADDING-BOTTOM: 0px; TEXT-INDENT: 5px; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; FONT: bold 12px/30px Arial; BACKGROUND: =
url(../images/tit_bg.jpg) repeat-x 50% top; HEIGHT: 30px; COLOR: #333; =
CLEAR: both; PADDING-TOP: 0px
}
.panel {
	BORDER-BOTTOM: #000 1px solid; BORDER-LEFT: #000 1px solid; =
PADDING-BOTTOM: 1px; MARGIN: 0px 0px 10px; PADDING-LEFT: 1px; =
PADDING-RIGHT: 1px; BACKGROUND: #fff; BORDER-TOP: #000 1px solid; =
BORDER-RIGHT: #000 1px solid; PADDING-TOP: 1px
}
.side .panel_body {
	PADDING-BOTTOM: 4px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
PADDING-TOP: 4px
}
.panel_body LI {
	MARGIN: 8px 0px; COLOR: #666
}
.panel_body LI SPAN {
=09
}
.panel_body LI A {
=09
}
#main {
	WIDTH: 100%; FLOAT: right; MARGIN-LEFT: -210px; OVERFLOW: hidden
}
#main .main {
	BORDER-BOTTOM: #000 1px solid; MIN-WIDTH: 700px; BORDER-LEFT: #000 1px =
solid; PADDING-BOTTOM: 1px; PADDING-LEFT: 1px; PADDING-RIGHT: 1px; =
BACKGROUND: #fff; MARGIN-LEFT: 210px; BORDER-TOP: #000 1px solid; =
BORDER-RIGHT: #000 1px solid; PADDING-TOP: 1px; _float: right
}
#notice {
	MARGIN: 5px 10px
}
.notice {
	BORDER-BOTTOM: #f8cc7e 1px dashed; BORDER-LEFT: #f8cc7e 1px dashed; =
PADDING-BOTTOM: 2px; MARGIN: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: =
4px; FONT: 12px/22px Arial; BACKGROUND: =
url(../../../images/ico_notice.png) #fffce7 no-repeat 5px center; =
BORDER-TOP: #f8cc7e 1px dashed; BORDER-RIGHT: #f8cc7e 1px dashed; =
PADDING-TOP: 2px; _background: #fffce7 =
url(../../../images/ico_notice.gif) no-repeat 5px center
}
.notice A {
	COLOR: #ff5a00
}
.list_item {
	DISPLAY: block; BACKGROUND: url(../images/line_1.gif) repeat-x 50% =
bottom; CLEAR: both
}
.list_item:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
.list {
	MARGIN: 20px 20px 0px
}
.article_title {
	MARGIN: 5px 0px; DISPLAY: block; FONT: 20px/30px "Microsoft YaHei"; =
COLOR: #000
}
.article_title:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
.article_title A {
	COLOR: #000
}
.article_title A:hover {
	COLOR: #666
}
.article_title .ico {
	MARGIN: 0px 2px 0px 0px; WIDTH: 19px; DISPLAY: inline-block; HEIGHT: =
19px
}
.article_title .ico_type_Original {
	BACKGROUND: url(../../../images/ico_Original.gif) no-repeat 0px 0px; =
VERTICAL-ALIGN: middle
}
.article_title .ico_type_Repost {
	BACKGROUND: url(../../../images/ico_Repost.gif) no-repeat 0px 0px; =
VERTICAL-ALIGN: middle
}
.article_title .ico_type_Translated {
	BACKGROUND: url(../../../images/ico_Translated.gif) no-repeat 0px 0px; =
VERTICAL-ALIGN: middle
}
.article_title H1 {
	DISPLAY: inline; FONT: 20px/30px "Microsoft YaHei"; VERTICAL-ALIGN: =
middle
}
.article_description {
	FONT: 14px/24px Arial; COLOR: #666
}
.article_manage {
	TEXT-ALIGN: right; PADDING-BOTTOM: 5px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; FONT: 12px/24px Arial; COLOR: #999; PADDING-TOP: 5px
}
.article_manage SPAN {
	MARGIN: 0px 5px
}
.article_manage .link_postdate {
	MARGIN: 0px 5px 0px 0px
}
.article_manage .link_view {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 14px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../../../images/ico_view.png) no-repeat left center; =
PADDING-TOP: 0px; _background: url(../../../images/ico_view.gif) =
no-repeat left center
}
.article_manage .link_comments {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 14px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../../../images/ico_comm.png) no-repeat left center; =
PADDING-TOP: 0px; _background: url(../../../images/ico_comm.gif) =
no-repeat left center
}
.article_manage .link_categories {
	FLOAT: left
}
.list_view {
	PADDING-BOTTOM: 5px; MARGIN: 0px 20px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; PADDING-TOP: 5px
}
.list_view .article_title {
	MARGIN: 0px; TEXT-OVERFLOW: ellipsis; DISPLAY: inline; FONT: 14px/30px =
Arial; WHITE-SPACE: nowrap; FLOAT: left; HEIGHT: 30px; OVERFLOW: hidden
}
.list_view .article_title:after {
	CONTENT: "..."
}
.list_view .article_title H3 {
	FONT: 12px/30px Arial
}
.list_view .article_title H1 {
	FONT: 12px/30px Arial
}
.list_view .article_manage {
	TEXT-ALIGN: right !important; PADDING-BOTTOM: 0px !important; =
LINE-HEIGHT: 30px !important; PADDING-LEFT: 0px !important; =
PADDING-RIGHT: 0px !important; DISPLAY: inline; WHITE-SPACE: nowrap; =
FLOAT: right; PADDING-TOP: 0px !important
}
.list_view .article_description {
	DISPLAY: none !important
}
.list_view .article_manage SPAN {
	MARGIN: 0px
}
.details {
	MARGIN: 20px
}
.details .article_content {
	MARGIN: 20px 0px 0px; FONT: 14px/26px Arial
}
.article_next_prev {
	PADDING-BOTTOM: 0px; MARGIN: 0px 0px 5px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; DISPLAY: block; FONT: 14px/24px "Microsoft YaHei", =
Arial, Helvetica, sans-serif; FLOAT: left; COLOR: #666; CLEAR: both; =
PADDING-TOP: 10px
}
.article_next_prev LI {
	PADDING-BOTTOM: 3px; LIST-STYLE-TYPE: none; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; CLEAR: both; OVERFLOW: hidden; PADDING-TOP: 0px
}
.article_next_prev:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
.article_next_prev LI SPAN {
	PADDING-BOTTOM: 0px; BACKGROUND-COLOR: #999999; PADDING-LEFT: 27px; =
WIDTH: 52px; PADDING-RIGHT: 0px; DISPLAY: block; FLOAT: left; HEIGHT: =
26px; COLOR: #fff; FONT-SIZE: 14px; MARGIN-RIGHT: 7px; PADDING-TOP: 0px
}
.article_next_prev LI:hover SPAN {
	BACKGROUND-COLOR: #c00
}
.article_next_prev LI.prev_article SPAN {
	BACKGROUND-IMAGE: url(../images/blog-page-arr.png); BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: 9px 8px
}
.article_next_prev LI.next_article SPAN {
	BACKGROUND-IMAGE: url(../images/blog-page-arr.png); BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: 9px -22px
}
.article_next_prev LI A {
	DISPLAY: block; FLOAT: left; COLOR: #333333; FONT-SIZE: 14px
}
.article_next_prev LI A:link {
	COLOR: #333
}
.article_next_prev LI A:visited {
	COLOR: #333
}
.article_next_prev LI A:hover {
	COLOR: #333
}
.article_next_prev LI:hover A {
	COLOR: #c00
}
.article_next_prev LI:hover A:link {
	COLOR: #c00
}
.article_next_prev LI:hover A:visited {
	COLOR: #c00
}
.article_next_prev LI:hover A:hover {
	COLOR: #c00
}
.commentform UL {
	MARGIN: 0px
}
.commentform LI {
	LIST-STYLE-TYPE: none; MARGIN: 0px
}
.ico_expert {
	MARGIN: 0px auto; WIDTH: 69px; BACKGROUND: =
url(../../../images/ico_expert.jpg) no-repeat 0px 0px; HEIGHT: 60px; =
_background: none
}
#digg {
	TEXT-ALIGN: center; PADDING-BOTTOM: 15px; MARGIN: 0px auto; =
PADDING-LEFT: 0px; WIDTH: 182px; PADDING-RIGHT: 0px; DISPLAY: block; =
CLEAR: both; PADDING-TOP: 30px; _width: 188px
}
#digg:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
.digg {
	TEXT-ALIGN: center; MARGIN: 0px 2px; WIDTH: 72px; DISPLAY: =
inline-block; BACKGROUND: #ff7900; FLOAT: left; HEIGHT: 72px; OVERFLOW: =
hidden
}
.digg DT {
	PADDING-BOTTOM: 3px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; FONT: 27px/30px "Microsoft YaHei"; COLOR: #fff; PADDING-TOP: 12px
}
.digg DD {
	MARGIN: 0px; FONT: 12px/22px Arial; COLOR: #fff
}
.digg_enable {
	TEXT-ALIGN: center; BACKGROUND: #ff7900; CURSOR: pointer
}
.digg_disable {
	COLOR: #fff
}
.digg_disable DD {
	COLOR: #fff
}
.pagelist {
	TEXT-ALIGN: center; PADDING-BOTTOM: 15px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; FONT: 12px/24px Arial; COLOR: #666; CLEAR: both; =
PADDING-TOP: 15px
}
.pagelist A {
	BORDER-BOTTOM: #dbe5ee 1px solid; BORDER-LEFT: #dbe5ee 1px solid; =
PADDING-BOTTOM: 0px; MARGIN: 0px 2px; PADDING-LEFT: 8px; PADDING-RIGHT: =
8px; DISPLAY: inline-block; FONT: 12px/22px Arial, Helvetica, =
sans-serif; BACKGROUND: #fff; HEIGHT: 22px; COLOR: #333; BORDER-TOP: =
#dbe5ee 1px solid; CURSOR: pointer; BORDER-RIGHT: #dbe5ee 1px solid; =
PADDING-TOP: 0px
}
.pagelist STRONG {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: =
0px; LINE-HEIGHT: 24px; MARGIN: 0px 3px; PADDING-LEFT: 8px; =
PADDING-RIGHT: 8px; DISPLAY: inline-block; BACKGROUND: #07519a; HEIGHT: =
24px; COLOR: #fff; BORDER-TOP: medium none; FONT-WEIGHT: normal; =
BORDER-RIGHT: medium none; TEXT-DECORATION: none; PADDING-TOP: 0px
}
.pagelist A:hover {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; LINE-HEIGHT: =
24px; MARGIN: 0px 3px; BACKGROUND: #07519a; HEIGHT: 24px; COLOR: #fff; =
BORDER-TOP: medium none; BORDER-RIGHT: medium none; TEXT-DECORATION: =
none
}
.pagelist A.select {
	CURSOR: default
}
#side {
	LINE-HEIGHT: 120%; WIDTH: 200px; FLOAT: left; OVERFLOW: hidden
}
#side .side {
=09
}
#side A {
	COLOR: #ca0000
}
#side A:hover {
	COLOR: #200
}
#panel_Profile {
=09
}
#panel_Profile SPAN {
	COLOR: #333
}
.ico_expert {
	BACKGROUND: url(../images/ico_expert.png) no-repeat
}
#blog_userface {
	TEXT-ALIGN: center; PADDING-BOTTOM: 10px; MARGIN: 0px 0px 5px; =
PADDING-LEFT: 10px; PADDING-RIGHT: 10px; PADDING-TOP: 10px
}
#blog_userface IMG {
	BORDER-BOTTOM: #ddd 1px solid; BORDER-LEFT: #ddd 1px solid; =
PADDING-BOTTOM: 2px; PADDING-LEFT: 2px; PADDING-RIGHT: 2px; MAX-WIDTH: =
160px; BORDER-TOP: #ddd 1px solid; BORDER-RIGHT: #ddd 1px solid; =
PADDING-TOP: 2px
}
#blog_userface SPAN {
	TEXT-ALIGN: center; DISPLAY: block; FONT-WEIGHT: bold
}
#blog_medal {
	TEXT-ALIGN: center
}
#blog_rank {
	PADDING-BOTTOM: 5px; LINE-HEIGHT: 185%; MARGIN: 5px; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; DISPLAY: block; BACKGROUND: =
url(../images/line_1.gif) repeat-x 50% bottom; COLOR: #666; PADDING-TOP: =
5px
}
#blog_rank:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
#blog_rank LI {
=09
}
#blog_rank LI SPAN {
	COLOR: #333
}
#blog_statistics {
	MARGIN: 10px; DISPLAY: block; COLOR: #666
}
#blog_statistics:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
#blog_statistics LI {
	MARGIN: 4px 0px; WIDTH: 50%; FLOAT: left
}
#blog_statistics LI SPAN {
	COLOR: #333
}
#blog_statistics LI A {
=09
}
#panel_Search {
=09
}
#panel_Search .panel_body:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
#panel_Search .panel_body SPAN {
	FLOAT: left
}
#panel_Search .form_search {
	BORDER-BOTTOM: #cccccc 1px solid; BORDER-LEFT: #cccccc 1px solid; =
PADDING-BOTTOM: 0px; MARGIN: 10px 0px; PADDING-LEFT: 3px; PADDING-RIGHT: =
3px; DISPLAY: block; BACKGROUND: #fff; HEIGHT: 24px; OVERFLOW: hidden; =
BORDER-TOP: #cccccc 1px solid; BORDER-RIGHT: #cccccc 1px solid; =
PADDING-TOP: 0px
}
#panel_Search .panel_body .blogsearch {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; MARGIN: 2px 5px =
0px 0px; WIDTH: 140px; HEIGHT: 20px; COLOR: #666666; BORDER-TOP: medium =
none; BORDER-RIGHT: medium none
}
#btnSubmit {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; LINE-HEIGHT: =
999px; TEXT-INDENT: -1000px; MARGIN: 5px 0px 0px; WIDTH: 16px; DISPLAY: =
inline-block; BACKGROUND: url(../images/ico_sear.gif) no-repeat 0px 0px; =
HEIGHT: 16px; OVERFLOW: hidden; BORDER-TOP: medium none; CURSOR: =
pointer; BORDER-RIGHT: medium none
}
#panel_Category {
=09
}
#newcomments {
=09
}
#load_comments {
	BORDER-BOTTOM: #ddd 1px solid; TEXT-ALIGN: center; BORDER-LEFT: #ddd =
1px solid; LINE-HEIGHT: 30px; MARGIN: 5px; DISPLAY: block; FONT-FAMILY: =
"=CE=A2=C8=ED=D1=C5=BA=DA"; HEIGHT: 30px; FONT-SIZE: 14px; BORDER-TOP: =
#ddd 1px solid; CURSOR: pointer; BORDER-RIGHT: #ddd 1px solid
}
#panel_Archive {
=09
}
#panel_Archive LI {
	DISPLAY: block
}
#panel_Archive LI:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
#panel_Archive .list_closed {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 12px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../../../images/arrow_down.gif) no-repeat left center; =
FLOAT: right; COLOR: #666; CURSOR: pointer; PADDING-TOP: 0px
}
#panel_Archive .list_opended {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 12px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../../../images/arrow_up.gif) no-repeat left center; =
FLOAT: right; COLOR: #666; CURSOR: pointer; PADDING-TOP: 0px
}
#archive_list {
	DISPLAY: block; MARGIN-BOTTOM: 5px
}
#archive_list:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
.comment_item FIELDSET {
	BORDER-BOTTOM: #ddd 1px solid; BORDER-LEFT: #ddd 1px solid; =
PADDING-BOTTOM: 0px; BACKGROUND-COLOR: #f1f1f1; PADDING-LEFT: 10px; =
PADDING-RIGHT: 10px; COLOR: #999; BORDER-TOP: #ddd 1px solid; =
BORDER-RIGHT: #ddd 1px solid; PADDING-TOP: 0px
}
.comment_head {
	PADDING-BOTTOM: 1px; PADDING-LEFT: 4px; PADDING-RIGHT: 4px; BACKGROUND: =
#e4e4e4; COLOR: #888; CLEAR: both; PADDING-TOP: 1px
}
.commentform_title {
	PADDING-BOTTOM: 1px; PADDING-LEFT: 4px; PADDING-RIGHT: 4px; BACKGROUND: =
#e4e4e4; COLOR: #888; CLEAR: both; PADDING-TOP: 1px
}
.comment_head A {
	COLOR: #369
}
.commentform_title A {
	COLOR: #369
}
.comment_reply .comment_head {
	BACKGROUND-COLOR: #efefef
}
.comment_reply {
	BACKGROUND-COLOR: #f7f7f7
}
.newcomment {
	BORDER-BOTTOM: #eee 1px solid; BORDER-LEFT: #eee 1px solid; =
PADDING-BOTTOM: 10px; LINE-HEIGHT: 20px; BACKGROUND-COLOR: #f6f6f6; =
MARGIN: 5px; PADDING-LEFT: 10px; WIDTH: 90%; PADDING-RIGHT: 10px; =
BORDER-TOP: #eee 1px solid; BORDER-RIGHT: #eee 1px solid; PADDING-TOP: =
10px
}
.commentform_title {
	COLOR: #000; FONT-SIZE: 14px
}
.commentform .comment_btn {
	BORDER-BOTTOM: medium none; TEXT-ALIGN: center; BORDER-LEFT: medium =
none; MARGIN: 10px 0px 0px 90px; WIDTH: 85px; FONT: 12px/26px Arial, =
Helvetica, sans-serif; BACKGROUND: url(../images/submit_bg.gif) =
no-repeat 0px 0px; HEIGHT: 26px; COLOR: #666; BORDER-TOP: medium none; =
BORDER-RIGHT: medium none
}
.guest_link {
	BORDER-BOTTOM: #e4e4e4 1px solid; BORDER-LEFT: #e4e4e4 1px solid; =
PADDING-BOTTOM: 10px; BACKGROUND-COLOR: #eee; MARGIN: 10px; =
PADDING-LEFT: 10px; PADDING-RIGHT: 10px; FONT-SIZE: 12px; BORDER-TOP: =
#e4e4e4 1px solid; BORDER-RIGHT: #e4e4e4 1px solid; PADDING-TOP: 10px
}
#main .panel_head {
	MARGIN: 5px 0px
}
#side #profile {
	MARGIN-TOP: 0px
}
#baidu_clb_slot_117306 {
	MARGIN-BOTTOM: 10px
}
.announce {
	MARGIN: 0px 15px 10px
}
.commentform {
	MARGIN: 0px 10px 10px
}
.commentform .panel_head {
	MARGIN: 5px 0px
}
.digg_enable {
	TEXT-ALIGN: center; BACKGROUND: #ff7900; CURSOR: pointer
}
.digg_disable {
	TEXT-ALIGN: center; BACKGROUND: #999; CURSOR: pointer
}
#container .pub_footerall DD {
	COLOR: #fff
}
#container .pub_footerall A {
	COLOR: #fff
}
.medal_intro {
	PADDING-TOP: 26px
}
.blog-associat-tag {
	PADDING-BOTTOM: 10px; MARGIN: 10px 0px 0px; PADDING-LEFT: 20px; =
PADDING-RIGHT: 20px; BACKGROUND: #f5f5f5; CLEAR: both; OVERFLOW: hidden; =
PADDING-TOP: 25px
}
.blog-associat-tag DT {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 23px; MARGIN: 0px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; FLOAT: left; PADDING-TOP: 0px
}
.blog-associat-tag DD {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 23px; MARGIN: 0px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; FLOAT: left; PADDING-TOP: 0px
}
.blog-associat-tag DT {
	WIDTH: 86px; FONT: 16px/23px "Microsoft YaHei"
}
.blog-tage-red {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 20px; MARGIN: 2px 5px 0px; =
PADDING-LEFT: 14px; PADDING-RIGHT: 14px; DISPLAY: block; BACKGROUND: =
#e7e7e7; FLOAT: left; HEIGHT: 20px; COLOR: #333333; PADDING-TOP: 0px; =
border-radius: 10px
}
.blog-tage-red:link {
	COLOR: #333333
}
.blog-tage-red:visited {
	COLOR: #333333
}
.blog-tage-red:hover {
	BACKGROUND: #cc0000; COLOR: #fff
}
.blog-ass-articl {
	PADDING-BOTTOM: 20px; MARGIN: 0px 0px 10px; PADDING-LEFT: 20px; =
PADDING-RIGHT: 20px; BACKGROUND: #f5f5f5; CLEAR: both; OVERFLOW: hidden; =
PADDING-TOP: 0px
}
.blog-ass-articl DT {
	BORDER-BOTTOM: #cccccc 2px solid; PADDING-BOTTOM: 0px; MARGIN: 10px 0px =
15px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 16px/35px "Microsoft =
YaHei"; HEIGHT: 35px; CLEAR: both; OVERFLOW: visible; PADDING-TOP: 0px
}
.blog-ass-articl DT SPAN {
	BORDER-BOTTOM: #cc0000 2px solid; DISPLAY: block; FLOAT: left; HEIGHT: =
35px
}
.blog-ass-articl DD {
	PADDING-BOTTOM: 0px; MARGIN: 0px 30px 0px 0px; PADDING-LEFT: 10px; =
WIDTH: 42%; PADDING-RIGHT: 0px; FONT: 12px/23px "SimSun"; BACKGROUND: =
url(../images/blog-dot-red3.gif) no-repeat 0px 10px; FLOAT: left; =
HEIGHT: 23px; COLOR: #369; OVERFLOW: hidden; PADDING-TOP: 0px
}
.blog-ass-articl DD A:link {
	COLOR: #000
}
.blog-ass-articl DD A:visited {
	COLOR: #000
}
.blog-ass-articl DD A:hover {
	COLOR: #000
}
.blog-ass-articl DD A:hover {
	COLOR: #cc0000; TEXT-DECORATION: underline
}
.details .article_content IMG {
	MAX-WIDTH: 100%
}
.q-reply {
	BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; BORDER-LEFT: 0px; =
PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; PADDING-LEFT: 0px; =
BOTTOM: 35px; PADDING-RIGHT: 0px; HEIGHT: 40px; COLOR: #fff; BORDER-TOP: =
0px; CURSOR: pointer; RIGHT: 40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; =
border-radius: 0
}
.backtop {
	BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; BORDER-LEFT: 0px; =
PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; PADDING-LEFT: 0px; =
BOTTOM: 80px; PADDING-RIGHT: 0px; HEIGHT: 40px; COLOR: #fff; BORDER-TOP: =
0px; CURSOR: pointer; RIGHT: 40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; =
border-radius: 0
}
.glyphicon {
	POSITION: relative; LINE-HEIGHT: 1; FONT-STYLE: normal; DISPLAY: =
inline-block; FONT-FAMILY: "Glyphicons Halflings"; TOP: 1px; =
FONT-WEIGHT: normal; -webkit-font-smoothing: antialiased; =
-moz-osx-font-smoothing: grayscale
}

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/default.css

.dp-highlighter {
	TEXT-ALIGN: left; BACKGROUND-COLOR: #e7e5dc; MARGIN: 18px 0px; WIDTH: =
99%; FONT-FAMILY: "Consolas" , "Courier New" , Courier, mono, serif; =
FONT-SIZE: 12px; OVERFLOW: auto; PADDING-TOP: 1px
}
.dp-highlighter OL {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: =
0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px
}
.dp-highlighter OL LI {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: =
0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px
}
.dp-highlighter OL LI SPAN {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: =
0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px
}
.dp-highlighter A {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: =
0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND: =
none transparent scroll repeat 0% 0%; BORDER-TOP: medium none; =
BORDER-RIGHT: medium none; PADDING-TOP: 0px
}
.dp-highlighter A:hover {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: =
0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND: =
none transparent scroll repeat 0% 0%; BORDER-TOP: medium none; =
BORDER-RIGHT: medium none; PADDING-TOP: 0px
}
.dp-highlighter .bar {
	PADDING-LEFT: 45px
}
.collapsed.dp-highlighter .bar {
	PADDING-LEFT: 0px
}
.nogutter.dp-highlighter .bar {
	PADDING-LEFT: 0px
}
.dp-highlighter OL {
	PADDING-BOTTOM: 0px; BACKGROUND-COLOR: #fff; LIST-STYLE-TYPE: decimal; =
MARGIN: 0px 0px 1px 45px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; COLOR: =
#5c5c5c; PADDING-TOP: 0px
}
.nogutter.dp-highlighter OL {
	LIST-STYLE-TYPE: none !important; MARGIN-LEFT: 0px !important; =
LIST-STYLE-IMAGE: none !important
}
.nogutter.dp-highlighter OL LI {
	LIST-STYLE-TYPE: none !important; MARGIN-LEFT: 0px !important; =
LIST-STYLE-IMAGE: none !important
}
.dp-highlighter OL LI {
	LIST-STYLE-POSITION: outside !important; BORDER-LEFT: #6ce26c 3px =
solid; PADDING-BOTTOM: 0px !important; LINE-HEIGHT: 150%; =
BACKGROUND-COLOR: #f8f8f8; LIST-STYLE-TYPE: decimal-leading-zero; =
MARGIN: 0px; PADDING-LEFT: 10px !important; PADDING-RIGHT: 3px =
!important; COLOR: #5c5c5c; PADDING-TOP: 0px !important
}
.dp-highlighter .columns DIV {
	LIST-STYLE-POSITION: outside !important; BORDER-LEFT: #6ce26c 3px =
solid; PADDING-BOTTOM: 0px !important; LINE-HEIGHT: 150%; =
BACKGROUND-COLOR: #f8f8f8; LIST-STYLE-TYPE: decimal-leading-zero; =
MARGIN: 0px; PADDING-LEFT: 10px !important; PADDING-RIGHT: 3px =
!important; COLOR: #5c5c5c; PADDING-TOP: 0px !important
}
.nogutter.dp-highlighter OL LI {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
.nogutter.dp-highlighter .columns DIV {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
.dp-highlighter .columns {
	BACKGROUND-COLOR: #f8f8f8; WIDTH: 100%; COLOR: gray; OVERFLOW: hidden
}
.dp-highlighter .columns DIV {
	PADDING-BOTTOM: 5px
}
.dp-highlighter OL LI.alt {
	BACKGROUND-COLOR: #fff; COLOR: inherit
}
.dp-highlighter OL LI SPAN {
	BACKGROUND-COLOR: inherit; COLOR: black
}
.collapsed.dp-highlighter OL {
	MARGIN: 0px
}
.collapsed.dp-highlighter OL LI {
	DISPLAY: none
}
.printing.dp-highlighter {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none
}
.printing.dp-highlighter .tools {
	DISPLAY: none !important
}
.printing.dp-highlighter LI {
	DISPLAY: list-item !important
}
.dp-highlighter .tools {
	BORDER-LEFT: #6ce26c 3px solid; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: =
#f8f8f8; PADDING-LEFT: 10px; PADDING-RIGHT: 8px; FONT: 9px Verdana, =
Geneva, Arial, Helvetica, sans-serif; COLOR: silver; PADDING-TOP: 3px
}
.nogutter.dp-highlighter .tools {
	BORDER-LEFT: 0px
}
.collapsed.dp-highlighter .tools {
	BORDER-BOTTOM: 0px
}
.dp-highlighter .tools A {
	BACKGROUND-COLOR: inherit; COLOR: #a0a0a0; FONT-SIZE: 9px; =
MARGIN-RIGHT: 10px; TEXT-DECORATION: none
}
.dp-highlighter .tools A:hover {
	BACKGROUND-COLOR: inherit; COLOR: red; TEXT-DECORATION: underline
}
.dp-about {
	PADDING-BOTTOM: 0px; BACKGROUND-COLOR: #fff; MARGIN: 0px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; COLOR: #333; PADDING-TOP: 0px
}
.dp-about TABLE {
	WIDTH: 100%; FONT-FAMILY: Tahoma, Verdana, Arial, sans-serif =
!important; HEIGHT: 100%; FONT-SIZE: 11px
}
.dp-about TD {
	PADDING-BOTTOM: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
VERTICAL-ALIGN: top; PADDING-TOP: 10px
}
.dp-about .copy {
	BORDER-BOTTOM: #aca899 1px solid; HEIGHT: 95%
}
.dp-about .title {
	BACKGROUND-COLOR: inherit; COLOR: red; FONT-WEIGHT: bold
}
.dp-about .para {
	MARGIN: 0px 0px 4px
}
.dp-about .footer {
	TEXT-ALIGN: right; BACKGROUND-COLOR: #eceadb; COLOR: #333; BORDER-TOP: =
#fff 1px solid
}
.dp-about .close {
	BACKGROUND-COLOR: #eceadb; WIDTH: 60px; FONT-FAMILY: Tahoma, Verdana, =
Arial, sans-serif !important; HEIGHT: 22px; COLOR: #333; FONT-SIZE: 11px
}
.dp-highlighter .comment {
	BACKGROUND-COLOR: inherit; COLOR: #008200
}
.dp-highlighter .comments {
	BACKGROUND-COLOR: inherit; COLOR: #008200
}
.dp-highlighter .string {
	BACKGROUND-COLOR: inherit; COLOR: blue
}
.dp-highlighter .keyword {
	BACKGROUND-COLOR: inherit; COLOR: #069; FONT-WEIGHT: bold
}
.dp-highlighter .preprocessor {
	BACKGROUND-COLOR: inherit; COLOR: gray
}
.dp-xml .cdata {
	COLOR: #ff1493
}
.dp-xml .tag {
	COLOR: #993300; FONT-WEIGHT: bold
}
.dp-xml .tag-name {
	COLOR: #993300; FONT-WEIGHT: bold
}
.dp-xml .attribute {
	COLOR: red
}
.dp-xml .attribute-value {
	COLOR: blue
}
.dp-sql .func {
	COLOR: #ff1493
}
.dp-sql .op {
	COLOR: #808080
}
.dp-rb .symbol {
	COLOR: #a70
}
.dp-rb .variable {
	COLOR: #a70; FONT-WEIGHT: bold
}
.dp-py .builtins {
	COLOR: #ff1493
}
.dp-py .magicmethods {
	COLOR: #808080
}
.dp-py .exceptions {
	COLOR: brown
}
.dp-py .types {
	FONT-STYLE: italic; COLOR: brown
}
.dp-py .commonlibs {
	FONT-STYLE: italic; COLOR: #8a2be2
}
.dp-j .annotation {
	COLOR: #646464
}
.dp-j .number {
	COLOR: #c00000
}
.dp-delphi .number {
	COLOR: blue
}
.dp-delphi .directive {
	COLOR: #008284
}
.dp-delphi .vars {
	COLOR: #000
}
.dp-css .value {
	COLOR: black
}
.dp-css .important {
	COLOR: red
}
.dp-c .vars {
	COLOR: #d00
}
.dp-cpp .datatypes {
	COLOR: #2e8b57; FONT-WEIGHT: bold
}
.dp-highlighter .bar A {
	PADDING-BOTTOM: 1px; TEXT-INDENT: -2000px; PADDING-LEFT: 1px; WIDTH: =
16px; PADDING-RIGHT: 1px; DISPLAY: inline-block; BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: left top; HEIGHT: 16px; PADDING-TOP: =
1px; _width: 0px; _overflow: hidden; _padding-left: 16px; _text-indent: =
0px
}
.dp-highlighter .bar A:hover {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
BACKGROUND-REPEAT: no-repeat; BORDER-TOP: #ccc 1px solid; BORDER-RIGHT: =
#ccc 1px solid; TEXT-DECORATION: none; PADDING-TOP: 0px; _padding-left: =
16px
}
.dp-highlighter .bar A.ExpandSource {
=09
}
.dp-highlighter .bar A.ViewSource {
	BACKGROUND-IMAGE: url(images/default/ico_plain.gif)
}
.dp-highlighter .bar A.CopyToClipboard {
	BACKGROUND-IMAGE: url(images/default/ico_copy.gif)
}
.dp-highlighter .bar A.PrintSource {
	DISPLAY: none
}
.dp-highlighter .bar A.About {
	DISPLAY: none
}

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/css/comment1.css

.commentform {
=09
}
.commentform UL {
	MARGIN: 0px 20px 5px; FONT: 12px/24px Arial, Helvetica, sans-serif; =
CLEAR: both
}
.commentform .left {
	WIDTH: 80px; DISPLAY: block; FLOAT: left
}
.commentform .right {
	DISPLAY: block; MARGIN-LEFT: 90px
}
.commentform TEXTAREA {
	BORDER-BOTTOM: #ddd 1px solid; BORDER-LEFT: #ddd 1px solid; =
PADDING-BOTTOM: 5px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; FONT: =
14px/24px Arial, Helvetica, sans-serif; COLOR: #555; BORDER-TOP: #ddd =
1px solid; BORDER-RIGHT: #ddd 1px solid; PADDING-TOP: 5px
}
#lang_list {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
BACKGROUND-COLOR: #ffffff; WIDTH: 388px; FONT-SIZE: 12px; BORDER-TOP: =
#ccc 1px solid; BORDER-RIGHT: #ccc 1px solid
}
#lang_list A {
	BORDER-BOTTOM: #ccc 1px solid; TEXT-ALIGN: center; PADDING-BOTTOM: 0px; =
PADDING-LEFT: 5px; PADDING-RIGHT: 5px; DISPLAY: inline-block; FLOAT: =
left; CURSOR: pointer; BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 0px
}
#lang_list A:hover {
	BACKGROUND-COLOR: #666; COLOR: #fff
}
.long_name {
	WIDTH: 70px
}
.duan_name {
	WIDTH: 25px
}
.zhong_name {
	WIDTH: 48px
}

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: 7bit
Content-Location: http://static.blog.csdn.net/css/style1.css

.commentform UL {
	MARGIN: 0px
}
.commentform LI {
	LIST-STYLE-TYPE: none; MARGIN: 0px
}

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/public/res-min/markdown_views.css?v=1.0

.hljs {
	PADDING-BOTTOM: 0.5em; PADDING-LEFT: 0.5em; PADDING-RIGHT: 0.5em; =
DISPLAY: block; BACKGROUND: #fff; COLOR: #000; PADDING-TOP: 0.5em
}
.hljs-comment {
	COLOR: #800
}
.hljs-template_comment {
	COLOR: #800
}
.hljs-javadoc {
	COLOR: #800
}
.hljs-comment * {
	COLOR: #800
}
.hljs-keyword {
	COLOR: #008
}
.method {
	COLOR: #008
}
.hljs-list .hljs-title {
	COLOR: #008
}
.clojure .hljs-built_in {
	COLOR: #008
}
.nginx .hljs-title {
	COLOR: #008
}
.hljs-tag .hljs-title {
	COLOR: #008
}
.setting .hljs-value {
	COLOR: #008
}
.hljs-winutils {
	COLOR: #008
}
.tex .hljs-command {
	COLOR: #008
}
.http .hljs-title {
	COLOR: #008
}
.hljs-request {
	COLOR: #008
}
.hljs-status {
	COLOR: #008
}
.hljs-envvar {
	COLOR: #660
}
.tex .hljs-special {
	COLOR: #660
}
.hljs-string {
	COLOR: #080
}
.hljs-tag .hljs-value {
	COLOR: #080
}
.hljs-cdata {
	COLOR: #080
}
.hljs-filter .hljs-argument {
	COLOR: #080
}
.hljs-attr_selector {
	COLOR: #080
}
.apache .hljs-cbracket {
	COLOR: #080
}
.hljs-date {
	COLOR: #080
}
.hljs-regexp {
	COLOR: #080
}
.coffeescript .hljs-attribute {
	COLOR: #080
}
.hljs-sub .hljs-identifier {
	COLOR: #066
}
.hljs-pi {
	COLOR: #066
}
.hljs-tag {
	COLOR: #066
}
.hljs-tag .hljs-keyword {
	COLOR: #066
}
.hljs-decorator {
	COLOR: #066
}
.ini .hljs-title {
	COLOR: #066
}
.hljs-shebang {
	COLOR: #066
}
.hljs-prompt {
	COLOR: #066
}
.hljs-hexcolor {
	COLOR: #066
}
.hljs-rules .hljs-value {
	COLOR: #066
}
.css .hljs-value .hljs-number {
	COLOR: #066
}
.hljs-literal {
	COLOR: #066
}
.hljs-symbol {
	COLOR: #066
}
.ruby .hljs-symbol .hljs-string {
	COLOR: #066
}
.hljs-number {
	COLOR: #066
}
.css .hljs-function {
	COLOR: #066
}
.clojure .hljs-attribute {
	COLOR: #066
}
.hljs-class .hljs-title {
	COLOR: #606
}
.haskell .hljs-type {
	COLOR: #606
}
.smalltalk .hljs-class {
	COLOR: #606
}
.hljs-javadoctag {
	COLOR: #606
}
.hljs-yardoctag {
	COLOR: #606
}
.hljs-phpdoc {
	COLOR: #606
}
.hljs-typename {
	COLOR: #606
}
.hljs-tag .hljs-attribute {
	COLOR: #606
}
.hljs-doctype {
	COLOR: #606
}
.hljs-class .hljs-id {
	COLOR: #606
}
.hljs-built_in {
	COLOR: #606
}
.setting {
	COLOR: #606
}
.hljs-params {
	COLOR: #606
}
.hljs-variable {
	COLOR: #606
}
.clojure .hljs-title {
	COLOR: #606
}
.css .hljs-tag {
	COLOR: #000
}
.hljs-rules .hljs-property {
	COLOR: #000
}
.hljs-pseudo {
	COLOR: #000
}
.hljs-subst {
	COLOR: #000
}
.css .hljs-class {
	COLOR: #9b703f
}
.css .hljs-id {
	COLOR: #9b703f
}
.hljs-value .hljs-important {
	COLOR: #f70; FONT-WEIGHT: bold
}
.hljs-rules .hljs-keyword {
	COLOR: #c5af75
}
.hljs-annotation {
	COLOR: #9b859d
}
.apache .hljs-sqbracket {
	COLOR: #9b859d
}
.nginx .hljs-built_in {
	COLOR: #9b859d
}
.hljs-preprocessor {
	COLOR: #444
}
.hljs-preprocessor * {
	COLOR: #444
}
.hljs-pragma {
	COLOR: #444
}
.tex .hljs-formula {
	BACKGROUND-COLOR: #eee; FONT-STYLE: italic
}
.diff .hljs-header {
	COLOR: #808080; FONT-WEIGHT: bold
}
.hljs-chunk {
	COLOR: #808080; FONT-WEIGHT: bold
}
.diff .hljs-change {
	BACKGROUND-COLOR: #bccff9
}
.hljs-addition {
	BACKGROUND-COLOR: #baeeba
}
.hljs-deletion {
	BACKGROUND-COLOR: #ffc8bd
}
.hljs-comment .hljs-yardoctag {
	FONT-WEIGHT: bold
}
.markdown_views {
	FONT-FAMILY: "microsoft yahei"; FONT-SIZE: 14px
}
.markdown_views * {
	BOX-SIZING: border-box
}
.markdown_views H1 {
	MARGIN: 0.8em 0px; FONT-WEIGHT: 100
}
.markdown_views H2 {
	MARGIN: 0.8em 0px; FONT-WEIGHT: 100
}
.markdown_views H3 {
	MARGIN: 0.8em 0px; FONT-WEIGHT: 100
}
.markdown_views H4 {
	MARGIN: 0.8em 0px; FONT-WEIGHT: 100
}
.markdown_views H5 {
	MARGIN: 0.8em 0px; FONT-WEIGHT: 100
}
.markdown_views H6 {
	MARGIN: 0.8em 0px; FONT-WEIGHT: 100
}
.markdown_views P {
	MARGIN: 0px 0px 1.1em
}
.markdown_views PRE {
	MARGIN: 0px 0px 1.1em
}
.markdown_views PRE.prettyprint {
	MARGIN: 0px 0px 1.1em
}
.markdown_views BLOCKQUOTE {
	MARGIN: 0px 0px 1.1em
}
.markdown_views HR {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; MARGIN: 2em 0px; BORDER-TOP: 0px; =
BORDER-RIGHT: 0px
}
.markdown_views DT {
	FONT-WEIGHT: bold
}
.markdown_views ABBR[title] {
	BORDER-BOTTOM: #999 1px dotted; CURSOR: help
}
.markdown_views ABBR[data-original-title] {
	BORDER-BOTTOM: #999 1px dotted; CURSOR: help
}
.markdown_views .initialism {
	TEXT-TRANSFORM: uppercase; FONT-SIZE: 90%
}
.markdown_views BLOCKQUOTE {
	PADDING-BOTTOM: 15px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; =
PADDING-TOP: 15px; border-radius: 0 5px 5px 0
}
.markdown_views BLOCKQUOTE P {
	LINE-HEIGHT: 1.25
}
.markdown_views BLOCKQUOTE SMALL {
	LINE-HEIGHT: 1.45; DISPLAY: block; COLOR: #999
}
.markdown_views BLOCKQUOTE .small {
	LINE-HEIGHT: 1.45; DISPLAY: block; COLOR: #999
}
.markdown_views BLOCKQUOTE SMALL:before {
	CONTENT: "=A1=AA?"
}
.markdown_views BLOCKQUOTE .small:before {
	CONTENT: "=A1=AA?"
}
.markdown_views BLOCKQUOTE.pull-right {
	BORDER-LEFT: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 15px
}
.markdown_views BLOCKQUOTE.pull-right P {
	TEXT-ALIGN: right
}
.markdown_views BLOCKQUOTE.pull-right SMALL {
	TEXT-ALIGN: right
}
.markdown_views BLOCKQUOTE.pull-right .small {
	TEXT-ALIGN: right
}
.markdown_views BLOCKQUOTE.pull-right SMALL:before {
	CONTENT: ""
}
.markdown_views BLOCKQUOTE.pull-right .small:before {
	CONTENT: ""
}
.markdown_views BLOCKQUOTE.pull-right SMALL:after {
	CONTENT: "?=A1=AA"
}
.markdown_views BLOCKQUOTE.pull-right .small:after {
	CONTENT: "?=A1=AA"
}
.markdown_views BLOCKQUOTE:before {
	CONTENT: ""
}
.markdown_views BLOCKQUOTE:after {
	CONTENT: ""
}
.markdown_views ADDRESS {
	LINE-HEIGHT: 1.45; FONT-STYLE: normal; MARGIN-BOTTOM: 21px
}
.markdown_views CODE {
	FONT-FAMILY: "Source Code Pro", monospace
}
.markdown_views KBD {
	FONT-FAMILY: "Source Code Pro", monospace
}
.markdown_views PRE {
	FONT-FAMILY: "Source Code Pro", monospace
}
.markdown_views SAMP {
	FONT-FAMILY: "Source Code Pro", monospace
}
.markdown_views CODE {
	PADDING-BOTTOM: 2px; PADDING-LEFT: 4px; PADDING-RIGHT: 4px; =
WHITE-SPACE: nowrap; COLOR: #3f3f3f; FONT-SIZE: 90%; PADDING-TOP: 2px; =
border-radius: 0
}
.markdown_views PRE {
	PADDING-BOTTOM: 10px; LINE-HEIGHT: 1.45; MARGIN: 0px 0px 10.5px; =
PADDING-LEFT: 10px; PADDING-RIGHT: 10px; DISPLAY: block; WORD-WRAP: =
break-word; COLOR: #333; FONT-SIZE: 14px; WORD-BREAK: break-all; =
PADDING-TOP: 10px; border-radius: 0
}
.markdown_views PRE CODE {
	PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; WORD-WRAP: normal; WHITE-SPACE: pre; COLOR: inherit; =
FONT-SIZE: inherit; PADDING-TOP: 0px; border-radius: 0
}
.markdown_views .pre-scrollable {
	OVERFLOW-Y: scroll; MAX-HEIGHT: 340px
}
.markdown_views .sequence-diagram {
	TEXT-ALIGN: center; MARGIN-BOTTOM: 1.1em
}
.markdown_views .flow-chart {
	TEXT-ALIGN: center; MARGIN-BOTTOM: 1.1em
}
.markdown_views TABLE {
	BORDER-BOTTOM: #eee 1px solid; BORDER-LEFT: #eee 1px solid; =
BACKGROUND-COLOR: transparent; BORDER-SPACING: 0; WIDTH: 100%; =
BORDER-COLLAPSE: collapse; BORDER-TOP: #eee 1px solid; BORDER-RIGHT: =
#eee 1px solid
}
.markdown_views TABLE TH {
	BORDER-BOTTOM: #eee 1px solid; BORDER-LEFT: #eee 1px solid; =
PADDING-BOTTOM: 8px; LINE-HEIGHT: 20px; PADDING-LEFT: 8px; =
PADDING-RIGHT: 8px; VERTICAL-ALIGN: top; BORDER-TOP: #eee 1px solid; =
BORDER-RIGHT: #eee 1px solid; PADDING-TOP: 8px
}
.markdown_views TABLE TD {
	BORDER-BOTTOM: #eee 1px solid; BORDER-LEFT: #eee 1px solid; =
PADDING-BOTTOM: 8px; LINE-HEIGHT: 20px; PADDING-LEFT: 8px; =
PADDING-RIGHT: 8px; VERTICAL-ALIGN: top; BORDER-TOP: #eee 1px solid; =
BORDER-RIGHT: #eee 1px solid; PADDING-TOP: 8px
}
.markdown_views .prettyprint {
	POSITION: relative; PADDING-BOTTOM: 5px; OVERFLOW-X: auto; OVERFLOW-Y: =
hidden; PADDING-LEFT: 60px; PADDING-RIGHT: 5px; WHITE-SPACE: nowrap; =
PADDING-TOP: 5px
}
.markdown_views .prettyprint .pre-numbering {
	POSITION: absolute; TEXT-ALIGN: right; PADDING-BOTTOM: 40px; =
BACKGROUND-COLOR: #eee; LIST-STYLE-TYPE: none; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 50px; PADDING-RIGHT: 0px; TOP: 0px; =
LIST-STYLE-IMAGE: none; BORDER-RIGHT: #ddd 1px solid; PADDING-TOP: 6px; =
LEFT: 0px
}
.markdown_views .prettyprint .pre-numbering LI {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; =
PADDING-TOP: 0px
}

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/css/category.css?v=1.0

.article_manage {
	BORDER-BOTTOM: #ededed 1px solid; TEXT-ALIGN: right; PADDING-BOTTOM: =
5px; MARGIN: 0px -20px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; FONT: =
12px/22px Arial; COLOR: #999; OVERFLOW: hidden; PADDING-TOP: 0px
}
.article_manage SPAN {
	MARGIN: 0px 5px
}
.article_manage .link_postdate {
	MARGIN: 0px 5px 0px 0px
}
.article_manage .link_view {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 14px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../../../images/ico_view.png) no-repeat left center; =
PADDING-TOP: 0px; _background: url(../../../images/ico_view.gif) =
no-repeat left center
}
.article_manage .link_comments {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 14px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../../../images/ico_comm.png) no-repeat left center; =
PADDING-TOP: 0px; _background: url(../../../images/ico_comm.gif) =
no-repeat left center
}
.article_manage .link_categories {
	FLOAT: left
}
.list_view {
	PADDING-BOTTOM: 5px; MARGIN: 0px 20px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; PADDING-TOP: 5px
}
.list_view .article_title {
	MARGIN: 0px; TEXT-OVERFLOW: ellipsis; DISPLAY: inline; FONT: 14px/30px =
Arial; WHITE-SPACE: nowrap; FLOAT: left; HEIGHT: 30px; OVERFLOW: hidden
}
.list_view .article_title:after {
	CONTENT: "..."
}
.list_view .article_title H3 {
	FONT: 12px/30px Arial
}
.list_view .article_title H1 {
	FONT: 12px/30px Arial
}
.list_view .article_manage {
	TEXT-ALIGN: right !important; PADDING-BOTTOM: 0px !important; =
LINE-HEIGHT: 30px !important; PADDING-LEFT: 0px !important; =
PADDING-RIGHT: 0px !important; DISPLAY: inline; WHITE-SPACE: nowrap; =
FLOAT: right; PADDING-TOP: 0px !important
}
.list_view .article_description {
	DISPLAY: none !important
}
.list_view .article_manage SPAN {
	MARGIN: 0px
}
.article_l {
	WIDTH: 100%; FLOAT: left
}
.category_l IMG {
	VERTICAL-ALIGN: middle
}
.category_l SPAN {
	DISPLAY: inline-block; VERTICAL-ALIGN: middle
}
.article_l SPAN A {
	DISPLAY: inline-block; MARGIN-RIGHT: 10px
}
.article_r .fa {
	FONT-WEIGHT: normal
}
.category {
	BORDER-BOTTOM: #ededed 1px solid; PADDING-BOTTOM: 5px; MARGIN: 0px =
-20px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; PADDING-TOP: 5px
}
.category_l {
	DISPLAY: inline-block
}
.category_r {
	DISPLAY: inline-block
}
.category_l {
	LINE-HEIGHT: 28px; WIDTH: 70px; FLOAT: left; COLOR: #333; FONT-SIZE: =
14px
}
.category_r {
	WIDTH: 90%; FLOAT: left; COLOR: #df3434; FONT-SIZE: 14px
}
.category_r .subItem_t .J_close {
	LINE-HEIGHT: 42px; FONT-STYLE: normal; FLOAT: right; COLOR: #ccc; =
FONT-SIZE: 16px; FONT-WEIGHT: normal
}
.category_r EM {
	FONT-STYLE: normal
}
.category_r LABEL {
	POSITION: relative; LINE-HEIGHT: 28px; DISPLAY: inline-block; =
MARGIN-LEFT: 15px; CURSOR: pointer
}
.category_r LABEL .fa {
	COLOR: #999
}
.category_r LABEL .fa-caret-up {
	DISPLAY: none; transform: all 2.2s
}
.subItem {
	Z-INDEX: 9999; BORDER-BOTTOM: #dcdcdc 1px solid; POSITION: absolute; =
BORDER-LEFT: #dcdcdc 1px solid; WIDTH: 400px; DISPLAY: none; BACKGROUND: =
#fff; COLOR: #333; MAX-HEIGHT: 400px; BORDER-TOP: #dcdcdc 1px solid; =
TOP: 46px; BORDER-RIGHT: #dcdcdc 1px solid; LEFT: -10px; box-shadow: 5px =
0 10px #dcdcdc
}
.subItem:after {
	POSITION: absolute; WIDTH: 10px; DISPLAY: block; BACKGROUND: =
url(../images/triangle.png) no-repeat; HEIGHT: 10px; CONTENT: ''; TOP: =
-10px; LEFT: 20px
}
.subItem .subItem_l LI A {
	COLOR: #333
}
.subItem_t {
	BORDER-BOTTOM: #dcdcdc 1px solid; PADDING-BOTTOM: 0px; LINE-HEIGHT: =
42px; PADDING-LEFT: 15px; PADDING-RIGHT: 20px; HEIGHT: 42px; COLOR: =
#999; PADDING-TOP: 0px
}
.category_r .subItem_t .fa-close {
	LINE-HEIGHT: 42px; FLOAT: right; COLOR: #ccc; FONT-SIZE: 16px; =
FONT-WEIGHT: normal
}
.subItem_l {
	PADDING-BOTTOM: 0px; OVERFLOW-Y: auto; LIST-STYLE-TYPE: none; MARGIN: =
0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; MAX-HEIGHT: 358px; =
LIST-STYLE-IMAGE: none; PADDING-TOP: 0px
}
.subItem .subItem_l LI {
	BORDER-BOTTOM: #eeeeee 1px solid; PADDING-BOTTOM: 0px; LINE-HEIGHT: =
52px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; HEIGHT: 52px; =
PADDING-TOP: 0px
}
.subItem_l LI EM {
	DISPLAY: inline-block; VERTICAL-ALIGN: middle; MARGIN-RIGHT: 10px
}
.subItem_l LI A {
	WIDTH: 95%; TEXT-OVERFLOW: ellipsis; DISPLAY: inline-block; =
WHITE-SPACE: nowrap; COLOR: #333; FONT-SIZE: 14px; VERTICAL-ALIGN: =
middle; OVERFLOW: hidden
}
.similar_article {
	OVERFLOW: hidden
}
.similar_article H4 {
	COLOR: #333; FONT-SIZE: 16px
}
.similar_c {
	BORDER-BOTTOM: #bbb 1px solid; BORDER-LEFT: #bbb 1px solid; BORDER-TOP: =
#bbb 1px solid; BORDER-RIGHT: #bbb 1px solid
}
.similar_c_t {
	BORDER-BOTTOM: #dcdcdc 1px solid; LINE-HEIGHT: 45px
}
.similar_c_t LABEL {
	DISPLAY: inline-block; COLOR: #666; MARGIN-LEFT: 25px; FONT-SIZE: 16px
}
.similar_c_t LABEL EM {
	FONT-STYLE: normal
}
.similar_c_t .similar_cur {
	FONT-WEIGHT: bold
}
.fl {
	FLOAT: left
}
.fr {
	FLOAT: right
}
.similar_wrap {
	PADDING-BOTTOM: 10px; OVERFLOW-Y: auto; PADDING-LEFT: 20px; =
PADDING-RIGHT: 20px; BACKGROUND: #fcfcfc; MAX-HEIGHT: 180px; =
PADDING-TOP: 10px
}
.similar_list {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: =
0px; WIDTH: 49%; PADDING-RIGHT: 0px; LIST-STYLE-IMAGE: none; =
PADDING-TOP: 0px
}
.similar_list LI {
	LINE-HEIGHT: 30px; LIST-STYLE-TYPE: none; LIST-STYLE-IMAGE: none
}
.similar_list LI EM {
	FONT-STYLE: normal; DISPLAY: inline-block; VERTICAL-ALIGN: middle; =
MARGIN-RIGHT: 10px
}
.similar_list LI A {
	WIDTH: 50%; TEXT-OVERFLOW: ellipsis; DISPLAY: inline-block; =
WHITE-SPACE: nowrap; COLOR: #333; VERTICAL-ALIGN: middle; OVERFLOW: =
hidden
}
.similar_list LI A:hover {
	COLOR: #fe0000
}
.similar_list LI SPAN {
	DISPLAY: inline-block; COLOR: #bbbbbb; MARGIN-LEFT: 9px; FONT-SIZE: =
12px
}
.similar_list LI LABEL {
	DISPLAY: inline-block; COLOR: #bbbbbb; MARGIN-LEFT: 9px; FONT-SIZE: =
12px
}
.similar_list LI LABEL I {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.similar_list LI LABEL B {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
.similar_list LI LABEL B {
	MARGIN-LEFT: 5px
}
.MoreArticle {
	TEXT-ALIGN: center; LINE-HEIGHT: 35px; DISPLAY: block; BACKGROUND: =
#fcfcfc; HEIGHT: 35px; COLOR: #666; CLEAR: both; FONT-SIZE: 12px
}
.MoreArticle:hover {
	BACKGROUND: #f2f2f2
}
.bog_copyright {
	PADDING-BOTTOM: 20px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
PADDING-TOP: 20px
}
.copyright_p {
	BORDER-LEFT: #e41c1e 3px solid; LINE-HEIGHT: 14px; PADDING-LEFT: 10px; =
HEIGHT: 14px; COLOR: #666; FONT-SIZE: 14px
}

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/css/blog_detail.css

.mod_zhuanjia_dianping {
	BORDER-BOTTOM: #fbf5dd 1px solid; BACKGROUND-COLOR: #fffdf5; =
MARGIN-TOP: 80px; COLOR: #656565; FONT-SIZE: 12px; BORDER-TOP: #fbf5dd =
1px solid
}
.mod_zhuanjia_dianping UL {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; LIST-STYLE-IMAGE: none; PADDING-TOP: 0px
}
.mod_zhuanjia_dianping LI {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; LIST-STYLE-IMAGE: none; PADDING-TOP: 0px
}
.mod_zhuanjia_dianping IMG {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none
}
.mod_zhuanjia_dianping .dianping_title {
	BORDER-BOTTOM: #ccc 2px solid; LINE-HEIGHT: 40px; HEIGHT: 40px
}
.mod_zhuanjia_dianping .dianping_title .dianping_title_left {
	BORDER-BOTTOM: #cb0000 2px solid; FLOAT: left; FONT-SIZE: 16px
}
.mod_zhuanjia_dianping .dianping_title .dianping_title_right {
	FLOAT: right; COLOR: #656565; FONT-SIZE: 14px; FONT-WEIGHT: normal
}
.mod_zhuanjia_dianping .dianping_title .dianping_title_right .red {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; COLOR: =
#cb0000; PADDING-TOP: 0px
}
.mod_zhuanjia_dianping .dianping_title .dianping_title_right IMG {
	PADDING-RIGHT: 5px; VERTICAL-ALIGN: -2px
}
.mod_zhuanjia_dianping .dianping_content {
	HEIGHT: 240px; MAX-HEIGHT: 800px; OVERFLOW: hidden
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list {
	PADDING-BOTTOM: 20px; PADDING-LEFT: 0px; WIDTH: 100%; PADDING-RIGHT: =
0px; FLOAT: left; BORDER-TOP: #dedcdd 1px dashed; PADDING-TOP: 20px
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list_left {
	MARGIN-TOP: 20px; WIDTH: 40px; FLOAT: left; MARGIN-LEFT: -100%
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list_left =
.name {
	TEXT-ALIGN: center; MARGIN-TOP: 10px; WIDTH: 40px; DISPLAY: =
inline-block; COLOR: #000
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list =
.dianping_content_list_right {
	PADDING-LEFT: 20px; MARGIN-LEFT: 40px
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list =
.dianping_content_list_right .time {
	COLOR: #7795a5
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list =
.dianping_content_list_right .time .time_desc {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; =
PADDING-TOP: 0px
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list =
.dianping_content_list_right .dianping_content_list_right_content {
	LINE-HEIGHT: 18px; MARGIN-TOP: 10px
}
.mod_zhuanjia_dianping .dianping_content .dianping_content_list =
.dianping_content_list_right .time IMG {
	VERTICAL-ALIGN: -2px
}
.mod_zhuanjia_dianping .more {
	POSITION: relative; TEXT-ALIGN: center; WIDTH: 100%
}
.mod_zhuanjia_dianping .more IMG {
	POSITION: relative; BOTTOM: -20px; CURSOR: pointer
}
.mod_more_detail {
	BORDER-BOTTOM: #e8e8e8 1px solid; BORDER-LEFT: #e8e8e8 1px solid; =
MARGIN-TOP: 50px; COLOR: #333; FONT-SIZE: 12px; BORDER-TOP: #e8e8e8 1px =
solid; BORDER-RIGHT: #e8e8e8 1px solid
}
.mod_more_detail UL {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 24px; LIST-STYLE-TYPE: none; MARGIN: =
0px; PADDING-LEFT: 0px; TEXT-OVERFLOW: ellipsis; PADDING-RIGHT: 0px; =
WHITE-SPACE: nowrap; HEIGHT: 24px; OVERFLOW: hidden; LIST-STYLE-IMAGE: =
none; PADDING-TOP: 0px
}
.mod_more_detail LI {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 24px; LIST-STYLE-TYPE: none; MARGIN: =
0px; PADDING-LEFT: 0px; TEXT-OVERFLOW: ellipsis; PADDING-RIGHT: 0px; =
WHITE-SPACE: nowrap; HEIGHT: 24px; OVERFLOW: hidden; LIST-STYLE-IMAGE: =
none; PADDING-TOP: 0px
}
.mod_more_detail LI A {
	COLOR: #333
}
.mod_more_detail .mod_more_detail_title {
	LINE-HEIGHT: 40px; BACKGROUND-COLOR: #f1f1f1; TEXT-INDENT: 10px; =
HEIGHT: 40px
}
.mod_more_detail .mod_more_detail_title .mod_more_detail_left {
	FLOAT: left; COLOR: #000; FONT-SIZE: 16px
}
.mod_more_detail .mod_more_detail_content {
	PADDING-BOTTOM: 20px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; OVERFLOW: =
hidden; PADDING-TOP: 20px
}
.mod_more_detail .mod_more_detail_content .mod_more_detail_content_left =
{
	BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-LEFT: 20px; WIDTH: =
50%; PADDING-RIGHT: 20px; FLOAT: left; BORDER-RIGHT: #e8e8e8 1px solid; =
PADDING-TOP: 0px
}
.mod_more_detail .mod_more_detail_content .mod_more_detail_content_right =
{
	BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-LEFT: 20px; WIDTH: =
50%; PADDING-RIGHT: 20px; FLOAT: left; PADDING-TOP: 0px
}

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/css/replace.css

#relate {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relage_t {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relate_t SPAN {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relate_c {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relate_list {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relate_list DT {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relate_list DT IMG {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relate_list DD {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relate_list DD H4 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relate_list DD P {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.relate_list DD P SPAN {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
#relate {
	PADDING-BOTTOM: 20px; MARGIN: 20px 0px; PADDING-LEFT: 20px; =
PADDING-RIGHT: 20px; DISPLAY: none; BACKGROUND: #fff; OVERFLOW: hidden; =
PADDING-TOP: 0px
}
.relate_t {
	BORDER-BOTTOM: #ccc 1px solid; LINE-HEIGHT: 35px; HEIGHT: 35px
}
.relate_t SPAN {
	BORDER-BOTTOM: #cc0000 1px solid; DISPLAY: inline-block; HEIGHT: 35px
}
.relate_c {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
MARGIN-RIGHT: -40px; PADDING-TOP: 0px
}
.relate_list {
	MARGIN: 20px 40px 0px 0px; WIDTH: 285px; FLOAT: left
}
.relate_list DT {
	BORDER-BOTTOM: #dfdfdf 1px solid; BORDER-LEFT: #dfdfdf 1px solid; =
PADDING-BOTTOM: 5px; PADDING-LEFT: 5px; WIDTH: 50px; PADDING-RIGHT: 5px; =
FLOAT: left; HEIGHT: 50px; BORDER-TOP: #dfdfdf 1px solid; BORDER-RIGHT: =
#dfdfdf 1px solid; PADDING-TOP: 5px
}
.relate_list DT IMG {
	WIDTH: 50px; HEIGHT: 50px
}
.relate_list DD {
	MARGIN: 0px; PADDING-LEFT: 20px; FLOAT: left
}
.relate_list DD H4 A {
	WIDTH: 100%; TEXT-OVERFLOW: ellipsis; DISPLAY: block; WHITE-SPACE: =
nowrap; COLOR: #333; FONT-SIZE: 14px; OVERFLOW: hidden; TEXT-DECORATION: =
none
}
.relate_list DD P {
	FONT-SIZE: 12px; PADDING-TOP: 10px
}
.relate_list DD P SPAN {
	FONT-STYLE: normal
}
.relate_list DD P EM {
	FONT-STYLE: normal
}
.relate_list DD P I {
	FONT-STYLE: normal
}
.relate_list DD P SPAN {
	COLOR: #64b1cb; MARGIN-RIGHT: 6px
}
.relate_list DD P I {
	MARGIN: 0px 6px
}
#res-relatived {
	CLEAR: both
}

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/comm_ask/css/ask_float_block.css

@font-face {
	font-family: FontAwesome;
	=
src:url(//ask.csdn.net/assets/fontawesome-webfont-d8970a29b6bda4953188db1=
bf11caa77.eot?#iefix&v=3D3.2.1) format("embedded-opentype"), =
url(//ask.csdn.net/assets/fontawesome-webfont-b6eacf39cdd874409fca9bbfa0f=
d5524.woff?v=3D3.2.1) format("woff"), =
url(//ask.csdn.net/assets/fontawesome-webfont-e6510d64f0dee7530f4c35b4ecc=
be2eb.ttf?v=3D3.2.1) format("truetype"), =
url(//ask.csdn.net/assets/fontawesome-webfont-4bb899176c47fb8cc6662a8929e=
ebc8a.svg#fontawesomeregular?v=3D3.2.1) format("svg");
}
.clearfix:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
'.'
}
BODY > .marker {
	Z-INDEX: 900; POSITION: absolute; WIDTH: 0px; BACKGROUND: #000; HEIGHT: =
0px; TOP: 0px; LEFT: 0px; transition: all 0.5s ease-in; opacity: 0
}
BODY > .pop_edit {
	Z-INDEX: 1000; BORDER-BOTTOM: #dcdcdc 1px solid; POSITION: fixed; =
BORDER-LEFT: #dcdcdc 1px solid; MARGIN-TOP: -270px; FONT-FAMILY: =
"microsoft yahei"; BACKGROUND: #fff; MARGIN-LEFT: -333px; CLEAR: both; =
BORDER-TOP: #dcdcdc 1px solid; TOP: 50%; BORDER-RIGHT: #dcdcdc 1px =
solid; LEFT: 50%; opacity: 0
}
BODY > .pop_edit * {
	BOX-SIZING: border-box
}
BODY > .pop_edit .active.icon-preview:before {
	Z-INDEX: 10002; POSITION: relative; COLOR: #04c !important
}
BODY > .pop_edit .active.icon-preview:after {
	Z-INDEX: 3; POSITION: absolute; MARGIN: -10px 0px 0px -520px; WIDTH: =
600px; HEIGHT: 40px; CONTENT: ''
}
BODY > .pop_edit .cm_box {
	POSITION: relative
}
BODY > .pop_edit .cm_box .cm_dialog {
	Z-INDEX: 10000; POSITION: fixed; WIDTH: 100%; DISPLAY: none; HEIGHT: =
100%; TOP: 0px; LEFT: 0px
}
BODY > .pop_edit .pop_cm {
	Z-INDEX: 10001; BORDER-BOTTOM: #ccc 1px solid; POSITION: absolute; =
BORDER-LEFT: #ccc 1px solid; PADDING-BOTTOM: 10px; MARGIN: -5px 0px 0px =
275px; PADDING-LEFT: 10px; WIDTH: 300px; PADDING-RIGHT: 10px; DISPLAY: =
none; BACKGROUND: #fff; BORDER-TOP: #ccc 1px solid; TOP: 48px; =
BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 10px; box-shadow: 2px 2px =
10px rgba(0, 0, 0, 0.3)
}
BODY > .pop_edit .pop_cm:after {
	BORDER-BOTTOM: #ccc 10px solid; POSITION: absolute; BORDER-LEFT: =
transparent 10px solid; BORDER-TOP: transparent 10px solid; CONTENT: ''; =
TOP: -20px; BORDER-RIGHT: transparent 10px solid; LEFT: 40px
}
BODY > .pop_edit .pop_cm:before {
	BORDER-BOTTOM: #ccc 10px solid; POSITION: absolute; BORDER-LEFT: =
transparent 10px solid; BORDER-TOP: transparent 10px solid; CONTENT: ''; =
TOP: -20px; BORDER-RIGHT: transparent 10px solid; LEFT: 40px
}
BODY > .pop_edit .pop_cm:after {
	BORDER-BOTTOM-COLOR: #fff; TOP: -19px
}
BODY > .pop_edit .cm_add_img.pop_cm {
	MARGIN-LEFT: 310px
}
BODY > .pop_edit .pop_cm .nav-tabs {
	BORDER-BOTTOM: #ddd 1px solid; PADDING-BOTTOM: 5px; MARGIN: -5px -10px =
10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; HEIGHT: 30px; FONT-SIZE: =
12px; PADDING-TOP: 5px
}
BODY > .pop_edit .pop_cm .nav-tabs A {
	BORDER-BOTTOM: transparent 1px solid; BORDER-LEFT: transparent 1px =
solid; PADDING-BOTTOM: 3px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; =
DISPLAY: inline-block; HEIGHT: 25px; COLOR: #999; BORDER-TOP: =
transparent 1px solid; BORDER-RIGHT: transparent 1px solid; =
TEXT-DECORATION: none; PADDING-TOP: 3px
}
BODY > .pop_edit .pop_cm .nav-tabs A.active {
	BORDER-BOTTOM-COLOR: #fff; BORDER-TOP-COLOR: #ddd; COLOR: #666; =
BORDER-RIGHT-COLOR: #ddd; BORDER-LEFT-COLOR: #ddd; border-radius: 3px =
3px 0 0
}
BODY > .pop_edit .pop_cm .up_img_loading {
	Z-INDEX: 2; POSITION: absolute; TEXT-ALIGN: center; LINE-HEIGHT: 100px; =
WIDTH: 100%; DISPLAY: none; HEIGHT: 100%; TOP: 0px; LEFT: 0px
}
BODY > .pop_edit .pop_cm .active.up_img_loading {
	DISPLAY: block
}
BODY > .pop_edit .pop_cm .tab_panel {
	DISPLAY: none
}
BODY > .pop_edit .pop_cm .active.tab_panel {
	DISPLAY: block
}
BODY > .pop_edit .pop_cm .set_img {
	POSITION: relative; MARGIN: 0px; HEIGHT: 101px
}
BODY > .pop_edit .pop_cm .set_img IFRAME {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; WIDTH: 100%; HEIGHT: 101px; =
BORDER-TOP: 0px; BORDER-RIGHT: 0px
}
BODY > .pop_edit .pop_cm .set_img .markdown_file_name {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 5px; WIDTH: 100%; PADDING-RIGHT: =
5px; COLOR: #999; OVERFLOW: hidden; PADDING-TOP: 5px
}
BODY > .pop_edit .pop_cm .set_img LABEL {
	POSITION: absolute; BORDER-LEFT: #ccc 1px solid; PADDING-BOTTOM: 0px; =
LINE-HEIGHT: 28px; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; BACKGROUND: =
#ddd 0px 0px; FONT-SIZE: 12px; TOP: 0px; RIGHT: 0px; FONT-WEIGHT: =
normal; PADDING-TOP: 0px
}
BODY > .pop_edit .pop_cm .markdown_file_msg {
	MARGIN: -10px 0px 10px; FONT-SIZE: 14px
}
BODY > .pop_edit .pop_cm INPUT {
	BORDER-BOTTOM: #ddd 1px solid; BORDER-LEFT: #ddd 1px solid; =
PADDING-BOTTOM: 5px; PADDING-LEFT: 10px; WIDTH: 278px; PADDING-RIGHT: =
10px; MARGIN-BOTTOM: 10px; BORDER-TOP: #ddd 1px solid; BORDER-RIGHT: =
#ddd 1px solid; PADDING-TOP: 5px
}
BODY > .pop_edit .pop_cm .text-right {
	TEXT-ALIGN: right
}
BODY > .pop_edit .pop_cm .btn {
	PADDING-BOTTOM: 2px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; DISPLAY: =
inline-block; FONT: 12px/20px "microsoft yahei"; BACKGROUND: #999; =
COLOR: #fff; CURSOR: pointer; PADDING-TOP: 2px
}
BODY > .pop_edit H3 {
	BORDER-BOTTOM: #f0f0f0 1px solid; POSITION: relative; LINE-HEIGHT: =
50px; MARGIN-TOP: 0px; PADDING-LEFT: 19px; FONT-FAMILY: microsoft yahei; =
MARGIN-BOTTOM: 10px; HEIGHT: 50px; COLOR: #666; FONT-SIZE: 18px; =
FONT-WEIGHT: normal
}
BODY > .pop_edit H3 .err {
	POSITION: absolute; TEXT-ALIGN: left; MARGIN: 0px; PADDING-LEFT: 5px; =
WIDTH: 99%; BOTTOM: -23px; FONT-SIZE: 12px; TOP: inherit; LEFT: 0px
}
BODY > .pop_edit .close {
	POSITION: absolute; BACKGROUND: none transparent scroll repeat 0% 0%; =
COLOR: #555; FONT-SIZE: 30px; TOP: 8px; RIGHT: 19px; TEXT-DECORATION: =
none
}
BODY > .pop_edit .close:hover {
	COLOR: #58c
}
BODY > .pop_edit .ask_float_channel:link {
	COLOR: #458bca; CURSOR: pointer
}
BODY > .pop_edit .ask_float_channel:visited {
	COLOR: #458bca; CURSOR: pointer
}
BODY > .pop_edit .ask_float_channel:hover {
	COLOR: #458bca; CURSOR: pointer
}
BODY > .pop_edit .ask_float_channel:focus {
	COLOR: #458bca; CURSOR: pointer
}
BODY > .pop_edit .ask_float_span {
	POSITION: absolute; FONT-FAMILY: "microsoft yahei"; COLOR: #666; =
FONT-SIZE: 14px; TOP: 14px; LEFT: 70px
}
BODY > .pop_edit .context {
	PADDING-BOTTOM: 10px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; COLOR: =
#333; FONT-SIZE: 16px; PADDING-TOP: 0px
}
BODY > .pop_edit .red {
	POSITION: absolute; PADDING-BOTTOM: 0px; MARGIN-TOP: -10px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: inline-block; COLOR: =
#f00; TOP: 50%; PADDING-TOP: 0px; LEFT: -11px
}
BODY > .pop_edit .success {
	TEXT-ALIGN: right; PADDING-BOTTOM: 20px; PADDING-LEFT: 20px; =
PADDING-RIGHT: 20px; BORDER-TOP: #f0f0f0 1px solid; PADDING-TOP: 15px
}
BODY > .pop_edit .success A {
	TEXT-ALIGN: center; LINE-HEIGHT: 28px; WIDTH: 80px; ZOOM: 1; DISPLAY: =
inline-block; HEIGHT: 28px; COLOR: #fff; MARGIN-LEFT: 10px; FONT-SIZE: =
14px; TEXT-DECORATION: none
}
BODY > .pop_edit .success .cancel {
	BACKGROUND: #999
}
BODY > .pop_edit .success .ok {
	BACKGROUND: #be0000
}
BODY > .pop_edit .success .del {
	DISPLAY: none; BACKGROUND: #999
}
.ask_first {
	POSITION: absolute; TEXT-ALIGN: left; WIDTH: 667px; DISPLAY: none; =
HEIGHT: 560px; TOP: 250px; LEFT: 50%
}
.ask_first .askFirst_desc {
	HEIGHT: 370px
}
.ask_first .askFirst_desc .afd_p {
	LINE-HEIGHT: 21px; COLOR: #333; FONT-SIZE: 14px
}
.ask_first .askFirst_desc .afd_p A {
	COLOR: #2b81a9; CURSOR: pointer
}
.ask_first .askFirst_se {
	MARGIN-BOTTOM: 10px; COLOR: #333; FONT-SIZE: 16px
}
.ask_first .search_div {
	WIDTH: 100%; MARGIN-BOTTOM: 10px; HEIGHT: 35px; MARGIN-RIGHT: 20px
}
.ask_first .search_div INPUT {
	WIDTH: 100%
}
.ask_second {
	TEXT-ALIGN: left; DISPLAY: none
}
.ask_second .err_div {
	BORDER-BOTTOM: #ffdada 1px solid; BORDER-LEFT: #ffdada 1px solid; =
WIDTH: 100%; MARGIN-BOTTOM: 5px; HEIGHT: 28px; BORDER-TOP: #ffdada 1px =
solid; BORDER-RIGHT: #ffdada 1px solid
}
.ask_second .err_div .err_ico {
	MARGIN-TOP: 6px; WIDTH: 16px; DISPLAY: inline-block; BACKGROUND: =
url(../images/ph_pop_err_icon.fw.png) no-repeat 0px 0px; FLOAT: left; =
HEIGHT: 16px; MARGIN-LEFT: 5px; MARGIN-RIGHT: 10px
}
.ask_second .err_div .err_txt {
	MARGIN-TOP: 2px; DISPLAY: inline-block; FLOAT: left; HEIGHT: 16px; =
COLOR: #b74d46; FONT-SIZE: 12px
}
.ask_second .input_div {
	WIDTH: 100%; MARGIN-BOTTOM: 10px; HEIGHT: 35px; MARGIN-RIGHT: 20px
}
.ask_second .input_div INPUT {
	BOX-SIZING: border-box; BORDER-BOTTOM: #dcdcdc 1px solid; BORDER-LEFT: =
#dcdcdc 1px solid; TEXT-INDENT: 5px; WIDTH: 100%; HEIGHT: 35px; COLOR: =
#656565; FONT-SIZE: 16px; BORDER-TOP: #dcdcdc 1px solid; BORDER-RIGHT: =
#dcdcdc 1px solid
}
.ask_second .second_se {
	MARGIN: 5px 0px; DISPLAY: inline-block; COLOR: #656565; FONT-SIZE: 16px
}
.ask_second .div_rich_editor {
	BORDER-BOTTOM: #ddd 1px solid; POSITION: relative; BORDER-LEFT: #ddd =
1px solid; WIDTH: 100%; HEIGHT: 245px; BORDER-TOP: #ddd 1px solid; =
BORDER-RIGHT: #ddd 1px solid
}
.ask_second .div_tags {
	WIDTH: 100%; HEIGHT: 35px
}
.ask_second .tags_con {
	BORDER-BOTTOM: #dcdcdc 1px solid; BORDER-LEFT: #dcdcdc 1px solid; =
PADDING-BOTTOM: 0px; OVERFLOW-Y: auto; PADDING-LEFT: 5px; WIDTH: 100%; =
PADDING-RIGHT: 5px; FLOAT: left; HEIGHT: 35px; FONT-SIZE: 14px; =
BORDER-TOP: #dcdcdc 1px solid; BORDER-RIGHT: #dcdcdc 1px solid; =
PADDING-TOP: 0px
}
.ask_second .focus.tags_con {
	BORDER-BOTTOM-COLOR: #59d; BORDER-TOP-COLOR: #59d; OUTLINE-STYLE: =
solid; OUTLINE-COLOR: #6be; OUTLINE-WIDTH: 1px; BORDER-RIGHT-COLOR: =
#59d; BORDER-LEFT-COLOR: #59d
}
.ask_second .tags_con INPUT {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; MARGIN-TOP: 7px; OUTLINE-STYLE: =
none; OUTLINE-COLOR: invert; OUTLINE-WIDTH: medium; WIDTH: 200px; FLOAT: =
left; HEIGHT: 20px; BORDER-TOP: 0px; BORDER-RIGHT: 0px
}
.ask_second .tags_con .tag {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; MARGIN-TOP: 5px; PADDING-LEFT: =
10px; PADDING-RIGHT: 10px; DISPLAY: block; BACKGROUND: #f0f4f7; FLOAT: =
left; HEIGHT: 22px; COLOR: #3d8daf; OVERFLOW: hidden; MARGIN-RIGHT: 5px; =
PADDING-TOP: 0px; border-radius: 15px
}
.ask_second .tags_con .tag SPAN {
	DISPLAY: block; FLOAT: left
}
.ask_second .tags_con .tag A {
	DISPLAY: block; FLOAT: left; HEIGHT: 20px; COLOR: #49b; MARGIN-LEFT: =
5px; FONT-SIZE: 14px; TEXT-DECORATION: none
}
.ask_second .tags_con .tag A:hover {
	COLOR: #c30
}
.ask_second .drt_tagRecomm {
	MARGIN-TOP: 20px; MARGIN-BOTTOM: 15px; HEIGHT: 20px
}
.ask_second .drt_tagRecomm .drt_tit {
	COLOR: #656565; FONT-SIZE: 14px
}
.ask_second .left_area {
	DISPLAY: inline-block; FLOAT: left
}
.ask_second .left_area > * {
	VERTICAL-ALIGN: middle
}
.ask_second .left_area .wyxs {
	COLOR: #666; MARGIN-LEFT: 10px; FONT-SIZE: 14px; MARGIN-RIGHT: 10px
}
.ask_second .left_area .cb_num {
	BORDER-BOTTOM: #dcdcdc 1px solid; BORDER-LEFT: #dcdcdc 1px solid; =
LINE-HEIGHT: 23px; WIDTH: 157px; BORDER-TOP: #dcdcdc 1px solid; =
BORDER-RIGHT: #dcdcdc 1px solid
}
.ask_second .left_area .phib_rii {
	TEXT-ALIGN: left; WIDTH: 183px; DISPLAY: inline-block; HEIGHT: 20px; =
COLOR: #f9bf47; MARGIN-LEFT: 10px
}
.ask_second .left_area .phib_rii SPAN {
	LINE-HEIGHT: 21px; MARGIN-TOP: 0px; PADDING-LEFT: 20px; DISPLAY: =
inline-block; BACKGROUND: url(../images/ph_right_cb.fw.png) no-repeat =
0px 2px; HEIGHT: 25px
}
#float_ask_img {
	Z-INDEX: 9; POSITION: fixed; TOP: 200px; RIGHT: 50px
}
.complete_list {
	Z-INDEX: 9999; BORDER-BOTTOM: #ccc 1px solid; POSITION: fixed; =
BORDER-LEFT: #ccc 1px solid; PADDING-BOTTOM: 1px; MARGIN: 0px; =
PADDING-LEFT: 1px; PADDING-RIGHT: 1px; DISPLAY: none; BACKGROUND: #fff; =
OVERFLOW: hidden; BORDER-TOP: #ccc 1px solid; BORDER-RIGHT: #ccc 1px =
solid; PADDING-TOP: 1px; border-radius: 3px; box-shadow: 2px 2px 5px =
rgba(0, 0, 0, 0.3)
}
.complete_list LI {
	PADDING-BOTTOM: 2px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; FONT: =
12px/20px "microsoft yahei"; CURSOR: default; PADDING-TOP: 2px
}
.complete_list .outborder {
	BACKGROUND: #f5f5f5
}
.ask_second .se_key {
	TEXT-ALIGN: center; PADDING-BOTTOM: 0px; LINE-HEIGHT: 21px; =
BACKGROUND-COLOR: #f2f2f2; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; =
DISPLAY: inline-block; HEIGHT: 21px; COLOR: #656565; FONT-SIZE: 12px; =
FONT-WEIGHT: normal; MARGIN-RIGHT: 15px; PADDING-TOP: 0px; =
border-radius: 10px
}
.ask_second .se_key:hover {
	BACKGROUND-COLOR: #bd1921; COLOR: #fff; TEXT-DECORATION: none
}
.ask_second TEXTAREA {
	FONT-FAMILY: Consolas, Menlo, Monaco, Lucida Console, Liberation Mono, =
DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace, =
serif; FONT-SIZE: 12px
}
.ask_second PRE {
	PADDING-BOTTOM: 5px; MARGIN: 0px 0px 7px; PADDING-LEFT: 5px; WIDTH: =
auto; PADDING-RIGHT: 5px; FONT-FAMILY: Consolas, Menlo, Monaco, Lucida =
Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, =
Courier New, monospace, serif; BACKGROUND: #eee; MAX-HEIGHT: 600px; =
OVERFLOW: auto; PADDING-TOP: 5px
}
.ask_second CODE {
	BORDER-BOTTOM: #ddd 1px solid; BORDER-LEFT: #ddd 1px solid; =
PADDING-BOTTOM: 2px; BACKGROUND-COLOR: #eee; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; DISPLAY: block; FONT-FAMILY: Consolas, Menlo, =
Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream =
Vera Sans Mono, Courier New, monospace, serif; COLOR: #666; BORDER-TOP: =
#ddd 1px solid; BORDER-RIGHT: #ddd 1px solid; PADDING-TOP: 2px; =
border-radius: 3px
}
.ask_second P CODE {
	PADDING-BOTTOM: 1px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; =
PADDING-TOP: 1px
}
.ask_second BLOCKQUOTE {
	PADDING-BOTTOM: 1px; BACKGROUND-COLOR: #eee; PADDING-LEFT: 10px; =
PADDING-RIGHT: 10px; PADDING-TOP: 10px
}
.ask_second HR {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BACKGROUND-COLOR: #aaa; MARGIN: =
0px 0px 20px; HEIGHT: 1px; BORDER-TOP: 0px; BORDER-RIGHT: 0px
}
.wmd-prompt-dialog * {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.ask_second .str {
	COLOR: #800000
}
.ask_second .kwd {
	COLOR: #00008b; FONT-WEIGHT: bold
}
.ask_second .com {
	COLOR: #808080
}
.ask_second .typ {
	COLOR: #2b91af; FONT-WEIGHT: bold
}
.ask_second .lit {
	COLOR: #800000
}
.ask_second .pun {
	COLOR: #000
}
.ask_second .pln {
	COLOR: #000
}
.ask_second .tag {
	COLOR: #800000; FONT-WEIGHT: bold
}
.ask_second .atn {
	COLOR: #f00
}
.ask_second .atv {
	COLOR: #00f
}
.ask_second .dec {
	COLOR: #800080
}
.ask_second .wmd {
	POSITION: relative; WIDTH: 660px
}
.ask_second #wmd-button-bar {
	BACKGROUND-COLOR: #fff; MARGIN: 10px 0px 0px; WIDTH: 405px; DISPLAY: =
inline-block; HEIGHT: 25px; CLEAR: both
}
.ask_second #wmd-input {
	BORDER-BOTTOM: #dcdcdc 1px solid; BORDER-LEFT: #dcdcdc 1px solid; =
PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN: 0px; PADDING-LEFT: 3px; =
WIDTH: 626px; PADDING-RIGHT: 3px; HEIGHT: 200px; BORDER-TOP: #dcdcdc 1px =
solid; BORDER-RIGHT: #dcdcdc 1px solid; PADDING-TOP: 0px; resize: none
}
.ask_second #wmd-preview {
	BORDER-BOTTOM: #ccc 2px dotted; BORDER-LEFT: #ccc 2px dotted; =
PADDING-BOTTOM: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px; DISPLAY: =
none; CLEAR: both; FONT-SIZE: 12px; BORDER-TOP: #ccc 2px dotted; =
BORDER-RIGHT: #ccc 2px dotted; PADDING-TOP: 3px
}
.grippie {
	BACKGROUND-IMAGE: url(../images/drag.gif); BORDER-BOTTOM: #ddd 1px =
solid; BORDER-LEFT: #ddd 1px solid; LINE-HEIGHT: 9px; BACKGROUND-COLOR: =
#eee; DISPLAY: none; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: =
center 1px; MARGIN-BOTTOM: 6px; HEIGHT: 9px; OVERFLOW: hidden; =
BORDER-TOP: #ddd 0px solid; CURSOR: s-resize; BORDER-RIGHT: #ddd 1px =
solid
}
#wmd-preview P {
	WORD-WRAP: break-word
}
.wmd-button-row {
	POSITION: relative; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; HEIGHT: 20px; PADDING-TOP: 0px
}
.wmd-spacer {
	LIST-STYLE: none none outside; POSITION: absolute; BACKGROUND-COLOR: =
silver; WIDTH: 1px; DISPLAY: inline-block; HEIGHT: 20px; MARGIN-LEFT: =
14px
}
.wmd-button {
	LIST-STYLE: none none outside; BACKGROUND-IMAGE: =
url(../images/wmd-buttons.png); POSITION: absolute; WIDTH: 20px; =
DISPLAY: inline-block; BACKGROUND-REPEAT: no-repeat; =
BACKGROUND-POSITION: 0px 0px; HEIGHT: 20px; MARGIN-LEFT: 5px; =
MARGIN-RIGHT: 5px
}
.wmd-button > A {
	POSITION: absolute; WIDTH: 20px; DISPLAY: inline-block; HEIGHT: 20px
}
.wmd-bold-button {
	BACKGROUND-POSITION: 0px 0px; LEFT: 0px
}
.wmd-italic-button {
	BACKGROUND-POSITION: -20px 0px; LEFT: 25px
}
.wmd-spacer1 {
	LEFT: 50px
}
.wmd-link-button {
	BACKGROUND-POSITION: -40px 0px; LEFT: 75px
}
.wmd-quote-button {
	BACKGROUND-POSITION: -60px 0px; LEFT: 100px
}
.wmd-code-button {
	BACKGROUND-POSITION: -80px 0px; LEFT: 125px
}
.wmd-image-button {
	BACKGROUND-POSITION: -100px 0px; LEFT: 150px
}
.wmd-spacer2 {
	LEFT: 175px
}
.wmd-olist-button {
	BACKGROUND-POSITION: -120px 0px; LEFT: 200px
}
.wmd-ulist-button {
	BACKGROUND-POSITION: -140px 0px; LEFT: 225px
}
.wmd-heading-button {
	BACKGROUND-POSITION: -160px 0px; LEFT: 250px
}
.wmd-hr-button {
	BACKGROUND-POSITION: -180px 0px; LEFT: 275px
}
.wmd-spacer3 {
	LEFT: 300px
}
.wmd-undo-button {
	BACKGROUND-POSITION: -200px 0px; LEFT: 325px
}
.wmd-redo-button {
	BACKGROUND-POSITION: -220px 0px; LEFT: 350px
}
.wmd-help-button {
	BACKGROUND-POSITION: -240px 0px; RIGHT: 0px
}
.wmd-at-button {
	LEFT: 375px
}
.wmd-prompt-background {
	BACKGROUND-COLOR: black
}
.wmd-prompt-dialog {
	BORDER-BOTTOM: #999 3px solid; BORDER-LEFT: #fff 3px solid; =
BACKGROUND-COLOR: #ddd; BORDER-TOP: #fff 3px solid; BORDER-RIGHT: #999 =
3px solid
}
.wmd-mini-button {
	PADDING-BOTTOM: 3px; MARGIN: 5px; PADDING-LEFT: 8px; PADDING-RIGHT: =
8px; DISPLAY: inline-block; COLOR: #444; TEXT-DECORATION: none; =
PADDING-TOP: 3px
}
.wmd-mini-button:visited {
	PADDING-BOTTOM: 3px; MARGIN: 5px; PADDING-LEFT: 8px; PADDING-RIGHT: =
8px; DISPLAY: inline-block; COLOR: #444; TEXT-DECORATION: none; =
PADDING-TOP: 3px
}
.wmd-mini-button:hover {
	BACKGROUND-COLOR: #ccc; TEXT-DECORATION: none; border-radius: 15px 15px =
15px 15px; -moz-border-radius: 15px 15px 15px 15px; =
-webkit-border-radius: 15px 15px 15px 15px
}
.selected.wmd-mini-button {
	BACKGROUND-COLOR: #888; COLOR: #eee; TEXT-DECORATION: none; =
border-radius: 15px 15px 15px 15px; -moz-border-radius: 15px 15px 15px =
15px; -webkit-border-radius: 15px 15px 15px 15px
}
.selected.wmd-mini-button:hover {
	BACKGROUND-COLOR: #888; COLOR: #eee
}
.dialog-input {
	BORDER-BOTTOM: #999 1px solid; BORDER-LEFT: #999 1px solid; =
PADDING-BOTTOM: 0px; PADDING-LEFT: 2px; PADDING-RIGHT: 0px; FONT-FAMILY: =
Trebuchet MS, Liberation Sans, DejaVu Sans, sans-serif; HEIGHT: 23px; =
BORDER-TOP: #999 1px solid; BORDER-RIGHT: #999 1px solid; PADDING-TOP: =
3px
}
#upload-url-input INPUT {
	BORDER-BOTTOM: #999 1px solid; BORDER-LEFT: #999 1px solid; =
PADDING-BOTTOM: 0px; PADDING-LEFT: 2px; PADDING-RIGHT: 0px; FONT-FAMILY: =
Trebuchet MS, Liberation Sans, DejaVu Sans, sans-serif; HEIGHT: 23px; =
BORDER-TOP: #999 1px solid; BORDER-RIGHT: #999 1px solid; PADDING-TOP: =
3px
}
#shadow-filename {
	BORDER-BOTTOM: #999 1px solid; BORDER-LEFT: #999 1px solid; =
PADDING-BOTTOM: 0px; PADDING-LEFT: 2px; PADDING-RIGHT: 0px; FONT-FAMILY: =
Trebuchet MS, Liberation Sans, DejaVu Sans, sans-serif; HEIGHT: 23px; =
BORDER-TOP: #999 1px solid; BORDER-RIGHT: #999 1px solid; PADDING-TOP: =
3px
}
.dialog-button {
	BORDER-BOTTOM: #999 1px solid; BORDER-LEFT: #999 1px solid; =
BACKGROUND-COLOR: #f0f0f0; FONT-FAMILY: Trebuchet MS, Liberation Sans, =
DejaVu Sans, sans-serif; HEIGHT: 28px; BORDER-TOP: #999 1px solid; =
CURSOR: pointer; BORDER-RIGHT: #999 1px solid
}
#ok-dialog-button {
	BORDER-BOTTOM: #999 1px solid; BORDER-LEFT: #999 1px solid; =
BACKGROUND-COLOR: #f0f0f0; FONT-FAMILY: Trebuchet MS, Liberation Sans, =
DejaVu Sans, sans-serif; HEIGHT: 28px; BORDER-TOP: #999 1px solid; =
CURSOR: pointer; BORDER-RIGHT: #999 1px solid
}
#close-dialog-button {
	BORDER-BOTTOM: #999 1px solid; BORDER-LEFT: #999 1px solid; =
BACKGROUND-COLOR: #f0f0f0; FONT-FAMILY: Trebuchet MS, Liberation Sans, =
DejaVu Sans, sans-serif; HEIGHT: 28px; BORDER-TOP: #999 1px solid; =
CURSOR: pointer; BORDER-RIGHT: #999 1px solid
}
#choose-file {
	BORDER-BOTTOM: #999 1px solid; BORDER-LEFT: #999 1px solid; =
BACKGROUND-COLOR: #f0f0f0; FONT-FAMILY: Trebuchet MS, Liberation Sans, =
DejaVu Sans, sans-serif; HEIGHT: 28px; BORDER-TOP: #999 1px solid; =
CURSOR: pointer; BORDER-RIGHT: #999 1px solid
}
#image-upload-progress {
	TEXT-INDENT: -9999px; BACKGROUND: url(images/progress-dots.gif) =
no-repeat center center; HEIGHT: 5px
}
#qlink_box {
	Z-INDEX: 999; BORDER-BOTTOM: #efefef 1px solid; POSITION: absolute; =
BORDER-LEFT: #efefef 1px solid; PADDING-BOTTOM: 2px; PADDING-LEFT: 3px; =
PADDING-RIGHT: 3px; DISPLAY: none; BACKGROUND: #efefef; BORDER-TOP: =
#efefef 1px solid; BORDER-RIGHT: #efefef 1px solid; PADDING-TOP: 3px; =
border-radius: 5px; -moz-border-radius: 5px; -webkit-border-radius: 5px
}
#qlink_box INPUT {
	BORDER-BOTTOM: #b1b1b1 1px solid; BORDER-LEFT: #b1b1b1 1px solid; =
PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; WIDTH: 400px; PADDING-RIGHT: =
0px; BACKGROUND: #fff; HEIGHT: 24px; FONT-SIZE: 100%; BORDER-TOP: =
#b1b1b1 1px solid; BORDER-RIGHT: #b1b1b1 1px solid; PADDING-TOP: 0px; =
border-radius: 2px; -moz-border-radius: 2px; -webkit-border-radius: 2px
}
#qlink_suggest {
	BORDER-BOTTOM: #b1b1b1 1px solid; POSITION: absolute; BORDER-LEFT: =
#b1b1b1 1px solid; PADDING-BOTTOM: 1px; PADDING-LEFT: 0px; WIDTH: 400px; =
PADDING-RIGHT: 0px; BACKGROUND: #fff; BORDER-TOP: 0px; TOP: 44px; =
BORDER-RIGHT: #b1b1b1 1px solid; PADDING-TOP: 1px; LEFT: 3px
}
#qlink_suggest DL {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; LIST-STYLE-IMAGE: none; PADDING-TOP: 0px
}
#qlink_suggest DD {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 28px; MARGIN: 0px; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; DISPLAY: block; PADDING-TOP: 0px
}
#qlink_suggest DD.active {
	BACKGROUND: #efefef
}
#qlink_suggest DD:hover {
	BACKGROUND: #efefef; CURSOR: pointer
}
.ask_second TEXTAREA {
	BORDER-BOTTOM: #808080 1px solid; BORDER-LEFT: #808080 1px solid; =
BORDER-TOP: #808080 1px solid; BORDER-RIGHT: #808080 1px solid
}
.ask_second #notes-preview {
	BORDER-BOTTOM: #808080 1px solid; BORDER-LEFT: #808080 1px solid; =
BORDER-TOP: #808080 1px solid; BORDER-RIGHT: #808080 1px solid
}
#notes-preview {
	OVERFLOW-X: hidden
}
BODY .searchContainer {
	BORDER-BOTTOM: #ddd 1px solid; POSITION: absolute; BORDER-LEFT: #ddd =
1px solid; BACKGROUND-COLOR: #fff; MIN-HEIGHT: 90px; WIDTH: 628px; =
DISPLAY: none; BORDER-TOP: #ddd 1px solid; BORDER-RIGHT: #ddd 1px solid
}
BODY .searchContainer SPAN {
	LINE-HEIGHT: 30px
}
BODY .searchContainer .sTitle {
	BORDER-BOTTOM: #ddd 1px solid; LINE-HEIGHT: 30px; COLOR: #656565; =
MARGIN-LEFT: 10px; FONT-SIZE: 14px; MARGIN-RIGHT: 10px
}
BODY .searchContainer .sItem {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; CURSOR: =
pointer; PADDING-TOP: 0px
}
BODY .searchContainer .sItem .sfirst {
	TEXT-ALIGN: left; WIDTH: 85%; TEXT-OVERFLOW: ellipsis; WHITE-SPACE: =
nowrap; FLOAT: left; COLOR: #999; FONT-SIZE: 14px; OVERFLOW: hidden
}
BODY .searchContainer .sItem .ssecond {
	TEXT-ALIGN: right; WIDTH: 15%; WHITE-SPACE: nowrap; FLOAT: right; =
COLOR: #999; FONT-SIZE: 14px
}
BODY .searchContainer .sItemHover {
	BACKGROUND-COLOR: #ccc; COLOR: #fff
}
BODY .searchContainer .sItemHover .sfirst {
	COLOR: #fff
}
BODY .searchContainer .sItemHover .ssecond {
	COLOR: #fff
}
BODY .searchContainer .sFooter {
	BACKGROUND-COLOR: #f5f5f5; BORDER-TOP: #ddd 1px solid
}
BODY .searchContainer .sFooter .sFirstNewAsk {
	LINE-HEIGHT: 27px; FLOAT: right; COLOR: #656565; FONT-SIZE: 14px; =
CURSOR: pointer; MARGIN-RIGHT: 10px; TEXT-DECORATION: none
}
BODY .searchContainer .sFooter A:link {
	COLOR: #656565
}
.ask_second .searchContainer .sFooter A:visited {
	COLOR: #656565
}
BODY .searchContainer .sFooter A:hover {
	COLOR: #be1a21
}
BODY .searchContainer .sFooter A:focus {
	COLOR: #be1a21
}
#com-ask-float-block {
	Z-INDEX: 9999999; BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; =
BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 90px; BOTTOM: 124px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/common_float_block.png) no-repeat 0px -318px; =
HEIGHT: 28px; COLOR: #fff; BORDER-TOP: 0px; CURSOR: pointer; RIGHT: =
40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; border-radius: 0
}
#com-ask-float-block:hover {
	BACKGROUND: url(../images/common_float_block.png) no-repeat -100px =
-318px
}
#com-app-float-block {
	Z-INDEX: 999998; BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; =
BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 90px; BOTTOM: 124px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/common_float_block.png) no-repeat 0px 0px; =
HEIGHT: 28px; COLOR: #fff; BORDER-TOP: 0px; CURSOR: pointer; RIGHT: =
40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; border-radius: 0
}
#com-app-float-block:hover {
	BACKGROUND: url(../images/common_float_block.png) no-repeat -100px 0px
}
#com-appcode-float-block {
	Z-INDEX: 9999999; BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; =
BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 90px; BOTTOM: 124px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/common_float_block.png) #fff no-repeat 0px =
-198px; HEIGHT: 112px; COLOR: #fff; BORDER-TOP: 0px; CURSOR: pointer; =
RIGHT: 40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; border-radius: 0
}
#com-appcode-float-block:hover {
	BACKGROUND: url(../images/common_float_block.png) #fff no-repeat -100px =
-198px
}
#com-appcode-float-block:hover #appcode-close {
	BACKGROUND: url(../images/common_float_block.png) #fff no-repeat -177px =
-201px
}
#com-appcode-float-block #appcode-close {
	MARGIN-TOP: 3px; WIDTH: 10px; DISPLAY: inline-block; BACKGROUND: =
url(../images/common_float_block.png) no-repeat -77px -201px; FLOAT: =
right; HEIGHT: 10px; CURSOR: pointer; MARGIN-RIGHT: 3px
}
#com-quick-reply {
	Z-INDEX: 9999999; BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; =
BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 90px; BOTTOM: 82px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/common_float_block.png) no-repeat 0px -33px; =
HEIGHT: 28px; COLOR: #fff; BORDER-TOP: 0px; CURSOR: pointer; RIGHT: =
40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; border-radius: 0
}
#com-quick-reply:hover {
	BACKGROUND: url(../images/common_float_block.png) no-repeat -100px =
-33px
}
#com-d-top-a {
	Z-INDEX: 9999999; BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; =
BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 90px; BOTTOM: 40px; PADDING-RIGHT: 0px; =
DISPLAY: none; BACKGROUND: url(../images/common_float_block.png) =
no-repeat 0px -165px; HEIGHT: 28px; COLOR: #fff; BORDER-TOP: 0px; =
CURSOR: pointer; RIGHT: 40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; =
border-radius: 0
}
#com-d-top-a:hover {
	BACKGROUND: url(../images/common_float_block.png) no-repeat -100px =
-165px
}
#com-edu-call-center {
	Z-INDEX: 9999999; BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; =
BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 90px; BOTTOM: 40px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/common_float_block.png) no-repeat 0px -132px; =
HEIGHT: 28px; COLOR: #fff; BORDER-TOP: 0px; CURSOR: pointer; RIGHT: =
40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; border-radius: 0
}
#com-edu-call-center:hover {
	BACKGROUND: url(../images/common_float_block.png) no-repeat -100px =
-132px
}
#com-quick-reply-bbs {
	Z-INDEX: 9999999; BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; =
BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 90px; BOTTOM: 82px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/common_float_block.png) no-repeat 0px -33px; =
HEIGHT: 28px; COLOR: #fff; BORDER-TOP: 0px; CURSOR: pointer; RIGHT: =
40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; border-radius: 0
}
#com-quick-reply-bbs:hover {
	BACKGROUND: url(../images/common_float_block.png) no-repeat -100px =
-33px
}
#com-back-channel {
	Z-INDEX: 9999999; BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; =
BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 90px; BOTTOM: 40px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/common_float_block.png) no-repeat 0px -66px; =
HEIGHT: 28px; COLOR: #fff; BORDER-TOP: 0px; CURSOR: pointer; RIGHT: =
40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; border-radius: 0
}
#com-back-channel:hover {
	BACKGROUND: url(../images/common_float_block.png) no-repeat -100px =
-66px
}
#com-back-home {
	Z-INDEX: 9999999; BORDER-BOTTOM: 0px; POSITION: fixed; MIN-WIDTH: 40px; =
BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 90px; BOTTOM: 40px; PADDING-RIGHT: 0px; =
BACKGROUND: url(../images/common_float_block.png) no-repeat 0px -99px; =
HEIGHT: 28px; COLOR: #fff; BORDER-TOP: 0px; CURSOR: pointer; RIGHT: =
40px; BORDER-RIGHT: 0px; PADDING-TOP: 0px; border-radius: 0
}
#com-back-home:hover {
	BACKGROUND: url(../images/common_float_block.png) no-repeat -100px =
-99px
}
#previw-button {
	MARGIN-TOP: 12px; WIDTH: 44px; BACKGROUND: =
url(../images/preview-img.png); FLOAT: right; HEIGHT: 14px; =
MARGIN-RIGHT: 5px
}
.editor-preview IMG {
	MAX-WIDTH: 80%; MAX-HEIGHT: 200px
}
#picture_dialog_form {
	POSITION: fixed; WIDTH: 1px; HEIGHT: 1px; OVERFLOW: hidden; TOP: 50%
}
.editor-toolbar .icon-preview:before {
	CONTENT: "\f06e"
}
.editor-toolbar .active.icon-preview:before {
	CONTENT: "\f070"
}
.editor-toolbar .icon-info:before {
	CONTENT: "\f05a"
}
.editor-toolbar .icon-headline:before {
	FONT: bold 18px/24px "Times"; CONTENT: "H1"
}
.editor-toolbar .icon-heading:before {
	FONT: bold 18px/24px "Times"; CONTENT: "H2"
}
.editor-toolbar .icon-code {
	MARGIN-RIGHT: 6px
}
.editor-toolbar .icon-code:before {
	LETTER-SPACING: -3px; CONTENT: "</>"; FONT-WEIGHT: bold
}
.pop_edit.ask_second .CodeMirror {
	WIDTH: 630px; HEIGHT: 200px
}
.CodeMirror {
	BORDER-BOTTOM: #eee 1px solid; BORDER-LEFT: #eee 1px solid; BORDER-TOP: =
#eee 1px solid; BORDER-RIGHT: #eee 1px solid
}
.CodeMirror-scroll {
	OVERFLOW: auto
}
.CodeMirror-lines {
	PADDING-BOTTOM: 4px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
PADDING-TOP: 4px
}
.CodeMirror PRE {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 4px; PADDING-RIGHT: 4px; =
PADDING-TOP: 0px
}
.CodeMirror-scrollbar-filler {
	BACKGROUND-COLOR: #fff
}
.CodeMirror DIV.CodeMirror-cursor {
	Z-INDEX: 3; BORDER-LEFT: #000 1px solid
}
.CodeMirror DIV.CodeMirror-secondarycursor {
	BORDER-LEFT: #c0c0c0 1px solid
}
.cm-keymap-fat-cursor.CodeMirror DIV.CodeMirror-cursor {
	Z-INDEX: 1; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; WIDTH: auto; =
BACKGROUND: #7e7; BORDER-TOP: 0px; BORDER-RIGHT: 0px
}
.cm-strong {
	COLOR: #854
}
.cm-em {
	COLOR: #854
}
.cm-s-paper .cm-keyword {
	COLOR: #555
}
.cm-s-paper .cm-atom {
	COLOR: #7f8c8d
}
.cm-s-paper .cm-number {
	COLOR: #7f8c8d
}
.cm-s-paper .cm-def {
	COLOR: #00f
}
.cm-s-paper .cm-variable {
	COLOR: #000
}
.cm-s-paper .cm-variable-2 {
	COLOR: #586
}
.cm-s-paper .cm-variable-3 {
	COLOR: #085
}
.cm-s-paper .cm-property {
	COLOR: #000
}
.cm-s-paper .cm-operator {
	COLOR: #000
}
.cm-s-paper .cm-comment {
	COLOR: #959595
}
.cm-s-paper .cm-string {
	COLOR: #47e
}
.cm-s-paper .cm-string-2 {
	COLOR: #f50
}
.cm-s-paper .cm-meta {
	COLOR: #555
}
.cm-s-paper .cm-error {
	COLOR: #f00
}
.cm-s-paper .cm-qualifier {
	COLOR: #555
}
.cm-s-paper .cm-builtin {
	COLOR: #555
}
.cm-s-paper .cm-bracket {
	COLOR: #997
}
.cm-s-paper .cm-tag {
	COLOR: #7f8c8d
}
.cm-s-paper .cm-attribute {
	COLOR: #7f8c8d
}
.cm-s-paper .cm-header {
	COLOR: #000
}
.cm-s-paper .cm-quote {
	COLOR: #888
}
.cm-s-paper .cm-hr {
	COLOR: #999
}
.cm-s-paper .cm-link {
	COLOR: #578
}
.cm-negative {
	COLOR: #d44
}
.cm-positive {
	COLOR: #292
}
.cm-header {
	FONT-WEIGHT: bold
}
.cm-strong {
	FONT-WEIGHT: bold
}
.cm-em {
	FONT-STYLE: italic
}
.cm-link {
	TEXT-DECORATION: underline
}
.cm-invalidchar {
	COLOR: #f00
}
DIV.CodeMirror SPAN.CodeMirror-matchingbracket {
	COLOR: #0f0
}
DIV.CodeMirror SPAN.CodeMirror-nonmatchingbracket {
	COLOR: #f22
}
.CodeMirror {
	POSITION: relative; OVERFLOW: hidden
}
.CodeMirror-scroll {
	POSITION: relative; PADDING-BOTTOM: 30px; OUTLINE-STYLE: none; =
OUTLINE-COLOR: invert; OUTLINE-WIDTH: medium; PADDING-RIGHT: 30px; =
MARGIN-BOTTOM: -30px; HEIGHT: 100%; MARGIN-RIGHT: -30px
}
.CodeMirror-sizer {
	POSITION: relative
}
.CodeMirror-vscrollbar {
	Z-INDEX: 6; POSITION: absolute; DISPLAY: none
}
.CodeMirror-hscrollbar {
	Z-INDEX: 6; POSITION: absolute; DISPLAY: none
}
.CodeMirror-scrollbar-filler {
	Z-INDEX: 6; POSITION: absolute; DISPLAY: none
}
.CodeMirror-vscrollbar {
	OVERFLOW-X: hidden; OVERFLOW-Y: scroll; TOP: 0px; RIGHT: 0px
}
.CodeMirror-hscrollbar {
	OVERFLOW-X: scroll; OVERFLOW-Y: hidden; BOTTOM: 0px; LEFT: 0px
}
.CodeMirror-scrollbar-filler {
	Z-INDEX: 6; BOTTOM: 0px; RIGHT: 0px
}
.CodeMirror-lines {
	CURSOR: text
}
.CodeMirror PRE {
	Z-INDEX: 2; POSITION: relative; LINE-HEIGHT: inherit; =
BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; FONT-FAMILY: Consolas, Menlo, =
Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream =
Vera Sans Mono, Courier New, monospace, serif; WORD-WRAP: normal; =
WHITE-SPACE: pre-wrap; BACKGROUND: none transparent scroll repeat 0% 0%; =
BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; COLOR: inherit; =
FONT-SIZE: inherit; OVERFLOW: visible; BORDER-LEFT-WIDTH: 0px; =
border-radius: 0; -moz-border-radius: 0; -webkit-border-radius: 0; =
-o-border-radius: 0
}
.CodeMirror UL {
	LIST-STYLE-POSITION: inside !important; PADDING-BOTTOM: inherit =
!important; MARGIN: auto; PADDING-LEFT: inherit !important; =
PADDING-RIGHT: inherit !important; PADDING-TOP: inherit !important
}
.CodeMirror OL {
	LIST-STYLE-POSITION: inside !important; PADDING-BOTTOM: inherit =
!important; MARGIN: auto; PADDING-LEFT: inherit !important; =
PADDING-RIGHT: inherit !important; PADDING-TOP: inherit !important
}
.CodeMirror LI {
	LIST-STYLE-POSITION: inside !important; PADDING-BOTTOM: inherit =
!important; MARGIN: auto; PADDING-LEFT: inherit !important; =
PADDING-RIGHT: inherit !important; PADDING-TOP: inherit !important
}
.CodeMirror UL {
=09
}
.CodeMirror UL LI {
=09
}
.CodeMirror OL {
	LIST-STYLE-TYPE: decimal !important
}
.CodeMirror OL LI {
	LIST-STYLE-TYPE: decimal !important
}
.CodeMirror-wrap PRE {
	WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-BREAK: normal
}
.CodeMirror-linebackground {
	Z-INDEX: 0; POSITION: absolute; BOTTOM: 0px; TOP: 0px; RIGHT: 0px; =
LEFT: 0px
}
.CodeMirror-linewidget {
	Z-INDEX: 2; POSITION: relative; OVERFLOW: auto
}
.CodeMirror-widget {
	DISPLAY: inline-block
}
.CodeMirror-wrap .CodeMirror-scroll {
	OVERFLOW-X: hidden
}
.CodeMirror-measure {
	POSITION: absolute; WIDTH: 100%; HEIGHT: 0px; VISIBILITY: hidden; =
OVERFLOW: hidden
}
.CodeMirror-measure PRE {
	POSITION: static
}
.CodeMirror DIV.CodeMirror-cursor {
	POSITION: absolute; WIDTH: 0px; VISIBILITY: hidden; BORDER-RIGHT: =
medium none
}
.CodeMirror-focused DIV.CodeMirror-cursor {
	VISIBILITY: visible
}
.CodeMirror-selected {
	BACKGROUND: #d9d9d9
}
.CodeMirror-focused .CodeMirror-selected {
	BACKGROUND: #bdc3c7
}
.cm-searching {
	BACKGROUND: #ffa
}

@media Print   =20
{
.CodeMirror DIV.CodeMirror-cursor {
	VISIBILITY: hidden
}
    }
.editor-wrapper {
	FONT: 16px/1.62 "Helvetica Neue", "Xin Gothic", "Hiragino Sans GB", =
"WenQuanYi Micro Hei", "Microsoft YaHei", sans-serif; COLOR: #2c3e50
}
.editor-wrapper INPUT.title {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: =
4px; OUTLINE-STYLE: none; OUTLINE-COLOR: invert; PADDING-LEFT: 4px; =
OUTLINE-WIDTH: medium; WIDTH: 100%; PADDING-RIGHT: 4px; FONT: 18px =
"Helvetica Neue", "Xin Gothic", "Hiragino Sans GB", "WenQuanYi Micro =
Hei", "Microsoft YaHei", sans-serif; BACKGROUND: none transparent scroll =
repeat 0% 0%; BORDER-TOP: medium none; BORDER-RIGHT: medium none; =
PADDING-TOP: 4px; opacity: 0.6
}
.editor-toolbar {
	POSITION: relative; -webkit-user-select: none; -moz-user-select: none; =
-ms-user-select: none; -o-user-select: none; user-select: none; opacity: =
0.6
}
.editor-toolbar:before {
	BACKGROUND-COLOR: #bdc3c7; DISPLAY: block; HEIGHT: 1px; CONTENT: ' '
}
.editor-toolbar:after {
	BACKGROUND-COLOR: #bdc3c7; DISPLAY: block; HEIGHT: 1px; CONTENT: ' '
}
.editor-toolbar:before {
	MARGIN-BOTTOM: 8px
}
.editor-toolbar:after {
	MARGIN-TOP: 8px
}
.editor-wrapper INPUT.title:hover {
	opacity: 0.8
}
.editor-wrapper INPUT.title:focus {
	opacity: 0.8
}
.editor-toolbar:hover {
	opacity: 0.8
}
.editor-toolbar A {
	BORDER-BOTTOM: transparent 1px solid; TEXT-ALIGN: center; BORDER-LEFT: =
transparent 1px solid; MARGIN: 0px 4px; WIDTH: 24px; DISPLAY: =
inline-block; HEIGHT: 24px; COLOR: #2c3e50 !important; FONT-SIZE: 16px; =
BORDER-TOP: transparent 1px solid; CURSOR: pointer; BORDER-RIGHT: =
transparent 1px solid; TEXT-DECORATION: none !important; border-radius: =
3px
}
.editor-toolbar A:hover {
	BORDER-BOTTOM-COLOR: #95a5a6; BORDER-TOP-COLOR: #95a5a6; BACKGROUND: =
#fcfcfc; BORDER-RIGHT-COLOR: #95a5a6; BORDER-LEFT-COLOR: #95a5a6
}
.editor-toolbar A.active {
	BORDER-BOTTOM-COLOR: #95a5a6; BORDER-TOP-COLOR: #95a5a6; BACKGROUND: =
#fcfcfc; BORDER-RIGHT-COLOR: #95a5a6; BORDER-LEFT-COLOR: #95a5a6
}
.editor-toolbar A:before {
	LINE-HEIGHT: 24px
}
.editor-toolbar I.separator {
	BORDER-LEFT: #d9d9d9 1px solid; TEXT-INDENT: -10px; MARGIN: 0px 6px; =
WIDTH: 0px; DISPLAY: inline-block; COLOR: transparent; BORDER-RIGHT: =
#fff 1px solid
}
.editor-toolbar I.separator:first-child {
	MARGIN-LEFT: 0px
}
.editor-toolbar A.icon-fullscreen {
	POSITION: absolute; RIGHT: 0px
}
.editor-statusbar {
	TEXT-ALIGN: right; PADDING-BOTTOM: 8px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 5px; COLOR: #959694; FONT-SIZE: 12px; PADDING-TOP: 2px
}
.editor-statusbar SPAN {
	MIN-WIDTH: 4em; DISPLAY: inline-block; MARGIN-LEFT: 1em
}
.editor-statusbar .lines:before {
	CONTENT: 'lines: '
}
.editor-statusbar .words:before {
	CONTENT: 'words: '
}
.editor-preview {
	Z-INDEX: 9999; BOX-SIZING: border-box; POSITION: absolute; =
PADDING-BOTTOM: 5px; PADDING-LEFT: 5px; WIDTH: 100%; PADDING-RIGHT: 5px; =
BACKGROUND: #fcfdfe; HEIGHT: 100%; OVERFLOW: auto; TOP: 0px; =
PADDING-TOP: 5px; LEFT: 100%; -webkit-transition: left 0.2s ease; =
transition: left 0.2s ease; -moz-transition: left 0.2s ease; =
-ms-transition: left 0.2s ease
}
.editor-preview-active {
	LEFT: 0px
}
.editor-preview > P {
	MARGIN-TOP: 0px
}
[class^=3D'icon-'] {
	FONT-STYLE: normal; FONT-FAMILY: FontAwesome; FONT-WEIGHT: normal; =
TEXT-DECORATION: inherit; -webkit-font-smoothing: antialiased
}
[class*=3D' icon-'] {
	FONT-STYLE: normal; FONT-FAMILY: FontAwesome; FONT-WEIGHT: normal; =
TEXT-DECORATION: inherit; -webkit-font-smoothing: antialiased
}
[class^=3D'icon-']:before {
	DISPLAY: inline-block; TEXT-DECORATION: inherit; speak: none
}
[class*=3D' icon-']:before {
	DISPLAY: inline-block; TEXT-DECORATION: inherit; speak: none
}
.icon-bold:before {
	CONTENT: "\f032"
}
.icon-italic:before {
	CONTENT: "\f033"
}
.icon-quote-left:before {
	CONTENT: "\f10d"
}
.icon-list-ul:before {
	CONTENT: "\f0ca"
}
.icon-list-ol:before {
	CONTENT: "\f0cb"
}
.icon-link:before {
	CONTENT: "\f0c1"
}
.icon-picture:before {
	CONTENT: "\f03e"
}
.icon-reply:before {
	CONTENT: "\f112"
}
.icon-share-alt:before {
	CONTENT: "\f064"
}
.icon-preview:before {
	CONTENT: "\f06e"
}

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/css/blog_code.css

.dp-highlighter {
	POSITION: relative; OVERFLOW-X: auto; OVERFLOW-Y: hidden
}
.prettyprint {
	POSITION: relative; OVERFLOW-X: auto; OVERFLOW-Y: hidden
}
.pad_bot {
	PADDING-BOTTOM: 45px !important
}
.save_code {
	Z-INDEX: 2; POSITION: absolute; DISPLAY: none; HEIGHT: 60px; COLOR: =
#fff; FONT-SIZE: 14px; TOP: 5px; CURSOR: pointer; RIGHT: 30px
}
#mask_code {
	Z-INDEX: 990; POSITION: fixed; WIDTH: 100%; DISPLAY: none; HEIGHT: =
100%; TOP: 0px; LEFT: 0px
}
.gist_edit {
	Z-INDEX: 9999; POSITION: absolute; MARGIN: -165px 0px 0px -252px; =
WIDTH: 505px; DISPLAY: none; HEIGHT: 330px; TOP: 50%; LEFT: 50%
}
.save_snippets {
	BOX-SIZING: border-box; BORDER-BOTTOM: #dddcdd 1px solid; BORDER-LEFT: =
#dddcdd 1px solid; FONT-FAMILY: "Microsoft YaHei"; BACKGROUND: #fff; =
CLEAR: both; FONT-SIZE: 14px; OVERFLOW: hidden; BORDER-TOP: #dddcdd 1px =
solid; BORDER-RIGHT: #dddcdd 1px solid
}
.save_snippets .tit {
	BOX-SIZING: border-box; BORDER-BOTTOM: #dddcdd 1px solid; =
PADDING-BOTTOM: 0px; LINE-HEIGHT: 45px; PADDING-LEFT: 20px; =
PADDING-RIGHT: 20px; HEIGHT: 45px; CLEAR: both; OVERFLOW: hidden; =
PADDING-TOP: 0px
}
.save_snippets .tit H3 {
	BOX-SIZING: border-box; PADDING-BOTTOM: 0px; LINE-HEIGHT: 45px; MARGIN: =
0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FLOAT: left; HEIGHT: 45px; =
FONT-SIZE: 16px; FONT-WEIGHT: normal; PADDING-TOP: 0px
}
.gist_edit_list {
	BOX-SIZING: border-box; PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; WIDTH: =
100%; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.save_snippets .tit SPAN {
	BOX-SIZING: border-box; LINE-HEIGHT: 45px; DISPLAY: block; FLOAT: =
right; HEIGHT: 45px; COLOR: #999
}
.save_snippets .tit SPAN A {
	COLOR: #0000ff; TEXT-DECORATION: underline
}
.save_snippets .tit SPAN A:link {
	COLOR: #0000ff; TEXT-DECORATION: underline
}
.save_snippets .tit SPAN A:visited {
	COLOR: #0000ff; TEXT-DECORATION: underline
}
.save_snippets .tit SPAN A:hover {
	COLOR: #0000ff; TEXT-DECORATION: underline
}
.save_snippets .tit SPAN A:active {
	COLOR: #0000ff; TEXT-DECORATION: underline
}
.save_snippets .con_form {
	BOX-SIZING: border-box; CLEAR: both; OVERFLOW: hidden; PADDING-TOP: =
20px
}
.save_snippets .con_form .gist_edit_list LI {
	BOX-SIZING: border-box; LIST-STYLE-TYPE: none; MIN-HEIGHT: 32px; =
MARGIN-BOTTOM: 20px; CLEAR: both; OVERFLOW: hidden; LIST-STYLE-IMAGE: =
none
}
.save_snippets .con_form .gist_edit_list LI SPAN.red {
	BOX-SIZING: border-box; LINE-HEIGHT: 36px; PADDING-RIGHT: 10px; =
DISPLAY: block; FLOAT: left; HEIGHT: 32px; COLOR: #f00; MARGIN-LEFT: =
20px
}
.save_snippets .con_form .gist_edit_list LI SPAN.txt {
	LINE-HEIGHT: 32px; PADDING-RIGHT: 20px; DISPLAY: block; FLOAT: left; =
HEIGHT: 32px
}
.save_snippets .con_form .gist_edit_list LI .form-input {
	BOX-SIZING: border-box; BORDER-BOTTOM: #dddcdd 1px solid; BORDER-LEFT: =
#dddcdd 1px solid; PADDING-BOTTOM: 0px; PADDING-LEFT: 10px; WIDTH: =
398px; PADDING-RIGHT: 10px; FONT-FAMILY: "Microsoft YaHei"; BACKGROUND: =
#fafafa; FLOAT: left; HEIGHT: 30px; COLOR: #666; BORDER-TOP: #dddcdd 1px =
solid; BORDER-RIGHT: #dddcdd 1px solid; PADDING-TOP: 0px
}
#divSearchTags {
	BOX-SIZING: border-box; BORDER-BOTTOM: #dddcdd 1px solid; TEXT-ALIGN: =
left; BORDER-LEFT: #dddcdd 1px solid; PADDING-BOTTOM: 0px; PADDING-LEFT: =
10px; WIDTH: 398px; PADDING-RIGHT: 10px; FONT-FAMILY: "Microsoft YaHei"; =
BACKGROUND: #fafafa; FLOAT: left; COLOR: #666; MARGIN-LEFT: 2px; =
BORDER-TOP: #dddcdd 1px solid; BORDER-RIGHT: #dddcdd 1px solid; =
PADDING-TOP: 0px
}
#divSearchTags .label SPAN {
	COLOR: #666
}
.insertTag {
	BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium =
none; WIDTH: 208px; BACKGROUND: none transparent scroll repeat 0% 0%; =
HEIGHT: 30px; COLOR: #666; BORDER-TOP: medium none; BORDER-RIGHT: medium =
none
}
#divSearchTags .blog_tag {
	BOX-SIZING: border-box; PADDING-BOTTOM: 0px; MARGIN: 7px 10px 7px 0px; =
PADDING-LEFT: 5px; PADDING-RIGHT: 5px; DISPLAY: block; BACKGROUND: =
#f3f3f3; FLOAT: left; COLOR: #666; PADDING-TOP: 0px; border-radius: 10px
}
#divSearchTags .blog_tag SPAN {
	DISPLAY: block; FLOAT: left
}
#divSearchTags .label A {
	BOX-SIZING: border-box; COLOR: #666; MARGIN-LEFT: 8px
}
.save_snippets .con_form .gist_edit_list LI .form-textarea {
	BOX-SIZING: border-box; BORDER-BOTTOM: #dddcdd 1px solid; BORDER-LEFT: =
#dddcdd 1px solid; PADDING-BOTTOM: 3px; PADDING-LEFT: 10px; WIDTH: =
398px; PADDING-RIGHT: 10px; FONT-FAMILY: "Microsoft YaHei"; BACKGROUND: =
#fafafa; FLOAT: left; HEIGHT: 60px; COLOR: #666; FONT-SIZE: 12px; =
BORDER-TOP: #dddcdd 1px solid; BORDER-RIGHT: #dddcdd 1px solid; =
PADDING-TOP: 3px
}
.save_snippets .bottom-bar {
	PADDING-BOTTOM: 17px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; CLEAR: =
both; OVERFLOW: hidden; BORDER-TOP: #dddcdd 1px solid; PADDING-TOP: 17px
}
.save_snippets .bottom-bar .btn-submit {
	BORDER-BOTTOM: #888 1px solid; TEXT-ALIGN: center; BORDER-LEFT: 0px; =
LINE-HEIGHT: 20px; WIDTH: 45px; FONT-FAMILY: "Microsoft YaHei"; =
BACKGROUND: #f0f0f0; FLOAT: right; HEIGHT: 20px; COLOR: #333; =
MARGIN-LEFT: 7px; FONT-SIZE: 12px; BORDER-TOP: 0px; BORDER-RIGHT: #888 =
1px solid; border-radius: 2px
}
.file_holder .code.file_content TABLE.lines PRE.line_numbers {
	WIDTH: 40px !important
}

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/pubfooter/js/tracking.js

// Generated by CoffeeScript 1.9.3

/*
@file =
=E5=89=8D=E7=AB=AF=E7=94=A8=E6=88=B7=E8=A1=8C=E4=B8=BA=E8=B7=9F=E8=B8=AA
@author <caoyu#at#csdn.net>
@version 20160323
 */

(function() {
  var slice =3D [].slice;

  (function(definition, undef) {
    var $, exports, global, i, t;
    global =3D this;
    $ =3D global.jQuery;
    exports =3D {};
    definition(global, exports, $);
    if (global.csdn =3D=3D=3D undef) {
      global.csdn =3D exports;
    }
    for (i in exports) {
      global[i] =3D global.csdn[i] =3D exports[i];

    }
    t =3D exports.tracking;
    t({
      '': [t.baseParams, t.tos, t.sessionId],
      'bbs.csdn.net': t.tags('/topics/', 'div.tag span'),
      'blog.csdn.net': t.tags('/article/details/', 'div.tag2box a'),
      'ask.csdn.net': t.tags('/questions/', 'div.tag_data a.tag span'),
      'download.csdn.net': t.tags('/detail/', 'div.info =
a[href^=3D"/tag/"]'),
      'www.csdn.net': [t.tags('/article/', 'div.tag a'), t.cmsPid],
      'www.csto.com': t.tags('/p/', 'span.tech a'),
      'www.iteye.com': t.tags('/topic/', '#topic_tags a')
    });
  })(function(global, exports, $) {
    var iarr =3D [], _key=3D0;
    var crossdomainGet, doc, domReady, flush, fns, hack, loaded, loc, =
protocol, querySelectorAll, testEl, topDomain, tracking;
    doc =3D global.document;
    loc =3D global.location;
    protocol =3D loc.protocol.substr(0, 4) =3D=3D=3D 'http' ? '' : =
'http:';
    fns =3D [];
    testEl =3D doc.documentElement;
    hack =3D testEl.doScroll;
    loaded =3D (hack ? /^loaded|^c/ : =
/^loaded|c/).test(doc['readyState']);
    flush =3D function() {
      var f;
      loaded =3D 1;
      while (f =3D fns.shift()) {
        f();
      }
    };
    if (typeof doc.addEventListener =3D=3D=3D "function") {
      doc.addEventListener('DOMContentLoaded', function() {
        doc.removeEventListener('DOMContentLoaded', arguments.callee, =
false);
        flush();
      });
    }
    if (hack) {
      doc.attachEvent('onreadystatechange', function() {
        if (/^c/.test(doc.readyState)) {
          doc.detachEvent('onreadystatechange', arguments.callee);
          flush();
        }
      });
    }
    domReady =3D hack ? function(fn) {
      if (global.self !=3D=3D global.top) {
        if (loaded) {
          return fn();
        } else {
          return fns.push(fn);
        }
      } else {
        try {
          testEl.doScroll('left');
        } catch (_error) {
          global.setTimeout(function() {
            domReady(fn);
          }, 50);
          return;
        }
        fn();
      }
    } : function(fn) {
      if (loaded) {
        fn();
      } else {
        fns.push(fn);
      }
    };
    topDomain =3D function(d) {
      return /\.?([a-z0-9\-]+\.[a-z0-9\-]+)(:\d+)?$/.exec(d)[1];
    };

    /*
    =
=E5=AF=B9=E5=A4=96=E5=85=AC=E5=BC=80=E7=9A=84=E8=B7=9F=E8=B8=AA=E5=87=BD=E6=
=95=B0tracking
    @param {Object} opts =
=E5=AE=9A=E4=B9=89=E4=BA=86=E4=B8=8D=E5=90=8C=E5=9F=9F=E5=90=8D=E4=B8=8B=E8=
=A6=81=E6=94=B6=E9=9B=86=E7=9A=84=E4=BF=A1=E6=81=AF
     */
    exports.tracking =3D tracking =3D function(opts) {
      domReady(function() {
        var data, i, j, k, len, len1, opt, ref;
        data =3D {};
        ref =3D [opts[loc.host], opts['']];
        for (j =3D 0, len =3D ref.length; j < len; j++) {
          opt =3D ref[j];
          if (opt) {
            if (typeof opt =3D=3D=3D 'function') {
              opt(data);
            } else {
              for (k =3D 0, len1 =3D opt.length; k < len1; k++) {
                i =3D opt[k];
                if (typeof i =3D=3D=3D "function") {
                  i(data);
                }
              }
            }
          }
        }
        crossdomainGet(data);
      });
    };

    /*
    =
=E9=99=84=E5=8A=A0=E5=9F=BA=E6=9C=AC=E7=9A=84=E5=8F=82=E6=95=B0=E5=88=B0=E6=
=95=B0=E6=8D=AE=E4=B8=8A=EF=BC=8C=E5=8C=85=E6=8B=ACreferrer user_name =
oid pid x-acl-token
     */
    tracking.baseParams =3D function(data) {
      var ref, ref1, ref2, ref3, ref4;
      data.user_name =3D /iteye.com$/.test(loc.host) ? ((ref =3D =
/>=E6=AC=A2=E8=BF=8E([^<]+)<\/a>/.exec((ref1 =3D =
doc.getElementById('user_nav')) !=3D null ? ref1.innerHTML : void 0)) =
!=3D null ? ref[1] : void 0) || '' : ((ref2 =3D /(; =
)?(UserName)=3D([^;]+)/.exec(doc.cookie)) !=3D null ? ref2[3] : void 0) =
|| '';
      data['x-acl-token'] =3D 'status_js_dkuyqthzbajmncbsb_token';
      if (!data.pid) {
        data.pid =3D /iteye.com$/.test(loc.host) ? 'iteye' : =
doc.body.getAttribute('data-pid') || ((ref3 =3D =
/(\w+)\.\w+\.\w+$/.exec(loc.host)) !=3D null ? ref3[1] : void 0);
      }
      data.oid =3D ((ref4 =3D querySelectorAll('.h-entry .p-author')[0]) =
!=3D null ? ref4.innerHTML.replace(/^\s+|\s+$/g, '') : void 0) || '';
      return data.referrer =3D doc.referrer;
    };
    tracking.sessionId =3D function(data) {
      var ref, sid;
      sid =3D (ref =3D =
/\bdc_session_id=3D([^;]*)(?:$|;)/.exec(doc.cookie)) !=3D null ? ref[1] =
: void 0;
      if (!/^https?:\/\/([\w-]+\.)*csdn\.net\//.test(doc.referrer)) {
        sid =3D void 0;
      }
      if (sid =3D=3D=3D void 0 || !/^\d+$/.test(sid)) {
        sid =3D +new Date();
      }
      doc.cookie =3D "dc_session_id=3D" + sid + " ; path=3D/ ; =
domain=3D." + (topDomain(loc.host));
      return data.session_id =3D "" + sid;
    };

    /*
    =
=E9=99=84=E5=8A=A0=E4=B8=8A=E4=B8=80=E9=A1=B5=E9=9D=A2=E5=8F=8A=E5=81=9C=E7=
=95=99=E6=97=B6=E9=97=B4=E5=88=B0=E6=95=B0=E6=8D=AE=E4=B8=8A
     */
    tracking.tos =3D function(data) {
      var e, now, ref, t, tos;
      now =3D +new Date() / 1000 | 0;
      t =3D (ref =3D /\bdc_tos=3D([^;]*)(?:$|;)/.exec(doc.cookie)) !=3D =
null ? ref[1] : void 0;
      try {
        tos =3D now - parseInt(t, 36);
      } catch (_error) {
        e =3D _error;
        tos =3D -1;
      }
      doc.cookie =3D "dc_tos=3D" + (now.toString(36)) + " ; expires=3D" =
+ (new Date((now + 4 * 60 * 60) * 1000).toGMTString()) + " ; max-age=3D" =
+ (4 * 60 * 60) + " ; path=3D/ ; domain=3D." + (topDomain(loc.host));
      return data.tos =3D tos;
    };

    /*
    =
=E8=BF=94=E5=9B=9E=E9=99=84=E5=8A=A0tag=E5=8F=82=E6=95=B0=E5=88=B0=E6=95=B0=
=E6=8D=AE=E4=B8=8A=E7=9A=84=E5=87=BD=E6=95=B0=EF=BC=8C=E5=8F=AA=E5=9C=A8=E6=
=8C=87=E5=AE=9A=E7=9A=84path=E4=B8=AD=E7=94=9F=E6=95=88=EF=BC=8C=E5=85=B7=
=E4=BD=93=E7=9A=84tags=E7=94=B1selectors=E6=8C=87=E5=AE=9A
    @param {String/RegExp} path =
=E8=A6=81=E5=8C=B9=E9=85=8D=E7=9A=84=E5=9C=B0=E5=9D=80=E8=B7=AF=E5=BE=84=E7=
=89=87=E6=AE=B5
    @param {Array[String/Function]} selectors =
tag=E7=9A=84=E9=80=89=E6=8B=A9=E5=99=A8=E6=88=96=E8=80=85=E6=98=AF=E8=BF=94=
=E5=9B=9Etag=E6=95=B0=E7=BB=84=E7=9A=84=E5=87=BD=E6=95=B0=E5=88=97=E8=A1=A8=

     */
    tracking.tags =3D function() {
      var path, selectors;
      path =3D arguments[0], selectors =3D 2 <=3D arguments.length ? =
slice.call(arguments, 1) : [];
      return function(data) {
        var e, eles, i, j, k, l, len, len1, len2, ref, result, sel, t;
        if (typeof path =3D=3D=3D 'string' && =
!~loc.pathname.indexOf(path) || path instanceof RegExp && =
!path.test(loc.pathname)) {
          return;
        }
        eles =3D [];
        for (j =3D 0, len =3D selectors.length; j < len; j++) {
          sel =3D selectors[j];
          ref =3D (typeof sel =3D=3D=3D 'string' ? querySelectorAll(sel) =
: (typeof sel =3D=3D=3D "function" ? sel() : void 0) || []);
          for (k =3D 0, len1 =3D ref.length; k < len1; k++) {
            i =3D ref[k];
            eles.push(i);
          }
        }
        result =3D {};
        for (l =3D 0, len2 =3D eles.length; l < len2; l++) {
          e =3D eles[l];
          result[e.innerHTML.replace(/^\s+|\s+$/g, '')] =3D 1;
        }
        data.tag =3D ((function() {
          var results;
          results =3D [];
          for (t in result) {
            results.push(t);
          }
          return results;
        })()).join();
      };
    };

    /*
    =
=E9=99=84=E5=8A=A0pid=E5=8F=82=E6=95=B0=E5=88=B0=E6=95=B0=E6=8D=AE=E4=B8=8A=
=E7=9A=84=E5=87=BD=E6=95=B0=EF=BC=8C=E9=92=88=E5=AF=B9 =
www.csdn.net/article/ =
=E4=B8=8B=E7=9A=84=E6=96=87=E7=AB=A0=E9=A1=B5=E6=8E=A2=E6=B5=8B=E7=9C=9F=E5=
=AE=9Epid
     */
    tracking.cmsPid =3D function(data) {
      if (loc.pathname.indexOf('/article/') =3D=3D=3D -1) {
        return;
      }
      try {
        return data.pid =3D querySelectorAll('.brea_nav > =
a')[1].hostname.match(/(\w+)\.\w+\.\w+$/)[1];
      } catch (_error) {

      }
    };
    /*
    =
=E9=99=84=E5=8A=A0wechat=E5=8F=82=E6=95=B0=E5=88=B0=E6=95=B0=E6=8D=AE=E4=B8=
=8A=E7=9A=84=E5=87=BD=E6=95=B0=EF=BC=8C=E9=92=88=E5=AF=B9=E5=BE=AE=E4=BF=A1=
=E6=B5=8F=E8=A7=88=E5=99=A8=E7=94=A8=E6=88=B7=E5=A2=9E=E5=8A=A0=E5=8F=82=E6=
=95=B0
     */
    /*tracking.wechat=3Dfunction(data){
      var ua =3D window.navigator.userAgent.toLowerCase();
      if(ua.match(/MicroMessenger/i) =3D=3D 'micromessenger'){
          data.source=3D'wechat';
      }else{
        return false;
      }
    }*/

    /*
    =
=E4=BD=BF=E7=94=A8CSS=E9=80=89=E6=8B=A9=E5=99=A8=E6=A3=80=E7=B4=A2=E5=AF=B9=
=E5=BA=94=E7=9A=84DOM=E5=85=83=E7=B4=A0
    @param {String} selector - CSS=E9=80=89=E6=8B=A9=E5=99=A8
    @returns {Array[HTMLElement]} =
HTML=E5=85=83=E7=B4=A0=E9=9B=86=E5=90=88=EF=BC=8C=E5=A6=82=E6=9E=9C=E6=B5=
=8F=E8=A7=88=E5=99=A8=E4=B8=8D=E6=94=AF=E6=8C=81=E4=BD=BF=E7=94=A8CSS=E9=80=
=89=E6=8B=A9=E5=99=A8=E6=9F=A5=E6=89=BE=E5=B0=86=E8=BF=94=E5=9B=9E =
undefined=EF=BC=8C=E5=A6=82=E6=9E=9C=E6=89=BE=E4=B8=8D=E5=88=B0=E4=BB=BB=E4=
=BD=95=E5=85=83=E7=B4=A0=E8=BF=94=E5=9B=9E0=E9=95=BF=E5=BA=A6=E7=9A=84=E8=
=BF=91=E4=BC=BC=E6=95=B0=E7=BB=84
     */
    tracking.querySelectorAll =3D querySelectorAll =3D =
function(selector) {
      return (typeof doc.querySelectorAll =3D=3D=3D "function" ? =
doc.querySelectorAll(selector) : void 0) || (typeof $ =3D=3D=3D =
"function" ? $(selector) : void 0) || global.Prototype && (typeof =
global.$$ =3D=3D=3D "function" ? global.$$(selector) : void 0) || [];
    };

    /*
    =E5=8F=91=E9=80=81=E8=B7=A8=E5=9F=9FHTTP GET=E8=AF=B7=E6=B1=82
    @param {String} url - =
=E8=AF=B7=E6=B1=82=E7=9A=84Url=EF=BC=8C=E5=BF=BD=E7=95=A5=E5=B0=86=E4=BD=BF=
=E7=94=A8=E9=BB=98=E8=AE=A4=E7=9A=84=E8=A1=8C=E4=B8=BA=E8=B7=9F=E8=B8=AA=E5=
=9C=B0=E5=9D=80
    @param {Object} data - =
=E8=AF=B7=E6=B1=82=E8=A6=81=E6=8F=90=E4=BA=A4=E7=9A=84=E6=95=B0=E6=8D=AE
     */
    return tracking.crossdomainGet =3D crossdomainGet =3D function(data) =
{
      var i, p;
      data[Math.random() * 10000 | 0] =3D '';

      var ik =3D iarr.push(new Image()) - 1;
      iarr[ik].onload =3D iarr[ik].onerror =3D function() {
        var _a =3D ik;
        iarr[_a].onload =3D iarr[_a].onerror =3D null;
        iarr[_a].removeAttribute("src");
        return iarr[_a] =3D null;
      };
      //i =3D new Image();
      //i.onload =3D i.onerror =3D function() {
      //  i.onload =3D i.onerror =3D null;
      //  i.removeAttribute('src');
      //  i =3D null;
      //};
        iarr[ik].src =3D protocol + '//dc.csdn.net/track?' + =
((function() {
          var results;
          results =3D [];
          for (p in data) {
            results.push(encodeURIComponent(p) + '=3D' + =
encodeURIComponent(data[p]));
          }
          return results;
        })()).join('&');

    };
  });

}).call(this);
------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/jquery.js

/*! jQuery v1.11.1 | (c) 2005, 2014 jQuery Foundation, Inc. | =
jquery.org/license */
!function(a,b){"object"=3D=3Dtypeof module&&"object"=3D=3Dtypeof =
module.exports?module.exports=3Da.document?b(a,!0):function(a){if(!a.docu=
ment)throw new Error("jQuery requires a window with a document");return =
b(a)}:b(a)}("undefined"!=3Dtypeof window?window:this,function(a,b){var =
c=3D[],d=3Dc.slice,e=3Dc.concat,f=3Dc.push,g=3Dc.indexOf,h=3D{},i=3Dh.toS=
tring,j=3Dh.hasOwnProperty,k=3D{},l=3D"1.11.1",m=3Dfunction(a,b){return =
new =
m.fn.init(a,b)},n=3D/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,o=3D/^-ms-/,p=3D=
/-([\da-z])/gi,q=3Dfunction(a,b){return =
b.toUpperCase()};m.fn=3Dm.prototype=3D{jquery:l,constructor:m,selector:""=
,length:0,toArray:function(){return d.call(this)},get:function(a){return =
null!=3Da?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:functio=
n(a){var b=3Dm.merge(this.constructor(),a);return =
b.prevObject=3Dthis,b.context=3Dthis.context,b},each:function(a,b){return=
 m.each(this,a,b)},map:function(a){return =
this.pushStack(m.map(this,function(b,c){return =
a.call(b,c,b)}))},slice:function(){return =
this.pushStack(d.apply(this,arguments))},first:function(){return =
this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var =
b=3Dthis.length,c=3D+a+(0>a?b:0);return =
this.pushStack(c>=3D0&&b>c?[this[c]]:[])},end:function(){return =
this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.spli=
ce},m.extend=3Dm.fn.extend=3Dfunction(){var =
a,b,c,d,e,f,g=3Darguments[0]||{},h=3D1,i=3Darguments.length,j=3D!1;for("b=
oolean"=3D=3Dtypeof =
g&&(j=3Dg,g=3Darguments[h]||{},h++),"object"=3D=3Dtypeof =
g||m.isFunction(g)||(g=3D{}),h=3D=3D=3Di&&(g=3Dthis,h--);i>h;h++)if(null!=
=3D(e=3Darguments[h]))for(d in =
e)a=3Dg[d],c=3De[d],g!=3D=3Dc&&(j&&c&&(m.isPlainObject(c)||(b=3Dm.isArray=
(c)))?(b?(b=3D!1,f=3Da&&m.isArray(a)?a:[]):f=3Da&&m.isPlainObject(a)?a:{}=
,g[d]=3Dm.extend(j,f,c)):void 0!=3D=3Dc&&(g[d]=3Dc));return =
g},m.extend({expando:"jQuery"+(l+Math.random()).replace(/\D/g,""),isReady=
:!0,error:function(a){throw new =
Error(a)},noop:function(){},isFunction:function(a){return"function"=3D=3D=
=3Dm.type(a)},isArray:Array.isArray||function(a){return"array"=3D=3D=3Dm.=
type(a)},isWindow:function(a){return =
null!=3Da&&a=3D=3Da.window},isNumeric:function(a){return!m.isArray(a)&&a-=
parseFloat(a)>=3D0},isEmptyObject:function(a){var b;for(b in =
a)return!1;return!0},isPlainObject:function(a){var =
b;if(!a||"object"!=3D=3Dm.type(a)||a.nodeType||m.isWindow(a))return!1;try=
{if(a.constructor&&!j.call(a,"constructor")&&!j.call(a.constructor.protot=
ype,"isPrototypeOf"))return!1}catch(c){return!1}if(k.ownLast)for(b in =
a)return j.call(a,b);for(b in a);return void =
0=3D=3D=3Db||j.call(a,b)},type:function(a){return =
null=3D=3Da?a+"":"object"=3D=3Dtypeof a||"function"=3D=3Dtypeof =
a?h[i.call(a)]||"object":typeof =
a},globalEval:function(b){b&&m.trim(b)&&(a.execScript||function(b){a.eval=
.call(a,b)})(b)},camelCase:function(a){return =
a.replace(o,"ms-").replace(p,q)},nodeName:function(a,b){return =
a.nodeName&&a.nodeName.toLowerCase()=3D=3D=3Db.toLowerCase()},each:functi=
on(a,b,c){var =
d,e=3D0,f=3Da.length,g=3Dr(a);if(c){if(g){for(;f>e;e++)if(d=3Db.apply(a[e=
],c),d=3D=3D=3D!1)break}else for(e in =
a)if(d=3Db.apply(a[e],c),d=3D=3D=3D!1)break}else =
if(g){for(;f>e;e++)if(d=3Db.call(a[e],e,a[e]),d=3D=3D=3D!1)break}else =
for(e in a)if(d=3Db.call(a[e],e,a[e]),d=3D=3D=3D!1)break;return =
a},trim:function(a){return =
null=3D=3Da?"":(a+"").replace(n,"")},makeArray:function(a,b){var =
c=3Db||[];return null!=3Da&&(r(Object(a))?m.merge(c,"string"=3D=3Dtypeof =
a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){var d;if(b){if(g)return =
g.call(b,a,c);for(d=3Db.length,c=3Dc?0>c?Math.max(0,d+c):c:0;d>c;c++)if(c=
 in b&&b[c]=3D=3D=3Da)return c}return-1},merge:function(a,b){var =
c=3D+b.length,d=3D0,e=3Da.length;while(c>d)a[e++]=3Db[d++];if(c!=3D=3Dc)w=
hile(void 0!=3D=3Db[d])a[e++]=3Db[d++];return =
a.length=3De,a},grep:function(a,b,c){for(var =
d,e=3D[],f=3D0,g=3Da.length,h=3D!c;g>f;f++)d=3D!b(a[f],f),d!=3D=3Dh&&e.pu=
sh(a[f]);return e},map:function(a,b,c){var =
d,f=3D0,g=3Da.length,h=3Dr(a),i=3D[];if(h)for(;g>f;f++)d=3Db(a[f],f,c),nu=
ll!=3Dd&&i.push(d);else for(f in =
a)d=3Db(a[f],f,c),null!=3Dd&&i.push(d);return =
e.apply([],i)},guid:1,proxy:function(a,b){var =
c,e,f;return"string"=3D=3Dtypeof =
b&&(f=3Da[b],b=3Da,a=3Df),m.isFunction(a)?(c=3Dd.call(arguments,2),e=3Dfu=
nction(){return =
a.apply(b||this,c.concat(d.call(arguments)))},e.guid=3Da.guid=3Da.guid||m=
.guid++,e):void 0},now:function(){return+new =
Date},support:k}),m.each("Boolean Number String Function Array Date =
RegExp Object Error".split(" "),function(a,b){h["[object =
"+b+"]"]=3Db.toLowerCase()});function r(a){var =
b=3Da.length,c=3Dm.type(a);return"function"=3D=3D=3Dc||m.isWindow(a)?!1:1=
=3D=3D=3Da.nodeType&&b?!0:"array"=3D=3D=3Dc||0=3D=3D=3Db||"number"=3D=3Dt=
ypeof b&&b>0&&b-1 in a}var s=3Dfunction(a){var =
b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=3D"sizzle"+-new =
Date,v=3Da.document,w=3D0,x=3D0,y=3Dgb(),z=3Dgb(),A=3Dgb(),B=3Dfunction(a=
,b){return =
a=3D=3D=3Db&&(l=3D!0),0},C=3D"undefined",D=3D1<<31,E=3D{}.hasOwnProperty,=
F=3D[],G=3DF.pop,H=3DF.push,I=3DF.push,J=3DF.slice,K=3DF.indexOf||functio=
n(a){for(var b=3D0,c=3Dthis.length;c>b;b++)if(this[b]=3D=3D=3Da)return =
b;return-1},L=3D"checked|selected|async|autofocus|autoplay|controls|defer=
|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M=3D"=
[\\x20\\t\\r\\n\\f]",N=3D"(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",O=3DN.replace=
("w","w#"),P=3D"\\["+M+"*("+N+")(?:"+M+"*([*^$|!~]?=3D)"+M+"*(?:'((?:\\\\=
.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+O+"))|)"+M+"*\\]",Q=3D":("+N=
+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|=
[^\\\\()[\\]]|"+P+")*)|.*)\\)|)",R=3Dnew =
RegExp("^"+M+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M+"+$","g"),S=3Dnew =
RegExp("^"+M+"*,"+M+"*"),T=3Dnew =
RegExp("^"+M+"*([>+~]|"+M+")"+M+"*"),U=3Dnew =
RegExp("=3D"+M+"*([^\\]'\"]*?)"+M+"*\\]","g"),V=3Dnew RegExp(Q),W=3Dnew =
RegExp("^"+O+"$"),X=3D{ID:new RegExp("^#("+N+")"),CLASS:new =
RegExp("^\\.("+N+")"),TAG:new =
RegExp("^("+N.replace("w","w*")+")"),ATTR:new RegExp("^"+P),PSEUDO:new =
RegExp("^"+Q),CHILD:new =
RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M+"*(even=
|odd|(([+-]|)(\\d*)n|)"+M+"*(?:([+-]|)"+M+"*(\\d+)|))"+M+"*\\)|)","i"),bo=
ol:new RegExp("^(?:"+L+")$","i"),needsContext:new =
RegExp("^"+M+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M+"*((?:-=
\\d)?\\d*)"+M+"*\\)|)(?=3D[^-]|$)","i")},Y=3D/^(?:input|select|textarea|b=
utton)$/i,Z=3D/^h\d$/i,$=3D/^[^{]+\{\s*\[native =
\w/,_=3D/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ab=3D/[+~]/,bb=3D/'|\\/g,cb=3D=
new =
RegExp("\\\\([\\da-f]{1,6}"+M+"?|("+M+")|.)","ig"),db=3Dfunction(a,b,c){v=
ar d=3D"0x"+b-65536;return =
d!=3D=3Dd||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10=
|55296,1023&d|56320)};try{I.apply(F=3DJ.call(v.childNodes),v.childNodes),=
F[v.childNodes.length].nodeType}catch(eb){I=3D{apply:F.length?function(a,=
b){H.apply(a,J.call(b))}:function(a,b){var =
c=3Da.length,d=3D0;while(a[c++]=3Db[d++]);a.length=3Dc-1}}}function =
fb(a,b,d,e){var =
f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!=3D=3Dn&&m(b),b=3Db||n,d=3D=
d||[],!a||"string"!=3Dtypeof a)return =
d;if(1!=3D=3D(k=3Db.nodeType)&&9!=3D=3Dk)return[];if(p&&!e){if(f=3D_.exec=
(a))if(j=3Df[1]){if(9=3D=3D=3Dk){if(h=3Db.getElementById(j),!h||!h.parent=
Node)return d;if(h.id=3D=3D=3Dj)return d.push(h),d}else =
if(b.ownerDocument&&(h=3Db.ownerDocument.getElementById(j))&&t(b,h)&&h.id=
=3D=3D=3Dj)return d.push(h),d}else{if(f[2])return =
I.apply(d,b.getElementsByTagName(a)),d;if((j=3Df[3])&&c.getElementsByClas=
sName&&b.getElementsByClassName)return =
I.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=
=3Dr=3Du,w=3Db,x=3D9=3D=3D=3Dk&&a,1=3D=3D=3Dk&&"object"!=3D=3Db.nodeName.=
toLowerCase()){o=3Dg(a),(r=3Db.getAttribute("id"))?s=3Dr.replace(bb,"\\$&=
"):b.setAttribute("id",s),s=3D"[id=3D'"+s+"'] =
",l=3Do.length;while(l--)o[l]=3Ds+qb(o[l]);w=3Dab.test(a)&&ob(b.parentNod=
e)||b,x=3Do.join(",")}if(x)try{return =
I.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute=
("id")}}}return i(a.replace(R,"$1"),b,d,e)}function gb(){var =
a=3D[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete =
b[a.shift()],b[c+" "]=3De}return b}function hb(a){return =
a[u]=3D!0,a}function ib(a){var =
b=3Dn.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.p=
arentNode&&b.parentNode.removeChild(b),b=3Dnull}}function jb(a,b){var =
c=3Da.split("|"),e=3Da.length;while(e--)d.attrHandle[c[e]]=3Db}function =
kb(a,b){var =
c=3Db&&a,d=3Dc&&1=3D=3D=3Da.nodeType&&1=3D=3D=3Db.nodeType&&(~b.sourceInd=
ex||D)-(~a.sourceIndex||D);if(d)return =
d;if(c)while(c=3Dc.nextSibling)if(c=3D=3D=3Db)return-1;return =
a?1:-1}function lb(a){return function(b){var =
c=3Db.nodeName.toLowerCase();return"input"=3D=3D=3Dc&&b.type=3D=3D=3Da}}f=
unction mb(a){return function(b){var =
c=3Db.nodeName.toLowerCase();return("input"=3D=3D=3Dc||"button"=3D=3D=3Dc=
)&&b.type=3D=3D=3Da}}function nb(a){return hb(function(b){return =
b=3D+b,hb(function(c,d){var =
e,f=3Da([],c.length,b),g=3Df.length;while(g--)c[e=3Df[g]]&&(c[e]=3D!(d[e]=
=3Dc[e]))})})}function ob(a){return a&&typeof =
a.getElementsByTagName!=3D=3DC&&a}c=3Dfb.support=3D{},f=3Dfb.isXML=3Dfunc=
tion(a){var b=3Da&&(a.ownerDocument||a).documentElement;return =
b?"HTML"!=3D=3Db.nodeName:!1},m=3Dfb.setDocument=3Dfunction(a){var =
b,e=3Da?a.ownerDocument||a:v,g=3De.defaultView;return =
e!=3D=3Dn&&9=3D=3D=3De.nodeType&&e.documentElement?(n=3De,o=3De.documentE=
lement,p=3D!f(e),g&&g!=3D=3Dg.top&&(g.addEventListener?g.addEventListener=
("unload",function(){m()},!1):g.attachEvent&&g.attachEvent("onunload",fun=
ction(){m()})),c.attributes=3Dib(function(a){return =
a.className=3D"i",!a.getAttribute("className")}),c.getElementsByTagName=3D=
ib(function(a){return =
a.appendChild(e.createComment("")),!a.getElementsByTagName("*").length}),=
c.getElementsByClassName=3D$.test(e.getElementsByClassName)&&ib(function(=
a){return a.innerHTML=3D"<div class=3D'a'></div><div class=3D'a =
i'></div>",a.firstChild.className=3D"i",2=3D=3D=3Da.getElementsByClassNam=
e("i").length}),c.getById=3Dib(function(a){return =
o.appendChild(a).id=3Du,!e.getElementsByName||!e.getElementsByName(u).len=
gth}),c.getById?(d.find.ID=3Dfunction(a,b){if(typeof =
b.getElementById!=3D=3DC&&p){var c=3Db.getElementById(a);return =
c&&c.parentNode?[c]:[]}},d.filter.ID=3Dfunction(a){var =
b=3Da.replace(cb,db);return function(a){return =
a.getAttribute("id")=3D=3D=3Db}}):(delete =
d.find.ID,d.filter.ID=3Dfunction(a){var b=3Da.replace(cb,db);return =
function(a){var c=3Dtypeof =
a.getAttributeNode!=3D=3DC&&a.getAttributeNode("id");return =
c&&c.value=3D=3D=3Db}}),d.find.TAG=3Dc.getElementsByTagName?function(a,b)=
{return typeof =
b.getElementsByTagName!=3D=3DC?b.getElementsByTagName(a):void =
0}:function(a,b){var =
c,d=3D[],e=3D0,f=3Db.getElementsByTagName(a);if("*"=3D=3D=3Da){while(c=3D=
f[e++])1=3D=3D=3Dc.nodeType&&d.push(c);return d}return =
f},d.find.CLASS=3Dc.getElementsByClassName&&function(a,b){return typeof =
b.getElementsByClassName!=3D=3DC&&p?b.getElementsByClassName(a):void =
0},r=3D[],q=3D[],(c.qsa=3D$.test(e.querySelectorAll))&&(ib(function(a){a.=
innerHTML=3D"<select msallowclip=3D''><option =
selected=3D''></option></select>",a.querySelectorAll("[msallowclip^=3D'']=
").length&&q.push("[*^$]=3D"+M+"*(?:''|\"\")"),a.querySelectorAll("[selec=
ted]").length||q.push("\\["+M+"*(?:value|"+L+")"),a.querySelectorAll(":ch=
ecked").length||q.push(":checked")}),ib(function(a){var =
b=3De.createElement("input");b.setAttribute("type","hidden"),a.appendChil=
d(b).setAttribute("name","D"),a.querySelectorAll("[name=3Dd]").length&&q.=
push("name"+M+"*[*^$|!~]?=3D"),a.querySelectorAll(":enabled").length||q.p=
ush(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),=
(c.matchesSelector=3D$.test(s=3Do.matches||o.webkitMatchesSelector||o.moz=
MatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ib(function(a=
){c.disconnectedMatch=3Ds.call(a,"div"),s.call(a,"[s!=3D'']:x"),r.push("!=
=3D",Q)}),q=3Dq.length&&new RegExp(q.join("|")),r=3Dr.length&&new =
RegExp(r.join("|")),b=3D$.test(o.compareDocumentPosition),t=3Db||$.test(o=
.contains)?function(a,b){var =
c=3D9=3D=3D=3Da.nodeType?a.documentElement:a,d=3Db&&b.parentNode;return =
a=3D=3D=3Dd||!(!d||1!=3D=3Dd.nodeType||!(c.contains?c.contains(d):a.compa=
reDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b=
)while(b=3Db.parentNode)if(b=3D=3D=3Da)return!0;return!1},B=3Db?function(=
a,b){if(a=3D=3D=3Db)return l=3D!0,0;var =
d=3D!a.compareDocumentPosition-!b.compareDocumentPosition;return =
d?d:(d=3D(a.ownerDocument||a)=3D=3D=3D(b.ownerDocument||b)?a.compareDocum=
entPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)=3D=3D=
=3Dd?a=3D=3D=3De||a.ownerDocument=3D=3D=3Dv&&t(v,a)?-1:b=3D=3D=3De||b.own=
erDocument=3D=3D=3Dv&&t(v,b)?1:k?K.call(k,a)-K.call(k,b):0:4&d?-1:1)}:fun=
ction(a,b){if(a=3D=3D=3Db)return l=3D!0,0;var =
c,d=3D0,f=3Da.parentNode,g=3Db.parentNode,h=3D[a],i=3D[b];if(!f||!g)retur=
n =
a=3D=3D=3De?-1:b=3D=3D=3De?1:f?-1:g?1:k?K.call(k,a)-K.call(k,b):0;if(f=3D=
=3D=3Dg)return =
kb(a,b);c=3Da;while(c=3Dc.parentNode)h.unshift(c);c=3Db;while(c=3Dc.paren=
tNode)i.unshift(c);while(h[d]=3D=3D=3Di[d])d++;return =
d?kb(h[d],i[d]):h[d]=3D=3D=3Dv?-1:i[d]=3D=3D=3Dv?1:0},e):n},fb.matches=3D=
function(a,b){return =
fb(a,null,null,b)},fb.matchesSelector=3Dfunction(a,b){if((a.ownerDocument=
||a)!=3D=3Dn&&m(a),b=3Db.replace(U,"=3D'$1']"),!(!c.matchesSelector||!p||=
r&&r.test(b)||q&&q.test(b)))try{var =
d=3Ds.call(a,b);if(d||c.disconnectedMatch||a.document&&11!=3D=3Da.documen=
t.nodeType)return d}catch(e){}return =
fb(b,n,null,[a]).length>0},fb.contains=3Dfunction(a,b){return(a.ownerDocu=
ment||a)!=3D=3Dn&&m(a),t(a,b)},fb.attr=3Dfunction(a,b){(a.ownerDocument||=
a)!=3D=3Dn&&m(a);var =
e=3Dd.attrHandle[b.toLowerCase()],f=3De&&E.call(d.attrHandle,b.toLowerCas=
e())?e(a,b,!p):void 0;return void =
0!=3D=3Df?f:c.attributes||!p?a.getAttribute(b):(f=3Da.getAttributeNode(b)=
)&&f.specified?f.value:null},fb.error=3Dfunction(a){throw new =
Error("Syntax error, unrecognized expression: =
"+a)},fb.uniqueSort=3Dfunction(a){var =
b,d=3D[],e=3D0,f=3D0;if(l=3D!c.detectDuplicates,k=3D!c.sortStable&&a.slic=
e(0),a.sort(B),l){while(b=3Da[f++])b=3D=3D=3Da[f]&&(e=3Dd.push(f));while(=
e--)a.splice(d[e],1)}return k=3Dnull,a},e=3Dfb.getText=3Dfunction(a){var =
b,c=3D"",d=3D0,f=3Da.nodeType;if(f){if(1=3D=3D=3Df||9=3D=3D=3Df||11=3D=3D=
=3Df){if("string"=3D=3Dtypeof a.textContent)return =
a.textContent;for(a=3Da.firstChild;a;a=3Da.nextSibling)c+=3De(a)}else =
if(3=3D=3D=3Df||4=3D=3D=3Df)return a.nodeValue}else =
while(b=3Da[d++])c+=3De(b);return =
c},d=3Dfb.selectors=3D{cacheLength:50,createPseudo:hb,match:X,attrHandle:=
{},find:{},relative:{">":{dir:"parentNode",first:!0}," =
":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previ=
ousSibling"}},preFilter:{ATTR:function(a){return =
a[1]=3Da[1].replace(cb,db),a[3]=3D(a[3]||a[4]||a[5]||"").replace(cb,db),"=
~=3D"=3D=3D=3Da[2]&&(a[3]=3D" "+a[3]+" =
"),a.slice(0,4)},CHILD:function(a){return =
a[1]=3Da[1].toLowerCase(),"nth"=3D=3D=3Da[1].slice(0,3)?(a[3]||fb.error(a=
[0]),a[4]=3D+(a[4]?a[5]+(a[6]||1):2*("even"=3D=3D=3Da[3]||"odd"=3D=3D=3Da=
[3])),a[5]=3D+(a[7]+a[8]||"odd"=3D=3D=3Da[3])):a[3]&&fb.error(a[0]),a},PS=
EUDO:function(a){var b,c=3D!a[6]&&a[2];return =
X.CHILD.test(a[0])?null:(a[3]?a[2]=3Da[4]||a[5]||"":c&&V.test(c)&&(b=3Dg(=
c,!0))&&(b=3Dc.indexOf(")",c.length-b)-c.length)&&(a[0]=3Da[0].slice(0,b)=
,a[2]=3Dc.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var =
b=3Da.replace(cb,db).toLowerCase();return"*"=3D=3D=3Da?function(){return!=
0}:function(a){return =
a.nodeName&&a.nodeName.toLowerCase()=3D=3D=3Db}},CLASS:function(a){var =
b=3Dy[a+" "];return b||(b=3Dnew =
RegExp("(^|"+M+")"+a+"("+M+"|$)"))&&y(a,function(a){return =
b.test("string"=3D=3Dtypeof a.className&&a.className||typeof =
a.getAttribute!=3D=3DC&&a.getAttribute("class")||"")})},ATTR:function(a,b=
,c){return function(d){var e=3Dfb.attr(d,a);return =
null=3D=3De?"!=3D"=3D=3D=3Db:b?(e+=3D"","=3D"=3D=3D=3Db?e=3D=3D=3Dc:"!=3D=
"=3D=3D=3Db?e!=3D=3Dc:"^=3D"=3D=3D=3Db?c&&0=3D=3D=3De.indexOf(c):"*=3D"=3D=
=3D=3Db?c&&e.indexOf(c)>-1:"$=3D"=3D=3D=3Db?c&&e.slice(-c.length)=3D=3D=3D=
c:"~=3D"=3D=3D=3Db?(" "+e+" =
").indexOf(c)>-1:"|=3D"=3D=3D=3Db?e=3D=3D=3Dc||e.slice(0,c.length+1)=3D=3D=
=3Dc+"-":!1):!0}},CHILD:function(a,b,c,d,e){var =
f=3D"nth"!=3D=3Da.slice(0,3),g=3D"last"!=3D=3Da.slice(-4),h=3D"of-type"=3D=
=3D=3Db;return =
1=3D=3D=3Dd&&0=3D=3D=3De?function(a){return!!a.parentNode}:function(b,c,i=
){var =
j,k,l,m,n,o,p=3Df!=3D=3Dg?"nextSibling":"previousSibling",q=3Db.parentNod=
e,r=3Dh&&b.nodeName.toLowerCase(),s=3D!i&&!h;if(q){if(f){while(p){l=3Db;w=
hile(l=3Dl[p])if(h?l.nodeName.toLowerCase()=3D=3D=3Dr:1=3D=3D=3Dl.nodeTyp=
e)return!1;o=3Dp=3D"only"=3D=3D=3Da&&!o&&"nextSibling"}return!0}if(o=3D[g=
?q.firstChild:q.lastChild],g&&s){k=3Dq[u]||(q[u]=3D{}),j=3Dk[a]||[],n=3Dj=
[0]=3D=3D=3Dw&&j[1],m=3Dj[0]=3D=3D=3Dw&&j[2],l=3Dn&&q.childNodes[n];while=
(l=3D++n&&l&&l[p]||(m=3Dn=3D0)||o.pop())if(1=3D=3D=3Dl.nodeType&&++m&&l=3D=
=3D=3Db){k[a]=3D[w,n,m];break}}else =
if(s&&(j=3D(b[u]||(b[u]=3D{}))[a])&&j[0]=3D=3D=3Dw)m=3Dj[1];else =
while(l=3D++n&&l&&l[p]||(m=3Dn=3D0)||o.pop())if((h?l.nodeName.toLowerCase=
()=3D=3D=3Dr:1=3D=3D=3Dl.nodeType)&&++m&&(s&&((l[u]||(l[u]=3D{}))[a]=3D[w=
,m]),l=3D=3D=3Db))break;return =
m-=3De,m=3D=3D=3Dd||m%d=3D=3D=3D0&&m/d>=3D0}}},PSEUDO:function(a,b){var =
c,e=3Dd.pseudos[a]||d.setFilters[a.toLowerCase()]||fb.error("unsupported =
pseudo: "+a);return =
e[u]?e(b):e.length>1?(c=3D[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowe=
rCase())?hb(function(a,c){var =
d,f=3De(a,b),g=3Df.length;while(g--)d=3DK.call(a,f[g]),a[d]=3D!(c[d]=3Df[=
g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:hb(function(a){var =
b=3D[],c=3D[],d=3Dh(a.replace(R,"$1"));return =
d[u]?hb(function(a,b,c,e){var =
f,g=3Dd(a,null,e,[]),h=3Da.length;while(h--)(f=3Dg[h])&&(a[h]=3D!(b[h]=3D=
f))}):function(a,e,f){return =
b[0]=3Da,d(b,null,f,c),!c.pop()}}),has:hb(function(a){return =
function(b){return fb(a,b).length>0}}),contains:hb(function(a){return =
function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lan=
g:hb(function(a){return W.test(a||"")||fb.error("unsupported lang: =
"+a),a=3Da.replace(cb,db).toLowerCase(),function(b){var c;do =
if(c=3Dp?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return=
 =
c=3Dc.toLowerCase(),c=3D=3D=3Da||0=3D=3D=3Dc.indexOf(a+"-");while((b=3Db.=
parentNode)&&1=3D=3D=3Db.nodeType);return!1}}),target:function(b){var =
c=3Da.location&&a.location.hash;return =
c&&c.slice(1)=3D=3D=3Db.id},root:function(a){return =
a=3D=3D=3Do},focus:function(a){return =
a=3D=3D=3Dn.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href=
||~a.tabIndex)},enabled:function(a){return =
a.disabled=3D=3D=3D!1},disabled:function(a){return =
a.disabled=3D=3D=3D!0},checked:function(a){var =
b=3Da.nodeName.toLowerCase();return"input"=3D=3D=3Db&&!!a.checked||"optio=
n"=3D=3D=3Db&&!!a.selected},selected:function(a){return =
a.parentNode&&a.parentNode.selectedIndex,a.selected=3D=3D=3D!0},empty:fun=
ction(a){for(a=3Da.firstChild;a;a=3Da.nextSibling)if(a.nodeType<6)return!=
1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function=
(a){return Z.test(a.nodeName)},input:function(a){return =
Y.test(a.nodeName)},button:function(a){var =
b=3Da.nodeName.toLowerCase();return"input"=3D=3D=3Db&&"button"=3D=3D=3Da.=
type||"button"=3D=3D=3Db},text:function(a){var =
b;return"input"=3D=3D=3Da.nodeName.toLowerCase()&&"text"=3D=3D=3Da.type&&=
(null=3D=3D(b=3Da.getAttribute("type"))||"text"=3D=3D=3Db.toLowerCase())}=
,first:nb(function(){return[0]}),last:nb(function(a,b){return[b-1]}),eq:n=
b(function(a,b,c){return[0>c?c+b:c]}),even:nb(function(a,b){for(var =
c=3D0;b>c;c+=3D2)a.push(c);return a}),odd:nb(function(a,b){for(var =
c=3D1;b>c;c+=3D2)a.push(c);return a}),lt:nb(function(a,b,c){for(var =
d=3D0>c?c+b:c;--d>=3D0;)a.push(d);return =
a}),gt:nb(function(a,b,c){for(var d=3D0>c?c+b:c;++d<b;)a.push(d);return =
a})}},d.pseudos.nth=3Dd.pseudos.eq;for(b =
in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=3Dlb(b=
);for(b in{submit:!0,reset:!0})d.pseudos[b]=3Dmb(b);function =
pb(){}pb.prototype=3Dd.filters=3Dd.pseudos,d.setFilters=3Dnew =
pb,g=3Dfb.tokenize=3Dfunction(a,b){var c,e,f,g,h,i,j,k=3Dz[a+" =
"];if(k)return =
b?0:k.slice(0);h=3Da,i=3D[],j=3Dd.preFilter;while(h){(!c||(e=3DS.exec(h))=
)&&(e&&(h=3Dh.slice(e[0].length)||h),i.push(f=3D[])),c=3D!1,(e=3DT.exec(h=
))&&(c=3De.shift(),f.push({value:c,type:e[0].replace(R," =
")}),h=3Dh.slice(c.length));for(g in =
d.filter)!(e=3DX[g].exec(h))||j[g]&&!(e=3Dj[g](e))||(c=3De.shift(),f.push=
({value:c,type:g,matches:e}),h=3Dh.slice(c.length));if(!c)break}return =
b?h.length:h?fb.error(a):z(a,i).slice(0)};function qb(a){for(var =
b=3D0,c=3Da.length,d=3D"";c>b;b++)d+=3Da[b].value;return d}function =
rb(a,b,c){var d=3Db.dir,e=3Dc&&"parentNode"=3D=3D=3Dd,f=3Dx++;return =
b.first?function(b,c,f){while(b=3Db[d])if(1=3D=3D=3Db.nodeType||e)return =
a(b,c,f)}:function(b,c,g){var =
h,i,j=3D[w,f];if(g){while(b=3Db[d])if((1=3D=3D=3Db.nodeType||e)&&a(b,c,g)=
)return!0}else =
while(b=3Db[d])if(1=3D=3D=3Db.nodeType||e){if(i=3Db[u]||(b[u]=3D{}),(h=3D=
i[d])&&h[0]=3D=3D=3Dw&&h[1]=3D=3D=3Df)return =
j[2]=3Dh[2];if(i[d]=3Dj,j[2]=3Da(b,c,g))return!0}}}function sb(a){return =
a.length>1?function(b,c,d){var =
e=3Da.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function =
tb(a,b,c){for(var d=3D0,e=3Db.length;e>d;d++)fb(a,b[d],c);return =
c}function ub(a,b,c,d,e){for(var =
f,g=3D[],h=3D0,i=3Da.length,j=3Dnull!=3Db;i>h;h++)(f=3Da[h])&&(!c||c(f,d,=
e))&&(g.push(f),j&&b.push(h));return g}function vb(a,b,c,d,e,f){return =
d&&!d[u]&&(d=3Dvb(d)),e&&!e[u]&&(e=3Dvb(e,f)),hb(function(f,g,h,i){var =
j,k,l,m=3D[],n=3D[],o=3Dg.length,p=3Df||tb(b||"*",h.nodeType?[h]:h,[]),q=3D=
!a||!f&&b?p:ub(p,m,a,h,i),r=3Dc?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){=
j=3Dub(r,n),d(j,[],h,i),k=3Dj.length;while(k--)(l=3Dj[k])&&(r[n[k]]=3D!(q=
[n[k]]=3Dl))}if(f){if(e||a){if(e){j=3D[],k=3Dr.length;while(k--)(l=3Dr[k]=
)&&j.push(q[k]=3Dl);e(null,r=3D[],j,i)}k=3Dr.length;while(k--)(l=3Dr[k])&=
&(j=3De?K.call(f,l):m[k])>-1&&(f[j]=3D!(g[j]=3Dl))}}else =
r=3Dub(r=3D=3D=3Dg?r.splice(o,r.length):r),e?e(null,g,r,i):I.apply(g,r)})=
}function wb(a){for(var =
b,c,e,f=3Da.length,g=3Dd.relative[a[0].type],h=3Dg||d.relative[" =
"],i=3Dg?1:0,k=3Drb(function(a){return =
a=3D=3D=3Db},h,!0),l=3Drb(function(a){return =
K.call(b,a)>-1},h,!0),m=3D[function(a,c,d){return!g&&(d||c!=3D=3Dj)||((b=3D=
c).nodeType?k(a,c,d):l(a,c,d))}];f>i;i++)if(c=3Dd.relative[a[i].type])m=3D=
[rb(sb(m),c)];else{if(c=3Dd.filter[a[i].type].apply(null,a[i].matches),c[=
u]){for(e=3D++i;f>e;e++)if(d.relative[a[e].type])break;return =
vb(i>1&&sb(m),i>1&&qb(a.slice(0,i-1).concat({value:" =
"=3D=3D=3Da[i-2].type?"*":""})).replace(R,"$1"),c,e>i&&wb(a.slice(i,e)),f=
>e&&wb(a=3Da.slice(e)),f>e&&qb(a))}m.push(c)}return sb(m)}function =
xb(a,b){var c=3Db.length>0,e=3Da.length>0,f=3Dfunction(f,g,h,i,k){var =
l,m,o,p=3D0,q=3D"0",r=3Df&&[],s=3D[],t=3Dj,u=3Df||e&&d.find.TAG("*",k),v=3D=
w+=3Dnull=3D=3Dt?1:Math.random()||.1,x=3Du.length;for(k&&(j=3Dg!=3D=3Dn&&=
g);q!=3D=3Dx&&null!=3D(l=3Du[q]);q++){if(e&&l){m=3D0;while(o=3Da[m++])if(=
o(l,g,h)){i.push(l);break}k&&(w=3Dv)}c&&((l=3D!o&&l)&&p--,f&&r.push(l))}i=
f(p+=3Dq,c&&q!=3D=3Dp){m=3D0;while(o=3Db[m++])o(r,s,g,h);if(f){if(p>0)whi=
le(q--)r[q]||s[q]||(s[q]=3DG.call(i));s=3Dub(s)}I.apply(i,s),k&&!f&&s.len=
gth>0&&p+b.length>1&&fb.uniqueSort(i)}return k&&(w=3Dv,j=3Dt),r};return =
c?hb(f):f}return h=3Dfb.compile=3Dfunction(a,b){var =
c,d=3D[],e=3D[],f=3DA[a+" =
"];if(!f){b||(b=3Dg(a)),c=3Db.length;while(c--)f=3Dwb(b[c]),f[u]?d.push(f=
):e.push(f);f=3DA(a,xb(e,d)),f.selector=3Da}return =
f},i=3Dfb.select=3Dfunction(a,b,e,f){var =
i,j,k,l,m,n=3D"function"=3D=3Dtypeof =
a&&a,o=3D!f&&g(a=3Dn.selector||a);if(e=3De||[],1=3D=3D=3Do.length){if(j=3D=
o[0]=3Do[0].slice(0),j.length>2&&"ID"=3D=3D=3D(k=3Dj[0]).type&&c.getById&=
&9=3D=3D=3Db.nodeType&&p&&d.relative[j[1].type]){if(b=3D(d.find.ID(k.matc=
hes[0].replace(cb,db),b)||[])[0],!b)return =
e;n&&(b=3Db.parentNode),a=3Da.slice(j.shift().value.length)}i=3DX.needsCo=
ntext.test(a)?0:j.length;while(i--){if(k=3Dj[i],d.relative[l=3Dk.type])br=
eak;if((m=3Dd.find[l])&&(f=3Dm(k.matches[0].replace(cb,db),ab.test(j[0].t=
ype)&&ob(b.parentNode)||b))){if(j.splice(i,1),a=3Df.length&&qb(j),!a)retu=
rn =
I.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&&ob(b.parent=
Node)||b),e},c.sortStable=3Du.split("").sort(B).join("")=3D=3D=3Du,c.dete=
ctDuplicates=3D!!l,m(),c.sortDetached=3Dib(function(a){return =
1&a.compareDocumentPosition(n.createElement("div"))}),ib(function(a){retu=
rn a.innerHTML=3D"<a =
href=3D'#'></a>","#"=3D=3D=3Da.firstChild.getAttribute("href")})||jb("typ=
e|href|height|width",function(a,b,c){return c?void =
0:a.getAttribute(b,"type"=3D=3D=3Db.toLowerCase()?1:2)}),c.attributes&&ib=
(function(a){return =
a.innerHTML=3D"<input/>",a.firstChild.setAttribute("value",""),""=3D=3D=3D=
a.firstChild.getAttribute("value")})||jb("value",function(a,b,c){return =
c||"input"!=3D=3Da.nodeName.toLowerCase()?void =
0:a.defaultValue}),ib(function(a){return =
null=3D=3Da.getAttribute("disabled")})||jb(L,function(a,b,c){var =
d;return c?void =
0:a[b]=3D=3D=3D!0?b.toLowerCase():(d=3Da.getAttributeNode(b))&&d.specifie=
d?d.value:null}),fb}(a);m.find=3Ds,m.expr=3Ds.selectors,m.expr[":"]=3Dm.e=
xpr.pseudos,m.unique=3Ds.uniqueSort,m.text=3Ds.getText,m.isXMLDoc=3Ds.isX=
ML,m.contains=3Ds.contains;var =
t=3Dm.expr.match.needsContext,u=3D/^<(\w+)\s*\/?>(?:<\/\1>|)$/,v=3D/^.[^:=
#\[\.,]*$/;function w(a,b,c){if(m.isFunction(b))return =
m.grep(a,function(a,d){return!!b.call(a,d,a)!=3D=3Dc});if(b.nodeType)retu=
rn m.grep(a,function(a){return =
a=3D=3D=3Db!=3D=3Dc});if("string"=3D=3Dtypeof b){if(v.test(b))return =
m.filter(b,a,c);b=3Dm.filter(b,a)}return m.grep(a,function(a){return =
m.inArray(a,b)>=3D0!=3D=3Dc})}m.filter=3Dfunction(a,b,c){var =
d=3Db[0];return =
c&&(a=3D":not("+a+")"),1=3D=3D=3Db.length&&1=3D=3D=3Dd.nodeType?m.find.ma=
tchesSelector(d,a)?[d]:[]:m.find.matches(a,m.grep(b,function(a){return =
1=3D=3D=3Da.nodeType}))},m.fn.extend({find:function(a){var =
b,c=3D[],d=3Dthis,e=3Dd.length;if("string"!=3Dtypeof a)return =
this.pushStack(m(a).filter(function(){for(b=3D0;e>b;b++)if(m.contains(d[b=
],this))return!0}));for(b=3D0;e>b;b++)m.find(a,d[b],c);return =
c=3Dthis.pushStack(e>1?m.unique(c):c),c.selector=3Dthis.selector?this.sel=
ector+" "+a:a,c},filter:function(a){return =
this.pushStack(w(this,a||[],!1))},not:function(a){return =
this.pushStack(w(this,a||[],!0))},is:function(a){return!!w(this,"string"=3D=
=3Dtypeof a&&t.test(a)?m(a):a||[],!1).length}});var =
x,y=3Da.document,z=3D/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,A=3Dm.fn.init=3D=
function(a,b){var c,d;if(!a)return this;if("string"=3D=3Dtypeof =
a){if(c=3D"<"=3D=3D=3Da.charAt(0)&&">"=3D=3D=3Da.charAt(a.length-1)&&a.le=
ngth>=3D3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||x).=
find(a):this.constructor(b).find(a);if(c[1]){if(b=3Db instanceof =
m?b[0]:b,m.merge(this,m.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:y=
,!0)),u.test(c[1])&&m.isPlainObject(b))for(c in =
b)m.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return =
this}if(d=3Dy.getElementById(c[2]),d&&d.parentNode){if(d.id!=3D=3Dc[2])re=
turn x.find(a);this.length=3D1,this[0]=3Dd}return =
this.context=3Dy,this.selector=3Da,this}return =
a.nodeType?(this.context=3Dthis[0]=3Da,this.length=3D1,this):m.isFunction=
(a)?"undefined"!=3Dtypeof x.ready?x.ready(a):a(m):(void =
0!=3D=3Da.selector&&(this.selector=3Da.selector,this.context=3Da.context)=
,m.makeArray(a,this))};A.prototype=3Dm.fn,x=3Dm(y);var =
B=3D/^(?:parents|prev(?:Until|All))/,C=3D{children:!0,contents:!0,next:!0=
,prev:!0};m.extend({dir:function(a,b,c){var =
d=3D[],e=3Da[b];while(e&&9!=3D=3De.nodeType&&(void =
0=3D=3D=3Dc||1!=3D=3De.nodeType||!m(e).is(c)))1=3D=3D=3De.nodeType&&d.pus=
h(e),e=3De[b];return d},sibling:function(a,b){for(var =
c=3D[];a;a=3Da.nextSibling)1=3D=3D=3Da.nodeType&&a!=3D=3Db&&c.push(a);ret=
urn c}}),m.fn.extend({has:function(a){var =
b,c=3Dm(a,this),d=3Dc.length;return =
this.filter(function(){for(b=3D0;d>b;b++)if(m.contains(this,c[b]))return!=
0})},closest:function(a,b){for(var =
c,d=3D0,e=3Dthis.length,f=3D[],g=3Dt.test(a)||"string"!=3Dtypeof =
a?m(a,b||this.context):0;e>d;d++)for(c=3Dthis[d];c&&c!=3D=3Db;c=3Dc.paren=
tNode)if(c.nodeType<11&&(g?g.index(c)>-1:1=3D=3D=3Dc.nodeType&&m.find.mat=
chesSelector(c,a))){f.push(c);break}return =
this.pushStack(f.length>1?m.unique(f):f)},index:function(a){return =
a?"string"=3D=3Dtypeof =
a?m.inArray(this[0],m(a)):m.inArray(a.jquery?a[0]:a,this):this[0]&&this[0=
].parentNode?this.first().prevAll().length:-1},add:function(a,b){return =
this.pushStack(m.unique(m.merge(this.get(),m(a,b))))},addBack:function(a)=
{return =
this.add(null=3D=3Da?this.prevObject:this.prevObject.filter(a))}});functi=
on D(a,b){do a=3Da[b];while(a&&1!=3D=3Da.nodeType);return =
a}m.each({parent:function(a){var b=3Da.parentNode;return =
b&&11!=3D=3Db.nodeType?b:null},parents:function(a){return =
m.dir(a,"parentNode")},parentsUntil:function(a,b,c){return =
m.dir(a,"parentNode",c)},next:function(a){return =
D(a,"nextSibling")},prev:function(a){return =
D(a,"previousSibling")},nextAll:function(a){return =
m.dir(a,"nextSibling")},prevAll:function(a){return =
m.dir(a,"previousSibling")},nextUntil:function(a,b,c){return =
m.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return =
m.dir(a,"previousSibling",c)},siblings:function(a){return =
m.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return =
m.sibling(a.firstChild)},contents:function(a){return =
m.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:m.merg=
e([],a.childNodes)}},function(a,b){m.fn[a]=3Dfunction(c,d){var =
e=3Dm.map(this,b,c);return"Until"!=3D=3Da.slice(-5)&&(d=3Dc),d&&"string"=3D=
=3Dtypeof =
d&&(e=3Dm.filter(d,e)),this.length>1&&(C[a]||(e=3Dm.unique(e)),B.test(a)&=
&(e=3De.reverse())),this.pushStack(e)}});var E=3D/\S+/g,F=3D{};function =
G(a){var b=3DF[a]=3D{};return =
m.each(a.match(E)||[],function(a,c){b[c]=3D!0}),b}m.Callbacks=3Dfunction(=
a){a=3D"string"=3D=3Dtypeof a?F[a]||G(a):m.extend({},a);var =
b,c,d,e,f,g,h=3D[],i=3D!a.once&&[],j=3Dfunction(l){for(c=3Da.memory&&l,d=3D=
!0,f=3Dg||0,g=3D0,e=3Dh.length,b=3D!0;h&&e>f;f++)if(h[f].apply(l[0],l[1])=
=3D=3D=3D!1&&a.stopOnFalse){c=3D!1;break}b=3D!1,h&&(i?i.length&&j(i.shift=
()):c?h=3D[]:k.disable())},k=3D{add:function(){if(h){var =
d=3Dh.length;!function f(b){m.each(b,function(b,c){var =
d=3Dm.type(c);"function"=3D=3D=3Dd?a.unique&&k.has(c)||h.push(c):c&&c.len=
gth&&"string"!=3D=3Dd&&f(c)})}(arguments),b?e=3Dh.length:c&&(g=3Dd,j(c))}=
return this},remove:function(){return =
h&&m.each(arguments,function(a,c){var =
d;while((d=3Dm.inArray(c,h,d))>-1)h.splice(d,1),b&&(e>=3Dd&&e--,f>=3Dd&&f=
--)}),this},has:function(a){return =
a?m.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return =
h=3D[],e=3D0,this},disable:function(){return h=3Di=3Dc=3Dvoid =
0,this},disabled:function(){return!h},lock:function(){return i=3Dvoid =
0,c||k.disable(),this},locked:function(){return!i},fireWith:function(a,c)=
{return!h||d&&!i||(c=3Dc||[],c=3D[a,c.slice?c.slice():c],b?i.push(c):j(c)=
),this},fire:function(){return =
k.fireWith(this,arguments),this},fired:function(){return!!d}};return =
k},m.extend({Deferred:function(a){var =
b=3D[["resolve","done",m.Callbacks("once =
memory"),"resolved"],["reject","fail",m.Callbacks("once =
memory"),"rejected"],["notify","progress",m.Callbacks("memory")]],c=3D"pe=
nding",d=3D{state:function(){return c},always:function(){return =
e.done(arguments).fail(arguments),this},then:function(){var =
a=3Darguments;return m.Deferred(function(c){m.each(b,function(b,f){var =
g=3Dm.isFunction(a[b])&&a[b];e[f[1]](function(){var =
a=3Dg&&g.apply(this,arguments);a&&m.isFunction(a.promise)?a.promise().don=
e(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this=3D=3D=3D=
d?c.promise():this,g?[a]:arguments)})}),a=3Dnull}).promise()},promise:fun=
ction(a){return null!=3Da?m.extend(a,d):d}},e=3D{};return =
d.pipe=3Dd.then,m.each(b,function(a,f){var =
g=3Df[2],h=3Df[3];d[f[1]]=3Dg.add,h&&g.add(function(){c=3Dh},b[1^a][2].di=
sable,b[2][2].lock),e[f[0]]=3Dfunction(){return =
e[f[0]+"With"](this=3D=3D=3De?d:this,arguments),this},e[f[0]+"With"]=3Dg.=
fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var =
b=3D0,c=3Dd.call(arguments),e=3Dc.length,f=3D1!=3D=3De||a&&m.isFunction(a=
.promise)?e:0,g=3D1=3D=3D=3Df?a:m.Deferred(),h=3Dfunction(a,b,c){return =
function(e){b[a]=3Dthis,c[a]=3Darguments.length>1?d.call(arguments):e,c=3D=
=3D=3Di?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=3D=
new Array(e),j=3Dnew Array(e),k=3Dnew =
Array(e);e>b;b++)c[b]&&m.isFunction(c[b].promise)?c[b].promise().done(h(b=
,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return =
f||g.resolveWith(k,c),g.promise()}});var =
H;m.fn.ready=3Dfunction(a){return =
m.ready.promise().done(a),this},m.extend({isReady:!1,readyWait:1,holdRead=
y:function(a){a?m.readyWait++:m.ready(!0)},ready:function(a){if(a=3D=3D=3D=
!0?!--m.readyWait:!m.isReady){if(!y.body)return =
setTimeout(m.ready);m.isReady=3D!0,a!=3D=3D!0&&--m.readyWait>0||(H.resolv=
eWith(y,[m]),m.fn.triggerHandler&&(m(y).triggerHandler("ready"),m(y).off(=
"ready")))}}});function =
I(){y.addEventListener?(y.removeEventListener("DOMContentLoaded",J,!1),a.=
removeEventListener("load",J,!1)):(y.detachEvent("onreadystatechange",J),=
a.detachEvent("onload",J))}function =
J(){(y.addEventListener||"load"=3D=3D=3Devent.type||"complete"=3D=3D=3Dy.=
readyState)&&(I(),m.ready())}m.ready.promise=3Dfunction(b){if(!H)if(H=3Dm=
.Deferred(),"complete"=3D=3D=3Dy.readyState)setTimeout(m.ready);else =
if(y.addEventListener)y.addEventListener("DOMContentLoaded",J,!1),a.addEv=
entListener("load",J,!1);else{y.attachEvent("onreadystatechange",J),a.att=
achEvent("onload",J);var =
c=3D!1;try{c=3Dnull=3D=3Da.frameElement&&y.documentElement}catch(d){}c&&c=
.doScroll&&!function =
e(){if(!m.isReady){try{c.doScroll("left")}catch(a){return =
setTimeout(e,50)}I(),m.ready()}}()}return H.promise(b)};var =
K=3D"undefined",L;for(L in =
m(k))break;k.ownLast=3D"0"!=3D=3DL,k.inlineBlockNeedsLayout=3D!1,m(functi=
on(){var =
a,b,c,d;c=3Dy.getElementsByTagName("body")[0],c&&c.style&&(b=3Dy.createEl=
ement("div"),d=3Dy.createElement("div"),d.style.cssText=3D"position:absol=
ute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).append=
Child(b),typeof =
b.style.zoom!=3D=3DK&&(b.style.cssText=3D"display:inline;margin:0;border:=
0;padding:1px;width:1px;zoom:1",k.inlineBlockNeedsLayout=3Da=3D3=3D=3D=3D=
b.offsetWidth,a&&(c.style.zoom=3D1)),c.removeChild(d))}),function(){var =
a=3Dy.createElement("div");if(null=3D=3Dk.deleteExpando){k.deleteExpando=3D=
!0;try{delete =
a.test}catch(b){k.deleteExpando=3D!1}}a=3Dnull}(),m.acceptData=3Dfunction=
(a){var b=3Dm.noData[(a.nodeName+" =
").toLowerCase()],c=3D+a.nodeType||1;return =
1!=3D=3Dc&&9!=3D=3Dc?!1:!b||b!=3D=3D!0&&a.getAttribute("classid")=3D=3D=3D=
b};var M=3D/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,N=3D/([A-Z])/g;function =
O(a,b,c){if(void 0=3D=3D=3Dc&&1=3D=3D=3Da.nodeType){var =
d=3D"data-"+b.replace(N,"-$1").toLowerCase();if(c=3Da.getAttribute(d),"st=
ring"=3D=3Dtypeof =
c){try{c=3D"true"=3D=3D=3Dc?!0:"false"=3D=3D=3Dc?!1:"null"=3D=3D=3Dc?null=
:+c+""=3D=3D=3Dc?+c:M.test(c)?m.parseJSON(c):c}catch(e){}m.data(a,b,c)}el=
se c=3Dvoid 0}return c}function P(a){var b;for(b in =
a)if(("data"!=3D=3Db||!m.isEmptyObject(a[b]))&&"toJSON"!=3D=3Db)return!1;=
return!0}function Q(a,b,d,e){if(m.acceptData(a)){var =
f,g,h=3Dm.expando,i=3Da.nodeType,j=3Di?m.cache:a,k=3Di?a[h]:a[h]&&h;
if(k&&j[k]&&(e||j[k].data)||void 0!=3D=3Dd||"string"!=3Dtypeof b)return =
k||(k=3Di?a[h]=3Dc.pop()||m.guid++:h),j[k]||(j[k]=3Di?{}:{toJSON:m.noop})=
,("object"=3D=3Dtypeof b||"function"=3D=3Dtypeof =
b)&&(e?j[k]=3Dm.extend(j[k],b):j[k].data=3Dm.extend(j[k].data,b)),g=3Dj[k=
],e||(g.data||(g.data=3D{}),g=3Dg.data),void =
0!=3D=3Dd&&(g[m.camelCase(b)]=3Dd),"string"=3D=3Dtypeof =
b?(f=3Dg[b],null=3D=3Df&&(f=3Dg[m.camelCase(b)])):f=3Dg,f}}function =
R(a,b,c){if(m.acceptData(a)){var =
d,e,f=3Da.nodeType,g=3Df?m.cache:a,h=3Df?a[m.expando]:m.expando;if(g[h]){=
if(b&&(d=3Dc?g[h]:g[h].data)){m.isArray(b)?b=3Db.concat(m.map(b,m.camelCa=
se)):b in d?b=3D[b]:(b=3Dm.camelCase(b),b=3Db in d?[b]:b.split(" =
")),e=3Db.length;while(e--)delete =
d[b[e]];if(c?!P(d):!m.isEmptyObject(d))return}(c||(delete =
g[h].data,P(g[h])))&&(f?m.cleanData([a],!0):k.deleteExpando||g!=3Dg.windo=
w?delete g[h]:g[h]=3Dnull)}}}m.extend({cache:{},noData:{"applet =
":!0,"embed ":!0,"object =
":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(a){retur=
n =
a=3Da.nodeType?m.cache[a[m.expando]]:a[m.expando],!!a&&!P(a)},data:functi=
on(a,b,c){return Q(a,b,c)},removeData:function(a,b){return =
R(a,b)},_data:function(a,b,c){return =
Q(a,b,c,!0)},_removeData:function(a,b){return =
R(a,b,!0)}}),m.fn.extend({data:function(a,b){var =
c,d,e,f=3Dthis[0],g=3Df&&f.attributes;if(void =
0=3D=3D=3Da){if(this.length&&(e=3Dm.data(f),1=3D=3D=3Df.nodeType&&!m._dat=
a(f,"parsedAttrs"))){c=3Dg.length;while(c--)g[c]&&(d=3Dg[c].name,0=3D=3D=3D=
d.indexOf("data-")&&(d=3Dm.camelCase(d.slice(5)),O(f,d,e[d])));m._data(f,=
"parsedAttrs",!0)}return e}return"object"=3D=3Dtypeof =
a?this.each(function(){m.data(this,a)}):arguments.length>1?this.each(func=
tion(){m.data(this,a,b)}):f?O(f,a,m.data(f,a)):void =
0},removeData:function(a){return =
this.each(function(){m.removeData(this,a)})}}),m.extend({queue:function(a=
,b,c){var d;return =
a?(b=3D(b||"fx")+"queue",d=3Dm._data(a,b),c&&(!d||m.isArray(c)?d=3Dm._dat=
a(a,b,m.makeArray(c)):d.push(c)),d||[]):void =
0},dequeue:function(a,b){b=3Db||"fx";var =
c=3Dm.queue(a,b),d=3Dc.length,e=3Dc.shift(),f=3Dm._queueHooks(a,b),g=3Dfu=
nction(){m.dequeue(a,b)};"inprogress"=3D=3D=3De&&(e=3Dc.shift(),d--),e&&(=
"fx"=3D=3D=3Db&&c.unshift("inprogress"),delete =
f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){va=
r c=3Db+"queueHooks";return =
m._data(a,c)||m._data(a,c,{empty:m.Callbacks("once =
memory").add(function(){m._removeData(a,b+"queue"),m._removeData(a,c)})})=
}}),m.fn.extend({queue:function(a,b){var c=3D2;return"string"!=3Dtypeof =
a&&(b=3Da,a=3D"fx",c--),arguments.length<c?m.queue(this[0],a):void =
0=3D=3D=3Db?this:this.each(function(){var =
c=3Dm.queue(this,a,b);m._queueHooks(this,a),"fx"=3D=3D=3Da&&"inprogress"!=
=3D=3Dc[0]&&m.dequeue(this,a)})},dequeue:function(a){return =
this.each(function(){m.dequeue(this,a)})},clearQueue:function(a){return =
this.queue(a||"fx",[])},promise:function(a,b){var =
c,d=3D1,e=3Dm.Deferred(),f=3Dthis,g=3Dthis.length,h=3Dfunction(){--d||e.r=
esolveWith(f,[f])};"string"!=3Dtypeof a&&(b=3Da,a=3Dvoid =
0),a=3Da||"fx";while(g--)c=3Dm._data(f[g],a+"queueHooks"),c&&c.empty&&(d+=
+,c.empty.add(h));return h(),e.promise(b)}});var =
S=3D/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,T=3D["Top","Right","Bott=
om","Left"],U=3Dfunction(a,b){return =
a=3Db||a,"none"=3D=3D=3Dm.css(a,"display")||!m.contains(a.ownerDocument,a=
)},V=3Dm.access=3Dfunction(a,b,c,d,e,f,g){var =
h=3D0,i=3Da.length,j=3Dnull=3D=3Dc;if("object"=3D=3D=3Dm.type(c)){e=3D!0;=
for(h in c)m.access(a,b,h,c[h],!0,f,g)}else if(void =
0!=3D=3Dd&&(e=3D!0,m.isFunction(d)||(g=3D!0),j&&(g?(b.call(a,d),b=3Dnull)=
:(j=3Db,b=3Dfunction(a,b,c){return =
j.call(m(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));=
return =
e?a:j?b.call(a):i?b(a[0],c):f},W=3D/^(?:checkbox|radio)$/i;!function(){va=
r =
a=3Dy.createElement("input"),b=3Dy.createElement("div"),c=3Dy.createDocum=
entFragment();if(b.innerHTML=3D"  <link/><table></table><a =
href=3D'/a'>a</a><input =
type=3D'checkbox'/>",k.leadingWhitespace=3D3=3D=3D=3Db.firstChild.nodeTyp=
e,k.tbody=3D!b.getElementsByTagName("tbody").length,k.htmlSerialize=3D!!b=
.getElementsByTagName("link").length,k.html5Clone=3D"<:nav></:nav>"!=3D=3D=
y.createElement("nav").cloneNode(!0).outerHTML,a.type=3D"checkbox",a.chec=
ked=3D!0,c.appendChild(a),k.appendChecked=3Da.checked,b.innerHTML=3D"<tex=
tarea>x</textarea>",k.noCloneChecked=3D!!b.cloneNode(!0).lastChild.defaul=
tValue,c.appendChild(b),b.innerHTML=3D"<input type=3D'radio' =
checked=3D'checked' =
name=3D't'/>",k.checkClone=3Db.cloneNode(!0).cloneNode(!0).lastChild.chec=
ked,k.noCloneEvent=3D!0,b.attachEvent&&(b.attachEvent("onclick",function(=
){k.noCloneEvent=3D!1}),b.cloneNode(!0).click()),null=3D=3Dk.deleteExpand=
o){k.deleteExpando=3D!0;try{delete =
b.test}catch(d){k.deleteExpando=3D!1}}}(),function(){var =
b,c,d=3Dy.createElement("div");for(b =
in{submit:!0,change:!0,focusin:!0})c=3D"on"+b,(k[b+"Bubbles"]=3Dc in =
a)||(d.setAttribute(c,"t"),k[b+"Bubbles"]=3Dd.attributes[c].expando=3D=3D=
=3D!1);d=3Dnull}();var =
X=3D/^(?:input|select|textarea)$/i,Y=3D/^key/,Z=3D/^(?:mouse|pointer|cont=
extmenu)|click/,$=3D/^(?:focusinfocus|focusoutblur)$/,_=3D/^([^.]*)(?:\.(=
.+)|)$/;function ab(){return!0}function bb(){return!1}function =
cb(){try{return =
y.activeElement}catch(a){}}m.event=3D{global:{},add:function(a,b,c,d,e){v=
ar =
f,g,h,i,j,k,l,n,o,p,q,r=3Dm._data(a);if(r){c.handler&&(i=3Dc,c=3Di.handle=
r,e=3Di.selector),c.guid||(c.guid=3Dm.guid++),(g=3Dr.events)||(g=3Dr.even=
ts=3D{}),(k=3Dr.handle)||(k=3Dr.handle=3Dfunction(a){return typeof =
m=3D=3D=3DK||a&&m.event.triggered=3D=3D=3Da.type?void =
0:m.event.dispatch.apply(k.elem,arguments)},k.elem=3Da),b=3D(b||"").match=
(E)||[""],h=3Db.length;while(h--)f=3D_.exec(b[h])||[],o=3Dq=3Df[1],p=3D(f=
[2]||"").split(".").sort(),o&&(j=3Dm.event.special[o]||{},o=3D(e?j.delega=
teType:j.bindType)||o,j=3Dm.event.special[o]||{},l=3Dm.extend({type:o,ori=
gType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&m.expr.ma=
tch.needsContext.test(e),namespace:p.join(".")},i),(n=3Dg[o])||(n=3Dg[o]=3D=
[],n.delegateCount=3D0,j.setup&&j.setup.call(a,d,p,k)!=3D=3D!1||(a.addEve=
ntListener?a.addEventListener(o,k,!1):a.attachEvent&&a.attachEvent("on"+o=
,k))),j.add&&(j.add.call(a,l),l.handler.guid||(l.handler.guid=3Dc.guid)),=
e?n.splice(n.delegateCount++,0,l):n.push(l),m.event.global[o]=3D!0);a=3Dn=
ull}},remove:function(a,b,c,d,e){var =
f,g,h,i,j,k,l,n,o,p,q,r=3Dm.hasData(a)&&m._data(a);if(r&&(k=3Dr.events)){=
b=3D(b||"").match(E)||[""],j=3Db.length;while(j--)if(h=3D_.exec(b[j])||[]=
,o=3Dq=3Dh[1],p=3D(h[2]||"").split(".").sort(),o){l=3Dm.event.special[o]|=
|{},o=3D(d?l.delegateType:l.bindType)||o,n=3Dk[o]||[],h=3Dh[2]&&new =
RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),i=3Df=3Dn.length;whil=
e(f--)g=3Dn[f],!e&&q!=3D=3Dg.origType||c&&c.guid!=3D=3Dg.guid||h&&!h.test=
(g.namespace)||d&&d!=3D=3Dg.selector&&("**"!=3D=3Dd||!g.selector)||(n.spl=
ice(f,1),g.selector&&n.delegateCount--,l.remove&&l.remove.call(a,g));i&&!=
n.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!=3D=3D!1||m.removeEv=
ent(a,o,r.handle),delete k[o])}else for(o in =
k)m.event.remove(a,o+b[j],c,d,!0);m.isEmptyObject(k)&&(delete =
r.handle,m._removeData(a,"events"))}},trigger:function(b,c,d,e){var =
f,g,h,i,k,l,n,o=3D[d||y],p=3Dj.call(b,"type")?b.type:b,q=3Dj.call(b,"name=
space")?b.namespace.split("."):[];if(h=3Dl=3Dd=3Dd||y,3!=3D=3Dd.nodeType&=
&8!=3D=3Dd.nodeType&&!$.test(p+m.event.triggered)&&(p.indexOf(".")>=3D0&&=
(q=3Dp.split("."),p=3Dq.shift(),q.sort()),g=3Dp.indexOf(":")<0&&"on"+p,b=3D=
b[m.expando]?b:new m.Event(p,"object"=3D=3Dtypeof =
b&&b),b.isTrigger=3De?2:3,b.namespace=3Dq.join("."),b.namespace_re=3Db.na=
mespace?new =
RegExp("(^|\\.)"+q.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=3Dvoid =
0,b.target||(b.target=3Dd),c=3Dnull=3D=3Dc?[b]:m.makeArray(c,[b]),k=3Dm.e=
vent.special[p]||{},e||!k.trigger||k.trigger.apply(d,c)!=3D=3D!1)){if(!e&=
&!k.noBubble&&!m.isWindow(d)){for(i=3Dk.delegateType||p,$.test(i+p)||(h=3D=
h.parentNode);h;h=3Dh.parentNode)o.push(h),l=3Dh;l=3D=3D=3D(d.ownerDocume=
nt||y)&&o.push(l.defaultView||l.parentWindow||a)}n=3D0;while((h=3Do[n++])=
&&!b.isPropagationStopped())b.type=3Dn>1?i:k.bindType||p,f=3D(m._data(h,"=
events")||{})[b.type]&&m._data(h,"handle"),f&&f.apply(h,c),f=3Dg&&h[g],f&=
&f.apply&&m.acceptData(h)&&(b.result=3Df.apply(h,c),b.result=3D=3D=3D!1&&=
b.preventDefault());if(b.type=3Dp,!e&&!b.isDefaultPrevented()&&(!k._defau=
lt||k._default.apply(o.pop(),c)=3D=3D=3D!1)&&m.acceptData(d)&&g&&d[p]&&!m=
.isWindow(d)){l=3Dd[g],l&&(d[g]=3Dnull),m.event.triggered=3Dp;try{d[p]()}=
catch(r){}m.event.triggered=3Dvoid 0,l&&(d[g]=3Dl)}return =
b.result}},dispatch:function(a){a=3Dm.event.fix(a);var =
b,c,e,f,g,h=3D[],i=3Dd.call(arguments),j=3D(m._data(this,"events")||{})[a=
.type]||[],k=3Dm.event.special[a.type]||{};if(i[0]=3Da,a.delegateTarget=3D=
this,!k.preDispatch||k.preDispatch.call(this,a)!=3D=3D!1){h=3Dm.event.han=
dlers.call(this,a,j),b=3D0;while((f=3Dh[b++])&&!a.isPropagationStopped())=
{a.currentTarget=3Df.elem,g=3D0;while((e=3Df.handlers[g++])&&!a.isImmedia=
tePropagationStopped())(!a.namespace_re||a.namespace_re.test(e.namespace)=
)&&(a.handleObj=3De,a.data=3De.data,c=3D((m.event.special[e.origType]||{}=
).handle||e.handler).apply(f.elem,i),void =
0!=3D=3Dc&&(a.result=3Dc)=3D=3D=3D!1&&(a.preventDefault(),a.stopPropagati=
on()))}return =
k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(=
a,b){var =
c,d,e,f,g=3D[],h=3Db.delegateCount,i=3Da.target;if(h&&i.nodeType&&(!a.but=
ton||"click"!=3D=3Da.type))for(;i!=3Dthis;i=3Di.parentNode||this)if(1=3D=3D=
=3Di.nodeType&&(i.disabled!=3D=3D!0||"click"!=3D=3Da.type)){for(e=3D[],f=3D=
0;h>f;f++)d=3Db[f],c=3Dd.selector+" ",void =
0=3D=3D=3De[c]&&(e[c]=3Dd.needsContext?m(c,this).index(i)>=3D0:m.find(c,t=
his,null,[i]).length),e[c]&&e.push(d);e.length&&g.push({elem:i,handlers:e=
})}return =
h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},fix:function(a){if=
(a[m.expando])return a;var =
b,c,d,e=3Da.type,f=3Da,g=3Dthis.fixHooks[e];g||(this.fixHooks[e]=3Dg=3DZ.=
test(e)?this.mouseHooks:Y.test(e)?this.keyHooks:{}),d=3Dg.props?this.prop=
s.concat(g.props):this.props,a=3Dnew =
m.Event(f),b=3Dd.length;while(b--)c=3Dd[b],a[c]=3Df[c];return =
a.target||(a.target=3Df.srcElement||y),3=3D=3D=3Da.target.nodeType&&(a.ta=
rget=3Da.target.parentNode),a.metaKey=3D!!a.metaKey,g.filter?g.filter(a,f=
):a},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase =
metaKey relatedTarget shiftKey target timeStamp view which".split(" =
"),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" =
"),filter:function(a,b){return =
null=3D=3Da.which&&(a.which=3Dnull!=3Db.charCode?b.charCode:b.keyCode),a}=
},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX =
offsetY pageX pageY screenX screenY toElement".split(" =
"),filter:function(a,b){var c,d,e,f=3Db.button,g=3Db.fromElement;return =
null=3D=3Da.pageX&&null!=3Db.clientX&&(d=3Da.target.ownerDocument||y,e=3D=
d.documentElement,c=3Dd.body,a.pageX=3Db.clientX+(e&&e.scrollLeft||c&&c.s=
crollLeft||0)-(e&&e.clientLeft||c&&c.clientLeft||0),a.pageY=3Db.clientY+(=
e&&e.scrollTop||c&&c.scrollTop||0)-(e&&e.clientTop||c&&c.clientTop||0)),!=
a.relatedTarget&&g&&(a.relatedTarget=3Dg=3D=3D=3Da.target?b.toElement:g),=
a.which||void =
0=3D=3D=3Df||(a.which=3D1&f?1:2&f?3:4&f?2:0),a}},special:{load:{noBubble:=
!0},focus:{trigger:function(){if(this!=3D=3Dcb()&&this.focus)try{return =
this.focus(),!1}catch(a){}},delegateType:"focusin"},blur:{trigger:functio=
n(){return this=3D=3D=3Dcb()&&this.blur?(this.blur(),!1):void =
0},delegateType:"focusout"},click:{trigger:function(){return =
m.nodeName(this,"input")&&"checkbox"=3D=3D=3Dthis.type&&this.click?(this.=
click(),!1):void 0},_default:function(a){return =
m.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void =
0!=3D=3Da.result&&a.originalEvent&&(a.originalEvent.returnValue=3Da.resul=
t)}}},simulate:function(a,b,c,d){var e=3Dm.extend(new =
m.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?m.event.trigger(e,n=
ull,b):m.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefaul=
t()}},m.removeEvent=3Dy.removeEventListener?function(a,b,c){a.removeEvent=
Listener&&a.removeEventListener(b,c,!1)}:function(a,b,c){var =
d=3D"on"+b;a.detachEvent&&(typeof =
a[d]=3D=3D=3DK&&(a[d]=3Dnull),a.detachEvent(d,c))},m.Event=3Dfunction(a,b=
){return this instanceof =
m.Event?(a&&a.type?(this.originalEvent=3Da,this.type=3Da.type,this.isDefa=
ultPrevented=3Da.defaultPrevented||void =
0=3D=3D=3Da.defaultPrevented&&a.returnValue=3D=3D=3D!1?ab:bb):this.type=3D=
a,b&&m.extend(this,b),this.timeStamp=3Da&&a.timeStamp||m.now(),void(this[=
m.expando]=3D!0)):new =
m.Event(a,b)},m.Event.prototype=3D{isDefaultPrevented:bb,isPropagationSto=
pped:bb,isImmediatePropagationStopped:bb,preventDefault:function(){var =
a=3Dthis.originalEvent;this.isDefaultPrevented=3Dab,a&&(a.preventDefault?=
a.preventDefault():a.returnValue=3D!1)},stopPropagation:function(){var =
a=3Dthis.originalEvent;this.isPropagationStopped=3Dab,a&&(a.stopPropagati=
on&&a.stopPropagation(),a.cancelBubble=3D!0)},stopImmediatePropagation:fu=
nction(){var =
a=3Dthis.originalEvent;this.isImmediatePropagationStopped=3Dab,a&&a.stopI=
mmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}=
},m.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"poin=
terover",pointerleave:"pointerout"},function(a,b){m.event.special[a]=3D{d=
elegateType:b,bindType:b,handle:function(a){var =
c,d=3Dthis,e=3Da.relatedTarget,f=3Da.handleObj;return(!e||e!=3D=3Dd&&!m.c=
ontains(d,e))&&(a.type=3Df.origType,c=3Df.handler.apply(this,arguments),a=
.type=3Db),c}}}),k.submitBubbles||(m.event.special.submit=3D{setup:functi=
on(){return m.nodeName(this,"form")?!1:void =
m.event.add(this,"click._submit keypress._submit",function(a){var =
b=3Da.target,c=3Dm.nodeName(b,"input")||m.nodeName(b,"button")?b.form:voi=
d =
0;c&&!m._data(c,"submitBubbles")&&(m.event.add(c,"submit._submit",functio=
n(a){a._submit_bubble=3D!0}),m._data(c,"submitBubbles",!0))})},postDispat=
ch:function(a){a._submit_bubble&&(delete =
a._submit_bubble,this.parentNode&&!a.isTrigger&&m.event.simulate("submit"=
,this.parentNode,a,!0))},teardown:function(){return =
m.nodeName(this,"form")?!1:void =
m.event.remove(this,"._submit")}}),k.changeBubbles||(m.event.special.chan=
ge=3D{setup:function(){return =
X.test(this.nodeName)?(("checkbox"=3D=3D=3Dthis.type||"radio"=3D=3D=3Dthi=
s.type)&&(m.event.add(this,"propertychange._change",function(a){"checked"=
=3D=3D=3Da.originalEvent.propertyName&&(this._just_changed=3D!0)}),m.even=
t.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&=
(this._just_changed=3D!1),m.event.simulate("change",this,a,!0)})),!1):voi=
d m.event.add(this,"beforeactivate._change",function(a){var =
b=3Da.target;X.test(b.nodeName)&&!m._data(b,"changeBubbles")&&(m.event.ad=
d(b,"change._change",function(a){!this.parentNode||a.isSimulated||a.isTri=
gger||m.event.simulate("change",this.parentNode,a,!0)}),m._data(b,"change=
Bubbles",!0))})},handle:function(a){var b=3Da.target;return =
this!=3D=3Db||a.isSimulated||a.isTrigger||"radio"!=3D=3Db.type&&"checkbox=
"!=3D=3Db.type?a.handleObj.handler.apply(this,arguments):void =
0},teardown:function(){return =
m.event.remove(this,"._change"),!X.test(this.nodeName)}}),k.focusinBubble=
s||m.each({focus:"focusin",blur:"focusout"},function(a,b){var =
c=3Dfunction(a){m.event.simulate(b,a.target,m.event.fix(a),!0)};m.event.s=
pecial[b]=3D{setup:function(){var =
d=3Dthis.ownerDocument||this,e=3Dm._data(d,b);e||d.addEventListener(a,c,!=
0),m._data(d,b,(e||0)+1)},teardown:function(){var =
d=3Dthis.ownerDocument||this,e=3Dm._data(d,b)-1;e?m._data(d,b,e):(d.remov=
eEventListener(a,c,!0),m._removeData(d,b))}}}),m.fn.extend({on:function(a=
,b,c,d,e){var f,g;if("object"=3D=3Dtypeof a){"string"!=3Dtypeof =
b&&(c=3Dc||b,b=3Dvoid 0);for(f in a)this.on(f,b,c,a[f],e);return =
this}if(null=3D=3Dc&&null=3D=3Dd?(d=3Db,c=3Db=3Dvoid =
0):null=3D=3Dd&&("string"=3D=3Dtypeof b?(d=3Dc,c=3Dvoid =
0):(d=3Dc,c=3Db,b=3Dvoid 0)),d=3D=3D=3D!1)d=3Dbb;else if(!d)return =
this;return 1=3D=3D=3De&&(g=3Dd,d=3Dfunction(a){return =
m().off(a),g.apply(this,arguments)},d.guid=3Dg.guid||(g.guid=3Dm.guid++))=
,this.each(function(){m.event.add(this,a,d,c,b)})},one:function(a,b,c,d){=
return this.on(a,b,c,d,1)},off:function(a,b,c){var =
d,e;if(a&&a.preventDefault&&a.handleObj)return =
d=3Da.handleObj,m(a.delegateTarget).off(d.namespace?d.origType+"."+d.name=
space:d.origType,d.selector,d.handler),this;if("object"=3D=3Dtypeof =
a){for(e in a)this.off(e,b,a[e]);return =
this}return(b=3D=3D=3D!1||"function"=3D=3Dtypeof b)&&(c=3Db,b=3Dvoid =
0),c=3D=3D=3D!1&&(c=3Dbb),this.each(function(){m.event.remove(this,a,c,b)=
})},trigger:function(a,b){return =
this.each(function(){m.event.trigger(a,b,this)})},triggerHandler:function=
(a,b){var c=3Dthis[0];return c?m.event.trigger(a,b,c,!0):void =
0}});function db(a){var =
b=3Deb.split("|"),c=3Da.createDocumentFragment();if(c.createElement)while=
(b.length)c.createElement(b.pop());return c}var =
eb=3D"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaptio=
n|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summ=
ary|time|video",fb=3D/ jQuery\d+=3D"(?:null|\d+)"/g,gb=3Dnew =
RegExp("<(?:"+eb+")[\\s/>]","i"),hb=3D/^\s+/,ib=3D/<(?!area|br|col|embed|=
hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,jb=3D/<([\w:]+)/,kb=3D=
/<tbody/i,lb=3D/<|&#?\w+;/,mb=3D/<(?:script|style|link)/i,nb=3D/checked\s=
*(?:[^=3D]|=3D\s*.checked.)/i,ob=3D/^$|\/(?:java|ecma)script/i,pb=3D/^tru=
e\/(.*)/,qb=3D/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,rb=3D{option:[1,=
"<select =
multiple=3D'multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"=
],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<t=
able>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<ta=
ble><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbod=
y><tr>","</tr></tbody></table>"],_default:k.htmlSerialize?[0,"",""]:[1,"X=
<div>","</div>"]},sb=3Ddb(y),tb=3Dsb.appendChild(y.createElement("div"));=
rb.optgroup=3Drb.option,rb.tbody=3Drb.tfoot=3Drb.colgroup=3Drb.caption=3D=
rb.thead,rb.th=3Drb.td;function ub(a,b){var c,d,e=3D0,f=3Dtypeof =
a.getElementsByTagName!=3D=3DK?a.getElementsByTagName(b||"*"):typeof =
a.querySelectorAll!=3D=3DK?a.querySelectorAll(b||"*"):void =
0;if(!f)for(f=3D[],c=3Da.childNodes||a;null!=3D(d=3Dc[e]);e++)!b||m.nodeN=
ame(d,b)?f.push(d):m.merge(f,ub(d,b));return void =
0=3D=3D=3Db||b&&m.nodeName(a,b)?m.merge([a],f):f}function =
vb(a){W.test(a.type)&&(a.defaultChecked=3Da.checked)}function =
wb(a,b){return =
m.nodeName(a,"table")&&m.nodeName(11!=3D=3Db.nodeType?b:b.firstChild,"tr"=
)?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.creat=
eElement("tbody")):a}function xb(a){return =
a.type=3D(null!=3D=3Dm.find.attr(a,"type"))+"/"+a.type,a}function =
yb(a){var b=3Dpb.exec(a.type);return =
b?a.type=3Db[1]:a.removeAttribute("type"),a}function zb(a,b){for(var =
c,d=3D0;null!=3D(c=3Da[d]);d++)m._data(c,"globalEval",!b||m._data(b[d],"g=
lobalEval"))}function Ab(a,b){if(1=3D=3D=3Db.nodeType&&m.hasData(a)){var =
c,d,e,f=3Dm._data(a),g=3Dm._data(b,f),h=3Df.events;if(h){delete =
g.handle,g.events=3D{};for(c in =
h)for(d=3D0,e=3Dh[c].length;e>d;d++)m.event.add(b,c,h[c][d])}g.data&&(g.d=
ata=3Dm.extend({},g.data))}}function Bb(a,b){var =
c,d,e;if(1=3D=3D=3Db.nodeType){if(c=3Db.nodeName.toLowerCase(),!k.noClone=
Event&&b[m.expando]){e=3Dm._data(b);for(d in =
e.events)m.removeEvent(b,d,e.handle);b.removeAttribute(m.expando)}"script=
"=3D=3D=3Dc&&b.text!=3D=3Da.text?(xb(b).text=3Da.text,yb(b)):"object"=3D=3D=
=3Dc?(b.parentNode&&(b.outerHTML=3Da.outerHTML),k.html5Clone&&a.innerHTML=
&&!m.trim(b.innerHTML)&&(b.innerHTML=3Da.innerHTML)):"input"=3D=3D=3Dc&&W=
.test(a.type)?(b.defaultChecked=3Db.checked=3Da.checked,b.value!=3D=3Da.v=
alue&&(b.value=3Da.value)):"option"=3D=3D=3Dc?b.defaultSelected=3Db.selec=
ted=3Da.defaultSelected:("input"=3D=3D=3Dc||"textarea"=3D=3D=3Dc)&&(b.def=
aultValue=3Da.defaultValue)}}m.extend({clone:function(a,b,c){var =
d,e,f,g,h,i=3Dm.contains(a.ownerDocument,a);if(k.html5Clone||m.isXMLDoc(a=
)||!gb.test("<"+a.nodeName+">")?f=3Da.cloneNode(!0):(tb.innerHTML=3Da.out=
erHTML,tb.removeChild(f=3Dtb.firstChild)),!(k.noCloneEvent&&k.noCloneChec=
ked||1!=3D=3Da.nodeType&&11!=3D=3Da.nodeType||m.isXMLDoc(a)))for(d=3Dub(f=
),h=3Dub(a),g=3D0;null!=3D(e=3Dh[g]);++g)d[g]&&Bb(e,d[g]);if(b)if(c)for(h=
=3Dh||ub(a),d=3Dd||ub(f),g=3D0;null!=3D(e=3Dh[g]);g++)Ab(e,d[g]);else =
Ab(a,f);return =
d=3Dub(f,"script"),d.length>0&&zb(d,!i&&ub(a,"script")),d=3Dh=3De=3Dnull,=
f},buildFragment:function(a,b,c,d){for(var =
e,f,g,h,i,j,l,n=3Da.length,o=3Ddb(b),p=3D[],q=3D0;n>q;q++)if(f=3Da[q],f||=
0=3D=3D=3Df)if("object"=3D=3D=3Dm.type(f))m.merge(p,f.nodeType?[f]:f);els=
e =
if(lb.test(f)){h=3Dh||o.appendChild(b.createElement("div")),i=3D(jb.exec(=
f)||["",""])[1].toLowerCase(),l=3Drb[i]||rb._default,h.innerHTML=3Dl[1]+f=
.replace(ib,"<$1></$2>")+l[2],e=3Dl[0];while(e--)h=3Dh.lastChild;if(!k.le=
adingWhitespace&&hb.test(f)&&p.push(b.createTextNode(hb.exec(f)[0])),!k.t=
body){f=3D"table"!=3D=3Di||kb.test(f)?"<table>"!=3D=3Dl[1]||kb.test(f)?0:=
h:h.firstChild,e=3Df&&f.childNodes.length;while(e--)m.nodeName(j=3Df.chil=
dNodes[e],"tbody")&&!j.childNodes.length&&f.removeChild(j)}m.merge(p,h.ch=
ildNodes),h.textContent=3D"";while(h.firstChild)h.removeChild(h.firstChil=
d);h=3Do.lastChild}else =
p.push(b.createTextNode(f));h&&o.removeChild(h),k.appendChecked||m.grep(u=
b(p,"input"),vb),q=3D0;while(f=3Dp[q++])if((!d||-1=3D=3D=3Dm.inArray(f,d)=
)&&(g=3Dm.contains(f.ownerDocument,f),h=3Dub(o.appendChild(f),"script"),g=
&&zb(h),c)){e=3D0;while(f=3Dh[e++])ob.test(f.type||"")&&c.push(f)}return =
h=3Dnull,o},cleanData:function(a,b){for(var =
d,e,f,g,h=3D0,i=3Dm.expando,j=3Dm.cache,l=3Dk.deleteExpando,n=3Dm.event.s=
pecial;null!=3D(d=3Da[h]);h++)if((b||m.acceptData(d))&&(f=3Dd[i],g=3Df&&j=
[f])){if(g.events)for(e in =
g.events)n[e]?m.event.remove(d,e):m.removeEvent(d,e,g.handle);j[f]&&(dele=
te j[f],l?delete d[i]:typeof =
d.removeAttribute!=3D=3DK?d.removeAttribute(i):d[i]=3Dnull,c.push(f))}}})=
,m.fn.extend({text:function(a){return V(this,function(a){return void =
0=3D=3D=3Da?m.text(this):this.empty().append((this[0]&&this[0].ownerDocum=
ent||y).createTextNode(a))},null,a,arguments.length)},append:function(){r=
eturn =
this.domManip(arguments,function(a){if(1=3D=3D=3Dthis.nodeType||11=3D=3D=3D=
this.nodeType||9=3D=3D=3Dthis.nodeType){var =
b=3Dwb(this,a);b.appendChild(a)}})},prepend:function(){return =
this.domManip(arguments,function(a){if(1=3D=3D=3Dthis.nodeType||11=3D=3D=3D=
this.nodeType||9=3D=3D=3Dthis.nodeType){var =
b=3Dwb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){retur=
n =
this.domManip(arguments,function(a){this.parentNode&&this.parentNode.inse=
rtBefore(a,this)})},after:function(){return =
this.domManip(arguments,function(a){this.parentNode&&this.parentNode.inse=
rtBefore(a,this.nextSibling)})},remove:function(a,b){for(var =
c,d=3Da?m.filter(a,this):this,e=3D0;null!=3D(c=3Dd[e]);e++)b||1!=3D=3Dc.n=
odeType||m.cleanData(ub(c)),c.parentNode&&(b&&m.contains(c.ownerDocument,=
c)&&zb(ub(c,"script")),c.parentNode.removeChild(c));return =
this},empty:function(){for(var =
a,b=3D0;null!=3D(a=3Dthis[b]);b++){1=3D=3D=3Da.nodeType&&m.cleanData(ub(a=
,!1));while(a.firstChild)a.removeChild(a.firstChild);a.options&&m.nodeNam=
e(a,"select")&&(a.options.length=3D0)}return =
this},clone:function(a,b){return =
a=3Dnull=3D=3Da?!1:a,b=3Dnull=3D=3Db?a:b,this.map(function(){return =
m.clone(this,a,b)})},html:function(a){return V(this,function(a){var =
b=3Dthis[0]||{},c=3D0,d=3Dthis.length;if(void 0=3D=3D=3Da)return =
1=3D=3D=3Db.nodeType?b.innerHTML.replace(fb,""):void =
0;if(!("string"!=3Dtypeof =
a||mb.test(a)||!k.htmlSerialize&&gb.test(a)||!k.leadingWhitespace&&hb.tes=
t(a)||rb[(jb.exec(a)||["",""])[1].toLowerCase()])){a=3Da.replace(ib,"<$1>=
</$2>");try{for(;d>c;c++)b=3Dthis[c]||{},1=3D=3D=3Db.nodeType&&(m.cleanDa=
ta(ub(b,!1)),b.innerHTML=3Da);b=3D0}catch(e){}}b&&this.empty().append(a)}=
,null,a,arguments.length)},replaceWith:function(){var =
a=3Darguments[0];return =
this.domManip(arguments,function(b){a=3Dthis.parentNode,m.cleanData(ub(th=
is)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remo=
ve()},detach:function(a){return =
this.remove(a,!0)},domManip:function(a,b){a=3De.apply([],a);var =
c,d,f,g,h,i,j=3D0,l=3Dthis.length,n=3Dthis,o=3Dl-1,p=3Da[0],q=3Dm.isFunct=
ion(p);if(q||l>1&&"string"=3D=3Dtypeof =
p&&!k.checkClone&&nb.test(p))return this.each(function(c){var =
d=3Dn.eq(c);q&&(a[0]=3Dp.call(this,c,d.html())),d.domManip(a,b)});if(l&&(=
i=3Dm.buildFragment(a,this[0].ownerDocument,!1,this),c=3Di.firstChild,1=3D=
=3D=3Di.childNodes.length&&(i=3Dc),c)){for(g=3Dm.map(ub(i,"script"),xb),f=
=3Dg.length;l>j;j++)d=3Di,j!=3D=3Do&&(d=3Dm.clone(d,!0,!0),f&&m.merge(g,u=
b(d,"script"))),b.call(this[j],d,j);if(f)for(h=3Dg[g.length-1].ownerDocum=
ent,m.map(g,yb),j=3D0;f>j;j++)d=3Dg[j],ob.test(d.type||"")&&!m._data(d,"g=
lobalEval")&&m.contains(h,d)&&(d.src?m._evalUrl&&m._evalUrl(d.src):m.glob=
alEval((d.text||d.textContent||d.innerHTML||"").replace(qb,"")));i=3Dc=3D=
null}return =
this}}),m.each({appendTo:"append",prependTo:"prepend",insertBefore:"befor=
e",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){m.fn[a]=3D=
function(a){for(var =
c,d=3D0,e=3D[],g=3Dm(a),h=3Dg.length-1;h>=3Dd;d++)c=3Dd=3D=3D=3Dh?this:th=
is.clone(!0),m(g[d])[b](c),f.apply(e,c.get());return =
this.pushStack(e)}});var Cb,Db=3D{};function Eb(b,c){var =
d,e=3Dm(c.createElement(b)).appendTo(c.body),f=3Da.getDefaultComputedStyl=
e&&(d=3Da.getDefaultComputedStyle(e[0]))?d.display:m.css(e[0],"display");=
return e.detach(),f}function Fb(a){var b=3Dy,c=3DDb[a];return =
c||(c=3DEb(a,b),"none"!=3D=3Dc&&c||(Cb=3D(Cb||m("<iframe =
frameborder=3D'0' width=3D'0' =
height=3D'0'/>")).appendTo(b.documentElement),b=3D(Cb[0].contentWindow||C=
b[0].contentDocument).document,b.write(),b.close(),c=3DEb(a,b),Cb.detach(=
)),Db[a]=3Dc),c}!function(){var =
a;k.shrinkWrapBlocks=3Dfunction(){if(null!=3Da)return a;a=3D!1;var =
b,c,d;return =
c=3Dy.getElementsByTagName("body")[0],c&&c.style?(b=3Dy.createElement("di=
v"),d=3Dy.createElement("div"),d.style.cssText=3D"position:absolute;borde=
r:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),=
typeof =
b.style.zoom!=3D=3DK&&(b.style.cssText=3D"-webkit-box-sizing:content-box;=
-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0=
;border:0;padding:1px;width:1px;zoom:1",b.appendChild(y.createElement("di=
v")).style.width=3D"5px",a=3D3!=3D=3Db.offsetWidth),c.removeChild(d),a):v=
oid 0}}();var Gb=3D/^margin/,Hb=3Dnew =
RegExp("^("+S+")(?!px)[a-z%]+$","i"),Ib,Jb,Kb=3D/^(top|right|bottom|left)=
$/;a.getComputedStyle?(Ib=3Dfunction(a){return =
a.ownerDocument.defaultView.getComputedStyle(a,null)},Jb=3Dfunction(a,b,c=
){var d,e,f,g,h=3Da.style;return =
c=3Dc||Ib(a),g=3Dc?c.getPropertyValue(b)||c[b]:void =
0,c&&(""!=3D=3Dg||m.contains(a.ownerDocument,a)||(g=3Dm.style(a,b)),Hb.te=
st(g)&&Gb.test(b)&&(d=3Dh.width,e=3Dh.minWidth,f=3Dh.maxWidth,h.minWidth=3D=
h.maxWidth=3Dh.width=3Dg,g=3Dc.width,h.width=3Dd,h.minWidth=3De,h.maxWidt=
h=3Df)),void =
0=3D=3D=3Dg?g:g+""}):y.documentElement.currentStyle&&(Ib=3Dfunction(a){re=
turn a.currentStyle},Jb=3Dfunction(a,b,c){var d,e,f,g,h=3Da.style;return =
c=3Dc||Ib(a),g=3Dc?c[b]:void =
0,null=3D=3Dg&&h&&h[b]&&(g=3Dh[b]),Hb.test(g)&&!Kb.test(b)&&(d=3Dh.left,e=
=3Da.runtimeStyle,f=3De&&e.left,f&&(e.left=3Da.currentStyle.left),h.left=3D=
"fontSize"=3D=3D=3Db?"1em":g,g=3Dh.pixelLeft+"px",h.left=3Dd,f&&(e.left=3D=
f)),void 0=3D=3D=3Dg?g:g+""||"auto"});function =
Lb(a,b){return{get:function(){var c=3Da();if(null!=3Dc)return c?void =
delete this.get:(this.get=3Db).apply(this,arguments)}}}!function(){var =
b,c,d,e,f,g,h;if(b=3Dy.createElement("div"),b.innerHTML=3D"  =
<link/><table></table><a href=3D'/a'>a</a><input =
type=3D'checkbox'/>",d=3Db.getElementsByTagName("a")[0],c=3Dd&&d.style){c=
.cssText=3D"float:left;opacity:.5",k.opacity=3D"0.5"=3D=3D=3Dc.opacity,k.=
cssFloat=3D!!c.cssFloat,b.style.backgroundClip=3D"content-box",b.cloneNod=
e(!0).style.backgroundClip=3D"",k.clearCloneStyle=3D"content-box"=3D=3D=3D=
b.style.backgroundClip,k.boxSizing=3D""=3D=3D=3Dc.boxSizing||""=3D=3D=3Dc=
.MozBoxSizing||""=3D=3D=3Dc.WebkitBoxSizing,m.extend(k,{reliableHiddenOff=
sets:function(){return =
null=3D=3Dg&&i(),g},boxSizingReliable:function(){return =
null=3D=3Df&&i(),f},pixelPosition:function(){return =
null=3D=3De&&i(),e},reliableMarginRight:function(){return =
null=3D=3Dh&&i(),h}});function i(){var =
b,c,d,i;c=3Dy.getElementsByTagName("body")[0],c&&c.style&&(b=3Dy.createEl=
ement("div"),d=3Dy.createElement("div"),d.style.cssText=3D"position:absol=
ute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).append=
Child(b),b.style.cssText=3D"-webkit-box-sizing:border-box;-moz-box-sizing=
:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;bord=
er:1px;padding:1px;width:4px;position:absolute",e=3Df=3D!1,h=3D!0,a.getCo=
mputedStyle&&(e=3D"1%"!=3D=3D(a.getComputedStyle(b,null)||{}).top,f=3D"4p=
x"=3D=3D=3D(a.getComputedStyle(b,null)||{width:"4px"}).width,i=3Db.append=
Child(y.createElement("div")),i.style.cssText=3Db.style.cssText=3D"-webki=
t-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-b=
ox;display:block;margin:0;border:0;padding:0",i.style.marginRight=3Di.sty=
le.width=3D"0",b.style.width=3D"1px",h=3D!parseFloat((a.getComputedStyle(=
i,null)||{}).marginRight)),b.innerHTML=3D"<table><tr><td></td><td>t</td><=
/tr></table>",i=3Db.getElementsByTagName("td"),i[0].style.cssText=3D"marg=
in:0;border:0;padding:0;display:none",g=3D0=3D=3D=3Di[0].offsetHeight,g&&=
(i[0].style.display=3D"",i[1].style.display=3D"none",g=3D0=3D=3D=3Di[0].o=
ffsetHeight),c.removeChild(d))}}}(),m.swap=3Dfunction(a,b,c,d){var =
e,f,g=3D{};for(f in =
b)g[f]=3Da.style[f],a.style[f]=3Db[f];e=3Dc.apply(a,d||[]);for(f in =
b)a.style[f]=3Dg[f];return e};var =
Mb=3D/alpha\([^)]*\)/i,Nb=3D/opacity\s*=3D\s*([^)]*)/,Ob=3D/^(none|table(=
?!-c[ea]).+)/,Pb=3Dnew RegExp("^("+S+")(.*)$","i"),Qb=3Dnew =
RegExp("^([+-])=3D("+S+")","i"),Rb=3D{position:"absolute",visibility:"hid=
den",display:"block"},Sb=3D{letterSpacing:"0",fontWeight:"400"},Tb=3D["We=
bkit","O","Moz","ms"];function Ub(a,b){if(b in a)return b;var =
c=3Db.charAt(0).toUpperCase()+b.slice(1),d=3Db,e=3DTb.length;while(e--)if=
(b=3DTb[e]+c,b in a)return b;return d}function Vb(a,b){for(var =
c,d,e,f=3D[],g=3D0,h=3Da.length;h>g;g++)d=3Da[g],d.style&&(f[g]=3Dm._data=
(d,"olddisplay"),c=3Dd.style.display,b?(f[g]||"none"!=3D=3Dc||(d.style.di=
splay=3D""),""=3D=3D=3Dd.style.display&&U(d)&&(f[g]=3Dm._data(d,"olddispl=
ay",Fb(d.nodeName)))):(e=3DU(d),(c&&"none"!=3D=3Dc||!e)&&m._data(d,"olddi=
splay",e?c:m.css(d,"display"))));for(g=3D0;h>g;g++)d=3Da[g],d.style&&(b&&=
"none"!=3D=3Dd.style.display&&""!=3D=3Dd.style.display||(d.style.display=3D=
b?f[g]||"":"none"));return a}function Wb(a,b,c){var =
d=3DPb.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function =
Xb(a,b,c,d,e){for(var =
f=3Dc=3D=3D=3D(d?"border":"content")?4:"width"=3D=3D=3Db?1:0,g=3D0;4>f;f+=
=3D2)"margin"=3D=3D=3Dc&&(g+=3Dm.css(a,c+T[f],!0,e)),d?("content"=3D=3D=3D=
c&&(g-=3Dm.css(a,"padding"+T[f],!0,e)),"margin"!=3D=3Dc&&(g-=3Dm.css(a,"b=
order"+T[f]+"Width",!0,e))):(g+=3Dm.css(a,"padding"+T[f],!0,e),"padding"!=
=3D=3Dc&&(g+=3Dm.css(a,"border"+T[f]+"Width",!0,e)));return g}function =
Yb(a,b,c){var =
d=3D!0,e=3D"width"=3D=3D=3Db?a.offsetWidth:a.offsetHeight,f=3DIb(a),g=3Dk=
.boxSizing&&"border-box"=3D=3D=3Dm.css(a,"boxSizing",!1,f);if(0>=3De||nul=
l=3D=3De){if(e=3DJb(a,b,f),(0>e||null=3D=3De)&&(e=3Da.style[b]),Hb.test(e=
))return =
e;d=3Dg&&(k.boxSizingReliable()||e=3D=3D=3Da.style[b]),e=3DparseFloat(e)|=
|0}return =
e+Xb(a,b,c||(g?"border":"content"),d,f)+"px"}m.extend({cssHooks:{opacity:=
{get:function(a,b){if(b){var =
c=3DJb(a,"opacity");return""=3D=3D=3Dc?"1":c}}}},cssNumber:{columnCount:!=
0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,op=
acity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"floa=
t":k.cssFloat?"cssFloat":"styleFloat"},style:function(a,b,c,d){if(a&&3!=3D=
=3Da.nodeType&&8!=3D=3Da.nodeType&&a.style){var =
e,f,g,h=3Dm.camelCase(b),i=3Da.style;if(b=3Dm.cssProps[h]||(m.cssProps[h]=
=3DUb(i,h)),g=3Dm.cssHooks[b]||m.cssHooks[h],void 0=3D=3D=3Dc)return =
g&&"get"in g&&void 0!=3D=3D(e=3Dg.get(a,!1,d))?e:i[b];if(f=3Dtypeof =
c,"string"=3D=3D=3Df&&(e=3DQb.exec(c))&&(c=3D(e[1]+1)*e[2]+parseFloat(m.c=
ss(a,b)),f=3D"number"),null!=3Dc&&c=3D=3D=3Dc&&("number"!=3D=3Df||m.cssNu=
mber[h]||(c+=3D"px"),k.clearCloneStyle||""!=3D=3Dc||0!=3D=3Db.indexOf("ba=
ckground")||(i[b]=3D"inherit"),!(g&&"set"in g&&void =
0=3D=3D=3D(c=3Dg.set(a,c,d)))))try{i[b]=3Dc}catch(j){}}},css:function(a,b=
,c,d){var e,f,g,h=3Dm.camelCase(b);return =
b=3Dm.cssProps[h]||(m.cssProps[h]=3DUb(a.style,h)),g=3Dm.cssHooks[b]||m.c=
ssHooks[h],g&&"get"in g&&(f=3Dg.get(a,!0,c)),void =
0=3D=3D=3Df&&(f=3DJb(a,b,d)),"normal"=3D=3D=3Df&&b in =
Sb&&(f=3DSb[b]),""=3D=3D=3Dc||c?(e=3DparseFloat(f),c=3D=3D=3D!0||m.isNume=
ric(e)?e||0:f):f}}),m.each(["height","width"],function(a,b){m.cssHooks[b]=
=3D{get:function(a,c,d){return =
c?Ob.test(m.css(a,"display"))&&0=3D=3D=3Da.offsetWidth?m.swap(a,Rb,functi=
on(){return Yb(a,b,d)}):Yb(a,b,d):void 0},set:function(a,c,d){var =
e=3Dd&&Ib(a);return =
Wb(a,c,d?Xb(a,b,d,k.boxSizing&&"border-box"=3D=3D=3Dm.css(a,"boxSizing",!=
1,e),e):0)}}}),k.opacity||(m.cssHooks.opacity=3D{get:function(a,b){return=
 =
Nb.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?.01=
*parseFloat(RegExp.$1)+"":b?"1":""},set:function(a,b){var =
c=3Da.style,d=3Da.currentStyle,e=3Dm.isNumeric(b)?"alpha(opacity=3D"+100*=
b+")":"",f=3Dd&&d.filter||c.filter||"";c.zoom=3D1,(b>=3D1||""=3D=3D=3Db)&=
&""=3D=3D=3Dm.trim(f.replace(Mb,""))&&c.removeAttribute&&(c.removeAttribu=
te("filter"),""=3D=3D=3Db||d&&!d.filter)||(c.filter=3DMb.test(f)?f.replac=
e(Mb,e):f+" =
"+e)}}),m.cssHooks.marginRight=3DLb(k.reliableMarginRight,function(a,b){r=
eturn b?m.swap(a,{display:"inline-block"},Jb,[a,"marginRight"]):void =
0}),m.each({margin:"",padding:"",border:"Width"},function(a,b){m.cssHooks=
[a+b]=3D{expand:function(c){for(var =
d=3D0,e=3D{},f=3D"string"=3D=3Dtypeof c?c.split(" =
"):[c];4>d;d++)e[a+T[d]+b]=3Df[d]||f[d-2]||f[0];return =
e}},Gb.test(a)||(m.cssHooks[a+b].set=3DWb)}),m.fn.extend({css:function(a,=
b){return V(this,function(a,b,c){var =
d,e,f=3D{},g=3D0;if(m.isArray(b)){for(d=3DIb(a),e=3Db.length;e>g;g++)f[b[=
g]]=3Dm.css(a,b[g],!1,d);return f}return void =
0!=3D=3Dc?m.style(a,b,c):m.css(a,b)},a,b,arguments.length>1)},show:functi=
on(){return Vb(this,!0)},hide:function(){return =
Vb(this)},toggle:function(a){return"boolean"=3D=3Dtypeof =
a?a?this.show():this.hide():this.each(function(){U(this)?m(this).show():m=
(this).hide()})}});function Zb(a,b,c,d,e){return new =
Zb.prototype.init(a,b,c,d,e)}m.Tween=3DZb,Zb.prototype=3D{constructor:Zb,=
init:function(a,b,c,d,e,f){this.elem=3Da,this.prop=3Dc,this.easing=3De||"=
swing",this.options=3Db,this.start=3Dthis.now=3Dthis.cur(),this.end=3Dd,t=
his.unit=3Df||(m.cssNumber[c]?"":"px")
},cur:function(){var a=3DZb.propHooks[this.prop];return =
a&&a.get?a.get(this):Zb.propHooks._default.get(this)},run:function(a){var=
 b,c=3DZb.propHooks[this.prop];return =
this.pos=3Db=3Dthis.options.duration?m.easing[this.easing](a,this.options=
.duration*a,0,1,this.options.duration):a,this.now=3D(this.end-this.start)=
*b+this.start,this.options.step&&this.options.step.call(this.elem,this.no=
w,this),c&&c.set?c.set(this):Zb.propHooks._default.set(this),this}},Zb.pr=
ototype.init.prototype=3DZb.prototype,Zb.propHooks=3D{_default:{get:funct=
ion(a){var b;return =
null=3D=3Da.elem[a.prop]||a.elem.style&&null!=3Da.elem.style[a.prop]?(b=3D=
m.css(a.elem,a.prop,""),b&&"auto"!=3D=3Db?b:0):a.elem[a.prop]},set:functi=
on(a){m.fx.step[a.prop]?m.fx.step[a.prop](a):a.elem.style&&(null!=3Da.ele=
m.style[m.cssProps[a.prop]]||m.cssHooks[a.prop])?m.style(a.elem,a.prop,a.=
now+a.unit):a.elem[a.prop]=3Da.now}}},Zb.propHooks.scrollTop=3DZb.propHoo=
ks.scrollLeft=3D{set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.e=
lem[a.prop]=3Da.now)}},m.easing=3D{linear:function(a){return =
a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},m.fx=3DZb.prototype=
.init,m.fx.step=3D{};var $b,_b,ac=3D/^(?:toggle|show|hide)$/,bc=3Dnew =
RegExp("^(?:([+-])=3D|)("+S+")([a-z%]*)$","i"),cc=3D/queueHooks$/,dc=3D[i=
c],ec=3D{"*":[function(a,b){var =
c=3Dthis.createTween(a,b),d=3Dc.cur(),e=3Dbc.exec(b),f=3De&&e[3]||(m.cssN=
umber[a]?"":"px"),g=3D(m.cssNumber[a]||"px"!=3D=3Df&&+d)&&bc.exec(m.css(c=
.elem,a)),h=3D1,i=3D20;if(g&&g[3]!=3D=3Df){f=3Df||g[3],e=3De||[],g=3D+d||=
1;do =
h=3Dh||".5",g/=3Dh,m.style(c.elem,a,g+f);while(h!=3D=3D(h=3Dc.cur()/d)&&1=
!=3D=3Dh&&--i)}return =
e&&(g=3Dc.start=3D+g||+d||0,c.unit=3Df,c.end=3De[1]?g+(e[1]+1)*e[2]:+e[2]=
),c}]};function fc(){return setTimeout(function(){$b=3Dvoid =
0}),$b=3Dm.now()}function gc(a,b){var =
c,d=3D{height:a},e=3D0;for(b=3Db?1:0;4>e;e+=3D2-b)c=3DT[e],d["margin"+c]=3D=
d["padding"+c]=3Da;return b&&(d.opacity=3Dd.width=3Da),d}function =
hc(a,b,c){for(var =
d,e=3D(ec[b]||[]).concat(ec["*"]),f=3D0,g=3De.length;g>f;f++)if(d=3De[f].=
call(c,b,a))return d}function ic(a,b,c){var =
d,e,f,g,h,i,j,l,n=3Dthis,o=3D{},p=3Da.style,q=3Da.nodeType&&U(a),r=3Dm._d=
ata(a,"fxshow");c.queue||(h=3Dm._queueHooks(a,"fx"),null=3D=3Dh.unqueued&=
&(h.unqueued=3D0,i=3Dh.empty.fire,h.empty.fire=3Dfunction(){h.unqueued||i=
()}),h.unqueued++,n.always(function(){n.always(function(){h.unqueued--,m.=
queue(a,"fx").length||h.empty.fire()})})),1=3D=3D=3Da.nodeType&&("height"=
in b||"width"in =
b)&&(c.overflow=3D[p.overflow,p.overflowX,p.overflowY],j=3Dm.css(a,"displ=
ay"),l=3D"none"=3D=3D=3Dj?m._data(a,"olddisplay")||Fb(a.nodeName):j,"inli=
ne"=3D=3D=3Dl&&"none"=3D=3D=3Dm.css(a,"float")&&(k.inlineBlockNeedsLayout=
&&"inline"!=3D=3DFb(a.nodeName)?p.zoom=3D1:p.display=3D"inline-block")),c=
.overflow&&(p.overflow=3D"hidden",k.shrinkWrapBlocks()||n.always(function=
(){p.overflow=3Dc.overflow[0],p.overflowX=3Dc.overflow[1],p.overflowY=3Dc=
.overflow[2]}));for(d in b)if(e=3Db[d],ac.exec(e)){if(delete =
b[d],f=3Df||"toggle"=3D=3D=3De,e=3D=3D=3D(q?"hide":"show")){if("show"!=3D=
=3De||!r||void =
0=3D=3D=3Dr[d])continue;q=3D!0}o[d]=3Dr&&r[d]||m.style(a,d)}else =
j=3Dvoid =
0;if(m.isEmptyObject(o))"inline"=3D=3D=3D("none"=3D=3D=3Dj?Fb(a.nodeName)=
:j)&&(p.display=3Dj);else{r?"hidden"in =
r&&(q=3Dr.hidden):r=3Dm._data(a,"fxshow",{}),f&&(r.hidden=3D!q),q?m(a).sh=
ow():n.done(function(){m(a).hide()}),n.done(function(){var =
b;m._removeData(a,"fxshow");for(b in o)m.style(a,b,o[b])});for(d in =
o)g=3Dhc(q?r[d]:0,d,n),d in =
r||(r[d]=3Dg.start,q&&(g.end=3Dg.start,g.start=3D"width"=3D=3D=3Dd||"heig=
ht"=3D=3D=3Dd?1:0))}}function jc(a,b){var c,d,e,f,g;for(c in =
a)if(d=3Dm.camelCase(c),e=3Db[d],f=3Da[c],m.isArray(f)&&(e=3Df[1],f=3Da[c=
]=3Df[0]),c!=3D=3Dd&&(a[d]=3Df,delete =
a[c]),g=3Dm.cssHooks[d],g&&"expand"in g){f=3Dg.expand(f),delete =
a[d];for(c in f)c in a||(a[c]=3Df[c],b[c]=3De)}else b[d]=3De}function =
kc(a,b,c){var =
d,e,f=3D0,g=3Ddc.length,h=3Dm.Deferred().always(function(){delete =
i.elem}),i=3Dfunction(){if(e)return!1;for(var =
b=3D$b||fc(),c=3DMath.max(0,j.startTime+j.duration-b),d=3Dc/j.duration||0=
,f=3D1-d,g=3D0,i=3Dj.tweens.length;i>g;g++)j.tweens[g].run(f);return =
h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=3Dh.promise=
({elem:a,props:m.extend({},b),opts:m.extend(!0,{specialEasing:{}},c),orig=
inalProperties:b,originalOptions:c,startTime:$b||fc(),duration:c.duration=
,tweens:[],createTween:function(b,c){var =
d=3Dm.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return =
j.tweens.push(d),d},stop:function(b){var =
c=3D0,d=3Db?j.tweens.length:0;if(e)return =
this;for(e=3D!0;d>c;c++)j.tweens[c].run(1);return =
b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=3Dj.props;for(jc=
(k,j.opts.specialEasing);g>f;f++)if(d=3Ddc[f].call(j,a,k,j.opts))return =
d;return =
m.map(k,hc,j),m.isFunction(j.opts.start)&&j.opts.start.call(a,j),m.fx.tim=
er(m.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.prog=
ress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.a=
lways)}m.Animation=3Dm.extend(kc,{tweener:function(a,b){m.isFunction(a)?(=
b=3Da,a=3D["*"]):a=3Da.split(" ");for(var =
c,d=3D0,e=3Da.length;e>d;d++)c=3Da[d],ec[c]=3Dec[c]||[],ec[c].unshift(b)}=
,prefilter:function(a,b){b?dc.unshift(a):dc.push(a)}}),m.speed=3Dfunction=
(a,b,c){var d=3Da&&"object"=3D=3Dtypeof =
a?m.extend({},a):{complete:c||!c&&b||m.isFunction(a)&&a,duration:a,easing=
:c&&b||b&&!m.isFunction(b)&&b};return =
d.duration=3Dm.fx.off?0:"number"=3D=3Dtypeof =
d.duration?d.duration:d.duration in =
m.fx.speeds?m.fx.speeds[d.duration]:m.fx.speeds._default,(null=3D=3Dd.que=
ue||d.queue=3D=3D=3D!0)&&(d.queue=3D"fx"),d.old=3Dd.complete,d.complete=3D=
function(){m.isFunction(d.old)&&d.old.call(this),d.queue&&m.dequeue(this,=
d.queue)},d},m.fn.extend({fadeTo:function(a,b,c,d){return =
this.filter(U).css("opacity",0).show().end().animate({opacity:b},a,c,d)},=
animate:function(a,b,c,d){var =
e=3Dm.isEmptyObject(a),f=3Dm.speed(b,c,d),g=3Dfunction(){var =
b=3Dkc(this,m.extend({},a),f);(e||m._data(this,"finish"))&&b.stop(!0)};re=
turn =
g.finish=3Dg,e||f.queue=3D=3D=3D!1?this.each(g):this.queue(f.queue,g)},st=
op:function(a,b,c){var d=3Dfunction(a){var b=3Da.stop;delete =
a.stop,b(c)};return"string"!=3Dtypeof a&&(c=3Db,b=3Da,a=3Dvoid =
0),b&&a!=3D=3D!1&&this.queue(a||"fx",[]),this.each(function(){var =
b=3D!0,e=3Dnull!=3Da&&a+"queueHooks",f=3Dm.timers,g=3Dm._data(this);if(e)=
g[e]&&g[e].stop&&d(g[e]);else for(e in =
g)g[e]&&g[e].stop&&cc.test(e)&&d(g[e]);for(e=3Df.length;e--;)f[e].elem!=3D=
=3Dthis||null!=3Da&&f[e].queue!=3D=3Da||(f[e].anim.stop(c),b=3D!1,f.splic=
e(e,1));(b||!c)&&m.dequeue(this,a)})},finish:function(a){return =
a!=3D=3D!1&&(a=3Da||"fx"),this.each(function(){var =
b,c=3Dm._data(this),d=3Dc[a+"queue"],e=3Dc[a+"queueHooks"],f=3Dm.timers,g=
=3Dd?d.length:0;for(c.finish=3D!0,m.queue(this,a,[]),e&&e.stop&&e.stop.ca=
ll(this,!0),b=3Df.length;b--;)f[b].elem=3D=3D=3Dthis&&f[b].queue=3D=3D=3D=
a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=3D0;g>b;b++)d[b]&&d[b].finish=
&&d[b].finish.call(this);delete =
c.finish})}}),m.each(["toggle","show","hide"],function(a,b){var =
c=3Dm.fn[b];m.fn[b]=3Dfunction(a,d,e){return =
null=3D=3Da||"boolean"=3D=3Dtypeof =
a?c.apply(this,arguments):this.animate(gc(b,!0),a,d,e)}}),m.each({slideDo=
wn:gc("show"),slideUp:gc("hide"),slideToggle:gc("toggle"),fadeIn:{opacity=
:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function=
(a,b){m.fn[a]=3Dfunction(a,c,d){return =
this.animate(b,a,c,d)}}),m.timers=3D[],m.fx.tick=3Dfunction(){var =
a,b=3Dm.timers,c=3D0;for($b=3Dm.now();c<b.length;c++)a=3Db[c],a()||b[c]!=3D=
=3Da||b.splice(c--,1);b.length||m.fx.stop(),$b=3Dvoid =
0},m.fx.timer=3Dfunction(a){m.timers.push(a),a()?m.fx.start():m.timers.po=
p()},m.fx.interval=3D13,m.fx.start=3Dfunction(){_b||(_b=3DsetInterval(m.f=
x.tick,m.fx.interval))},m.fx.stop=3Dfunction(){clearInterval(_b),_b=3Dnul=
l},m.fx.speeds=3D{slow:600,fast:200,_default:400},m.fn.delay=3Dfunction(a=
,b){return =
a=3Dm.fx?m.fx.speeds[a]||a:a,b=3Db||"fx",this.queue(b,function(b,c){var =
d=3DsetTimeout(b,a);c.stop=3Dfunction(){clearTimeout(d)}})},function(){va=
r =
a,b,c,d,e;b=3Dy.createElement("div"),b.setAttribute("className","t"),b.in=
nerHTML=3D"  <link/><table></table><a href=3D'/a'>a</a><input =
type=3D'checkbox'/>",d=3Db.getElementsByTagName("a")[0],c=3Dy.createEleme=
nt("select"),e=3Dc.appendChild(y.createElement("option")),a=3Db.getElemen=
tsByTagName("input")[0],d.style.cssText=3D"top:1px",k.getSetAttribute=3D"=
t"!=3D=3Db.className,k.style=3D/top/.test(d.getAttribute("style")),k.href=
Normalized=3D"/a"=3D=3D=3Dd.getAttribute("href"),k.checkOn=3D!!a.value,k.=
optSelected=3De.selected,k.enctype=3D!!y.createElement("form").enctype,c.=
disabled=3D!0,k.optDisabled=3D!e.disabled,a=3Dy.createElement("input"),a.=
setAttribute("value",""),k.input=3D""=3D=3D=3Da.getAttribute("value"),a.v=
alue=3D"t",a.setAttribute("type","radio"),k.radioValue=3D"t"=3D=3D=3Da.va=
lue}();var lc=3D/\r/g;m.fn.extend({val:function(a){var =
b,c,d,e=3Dthis[0];{if(arguments.length)return =
d=3Dm.isFunction(a),this.each(function(c){var =
e;1=3D=3D=3Dthis.nodeType&&(e=3Dd?a.call(this,c,m(this).val()):a,null=3D=3D=
e?e=3D"":"number"=3D=3Dtypeof =
e?e+=3D"":m.isArray(e)&&(e=3Dm.map(e,function(a){return =
null=3D=3Da?"":a+""})),b=3Dm.valHooks[this.type]||m.valHooks[this.nodeNam=
e.toLowerCase()],b&&"set"in b&&void =
0!=3D=3Db.set(this,e,"value")||(this.value=3De))});if(e)return =
b=3Dm.valHooks[e.type]||m.valHooks[e.nodeName.toLowerCase()],b&&"get"in =
b&&void =
0!=3D=3D(c=3Db.get(e,"value"))?c:(c=3De.value,"string"=3D=3Dtypeof =
c?c.replace(lc,""):null=3D=3Dc?"":c)}}}),m.extend({valHooks:{option:{get:=
function(a){var b=3Dm.find.attr(a,"value");return =
null!=3Db?b:m.trim(m.text(a))}},select:{get:function(a){for(var =
b,c,d=3Da.options,e=3Da.selectedIndex,f=3D"select-one"=3D=3D=3Da.type||0>=
e,g=3Df?null:[],h=3Df?e+1:d.length,i=3D0>e?h:f?e:0;h>i;i++)if(c=3Dd[i],!(=
!c.selected&&i!=3D=3De||(k.optDisabled?c.disabled:null!=3D=3Dc.getAttribu=
te("disabled"))||c.parentNode.disabled&&m.nodeName(c.parentNode,"optgroup=
"))){if(b=3Dm(c).val(),f)return b;g.push(b)}return =
g},set:function(a,b){var =
c,d,e=3Da.options,f=3Dm.makeArray(b),g=3De.length;while(g--)if(d=3De[g],m=
.inArray(m.valHooks.option.get(d),f)>=3D0)try{d.selected=3Dc=3D!0}catch(h=
){d.scrollHeight}else d.selected=3D!1;return =
c||(a.selectedIndex=3D-1),e}}}}),m.each(["radio","checkbox"],function(){m=
.valHooks[this]=3D{set:function(a,b){return =
m.isArray(b)?a.checked=3Dm.inArray(m(a).val(),b)>=3D0:void =
0}},k.checkOn||(m.valHooks[this].get=3Dfunction(a){return =
null=3D=3D=3Da.getAttribute("value")?"on":a.value})});var =
mc,nc,oc=3Dm.expr.attrHandle,pc=3D/^(?:checked|selected)$/i,qc=3Dk.getSet=
Attribute,rc=3Dk.input;m.fn.extend({attr:function(a,b){return =
V(this,m.attr,a,b,arguments.length>1)},removeAttr:function(a){return =
this.each(function(){m.removeAttr(this,a)})}}),m.extend({attr:function(a,=
b,c){var d,e,f=3Da.nodeType;if(a&&3!=3D=3Df&&8!=3D=3Df&&2!=3D=3Df)return =
typeof =
a.getAttribute=3D=3D=3DK?m.prop(a,b,c):(1=3D=3D=3Df&&m.isXMLDoc(a)||(b=3D=
b.toLowerCase(),d=3Dm.attrHooks[b]||(m.expr.match.bool.test(b)?nc:mc)),vo=
id 0=3D=3D=3Dc?d&&"get"in =
d&&null!=3D=3D(e=3Dd.get(a,b))?e:(e=3Dm.find.attr(a,b),null=3D=3De?void =
0:e):null!=3D=3Dc?d&&"set"in d&&void =
0!=3D=3D(e=3Dd.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void =
m.removeAttr(a,b))},removeAttr:function(a,b){var =
c,d,e=3D0,f=3Db&&b.match(E);if(f&&1=3D=3D=3Da.nodeType)while(c=3Df[e++])d=
=3Dm.propFix[c]||c,m.expr.match.bool.test(c)?rc&&qc||!pc.test(c)?a[d]=3D!=
1:a[m.camelCase("default-"+c)]=3Da[d]=3D!1:m.attr(a,c,""),a.removeAttribu=
te(qc?c:d)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&"radio"=3D=
=3D=3Db&&m.nodeName(a,"input")){var c=3Da.value;return =
a.setAttribute("type",b),c&&(a.value=3Dc),b}}}}}),nc=3D{set:function(a,b,=
c){return =
b=3D=3D=3D!1?m.removeAttr(a,c):rc&&qc||!pc.test(c)?a.setAttribute(!qc&&m.=
propFix[c]||c,c):a[m.camelCase("default-"+c)]=3Da[c]=3D!0,c}},m.each(m.ex=
pr.match.bool.source.match(/\w+/g),function(a,b){var =
c=3Doc[b]||m.find.attr;oc[b]=3Drc&&qc||!pc.test(b)?function(a,b,d){var =
e,f;return =
d||(f=3Doc[b],oc[b]=3De,e=3Dnull!=3Dc(a,b,d)?b.toLowerCase():null,oc[b]=3D=
f),e}:function(a,b,c){return c?void =
0:a[m.camelCase("default-"+b)]?b.toLowerCase():null}}),rc&&qc||(m.attrHoo=
ks.value=3D{set:function(a,b,c){return =
m.nodeName(a,"input")?void(a.defaultValue=3Db):mc&&mc.set(a,b,c)}}),qc||(=
mc=3D{set:function(a,b,c){var d=3Da.getAttributeNode(c);return =
d||a.setAttributeNode(d=3Da.ownerDocument.createAttribute(c)),d.value=3Db=
+=3D"","value"=3D=3D=3Dc||b=3D=3D=3Da.getAttribute(c)?b:void =
0}},oc.id=3Doc.name=3Doc.coords=3Dfunction(a,b,c){var d;return c?void =
0:(d=3Da.getAttributeNode(b))&&""!=3D=3Dd.value?d.value:null},m.valHooks.=
button=3D{get:function(a,b){var c=3Da.getAttributeNode(b);return =
c&&c.specified?c.value:void =
0},set:mc.set},m.attrHooks.contenteditable=3D{set:function(a,b,c){mc.set(=
a,""=3D=3D=3Db?!1:b,c)}},m.each(["width","height"],function(a,b){m.attrHo=
oks[b]=3D{set:function(a,c){return""=3D=3D=3Dc?(a.setAttribute(b,"auto"),=
c):void 0}}})),k.style||(m.attrHooks.style=3D{get:function(a){return =
a.style.cssText||void 0},set:function(a,b){return =
a.style.cssText=3Db+""}});var =
sc=3D/^(?:input|select|textarea|button|object)$/i,tc=3D/^(?:a|area)$/i;m.=
fn.extend({prop:function(a,b){return =
V(this,m.prop,a,b,arguments.length>1)},removeProp:function(a){return =
a=3Dm.propFix[a]||a,this.each(function(){try{this[a]=3Dvoid 0,delete =
this[a]}catch(b){}})}}),m.extend({propFix:{"for":"htmlFor","class":"class=
Name"},prop:function(a,b,c){var =
d,e,f,g=3Da.nodeType;if(a&&3!=3D=3Dg&&8!=3D=3Dg&&2!=3D=3Dg)return =
f=3D1!=3D=3Dg||!m.isXMLDoc(a),f&&(b=3Dm.propFix[b]||b,e=3Dm.propHooks[b])=
,void 0!=3D=3Dc?e&&"set"in e&&void =
0!=3D=3D(d=3De.set(a,c,b))?d:a[b]=3Dc:e&&"get"in =
e&&null!=3D=3D(d=3De.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(=
a){var b=3Dm.find.attr(a,"tabindex");return =
b?parseInt(b,10):sc.test(a.nodeName)||tc.test(a.nodeName)&&a.href?0:-1}}}=
}),k.hrefNormalized||m.each(["href","src"],function(a,b){m.propHooks[b]=3D=
{get:function(a){return =
a.getAttribute(b,4)}}}),k.optSelected||(m.propHooks.selected=3D{get:funct=
ion(a){var b=3Da.parentNode;return =
b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null}}),m.e=
ach(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSp=
an","colSpan","useMap","frameBorder","contentEditable"],function(){m.prop=
Fix[this.toLowerCase()]=3Dthis}),k.enctype||(m.propFix.enctype=3D"encodin=
g");var uc=3D/[\t\r\n\f]/g;m.fn.extend({addClass:function(a){var =
b,c,d,e,f,g,h=3D0,i=3Dthis.length,j=3D"string"=3D=3Dtypeof =
a&&a;if(m.isFunction(a))return =
this.each(function(b){m(this).addClass(a.call(this,b,this.className))});i=
f(j)for(b=3D(a||"").match(E)||[];i>h;h++)if(c=3Dthis[h],d=3D1=3D=3D=3Dc.n=
odeType&&(c.className?(" "+c.className+" ").replace(uc," "):" =
")){f=3D0;while(e=3Db[f++])d.indexOf(" "+e+" ")<0&&(d+=3De+" =
");g=3Dm.trim(d),c.className!=3D=3Dg&&(c.className=3Dg)}return =
this},removeClass:function(a){var =
b,c,d,e,f,g,h=3D0,i=3Dthis.length,j=3D0=3D=3D=3Darguments.length||"string=
"=3D=3Dtypeof a&&a;if(m.isFunction(a))return =
this.each(function(b){m(this).removeClass(a.call(this,b,this.className))}=
);if(j)for(b=3D(a||"").match(E)||[];i>h;h++)if(c=3Dthis[h],d=3D1=3D=3D=3D=
c.nodeType&&(c.className?(" "+c.className+" ").replace(uc," =
"):"")){f=3D0;while(e=3Db[f++])while(d.indexOf(" "+e+" =
")>=3D0)d=3Dd.replace(" "+e+" "," =
");g=3Da?m.trim(d):"",c.className!=3D=3Dg&&(c.className=3Dg)}return =
this},toggleClass:function(a,b){var c=3Dtypeof =
a;return"boolean"=3D=3Dtypeof =
b&&"string"=3D=3D=3Dc?b?this.addClass(a):this.removeClass(a):this.each(m.=
isFunction(a)?function(c){m(this).toggleClass(a.call(this,c,this.classNam=
e,b),b)}:function(){if("string"=3D=3D=3Dc){var =
b,d=3D0,e=3Dm(this),f=3Da.match(E)||[];while(b=3Df[d++])e.hasClass(b)?e.r=
emoveClass(b):e.addClass(b)}else(c=3D=3D=3DK||"boolean"=3D=3D=3Dc)&&(this=
.className&&m._data(this,"__className__",this.className),this.className=3D=
this.className||a=3D=3D=3D!1?"":m._data(this,"__className__")||"")})},has=
Class:function(a){for(var b=3D" "+a+" =
",c=3D0,d=3Dthis.length;d>c;c++)if(1=3D=3D=3Dthis[c].nodeType&&(" =
"+this[c].className+" ").replace(uc," =
").indexOf(b)>=3D0)return!0;return!1}}),m.each("blur focus focusin =
focusout load resize scroll unload click dblclick mousedown mouseup =
mousemove mouseover mouseout mouseenter mouseleave change select submit =
keydown keypress keyup error contextmenu".split(" =
"),function(a,b){m.fn[b]=3Dfunction(a,c){return =
arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),m.fn.extend({ho=
ver:function(a,b){return =
this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return =
this.on(a,null,b,c)},unbind:function(a,b){return =
this.off(a,null,b)},delegate:function(a,b,c,d){return =
this.on(b,a,c,d)},undelegate:function(a,b,c){return =
1=3D=3D=3Darguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var =
vc=3Dm.now(),wc=3D/\?/,xc=3D/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnr=
t]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE]=
[+-]?\d+|)/g;m.parseJSON=3Dfunction(b){if(a.JSON&&a.JSON.parse)return =
a.JSON.parse(b+"");var c,d=3Dnull,e=3Dm.trim(b+"");return =
e&&!m.trim(e.replace(xc,function(a,b,e,f){return =
c&&b&&(d=3D0),0=3D=3D=3Dd?a:(c=3De||b,d+=3D!f-!e,"")}))?Function("return =
"+e)():m.error("Invalid JSON: "+b)},m.parseXML=3Dfunction(b){var =
c,d;if(!b||"string"!=3Dtypeof b)return null;try{a.DOMParser?(d=3Dnew =
DOMParser,c=3Dd.parseFromString(b,"text/xml")):(c=3Dnew =
ActiveXObject("Microsoft.XMLDOM"),c.async=3D"false",c.loadXML(b))}catch(e=
){c=3Dvoid 0}return =
c&&c.documentElement&&!c.getElementsByTagName("parsererror").length||m.er=
ror("Invalid XML: "+b),c};var =
yc,zc,Ac=3D/#.*$/,Bc=3D/([?&])_=3D[^&]*/,Cc=3D/^(.*?):[ =
\t]*([^\r\n]*)\r?$/gm,Dc=3D/^(?:about|app|app-storage|.+-extension|file|r=
es|widget):$/,Ec=3D/^(?:GET|HEAD)$/,Fc=3D/^\/\//,Gc=3D/^([\w.+-]+:)(?:\/\=
/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Hc=3D{},Ic=3D{},Jc=3D"*/".concat=
("*");try{zc=3Dlocation.href}catch(Kc){zc=3Dy.createElement("a"),zc.href=3D=
"",zc=3Dzc.href}yc=3DGc.exec(zc.toLowerCase())||[];function Lc(a){return =
function(b,c){"string"!=3Dtypeof b&&(c=3Db,b=3D"*");var =
d,e=3D0,f=3Db.toLowerCase().match(E)||[];if(m.isFunction(c))while(d=3Df[e=
++])"+"=3D=3D=3Dd.charAt(0)?(d=3Dd.slice(1)||"*",(a[d]=3Da[d]||[]).unshif=
t(c)):(a[d]=3Da[d]||[]).push(c)}}function Mc(a,b,c,d){var =
e=3D{},f=3Da=3D=3D=3DIc;function g(h){var i;return =
e[h]=3D!0,m.each(a[h]||[],function(a,h){var =
j=3Dh(b,c,d);return"string"!=3Dtypeof j||f||e[j]?f?!(i=3Dj):void =
0:(b.dataTypes.unshift(j),g(j),!1)}),i}return =
g(b.dataTypes[0])||!e["*"]&&g("*")}function Nc(a,b){var =
c,d,e=3Dm.ajaxSettings.flatOptions||{};for(d in b)void =
0!=3D=3Db[d]&&((e[d]?a:c||(c=3D{}))[d]=3Db[d]);return =
c&&m.extend(!0,a,c),a}function Oc(a,b,c){var =
d,e,f,g,h=3Da.contents,i=3Da.dataTypes;while("*"=3D=3D=3Di[0])i.shift(),v=
oid =
0=3D=3D=3De&&(e=3Da.mimeType||b.getResponseHeader("Content-Type"));if(e)f=
or(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in =
c)f=3Di[0];else{for(g in c){if(!i[0]||a.converters[g+" =
"+i[0]]){f=3Dg;break}d||(d=3Dg)}f=3Df||d}return =
f?(f!=3D=3Di[0]&&i.unshift(f),c[f]):void 0}function Pc(a,b,c,d){var =
e,f,g,h,i,j=3D{},k=3Da.dataTypes.slice();if(k[1])for(g in =
a.converters)j[g.toLowerCase()]=3Da.converters[g];f=3Dk.shift();while(f)i=
f(a.responseFields[f]&&(c[a.responseFields[f]]=3Db),!i&&d&&a.dataFilter&&=
(b=3Da.dataFilter(b,a.dataType)),i=3Df,f=3Dk.shift())if("*"=3D=3D=3Df)f=3D=
i;else if("*"!=3D=3Di&&i!=3D=3Df){if(g=3Dj[i+" "+f]||j["* "+f],!g)for(e =
in j)if(h=3De.split(" "),h[1]=3D=3D=3Df&&(g=3Dj[i+" "+h[0]]||j["* =
"+h[0]])){g=3D=3D=3D!0?g=3Dj[e]:j[e]!=3D=3D!0&&(f=3Dh[0],k.unshift(h[1]))=
;break}if(g!=3D=3D!0)if(g&&a["throws"])b=3Dg(b);else =
try{b=3Dg(b)}catch(l){return{state:"parsererror",error:g?l:"No =
conversion from "+i+" to =
"+f}}}return{state:"success",data:b}}m.extend({active:0,lastModified:{},e=
tag:{},ajaxSettings:{url:zc,type:"GET",isLocal:Dc.test(yc[1]),global:!0,p=
rocessData:!0,async:!0,contentType:"application/x-www-form-urlencoded; =
charset=3DUTF-8",accepts:{"*":Jc,text:"text/plain",html:"text/html",xml:"=
application/xml, text/xml",json:"application/json, =
text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFi=
elds:{xml:"responseXML",text:"responseText",json:"responseJSON"},converte=
rs:{"* text":String,"text html":!0,"text json":m.parseJSON,"text =
xml":m.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b)=
{return =
b?Nc(Nc(a,m.ajaxSettings),b):Nc(m.ajaxSettings,a)},ajaxPrefilter:Lc(Hc),a=
jaxTransport:Lc(Ic),ajax:function(a,b){"object"=3D=3Dtypeof =
a&&(b=3Da,a=3Dvoid 0),b=3Db||{};var =
c,d,e,f,g,h,i,j,k=3Dm.ajaxSetup({},b),l=3Dk.context||k,n=3Dk.context&&(l.=
nodeType||l.jquery)?m(l):m.event,o=3Dm.Deferred(),p=3Dm.Callbacks("once =
memory"),q=3Dk.statusCode||{},r=3D{},s=3D{},t=3D0,u=3D"canceled",v=3D{rea=
dyState:0,getResponseHeader:function(a){var =
b;if(2=3D=3D=3Dt){if(!j){j=3D{};while(b=3DCc.exec(f))j[b[1].toLowerCase()=
]=3Db[2]}b=3Dj[a.toLowerCase()]}return =
null=3D=3Db?null:b},getAllResponseHeaders:function(){return =
2=3D=3D=3Dt?f:null},setRequestHeader:function(a,b){var =
c=3Da.toLowerCase();return =
t||(a=3Ds[c]=3Ds[c]||a,r[a]=3Db),this},overrideMimeType:function(a){retur=
n t||(k.mimeType=3Da),this},statusCode:function(a){var =
b;if(a)if(2>t)for(b in a)q[b]=3D[q[b],a[b]];else =
v.always(a[v.status]);return this},abort:function(a){var b=3Da||u;return =
i&&i.abort(b),x(0,b),this}};if(o.promise(v).complete=3Dp.add,v.success=3D=
v.done,v.error=3Dv.fail,k.url=3D((a||k.url||zc)+"").replace(Ac,"").replac=
e(Fc,yc[1]+"//"),k.type=3Db.method||b.type||k.method||k.type,k.dataTypes=3D=
m.trim(k.dataType||"*").toLowerCase().match(E)||[""],null=3D=3Dk.crossDom=
ain&&(c=3DGc.exec(k.url.toLowerCase()),k.crossDomain=3D!(!c||c[1]=3D=3D=3D=
yc[1]&&c[2]=3D=3D=3Dyc[2]&&(c[3]||("http:"=3D=3D=3Dc[1]?"80":"443"))=3D=3D=
=3D(yc[3]||("http:"=3D=3D=3Dyc[1]?"80":"443")))),k.data&&k.processData&&"=
string"!=3Dtypeof =
k.data&&(k.data=3Dm.param(k.data,k.traditional)),Mc(Hc,k,b,v),2=3D=3D=3Dt=
)return =
v;h=3Dk.global,h&&0=3D=3D=3Dm.active++&&m.event.trigger("ajaxStart"),k.ty=
pe=3Dk.type.toUpperCase(),k.hasContent=3D!Ec.test(k.type),e=3Dk.url,k.has=
Content||(k.data&&(e=3Dk.url+=3D(wc.test(e)?"&":"?")+k.data,delete =
k.data),k.cache=3D=3D=3D!1&&(k.url=3DBc.test(e)?e.replace(Bc,"$1_=3D"+vc+=
+):e+(wc.test(e)?"&":"?")+"_=3D"+vc++)),k.ifModified&&(m.lastModified[e]&=
&v.setRequestHeader("If-Modified-Since",m.lastModified[e]),m.etag[e]&&v.s=
etRequestHeader("If-None-Match",m.etag[e])),(k.data&&k.hasContent&&k.cont=
entType!=3D=3D!1||b.contentType)&&v.setRequestHeader("Content-Type",k.con=
tentType),v.setRequestHeader("Accept",k.dataTypes[0]&&k.accepts[k.dataTyp=
es[0]]?k.accepts[k.dataTypes[0]]+("*"!=3D=3Dk.dataTypes[0]?", "+Jc+"; =
q=3D0.01":""):k.accepts["*"]);for(d in =
k.headers)v.setRequestHeader(d,k.headers[d]);if(k.beforeSend&&(k.beforeSe=
nd.call(l,v,k)=3D=3D=3D!1||2=3D=3D=3Dt))return =
v.abort();u=3D"abort";for(d =
in{success:1,error:1,complete:1})v[d](k[d]);if(i=3DMc(Ic,k,b,v)){v.readyS=
tate=3D1,h&&n.trigger("ajaxSend",[v,k]),k.async&&k.timeout>0&&(g=3DsetTim=
eout(function(){v.abort("timeout")},k.timeout));try{t=3D1,i.send(r,x)}cat=
ch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,"No Transport");function =
x(a,b,c,d){var =
j,r,s,u,w,x=3Db;2!=3D=3Dt&&(t=3D2,g&&clearTimeout(g),i=3Dvoid =
0,f=3Dd||"",v.readyState=3Da>0?4:0,j=3Da>=3D200&&300>a||304=3D=3D=3Da,c&&=
(u=3DOc(k,v,c)),u=3DPc(k,u,v,j),j?(k.ifModified&&(w=3Dv.getResponseHeader=
("Last-Modified"),w&&(m.lastModified[e]=3Dw),w=3Dv.getResponseHeader("eta=
g"),w&&(m.etag[e]=3Dw)),204=3D=3D=3Da||"HEAD"=3D=3D=3Dk.type?x=3D"noconte=
nt":304=3D=3D=3Da?x=3D"notmodified":(x=3Du.state,r=3Du.data,s=3Du.error,j=
=3D!s)):(s=3Dx,(a||!x)&&(x=3D"error",0>a&&(a=3D0))),v.status=3Da,v.status=
Text=3D(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.sta=
tusCode(q),q=3Dvoid =
0,h&&n.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x=
]),h&&(n.trigger("ajaxComplete",[v,k]),--m.active||m.event.trigger("ajaxS=
top")))}return v},getJSON:function(a,b,c){return =
m.get(a,b,c,"json")},getScript:function(a,b){return m.get(a,void =
0,b,"script")}}),m.each(["get","post"],function(a,b){m[b]=3Dfunction(a,c,=
d,e){return m.isFunction(c)&&(e=3De||d,d=3Dc,c=3Dvoid =
0),m.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),m.each(["ajaxSta=
rt","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],funct=
ion(a,b){m.fn[b]=3Dfunction(a){return =
this.on(b,a)}}),m._evalUrl=3Dfunction(a){return =
m.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0=
})},m.fn.extend({wrapAll:function(a){if(m.isFunction(a))return =
this.each(function(b){m(this).wrapAll(a.call(this,b))});if(this[0]){var =
b=3Dm(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.inse=
rtBefore(this[0]),b.map(function(){var =
a=3Dthis;while(a.firstChild&&1=3D=3D=3Da.firstChild.nodeType)a=3Da.firstC=
hild;return a}).append(this)}return this},wrapInner:function(a){return =
this.each(m.isFunction(a)?function(b){m(this).wrapInner(a.call(this,b))}:=
function(){var =
b=3Dm(this),c=3Db.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:fu=
nction(a){var b=3Dm.isFunction(a);return =
this.each(function(c){m(this).wrapAll(b?a.call(this,c):a)})},unwrap:funct=
ion(){return =
this.parent().each(function(){m.nodeName(this,"body")||m(this).replaceWit=
h(this.childNodes)}).end()}}),m.expr.filters.hidden=3Dfunction(a){return =
a.offsetWidth<=3D0&&a.offsetHeight<=3D0||!k.reliableHiddenOffsets()&&"non=
e"=3D=3D=3D(a.style&&a.style.display||m.css(a,"display"))},m.expr.filters=
.visible=3Dfunction(a){return!m.expr.filters.hidden(a)};var =
Qc=3D/%20/g,Rc=3D/\[\]$/,Sc=3D/\r?\n/g,Tc=3D/^(?:submit|button|image|rese=
t|file)$/i,Uc=3D/^(?:input|select|textarea|keygen)/i;function =
Vc(a,b,c,d){var =
e;if(m.isArray(b))m.each(b,function(b,e){c||Rc.test(a)?d(a,e):Vc(a+"["+("=
object"=3D=3Dtypeof e?b:"")+"]",e,c,d)});else =
if(c||"object"!=3D=3Dm.type(b))d(a,b);else for(e in =
b)Vc(a+"["+e+"]",b[e],c,d)}m.param=3Dfunction(a,b){var =
c,d=3D[],e=3Dfunction(a,b){b=3Dm.isFunction(b)?b():null=3D=3Db?"":b,d[d.l=
ength]=3DencodeURIComponent(a)+"=3D"+encodeURIComponent(b)};if(void =
0=3D=3D=3Db&&(b=3Dm.ajaxSettings&&m.ajaxSettings.traditional),m.isArray(a=
)||a.jquery&&!m.isPlainObject(a))m.each(a,function(){e(this.name,this.val=
ue)});else for(c in a)Vc(c,a[c],b,e);return =
d.join("&").replace(Qc,"+")},m.fn.extend({serialize:function(){return =
m.param(this.serializeArray())},serializeArray:function(){return =
this.map(function(){var a=3Dm.prop(this,"elements");return =
a?m.makeArray(a):this}).filter(function(){var a=3Dthis.type;return =
this.name&&!m(this).is(":disabled")&&Uc.test(this.nodeName)&&!Tc.test(a)&=
&(this.checked||!W.test(a))}).map(function(a,b){var =
c=3Dm(this).val();return =
null=3D=3Dc?null:m.isArray(c)?m.map(c,function(a){return{name:b.name,valu=
e:a.replace(Sc,"\r\n")}}):{name:b.name,value:c.replace(Sc,"\r\n")}}).get(=
)}}),m.ajaxSettings.xhr=3Dvoid =
0!=3D=3Da.ActiveXObject?function(){return!this.isLocal&&/^(get|post|head|=
put|delete|options)$/i.test(this.type)&&Zc()||$c()}:Zc;var =
Wc=3D0,Xc=3D{},Yc=3Dm.ajaxSettings.xhr();a.ActiveXObject&&m(a).on("unload=
",function(){for(var a in Xc)Xc[a](void =
0,!0)}),k.cors=3D!!Yc&&"withCredentials"in =
Yc,Yc=3Dk.ajax=3D!!Yc,Yc&&m.ajaxTransport(function(a){if(!a.crossDomain||=
k.cors){var b;return{send:function(c,d){var =
e,f=3Da.xhr(),g=3D++Wc;if(f.open(a.type,a.url,a.async,a.username,a.passwo=
rd),a.xhrFields)for(e in =
a.xhrFields)f[e]=3Da.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overr=
ideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Reque=
sted-With"]=3D"XMLHttpRequest");for(e in c)void =
0!=3D=3Dc[e]&&f.setRequestHeader(e,c[e]+"");f.send(a.hasContent&&a.data||=
null),b=3Dfunction(c,e){var =
h,i,j;if(b&&(e||4=3D=3D=3Df.readyState))if(delete Xc[g],b=3Dvoid =
0,f.onreadystatechange=3Dm.noop,e)4!=3D=3Df.readyState&&f.abort();else{j=3D=
{},h=3Df.status,"string"=3D=3Dtypeof =
f.responseText&&(j.text=3Df.responseText);try{i=3Df.statusText}catch(k){i=
=3D""}h||!a.isLocal||a.crossDomain?1223=3D=3D=3Dh&&(h=3D204):h=3Dj.text?2=
00:404}j&&d(h,i,j,f.getAllResponseHeaders())},a.async?4=3D=3D=3Df.readySt=
ate?setTimeout(b):f.onreadystatechange=3DXc[g]=3Db:b()},abort:function(){=
b&&b(void 0,!0)}}}});function Zc(){try{return new =
a.XMLHttpRequest}catch(b){}}function $c(){try{return new =
a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}m.ajaxSetup({accepts:{scr=
ipt:"text/javascript, application/javascript, application/ecmascript, =
application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},conver=
ters:{"text script":function(a){return =
m.globalEval(a),a}}}),m.ajaxPrefilter("script",function(a){void =
0=3D=3D=3Da.cache&&(a.cache=3D!1),a.crossDomain&&(a.type=3D"GET",a.global=
=3D!1)}),m.ajaxTransport("script",function(a){if(a.crossDomain){var =
b,c=3Dy.head||m("head")[0]||y.documentElement;return{send:function(d,e){b=
=3Dy.createElement("script"),b.async=3D!0,a.scriptCharset&&(b.charset=3Da=
.scriptCharset),b.src=3Da.url,b.onload=3Db.onreadystatechange=3Dfunction(=
a,c){(c||!b.readyState||/loaded|complete/.test(b.readyState))&&(b.onload=3D=
b.onreadystatechange=3Dnull,b.parentNode&&b.parentNode.removeChild(b),b=3D=
null,c||e(200,"success"))},c.insertBefore(b,c.firstChild)},abort:function=
(){b&&b.onload(void 0,!0)}}}});var =
_c=3D[],ad=3D/(=3D)\?(?=3D&|$)|\?\?/;m.ajaxSetup({jsonp:"callback",jsonpC=
allback:function(){var a=3D_c.pop()||m.expando+"_"+vc++;return =
this[a]=3D!0,a}}),m.ajaxPrefilter("json jsonp",function(b,c,d){var =
e,f,g,h=3Db.jsonp!=3D=3D!1&&(ad.test(b.url)?"url":"string"=3D=3Dtypeof =
b.data&&!(b.contentType||"").indexOf("application/x-www-form-urlencoded")=
&&ad.test(b.data)&&"data");return =
h||"jsonp"=3D=3D=3Db.dataTypes[0]?(e=3Db.jsonpCallback=3Dm.isFunction(b.j=
sonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=3Db[h].replace(ad,=
"$1"+e):b.jsonp!=3D=3D!1&&(b.url+=3D(wc.test(b.url)?"&":"?")+b.jsonp+"=3D=
"+e),b.converters["script json"]=3Dfunction(){return g||m.error(e+" was =
not =
called"),g[0]},b.dataTypes[0]=3D"json",f=3Da[e],a[e]=3Dfunction(){g=3Darg=
uments},d.always(function(){a[e]=3Df,b[e]&&(b.jsonpCallback=3Dc.jsonpCall=
back,_c.push(e)),g&&m.isFunction(f)&&f(g[0]),g=3Df=3Dvoid =
0}),"script"):void =
0}),m.parseHTML=3Dfunction(a,b,c){if(!a||"string"!=3Dtypeof a)return =
null;"boolean"=3D=3Dtypeof b&&(c=3Db,b=3D!1),b=3Db||y;var =
d=3Du.exec(a),e=3D!c&&[];return =
d?[b.createElement(d[1])]:(d=3Dm.buildFragment([a],b,e),e&&e.length&&m(e)=
.remove(),m.merge([],d.childNodes))};var =
bd=3Dm.fn.load;m.fn.load=3Dfunction(a,b,c){if("string"!=3Dtypeof =
a&&bd)return bd.apply(this,arguments);var d,e,f,g=3Dthis,h=3Da.indexOf(" =
");return =
h>=3D0&&(d=3Dm.trim(a.slice(h,a.length)),a=3Da.slice(0,h)),m.isFunction(b=
)?(c=3Db,b=3Dvoid 0):b&&"object"=3D=3Dtypeof =
b&&(f=3D"POST"),g.length>0&&m.ajax({url:a,type:f,dataType:"html",data:b})=
.done(function(a){e=3Darguments,g.html(d?m("<div>").append(m.parseHTML(a)=
).find(d):a)}).complete(c&&function(a,b){g.each(c,e||[a.responseText,b,a]=
)}),this},m.expr.filters.animated=3Dfunction(a){return =
m.grep(m.timers,function(b){return a=3D=3D=3Db.elem}).length};var =
cd=3Da.document.documentElement;function dd(a){return =
m.isWindow(a)?a:9=3D=3D=3Da.nodeType?a.defaultView||a.parentWindow:!1}m.o=
ffset=3D{setOffset:function(a,b,c){var =
d,e,f,g,h,i,j,k=3Dm.css(a,"position"),l=3Dm(a),n=3D{};"static"=3D=3D=3Dk&=
&(a.style.position=3D"relative"),h=3Dl.offset(),f=3Dm.css(a,"top"),i=3Dm.=
css(a,"left"),j=3D("absolute"=3D=3D=3Dk||"fixed"=3D=3D=3Dk)&&m.inArray("a=
uto",[f,i])>-1,j?(d=3Dl.position(),g=3Dd.top,e=3Dd.left):(g=3DparseFloat(=
f)||0,e=3DparseFloat(i)||0),m.isFunction(b)&&(b=3Db.call(a,c,h)),null!=3D=
b.top&&(n.top=3Db.top-h.top+g),null!=3Db.left&&(n.left=3Db.left-h.left+e)=
,"using"in =
b?b.using.call(a,n):l.css(n)}},m.fn.extend({offset:function(a){if(argumen=
ts.length)return void =
0=3D=3D=3Da?this:this.each(function(b){m.offset.setOffset(this,a,b)});var=
 b,c,d=3D{top:0,left:0},e=3Dthis[0],f=3De&&e.ownerDocument;if(f)return =
b=3Df.documentElement,m.contains(b,e)?(typeof =
e.getBoundingClientRect!=3D=3DK&&(d=3De.getBoundingClientRect()),c=3Ddd(f=
),{top:d.top+(c.pageYOffset||b.scrollTop)-(b.clientTop||0),left:d.left+(c=
.pageXOffset||b.scrollLeft)-(b.clientLeft||0)}):d},position:function(){if=
(this[0]){var =
a,b,c=3D{top:0,left:0},d=3Dthis[0];return"fixed"=3D=3D=3Dm.css(d,"positio=
n")?b=3Dd.getBoundingClientRect():(a=3Dthis.offsetParent(),b=3Dthis.offse=
t(),m.nodeName(a[0],"html")||(c=3Da.offset()),c.top+=3Dm.css(a[0],"border=
TopWidth",!0),c.left+=3Dm.css(a[0],"borderLeftWidth",!0)),{top:b.top-c.to=
p-m.css(d,"marginTop",!0),left:b.left-c.left-m.css(d,"marginLeft",!0)}}},=
offsetParent:function(){return this.map(function(){var =
a=3Dthis.offsetParent||cd;while(a&&!m.nodeName(a,"html")&&"static"=3D=3D=3D=
m.css(a,"position"))a=3Da.offsetParent;return =
a||cd})}}),m.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},func=
tion(a,b){var c=3D/Y/.test(b);m.fn[a]=3Dfunction(d){return =
V(this,function(a,d,e){var f=3Ddd(a);return void 0=3D=3D=3De?f?b in =
f?f[b]:f.document.documentElement[d]:a[d]:void(f?f.scrollTo(c?m(f).scroll=
Left():e,c?e:m(f).scrollTop()):a[d]=3De)},a,d,arguments.length,null)}}),m=
.each(["top","left"],function(a,b){m.cssHooks[b]=3DLb(k.pixelPosition,fun=
ction(a,c){return =
c?(c=3DJb(a,b),Hb.test(c)?m(a).position()[b]+"px":c):void =
0})}),m.each({Height:"height",Width:"width"},function(a,b){m.each({paddin=
g:"inner"+a,content:b,"":"outer"+a},function(c,d){m.fn[d]=3Dfunction(d,e)=
{var f=3Darguments.length&&(c||"boolean"!=3Dtypeof =
d),g=3Dc||(d=3D=3D=3D!0||e=3D=3D=3D!0?"margin":"border");return =
V(this,function(b,c,d){var e;return =
m.isWindow(b)?b.document.documentElement["client"+a]:9=3D=3D=3Db.nodeType=
?(e=3Db.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body[=
"offset"+a],e["offset"+a],e["client"+a])):void =
0=3D=3D=3Dd?m.css(b,c,g):m.style(b,c,d,g)},b,f?d:void =
0,f,null)}})}),m.fn.size=3Dfunction(){return =
this.length},m.fn.andSelf=3Dm.fn.addBack,"function"=3D=3Dtypeof =
define&&define.amd&&define("jquery",[],function(){return m});var =
ed=3Da.jQuery,fd=3Da.$;return m.noConflict=3Dfunction(b){return =
a.$=3D=3D=3Dm&&(a.$=3Dfd),b&&a.jQuery=3D=3D=3Dm&&(a.jQuery=3Ded),m},typeo=
f b=3D=3D=3DK&&(a.jQuery=3Da.$=3Dm),m});


------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/jquery-version.js

/*=0A=
*=0A=
*   Generated by javascript=0A=
*   @file jquery.browser=0A=
*   @author TimYao <tmwoman@yeah.net>=0A=
*   @version 20160325=0A=
*=0A=
*   bug repair=0A=
*   jquery=0A=
*=0A=
*    version>=3D1.9 last version   $.browser=0A=
*=0A=
*     =E6=B5=8F=E8=A7=88=E5=99=A8=E9=AA=8C=E8=AF=81$.browser=0A=
*=0A=
* */=0A=
=0A=
(function($,global){=0A=
    if($=3D=3D=3Dglobal.jQuery)=0A=
    {=0A=
        if($.browser || $.httpData || $.handleError)=0A=
        {=0A=
            return false;=0A=
        }=0A=
    }=0A=
    $.browser =3D (function(){=0A=
        var browser_v =3D {},=0A=
            P,=0A=
            browsers =3D navigator.userAgent;=0A=
        var uaMatch=3Dfunction(a) {=0A=
            a =3D a.toLowerCase();=0A=
            a =3D /(webkit)[ \/]([\w.]+)/.exec(a) || =
/(opera)(?:.*version)?[ \/]([\w.]+)/.exec(a) || /(msie) =
([\w.]+)/.exec(a) || !/compatible/.test(a) && /(mozilla)(?:.*? =
rv:([\w.]+))?/.exec(a) || [];=0A=
            return {=0A=
                browser: a[1] || "",=0A=
                version: a[2] || "0"=0A=
            }=0A=
        };=0A=
        P =3D uaMatch(browsers);=0A=
        if(P.browser)=0A=
        {=0A=
            browser_v[P.browser] =3D true;=0A=
            browser_v['version'] =3D P.version;=0A=
        }=0A=
        if(browser_v.webkit)=0A=
        {=0A=
            browser_v.safari =3D P.browser.safari =3D true;=0A=
        }=0A=
        return browser_v;=0A=
    })();=0A=
=0A=
	// handleError  httpData =E4=BF=AE=E5=A4=8D=0A=
	 jQuery.extend({=0A=
	     handleError: function (s, xhr, status, e) {=0A=
	         if (s.error) {=0A=
	             s.error.call(s.context || s, xhr, status, e);=0A=
	         }=0A=
	         if (s.global) {=0A=
	             (s.context ? jQuery(s.context) : =
jQuery.event).trigger("ajaxError", [xhr, s, e]);=0A=
	         }=0A=
	     },=0A=
	     httpData: function (xhr, type, s) {=0A=
	         var ct =3D xhr.getResponseHeader("content-type"),=0A=
			 xml =3D type =3D=3D "xml" || !type && ct && ct.indexOf("xml") >=3D 0,=0A=
			 data =3D xml ? xhr.responseXML : xhr.responseText;=0A=
			         if (xml && data.documentElement.tagName =3D=3D "parsererror")=0A=
			             throw "parsererror";=0A=
			         if (s && s.dataFilter)=0A=
			             data =3D s.dataFilter(data, type);=0A=
			         if (typeof data =3D=3D=3D "string") {=0A=
			             if (type =3D=3D "script")=0A=
			                 jQuery.globalEval(data);=0A=
			             if (type =3D=3D "json")=0A=
			                 data =3D window["eval"]("(" + data + ")");=0A=
			         }=0A=
			         return data;=0A=
		  }=0A=
	 });=0A=
})(jQuery,window);
------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/ad.js?v=1.1

=EF=BB=BFvar home_domain =3D "blog.csdn.net";
var ad_cnt =3D ad_cnt || 0;

/*CSDN=E5=B9=BF=E5=91=8A=E5=BB=B6=E8=BF=9F=E5=8A=A0=E8=BD=BD =
t:=E5=B9=BF=E5=91=8A=E7=B1=BB=E5=9E=8B=EF=BC=8C=E6=95=B0=E5=AD=97=EF=BC=9B=
id:=E5=AE=B9=E5=99=A8id*/
var Ad =3D function (t, id) {
    this.adType =3D t;
    this.containerId =3D id;
    this.adIndex =3D ad_cnt++;

    this.loadAd =3D function () {
        //document.domain =3D "csdn.net";

        var container =3D document.getElementById(this.containerId);
        var width =3D container.offsetWidth - 2 - =
container.style.paddingLeft - container.style.paddingRight;
        //var height =3D container.offsetHeight - 2 - =
container.style.paddingTop - container.style.paddingBottom;

        var frm =3D document.createElement('iframe');
        frm.id =3D "ad_frm_" + this.adIndex;
        frm.frameBorder =3D "0";
        frm.scrolling =3D "no";
        frm.style.borderWidth =3D "0px";
        frm.style.overflow =3D "hidden";
        if (width > 0) frm.style.width =3D width + "px";
        else frm.style.width =3D "98%";
        frm.style.height =3D "0px";
        frm.src =3D "http://" + home_domain + "/common/ad.html"
            + "?t=3D" + this.adType
            + "&containerId=3D" + this.containerId
            + "&frmId=3D" + frm.id;
        container.appendChild(frm);
    };
    if (jQuery) {
        jQuery((function (_ad) {
            return function () { _ad.loadAd(); }
        })(this));
    } else {
        this.loadAd();
    }
};
------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://ads.csdn.net/js/tracking.js

/*=0A=
	@function adv tracking=0A=
	@editer fjj=0A=
	@create_time 20151201=0A=
**/=0A=
(function(widnow,$csdn_iteye_jq,undefined){=0A=
	function TrackAdv(){=0A=
		this.advs=3D[];  // =
=E8=A2=AB=E8=BD=BD=E5=85=A5=E5=B9=BF=E5=91=8A=E4=BD=8D=E9=9B=86=E5=90=88=0A=
		this.advFlag=3D{};  //  =
=E7=94=A8=E4=BA=8E=E8=BD=BD=E5=85=A5=E5=B9=BF=E5=91=8A=E4=BD=8D=E5=8E=BB=E9=
=87=8D=0A=
		this.dataArr=3D[]; =
//=E7=BC=93=E5=AD=98=E9=9C=80=E8=A6=81=E6=8F=90=E4=BA=A4=E6=95=B0=E6=8D=AE=
=E7=9A=84=E5=B9=BF=E5=91=8A=E5=AF=B9=E8=B1=A1=0A=
		this.dataTimer=3Dnull;=0A=
		this.swapImgSet=3Dfalse;  =
//=E7=AC=AC=E4=B8=80=E4=B8=AA=E8=BD=AE=E6=92=AD=E5=9B=BE=E5=B9=BF=E5=91=8A=
=E4=BD=8D=E8=BD=BD=E5=85=A5=E6=97=B6 =
=E8=A7=A6=E5=8F=91=E8=BD=AE=E6=92=AD=E5=9B=BE=E6=96=B9=E6=B3=95  =
=E4=B9=8B=E5=90=8E=E4=B8=8D=E5=86=8D=E4=B8=8D=E5=86=8D=E8=A7=A6=E5=8F=91=0A=
		this.init();=0A=
	}=0A=
	TrackAdv.prototype=3D{=0A=
		constructor:"Track",=0A=
		init:function(){=0A=
			var self=3Dthis;=0A=
			//=E6=BB=9A=E5=8A=A8=E5=A4=84=E7=90=86=E5=87=BD=E6=95=B0  =
=E9=87=87=E7=94=A8=E4=BA=86=E4=BA=8B=E4=BB=B6=E8=8A=82=E6=B5=81 =
=E6=AF=8F=E9=9A=94100=E6=AF=AB=E7=B1=B3=E8=AE=A1=E7=AE=97=E4=B8=80=E6=AC=A1=0A=
			var scrollHandle=3D(function(){=0A=
				var timer=3Dnull;=0A=
				return function(){=0A=
					if(timer){=0A=
						return false;=0A=
					}=0A=
					timer=3DsetTimeout(function(){=0A=
						timer=3Dnull;=0A=
						/*if(self.advs.length =3D=3D=3D 0){=0A=
							return false;=0A=
						}=0A=
						for(var i=3D0;i<self.advs.length;i++){=0A=
=0A=
							if(self.advs[i].view && self.posTest(self.advs[i])){=0A=
								if(self.advs[i].ele.data("swapimg") && =
!self.advs[i].ele.hasClass("curSwap")){=0A=
									continue;=0A=
								}=0A=
								self.advs[i].viewed=3Dtrue;=0A=
								//self.sendData(self.advs[i]);=0A=
								if(!self.dataTimer){=0A=
									self.discreteSend();=0A=
								}=0A=
								self.dataArr.push(self.advs[i]);=0A=
=0A=
							}=0A=
=0A=
						}*/=0A=
						self.insertData();=0A=
					},100)=0A=
				}=0A=
			})();=0A=
			//=E5=85=B3=E9=97=AD=E6=B5=8F=E8=A7=88=E5=99=A8 =
=E5=85=B3=E9=97=AD=E5=BD=93=E5=89=8D=E9=A1=B5 =
=E8=B7=B3=E8=BD=AC=E5=88=B0=E5=85=B6=E4=BB=96=E9=A1=B5=E9=9D=A2=E6=97=B6 =
=E5=B0=86=E6=B2=A1=E6=9C=89=E6=8F=90=E4=BA=A4=E7=9A=84=E6=95=B0=E6=8D=AE=E4=
=B8=80=E6=AC=A1=E8=A1=8C=E6=8F=90=E4=BA=A4=0A=
			var unloadHandle=3Dfunction(){=0A=
				if(self.dataArr.length =3D=3D=3D0){=0A=
					return false;=0A=
				}=0A=
				for(var i=3D0,len=3Dself.dataArr.length;i<len;i++){=0A=
					self.sendData(self.dataArr[i]);=0A=
				}=0A=
				self.dataArr=3D[];=0A=
			}=0A=
			//$csdn_iteye_jq(window).on("scroll",scrollHandle);=0A=
			//$csdn_iteye_jq(window).on("unload",unloadHandle);=0A=
		},=0A=
		//=E8=BD=BD=E5=85=A5=E5=B9=BF=E5=91=8A=E5=AF=B9=E8=B1=A1=0A=
		addAdvs:function(eleStr,opt){=0A=
			var self=3Dthis,=0A=
				eleStr=3DeleStr || ".J_adv",=0A=
				opt=3Dtypeof opt =3D=3D=3D "object"?opt:{},=0A=
				oAdvs=3D$csdn_iteye_jq(eleStr),=0A=
				nAdvLen=3DoAdvs.length,=0A=
				preAdr=3Ddocument.referrer || "-";   // =
=E5=89=8D=E4=B8=80=E4=B8=AA=E6=96=87=E6=A1=A3=E5=9C=B0=E5=9D=80=0A=
			if(nAdvLen =3D=3D=3D 0){=0A=
				return false;=0A=
			}=0A=
			for(var i=3D0;i<nAdvLen;i++){=0A=
				var adv=3D{};=0A=
				var mod=3D$csdn_iteye_jq(oAdvs[i]).data("mod");=0A=
				if(this.advFlag[mod]){=0A=
					return false;=0A=
				}=0A=
				adv.ele=3D$csdn_iteye_jq(oAdvs[i]);=0A=
				adv.top=3D$csdn_iteye_jq(oAdvs[i]).offset().top;=0A=
				=
adv.height=3D$csdn_iteye_jq(oAdvs[i]).height()?$csdn_iteye_jq(oAdvs[i]).h=
eight():$csdn_iteye_jq(oAdvs[i]).find("img").height();=0A=
				adv.view=3Dtypeof $csdn_iteye_jq(oAdvs[i]).data("view") =3D=3D=3D =
"undefined" ?true:$csdn_iteye_jq(oAdvs[i]).data("view");  //  =
=E5=AF=B9=E5=BA=94=E5=B9=BF=E5=91=8A=E4=BD=8D=E6=98=AF=E5=90=A6=E9=9C=80=E8=
=A6=81=E6=9B=9D=E5=85=89=0A=
				adv.viewed=3Dfalse;   =
//=E8=A2=AB=E6=9B=9D=E5=85=89=E6=97=B6=E4=B8=BAtrue=0A=
				adv.data=3D{=0A=
					uid:"-",=0A=
					ref:preAdr,=0A=
					mod:adv.ele.data("mod") || "-",=0A=
					mtp:opt.mtp || adv.ele.data("mtp") || 1,=0A=
					con:self.exportData(adv),=0A=
					ck:"-"=0A=
				};=0A=
				if(adv.ele.data("swapimg") && !this.swapImgSet){=0A=
					=
//=E5=8F=AA=E8=A7=A6=E5=8F=91=E4=B8=80=E6=AC=A1=E8=BD=AE=E6=92=AD=E5=9B=BE=
=E6=96=B9=E6=B3=95=0A=
					//adv.ele.addClass("curSwap").parent().css("z-index",100);=0A=
					csdn.SwapImage.swap({=0A=
		        swapRoot: $csdn_iteye_jq( '.hot' )=0A=
		    	});=0A=
					this.swapImgSet=3Dtrue;=0A=
				}=0A=
				if(this.posTest(adv) && adv.view){=0A=
					if($csdn_iteye_jq(oAdvs[i]).data("swapimg")){  =
//=E6=98=AF=E8=BD=AE=E6=92=AD=E5=9B=BE=E5=B9=BF=E5=91=8A=E4=BD=8D=E7=9A=84=
=E6=83=85=E5=86=B5=0A=
						if($csdn_iteye_jq(oAdvs[i]).hasClass("curSwap")){=0A=
							adv.viewed=3Dtrue;=0A=
							this.sendData(adv);=0A=
							/*this.dataArr.push(adv);=0A=
							if(!this.dataTimer){=0A=
								this.discreteSend();=0A=
							}*/=0A=
=0A=
						}=0A=
					}else{ =
//=E5=A6=82=E6=9E=9C=E4=B8=8D=E6=98=AF=E8=BD=AE=E6=92=AD=E5=9B=BE=E7=9A=84=
=E5=8F=AA=E8=A6=81=E8=BF=9B=E5=85=A5=E5=B1=8F=E5=B9=95=E5=8C=BA=E5=9F=9F=E5=
=B0=B1=E7=AE=97=E6=9B=9D=E5=85=89=0A=
						adv.viewed=3Dtrue;=0A=
=0A=
						=
/*//=E5=A6=82=E6=9E=9C=E5=AE=9A=E6=97=B6=E6=8F=90=E4=BA=A4=E6=95=B0=E6=8D=
=AE=E7=9A=84=E5=AE=9A=E6=97=B6=E5=99=A8=E6=B2=A1=E6=9C=89=E5=BC=80=E5=90=AF=
=E7=9A=84=E8=AF=9D=EF=BC=8C=E5=BC=80=E5=90=AF=E5=AE=9A=E6=97=B6=E5=99=A8=0A=
						this.dataArr.push(adv);=0A=
						if(!this.dataTimer){=0A=
							this.discreteSend();=0A=
						}*/=0A=
=0A=
						this.sendData(adv);=0A=
					}=0A=
=0A=
				}=0A=
				this.advs.push(adv);=0A=
				this.linkNodes(adv);=0A=
				//this.expAdvs.push(adv);=0A=
				this.advFlag[mod]=3Dtrue;=0A=
			}=0A=
		},=0A=
=0A=
		=
//=E5=88=A4=E6=96=AD=E5=B9=BF=E5=91=8A=E4=BD=8D=E6=98=AF=E5=90=A6=E8=BF=9B=
=E5=85=A5=E5=B1=8F=E5=B9=95 =
=E8=BF=9B=E5=85=A5=E5=8D=B3=E5=B0=86=E5=B9=BF=E5=91=8A=E5=AF=B9=E8=B1=A1=E7=
=BC=93=E5=AD=98=E5=88=B0(dataArr)=E4=B8=AD=0A=
		insertData:function(){=0A=
			var self=3Dthis;=0A=
			if(self.advs.length =3D=3D=3D 0){=0A=
				return false;=0A=
			}=0A=
			for(var i=3D0;i<self.advs.length;i++){=0A=
				if(self.advs[i].view && self.posTest(self.advs[i])){=0A=
					if(self.advs[i].ele.data("swapimg") && =
!self.advs[i].ele.hasClass("curSwap")){=0A=
						continue;=0A=
					}=0A=
					self.advs[i].viewed=3Dtrue;=0A=
					self.sendData(self.advs[i]);=0A=
					=
/*//=E5=B0=86=E5=B9=BF=E5=91=8A=E5=AF=B9=E8=B1=A1=E6=B7=BB=E5=8A=A0=E5=88=
=B0=E6=95=B0=E6=8D=AE=E9=98=9F=E5=88=97(dataArr)=E5=8D=B3=E5=8F=AF=E5=B9=B6=
=E7=AD=89=E5=BE=85=E6=8F=90=E4=BA=A4=0A=
					self.dataArr.push(self.advs[i]);=0A=
=0A=
					=
//=E5=A6=82=E6=9E=9C=E5=AE=9A=E6=97=B6=E6=8F=90=E4=BA=A4=E6=95=B0=E6=8D=AE=
=E7=9A=84=E5=AE=9A=E6=97=B6=E5=99=A8=E6=B2=A1=E6=9C=89=E5=BC=80=E5=90=AF=E7=
=9A=84=E8=AF=9D=EF=BC=8C=E5=BC=80=E5=90=AF=E5=AE=9A=E6=97=B6=E5=99=A8=0A=
					if(!self.dataTimer){=0A=
						self.discreteSend();=0A=
					}*/=0A=
=0A=
				}=0A=
=0A=
			}=0A=
		},=0A=
		=
//=E6=AF=8F=E9=9A=941=E7=A7=92=E6=8F=90=E4=BA=A4=E4=B8=80=E6=AC=A1=E6=9B=9D=
=E5=85=89=E6=95=B0=E6=8D=AE(1=E6=9D=A1)=0A=
		discreteSend:function(){=0A=
			var self=3Dthis;=0A=
			var discreteHandle=3Dfunction(){=0A=
				if(self.dataArr.length =3D=3D=3D0){=0A=
					clearInterval(self.dataTimer);=0A=
					self.dataTimer=3Dnull;=0A=
					return false;=0A=
				}=0A=
				var i=3D0;=0A=
				while(i<1){=0A=
					if(self.dataArr[0]){=0A=
						self.sendData(self.dataArr[0]);=0A=
						self.dataArr.shift();=0A=
						i++;=0A=
					}else{=0A=
						clearInterval(self.dataTimer);=0A=
						self.dataTimer=3Dnull;=0A=
						break;=0A=
					}=0A=
				}=0A=
			}=0A=
			this.dataTimer=3DsetInterval(discreteHandle,20);=0A=
		},=0A=
		// =
=E8=8E=B7=E5=8F=96=E6=9B=9D=E5=85=89=E5=86=85=E5=AE=B9=E5=8D=B3=E5=B9=BF=E5=
=91=8A=E4=BD=8D=E4=B8=AD=E6=89=80=E6=9C=89=E8=BF=9E=E6=8E=A5=E7=9A=84=E5=86=
=85=E5=AE=B9=0A=
		exportData:function(adv){=0A=
			var con=3Dadv.ele.data("con") || "-";=0A=
			return =
!!adv.ele.data("order")?con+",ad_order_"+adv.ele.data("order"):con+"-"=0A=
		},=0A=
		// =
=E6=B5=8B=E8=AF=95=E5=B9=BF=E5=91=8A=E4=BD=8D=E6=98=AF=E5=90=A6=E5=9C=A8=E6=
=9B=9D=E5=85=89=E5=8C=BA=E5=9F=9F=0A=
		posTest:function(adv){=0A=
			//=E4=BF=AE=E6=94=B9=E6=9B=9D=E5=85=89=E8=A7=84=E5=88=99=0A=
			if(adv.viewed){=0A=
				return false;=0A=
			}else{=0A=
				return true;=0A=
			}=0A=
		},=0A=
		// =
=E8=8E=B7=E5=8F=96=E5=B9=BF=E5=91=8A=E4=BD=8D=E4=B8=AD=E6=89=80=E6=9C=89=E7=
=9A=84=E8=BF=9E=E6=8E=A5=E4=B8=94=E6=B7=BB=E5=8A=A0click=E4=BA=8B=E4=BB=B6=0A=
		linkNodes:function(adv){=0A=
			var self=3Dthis;=0A=
			var aLinks=3Dadv.ele.find("a");=0A=
			var iframeLinks=3Dadv.ele.find("iframe")=0A=
			if(aLinks.length =3D=3D=3D 0 && iframeLinks.length =3D=3D=3D 0 ){=0A=
				return false;=0A=
			}=0A=
			aLinks.each(function(){=0A=
				if($csdn_iteye_jq(this).attr("target") =3D=3D undefined){=0A=
					$csdn_iteye_jq(this).attr("target","_blank");=0A=
				}=0A=
				$csdn_iteye_jq(this).on("click",function(){=0A=
					con=3Dself.linkData(this);=0A=
					self.sendData(adv,con);=0A=
				})=0A=
			})=0A=
		},=0A=
		=
//=E8=8E=B7=E5=8F=96=E7=82=B9=E5=87=BB=E5=85=83=E7=B4=A0=E7=9A=84=E5=86=85=
=E5=AE=B9=0A=
		linkData:function(that){=0A=
			var ck=3D""+that.href;=0A=
			var conStr;=0A=
			if($csdn_iteye_jq(that).find("img").length){=0A=
				conStr=3D$csdn_iteye_jq(that).find("img").eq(0).attr("title") || =
$csdn_iteye_jq(that).find("img").eq(0).attr("alt")=0A=
=0A=
			}else{=0A=
				conStr=3D$csdn_iteye_jq(that).html();=0A=
			}=0A=
			ck+=3DconStr?";"+conStr:"";=0A=
			return ck;=0A=
		},=0A=
		//=E8=8E=B7=E5=8F=96=E7=94=A8=E6=88=B7ID=0A=
		getUserId:function(){=0A=
			var result=3D/(; =
)?(UserName|_javaeye_cookie_id_)=3D([^;]+)/.exec(widnow.document.cookie);=0A=
			var uid=3D (result !=3D null ? result[3] : void 0) || '-';=0A=
			return uid;=0A=
		},=0A=
		//=E6=8F=90=E4=BA=A4=E6=95=B0=E6=8D=AE=0A=
		sendData:function(adv,con){=0A=
			adv.data.uid=3Dthis.getUserId();=0A=
			protocol=3D"http:";=0A=
			if(typeof con =3D=3D=3D "string"){=0A=
				adv.data.ck=3Dcon;=0A=
			}=0A=
			var dataStr=3Dthis.paramData(adv.data);=0A=
			var img =3Dnew Image();=0A=
			img.onload=3Dimg.onerror=3Dfunction(){=0A=
				img.onload=3Dimg.onerror=3Dnull;=0A=
				img=3Dnull;=0A=
			}=0A=
			if(typeof con =3D=3D=3D "string"){=0A=
				img.src=3Dprotocol+"//dc.csdn.net/re?"+dataStr;=0A=
			}=0A=
		},=0A=
		=
//=E6=95=B0=E6=8D=AE=E8=BD=AC=E6=8D=A2=E4=B8=BA=E5=AD=97=E7=AC=A6=E4=B8=B2=
=E5=BD=A2=E5=BC=8F=0A=
		paramData:function(data){=0A=
			var dataArr=3D[];=0A=
			for(var key in data){=0A=
				var text=3Dkey+"=3D"+data[key];=0A=
				text.replace(/^\s+|\s+$/g,"");=0A=
				dataArr.push(text);=0A=
			}=0A=
			return dataArr.join("&")=0A=
		}=0A=
		//=E5=A4=84=E7=90=86url=0A=
		/*handleUrl:function(url){=0A=
			if(typeof url =3D=3D=3D "string" && url.length >0 ){=0A=
				var hostStr=3Durl.split("://")[1];=0A=
				hostName=3DhostStr.split(".")[0];=0A=
				strArr=3DhostStr.split("?")[0].split("/");=0A=
				fileName=3DstrArr[strArr.length-1];=0A=
				return hostName+"_"+fileName;=0A=
			}else{=0A=
				return false;=0A=
			}=0A=
		}*/=0A=
	}=0A=
	//=E8=BD=AE=E6=92=AD=E5=9B=BE   =E6=B7=A1=E5=85=A5=E6=B7=A1=E5=87=BA=0A=
/*	function SwapImg(opts,obj){=0A=
		if(!(this instanceof SwapImg)){=0A=
			return new SwapImg(opts,obj);=0A=
=0A=
		}=0A=
		this.obj=3Dobj;=0A=
		this.parentSelector=3Dopts.parentSelector || ".hot";=0A=
		this.swapSelector=3Dopts.swapSelector || ".hot .J_adv";=0A=
		this.swapCur=3D"curSwap";=0A=
		this.iconSelector=3Dopts.iconSelector || ".js-tagRoot";=0A=
		this.iconCur=3D"current";=0A=
		this.duration=3Dopts.duration || 500;=0A=
		this.interval=3Dopts.interval || 3000;=0A=
		this.lastIndex=3D-1;=0A=
		this.index=3D0;=0A=
		this.swapFlag=3Dfalse; =
//=E6=98=AF=E5=90=A6=E6=AD=A3=E5=9C=A8=E8=BD=AE=E6=92=AD=E4=B8=AD=0A=
		this.timer=3Dnull;=0A=
		this.init();=0A=
	}=0A=
	SwapImg.prototype=3D{=0A=
		constructor:SwapImg,=0A=
		init:function(){=0A=
			var self=3Dthis,=0A=
				swapNode=3D$csdn_iteye_jq(this.swapSelector),=0A=
				swapLen=3DswapNode.length,=0A=
				iconNode=3D$csdn_iteye_jq(this.iconSelector),=0A=
				iconStr=3D"";=0A=
			for(var i=3D0;i<swapLen;i++){=0A=
				iconStr+=3Di=3D=3D0?"<li class=3D'current'></li>":"<li></li>";=0A=
			}=0A=
			iconNode.html(iconStr);=0A=
			iconNode.find("li").each(function(i){=0A=
				$csdn_iteye_jq(this).on("click",function(){=0A=
					//clearInterval(self.timer);=0A=
					if($csdn_iteye_jq(this).hasClass("current") || self.swapFlag ){=0A=
						return false;=0A=
					}=0A=
					self.swapHandle(i);=0A=
				})=0A=
			});=0A=
			self.timer=3DsetInterval(function(){=0A=
				self.swapHandle();=0A=
			},self.interval)=0A=
=0A=
			$csdn_iteye_jq(self.parentSelector).hover(function(){=0A=
				clearInterval(self.timer)=0A=
			},function(){=0A=
				self.timer=3DsetInterval(function(){=0A=
					self.swapHandle();=0A=
				},self.interval)=0A=
			});=0A=
		},=0A=
		swapHandle:function(i){=0A=
			var self=3Dthis;=0A=
			self.swapFlag=3Dtrue;=0A=
			self.lastIndex=3Dself.index;=0A=
			self.index=3Dtypeof i =3D=3D=3D =
'number'?i:++self.index%$(self.swapSelector).length;  //i || ....=0A=
			//self.index=3Di || ++self.index%$(self.swapSelector).length;=0A=
			=
$csdn_iteye_jq(self.iconSelector).find("li").removeClass("current").eq(se=
lf.index).addClass("current");=0A=
			=
$csdn_iteye_jq(self.swapSelector).removeClass("curSwap").eq(self.index).a=
ddClass("curSwap");=0A=
			=
$csdn_iteye_jq(self.swapSelector).eq(self.index).animate({opacity:1},self=
.duration,function(){=0A=
				//$csdn_iteye_jq(this).parent().css("z-index",100)=0A=
				=
$csdn_iteye_jq(this).parent().css({"position":"absolute","z-index":"100",=
"height":"200","top":"0","left":"0"})=0A=
			});=0A=
			=
$csdn_iteye_jq(self.swapSelector).eq(self.lastIndex).animate({opacity:0},=
self.duration,function(){=0A=
				$csdn_iteye_jq(this).parent().css("z-index",0)=0A=
				if(self.obj && typeof self.obj.insertData =3D=3D=3D "function"){=0A=
					self.obj.insertData();=0A=
				}=0A=
				self.swapFlag=3Dfalse;=0A=
			})=0A=
		}=0A=
	}*/=0A=
	widnow.CSDN=3Dwidnow.CSDN?widnow.CSDN:{};=0A=
	return window.CSDN.track=3Dnew TrackAdv();=0A=
})(window,jQuery)
------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/public/common/toolbar/js/html.js

var _gaq =3D [];
var userAgent =3D navigator.userAgent.toLowerCase();
// if(userAgent =3D=3D null || userAgent =3D=3D ''){
// //
// }else{
//     if(userAgent.indexOf("android") !=3D -1 || =
userAgent.indexOf("ios") !=3D -1 || userAgent.indexOf("iphone") !=3D -1 =
|| userAgent.indexOf("ipad") !=3D -1 || userAgent.indexOf("windows =
phone") !=3D -1 ){

//   	}else{
//   	  //google =E7=BB=9F=E8=AE=A1start
//   	  =
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=3Dr;i[r]=3Di[r]||func=
tion(){
//   		  (i[r].q=3Di[r].q||[]).push(arguments)},i[r].l=3D1*new =
Date();a=3Ds.createElement(o),
//   		  =
m=3Ds.getElementsByTagName(o)[0];a.async=3D1;a.src=3Dg;m.parentNode.inser=
tBefore(a,m)
//   		  =
})(window,document,'script','//www.google-analytics.com/analytics.js','ga=
');

//   		  ga('create', 'UA-64962204-1', 'auto');
//   		  ga('send', 'pageview');
//         //google =E7=BB=9F=E8=AE=A1end
//    }
// }

//tag=E6=8E=A8=E8=8D=90=E5=BC=B9=E7=AA=97
(function(){
var protocol =3D location.protocol.substr(0, 4) =3D=3D=3D 'http' ? '' : =
'http:';
$.getScript(protocol + =
'//csdnimg.cn/public/common/tag-suggest-pop/js/main.js?'+(new =
Date()/120000|0));
})();

!(function(){
  var currUser=3D{
      userName:"",
      userNick:'<a class=3D"set-nick" =
href=3D"https://passport.csdn.net/account/profile">=E8=AE=BE=E7=BD=AE=E6=98=
=B5=E7=A7=B0<span class=3D"write-icon"></span></a>',
      userInfo:"",
      desc : '<a class=3D"fill-dec" href=3D"//my.csdn.net" =
target=3D"_blank">=E7=BC=96=E8=BE=91=E8=87=AA=E6=88=91=E4=BB=8B=E7=BB=8D=EF=
=BC=8C=E8=AE=A9=E6=9B=B4=E5=A4=9A=E4=BA=BA=E4=BA=86=E8=A7=A3=E4=BD=A0<spa=
n class=3D"write-icon"></span></a>',
      avatar:"//c.csdnimg.cn/public/common/toolbar/images/100x100.jpg"
    };
  var prodLogo =3D "none";
  var $oScriptTag =3D$("#toolbar-tpl-scriptId");
  var skin =3D$oScriptTag.attr("skin")=3D=3D"black"?" =
csdn-toolbar-skin-black ":"";
  var fixed =3D $oScriptTag.attr("fixed")=3D=3D"top"?" navbar-fixed-top =
":"";
  var prodIndex=3D =
$oScriptTag.attr("domain")?$oScriptTag.attr("domain"):window.location.pro=
tocol+"//"+window.location.host;
      prodIndex+=3D'?ref=3Dtoolbar_logo';
  var getCookie =3Dfunction =
(objName){//=E8=8E=B7=E5=8F=96=E6=8C=87=E5=AE=9A=E5=90=8D=E7=A7=B0=E7=9A=84=
cookie=E7=9A=84=E5=80=BC
      var arrStr =3D document.cookie.split("; ");
      for(var i =3D 0;i < arrStr.length;i ++){
      var temp =3D arrStr[i].split("=3D");
      if(temp[0] =3D=3D objName) return decodeURI(temp[1]);
      }
  }
  var setCookie =3D function (name,value) {
    var Days =3D 30;
    var exp =3D new Date();
    exp.setTime(exp.getTime() + Days*24*60*60*1000);
    document.cookie =3D name + "=3D"+ escape (value) + ";expires=3D" + =
exp.toGMTString();// + ";domain=3D.csdn.net;path=3D/";
  }
  var HTMLEncode =3Dfunction(str) {
      var s =3D "";
      if(str.length =3D=3D 0) return "";
      s =3D str.replace(/&/g, "&amp;").replace(/</g, =
"&lt;").replace(/>/g, "&gt;").replace(/\'/g, "&#39;").replace(/\"/g, =
"&quot;");
      return s;
    }
  var AUtoAvatar =3D function(AU){
    if(!AU||!currUser.userName){
      return false;
    }
    var _AUPath =3D AU.split("").join("/");
    var userName =3D currUser.userName&&currUser.userName.toLowerCase();
    return "http://avatar.csdn.net/"+_AUPath+"/2_"+userName+".jpg";
  }
  var hasLogin =3D false;
  var loginMark =3D"unlogin";
  function checkLogin(callback) {
          currUser.userNick =3D getCookie("UserNick") =
||currUser.userNick;
          currUser.userName =3D getCookie("UserName") || =
currUser.userName;
          currUser.userInfo =3D getCookie("UserInfo") || =
currUser.userInfo;
          currUser.avatar =3D AUtoAvatar(getCookie("AU")) || =
currUser.avatar;
          currUser.desc =3D getCookie("UD") || currUser.desc;
          if(getCookie("UD")){
            currUser.desc =3D =
HTMLEncode(decodeURIComponent(currUser.desc).replace(/\+/g," "));
          }
          callback(currUser);
    }
  checkLogin(function(currUser){
    if(currUser.userName&&currUser.userInfo){
        hasLogin =3D true;
    }
    loginMark =3D hasLogin?"":"unlogin";
  })

  /*
  * init pord logo
  */
  var prodJSON =3D {
      "blog" : "blog-icon",
      "download" : "down-icon",
      "bbs" : "bbs-icon",
      "my" :"space-icon",
      "code" : "code-icon",
      "share" : "share-icon",
      "tag" : "tag-icon",
      "dashboard":"dashboard-icon",
      "news" : "news-icon",
      "tag" : "tag-icon",
      "ask" : "ask-icon",
      "notify" : "notify-icon"
  }
  if(prodJSON[$oScriptTag.attr("prod")]){
    =
prodLogo=3DprodJSON[$oScriptTag.attr("prod")]||$oScriptTag.attr("prod");
  }

  // $( 'head' ).append( '<link rel=3D"stylesheet" =
href=3D"//csdnimg.cn/public/common/toolbar/css/font-awesome.min.css">' =
);
  // =
=E6=B3=A8=E5=86=8Curl=EF=BC=8Chttps://passport.csdn.net/account/register?=
ref=3Dtoolbar

  var tpl =3D'\<div class=3D"csdn-toolbar'+skin+fixed+'">\
        <div class=3D"container row center-block ">\
          <div class=3D"col-md-3 pull-left logo clearfix"><a =
href=3D"http://www.csdn.net?ref=3Dtoolbar" =
title=3D"CSDN=E9=A6=96=E9=A1=B5" target=3D"_blank" class=3D"icon"></a><a =
title=3D"=E9=A2=91=E9=81=93=E9=A6=96=E9=A1=B5" href=3D"'+prodIndex+'" =
class=3D"img '+prodLogo+'"></a></div>\
          <div class=3D"pull-right login-wrap '+loginMark+'">\
            <ul class=3D"btns">\
              <li class=3D"loginlink"><a =
href=3D"https://passport.csdn.net/account/login?ref=3Dtoolbar" =
target=3D"_top">=E7=99=BB=E5=BD=95&nbsp;</a>|<a  target=3D"_top" =
href=3D"http://passport.csdn.net/account/mobileregister?ref=3Dtoolbar&act=
ion=3DmobileRegister">&nbsp;=E6=B3=A8=E5=86=8C</a></li>\
              <li class=3D"search">\
                <div class=3D"icon on-search-icon">\
                  <div class=3D"wrap">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <form action=3D"http://so.csdn.net/search" =
method=3D"get" target=3D"_blank">\
                      <input type=3D"hidden" value=3D"toolbar" =
name=3D"ref" accesskey=3D"2">\
                      <div class=3D"border">\
                        <input placeholder=3D"=E6=90=9C=E7=B4=A2" =
type=3D"text" value=3D"" name=3D"q" accesskey=3D"2"><span =
class=3D"icon-enter-sm"></span>\
                      </div>\
                    </form>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"favor">\
                <div class=3D"icon on-favor-icon">\
                  <div class=3D"wrap">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <div style=3D"display:none;" =
class=3D"favor-success"><span =
class=3D"msg">=E6=94=B6=E8=97=8F=E6=88=90=E5=8A=9F</span>\
                      <div class=3D"btns"><span class=3D"btn btn-primary =
ok">=E7=A1=AE=E5=AE=9A</span></div>\
                    </div>\
                    <div style=3D"display:none;" =
class=3D"favor-failed"><span class=3D"icon-danger-lg"></span><span =
class=3D"msg">=E6=94=B6=E8=97=8F=E5=A4=B1=E8=B4=A5=EF=BC=8C=E8=AF=B7=E9=87=
=8D=E6=96=B0=E6=94=B6=E8=97=8F</span>\
                      <div class=3D"btns"><span class=3D"btn btn-primary =
ok">=E7=A1=AE=E5=AE=9A</span></div>\
                    </div>\
                    <form role=3D"form" class=3D"form-horizontal =
favor-form">\
                      <div class=3D"form-group">\
                        <div class=3D"clearfix">\
                          <label for=3D"input-title" class=3D"col-sm-2 =
control-label">=E6=A0=87=E9=A2=98</label>\
                          <div class=3D"col-sm-10">\
                            <input id=3D"inputTitle" type=3D"text" =
placeholder=3D"" class=3D"title form-control">\
                          </div>\
                        </div>\
                        <div class=3D"alert =
alert-danger"><strong></strong>=E6=A0=87=E9=A2=98=E4=B8=8D=E8=83=BD=E4=B8=
=BA=E7=A9=BA</div>\
                      </div>\
                      <div class=3D"form-group">\
                        <label for=3D"input-url" class=3D"col-sm-2 =
control-label">=E7=BD=91=E5=9D=80</label>\
                        <div class=3D"col-sm-10">\
                          <input id=3D"input-url" type=3D"text" =
placeholder=3D"" class=3D"url form-control">\
                        </div>\
                      </div>\
                      <div class=3D"form-group">\
                        <label for=3D"input-tag" class=3D"col-sm-2 tag =
control-label">=E6=A0=87=E7=AD=BE</label>\
                        <div class=3D"col-sm-10">\
                          <input id=3D"input-tag" type=3D"text" =
class=3D"form-control tag">\
                        </div>\
                      </div>\
                      <div class=3D"form-group">\
                        <label for=3D"input-description" =
class=3D"description col-sm-2 control-label">=E6=91=98=E8=A6=81</label>\
                        <div class=3D"col-sm-10">\
                          <textarea id=3D"input-description" =
class=3D"form-control description"></textarea>\
                        </div>\
                      </div>\
                      <div class=3D"form-group">\
                        <div class=3D"col-sm-offset-2 col-sm-10 ft">\
                          <div class=3D"col-sm-4 pull-left">\
                            <div class=3D"checkbox">\
                              <label>\
                                <input type=3D"checkbox" name=3D"share" =
checked=3D"checked" class=3D"share">=E5=85=AC=E5=BC=80\
                              </label>\
                            </div>\
                          </div>\
                          <div class=3D"col-sm-8 pull-right =
favor-btns">\
                            <button type=3D"button" class=3D"cancel btn =
btn-default">=E5=8F=96=E6=B6=88</button>\
                            <button type=3D"submit" class=3D"submit btn =
btn-primary">=E6=94=B6=E8=97=8F</button>\
                          </div>\
                        </div>\
                      </div>\
                    </form>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"notify">\
                <div style=3D"display:none" class=3D"number"></div>\
                <div style=3D"display:none" =
class=3D"icon-hasnotes-sm"></div>\
                <div id=3D"header_notice_num"></div>\
                <div class=3D"icon on-notify-icon">\
                  <div class=3D"wrap">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <div id=3D"note1" class=3D"csdn_note">\
                      <div class=3D"box"></div>\
                    </div>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"ugc">\
                <div class=3D"icon on-ugc-icon">\
                  <div class=3D"wrap clearfix">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <dl>\
                      <dt><a =
href=3D"http://geek.csdn.net/news/expert?ref=3Dtoolbar" =
target=3D"_blank" class=3D"p-news clearfix" style=3D"display:none;"><em =
class=3D"icon"></em><span>=E5=88=86=E4=BA=AB=E8=B5=84=E8=AE=AF</span></a>=
</dt>\
                      <dt style=3D"border: none;"><a =
href=3D"http://u.download.csdn.net/upload?ref=3Dtoolbar" =
target=3D"_blank" class=3D"p-doc clearfix"><em =
class=3D"icon"></em><span>=E4=BC=A0PPT/=E6=96=87=E6=A1=A3</span></a></dt>=
\
                      <dt><a =
href=3D"http://bbs.csdn.net/topics/new?ref=3Dtoolbar" target=3D"_blank" =
class=3D"p-ask clearfix"><em =
class=3D"icon"></em><span>=E6=8F=90=E9=97=AE=E9=A2=98</span></a></dt>\
                      <dt><a =
href=3D"http://write.blog.csdn.net/postedit?ref=3Dtoolbar" =
target=3D"_blank" class=3D"p-blog clearfix"><em =
class=3D"icon"></em><span>=E5=86=99=E5=8D=9A=E5=AE=A2</span></a></dt>\
                      <dt><a =
href=3D"http://u.download.csdn.net/upload?ref=3Dtoolbar" =
target=3D"_blank" class=3D"p-src clearfix"><em =
class=3D"icon"></em><span>=E4=BC=A0=E8=B5=84=E6=BA=90</span></a></dt>\
                      <dt><a =
href=3D"https://code.csdn.net/projects/new?ref=3Dtoolbar" =
target=3D"_blank" class=3D"c-obj clearfix"><em =
class=3D"icon"></em><span>=E5=88=9B=E5=BB=BA=E9=A1=B9=E7=9B=AE</span></a>=
</dt>\
                      <dt><a =
href=3D"https://code.csdn.net/snippets/new?ref=3Dtoolbar" =
target=3D"_blank" class=3D"c-code clearfix"><em =
class=3D"icon"></em><span>=E5=88=9B=E5=BB=BA=E4=BB=A3=E7=A0=81=E7=89=87</=
span></a></dt>\
                    </dl>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"profile">\
                <div class=3D"icon on-profile-icon"><img =
src=3D"'+currUser.avatar+'" class=3D"curr-icon-img">\
                  <div class=3D"wrap clearfix">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                    <div class=3D"bd">\
                      <dl class=3D"clearfix">\
                        <dt class=3D"pull-left img"><a target=3D"_blank" =
href=3D"http://my.csdn.net?ref=3Dtoolbar" class=3D"avatar"><img =
src=3D"'+currUser.avatar+'"></a></dt>\
                        <dd class=3D"info" style=3D"border: none;"><a =
target=3D"_blank" href=3D"http://my.csdn.net?ref=3Dtoolbar" =
class=3D"nickname">'+currUser.userNick+'</a><span =
class=3D"dec">'+currUser.desc+'</span></dd>\
                      </dl>\
                    </div>\
                    <div class=3D"ft clearfix"><a target=3D"_blank" =
href=3D"http://my.csdn.net/my/account/changepwd?ref=3Dtoolbar" =
class=3D"pull-left"><span =
class=3D"icon-cog"></span>=E5=B8=90=E5=8F=B7=E8=AE=BE=E7=BD=AE</a><a =
href=3D"https://passport.csdn.net/account/logout?ref=3Dtoolbar"  =
target=3D"_top" class=3D"pull-left" style=3D"margin-left:132px; =
width:18px; height:27px; white-space:nowrap; overflow:hidden;"><span =
class=3D"icon-signout"></span><span =
class=3D"out">=E9=80=80=E5=87=BA</span></a></div>\
                  </div>\
                </div>\
              </li>\
              <li class=3D"apps">\
                <div id=3D"chasnew123" class=3D"hasnew"></div>\
                <div id=3D"cappsarea123" class=3D"icon on-apps-icon">\
                  <div class=3D"wrap clearfix">\
                    <div class=3D"curr-icon-wrap">\
                      <div class=3D"curr-icon"></div>\
                    </div>\
                  <div class=3D"detail">\
                    <dl>\
                      <dt>\
                        <h5>=E7=A4=BE=E5=8C=BA</h5>\
                      </dt>\
                      <dd> <a =
href=3D"http://blog.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E5=8D=9A=E5=AE=A2</a></dd>\
                      <dd> <a href=3D"http://bbs.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E8=AE=BA=E5=9D=9B</a></dd>\
                      <dd> <a =
href=3D"http://download.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E4=B8=8B=E8=BD=BD</a></dd>\
                      <dd> <a href=3D"http://lib.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E7=9F=A5=E8=AF=86=E5=BA=93</a></dd>\
                      <dd><a href=3D"http://ask.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E6=8A=80=E6=9C=AF=E9=97=AE=E7=AD=94</a></dd>\
                      <dd><a href=3D"http://geek.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E6=9E=81=E5=AE=A2=E5=A4=B4=E6=9D=A1</a></dd>\
                      <dd style=3D"display:none"> <a =
href=3D"http://hero.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E8=8B=B1=E9=9B=84=E4=BC=9A</a></dd>\
                    </dl>\
                  </div>\
                  <div class=3D"detail">\
                    <dl>\
                      <dt>\
                        <h5>=E6=9C=8D=E5=8A=A1</h5>\
                      </dt>\
                      <dd style=3D"display:none"> <a =
href=3D"http://job.csdn.net?ref=3Dtoolbar" target=3D"_blank">JOB<img =
src=3D"http://c.csdnimg.cn/public/common/toolbar/images/new.gif" =
style=3D"display: none; margin-top: -26px; width: 23px;"></a></dd>\
                      <dd> <a href=3D"http://edu.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E5=AD=A6=E9=99=A2<img =
src=3D"http://c.csdnimg.cn/public/common/toolbar/images/new.gif" =
style=3D"display: none; margin-top: -26px; width: 23px;"></a></dd>\
                      <dd> <a =
href=3D"https://code.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">CODE</a></dd>\
                      <dd> <a =
href=3D"http://huiyi.csdn.net/?ref=3Dtoolbar" =
target=3D"_blank">=E6=B4=BB=E5=8A=A8</a></dd>\
                      <dd> <a href=3D"http://www.csto.com?ref=3Dtoolbar" =
target=3D"_blank">CSTO</a></dd>\
                      <dd> <a =
href=3D"http://mall.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">C=E5=B8=81=E5=85=91=E6=8D=A2<img =
src=3D"http://c.csdnimg.cn/public/common/toolbar/images/new.gif" =
style=3D"display: none; margin-top: -26px; width: 23px;"></a></dd>\
                    </dl>\
                  </div>\
                  <div class=3D"detail last">\
                    <dl>\
                      <dt>\
                        <h5>=E4=BF=B1=E4=B9=90=E9=83=A8</h5>\
                      </dt>\
                      <dd> <a href=3D"http://cto.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">CTO=E4=BF=B1=E4=B9=90=E9=83=A8</a></dd>\
                      <dd> <a =
href=3D"http://student.csdn.net?ref=3Dtoolbar" =
target=3D"_blank">=E9=AB=98=E6=A0=A1=E4=BF=B1=E4=B9=90=E9=83=A8</a></dd>\=

                    </dl>\
                  </div>\
                </div>\
              </div>\
            </li>\
            </ul>\
          </div>\
        </div>\
    </div>';
  $(document.body).append($(tpl));
  $("#chasnew123").hide();
  //var newTag =3D true;
  //if (newTag) {
  //  var hasNew =3D getCookie("csdn_has_new_product");
  //  if (hasNew =3D=3D "2")
  //    $("#chasnew123").hide();
  //  else {
  //    $("#cappsarea123").one("mouseover", function () {
  //      setCookie("csdn_has_new_product", "2");
  //      $("#chasnew123").hide();
  //    });
  //  }
  //}
})();

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://download.csdn.net/js/jquery.cookie.js

/*!=0A=
 * jQuery Cookie Plugin v1.4.0=0A=
 * https://github.com/carhartl/jquery-cookie=0A=
 *=0A=
 * Copyright 2013 Klaus Hartl=0A=
 * Released under the MIT license=0A=
 */=0A=
(function (factory) {=0A=
	if (typeof define =3D=3D=3D 'function' && define.amd) {=0A=
		// AMD. Register as anonymous module.=0A=
		define(['jquery'], factory);=0A=
	} else {=0A=
		// Browser globals.=0A=
		factory(jQuery);=0A=
	}=0A=
}(function ($) {=0A=
=0A=
	var pluses =3D /\+/g;=0A=
=0A=
	function encode(s) {=0A=
		return config.raw ? s : encodeURIComponent(s);=0A=
	}=0A=
=0A=
	function decode(s) {=0A=
		return config.raw ? s : decodeURIComponent(s);=0A=
	}=0A=
=0A=
	function stringifyCookieValue(value) {=0A=
		return encode(config.json ? JSON.stringify(value) : String(value));=0A=
	}=0A=
=0A=
	function parseCookieValue(s) {=0A=
		if (s.indexOf('"') =3D=3D=3D 0) {=0A=
			// This is a quoted cookie as according to RFC2068, unescape...=0A=
			s =3D s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');=0A=
		}=0A=
=0A=
		try {=0A=
			// Replace server-side written pluses with spaces.=0A=
			// If we can't decode the cookie, ignore it, it's unusable.=0A=
			s =3D decodeURIComponent(s.replace(pluses, ' '));=0A=
		} catch(e) {=0A=
			return;=0A=
		}=0A=
=0A=
		try {=0A=
			// If we can't parse the cookie, ignore it, it's unusable.=0A=
			return config.json ? JSON.parse(s) : s;=0A=
		} catch(e) {}=0A=
	}=0A=
=0A=
	function read(s, converter) {=0A=
		var value =3D config.raw ? s : parseCookieValue(s);=0A=
		return $.isFunction(converter) ? converter(value) : value;=0A=
	}=0A=
=0A=
	var config =3D $.cookie =3D function (key, value, options) {=0A=
=0A=
		// Write=0A=
		if (value !=3D=3D undefined && !$.isFunction(value)) {=0A=
			options =3D $.extend({}, config.defaults, options);=0A=
=0A=
			if (typeof options.expires =3D=3D=3D 'number') {=0A=
				var days =3D options.expires, t =3D options.expires =3D new Date();=0A=
				t.setDate(t.getDate() + days);=0A=
			}=0A=
=0A=
			return (document.cookie =3D [=0A=
				encode(key), '=3D', stringifyCookieValue(value),=0A=
				options.expires ? '; expires=3D' + options.expires.toUTCString() : =
'', // use expires attribute, max-age is not supported by IE=0A=
				options.path    ? '; path=3D' + options.path : '',=0A=
				options.domain  ? '; domain=3D' + options.domain : '',=0A=
				options.secure  ? '; secure' : ''=0A=
			].join(''));=0A=
		}=0A=
=0A=
		// Read=0A=
=0A=
		var result =3D key ? undefined : {};=0A=
=0A=
		// To prevent the for loop in the first place assign an empty array=0A=
		// in case there are no cookies at all. Also prevents odd result when=0A=
		// calling $.cookie().=0A=
		var cookies =3D document.cookie ? document.cookie.split('; ') : [];=0A=
=0A=
		for (var i =3D 0, l =3D cookies.length; i < l; i++) {=0A=
			var parts =3D cookies[i].split('=3D');=0A=
			var name =3D decode(parts.shift());=0A=
			var cookie =3D parts.join('=3D');=0A=
=0A=
			if (key && key =3D=3D=3D name) {=0A=
				// If second argument (value) is a function it's a converter...=0A=
				result =3D read(cookie, value);=0A=
				break;=0A=
			}=0A=
=0A=
			// Prevent storing a cookie that we couldn't decode.=0A=
			if (!key && (cookie =3D read(cookie)) !=3D=3D undefined) {=0A=
				result[name] =3D cookie;=0A=
			}=0A=
		}=0A=
=0A=
		return result;=0A=
	};=0A=
=0A=
	config.defaults =3D {};=0A=
=0A=
	$.removeCookie =3D function (key, options) {=0A=
		if ($.cookie(key) !=3D=3D undefined) {=0A=
			// Must not alter options, thus extending a fresh object...=0A=
			$.cookie(key, '', $.extend({}, options, { expires: -1 }));=0A=
			return true;=0A=
		}=0A=
		return false;=0A=
	};=0A=
=0A=
}));=0A=

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/rabbit/search-service/main.js

/*
=E6=90=9C=E7=B4=A2=E6=9C=8D=E5=8A=A1 =
https://code.csdn.net/CSDN_Dev/csdn_searchservice_fe

=E4=BE=9D=E8=B5=96jQuery=EF=BC=8C=E4=BD=BF=E7=94=A8=E7=A4=BA=E4=BE=8B(=E9=
=99=A4=E9=9D=9E=E6=98=8E=E7=A1=AE=E8=A6=81=E6=B1=82=E5=BF=85=E5=A1=AB=EF=BC=
=8C=E9=83=BD=E6=98=AF=E5=8F=AF=E9=80=89=E5=8F=82=E6=95=B0=EF=BC=9B=E9=99=A4=
=E9=9D=9E=E6=98=8E=E7=A1=AE=E8=AF=B4=E6=98=8E=E9=BB=98=E8=AE=A4=E5=80=BC=EF=
=BC=8C=E9=BB=98=E8=AE=A4=E5=80=BC=E5=B0=B1=E6=98=AF=E7=A4=BA=E4=BE=8B=E4=B8=
=AD=E7=9A=84=E5=80=BC):

  <script type=3D"text/javascript" =
src=3D"http://csdnimg.cn/rabbit/search-service/main.js" =
charset=3D"utf-8"></script>
  <script type=3D"text/javascript">
    searchService({
      index: 'blog',
        // =
=E5=BF=85=E5=A1=AB=EF=BC=8C=E4=BD=BF=E7=94=A8=E7=9A=84=E7=B4=A2=E5=BC=95=E5=
=90=8D=E7=A7=B0=EF=BC=8C=E9=BB=98=E8=AE=A4=E5=80=BC=E6=98=AF''
      appendTo: '#output',
        // =
=E6=90=9C=E7=B4=A2=E7=BB=93=E6=9E=9C=E6=98=BE=E7=A4=BA=E5=88=B0=E6=8C=87=E5=
=AE=9A=E5=85=83=E7=B4=A0=E9=87=8C=E9=9D=A2=EF=BC=8C=E5=A6=82=E6=9E=9C=E6=83=
=B3=E6=89=8B=E5=B7=A5=E5=A4=84=E7=90=86=E5=8F=AF=E4=BB=A5=E5=BF=BD=E7=95=A5=
=EF=BC=8C=E9=BB=98=E8=AE=A4=E5=80=BC=E6=98=AF''
      query: {text: {'title,body':'java'}},
        // =
=E5=BF=85=E5=A1=AB=EF=BC=8C=E6=9F=A5=E8=AF=A2=E6=9D=A1=E4=BB=B6=EF=BC=8C=E8=
=AF=A6=E7=BB=86=E8=AF=B7=E5=8F=82=E9=98=85=E6=90=9C=E7=B4=A2=E7=B3=BB=E7=BB=
=9FAPI
      tmpl: '<li><a href=3D"#{ object.url }" title=3D"#{ object.title =
}">#{ object.title }</a></li>',
        // =
=E6=98=BE=E7=A4=BA=E5=88=B0appendTo=E7=9A=84=E5=85=83=E7=B4=A0=E6=A8=A1=E6=
=9D=BF=EF=BC=8C=E5=8F=AF=E4=BD=BF=E7=94=A8=E7=9A=84=E6=A8=A1=E6=9D=BF=E6=A0=
=87=E7=AD=BE=E4=B8=BB=E8=A6=81=E7=94=B1=E8=BF=94=E5=9B=9E=E7=9A=84=E6=95=B0=
=E6=8D=AE hits =
=E6=95=B0=E6=8D=AE=E5=85=83=E7=B4=A0=E7=9A=84=E7=BB=93=E6=9E=84=E5=86=B3=E5=
=AE=9A=EF=BC=9B
        // =
=E9=99=A4=E6=AD=A4=E4=B9=8B=E5=A4=96=E8=BF=98=E5=8F=AF=E4=BB=A5=E4=BD=BF=E7=
=94=A8 item =E5=92=8C =
data=EF=BC=8C=E5=88=86=E5=88=AB=E4=BB=A3=E8=A1=A8=E6=AF=8F=E4=B8=80=E6=9D=
=A1=E6=95=B0=E6=8D=AE=E7=9A=84=E5=8E=9F=E5=A7=8B=E7=BB=93=E6=9E=84=E5=92=8C=
=E8=BF=94=E5=9B=9E=E7=9A=84=E6=95=B4=E4=B8=AA=E6=95=B0=E6=8D=AE
        // =
=E4=B9=9F=E5=8F=AF=E4=BB=A5=E8=AE=BF=E9=97=AEwindow=E4=B8=8B=E7=9A=84=E5=8F=
=98=E9=87=8F
      from: 0,
        // =
=E8=A6=81=E4=BB=8E=E6=90=9C=E7=B4=A2=E7=BB=93=E6=9E=9C=E4=B8=AD=E7=AC=AC=E5=
=A4=9A=E5=B0=91=E6=9D=A1=E5=BC=80=E5=A7=8B=E8=8E=B7=E5=8F=96=E6=95=B0=E6=8D=
=AE
      size: 6,
        // =
=E8=A6=81=E4=BB=8E=E6=90=9C=E7=B4=A2=E7=BB=93=E6=9E=9C=E4=B8=AD=E8=8E=B7=E5=
=8F=96=E5=A4=9A=E5=B0=91=E6=9D=A1=E6=95=B0=E6=8D=AE
      filter: =
{"range":{"created_at":{"from":2010072320,"to":2010072330}}},
        // =
=E9=BB=98=E8=AE=A4=E4=B8=8D=E4=BC=A0=E9=80=92=E8=BF=99=E4=B8=AA=E5=8F=82=E6=
=95=B0=EF=BC=8C=E8=BF=87=E6=BB=A4=E6=9D=A1=E4=BB=B6=EF=BC=8C=E8=AF=A6=E7=BB=
=86=E8=AF=B7=E5=8F=82=E9=98=85=E6=90=9C=E7=B4=A2=E7=B3=BB=E7=BB=9FAPI
      sort: { 'updated_at': 'desc' },
        // =
=E9=BB=98=E8=AE=A4=E4=B8=8D=E4=BC=A0=E9=80=92=E8=BF=99=E4=B8=AA=E5=8F=82=E6=
=95=B0=EF=BC=8C=E6=8E=92=E5=BA=8F=E5=AD=97=E6=AE=B5, =
=E8=AF=A6=E7=BB=86=E8=AF=B7=E5=8F=82=E9=98=85=E6=90=9C=E7=B4=A2=E7=B3=BB=E7=
=BB=9FAPI
      fields: ['title', 'url'],
        // =
=E6=9C=80=E7=BB=88=E6=98=BE=E7=A4=BA=E7=9A=84=E5=AD=97=E6=AE=B5=EF=BC=8C=E8=
=AF=A6=E7=BB=86=E8=AF=B7=E5=8F=82=E9=98=85=E6=90=9C=E7=B4=A2=E7=B3=BB=E7=BB=
=9FAPI
      token: 'search_js_dkuyqthzbajmncbsb_token'
        // =E8=AE=BF=E9=97=AE=E6=8E=A7=E5=88=B6=E6=A0=87=E8=AF=86
    }, function(err, data, options){
      // =
=E5=A4=84=E7=90=86=E5=AE=8C=E6=88=90=E6=97=B6=E7=9A=84=E5=9B=9E=E8=B0=83
      // =
err=E6=98=AF=E9=94=99=E8=AF=AF=E4=BF=A1=E6=81=AF=EF=BC=8C=E5=A6=82=E6=9E=9C=
=E6=97=A0=E9=94=99=E5=B0=86=E4=B8=BAnull
      // =
data=E6=98=AF=E6=90=9C=E7=B4=A2=E5=88=B0=E7=9A=84=E5=8E=9F=E5=A7=8B=E6=95=
=B0=E6=8D=AE
      // =
options=E6=98=AF=E4=B8=8A=E9=9D=A2=E8=B0=83=E7=94=A8=E6=9C=80=E7=BB=88=E4=
=BD=BF=E7=94=A8=E7=9A=84=E5=8F=82=E6=95=B0
    });
  </script>

 */
;(function(definition, undefined){
  var global =3D this, exports =3D {}, $ =3D global.jQuery;
  definition(global, exports, $);

  if(global.csdn =3D=3D=3D undefined){
    global.csdn =3D exports;
  } else {
    $.extend(global.csdn, exports);
  }
  $.extend(global, exports);

}(function(global, exports, $, undefined){
  document.domain =3D 'csdn.net';

  var searchServiceReady =3D false
    , searchArgs =3D []
    , searchService =3D exports.searchService =3D function(){
      var args =3D [].slice.call(arguments, 0);
      if(searchServiceReady){
        searchServiceFunc.apply(null, args);
      }else{
        searchArgs.push(args);
      }
    }
    , render =3D searchService.render =3D function(tmpl, item, data){
      return tmpl.replace(/#\{ +([^}]+) +\}/gm, function($0, $1){
        var fieldN =3D $1;
        if(eval('item.' + $1) !=3D=3D undefined) $1 =3D 'item.' + $1;
        //return eval($1);
        var val =3D eval($1);
        if (fieldN.toLowerCase() =3D=3D "title") {
          var =
reg=3D/[^`~!\$%\^\*\(\)=3D\|\{\}':;',\\\[\\\]\.<>\/\?~=EF=BC=81=EF=BF=A5%=
=E2=80=A6=E2=80=A6*\=EF=BC=88\=EF=BC=89=E2=80=94=E2=80=94\|\{\}=E3=80=90=E3=
=80=91=E2=80=98=EF=BC=9B=EF=BC=9A=E2=80=9D=E2=80=9C=E2=80=99=E3=80=82=EF=BC=
=8C=E3=80=81=EF=BC=9F]/g;
          var titleFilter =3D val.match(reg).join( '' );
          val =3D titleFilter;
        }
        return val;
      });
    }
    , ajaxProxyCaches =3D {}
    , ajaxProxy =3D searchService.ajaxProxy =3D function(proxyUrl, =
opts){
      var c =3D ajaxProxyCaches[proxyUrl];
      if(c =3D=3D=3D undefined){
        c =3D ajaxProxyCaches[proxyUrl] =3D [];
        var func =3D arguments.callee;
        $('<iframe src=3D"' + proxyUrl + '" =
style=3D"display:none">').load(function(){
          c.contentWindow =3D this.contentWindow;
          func(proxyUrl, opts);
        }).prependTo('body');
      }else if(c.contentWindow =3D=3D=3D undefined){
        c.push(opts);
      }else{
        do{
          c.contentWindow.jQuery.ajax(opts);
        }while(opts =3D c.shift());
      }
    }
    , trackingAd =3D function(ele){
      if(typeof window.csdn !=3D=3D 'undefined' && typeof =
window.csdn.trackingAd =3D=3D=3D 'function'){
        window.csdn.trackingAd(ele);
      }else{
        $(document).bind('trackingAd-ready', function(){
          trackingAd(ele);
        });
      }
    }
    , searchServiceFunc =3D function(opts, callback){
      var tmpl =3D ( opts.url =3D=3D 'search' ) ? '<li><a href=3D"#{ =
object.url }" title=3D"#{ object.title }">#{ object.title }</a></li>' : =
'<li><a href=3D"#{ url }" title=3D"#{ title }" strategy=3D"#{ strategy =
}">#{ title }</a></li>';
      opts =3D $.extend({
        index: '',
        appendTo: '',
        query: '',
        tmpl: tmpl,
        from: 0,
        size: 6,
        fields: ['title', 'url'],
        token: 'search_js_dkuyqthzbajmncbsb_token',
        render: render
      }, opts);

      if(!opts.index || !opts.query) return;

      var postData =3D {};
      if ( opts.url =3D=3D 'recommend' )
      {
        var userId =3D $.cookie( 'UserName' ) || 'fake_userId';
        var uuid =3D $.cookie( 'uuid_tt_dd' ) || 'fake_uuid';
        var reg =3D /(\d+)$/;
        var href =3D window.location.href;
        var downId =3D reg.test( href ) ? RegExp.$1 : '';
        // var query =3D $( '.info' ).find( 'h1' ).attr( 'title' ) || $( =
'.info h1' ).text();

        postData =3D {
          userId: userId,
          size: 10,
          his: opts.his + ':' + downId,
          client: opts.client || 'download_cf_enhance',
          query: opts.query,
          cid: uuid
        };

        $.ajax( {
          type: 'GET',
          url: 'http://recdm.csdn.net/getRecommendList.html',
          data: postData,
          dataType: 'jsonp',
          jsonp: 'jsonp',
          success: function ( data ) {
            var appendTo =3D opts.appendTo, tmpl =3D opts.tmpl;
            if(data =3D=3D=3D null || data.ok =3D=3D=3D false && =
data.message){
              var msg =3D data !=3D=3D null ? data.message : =
'=E8=AF=B7=E6=B1=82=E5=A4=B1=E8=B4=A5';
              if(appendTo){
                $(appendTo).append(render('<div =
class=3D"search-error">#{ item }</div>', msg));
              }
              if(typeof callback =3D=3D=3D 'function') {
                callback(msg, data, opts);
              }
            }else if( data.length > 0 ){
              if( appendTo ){
                $(appendTo).append($.map(data, function(i){
                  return opts.render(tmpl, i, data);
                }).join(''));
                trackingAd(appendTo);
              }
              if(typeof callback =3D=3D=3D 'function') {
                callback(null, data, opts);
              }
            }
          }
        } );
      }
      else if ( opts.url =3D=3D 'search' )
      {
        $.map(['query', 'from', 'size', 'filter', 'sort', 'fields'], =
function(k){
          if(opts.hasOwnProperty(k)){
            postData[k] =3D opts[k];
          }
        });
        ajaxProxy('http://search.api.csdn.net/proxy.html', {
          type: 'POST',
          url: 'http://search.api.csdn.net/' + opts.index + =
'/csdn/_search',
          data: JSON.stringify(postData),
          dataType: 'json',
          headers: {
            'X-ACL-TOKEN': opts.token
          },
          success: function(data){
            var appendTo =3D opts.appendTo, tmpl =3D opts.tmpl;
            if(data =3D=3D=3D null || data.ok =3D=3D=3D false && =
data.message){
              var msg =3D data !=3D=3D null ? data.message : =
'=E8=AF=B7=E6=B1=82=E5=A4=B1=E8=B4=A5';
              if(appendTo){
                $(appendTo).append(render('<div =
class=3D"search-error">#{ item }</div>', msg));
              }
              if(typeof callback =3D=3D=3D 'function') {
                callback(msg, data, opts);
              }
            }else if(data.hits){
              if(appendTo){
                $(appendTo).append($.map(data.hits, function(i){
                  return opts.render(tmpl, i, data);
                }).join(''));
                trackingAd(appendTo);
              }
              if(typeof callback =3D=3D=3D 'function') {
                callback(null, data, opts);
              }
            }
          }
        });
      }
    }
    ;

  if(global.JSON =3D=3D=3D undefined){
    $.getScript('http://csdnimg.cn/rabbit/search-service/json2.js', =
function(){
      searchServiceReady =3D true;
      var args;
      while(args =3D searchArgs.shift()){
        searchService.apply(null, args);
      }
    });
  }else{
    searchServiceReady =3D true;
  }

}));
------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/public/res/bower-libs/MathJax/MathJax.js?config=TeX-AMS_HTML

/*=0A=
 *  /MathJax.js=0A=
 *=0A=
 *  Copyright (c) 2009-2014 The MathJax Consortium=0A=
 *=0A=
 *  Licensed under the Apache License, Version 2.0 (the "License");=0A=
 *  you may not use this file except in compliance with the License.=0A=
 *  You may obtain a copy of the License at=0A=
 *=0A=
 *      http://www.apache.org/licenses/LICENSE-2.0=0A=
 *=0A=
 *  Unless required by applicable law or agreed to in writing, software=0A=
 *  distributed under the License is distributed on an "AS IS" BASIS,=0A=
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or =
implied.=0A=
 *  See the License for the specific language governing permissions and=0A=
 *  limitations under the License.=0A=
 */=0A=
=0A=
if(document.getElementById&&document.childNodes&&document.createElement){=
if(!(window.MathJax&&MathJax.Hub)){if(window.MathJax){window.MathJax=3D{A=
uthorConfig:window.MathJax}}else{window.MathJax=3D{}}MathJax.isPacked=3Dt=
rue;MathJax.version=3D"2.4.0";MathJax.fileversion=3D"2.4.0";MathJax.cdnVe=
rsion=3D"2.4-beta-2";MathJax.cdnFileVersions=3D{};(function(d){var =
b=3Dwindow[d];if(!b){b=3Dwindow[d]=3D{}}var e=3D[];var =
c=3Dfunction(f){var g=3Df.constructor;if(!g){g=3Dfunction(){}}for(var h =
in f){if(h!=3D=3D"constructor"&&f.hasOwnProperty(h)){g[h]=3Df[h]}}return =
g};var a=3Dfunction(){return function(){return =
arguments.callee.Init.call(this,arguments)}};b.Object=3Dc({constructor:a(=
),Subclass:function(f,h){var =
g=3Da();g.SUPER=3Dthis;g.Init=3Dthis.Init;g.Subclass=3Dthis.Subclass;g.Au=
gment=3Dthis.Augment;g.protoFunction=3Dthis.protoFunction;g.can=3Dthis.ca=
n;g.has=3Dthis.has;g.isa=3Dthis.isa;g.prototype=3Dnew =
this(e);g.prototype.constructor=3Dg;g.Augment(f,h);return =
g},Init:function(f){var =
g=3Dthis;if(f.length=3D=3D=3D1&&f[0]=3D=3D=3De){return g}if(!(g =
instanceof f.callee)){g=3Dnew f.callee(e)}return =
g.Init.apply(g,f)||g},Augment:function(f,g){var h;if(f!=3Dnull){for(h in =
f){if(f.hasOwnProperty(h)){this.protoFunction(h,f[h])}}if(f.toString!=3D=3D=
this.prototype.toString&&f.toString!=3D=3D{}.toString){this.protoFunction=
("toString",f.toString)}}if(g!=3Dnull){for(h in =
g){if(g.hasOwnProperty(h)){this[h]=3Dg[h]}}}return =
this},protoFunction:function(g,f){this.prototype[g]=3Df;if(typeof =
f=3D=3D=3D"function"){f.SUPER=3Dthis.SUPER.prototype}},prototype:{Init:fu=
nction(){},SUPER:function(f){return =
f.callee.SUPER},can:function(f){return =
typeof(this[f])=3D=3D=3D"function"},has:function(f){return =
typeof(this[f])!=3D=3D"undefined"},isa:function(f){return(f instanceof =
Object)&&(this instanceof f)}},can:function(f){return =
this.prototype.can.call(this,f)},has:function(f){return =
this.prototype.has.call(this,f)},isa:function(g){var =
f=3Dthis;while(f){if(f=3D=3D=3Dg){return true}else{f=3Df.SUPER}}return =
false},SimpleSUPER:c({constructor:function(f){return =
this.SimpleSUPER.define(f)},define:function(f){var =
h=3D{};if(f!=3Dnull){for(var g in =
f){if(f.hasOwnProperty(g)){h[g]=3Dthis.wrap(g,f[g])}}if(f.toString!=3D=3D=
this.prototype.toString&&f.toString!=3D=3D{}.toString){h.toString=3Dthis.=
wrap("toString",f.toString)}}return =
h},wrap:function(i,h){if(typeof(h)!=3D=3D"function"||!h.toString().match(=
/\.\s*SUPER\s*\(/)){return h}var =
g=3Dfunction(){this.SUPER=3Dg.SUPER[i];try{var =
f=3Dh.apply(this,arguments)}catch(j){delete this.SUPER;throw j}delete =
this.SUPER;return f};g.toString=3Dfunction(){return =
h.toString.apply(h,arguments)};return =
g}})})})("MathJax");(function(BASENAME){var =
BASE=3Dwindow[BASENAME];if(!BASE){BASE=3Dwindow[BASENAME]=3D{}}var =
CALLBACK=3Dfunction(data){var cb=3Dfunction(){return =
arguments.callee.execute.apply(arguments.callee,arguments)};for(var id =
in =
CALLBACK.prototype){if(CALLBACK.prototype.hasOwnProperty(id)){if(typeof(d=
ata[id])!=3D=3D"undefined"){cb[id]=3Ddata[id]}else{cb[id]=3DCALLBACK.prot=
otype[id]}}}cb.toString=3DCALLBACK.prototype.toString;return =
cb};CALLBACK.prototype=3D{isCallback:true,hook:function(){},data:[],objec=
t:window,execute:function(){if(!this.called||this.autoReset){this.called=3D=
!this.autoReset;return =
this.hook.apply(this.object,this.data.concat([].slice.call(arguments,0)))=
}},reset:function(){delete this.called},toString:function(){return =
this.hook.toString.apply(this.hook,arguments)}};var =
ISCALLBACK=3Dfunction(f){return(typeof(f)=3D=3D=3D"function"&&f.isCallbac=
k)};var EVAL=3Dfunction(code){return eval.call(window,code)};var =
TESTEVAL=3Dfunction(){EVAL("var __TeSt_VaR__ =3D =
1");if(window.__TeSt_VaR__){try{delete =
window.__TeSt_VaR__}catch(error){window.__TeSt_VaR__=3Dnull}}else{if(wind=
ow.execScript){EVAL=3Dfunction(code){BASE.__code=3Dcode;code=3D"try =
{"+BASENAME+".__result =3D eval("+BASENAME+".__code)} catch(err) =
{"+BASENAME+".__result =3D err}";window.execScript(code);var =
result=3DBASE.__result;delete BASE.__result;delete BASE.__code;if(result =
instanceof Error){throw result}return =
result}}else{EVAL=3Dfunction(code){BASE.__code=3Dcode;code=3D"try =
{"+BASENAME+".__result =3D eval("+BASENAME+".__code)} catch(err) =
{"+BASENAME+".__result =3D err}";var =
head=3D(document.getElementsByTagName("head"))[0];if(!head){head=3Ddocume=
nt.body}var =
script=3Ddocument.createElement("script");script.appendChild(document.cre=
ateTextNode(code));head.appendChild(script);head.removeChild(script);var =
result=3DBASE.__result;delete BASE.__result;delete BASE.__code;if(result =
instanceof Error){throw result}return result}}}TESTEVAL=3Dnull};var =
USING=3Dfunction(args,i){if(arguments.length>1){if(arguments.length=3D=3D=
=3D2&&!(typeof arguments[0]=3D=3D=3D"function")&&arguments[0] instanceof =
Object&&typeof =
arguments[1]=3D=3D=3D"number"){args=3D[].slice.call(args,i)}else{args=3D[=
].slice.call(arguments,0)}}if(args instanceof =
Array&&args.length=3D=3D=3D1){args=3Dargs[0]}if(typeof =
args=3D=3D=3D"function"){if(args.execute=3D=3D=3DCALLBACK.prototype.execu=
te){return args}return CALLBACK({hook:args})}else{if(args instanceof =
Array){if(typeof(args[0])=3D=3D=3D"string"&&args[1] instanceof =
Object&&typeof args[1][args[0]]=3D=3D=3D"function"){return =
CALLBACK({hook:args[1][args[0]],object:args[1],data:args.slice(2)})}else{=
if(typeof args[0]=3D=3D=3D"function"){return =
CALLBACK({hook:args[0],data:args.slice(1)})}else{if(typeof =
args[1]=3D=3D=3D"function"){return =
CALLBACK({hook:args[1],object:args[0],data:args.slice(2)})}}}}else{if(typ=
eof(args)=3D=3D=3D"string"){if(TESTEVAL){TESTEVAL()}return =
CALLBACK({hook:EVAL,data:[args]})}else{if(args instanceof Object){return =
CALLBACK(args)}else{if(typeof(args)=3D=3D=3D"undefined"){return =
CALLBACK({})}}}}}throw Error("Can't make callback from given data")};var =
DELAY=3Dfunction(time,callback){callback=3DUSING(callback);callback.timeo=
ut=3DsetTimeout(callback,time);return callback};var =
WAITFOR=3Dfunction(callback,signal){callback=3DUSING(callback);if(!callba=
ck.called){WAITSIGNAL(callback,signal);signal.pending++}};var =
WAITEXECUTE=3Dfunction(){var signals=3Dthis.signal;delete =
this.signal;this.execute=3Dthis.oldExecute;delete this.oldExecute;var =
result=3Dthis.execute.apply(this,arguments);if(ISCALLBACK(result)&&!resul=
t.called){WAITSIGNAL(result,signals)}else{for(var =
i=3D0,m=3Dsignals.length;i<m;i++){signals[i].pending--;if(signals[i].pend=
ing<=3D0){signals[i].call()}}}};var =
WAITSIGNAL=3Dfunction(callback,signals){if(!(signals instanceof =
Array)){signals=3D[signals]}if(!callback.signal){callback.oldExecute=3Dca=
llback.execute;callback.execute=3DWAITEXECUTE;callback.signal=3Dsignals}e=
lse{if(signals.length=3D=3D=3D1){callback.signal.push(signals[0])}else{ca=
llback.signal=3Dcallback.signal.concat(signals)}}};var =
AFTER=3Dfunction(callback){callback=3DUSING(callback);callback.pending=3D=
0;for(var =
i=3D1,m=3Darguments.length;i<m;i++){if(arguments[i]){WAITFOR(arguments[i]=
,callback)}}if(callback.pending=3D=3D=3D0){var =
result=3Dcallback();if(ISCALLBACK(result)){callback=3Dresult}}return =
callback};var =
HOOKS=3DMathJax.Object.Subclass({Init:function(reset){this.hooks=3D[];thi=
s.reset=3Dreset},Add:function(hook,priority){if(priority=3D=3Dnull){prior=
ity=3D10}if(!ISCALLBACK(hook)){hook=3DUSING(hook)}hook.priority=3Dpriorit=
y;var =
i=3Dthis.hooks.length;while(i>0&&priority<this.hooks[i-1].priority){i--}t=
his.hooks.splice(i,0,hook);return hook},Remove:function(hook){for(var =
i=3D0,m=3Dthis.hooks.length;i<m;i++){if(this.hooks[i]=3D=3D=3Dhook){this.=
hooks.splice(i,1);return}}},Execute:function(){var =
callbacks=3D[{}];for(var =
i=3D0,m=3Dthis.hooks.length;i<m;i++){if(this.reset){this.hooks[i].reset()=
}var =
result=3Dthis.hooks[i].apply(window,arguments);if(ISCALLBACK(result)&&!re=
sult.called){callbacks.push(result)}}if(callbacks.length=3D=3D=3D1){retur=
n null}if(callbacks.length=3D=3D=3D2){return callbacks[1]}return =
AFTER.apply({},callbacks)}});var =
EXECUTEHOOKS=3Dfunction(hooks,data,reset){if(!hooks){return =
null}if(!(hooks instanceof Array)){hooks=3D[hooks]}if(!(data instanceof =
Array)){data=3D(data=3D=3Dnull?[]:[data])}var =
handler=3DHOOKS(reset);for(var =
i=3D0,m=3Dhooks.length;i<m;i++){handler.Add(hooks[i])}return =
handler.Execute.apply(handler,data)};var =
QUEUE=3DBASE.Object.Subclass({Init:function(){this.pending=3D0;this.runni=
ng=3D0;this.queue=3D[];this.Push.apply(this,arguments)},Push:function(){v=
ar callback;for(var =
i=3D0,m=3Darguments.length;i<m;i++){callback=3DUSING(arguments[i]);if(cal=
lback=3D=3D=3Darguments[i]&&!callback.called){callback=3DUSING(["wait",th=
is,callback])}this.queue.push(callback)}if(!this.running&&!this.pending){=
this.Process()}return =
callback},Process:function(queue){while(!this.running&&!this.pending&&thi=
s.queue.length){var =
callback=3Dthis.queue[0];queue=3Dthis.queue.slice(1);this.queue=3D[];this=
.Suspend();var =
result=3Dcallback();this.Resume();if(queue.length){this.queue=3Dqueue.con=
cat(this.queue)}if(ISCALLBACK(result)&&!result.called){WAITFOR(result,thi=
s)}}},Suspend:function(){this.running++},Resume:function(){if(this.runnin=
g){this.running--}},call:function(){this.Process.apply(this,arguments)},w=
ait:function(callback){return callback}});var =
SIGNAL=3DQUEUE.Subclass({Init:function(name){QUEUE.prototype.Init.call(th=
is);this.name=3Dname;this.posted=3D[];this.listeners=3DHOOKS(true)},Post:=
function(message,callback,forget){callback=3DUSING(callback);if(this.post=
ing||this.pending){this.Push(["Post",this,message,callback,forget])}else{=
this.callback=3Dcallback;callback.reset();if(!forget){this.posted.push(me=
ssage)}this.Suspend();this.posting=3Dtrue;var =
result=3Dthis.listeners.Execute(message);if(ISCALLBACK(result)&&!result.c=
alled){WAITFOR(result,this)}this.Resume();delete =
this.posting;if(!this.pending){this.call()}}return =
callback},Clear:function(callback){callback=3DUSING(callback);if(this.pos=
ting||this.pending){callback=3Dthis.Push(["Clear",this,callback])}else{th=
is.posted=3D[];callback()}return =
callback},call:function(){this.callback(this);this.Process()},Interest:fu=
nction(callback,ignorePast,priority){callback=3DUSING(callback);this.list=
eners.Add(callback,priority);if(!ignorePast){for(var =
i=3D0,m=3Dthis.posted.length;i<m;i++){callback.reset();var =
result=3Dcallback(this.posted[i]);if(ISCALLBACK(result)&&i=3D=3D=3Dthis.p=
osted.length-1){WAITFOR(result,this)}}}return =
callback},NoInterest:function(callback){this.listeners.Remove(callback)},=
MessageHook:function(msg,callback,priority){callback=3DUSING(callback);if=
(!this.hooks){this.hooks=3D{};this.Interest(["ExecuteHooks",this])}if(!th=
is.hooks[msg]){this.hooks[msg]=3DHOOKS(true)}this.hooks[msg].Add(callback=
,priority);for(var =
i=3D0,m=3Dthis.posted.length;i<m;i++){if(this.posted[i]=3D=3Dmsg){callbac=
k.reset();callback(this.posted[i])}}return =
callback},ExecuteHooks:function(msg){var type=3D((msg instanceof =
Array)?msg[0]:msg);if(!this.hooks[type]){return null}return =
this.hooks[type].Execute(msg)}},{signals:{},find:function(name){if(!SIGNA=
L.signals[name]){SIGNAL.signals[name]=3Dnew SIGNAL(name)}return =
SIGNAL.signals[name]}});BASE.Callback=3DBASE.CallBack=3DUSING;BASE.Callba=
ck.Delay=3DDELAY;BASE.Callback.After=3DAFTER;BASE.Callback.Queue=3DQUEUE;=
BASE.Callback.Signal=3DSIGNAL.find;BASE.Callback.Hooks=3DHOOKS;BASE.Callb=
ack.ExecuteHooks=3DEXECUTEHOOKS})("MathJax");(function(e){var =
a=3Dwindow[e];if(!a){a=3Dwindow[e]=3D{}}var =
d=3D(navigator.vendor=3D=3D=3D"Apple Computer, Inc."&&typeof =
navigator.vendorSub=3D=3D=3D"undefined");var g=3D0;var =
h=3Dfunction(i){if(document.styleSheets&&document.styleSheets.length>g){g=
=3Ddocument.styleSheets.length}if(!i){i=3D(document.getElementsByTagName(=
"head"))[0];if(!i){i=3Ddocument.body}}return i};var f=3D[];var =
c=3Dfunction(){for(var =
k=3D0,j=3Df.length;k<j;k++){a.Ajax.head.removeChild(f[k])}f=3D[]};var =
b=3D{};b[e]=3D"";a.Ajax=3D{loaded:{},loading:{},loadHooks:{},timeout:15*1=
000,styleDelay:1,config:{root:"",path:b},STATUS:{OK:1,ERROR:-1},fileURL:f=
unction(j){var i=3Dj.match(/^\[([-._a-z0-9]+)\]/i);if(i&&i[1] in =
b){j=3D(b[i[1]]||this.config.root)+j.substr(i[1].length+2)}return =
j},fileName:function(j){var =
i=3Dthis.config.root;if(j.substr(0,i.length)=3D=3D=3Di){j=3D"["+e+"]"+j.s=
ubstr(i.length)}else{for(var k in =
b){if(b.hasOwnProperty(k)&&b[k]){if(j.substr(0,b[k].length)=3D=3D=3Db[k])=
{j=3D"["+k+"]"+j.substr(b[k].length);break}}}}return =
j},fileRev:function(j){var =
i=3Da.cdnFileVersions[name]||a.cdnVersion;if(i){i=3D"?rev=3D"+i}return =
i},urlRev:function(i){return =
this.fileURL(i)+this.fileRev(i)},Require:function(k,n){n=3Da.Callback(n);=
var l;if(k instanceof Object){for(var j in =
k){if(k.hasOwnProperty(j)){l=3Dj.toUpperCase();k=3Dk[j]}}}else{l=3Dk.spli=
t(/\./).pop().toUpperCase()}k=3Dthis.fileURL(k);if(this.loaded[k]){n(this=
.loaded[k])}else{var m=3D{};m[l]=3Dk;this.Load(m,n)}return =
n},Load:function(k,m){m=3Da.Callback(m);var l;if(k instanceof =
Object){for(var j in =
k){if(k.hasOwnProperty(j)){l=3Dj.toUpperCase();k=3Dk[j]}}}else{l=3Dk.spli=
t(/\./).pop().toUpperCase()}k=3Dthis.fileURL(k);if(this.loading[k]){this.=
addHook(k,m)}else{this.head=3Dh(this.head);if(this.loader[l]){this.loader=
[l].call(this,k,m)}else{throw Error("Can't load files of type =
"+l)}}return m},LoadHook:function(l,m,k){m=3Da.Callback(m);if(l =
instanceof Object){for(var j in =
l){if(l.hasOwnProperty(j)){l=3Dl[j]}}}l=3Dthis.fileURL(l);if(this.loaded[=
l]){m(this.loaded[l])}else{this.addHook(l,m,k)}return =
m},addHook:function(j,k,i){if(!this.loadHooks[j]){this.loadHooks[j]=3DMat=
hJax.Callback.Hooks()}this.loadHooks[j].Add(k,i)},Preloading:function(){f=
or(var l=3D0,j=3Darguments.length;l<j;l++){var =
k=3Dthis.fileURL(arguments[l]);if(!this.loading[k]){this.loading[k]=3D{pr=
eloaded:true}}}},loader:{JS:function(k,m){var j=3Dthis.fileName(k);var =
i=3Ddocument.createElement("script");var =
l=3Da.Callback(["loadTimeout",this,k]);this.loading[k]=3D{callback:m,time=
out:setTimeout(l,this.timeout),status:this.STATUS.OK,script:i};this.loadi=
ng[k].message=3Da.Message.File(j);i.onerror=3Dl;i.type=3D"text/javascript=
";i.src=3Dk+this.fileRev(j);this.head.appendChild(i)},CSS:function(j,l){v=
ar i=3Dthis.fileName(j);var =
k=3Ddocument.createElement("link");k.rel=3D"stylesheet";k.type=3D"text/cs=
s";k.href=3Dj+this.fileRev(i);this.loading[j]=3D{callback:l,message:a.Mes=
sage.File(i),status:this.STATUS.OK};this.head.appendChild(k);this.timer.c=
reate.call(this,[this.timer.file,j],k)}},timer:{create:function(j,i){j=3D=
a.Callback(j);if(i.nodeName=3D=3D=3D"STYLE"&&i.styleSheet&&typeof(i.style=
Sheet.cssText)!=3D=3D"undefined"){j(this.STATUS.OK)}else{if(window.chrome=
&&i.nodeName=3D=3D=3D"LINK"){j(this.STATUS.OK)}else{if(d){this.timer.star=
t(this,[this.timer.checkSafari2,g++,j],this.styleDelay)}else{this.timer.s=
tart(this,[this.timer.checkLength,i,j],this.styleDelay)}}}return =
j},start:function(j,i,k,l){i=3Da.Callback(i);i.execute=3Dthis.execute;i.t=
ime=3Dthis.time;i.STATUS=3Dj.STATUS;i.timeout=3Dl||j.timeout;i.delay=3Di.=
total=3Dk||0;if(k){setTimeout(i,k)}else{i()}},time:function(i){this.total=
+=3Dthis.delay;this.delay=3DMath.floor(this.delay*1.05+5);if(this.total>=3D=
this.timeout){i(this.STATUS.ERROR);return 1}return =
0},file:function(j,i){if(i<0){a.Ajax.loadTimeout(j)}else{a.Ajax.loadCompl=
ete(j)}},execute:function(){this.hook.call(this.object,this,this.data[0],=
this.data[1])},checkSafari2:function(i,j,k){if(i.time(k)){return}if(docum=
ent.styleSheets.length>j&&document.styleSheets[j].cssRules&&document.styl=
eSheets[j].cssRules.length){k(i.STATUS.OK)}else{setTimeout(i,i.delay)}},c=
heckLength:function(i,l,n){if(i.time(n)){return}var m=3D0;var =
j=3D(l.sheet||l.styleSheet);try{if((j.cssRules||j.rules||[]).length>0){m=3D=
1}}catch(k){if(k.message.match(/protected variable|restricted =
URI/)){m=3D1}else{if(k.message.match(/Security =
error/)){m=3D1}}}if(m){setTimeout(a.Callback([n,i.STATUS.OK]),0)}else{set=
Timeout(i,i.delay)}}},loadComplete:function(i){i=3Dthis.fileURL(i);var =
j=3Dthis.loading[i];if(j&&!j.preloaded){a.Message.Clear(j.message);clearT=
imeout(j.timeout);if(j.script){if(f.length=3D=3D=3D0){setTimeout(c,0)}f.p=
ush(j.script)}this.loaded[i]=3Dj.status;delete =
this.loading[i];this.addHook(i,j.callback)}else{if(j){delete =
this.loading[i]}this.loaded[i]=3Dthis.STATUS.OK;j=3D{status:this.STATUS.O=
K}}if(!this.loadHooks[i]){return null}return =
this.loadHooks[i].Execute(j.status)},loadTimeout:function(i){if(this.load=
ing[i].timeout){clearTimeout(this.loading[i].timeout)}this.loading[i].sta=
tus=3Dthis.STATUS.ERROR;this.loadError(i);this.loadComplete(i)},loadError=
:function(i){a.Message.Set(["LoadFailed","File failed to load: =
%1",i],null,2000);a.Hub.signal.Post(["file load =
error",i])},Styles:function(k,l){var =
i=3Dthis.StyleString(k);if(i=3D=3D=3D""){l=3Da.Callback(l);l()}else{var =
j=3Ddocument.createElement("style");j.type=3D"text/css";this.head=3Dh(thi=
s.head);this.head.appendChild(j);if(j.styleSheet&&typeof(j.styleSheet.css=
Text)!=3D=3D"undefined"){j.styleSheet.cssText=3Di}else{j.appendChild(docu=
ment.createTextNode(i))}l=3Dthis.timer.create.call(this,l,j)}return =
l},StyleString:function(n){if(typeof(n)=3D=3D=3D"string"){return n}var =
k=3D"",o,m;for(o in n){if(n.hasOwnProperty(o)){if(typeof =
n[o]=3D=3D=3D"string"){k+=3Do+" {"+n[o]+"}\n"}else{if(n[o] instanceof =
Array){for(var =
l=3D0;l<n[o].length;l++){m=3D{};m[o]=3Dn[o][l];k+=3Dthis.StyleString(m)}}=
else{if(o.substr(0,6)=3D=3D=3D"@media"){k+=3Do+" =
{"+this.StyleString(n[o])+"}\n"}else{if(n[o]!=3Dnull){m=3D[];for(var j =
in =
n[o]){if(n[o].hasOwnProperty(j)){if(n[o][j]!=3Dnull){m[m.length]=3Dj+": =
"+n[o][j]}}}k+=3Do+" {"+m.join("; ")+"}\n"}}}}}}return =
k}}})("MathJax");MathJax.HTML=3D{Element:function(c,e,d){var =
f=3Ddocument.createElement(c);if(e){if(e.style){var =
b=3De.style;e.style=3D{};for(var g in =
b){if(b.hasOwnProperty(g)){e.style[g.replace(/-([a-z])/g,this.ucMatch)]=3D=
b[g]}}}MathJax.Hub.Insert(f,e)}if(d){if(!(d instanceof =
Array)){d=3D[d]}for(var a=3D0;a<d.length;a++){if(d[a] instanceof =
Array){f.appendChild(this.Element(d[a][0],d[a][1],d[a][2]))}else{if(c=3D=3D=
=3D"script"){this.setScript(f,d[a])}else{f.appendChild(document.createTex=
tNode(d[a]))}}}}return f},ucMatch:function(a,b){return =
b.toUpperCase()},addElement:function(b,a,d,c){return =
b.appendChild(this.Element(a,d,c))},TextNode:function(a){return =
document.createTextNode(a)},addText:function(a,b){return =
a.appendChild(this.TextNode(b))},setScript:function(a,b){if(this.setScrip=
tBug){a.text=3Db}else{while(a.firstChild){a.removeChild(a.firstChild)}thi=
s.addText(a,b)}},getScript:function(a){var =
b=3D(a.text=3D=3D=3D""?a.innerHTML:a.text);return =
b.replace(/^\s+/,"").replace(/\s+$/,"")},Cookie:{prefix:"mjx",expires:365=
,Set:function(a,e){var d=3D[];if(e){for(var g in =
e){if(e.hasOwnProperty(g)){d.push(g+":"+e[g].toString().replace(/&/g,"&&"=
))}}}var =
b=3Dthis.prefix+"."+a+"=3D"+escape(d.join("&;"));if(this.expires){var =
f=3Dnew Date();f.setDate(f.getDate()+this.expires);b+=3D"; =
expires=3D"+f.toGMTString()}try{document.cookie=3Db+"; =
path=3D/"}catch(c){}},Get:function(a,d){if(!d){d=3D{}}var g=3Dnew =
RegExp("(?:^|;\\s*)"+this.prefix+"\\."+a+"=3D([^;]*)(?:;|$)");var =
f;try{f=3Dg.exec(document.cookie)}catch(c){}if(f&&f[1]!=3D=3D""){var =
j=3Dunescape(f[1]).split("&;");for(var =
e=3D0,b=3Dj.length;e<b;e++){f=3Dj[e].match(/([^:]+):(.*)/);var =
h=3Df[2].replace(/&&/g,"&");if(h=3D=3D=3D"true"){h=3Dtrue}else{if(h=3D=3D=
=3D"false"){h=3Dfalse}else{if(h.match(/^-?(\d+(\.\d+)?|\.\d+)$/)){h=3Dpar=
seFloat(h)}}}d[f[1]]=3Dh}}return =
d}}};MathJax.Localization=3D{locale:"en",directory:"[MathJax]/localizatio=
n",strings:{ast:{menuTitle:"asturianu"},br:{menuTitle:"brezhoneg"},ca:{me=
nuTitle:"catal\u00E0"},cdo:{menuTitle:"M\u00ECng-d\u0115\u0324ng-ng\u1E73=
\u0304"},cs:{menuTitle:"\u010De\u0161tina"},da:{menuTitle:"dansk"},de:{me=
nuTitle:"Deutsch"},en:{menuTitle:"English",isLoaded:true},eo:{menuTitle:"=
Esperanto"},es:{menuTitle:"espa\u00F1ol"},fa:{menuTitle:"\u0641\u0627\u06=
31\u0633\u06CC"},fi:{menuTitle:"suomi"},fr:{menuTitle:"fran\u00E7ais"},gl=
:{menuTitle:"galego"},he:{menuTitle:"\u05E2\u05D1\u05E8\u05D9\u05EA"},ia:=
{menuTitle:"interlingua"},it:{menuTitle:"italiano"},ja:{menuTitle:"\u65E5=
\u672C\u8A9E"},kn:{menuTitle:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1"},ko:{menuTi=
tle:"\uD55C\uAD6D\uC5B4"},lb:{menuTitle:"L\u00EBtzebuergesch"},mk:{menuTi=
tle:"\u043C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438"},nl:{m=
enuTitle:"Nederlands"},oc:{menuTitle:"occitan"},pl:{menuTitle:"polski"},p=
t:{menuTitle:"portugus\u00EA"},"pt-br":{menuTitle:"portugu\u00EAs do =
Brasil"},ru:{menuTitle:"\u0440\u0443\u0441\u0441\u043A\u0438\u0439"},sl:{=
menuTitle:"sloven\u0161\u010Dina"},sv:{menuTitle:"svenska"},tr:{menuTitle=
:"T\u00FCrk\u00E7e"},uk:{menuTitle:"\u0443\u043A\u0440\u0430\u0457\u043D\=
u0441\u044C\u043A\u0430"},vi:{menuTitle:"Ti\u1EBFng =
Vi\u1EC7t"},"zh-hans":{menuTitle:"\u4E2D\u6587\uFF08\u7B80\u4F53\uFF09"}}=
,pattern:/%(\d+|\{\d+\}|\{[a-z]+:\%\d+(?:\|(?:%\{\d+\}|%.|[^\}])*)+\}|.)/=
g,SPLIT:("axb".split(/(x)/).length=3D=3D=3D3?function(a,b){return =
a.split(b)}:function(c,e){var =
a=3D[],b,d=3D0;e.lastIndex=3D0;while(b=3De.exec(c)){a.push(c.substr(d,b.i=
ndex-d));a.push.apply(a,b.slice(1));d=3Db.index+b[0].length}a.push(c.subs=
tr(d));return a}),_:function(b,a){if(a instanceof Array){return =
this.processSnippet(b,a)}return =
this.processString(this.lookupPhrase(b,a),[].slice.call(arguments,2))},pr=
ocessString:function(l,o,g){var =
j,e;for(j=3D0,e=3Do.length;j<e;j++){if(g&&o[j] instanceof =
Array){o[j]=3Dthis.processSnippet(g,o[j])}}var =
f=3Dthis.SPLIT(l,this.pattern);for(j=3D1,e=3Df.length;j<e;j+=3D2){var =
p=3Df[j].charAt(0);if(p>=3D"0"&&p<=3D"9"){f[j]=3Do[f[j]-1];if(typeof =
f[j]=3D=3D=3D"number"){f[j]=3Dthis.number(f[j])}}else{if(p=3D=3D=3D"{"){p=
=3Df[j].substr(1);if(p>=3D"0"&&p<=3D"9"){f[j]=3Do[f[j].substr(1,f[j].leng=
th-2)-1];if(typeof =
f[j]=3D=3D=3D"number"){f[j]=3Dthis.number(f[j])}}else{var =
k=3Df[j].match(/^\{([a-z]+):%(\d+)\|(.*)\}$/);if(k){if(k[1]=3D=3D=3D"plur=
al"){var d=3Do[k[2]-1];if(typeof =
d=3D=3D=3D"undefined"){f[j]=3D"???"}else{d=3Dthis.plural(d)-1;var =
h=3Dk[3].replace(/(^|[^%])(%%)*%\|/g,"$1$2%\uEFEF").split(/\|/);if(d>=3D0=
&&d<h.length){f[j]=3Dthis.processString(h[d].replace(/\uEFEF/g,"|"),o,g)}=
else{f[j]=3D"???"}}}else{f[j]=3D"%"+f[j]}}}}}if(f[j]=3D=3Dnull){f[j]=3D"?=
??"}}if(!g){return f.join("")}var =
a=3D[],b=3D"";for(j=3D0;j<e;j++){b+=3Df[j];j++;if(j<e){if(f[j] =
instanceof =
Array){a.push(b);a=3Da.concat(f[j]);b=3D""}else{b+=3Df[j]}}}if(b!=3D=3D""=
){a.push(b)}return a},processSnippet:function(g,e){var c=3D[];for(var =
d=3D0,b=3De.length;d<b;d++){if(e[d] instanceof Array){var =
f=3De[d];if(typeof f[1]=3D=3D=3D"string"){var h=3Df[0];if(!(h instanceof =
Array)){h=3D[g,h]}var =
a=3Dthis.lookupPhrase(h,f[1]);c=3Dc.concat(this.processMarkdown(a,f.slice=
(2),g))}else{if(f[1] instanceof =
Array){c=3Dc.concat(this.processSnippet.apply(this,f))}else{if(f.length>=3D=
3){c.push([f[0],f[1],this.processSnippet(g,f[2])])}else{c.push(e[d])}}}}e=
lse{c.push(e[d])}}return =
c},markdownPattern:/(%.)|(\*{1,3})((?:%.|.)+?)\2|(`+)((?:%.|.)+?)\4|\[((?=
:%.|.)+?)\]\(([^\s\)]+)\)/,processMarkdown:function(b,h,d){var =
j=3D[],e;var c=3Db.split(this.markdownPattern);var g=3Dc[0];for(var =
f=3D1,a=3Dc.length;f<a;f+=3D8){if(c[f+1]){e=3Dthis.processString(c[f+2],h=
,d);if(!(e instanceof =
Array)){e=3D[e]}e=3D[["b","i","i"][c[f+1].length-1],{},e];if(c[f+1].lengt=
h=3D=3D=3D3){e=3D["b",{},e]}}else{if(c[f+3]){e=3Dthis.processString(c[f+4=
].replace(/^\s/,"").replace(/\s$/,""),h,d);if(!(e instanceof =
Array)){e=3D[e]}e=3D["code",{},e]}else{if(c[f+5]){e=3Dthis.processString(=
c[f+5],h,d);if(!(e instanceof =
Array)){e=3D[e]}e=3D["a",{href:this.processString(c[f+6],h),target:"_blan=
k"},e]}else{g+=3Dc[f];e=3Dnull}}}if(e){j=3Dthis.concatString(j,g,h,d);j.p=
ush(e);g=3D""}if(c[f+7]!=3D=3D""){g+=3Dc[f+7]}}j=3Dthis.concatString(j,g,=
h,d);return =
j},concatString:function(a,c,b,d){if(c!=3D""){c=3Dthis.processString(c,b,=
d);if(!(c instanceof Array)){c=3D[c]}a=3Da.concat(c)}return =
a},lookupPhrase:function(f,a,d){if(!d){d=3D"_"}if(f instanceof =
Array){d=3D(f[0]||"_");f=3D(f[1]||"")}var =
c=3Dthis.loadDomain(d);if(c){MathJax.Hub.RestartAfter(c)}var =
b=3Dthis.strings[this.locale];if(b){if(b.domains&&d in b.domains){var =
e=3Db.domains[d];if(e.strings&&f in e.strings){a=3De.strings[f]}}}return =
a},loadFile:function(b,d,e){e=3DMathJax.Callback(e);b=3D(d.file||b);if(!b=
.match(/\.js$/)){b+=3D".js"}if(!b.match(/^([a-z]+:|\[MathJax\])/)){var =
a=3D(this.strings[this.locale].directory||this.directory+"/"+this.locale|=
|"[MathJax]/localization/"+this.locale);b=3Da+"/"+b}var =
c=3DMathJax.Ajax.Require(b,function(){d.isLoaded=3Dtrue;return =
e()});return(c.called?null:c)},loadDomain:function(c,e){var =
b,a=3Dthis.strings[this.locale];if(a){if(!a.isLoaded){b=3Dthis.loadFile(t=
his.locale,a);if(b){return =
MathJax.Callback.Queue(b,["loadDomain",this,c]).Push(e||{})}}if(a.domains=
&&c in a.domains){var =
d=3Da.domains[c];if(!d.isLoaded){b=3Dthis.loadFile(c,d);if(b){return =
MathJax.Callback.Queue(b).Push(e)}}}}return =
MathJax.Callback(e)()},Try:function(a){a=3DMathJax.Callback(a);a.autoRese=
t=3Dtrue;try{a()}catch(b){if(!b.restart){throw =
b}MathJax.Callback.After(["Try",this,a],b.restart)}},resetLocale:function=
(a){if(!a){return}a=3Da.toLowerCase();while(!this.strings[a]){var =
c=3Da.lastIndexOf("-");if(c=3D=3D=3D-1){return}a=3Da.substring(0,c)}var =
b=3Dthis.strings[a].remap;this.locale=3Db?b:a},setLocale:function(a){this=
.resetLocale(a);if(MathJax.Menu){this.loadDomain("MathMenu")}},addTransla=
tion:function(b,e,c){var =
d=3Dthis.strings[b],a=3Dfalse;if(!d){d=3Dthis.strings[b]=3D{};a=3Dtrue}if=
(!d.domains){d.domains=3D{}}if(e){if(!d.domains[e]){d.domains[e]=3D{}}d=3D=
d.domains[e]}MathJax.Hub.Insert(d,c);if(a&&MathJax.Menu.menu){MathJax.Men=
u.CreateLocaleMenu()}},setCSS:function(b){var =
a=3Dthis.strings[this.locale];if(a){if(a.fontFamily){b.style.fontFamily=3D=
a.fontFamily}if(a.fontDirection){b.style.direction=3Da.fontDirection;if(a=
.fontDirection=3D=3D=3D"rtl"){b.style.textAlign=3D"right"}}}return =
b},fontFamily:function(){var =
a=3Dthis.strings[this.locale];return(a?a.fontFamily:null)},fontDirection:=
function(){var =
a=3Dthis.strings[this.locale];return(a?a.fontDirection:null)},plural:func=
tion(b){var a=3Dthis.strings[this.locale];if(a&&a.plural){return =
a.plural(b)}if(b=3D=3D1){return 1}return 2},number:function(b){var =
a=3Dthis.strings[this.locale];if(a&&a.number){return a.number(b)}return =
b}};MathJax.Message=3D{ready:false,log:[{}],current:null,textNodeBug:(nav=
igator.vendor=3D=3D=3D"Apple Computer, Inc."&&typeof =
navigator.vendorSub=3D=3D=3D"undefined")||(window.hasOwnProperty&&window.=
hasOwnProperty("konqueror")),styles:{"#MathJax_Message":{position:"fixed"=
,left:"1px",bottom:"2px","background-color":"#E6E6E6",border:"1px solid =
#959595",margin:"0px",padding:"2px =
8px","z-index":"102",color:"black","font-size":"80%",width:"auto","white-=
space":"nowrap"},"#MathJax_MSIE_Frame":{position:"absolute",top:0,left:0,=
width:"0px","z-index":101,border:"0px",margin:"0px",padding:"0px"}},brows=
ers:{MSIE:function(a){MathJax.Message.msieFixedPositionBug=3D((document.d=
ocumentMode||0)<7);if(MathJax.Message.msieFixedPositionBug){MathJax.Hub.c=
onfig.styles["#MathJax_Message"].position=3D"absolute"}MathJax.Message.qu=
irks=3D(document.compatMode=3D=3D=3D"BackCompat")},Chrome:function(a){Mat=
hJax.Hub.config.styles["#MathJax_Message"].bottom=3D"1.5em";MathJax.Hub.c=
onfig.styles["#MathJax_Message"].left=3D"1em"}},Init:function(a){if(a){th=
is.ready=3Dtrue}if(!document.body||!this.ready){return =
false}if(this.div&&this.div.parentNode=3D=3Dnull){this.div=3Ddocument.get=
ElementById("MathJax_Message");if(this.div){this.text=3Dthis.div.firstChi=
ld}}if(!this.div){var =
b=3Ddocument.body;if(this.msieFixedPositionBug&&window.attachEvent){b=3Dt=
his.frame=3Dthis.addDiv(document.body);b.removeAttribute("id");b.style.po=
sition=3D"absolute";b.style.border=3Db.style.margin=3Db.style.padding=3D"=
0px";b.style.zIndex=3D"101";b.style.height=3D"0px";b=3Dthis.addDiv(b);b.i=
d=3D"MathJax_MSIE_Frame";window.attachEvent("onscroll",this.MoveFrame);wi=
ndow.attachEvent("onresize",this.MoveFrame);this.MoveFrame()}this.div=3Dt=
his.addDiv(b);this.div.style.display=3D"none";this.text=3Dthis.div.append=
Child(document.createTextNode(""))}return true},addDiv:function(a){var =
b=3Ddocument.createElement("div");b.id=3D"MathJax_Message";if(a.firstChil=
d){a.insertBefore(b,a.firstChild)}else{a.appendChild(b)}return =
b},MoveFrame:function(){var =
a=3D(MathJax.Message.quirks?document.body:document.documentElement);var =
b=3DMathJax.Message.frame;b.style.left=3Da.scrollLeft+"px";b.style.top=3D=
a.scrollTop+"px";b.style.width=3Da.clientWidth+"px";b=3Db.firstChild;b.st=
yle.height=3Da.clientHeight+"px"},localize:function(a){return =
MathJax.Localization._(a,a)},filterText:function(a,c,b){if(MathJax.Hub.co=
nfig.messageStyle=3D=3D=3D"simple"){if(b=3D=3D=3D"LoadFile"){if(!this.loa=
ding){this.loading=3Dthis.localize("Loading")+" =
"}a=3Dthis.loading;this.loading+=3D"."}else{if(b=3D=3D=3D"ProcessMath"){i=
f(!this.processing){this.processing=3Dthis.localize("Processing")+" =
"}a=3Dthis.processing;this.processing+=3D"."}else{if(b=3D=3D=3D"TypesetMa=
th"){if(!this.typesetting){this.typesetting=3Dthis.localize("Typesetting"=
)+" "}a=3Dthis.typesetting;this.typesetting+=3D"."}}}}return =
a},Set:function(c,e,b){if(e=3D=3Dnull){e=3Dthis.log.length;this.log[e]=3D=
{}}var d=3D"";if(c instanceof Array){d=3Dc[0];if(d instanceof =
Array){d=3Dd[1]}try{c=3DMathJax.Localization._.apply(MathJax.Localization=
,c)}catch(a){if(!a.restart){throw =
a}if(!a.restart.called){if(this.log[e].restarted=3D=3Dnull){this.log[e].r=
estarted=3D0}this.log[e].restarted++;delete =
this.log[e].cleared;MathJax.Callback.After(["Set",this,c,e,b],a.restart);=
return e}}}if(this.timer){clearTimeout(this.timer);delete =
this.timer}this.log[e].text=3Dc;this.log[e].filteredText=3Dc=3Dthis.filte=
rText(c,e,d);if(typeof(this.log[e].next)=3D=3D=3D"undefined"){this.log[e]=
.next=3Dthis.current;if(this.current!=3Dnull){this.log[this.current].prev=
=3De}this.current=3De}if(this.current=3D=3D=3De&&MathJax.Hub.config.messa=
geStyle!=3D=3D"none"){if(this.Init()){if(this.textNodeBug){this.div.inner=
HTML=3Dc}else{this.text.nodeValue=3Dc}this.div.style.display=3D"";if(this=
.status){window.status=3D"";delete =
this.status}}else{window.status=3Dc;this.status=3Dtrue}}if(this.log[e].re=
started){if(this.log[e].cleared){b=3D0}if(--this.log[e].restarted=3D=3D=3D=
0){delete =
this.log[e].cleared}}if(b){setTimeout(MathJax.Callback(["Clear",this,e]),=
b)}else{if(b=3D=3D0){this.Clear(e,0)}}return =
e},Clear:function(b,a){if(this.log[b].prev!=3Dnull){this.log[this.log[b].=
prev].next=3Dthis.log[b].next}if(this.log[b].next!=3Dnull){this.log[this.=
log[b].next].prev=3Dthis.log[b].prev}if(this.current=3D=3D=3Db){this.curr=
ent=3Dthis.log[b].next;if(this.text){if(this.div.parentNode=3D=3Dnull){th=
is.Init()}if(this.current=3D=3Dnull){if(this.timer){clearTimeout(this.tim=
er);delete =
this.timer}if(a=3D=3Dnull){a=3D600}if(a=3D=3D=3D0){this.Remove()}else{thi=
s.timer=3DsetTimeout(MathJax.Callback(["Remove",this]),a)}}else{if(MathJa=
x.Hub.config.messageStyle!=3D=3D"none"){if(this.textNodeBug){this.div.inn=
erHTML=3Dthis.log[this.current].filteredText}else{this.text.nodeValue=3Dt=
his.log[this.current].filteredText}}}if(this.status){window.status=3D"";d=
elete =
this.status}}else{if(this.status){window.status=3D(this.current=3D=3Dnull=
?"":this.log[this.current].text)}}}delete this.log[b].next;delete =
this.log[b].prev;delete =
this.log[b].filteredText;if(this.log[b].restarted){this.log[b].cleared=3D=
true}},Remove:function(){this.text.nodeValue=3D"";this.div.style.display=3D=
"none"},File:function(a){return this.Set(["LoadFile","Loading =
%1",a],null,null)},Log:function(){var b=3D[];for(var =
c=3D1,a=3Dthis.log.length;c<a;c++){b[c]=3Dthis.log[c].text}return =
b.join("\n")}};MathJax.Hub=3D{config:{root:"",config:[],styleSheets:[],st=
yles:{".MathJax_Preview":{color:"#888"}},jax:[],extensions:[],preJax:null=
,postJax:null,displayAlign:"center",displayIndent:"0",preRemoveClass:"Mat=
hJax_Preview",showProcessingMessages:true,messageStyle:"normal",delayStar=
tupUntil:"none",skipStartupTypeset:false,elements:[],positionToHash:true,=
showMathMenu:true,showMathMenuMSIE:true,menuSettings:{zoom:"None",CTRL:fa=
lse,ALT:false,CMD:false,Shift:false,discoverable:false,zscale:"200%",rend=
erer:"",font:"Auto",context:"MathJax",locale:"en",mpContext:false,mpMouse=
:false,texHints:true,semantics:false},errorSettings:{message:["[",["MathP=
rocessingError","Math Processing =
Error"],"]"],style:{color:"#CC0000","font-style":"italic"}}},preProcessor=
s:MathJax.Callback.Hooks(true),inputJax:{},outputJax:{order:{}},processUp=
dateTime:250,processUpdateDelay:10,signal:MathJax.Callback.Signal("Hub"),=
Config:function(a){this.Insert(this.config,a);if(this.config.Augment){thi=
s.Augment(this.config.Augment)}},CombineConfig:function(c,f){var =
b=3Dthis.config,g,e;c=3Dc.split(/\./);for(var =
d=3D0,a=3Dc.length;d<a;d++){g=3Dc[d];if(!b[g]){b[g]=3D{}}e=3Db;b=3Db[g]}e=
[g]=3Db=3Dthis.Insert(f,b);return =
b},Register:{PreProcessor:function(){MathJax.Hub.preProcessors.Add.apply(=
MathJax.Hub.preProcessors,arguments)},MessageHook:function(){return =
MathJax.Hub.signal.MessageHook.apply(MathJax.Hub.signal,arguments)},Start=
upHook:function(){return =
MathJax.Hub.Startup.signal.MessageHook.apply(MathJax.Hub.Startup.signal,a=
rguments)},LoadHook:function(){return =
MathJax.Ajax.LoadHook.apply(MathJax.Ajax,arguments)}},getAllJax:function(=
e){var c=3D[],b=3Dthis.elementScripts(e);for(var =
d=3D0,a=3Db.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax){c.p=
ush(b[d].MathJax.elementJax)}}return c},getJaxByType:function(f,e){var =
c=3D[],b=3Dthis.elementScripts(e);for(var =
d=3D0,a=3Db.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax&&b[d=
].MathJax.elementJax.mimeType=3D=3D=3Df){c.push(b[d].MathJax.elementJax)}=
}return c},getJaxByInputType:function(f,e){var =
c=3D[],b=3Dthis.elementScripts(e);for(var =
d=3D0,a=3Db.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax&&b[d=
].type&&b[d].type.replace(/ =
*;(.|\s)*/,"")=3D=3D=3Df){c.push(b[d].MathJax.elementJax)}}return =
c},getJaxFor:function(a){if(typeof(a)=3D=3D=3D"string"){a=3Ddocument.getE=
lementById(a)}if(a&&a.MathJax){return =
a.MathJax.elementJax}if(a&&a.isMathJax){while(a&&!a.jaxID){a=3Da.parentNo=
de}if(a){return MathJax.OutputJax[a.jaxID].getJaxFromMath(a)}}return =
null},isJax:function(a){if(typeof(a)=3D=3D=3D"string"){a=3Ddocument.getEl=
ementById(a)}if(a&&a.isMathJax){return =
1}if(a&&a.tagName!=3Dnull&&a.tagName.toLowerCase()=3D=3D=3D"script"){if(a=
.MathJax){return(a.MathJax.state=3D=3D=3DMathJax.ElementJax.STATE.PROCESS=
ED?1:-1)}if(a.type&&this.inputJax[a.type.replace(/ =
*;(.|\s)*/,"")]){return -1}}return =
0},setRenderer:function(d,c){if(!d){return}if(!MathJax.OutputJax[d]){this=
.config.menuSettings.renderer=3D"";var =
b=3D"[MathJax]/jax/output/"+d+"/config.js";return =
MathJax.Ajax.Require(b,["setRenderer",this,d,c])}else{this.config.menuSet=
tings.renderer=3Dd;if(c=3D=3Dnull){c=3D"jax/mml"}var =
a=3Dthis.outputJax;if(a[c]&&a[c].length){if(d!=3D=3Da[c][0].id){a[c].unsh=
ift(MathJax.OutputJax[d]);return this.signal.Post(["Renderer =
Selected",d])}}return null}},Queue:function(){return =
this.queue.Push.apply(this.queue,arguments)},Typeset:function(e,f){if(!Ma=
thJax.isReady){return null}var c=3Dthis.elementCallback(e,f);var =
b=3DMathJax.Callback.Queue();for(var =
d=3D0,a=3Dc.elements.length;d<a;d++){if(c.elements[d]){b.Push(["PreProces=
s",this,c.elements[d]],["Process",this,c.elements[d]])}}return =
b.Push(c.callback)},PreProcess:function(e,f){var =
c=3Dthis.elementCallback(e,f);var b=3DMathJax.Callback.Queue();for(var =
d=3D0,a=3Dc.elements.length;d<a;d++){if(c.elements[d]){b.Push(["Post",thi=
s.signal,["Begin =
PreProcess",c.elements[d]]],(arguments.callee.disabled?{}:["Execute",this=
.preProcessors,c.elements[d]]),["Post",this.signal,["End =
PreProcess",c.elements[d]]])}}return =
b.Push(c.callback)},Process:function(a,b){return =
this.takeAction("Process",a,b)},Update:function(a,b){return =
this.takeAction("Update",a,b)},Reprocess:function(a,b){return =
this.takeAction("Reprocess",a,b)},Rerender:function(a,b){return =
this.takeAction("Rerender",a,b)},takeAction:function(g,e,h){var =
c=3Dthis.elementCallback(e,h);var =
b=3DMathJax.Callback.Queue(["Clear",this.signal]);for(var =
d=3D0,a=3Dc.elements.length;d<a;d++){if(c.elements[d]){var =
f=3D{scripts:[],start:new =
Date().getTime(),i:0,j:0,jax:{},jaxIDs:[]};b.Push(["Post",this.signal,["B=
egin "+g,c.elements[d]]],["Post",this.signal,["Begin =
Math",c.elements[d],g]],["prepareScripts",this,g,c.elements[d],f],["Post"=
,this.signal,["Begin Math =
Input",c.elements[d],g]],["processInput",this,f],["Post",this.signal,["En=
d Math =
Input",c.elements[d],g]],["prepareOutput",this,f,"preProcess"],["Post",th=
is.signal,["Begin Math =
Output",c.elements[d],g]],["processOutput",this,f],["Post",this.signal,["=
End Math =
Output",c.elements[d],g]],["prepareOutput",this,f,"postProcess"],["Post",=
this.signal,["End Math",c.elements[d],g]],["Post",this.signal,["End =
"+g,c.elements[d]]])}}return =
b.Push(c.callback)},scriptAction:{Process:function(a){},Update:function(b=
){var =
a=3Db.MathJax.elementJax;if(a&&a.needsUpdate()){a.Remove(true);b.MathJax.=
state=3Da.STATE.UPDATE}else{b.MathJax.state=3Da.STATE.PROCESSED}},Reproce=
ss:function(b){var =
a=3Db.MathJax.elementJax;if(a){a.Remove(true);b.MathJax.state=3Da.STATE.U=
PDATE}},Rerender:function(b){var =
a=3Db.MathJax.elementJax;if(a){a.Remove(true);b.MathJax.state=3Da.STATE.O=
UTPUT}}},prepareScripts:function(h,e,g){if(arguments.callee.disabled){ret=
urn}var b=3Dthis.elementScripts(e);var =
f=3DMathJax.ElementJax.STATE;for(var d=3D0,a=3Db.length;d<a;d++){var =
c=3Db[d];if(c.type&&this.inputJax[c.type.replace(/ =
*;(.|\n)*/,"")]){if(c.MathJax){if(c.MathJax.elementJax&&c.MathJax.element=
Jax.hover){MathJax.Extension.MathEvents.Hover.ClearHover(c.MathJax.elemen=
tJax)}if(c.MathJax.state!=3D=3Df.PENDING){this.scriptAction[h](c)}}if(!c.=
MathJax){c.MathJax=3D{state:f.PENDING}}if(c.MathJax.state!=3D=3Df.PROCESS=
ED){g.scripts.push(c)}}}},checkScriptSiblings:function(a){if(a.MathJax.ch=
ecked){return}var =
b=3Dthis.config,f=3Da.previousSibling;if(f&&f.nodeName=3D=3D=3D"#text"){v=
ar =
d,e,c=3Da.nextSibling;if(c&&c.nodeName!=3D=3D"#text"){c=3Dnull}if(b.preJa=
x){if(typeof(b.preJax)=3D=3D=3D"string"){b.preJax=3Dnew =
RegExp(b.preJax+"$")}d=3Df.nodeValue.match(b.preJax)}if(b.postJax&&c){if(=
typeof(b.postJax)=3D=3D=3D"string"){b.postJax=3Dnew =
RegExp("^"+b.postJax)}e=3Dc.nodeValue.match(b.postJax)}if(d&&(!b.postJax|=
|e)){f.nodeValue=3Df.nodeValue.replace(b.preJax,(d.length>1?d[1]:""));f=3D=
null}if(e&&(!b.preJax||d)){c.nodeValue=3Dc.nodeValue.replace(b.postJax,(e=
.length>1?e[1]:""))}if(f&&!f.nodeValue.match(/\S/)){f=3Df.previousSibling=
}}if(b.preRemoveClass&&f&&f.className=3D=3D=3Db.preRemoveClass){a.MathJax=
.preview=3Df}a.MathJax.checked=3D1},processInput:function(a){var =
b,i=3DMathJax.ElementJax.STATE;var =
h,e,d=3Da.scripts.length;try{while(a.i<d){h=3Da.scripts[a.i];if(!h){a.i++=
;continue}e=3Dh.previousSibling;if(e&&e.className=3D=3D=3D"MathJax_Error"=
){e.parentNode.removeChild(e)}if(!h.MathJax||h.MathJax.state=3D=3D=3Di.PR=
OCESSED){a.i++;continue}if(!h.MathJax.elementJax||h.MathJax.state=3D=3D=3D=
i.UPDATE){this.checkScriptSiblings(h);var g=3Dh.type.replace(/ =
*;(.|\s)*/,"");b=3Dthis.inputJax[g].Process(h,a);if(typeof =
b=3D=3D=3D"function"){if(b.called){continue}this.RestartAfter(b)}b.Attach=
(h,this.inputJax[g].id);this.saveScript(b,a,h,i)}else{if(h.MathJax.state=3D=
=3D=3Di.OUTPUT){this.saveScript(h.MathJax.elementJax,a,h,i)}}a.i++;var =
c=3Dnew =
Date().getTime();if(c-a.start>this.processUpdateTime&&a.i<a.scripts.lengt=
h){a.start=3Dc;this.RestartAfter(MathJax.Callback.Delay(1))}}}catch(f){re=
turn =
this.processError(f,a,"Input")}if(a.scripts.length&&this.config.showProce=
ssingMessages){MathJax.Message.Set(["ProcessMath","Processing math: =
%1%%",100],0)}a.start=3Dnew Date().getTime();a.i=3Da.j=3D0;return =
null},saveScript:function(a,d,b,c){if(!this.outputJax[a.mimeType]){b.Math=
Jax.state=3Dc.UPDATE;throw Error("No output jax registered for =
"+a.mimeType)}a.outputJax=3Dthis.outputJax[a.mimeType][0].id;if(!d.jax[a.=
outputJax]){if(d.jaxIDs.length=3D=3D=3D0){d.jax[a.outputJax]=3Dd.scripts}=
else{if(d.jaxIDs.length=3D=3D=3D1){d.jax[d.jaxIDs[0]]=3Dd.scripts.slice(0=
,d.i)}d.jax[a.outputJax]=3D[]}d.jaxIDs.push(a.outputJax)}if(d.jaxIDs.leng=
th>1){d.jax[a.outputJax].push(b)}b.MathJax.state=3Dc.OUTPUT},prepareOutpu=
t:function(c,f){while(c.j<c.jaxIDs.length){var =
e=3Dc.jaxIDs[c.j],d=3DMathJax.OutputJax[e];if(d[f]){try{var =
a=3Dd[f](c);if(typeof =
a=3D=3D=3D"function"){if(a.called){continue}this.RestartAfter(a)}}catch(b=
){if(!b.restart){MathJax.Message.Set(["PrepError","Error preparing %1 =
output (%2)",e,f],null,600);MathJax.Hub.lastPrepError=3Db;c.j++}return =
MathJax.Callback.After(["prepareOutput",this,c,f],b.restart)}}c.j++}retur=
n null},processOutput:function(h){var =
b,g=3DMathJax.ElementJax.STATE,d,a=3Dh.scripts.length;try{while(h.i<a){d=3D=
h.scripts[h.i];if(!d||!d.MathJax||d.MathJax.error){h.i++;continue}var =
c=3Dd.MathJax.elementJax;if(!c){h.i++;continue}b=3DMathJax.OutputJax[c.ou=
tputJax].Process(d,h);d.MathJax.state=3Dg.PROCESSED;h.i++;if(d.MathJax.pr=
eview){d.MathJax.preview.innerHTML=3D""}this.signal.Post(["New =
Math",c.inputID]);var e=3Dnew =
Date().getTime();if(e-h.start>this.processUpdateTime&&h.i<h.scripts.lengt=
h){h.start=3De;this.RestartAfter(MathJax.Callback.Delay(this.processUpdat=
eDelay))}}}catch(f){return =
this.processError(f,h,"Output")}if(h.scripts.length&&this.config.showProc=
essingMessages){MathJax.Message.Set(["TypesetMath","Typesetting math: =
%1%%",100],0);MathJax.Message.Clear(0)}h.i=3Dh.j=3D0;return =
null},processMessage:function(d,b){var =
a=3DMath.floor(d.i/(d.scripts.length)*100);var =
c=3D(b=3D=3D=3D"Output"?["TypesetMath","Typesetting math: =
%1%%"]:["ProcessMath","Processing math: =
%1%%"]);if(this.config.showProcessingMessages){MathJax.Message.Set(c.conc=
at(a),0)}},processError:function(b,c,a){if(!b.restart){if(!this.config.er=
rorSettings.message){throw =
b}this.formatError(c.scripts[c.i],b);c.i++}this.processMessage(c,a);retur=
n =
MathJax.Callback.After(["process"+a,this,c],b.restart)},formatError:funct=
ion(b,e){var d=3D"Error: "+e.message+"\n";if(e.sourceURL){d+=3D"\nfile: =
"+e.sourceURL}if(e.line){d+=3D"\nline: =
"+e.line}b.MathJax.error=3DMathJax.OutputJax.Error.Jax(d,b);var =
f=3Dthis.config.errorSettings;var =
a=3DMathJax.Localization._(f.messageId,f.message);var =
c=3DMathJax.HTML.Element("span",{className:"MathJax_Error",jaxID:"Error",=
isMathJax:true},a);if(MathJax.Extension.MathEvents){c.oncontextmenu=3DMat=
hJax.Extension.MathEvents.Event.Menu;c.onmousedown=3DMathJax.Extension.Ma=
thEvents.Event.Mousedown}else{MathJax.Ajax.Require("[MathJax]/extensions/=
MathEvents.js",function(){c.oncontextmenu=3DMathJax.Extension.MathEvents.=
Event.Menu;c.onmousedown=3DMathJax.Extension.MathEvents.Event.Mousedown})=
}b.parentNode.insertBefore(c,b);if(b.MathJax.preview){b.MathJax.preview.i=
nnerHTML=3D""}this.lastError=3De;this.signal.Post(["Math Processing =
Error",b,e])},RestartAfter:function(a){throw =
this.Insert(Error("restart"),{restart:MathJax.Callback(a)})},elementCallb=
ack:function(c,f){if(f=3D=3Dnull&&(c instanceof Array||typeof =
c=3D=3D=3D"function")){try{MathJax.Callback(c);f=3Dc;c=3Dnull}catch(d){}}=
if(c=3D=3Dnull){c=3Dthis.config.elements||[]}if(!(c instanceof =
Array)){c=3D[c]}c=3D[].concat(c);for(var =
b=3D0,a=3Dc.length;b<a;b++){if(typeof(c[b])=3D=3D=3D"string"){c[b]=3Ddocu=
ment.getElementById(c[b])}}if(!document.body){document.body=3Ddocument.ge=
tElementsByTagName("body")[0]}if(c.length=3D=3D0){c.push(document.body)}i=
f(!f){f=3D{}}return{elements:c,callback:f}},elementScripts:function(d){if=
(d instanceof Array){var b=3D[];for(var =
c=3D0,a=3Dd.length;c<a;c++){b.push.apply(b,this.elementScripts(d[c]))}ret=
urn =
b}if(typeof(d)=3D=3D=3D"string"){d=3Ddocument.getElementById(d)}if(!docum=
ent.body){document.body=3Ddocument.getElementsByTagName("body")[0]}if(d=3D=
=3Dnull){d=3Ddocument.body}if(d.tagName!=3Dnull&&d.tagName.toLowerCase()=3D=
=3D=3D"script"){return[d]}return =
d.getElementsByTagName("script")},Insert:function(c,a){for(var b in =
a){if(a.hasOwnProperty(b)){if(typeof a[b]=3D=3D=3D"object"&&!(a[b] =
instanceof Array)&&(typeof c[b]=3D=3D=3D"object"||typeof =
c[b]=3D=3D=3D"function")){this.Insert(c[b],a[b])}else{c[b]=3Da[b]}}}retur=
n c},SplitList:("trim" in String.prototype?function(a){return =
a.trim().split(/\s+/)}:function(a){return =
a.replace(/^\s+/,"").replace(/\s+$/,"").split(/\s+/)})};MathJax.Hub.Inser=
t(MathJax.Hub.config.styles,MathJax.Message.styles);MathJax.Hub.Insert(Ma=
thJax.Hub.config.styles,{".MathJax_Error":MathJax.Hub.config.errorSetting=
s.style});MathJax.Extension=3D{};MathJax.Hub.Configured=3DMathJax.Callbac=
k({});MathJax.Hub.Startup=3D{script:"",queue:MathJax.Callback.Queue(),sig=
nal:MathJax.Callback.Signal("Startup"),params:{},Config:function(){this.q=
ueue.Push(["Post",this.signal,"Begin =
Config"]);if(this.params.locale){MathJax.Localization.resetLocale(this.pa=
rams.locale);MathJax.Hub.config.menuSettings.locale=3Dthis.params.locale}=
if(this.params.config){var c=3Dthis.params.config.split(/,/);for(var =
b=3D0,a=3Dc.length;b<a;b++){if(!c[b].match(/\.js$/)){c[b]+=3D".js"}this.q=
ueue.Push(["Require",MathJax.Ajax,this.URL("config",c[b])])}}this.queue.P=
ush(["Config",MathJax.Hub,MathJax.AuthorConfig]);if(this.script.match(/\S=
/)){this.queue.Push(this.script+";\n1;")}this.queue.Push(["ConfigDelay",t=
his],["ConfigBlocks",this],[function(d){return =
d.loadArray(MathJax.Hub.config.config,"config",null,true)},this],["Post",=
this.signal,"End Config"])},ConfigDelay:function(){var =
a=3Dthis.params.delayStartupUntil||MathJax.Hub.config.delayStartupUntil;i=
f(a=3D=3D=3D"onload"){return =
this.onload}if(a=3D=3D=3D"configured"){return =
MathJax.Hub.Configured}return a},ConfigBlocks:function(){var =
c=3Ddocument.getElementsByTagName("script");var =
f=3Dnull,b=3DMathJax.Callback.Queue();for(var =
d=3D0,a=3Dc.length;d<a;d++){var e=3DString(c[d].type).replace(/ =
/g,"");if(e.match(/^text\/x-mathjax-config(;.*)?$/)&&!e.match(/;executed=3D=
true/)){c[d].type+=3D";executed=3Dtrue";f=3Db.Push(c[d].innerHTML+";\n1;"=
)}}return f},Cookie:function(){return =
this.queue.Push(["Post",this.signal,"Begin =
Cookie"],["Get",MathJax.HTML.Cookie,"menu",MathJax.Hub.config.menuSetting=
s],[function(d){if(d.menuSettings.locale){MathJax.Localization.resetLocal=
e(d.menuSettings.locale)}var =
f=3Dd.menuSettings.renderer,b=3Dd.jax;if(f){var =
c=3D"output/"+f;b.sort();for(var =
e=3D0,a=3Db.length;e<a;e++){if(b[e].substr(0,7)=3D=3D=3D"output/"){break}=
}if(e=3D=3Da-1){b.pop()}else{while(e<a){if(b[e]=3D=3D=3Dc){b.splice(e,1);=
break}e++}}b.unshift(c)}},MathJax.Hub.config],["Post",this.signal,"End =
Cookie"])},Styles:function(){return =
this.queue.Push(["Post",this.signal,"Begin =
Styles"],["loadArray",this,MathJax.Hub.config.styleSheets,"config"],["Sty=
les",MathJax.Ajax,MathJax.Hub.config.styles],["Post",this.signal,"End =
Styles"])},Jax:function(){var =
f=3DMathJax.Hub.config,c=3DMathJax.Hub.outputJax;for(var =
g=3D0,b=3Df.jax.length,d=3D0;g<b;g++){var =
e=3Df.jax[g].substr(7);if(f.jax[g].substr(0,7)=3D=3D=3D"output/"&&c.order=
[e]=3D=3Dnull){c.order[e]=3Dd;d++}}var =
a=3DMathJax.Callback.Queue();return a.Push(["Post",this.signal,"Begin =
Jax"],["loadArray",this,f.jax,"jax","config.js"],["Post",this.signal,"End=
 Jax"])},Extensions:function(){var a=3DMathJax.Callback.Queue();return =
a.Push(["Post",this.signal,"Begin =
Extensions"],["loadArray",this,MathJax.Hub.config.extensions,"extensions"=
],["Post",this.signal,"End =
Extensions"])},Message:function(){MathJax.Message.Init(true)},Menu:functi=
on(){var =
b=3DMathJax.Hub.config.menuSettings,a=3DMathJax.Hub.outputJax,d;for(var =
c in =
a){if(a.hasOwnProperty(c)){if(a[c].length){d=3Da[c];break}}}if(d&&d.lengt=
h){if(b.renderer&&b.renderer!=3D=3Dd[0].id){d.unshift(MathJax.OutputJax[b=
.renderer])}b.renderer=3Dd[0].id}},Hash:function(){if(MathJax.Hub.config.=
positionToHash&&document.location.hash&&document.body&&document.body.scro=
llIntoView){var d=3Ddocument.location.hash.substr(1);var =
f=3Ddocument.getElementById(d);if(!f){var =
c=3Ddocument.getElementsByTagName("a");for(var =
e=3D0,b=3Dc.length;e<b;e++){if(c[e].name=3D=3D=3Dd){f=3Dc[e];break}}}if(f=
){while(!f.scrollIntoView){f=3Df.parentNode}f=3Dthis.HashCheck(f);if(f&&f=
.scrollIntoView){setTimeout(function(){f.scrollIntoView(true)},1)}}}},Has=
hCheck:function(b){if(b.isMathJax){var =
a=3DMathJax.Hub.getJaxFor(b);if(a&&MathJax.OutputJax[a.outputJax].hashChe=
ck){b=3DMathJax.OutputJax[a.outputJax].hashCheck(b)}}return =
b},MenuZoom:function(){if(MathJax.Hub.config.showMathMenu){if(!MathJax.Ex=
tension.MathMenu){setTimeout(function(){MathJax.Callback.Queue(["Require"=
,MathJax.Ajax,"[MathJax]/extensions/MathMenu.js",{}],["loadDomain",MathJa=
x.Localization,"MathMenu"])},1000)}else{setTimeout(MathJax.Callback(["loa=
dDomain",MathJax.Localization,"MathMenu"]),1000)}if(!MathJax.Extension.Ma=
thZoom){setTimeout(MathJax.Callback(["Require",MathJax.Ajax,"[MathJax]/ex=
tensions/MathZoom.js",{}]),2000)}}},onLoad:function(){var =
a=3Dthis.onload=3DMathJax.Callback(function(){MathJax.Hub.Startup.signal.=
Post("onLoad")});if(document.body&&document.readyState){if(MathJax.Hub.Br=
owser.isMSIE){if(document.readyState=3D=3D=3D"complete"){return[a]}}else{=
if(document.readyState!=3D=3D"loading"){return[a]}}}if(window.addEventLis=
tener){window.addEventListener("load",a,false);if(!this.params.noDOMConte=
ntEvent){window.addEventListener("DOMContentLoaded",a,false)}}else{if(win=
dow.attachEvent){window.attachEvent("onload",a)}else{window.onload=3Da}}r=
eturn =
a},Typeset:function(a,b){if(MathJax.Hub.config.skipStartupTypeset){return=
 function(){}}return this.queue.Push(["Post",this.signal,"Begin =
Typeset"],["Typeset",MathJax.Hub,a,b],["Post",this.signal,"End =
Typeset"])},URL:function(b,a){if(!a.match(/^([a-z]+:\/\/|\[|\/)/)){a=3D"[=
MathJax]/"+b+"/"+a}return a},loadArray:function(b,f,c,a){if(b){if(!(b =
instanceof Array)){b=3D[b]}if(b.length){var =
h=3DMathJax.Callback.Queue(),j=3D{},e;for(var =
g=3D0,d=3Db.length;g<d;g++){e=3Dthis.URL(f,b[g]);if(c){e+=3D"/"+c}if(a){h=
.Push(["Require",MathJax.Ajax,e,j])}else{h.Push(MathJax.Ajax.Require(e,j)=
)}}return h.Push({})}}return null}};(function(d){var =
b=3Dwindow[d],e=3D"["+d+"]";var c=3Db.Hub,a=3Db.Ajax,f=3Db.Callback;var =
g=3DMathJax.Object.Subclass({JAXFILE:"jax.js",require:null,config:{},Init=
:function(i,h){if(arguments.length=3D=3D=3D0){return =
this}return(this.constructor.Subclass(i,h))()},Augment:function(k,j){var =
i=3Dthis.constructor,h=3D{};if(k!=3Dnull){for(var l in =
k){if(k.hasOwnProperty(l)){if(typeof =
k[l]=3D=3D=3D"function"){i.protoFunction(l,k[l])}else{h[l]=3Dk[l]}}}if(k.=
toString!=3D=3Di.prototype.toString&&k.toString!=3D=3D{}.toString){i.prot=
oFunction("toString",k.toString)}}c.Insert(i.prototype,h);i.Augment(null,=
j);return this},Translate:function(h,i){throw =
Error(this.directory+"/"+this.JAXFILE+" failed to define the Translate() =
method")},Register:function(h){},Config:function(){this.config=3Dc.Combin=
eConfig(this.id,this.config);if(this.config.Augment){this.Augment(this.co=
nfig.Augment)}},Startup:function(){},loadComplete:function(i){if(i=3D=3D=3D=
"config.js"){return a.loadComplete(this.directory+"/"+i)}else{var =
h=3Df.Queue();h.Push(c.Register.StartupHook("End =
Config",{}),["Post",c.Startup.signal,this.id+" Jax =
Config"],["Config",this],["Post",c.Startup.signal,this.id+" Jax =
Require"],[function(j){return =
MathJax.Hub.Startup.loadArray(j.require,this.directory)},this],[function(=
j,k){return =
MathJax.Hub.Startup.loadArray(j.extensions,"extensions/"+k)},this.config|=
|{},this.id],["Post",c.Startup.signal,this.id+" Jax =
Startup"],["Startup",this],["Post",c.Startup.signal,this.id+" Jax =
Ready"]);if(this.copyTranslate){h.Push([function(j){j.preProcess=3Dj.preT=
ranslate;j.Process=3Dj.Translate;j.postProcess=3Dj.postTranslate},this.co=
nstructor.prototype])}return =
h.Push(["loadComplete",a,this.directory+"/"+i])}}},{id:"Jax",version:"2.4=
.0",directory:e+"/jax",extensionDir:e+"/extensions"});b.InputJax=3Dg.Subc=
lass({elementJax:"mml",sourceMenuTitle:["Original","Original =
Form"],copyTranslate:true,Process:function(l,q){var j=3Df.Queue(),o;var =
k=3Dthis.elementJax;if(!(k instanceof Array)){k=3D[k]}for(var =
n=3D0,h=3Dk.length;n<h;n++){o=3Db.ElementJax.directory+"/"+k[n]+"/"+this.=
JAXFILE;if(!this.require){this.require=3D[]}else{if(!(this.require =
instanceof =
Array)){this.require=3D[this.require]}}this.require.push(o);j.Push(a.Requ=
ire(o))}o=3Dthis.directory+"/"+this.JAXFILE;var =
p=3Dj.Push(a.Require(o));if(!p.called){this.constructor.prototype.Process=
=3Dfunction(){if(!p.called){return p}throw Error(o+" failed to load =
properly")}}k=3Dc.outputJax["jax/"+k[0]];if(k){j.Push(a.Require(k[0].dire=
ctory+"/"+this.JAXFILE))}return j.Push({})},needsUpdate:function(h){var =
i=3Dh.SourceElement();return(h.originalText!=3D=3Db.HTML.getScript(i))},R=
egister:function(h){if(!c.inputJax){c.inputJax=3D{}}c.inputJax[h]=3Dthis}=
},{id:"InputJax",version:"2.4.0",directory:g.directory+"/input",extension=
Dir:g.extensionDir});b.OutputJax=3Dg.Subclass({copyTranslate:true,preProc=
ess:function(j){var =
i,h=3Dthis.directory+"/"+this.JAXFILE;this.constructor.prototype.preProce=
ss=3Dfunction(k){if(!i.called){return i}throw Error(h+" failed to load =
properly")};i=3Da.Require(h);return i},Register:function(i){var =
h=3Dc.outputJax;if(!h[i]){h[i]=3D[]}if(h[i].length&&(this.id=3D=3D=3Dc.co=
nfig.menuSettings.renderer||(h.order[this.id]||0)<(h.order[h[i][0].id]||0=
))){h[i].unshift(this)}else{h[i].push(this)}if(!this.require){this.requir=
e=3D[]}else{if(!(this.require instanceof =
Array)){this.require=3D[this.require]}}this.require.push(b.ElementJax.dir=
ectory+"/"+(i.split(/\//)[1])+"/"+this.JAXFILE)},Remove:function(h){}},{i=
d:"OutputJax",version:"2.4.0",directory:g.directory+"/output",extensionDi=
r:g.extensionDir,fontDir:e+(b.isPacked?"":"/..")+"/fonts",imageDir:e+(b.i=
sPacked?"":"/..")+"/images"});b.ElementJax=3Dg.Subclass({Init:function(i,=
h){return =
this.constructor.Subclass(i,h)},inputJax:null,outputJax:null,inputID:null=
,originalText:"",mimeType:"",sourceMenuTitle:["MathMLcode","MathML =
Code"],Text:function(i,j){var =
h=3Dthis.SourceElement();b.HTML.setScript(h,i);h.MathJax.state=3Dthis.STA=
TE.UPDATE;return c.Update(h,j)},Reprocess:function(i){var =
h=3Dthis.SourceElement();h.MathJax.state=3Dthis.STATE.UPDATE;return =
c.Reprocess(h,i)},Update:function(h){return =
this.Rerender(h)},Rerender:function(i){var =
h=3Dthis.SourceElement();h.MathJax.state=3Dthis.STATE.OUTPUT;return =
c.Process(h,i)},Remove:function(h){if(this.hover){this.hover.clear(this)}=
b.OutputJax[this.outputJax].Remove(this);if(!h){c.signal.Post(["Remove =
Math",this.inputID]);this.Detach()}},needsUpdate:function(){return =
b.InputJax[this.inputJax].needsUpdate(this)},SourceElement:function(){ret=
urn document.getElementById(this.inputID)},Attach:function(i,j){var =
h=3Di.MathJax.elementJax;if(i.MathJax.state=3D=3D=3Dthis.STATE.UPDATE){h.=
Clone(this)}else{h=3Di.MathJax.elementJax=3Dthis;if(i.id){this.inputID=3D=
i.id}else{i.id=3Dthis.inputID=3Db.ElementJax.GetID();this.newID=3D1}}h.or=
iginalText=3Db.HTML.getScript(i);h.inputJax=3Dj;if(h.root){h.root.inputID=
=3Dh.inputID}return h},Detach:function(){var =
h=3Dthis.SourceElement();if(!h){return}try{delete =
h.MathJax}catch(i){h.MathJax=3Dnull}if(this.newID){h.id=3D""}},Clone:func=
tion(h){var i;for(i in =
this){if(!this.hasOwnProperty(i)){continue}if(typeof(h[i])=3D=3D=3D"undef=
ined"&&i!=3D=3D"newID"){delete this[i]}}for(i in =
h){if(!h.hasOwnProperty(i)){continue}if(typeof(this[i])=3D=3D=3D"undefine=
d"||(this[i]!=3D=3Dh[i]&&i!=3D=3D"inputID")){this[i]=3Dh[i]}}}},{id:"Elem=
entJax",version:"2.4.0",directory:g.directory+"/element",extensionDir:g.e=
xtensionDir,ID:0,STATE:{PENDING:1,PROCESSED:2,UPDATE:3,OUTPUT:4},GetID:fu=
nction(){this.ID++;return"MathJax-Element-"+this.ID},Subclass:function(){=
var =
h=3Dg.Subclass.apply(this,arguments);h.loadComplete=3Dthis.prototype.load=
Complete;return =
h}});b.ElementJax.prototype.STATE=3Db.ElementJax.STATE;b.OutputJax.Error=3D=
{id:"Error",version:"2.4.0",config:{},ContextMenu:function(){return =
b.Extension.MathEvents.Event.ContextMenu.apply(b.Extension.MathEvents.Eve=
nt,arguments)},Mousedown:function(){return =
b.Extension.MathEvents.Event.AltContextMenu.apply(b.Extension.MathEvents.=
Event,arguments)},getJaxFromMath:function(h){return(h.nextSibling.MathJax=
||{}).error},Jax:function(j,i){var =
h=3DMathJax.Hub.inputJax[i.type.replace(/ =
*;(.|\s)*/,"")];return{inputJax:(h||{id:"Error"}).id,outputJax:"Error",so=
urceMenuTitle:["ErrorMessage","Error =
Message"],sourceMenuFormat:"Error",originalText:MathJax.HTML.getScript(i)=
,errorText:j}}};b.InputJax.Error=3D{id:"Error",version:"2.4.0",config:{},=
sourceMenuTitle:["Original","Original =
Form"]}})("MathJax");(function(n){var =
g=3Dwindow[n];if(!g){g=3Dwindow[n]=3D{}}var c=3Dg.Hub;var =
r=3Dc.Startup;var v=3Dc.config;var =
f=3Ddocument.getElementsByTagName("head")[0];if(!f){f=3Ddocument.childNod=
es[0]}var =
b=3D(document.documentElement||document).getElementsByTagName("script");v=
ar e=3Dnew RegExp("(^|/)"+n+"\\.js(\\?.*)?$");for(var =
p=3Db.length-1;p>=3D0;p--){if((b[p].src||"").match(e)){r.script=3Db[p].in=
nerHTML;if(RegExp.$2){var s=3DRegExp.$2.substr(1).split(/\&/);for(var =
o=3D0,k=3Ds.length;o<k;o++){var =
l=3Ds[o].match(/(.*)=3D(.*)/);if(l){r.params[unescape(l[1])]=3Dunescape(l=
[2])}}}v.root=3Db[p].src.replace(/(^|\/)[^\/]*(\?.*)?$/,"").replace(/^(ht=
tps?:)\/\/[0-9a-f]+(-[0-9a-f]+)?.ssl.cf1.rackcdn.com\//,"$1//cdn.mathjax.=
org/");g.Ajax.config.root=3Dv.root;break}}var =
h=3Dnavigator.userAgent;var =
a=3D{isMac:(navigator.platform.substr(0,3)=3D=3D=3D"Mac"),isPC:(navigator=
.platform.substr(0,3)=3D=3D=3D"Win"),isMSIE:("ActiveXObject" in =
window&&"clipboardData" in =
window),isFirefox:(h.match(/Gecko\//)&&!h.match(/like =
Gecko/)),isSafari:(h.match(/ =
(Apple)?WebKit\//)!=3Dnull&&(!window.chrome||window.chrome.loadTimes=3D=3D=
null)),isChrome:(window.chrome!=3Dnull&&window.chrome.loadTimes!=3Dnull),=
isOpera:(window.opera!=3Dnull&&window.opera.version!=3Dnull),isKonqueror:=
("konqueror" in =
window&&navigator.vendor=3D=3D"KDE"),versionAtLeast:function(x){var =
w=3D(this.version).split(".");x=3D(new String(x)).split(".");for(var =
y=3D0,j=3Dx.length;y<j;y++){if(w[y]!=3Dx[y]){return =
parseInt(w[y]||"0")>=3DparseInt(x[y])}}return =
true},Select:function(j){var i=3Dj[c.Browser];if(i){return =
i(c.Browser)}return null}};var d=3Dh.replace(/^Mozilla\/(\d+\.)+\d+ =
/,"").replace(/[a-z][-a-z0-9._: ]+\/\d+[^ ]*-[^ ]*\.([a-z][a-z])?\d+ =
/i,"").replace(/Gentoo |Ubuntu\/(\d+\.)*\d+ (\([^)]*\) =
)?/,"");c.Browser=3Dc.Insert(c.Insert(new =
String("Unknown"),{version:"0.0"}),a);for(var u in =
a){if(a.hasOwnProperty(u)){if(a[u]&&u.substr(0,2)=3D=3D=3D"is"){u=3Du.sli=
ce(2);if(u=3D=3D=3D"Mac"||u=3D=3D=3D"PC"){continue}c.Browser=3Dc.Insert(n=
ew String(u),a);var q=3Dnew RegExp(".*(Version/| Trident/.*; =
rv:)((?:\\d+\\.)+\\d+)|.*("+u+")"+(u=3D=3D"MSIE"?" =
":"/")+"((?:\\d+\\.)*\\d+)|(?:^|\\(| )([a-z][-a-z0-9._: =
]+|(?:Apple)?WebKit)/((?:\\d+\\.)+\\d+)");var =
t=3Dq.exec(d)||["","","","unknown","0.0"];c.Browser.name=3D(t[1]!=3D""?u:=
(t[3]||t[5]));c.Browser.version=3Dt[2]||t[4]||t[6];break}}}c.Browser.Sele=
ct({Safari:function(j){var =
i=3DparseInt((String(j.version).split("."))[0]);if(i>85){j.webkit=3Dj.ver=
sion}if(i>=3D534){j.version=3D"5.1"}else{if(i>=3D533){j.version=3D"5.0"}e=
lse{if(i>=3D526){j.version=3D"4.0"}else{if(i>=3D525){j.version=3D"3.1"}el=
se{if(i>500){j.version=3D"3.0"}else{if(i>400){j.version=3D"2.0"}else{if(i=
>85){j.version=3D"1.0"}}}}}}}j.isMobile=3D(navigator.appVersion.match(/Mo=
bile/i)!=3Dnull);j.noContextMenu=3Dj.isMobile},Firefox:function(j){if((j.=
version=3D=3D=3D"0.0"||h.match(/Firefox/)=3D=3Dnull)&&navigator.product=3D=
=3D=3D"Gecko"){var m=3Dh.match(/[\/ ]rv:(\d+\.\d.*?)[\) =
]/);if(m){j.version=3Dm[1]}else{var =
i=3D(navigator.buildID||navigator.productSub||"0").substr(0,8);if(i>=3D"2=
0111220"){j.version=3D"9.0"}else{if(i>=3D"20111120"){j.version=3D"8.0"}el=
se{if(i>=3D"20110927"){j.version=3D"7.0"}else{if(i>=3D"20110816"){j.versi=
on=3D"6.0"}else{if(i>=3D"20110621"){j.version=3D"5.0"}else{if(i>=3D"20110=
320"){j.version=3D"4.0"}else{if(i>=3D"20100121"){j.version=3D"3.6"}else{i=
f(i>=3D"20090630"){j.version=3D"3.5"}else{if(i>=3D"20080617"){j.version=3D=
"3.0"}else{if(i>=3D"20061024"){j.version=3D"2.0"}}}}}}}}}}}}j.isMobile=3D=
(navigator.appVersion.match(/Android/i)!=3Dnull||h.match(/ =
Fennec\//)!=3Dnull||h.match(/Mobile/)!=3Dnull)},Opera:function(i){i.versi=
on=3Dopera.version()},MSIE:function(j){j.isIE9=3D!!(document.documentMode=
&&(window.performance||window.msPerformance));MathJax.HTML.setScriptBug=3D=
!j.isIE9||document.documentMode<9;var w=3Dfalse;try{new =
ActiveXObject("MathPlayer.Factory.1");j.hasMathPlayer=3Dw=3Dtrue}catch(m)=
{}try{if(w&&!r.params.NoMathPlayer){var =
i=3Ddocument.createElement("object");i.id=3D"mathplayer";i.classid=3D"cls=
id:32F66A20-7614-11D4-BD11-00104BD3F987";document.getElementsByTagName("h=
ead")[0].appendChild(i);document.namespaces.add("m","http://www.w3.org/19=
98/Math/MathML");j.mpNamespace=3Dtrue;if(document.readyState&&(document.r=
eadyState=3D=3D=3D"loading"||document.readyState=3D=3D=3D"interactive")){=
document.write('<?import namespace=3D"m" =
implementation=3D"#MathPlayer">');j.mpImported=3Dtrue}}else{document.name=
spaces.add("mjx_IE_fix","http://www.w3.org/1999/xlink")}}catch(m){}}});c.=
Browser.Select(MathJax.Message.browsers);if(g.AuthorConfig&&typeof =
g.AuthorConfig.AuthorInit=3D=3D=3D"function"){g.AuthorConfig.AuthorInit()=
}c.queue=3Dg.Callback.Queue();c.queue.Push(["Post",r.signal,"Begin"],["Co=
nfig",r],["Cookie",r],["Styles",r],["Message",r],function(){var =
i=3Dg.Callback.Queue(r.Jax(),r.Extensions());return =
i.Push({})},["Menu",r],r.onLoad(),function(){MathJax.isReady=3Dtrue},["Ty=
peset",r],["Hash",r],["MenuZoom",r],["Post",r.signal,"End"])})("MathJax")=
}};=0A=

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/web-storage-cache.min.js

/*!=0A=
    web-storage-cache -- Added `expires` attribute and serialize data =
with `JSON.parse` for the localStorage and sessionStorage.=0A=
    Version 0.0.3=0A=
    https://github.com/WQTeam/web-storage-cache=0A=
    (c) 2013-2015 WQTeam, MIT license=0A=
*/=0A=
!function(a,b){"function"=3D=3Dtypeof =
define&&define.amd?define(b):"object"=3D=3Dtypeof =
exports?module.exports=3Db():a.WebStorageCache=3Db()}(this,function(){"us=
e strict";function a(a,b){for(var c in b)a[c]=3Db[c];return a}function =
b(a){var b=3D!1;if(a&&a.setItem){b=3D!0;var =
c=3D"__"+Math.round(1e7*Math.random());try{a.setItem(c,c),a.removeItem(c)=
}catch(d){b=3D!1}}return b}function c(a){var b=3Dtypeof =
a;return"string"=3D=3D=3Db?window[a]:a}function d(a){return"[object =
Date]"=3D=3D=3DObject.prototype.toString.call(a)&&!isNaN(a.getTime())}fun=
ction e(a,b){if(b=3Db||new Date,"number"=3D=3Dtypeof =
a?a=3Da=3D=3D=3D1/0?l:new Date(b.getTime()+1e3*a):"string"=3D=3Dtypeof =
a&&(a=3Dnew Date(a)),a&&!d(a))throw new Error("`expires` parameter =
cannot be converted to a valid Date instance");return a}function =
f(a){var b=3D!1;if(a)if(a.code)switch(a.code){case 22:b=3D!0;break;case =
1014:"NS_ERROR_DOM_QUOTA_REACHED"=3D=3D=3Da.name&&(b=3D!0)}else-214702488=
2=3D=3D=3Da.number&&(b=3D!0);return b}function g(a,b){this.c=3D(new =
Date).getTime(),b=3Db||l;var =
c=3De(b);this.e=3Dc.getTime(),this.v=3Da}function h(a){return a&&"c"in =
a&&"e"in a&&"v"in a?!0:!1}function i(a){var b=3D(new =
Date).getTime();return b<a.e}function j(a){return"string"!=3Dtypeof =
a&&(console.warn(a+" used as a key, but it is not a =
string."),a=3DString(a)),a}function k(d){var =
e=3D{storage:"localStorage",exp:1/0},f=3Da(e,d),g=3Dc(f.storage),h=3Db(g)=
;this.isSupported=3Dfunction(){return =
h},h?(this.storage=3Dg,this.quotaExceedHandler=3Dfunction(a,b,c){if(conso=
le.warn("Quota exceeded!"),c&&c.force=3D=3D=3D!0){var =
d=3Dthis.deleteAllExpires();console.warn("delete all expires CacheItem : =
["+d+"] and try execute `set` method =
again!");try{c.force=3D!1,this.set(a,b,c)}catch(e){console.warn(e)}}}):a(=
this,n)}var l=3Dnew Date("Fri, 31 Dec 9999 23:59:59 =
UTC"),m=3D{serialize:function(a){return =
JSON.stringify(a)},deserialize:function(a){return =
a&&JSON.parse(a)}},n=3D{set:function(){},get:function(){},"delete":functi=
on(){},deleteAllExpires:function(){},clear:function(){},add:function(){},=
replace:function(){},touch:function(){}},o=3D{set:function(b,c,d){if(b=3D=
j(b),d=3Da({force:!0},d),void 0=3D=3D=3Dc)return this["delete"](b);var =
e=3Dm.serialize(c),h=3Dnew =
g(e,d.exp);try{this.storage.setItem(b,m.serialize(h))}catch(i){f(i)?this.=
quotaExceedHandler(b,e,d,i):console.error(i)}return =
c},get:function(a){a=3Dj(a);var =
b=3D(this.storage.getItem(a),null);try{b=3Dm.deserialize(this.storage.get=
Item(a))}catch(c){return null}if(h(b)){if(i(b)){var d=3Db.v;return =
m.deserialize(d)}this["delete"](a)}return =
null},"delete":function(a){return =
a=3Dj(a),this.storage.removeItem(a),a},deleteAllExpires:function(){for(va=
r a=3Dthis.storage.length,b=3D[],c=3Dthis,d=3D0;a>d;d++){var =
e=3Dthis.storage.key(d),f=3Dnull;try{f=3Dm.deserialize(this.storage.getIt=
em(e))}catch(g){}if(null!=3D=3Df&&void 0!=3D=3Df.e){var h=3D(new =
Date).getTime();h>=3Df.e&&b.push(e)}}return =
b.forEach(function(a){c["delete"](a)}),b},clear:function(){this.storage.c=
lear()},add:function(b,c,d){b=3Dj(b),d=3Da({force:!0},d);try{var =
e=3Dm.deserialize(this.storage.getItem(b));if(!h(e)||!i(e))return =
this.set(b,c,d),!0}catch(f){return =
this.set(b,c,d),!0}return!1},replace:function(a,b,c){a=3Dj(a);var =
d=3Dnull;try{d=3Dm.deserialize(this.storage.getItem(a))}catch(e){return!1=
}if(h(d)){if(i(d))return =
this.set(a,b,c),!0;this["delete"](a)}return!1},touch:function(a,b){a=3Dj(=
a);var =
c=3D(this.storage.getItem(a),null);try{c=3Dm.deserialize(this.storage.get=
Item(a))}catch(d){return!1}if(h(c)){if(i(c))return =
this.set(a,this.get(a),{exp:b}),!0;this["delete"](a)}return!1}};return =
k.prototype=3Do,k});
------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/replace.min.js

$(function(){!function(){var oReplace=3D{wsCache:new =
WebStorageCache,replace:function(){var =
_this=3Dthis;$.ajax({type:"get",url:"http://internalapi.csdn.net/knowledg=
e/public/public/api/words?x-acl-token=3D9DeJLGuYSy/6nSmDQen5amEWUh0K",asy=
nc:!1,dataType:"jsonp",jsonp:"callback",success:function(resobj){var =
resData,storage,data;"ok"=3D=3Dresobj.msg&&(resData=3Dresobj.data,storage=
=3Dwindow.localStorage,data=3Deval(resData),_this.wsCache.isSupported()&&=
_this.wsCache.set("realData",resData,{exp:86400,force:!0}),_this.handle($=
("#article_content"),data))},error:function(){console.log("Send Ajax =
error ...")}})},handler:function(){var =
data,_this=3Dthis;_this.wsCache.deleteAllExpires(),data=3Dwindow.localSto=
rage.getItem("realData"),data?(data=3DJSON.parse(data).hasOwnProperty("v"=
)?JSON.parse(localStorage.getItem("realData")).v:JSON.parse(localStorage.=
getItem("realData")),data=3Deval(data),_this.handle($("#article_content")=
,data)):_this.replace()},handle:function(a,b){function m(a,b){n(a,b);var =
c=3Dl.replace(/(<p>|<p\s+([^>]+>))(((?!<\/p)[\s\S])+)<\/p>/gi,function(a,=
b,c,d){var e=3Dd.replace(/((<[^>]+>)*)([^<]*)/gim,function(a,b,c,d){var =
e,f,g,h,i,k;if(b||(b=3D""),d)if(0=3D=3Db.indexOf("<a")||0=3D=3D=3Dj.lengt=
h)d=3Dd;else{e=3D[];for(f in =
j)g=3Dj[f].reg,-1!=3D=3Dd.search(g)&&"contain"!=3Df&&(d=3Dd.replace(g,"{[=
("+f+")]}"),e.push(f));for(h=3D0;h<e.length;h++)i=3De[h],k=3Dj[i],d=3Dd.r=
eplace("{[("+i+")]}",'<a href=3D"'+k.url+"\" class=3D'replace_word' =
title=3D\""+k.tip+"\" target=3D'_blank' style=3D'color:#df3434; =
font-weight:bold;'>"+k.word+"</a>"),delete j[i]}else d=3D"";return =
b+d});return b+e+"</p>"});a.html(c)}function n(a,b){function m(a){var =
b=3D{$:"\\$","*":"\\*","(":"\\(",")":"\\)","+":"\\+",".":"\\.","?":"\\?",=
"^":"\\^","|":"\\|"};return =
String(a).replace(/[$*()+.?^|]/g,function(a){return b[a]})}var =
n,o,p,q,r,s,t,u,v,w,x,y,k=3Da.text(),l=3D!1;for(n=3D0;n<b.length;n++)if(o=
=3Db[n].word,p=3Dm(o),q=3D/([\u4e00-\u9fa5]+)\w*/gi.test(p)?p:"\\b"+p+"\\=
b",r=3Dnew =
RegExp(q,"i"),-1!=3D=3Dk.search(r)){if(d.length<=3D0)d.push(r+"");else =
for(s=3D0;s<d.length;s++)l=3Dr!=3Dd[s]?!0:!1;l&&d.push(r+""),d=3Dc.unique=
(d),t=3Db[n].url,u=3Db[n].name,v=3Db[n].logo,w=3Db[n].subCount,x=3Db[n].c=
onCount,y=3Db[n].word,e.push(t),f.push(u),g.push(v),h.push(w),i.push(x),j=
.push({word:y,url:t,tip:u,reg:r})}j=3Dc.uniqueObj(j)}function o(){var =
d,a=3D"",b=3Ddocument.getElementById("relate");if(f.length<=3D0)b.style.d=
isplay=3D"none";else{for(b.style.display=3D"block",f=3Dc.unique(f),e=3Dc.=
unique(e),f=3Dc.unique(f),g=3Dc.unique(g),h=3Dc.unique(h),i=3Dc.unique(i)=
,d=3D0;d<f.length;d++)a+=3D'<dl class=3D"relate_list" ><dt><a =
target=3D"_blank" href=3D"'+e[d]+'"><img src=3D"'+g[d]+'" =
alt=3D"img"/></a></dt><dd><h4><a target=3D"_blank" =
href=3D"'+e[d]+'">'+f[d]+"</a></h4><p><label><span>"+h[d]+"</span><em>=E5=
=85=B3=E6=B3=A8</em><i>|</i><span>"+i[d]+"</span><em>=E6=94=B6=E5=BD=95</=
em></label></p></dd></dl>";$(".relate_c").html(a)}}var =
k,l,c=3Dthis,d=3D[],e=3D[],f=3D[],g=3D[],h=3D[],i=3D[],j=3D[];for(k=3D0;k=
<b.length;k++)b[k].flg=3D!1;l=3Da.html(),m(a,b),o()},unique:function(a){v=
ar =
e,d,b=3D[],c=3D{};for(d=3D0;null!=3D(e=3Da[d]);d++)c[e]||(b.push(e),c[e]=3D=
!0);return b},uniqueObj:function(a){var =
d,b=3D[],c=3D[];if(a.length)for(b.push(a[0]),c.push(a[0].word),d=3D1;d<a.=
length;d++)c.push(a[d].word),c.indexOf(a[d].word)=3D=3Dd&&b.push(a[d]);re=
turn b},classStyle:function(){var =
a=3D$(".replace_word");a.css({color:"#df3434",fontWeight:"bold!important"=
})}};try{oReplace.classStyle(),oReplace.handler()}catch(error){return =
console.log(error.message),void 0}}.call(this)});
------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/category.js

=EF=BB=BF
$(function()
{
  =20
        var aCategory =3D $(".category_r label"),
            aClose =3D $(".category_r").find(".J_close");
        aCategory.click(function () {
            if ($(this).find(".subItem").is(":hidden")) {
                //close all
                var thisClickText =3D $(this).attr("onclick");

                $.each(aCategory, function (i) {
                    var thisCategory =3D $(aCategory[i]);
                    var thisCategoryText =3D =
thisCategory.attr("onclick");
                  =20
                    if (thisCategoryText !=3D thisClickText)
                    {
                        if =
(!thisCategory.find(".subItem").is(":hidden")) {
                            thisCategory.find(".arrow-up").hide().end()
                                .find(".arrow-down").show();
                            thisCategory.find(".subItem").hide();
                        }
                    }
                });

                $(this).find(".arrow-up").show().end()
                        .find(".arrow-down").hide();
                $(this).find(".subItem").show();

                //$("#body").css("overflow", "visible");
                //$("#main").css("overflow", "visible");              =20
            }
            else {
                $(this).find(".arrow-up").hide().end()
                       .find(".arrow-down").show();
                $(this).find(".subItem").hide();

               // $("#body").css("overflow", "hidden");
               // $("#main").css("overflow", "hidden");
            }
        });
        aClose.click(function () {
            $(this).parents(".subItem").hide()
                    .siblings(".arrow-up").hide()
                    .siblings(".arrow-down").show();

            //$("#body").css("overflow", "hidden");
            //$("#main").css("overflow", "hidden");

            return false;
        });

     $(".similar_c_t label span").click(function () {        =20
         $(".similar_cur").removeClass("similar_cur");
         $(this).parent().addClass("similar_cur");
     });
})

function GetCategoryArticles(id,username,type,aid)
{
    var topid =3D "top_" + id;

    if (type =3D=3D "top") {
        var objtop =3D $("#" + topid +" li");
        if (objtop.length > 0)
        {
            return;
        }
    }
    var url =3D "/" + username + "/svc/GetCategoryArticleList?id=3D" + =
id + "&type=3D"+ type;
	//url=3D"http://dev.blog.csdn.net:5391"+url;
	$.get(url, function (res) {	 =20

	    if (type =3D=3D "top")
	    {
	        var objtop =3D $("#" + topid);
	        objtop.html("");	      =20
	        $(res).each(function (i) {
	            var obj =3D res[i];
	            if (aid !=3D obj.articleid) {	            =20
	                var articleurl =3D "http://blog.csdn.net/" + username + =
"/article/details/" + obj.articleid;
	                var aritcleid =3D "top_aritcle_" + obj.articleid + =
Math.random().toString().replace("0.");
	                objtop.append("<li class=3D\"tracking-ad\" =
data-mod=3D\"popu_140\"><em>=E2=80=A2</em><a href=3D'" + articleurl + "' =
 id=3D'" + aritcleid + "' target=3D\"_blank\"></a></li> ");
	                $("#" + aritcleid).text(obj.title);
	                $("#" + aritcleid).attr("title",obj.title);
	            }
	        });

	        var count =3D =
$(objtop.parent().parent().find("em")[0]).text().replace("=EF=BC=88", =
"").replace("=EF=BC=89", "");
	        if (parseInt(count) > 5)
	        {
	            var moreurl =3D objtop.parent().find(".subItem_t =
a").attr("href");
	            objtop.append("<li style=3D\"padding-left: 300px;\"><a =
href=3D'" + moreurl + "' =
target=3D\"_blank\">=E6=9B=B4=E5=A4=9A</a></li>");
	        }

	    }
	    else if (type =3D=3D "foot")
	    {	       	      =20
	        var objfootleft =3D $(".similar_list.fl");
	        var objfootright =3D $(".similar_list.fr");

	        objfootleft.html("");
	        objfootright.html("");

	        var j =3D 0;

	        $.each(res, function (i) {	           =20
	            var obj =3D res[i];
	            if (aid !=3D obj.articleid) {
	                var articleurl =3D "http://blog.csdn.net/" + username + =
"/article/details/" + obj.articleid;
	                var aritcleid =3D "foot_aritcle_" + obj.articleid + =
Math.random().toString().replace("0.");

	                var html =3D "<li><em>=E2=80=A2</em><a href=3D'" + =
articleurl + "'  id=3D'" + aritcleid + "' =
target=3D\"_blank\"></a><span>" + obj.posttime + =
"</span><label><i>=E9=98=85=E8=AF=BB</i><b>" + obj.viewcount + =
"</b></label></li> ";
	                if (j % 2 =3D=3D 1) {
	                    objfootright.append(html);
	                }
	                else {
	                    objfootleft.append(html);
	                }
	                $("#" + aritcleid).text(obj.title);
	                $("#" + aritcleid).attr("title",obj.title);
	                j++;

	                $(".similar_article").show();
	            }
	        });

	        var count =3D $(".similar_cur span =
em").text().replace("=EF=BC=88", "").replace("=EF=BC=89", "");
	        if (parseInt(count) > 10) {
	            var moreurl =3D"";
	            $.each($(".subItem_t a"), function (i) {
	                if($(this).attr("href").toString().indexOf(id)>-1)
	                {
	                    moreurl =3D $(this).attr("href");	                  =
 =20
	                }
	            });
	            if (moreurl !=3D "") {
	                //objfootright.append("<li style=3D\"padding-left: =
200px;\"><a href=3D'" + moreurl + "' =
target=3D\"_blank\">=E6=9B=B4=E5=A4=9A</a></li>");
	                $(".MoreArticle").remove();
	                $(".similar_wrap").append('<a href=3D' + moreurl + ' =
class=3D"MoreArticle">=E6=9B=B4=E5=A4=9A=E6=96=87=E7=AB=A0</a>');
	            }
	        }
	    }
	});
}
------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://csdnimg.cn/jobreco/job_reco.js

/*
UI=E5=9C=B0=E5=9D=80=EF=BC=9A\\192.168.6.119\=E4=BA=A7=E5=93=81=E7=AE=A1=E7=
=90=86\2_=E6=95=B0=E6=8D=AE=E6=94=AF=E6=92=91\03_UI\=E8=81=8C=E4=BD=8D=E6=
=8E=A8=E8=8D=90
=E5=BC=95=E7=94=A8=E6=96=B9=E6=B3=95=EF=BC=9A<script =
src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
=E8=B0=83=E7=94=A8=E6=96=B9=E6=B3=95=EF=BC=9Acsdn.position.show({
sourceType: "", =
//=E5=8D=9A=E5=AE=A2blog=EF=BC=8C=E8=AE=BA=E5=9D=9Bdiscussion_topic, =
=E4=B8=8B=E8=BD=BD download=EF=BC=8C=E9=97=AE=E7=AD=94ask_topic, =
=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4space=EF=BC=9F=EF=BC=9F, =
=E8=8B=B1=E9=9B=84=E4=BC=9Ahero=EF=BC=9F=EF=BC=9F, =
=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD course, csto
tplType: "", //=E6=A8=A1=E6=9D=BF=E7=B1=BB=E5=9E=8B=EF=BC=8C
               =E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=EF=BC=9AblogDetail,
               =E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=EF=BC=9AblogSpec,
               =
=E8=AE=BA=E5=9D=9B=E8=AF=A6=E6=83=85=EF=BC=9AbbsDetail=EF=BC=8C
               =
=E9=97=AE=E7=AD=94=E8=AF=A6=E6=83=85=EF=BC=9AaskDetail=EF=BC=8C
               =
=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4--=E6=88=91=E7=9A=84=E7=A9=BA=E9=97=B4=
=EF=BC=9ApersonalSpaceMy=EF=BC=8C
               =
=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4--=E9=A6=96=E9=A1=B5=EF=BC=9Apersonal=
SpaceHome=EF=BC=8C
               =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E9=A6=96=E9=A1=B5=EF=BC=9AheroHome
               =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E7=AD=94=E9=A2=98=E4=B8=93=E5=AE=B6=E7=BB=84=
=EF=BC=9AheroExpert
               =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=8C=91=E6=88=98=E9=A2=98=E7=9B=AE=E8=AF=A6=
=E6=83=85=E9=A1=B5=EF=BC=9AheroFightDetail
               =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=88=91=E7=9A=84=E8=8B=B1=E9=9B=84=E4=BC=9A=
=EF=BC=9AheroMy
               =
=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E5=88=86=E7=B1=BB=
=E5=88=97=E8=A1=A8=EF=BC=9A=E6=97=A0
               =
=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E8=AF=A6=E6=83=85=
=E9=A1=B5=EF=BC=9AeduDetail
               =E6=90=9C=E7=B4=A2=EF=BC=9Asearch
               =
=E4=B8=8B=E8=BD=BD--=E6=88=91=E7=9A=84=E8=B5=84=E6=BA=90=EF=BC=9AdownMy
               =
=E4=B8=8B=E8=BD=BD--=E4=B8=8B=E8=BD=BD=E9=A1=B5=E5=92=8C=E4=B8=8B=E8=BD=BD=
=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9AdownDetail

               =
CSTO=E6=A1=88=E4=BE=8B=E5=BA=93=E5=88=97=E8=A1=A8=EF=BC=9AcstoCaseList
               =
CSTO=E6=A1=88=E4=BE=8B=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9AcstoCaseDetail
               CSTO=E6=88=91=E7=9A=84T=E5=8F=B0=EF=BC=9AcstoMy
               =
CSTO=E9=A1=B9=E7=9B=AE=E5=88=97=E8=A1=A8=E9=A1=B5=EF=BC=9AcstoProjectList=

               =
CSTO=E9=A1=B9=E7=9B=AE=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9AcstoProjectDeta=
il

searchType: "", =
//=E9=A1=B5=E9=9D=A2=E7=B1=BB=E5=9E=8B=EF=BC=8C=E7=94=A8=E4=BA=8E=E6=90=9C=
=E7=B4=A2=E5=87=BD=E6=95=B0=EF=BC=8Cdetail(=E8=AF=A6=E6=83=85=E9=A1=B5) =
/ list(=E5=88=97=E8=A1=A8=E9=A1=B5)=E3=80=82
searchKey: "", =
//=E6=90=9C=E7=B4=A2=E5=85=B3=E9=94=AE=E5=AD=97=EF=BC=8C=E4=BE=8B=E5=A6=82=
=E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=EF=BC=9A=E5=8D=9A=E6=96=87ID=EF=BC=8C=
=E5=A6=82=E6=9E=9C=E6=98=AF=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=EF=BC=9A=E5=
=88=86=E7=B1=BB=E5=AD=97=E7=AC=A6=E4=B8=B2=E3=80=82
username: "", =
//=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D
containerId: "" //=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
});
=E4=B8=BE=E4=BE=8B=EF=BC=9A
=E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=E9=A1=B5
<div id=3D"job_blog_reco">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
   csdn.position.show({
     sourceType: "blog",
     tplType: "blogDetail",
     searchType: "detail",
     searchKey: "=E5=8D=9A=E6=96=87ID",
     username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
     containerId: "job_blog_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
 </script>
</div>

=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=E9=A1=B5
<div id=3D"job_blog_reco_spec">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
   csdn.position.show({
     sourceType: "blog",
     tplType: "blogSpec",
     searchType: "list",
     searchKey: =
"=E4=B8=93=E6=A0=8F=E5=88=86=E7=B1=BB=E5=AD=97=E7=AC=A6=E4=B8=B2",
     username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
     containerId: "job_blog_reco_spec"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
 </script>
</div>

=E8=AE=BA=E5=9D=9B=E8=AF=A6=E6=83=85=E9=A1=B5
<div id=3D"job_bbs_reco">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
   csdn.position.show({
     sourceType: "discussion_topic",
     tplType: "bbsDetail",
     searchType: "detail",
     searchKey: "=E8=B4=B4=E5=AD=90ID",
     username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
     containerId: "job_bbs_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
 </script>
</div>

=E9=97=AE=E7=AD=94=E8=AF=A6=E6=83=85=E9=A1=B5
<div id=3D"job_ask_reco">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
   csdn.position.show({
     sourceType: "ask_topic",
     tplType: "askDetail",
     searchType: "detail",
     searchKey: "=E9=97=AE=E9=A2=98ID",
     username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
     containerId: "job_ask_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
 </script>
</div>

=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4--=E6=88=91=E7=9A=84=E7=A9=BA=E9=97=B4=

<div id=3D"job_myspace_reco">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
   csdn.position.show({
     sourceType: "my",
     tplType: "personalSpaceMy",
     searchType: "list",
     searchKey: "NO",
     username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
     containerId: "job_myspace_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
 </script>
</div>
=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4--=E9=A6=96=E9=A1=B5
<div id=3D"job_myhome_reco">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
   csdn.position.show({
     sourceType: "my",
     tplType: "personalSpaceHome",
     searchType: "list",
     searchKey: "NO",
     username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
     containerId: "job_myhome_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
  });
 </script>
</div>







 =
=E8=8B=B1=E9=9B=84=E4=BC=9A-=E9=A6=96=E9=A1=B5=EF=BC=8C=E6=AD=A3=E5=9C=A8=
=E5=8F=91=E7=94=9F=E7=9A=84=E4=B8=8B=E9=9D=A2=E3=80=82
 http://hero.csdn.net/
 <div id=3D"job_yx_home_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "hero",
   tplType: "heroHome",
   searchType: "list",
   searchKey: "NO",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_yx_home_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E7=AD=94=E9=A2=98=E4=B8=93=E5=AE=B6=E7=BB=84=
=EF=BC=8C=E5=AE=A1=E9=A2=98=E4=B8=93=E5=AE=B6=E7=BB=84=E4=B8=8B=E9=9D=A2=E3=
=80=82
 http://hero.csdn.net/Examine/Apply
 <div id=3D"job_yx_expert_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "hero",
   tplType: "heroExpert",
   searchType: "list",
   searchKey: "NO",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_yx_expert_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=8C=91=E6=88=98=E9=A2=98=E7=9B=AE=E8=AF=A6=
=E6=83=85=E9=A1=B5=EF=BC=8C=E5=8F=91=E5=B8=83=E5=85=AC=E5=8F=B8=E4=B8=8B=E9=
=9D=A2=E3=80=82
 =
http://hero.csdn.net/OnlineCompiler/Index?ID=3D10646&ExamID=3D10649&from=3D=
4
 <div id=3D"job_yx_fight_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "hero",
   tplType: "heroFightDetail",
   searchType: "list",
   searchKey: "NO",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_yx_fight_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>


 =
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=88=91=E7=9A=84=E8=8B=B1=E9=9B=84=E4=BC=9A=
=EF=BC=8C=E5=88=97=E8=A1=A8=E7=9A=84=E4=B8=8B=E9=9D=A2=E3=80=82
 http://hero.csdn.net/Exam/List
 <div id=3D"job_yx_my_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "hero",
   tplType: "heroMy",
   searchType: "list",
   searchKey: "NO",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_yx_my_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>


 =
=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E5=88=86=E7=B1=BB=
=E5=88=97=E8=A1=A8
 <div id=3D"job_edu_detail_reco">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
 csdn.position.show({
 sourceType: "course",
 tplType: "eduDetail",
 searchType: "list",
 searchKey: =
"=E9=A1=B5=E9=9D=A2=E4=B8=8A=E7=9A=84=E6=90=9C=E7=B4=A2=E7=B1=BB=E5=9E=8B=
",
 username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
 containerId: "job_edu_detail_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
 });
 </script>
 </div>




 =
=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E8=AF=A6=E6=83=85=
=E9=A1=B5=EF=BC=8C=E5=9C=A8=E5=8F=B3=E4=BE=A7=E6=8E=A8=E8=8D=90=E8=AF=BE=E7=
=A8=8B=E4=B8=8B=E8=BE=B9=E3=80=82
 http://edu.csdn.net/course/detail/326
 <div id=3D"job_edu_detail_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "course",
   tplType: "eduDetail",
   searchType: "detail",
   searchKey: "=E8=AF=BE=E7=A8=8BID",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_edu_detail_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>



 =E6=90=9C=E7=B4=A2
 http://so.csdn.net/so/search/s.do?q=3Djava
 <div id=3D"job_search_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: =
"all=EF=BC=88=E8=AF=A5=E5=85=B3=E9=94=AE=E5=AD=97=E6=9A=82=E6=97=B6=E4=B8=
=8D=E8=A2=AB=E4=BD=BF=E7=94=A8=EF=BC=89",
   tplType: "search",
   searchType: "list",
   searchKey: "=E6=90=9C=E7=B4=A2=E5=85=B3=E9=94=AE=E5=AD=97",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_search_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =E4=B8=8B=E8=BD=BD--=E6=88=91=E7=9A=84=E8=B5=84=E6=BA=90
 http://so.csdn.net/so/search/s.do?q=3Djava
 <div id=3D"job_down_my_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "download",
   tplType: "downMy",
   searchType: "list",
   searchKey: "NO",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_down_my_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =
=E4=B8=8B=E8=BD=BD--=E4=B8=8B=E8=BD=BD=E9=A1=B5=E5=92=8C=E4=B8=8B=E8=BD=BD=
=E8=AF=A6=E6=83=85=E9=A1=B5
 http://so.csdn.net/so/search/s.do?q=3Djava
 <div id=3D"job_down_detail_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "download",
   tplType: "downDetail",
   searchType: "detail",
   searchKey: "=E8=B5=84=E6=BA=90ID",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_down_detail_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =
CSTO-=E6=A1=88=E4=BE=8B=E5=BA=93=E5=88=97=E8=A1=A8=EF=BC=8C=E6=94=BE=E5=9C=
=A8=E2=80=9C=E4=B8=8A=E5=91=A8=E6=9C=80=E5=8F=97=E6=AC=A2=E8=BF=8E=E2=80=9D=
=E4=B8=8B=E8=BE=B9=E3=80=82
 http://www.csto.com/case
 <div id=3D"job_csto_caselist_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "csto",
   tplType: "cstoCaseList",
   searchType: "list",
   searchKey: =
"=E7=AD=9B=E9=80=89=E6=9D=A1=E4=BB=B6=E9=87=8C=E7=9A=84=E7=83=AD=E9=97=A8=
=E5=88=86=E7=B1=BB=E5=92=8C=E7=83=AD=E9=97=A8=E6=8A=80=E6=9C=AF=EF=BC=8C=E9=
=80=97=E5=8F=B7=E5=88=86=E9=9A=94",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_csto_caselist_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =
CSTO-=E6=A1=88=E4=BE=8B=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=8C=E6=94=BE=E5=9C=
=A8=E2=80=9C=E6=9C=80=E8=BF=91=E6=B5=8F=E8=A7=88=E8=BF=87=E7=9A=84=E4=BA=BA=
=E2=80=9D=E4=B8=8B=E8=BE=B9=E3=80=82
 http://www.csto.com/case/show/id:21740
 <div id=3D"job_csto_casedetail_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "csto",
   tplType: "cstoCaseDetail",
   searchType: "detail",
   searchKey: "=E6=A1=88=E4=BE=8BID",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_csto_casedetail_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 =
CSTO-=E6=88=91=E7=9A=84T=E5=8F=B0=EF=BC=8C=E6=94=BE=E5=9C=A8=E2=80=9C=E6=88=
=91=E7=9A=84=E8=B5=84=E6=96=99=E2=80=9D=E4=B8=8B=E8=BE=B9=E3=80=82
 http://www.csto.com/my/info/edit
 <div id=3D"job_csto_my_reco1">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "csto",
   tplType: "cstoMy",
   searchType: "list",
   searchKey: "NO",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_csto_my_reco1"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>

 CSTO-=E9=A1=B9=E7=9B=AE=E5=88=97=E8=A1=A8=E9=A1=B5
 http://www.csto.com/project/list
 <div id=3D"job_csto_projlist_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "csto",
   tplType: "cstoProjectList",
   searchType: "list",
   searchKey: =
"=E7=AD=9B=E9=80=89=E6=9D=A1=E4=BB=B6=E9=87=8C=E7=9A=84=E7=83=AD=E9=97=A8=
=E5=88=86=E7=B1=BB=E5=92=8C=E7=83=AD=E9=97=A8=E6=8A=80=E6=9C=AF=EF=BC=8C=E9=
=80=97=E5=8F=B7=E5=88=86=E9=9A=94",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_csto_projlist_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>



 CSTO-=E9=A1=B9=E7=9B=AE=E8=AF=A6=E6=83=85=E9=A1=B5
 http://www.csto.com/p/72969
 <div id=3D"job_csto_projdetail_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
   csdn.position.show({
   sourceType: "csto",
   tplType: "cstoProjectDetail",
   searchType: "detail",
   searchKey: "=E9=A1=B9=E7=9B=AEID",
   username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
   containerId: "job_csto_projdetail_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
   });
   </script>
 </div>



//-----------------------------------------------------------------------=
-------------------------------------------
=E8=AF=BE=E7=A8=8B=E6=8E=A8=E8=8D=90
//-----------------------------------------------------------------------=
-------------------------------------------

 =
=E6=90=9C=E7=B4=A2=E9=A1=B5=E7=9A=84=E5=9F=B9=E8=AE=AD=E6=8E=A8=E8=8D=90
 http://so.csdn.net/so/search/s.do?q=3Djava
 <div id=3D"edu_so_reco">
   <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
   <script type=3D"text/javascript">
       csdn.position.showEdu({
           sourceType: "so",
           searchType: "detail",
           searchKey: "=E6=90=9C=E7=B4=A2=E5=85=B3=E9=94=AE=E5=AD=97",
           username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
           recordcount: "4",
           containerId: "edu_so_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
       });
   </script>
 </div>


=E6=90=9C=E7=B4=A2=E7=BB=93=E6=9E=9C=E9=A1=B5


 =
=E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=E9=A1=B5=E5=B0=86=E5=8E=9F=E6=9D=A5=E7=
=9A=84adCollege=E6=B3=A8=E9=87=8A=E6=8E=89=EF=BC=8C=E5=85=B6=E7=9B=B8=E5=90=
=8C=E4=BD=8D=E7=BD=AE=E6=94=BE=E7=BD=AE=E5=A6=82=E4=B8=8Bdiv=E3=80=82
=E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=E9=A1=B5
 http://blog.csdn.net/hu1991die/article/details/45564465
 <div id=3D"adCollege" style=3D"width: 42%;float: left;">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
     csdn.position.showEdu({
         sourceType: "blog",
         searchType: "detail",
         searchKey: "=E5=8D=9A=E6=96=87id",
         username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
         recordcount: "5",
         containerId: "adCollege"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
     });
 </script>
 </div>


 =
=E4=B8=8B=E8=BD=BD=E8=AF=A6=E6=83=85=E9=A1=B5=E5=B0=86=E5=8E=9F=E6=9D=A5=E7=
=9A=84related =
po_down_detail_big_div=E6=B3=A8=E9=87=8A=E6=8E=89=EF=BC=8C=E5=85=B6=E7=9B=
=B8=E5=90=8C=E4=BD=8D=E7=BD=AE=E6=94=BE=E7=BD=AE=E5=A6=82=E4=B8=8Bdiv=E3=80=
=82
=E4=B8=8B=E8=BD=BD=E8=AF=A6=E6=83=85=E9=A1=B5
 http://download.csdn.net/detail/dudud20/8662993
 <div id=3D"edu_down_reco" class=3D"related po_down_detail_big_div">
 <script src=3D"http://csdnimg.cn/jobreco/job_reco.js" =
type=3D"text/javascript"></script>
 <script type=3D"text/javascript">
     csdn.position.showEdu({
         sourceType: "down",
         searchType: "detail",
         searchKey: "=E4=B8=8B=E8=BD=BD=E8=B5=84=E6=BA=90id",
         username: =
"=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=90=8D",
         recordcount: "5",
         containerId: "edu_down_reco"  =
//=E5=AE=B9=E5=99=A8DIV=E7=9A=84id=E3=80=82
     });
 </script>
 </div>






//-----------------------------------------------------------------------=
-------------------------------------------
//-----------------------------------------------------------------------=
-------------------------------------------



*/
$(document).ready(function() {
  var i =3D 1;
});
(function (window) {
  var csdn =3D window.csdn || {};
  function Position() {
    this.prefix =3D window.location.protocol;


    $("<link>")
      .attr({ rel: "stylesheet",
        type: "text/css",
        href: window.location.protocol + =
"//csdnimg.cn/jobreco/job_reco.css" =
//"//c.csdnimg.cn/jobreco/job_reco.css"//
      })
      .appendTo("head");

    /*
     http://blog.csdn.net/lmj623565791/article/details/42407923#t7
     http://blog.csdn.net/column.html
     http://bbs.csdn.net/topics/390963719
     http://ask.csdn.net/
     http://my.csdn.net/
     http://my.csdn.net/my/mycsdn
     http://hero.csdn.net/
    */

    //=E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=EF=BC=9AtplType =3D =
blogDetail
    this.blogTpl =3D '<dl class=3D"blog-ass-articl tracking-ad" =
data-mod=3D"{0}">' +
      =
'<dt><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F&nbsp;<l=
abel class=3D"po_blg_detail_tiao">=E8=B7=B3</label><label =
class=3D"po_blg_detail_ba">=E5=90=A7</label><label =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</label></span>' +
      '<a href=3D"{1}" target=3D"_blank" =
class=3D"po_blg_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=
=A8&nbsp;<label class=3D"po_blg_detail_csdn">CSDN JOB</label></a></dt>' =
+
      '{2}' +
      '</dl>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36  =
  //{1}=EF=BC=8Chttp, https ://job.csdn.net    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.blogItem =3D '<dd class=3D"po_blg_dd">' +
      '<div class=3D"po_blg_po">' +
      '<a href=3D"{0}" title=3D"{1}" strategy=3D"{8}" =
target=3D"_blank">{2}</a>' +
      '</div>' +
      '<div class=3D"po_blg_company">' +
      '<a href=3D"{3}" title=3D"{4}" target=3D"_blank">{5}</a>' +
      '</div>' +
      '<label class=3D"po_blg_separator">|</label>' +
      '<div class=3D"po_blg_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<a class=3D"po_blg_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</dd>' ;
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    //=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=EF=BC=9AtplType =3D blogSpec
    this.blogSpecTpl =3D '<div class=3D"box_1 tracking-ad" =
data-mod=3D"{0}">' +
      '<div style=3D"position: relative;">' +
      =
'<h2>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F&nbsp;<label =
class=3D"po_blg_detail_tiao">=E8=B7=B3</label><label =
class=3D"po_blg_detail_ba">=E5=90=A7</label><label>&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</label></h2>'=
 +
      '</div>' +
      '<ul class=3D"list_comm">' +
      '{2}' +
      '</ul>' +
      '<div class=3D"po_blg_spec_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_blg_spec_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_blg_spec_csdn">CSDN =
JOB</label></a></div>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.blogSpecItem =3D '<li>' +
      '<div class=3D"po_blg_spec_po">' +
      '<a href=3D"{0}" title=3D"{1}" strategy=3D"{8}" =
target=3D"_blank">{2}</a>' +
      '</div>' +
      '<div class=3D"po_blg_spec_company">' +
      '<a href=3D"{3}" title=3D"{4}" target=3D"_blank">{5}</a>' +
      '</div>' +
      '<div class=3D"po_blg_spec_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div><a class=3D"po_blg_spec_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a></div>' +
      '</li>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    //=E8=AE=BA=E5=9D=9B=E8=AF=A6=E6=83=85=EF=BC=9AtplType =3D bbsDetail
    this.bbsTpl =3D '<div id=3D"topic-suggest" class=3D"po_bbs_div =
tracking-ad" data-mod=3D"{0}">' +
      '<div class=3D"related-tags po_bbs_tit_div">' +
      =
'<span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F&nbsp;<label=
 class=3D"po_blg_detail_tiao">=E8=B7=B3</label><label =
class=3D"po_blg_detail_ba">=E5=90=A7</label><label>&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</label></span=
>' +
      '<a class=3D"po_bbs_more" href=3D"{1}" =
target=3D"_blank">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=A8&=
nbsp;<label class=3D"po_bbs_csdn">CSDN JOB</label></a>' +
      '</div>' +
      '<div class=3D"related-topics po_bbs_item_div">' +
      '<ul>' +
      '{2}' +
      '</ul>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.bbsItem =3D '<li class=3D"po_bbs_li"><div class=3D"po_bbs_po">' =
+
      '<a href=3D"{0}" title=3D"{1}" strategy=3D"{8}" =
target=3D"_blank">{2}</a>' +
      '</div>' +
      '<div class=3D"po_bbs_company">' +
      '<a href=3D"{3}" title=3D"{4}" target=3D"_blank">{5}</a>' +
      '</div>' +
      '<label class=3D"po_bbs_separator">|</label>' +
      '<div class=3D"po_bbs_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div><a class=3D"po_bbs_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a></div>' +
      '</li>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    //=E9=97=AE=E7=AD=94=E9=A6=96=E9=A1=B5=EF=BC=9AtplType =3D askDetail
    this.askTpl =3D '<div class=3D"mod_other_ask hot_tags po_ask_div =
tracking-ad" data-mod=3D"{0}">' +
      '<div class=3D"other_ask">' +
      =
'<h3><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F&nbsp;<l=
abel class=3D"po_ask_tiao">=E8=B7=B3</label><label =
class=3D"po_ask_ba">=E5=90=A7</label><label =
class=3D"po_blg_detail_th">=EF=BC=81</label></span></h3>' +
      '<div class=3D"po_ask_div_list">' +
      '{2}' +
      '</div>' +
      '<div class=3D"po_ask_more_div"><a href=3D"{1}" target=3D"_blank" =
class=3D"po_ask_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=
=A8&nbsp;<label class=3D"po_my_home_csdn">CSDN JOB</label></a></div>' +
      '</div>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.askItem =3D '<div class=3D"po_ask_item_div">' +
      '<div class=3D"po_ask_po">' +
      '<a href=3D"{0}" title=3D"{1}" strategy=3D"{8}" =
target=3D"_blank">{2}</a>' +
      '</div>' +
      '<div class=3D"po_ask_salary">' +
      '<a href=3D"{6}" target=3D"_blank">{7}</a>' +
      '</div>' +
      '<div class=3D"po_ask_company">' +
      '<a href=3D"{3}" title=3D"{4}" target=3D"_blank">{5}</a>' +
      '</div>' +
      '<a class=3D"po_ask_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    =
//=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4-=E9=A6=96=E9=A1=B5=EF=BC=9AtplType=
 =3D personalSpaceHome
    this.perSpaceHomeTpl =3D '<div class=3D"phr_third clearfix =
tracking-ad" data-mod=3D"{0}">' +
      '<div class=3D"phr_third_tit po_my_home_tit">' +
      '<div class=3D"phrt_t =
po_my_home_t">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F&nbsp=
;<label class=3D"po_my_my_tiao">=E8=B7=B3</label><label =
class=3D"po_my_my_ba">=E5=90=A7</label><label =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;=EF=BC=81</label></div>' +
      '</div>' +
      '<div class=3D"phr_third_con po_my_home_div">' +
      '{2}' +
      '</div>' +
      '<div class=3D"po_my_home_more"><a href=3D"{1}" target=3D"_blank" =
class=3D"po_my_home_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_my_home_csdn">CSDN JOB</label></a></div>' =
+
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.perSpaceHomeItem =3D '<div class=3D"po_my_home_item_div =
clearfix">' +
      '<div class=3D"po_my_home_po"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_my_home_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_my_home_company"><a href=3D"{3}" title=3D"{4}" =
target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_my_home_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    =
//=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4-=E6=88=91=E7=9A=84=EF=BC=9AtplType=
 =3D personalSpaceMy
    this.perSpaceMyTpl =3D '<div class=3D"interested_con tracking-ad" =
data-mod=3D"{0}" style=3D"display: block;">' +
      '<h3 =
class=3D"po_my_my_h3">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=
=9F&nbsp;<label class=3D"po_my_my_tiao">=E8=B7=B3</label><label =
class=3D"po_my_my_ba">=E5=90=A7</label><label =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;=EF=BC=81</label></h3>' +
      '{2}' +
      '<div class=3D"po_my_my_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_my_my_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=
=A8&nbsp;<label class=3D"po_my_my_csdn">CSDN JOB</label></a></div>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.perSpaceMyItem =3D '<div class=3D"po_my_my_item_div">' +
      '<div class=3D"po_my_my_po">' +
      '<a class=3D"po_my_my_po_a" href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a>' +
      '</div>' +
      '<div class=3D"po_my_my_salary">' +
      '<a href=3D"{6}" target=3D"_blank">{7}</a>' +
      '</div>' +
      '<div class=3D"po_my_my_company">' +
      '<a href=3D"{3}" title=3D"{4}" target=3D"_blank">{5}</a>' +
      '</div>' +
      '<a class=3D"po_my_my_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5    =
//{9}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5


    //=E8=8B=B1=E9=9B=84=E4=BC=9A--=E9=A6=96=E9=A1=B5
    this.heroHomeTpl =3D '<div class=3D"her_topic_right tracking-ad" =
data-mod=3D"{0}">' +
      '<h3 =
class=3D"haping_t">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F=
&nbsp;<span class=3D"po_yx_home_tiao">=E8=B7=B3</span><span =
class=3D"po_yx_home_ba">=E5=90=A7</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '{2}' +
      '<div class=3D"po_yx_home_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_yx_home_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_yx_home_csdn">CSDN JOB</label></a></div>' =
+
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.heroHomeItem =3D '<div class=3D"her_platform =
po_yx_home_item_div">' +
      '<div class=3D"po_yx_home_po"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_yx_home_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_yx_home_company"><a href=3D"{3}" title=3D"{4}" =
target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_yx_home_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    =
//=E8=8B=B1=E9=9B=84=E4=BC=9A--=E7=AD=94=E9=A2=98=E4=B8=93=E5=AE=B6=E7=BB=
=84
    this.heroExpertTpl =3D '<div class=3D"her-r-expli po_yx_ex_div =
tracking-ad" data-mod=3D"{0}">' +
      '<h3 class=3D"tit"><span =
class=3D"po_yx_ex_tit">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=
=9F&nbsp;</span><label class=3D"po_yx_home_tiao =
px_yx_ex_tiao">=E8=B7=B3</label><label class=3D"po_yx_home_ba =
px_yx_ex_ba">=E5=90=A7</label><span =
class=3D"po_yx_ex_tit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;=EF=BC=81</span></h3>' +
      '{2}' +
      '<div class=3D"po_yx_ex_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_yx_ex_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=
=A8&nbsp;<label class=3D"po_yx_ex_csdn">CSDN JOB</label></a></div>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.heroExpertItem =3D '<dl class=3D"her-r-explicon =
po_yx_ex_po_item_div">' +
      '<dt class=3D"po_yx_ex_po"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></dt>' +
      '<dd class=3D"po_yx_ex_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></dd>' +
      '<dd class=3D"py_yx_ex_company"><a href=3D"{3}" title=3D"{4}" =
target=3D"_blank">{5}</a></dd>' +
      '<a class=3D"po_yx_ex_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</dl>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    =
//=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=8C=91=E6=88=98=E9=A2=98=E7=9B=AE=E8=AF=
=A6=E6=83=85=E9=A1=B5
    this.heroFightDetailTpl =3D '<div class=3D"her_format_right =
py_yx_fd_div tracking-ad" data-mod=3D"{0}">' +
      '<h3 =
class=3D"po_yx_fd_tit"><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=
=EF=BC=9F&nbsp;</span><label =
class=3D"po_yx_home_tiao">=E8=B7=B3</label><label =
class=3D"po_yx_home_ba">=E5=90=A7</label><span>&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '{2}' +
      '<div class=3D"po_yx_fd_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_yx_fd_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=
=A8&nbsp;<label class=3D"po_yx_fd_csdn">CSDN JOB</label></a></div>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.heroFightDetailItem =3D '<div class=3D"po_yx_fd_item_div">' +
      '<div class=3D"po_yx_fd_po"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_yx_fd_company"><a href=3D"{3}" title=3D"{4}" =
target=3D"_blank">{5}</a></div>' +
      '<div class=3D"po_yx_fd_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div><a class=3D"po_yx_fd_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a></div>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    =
//=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=88=91=E7=9A=84=E8=8B=B1=E9=9B=84=E4=BC=
=9A
    this.heroMyTpl =3D '<div class=3D"her-resultli po_yx_my_div =
tracking-ad" data-mod=3D"{0}">' +
      =
'<h3><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F&nbsp;</=
span><label class=3D"po_yx_home_tiao">=E8=B7=B3</label><label =
class=3D"po_yx_home_ba">=E5=90=A7</label><span>&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span>' +
      '<a href=3D"{1}" target=3D"_blank" =
class=3D"po_yx_my_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=
=A8&nbsp;<label class=3D"po_yx_my_csdn">CSDN JOB</label></a></h3>' +
      '{2}' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.heroMyItem =3D '<div class=3D"po_yx_my_item_div">' +
      '<div class=3D"po_yx_my_item_dot">=E2=96=AA</div>' +
      '<div class=3D"po_yx_my_item_cont">' +
      '<div class=3D"po_yx_my_po"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_yx_my_company"><a href=3D"{3}" title=3D"{4}" =
target=3D"_blank">{5}</a></div>' +
      '<label class=3D"po_yx_my_separator">|</label>' +
      '<div class=3D"po_yx_my_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '</div>' +
      '<a class=3D"po_yx_my_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    this.heroFightDetailTpl =3D this.heroMyTpl;
    this.heroFightDetailItem =3D this.heroMyItem;


    =
//=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E8=AF=A6=E6=83=
=85=E9=A1=B5
    this.eduDetailTpl =3D '<div class=3D"boutique-curr-box tracking-ad" =
data-mod=3D"{0}">' +
      '<div =
class=3D"boutique-curr"><h3>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=
=EF=BC=9F&nbsp;<label class=3D"po_my_my_tiao">=E8=B7=B3</label><label =
class=3D"po_my_my_ba">=E5=90=A7</label><label =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</label=
></h3>' +
      '<div class=3D"cutt-column">' +
      '{2}' +
      '<div class=3D"po_edu_detail_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_edu_detail_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=
=E5=9C=A8&nbsp;<label class=3D"po_edu_detail_csdn">CSDN =
JOB</label></a></div>' +
      =
'</div></div></div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0po=
pu_36    //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.eduDetailItem =3D '<div class=3D"po_edu_detail_item_div =
clearfix">' +
      '<div class=3D"po_edu_detail_po"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}<a></div>' +
      '<div class=3D"po_edu_detail_salary"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_edu_detail_company"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_edu_detail_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5


    =
//=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E5=88=86=E7=B1=
=BB=E5=88=97=E8=A1=A8
    this.eduListTpl =3D this.eduDetailTpl;
    this.eduListItem =3D this.eduDetailItem;


//-----------------------------------------------------------------------=
---------------------------------------------------------
    //=E6=90=9C=E7=B4=A2=E5=9F=B9=E8=AE=AD=E6=8E=A8=E5=B9=BF
    this.search_reco_edu =3D '' +
        '<div class=3D"common-box tracking-ad" data-mod=3D"popu_84" =
style=3D"display: block;">' + //todo =
=E5=A2=9E=E5=8A=A0=E7=BB=9F=E8=AE=A1=E5=8F=B7=E7=A0=81
        '<h3 id=3D"job-pos-title" =
class=3D"po_search_tit">=E7=B2=BE=E5=93=81=E8=AF=BE=E7=A8=8B<a =
class=3D"class-edu-more" =
href=3D"http://edu.csdn.net">=E6=9B=B4=E5=A4=9A</a></h3>' +
        '<div class=3D"po_search_div">' +
        '{0}' +
        '</div>' +
        '</div>';
    this.search_reco_edu_item =3D '<div class=3D"po_search_item_div">' +
        '<div class=3D"class-img-box"><a href=3D"{0}" target=3D"_blank" =
strategy=3D"{7}"><img src=3D"{1}"></a></div>' +
        '<div class=3D"class-content-box">' +
        '<div class=3D"class-content-tit"><a href=3D"{2}" =
target=3D"_blank" title=3D"{3}" strategy=3D"{8}">{4}</a></div>' +
        '<div =
class=3D"class-content-hp">=E5=A5=BD=E8=AF=84=E7=8E=87=EF=BC=9A<a =
href=3D"{9}" class=3D"class-content-hp-hpl">{5}%</a>  <span =
class=3D"class-content-hp-rzx"><i =
class=3D"class-content-icon">&nbsp;</i><a href=3D"{10}" =
class=3D"class-content-icon-rdx">{6}</a>=E4=BA=BA=E5=9C=A8=E5=AD=A6</span=
></div>' +
        '</div>' +
        '</div>';

      //<div id=3D"adCollege" style=3D"width: 42%;float: left;">
      this.blog_reco_edu =3D '<div class=3D"tracking-ad" =
data-mod=3D"popu_84">{0}</div>';            //todo =
=E5=A2=9E=E5=8A=A0=E7=BB=9F=E8=AE=A1=E5=8F=B7=E7=A0=81
      this.blog_reco_edu_item =3D '<dd =
style=3D"background:url(http://static.blog.csdn.net/skin/default/images/b=
log-dot-red3.gif) no-repeat 0 10px; white-space: nowrap;">' +
          '<a href=3D"{0}" title=3D"{1}" strategy=3D"{3}" =
target=3D"_blank">{2}</a>' +
          '</dd>';

      //<div class=3D"related po_down_detail_big_div">
      this.down_reco_edu =3D '<div class=3D"section-list panel =
panel-default tracking-ad" data-mod=3D"popu_84">' + //todo =
=E4=BF=AE=E6=94=B9=E7=BB=9F=E8=AE=A1=E5=8F=B7=E7=A0=81
          '<div class=3D"panel-heading po_down_detail_tit_div">' +
          '<h3 class=3D"panel-title =
po_down_detail_tit">=E7=9B=B8=E5=85=B3=E8=AF=BE=E7=A8=8B</h3>' +
          '</div>' +
          '<div class=3D"panel-body">' +
          '<ul class=3D"down_edu_t">' +
          '{0}' +
          '</ul>' +
          '</div>' +
          '</div>' +
          '';
      this.down_reco_edu_item =3D '  <li style=3D"line-height: =
25px;display:block;margin-bottom: 9px;margin-top: 9px;padding-top: =
0px;">' +
          '<div style=3D"padding:0;margin:0;border:0;text-overflow: =
ellipsis;overflow: hidden;">' +
          '<a href=3D"{0}" title=3D"{1}" alt=3D"" target=3D"_blank" =
strategy=3D"{3}">{2}</a>' +
          '</div>' +
          '</li>';

      this.edu_detail_url_base =3D 'http://edu.csdn.net/course/detail/';

//=E7=BB=93=E6=9D=9F=E3=80=82
//-----------------------------------------------------------------------=
-----------------------------------------------------------------





    //=E6=90=9C=E7=B4=A2
    this.searchTpl =3D '<div class=3D"common-box tracking-ad" =
data-mod=3D"{0}" style=3D"display: block;">' +
      '<h3 id=3D"job-pos-title" =
class=3D"po_search_tit">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=
=9F&nbsp;<span class=3D"po_blg_detail_tiao">=E8=B7=B3</span><span =
class=3D"po_blg_detail_ba">=E5=90=A7</span><span>&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '<div class=3D"po_search_div">' +
      '{2}' +
      '<div class=3D"po_search_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_search_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_search_csdn">CSDN JOB</label></a></div>' =
+
      '</div>' +
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.searchItem =3D '<div class=3D"po_search_item_div">' +
      '<div class=3D"po_search_po_div"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_search_salary_div"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_search_company_div"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_search_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>' +
      '';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5    =
//{9}=EF=BC=8C=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD



    //=E4=B8=8B=E8=BD=BD--=E6=88=91=E7=9A=84=E8=B5=84=E6=BA=90
    this.downMyTpl =3D '<div id=3D"my-tags-side" class=3D"panel =
panel-default tracking-ad" data-mod=3D"{0}">' +
      '<div class=3D"panel-heading po_downmy_div">' +
      '<h3 =
class=3D"panel-title">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=
=9F&nbsp;<span class=3D"po_blg_detail_tiao">=E8=B7=B3</span><span =
class=3D"po_blg_detail_ba">=E5=90=A7</span><span =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '</div>' +
      '<div>' +
      '{2}' +
      '</div>' +
      '<div class=3D"po_downmy_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_downmy_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_downmy_csdn">CSDN JOB</label></a></div>' =
+
      '</div>';//{0}=EF=BC=8C=E7=82=B9=E5=87=BB=E6=A0=87=E8=AE=B0popu_36 =
   //{1}=EF=BC=8C=E6=9B=B4=E5=A4=9A=E7=9A=84=E9=93=BE=E6=8E=A5    =
//{2}=EF=BC=8C=E5=86=85=E5=AE=B9
    this.downMyItem =3D '<div class=3D"po_downmy_item_div">' +
      '<div class=3D"po_downmy_po_div"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_downmy_company_div"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<div class=3D"po_downmy_salary_div"><a =
href=3D"{6}">{7}</a></div>' +
      '<a class=3D"po_downmy_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
    //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0    =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5    =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0    =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5    =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4    =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5    =
//{9}=EF=BC=8C=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD



    =
//=E4=B8=8B=E8=BD=BD--=E4=B8=8B=E8=BD=BD=E9=A1=B5=E5=92=8C=E4=B8=8B=E8=BD=
=BD=E8=AF=A6=E6=83=85=E9=A1=B5
    this.downDetailTpl =3D '<div class=3D"related po_down_detail_big_div =
tracking-ad" data-mod=3D"{0}">' +
      '<div>' +
      '<div class=3D"section-list panel panel-default">' +
      '<div class=3D"panel-heading po_down_detail_tit_div">' +
      '<h3 class=3D"panel-title =
po_down_detail_tit">=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=88=EF=BC=9F=
&nbsp;<span class=3D"po_blg_detail_tiao">=E8=B7=B3</span><span =
class=3D"po_blg_detail_ba">=E5=90=A7</span><span =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '<a class=3D"po_downdetail_more" href=3D"{1}" =
target=3D"_blank">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=9C=A8&=
nbsp;<label class=3D"po_dwondetail_csdn">CSDN JOB</label></a>' +
      '</div>' +
      '{2}' +
      '</div>' +
      '</div>' +
      '</div>';
    this.downDetailItem =3D '<div class=3D"panel-body =
po_down_detail_item_div">' +
      '<ul>' +
      '<li>' +
      '<div class=3D"po_down_detail_left"><a class=3D"con" href=3D"{0}" =
title=3D"{1}" target=3D"_blank">=E3=80=90{7}=E3=80=91{2}</a></div>' +
      '<div class=3D"po_down_detail_right"><a =
class=3D"po_downdetail_iwant" =
href=3D"http://job.csdn.net/Job/Index?jobID=3D81328" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a></div>' +
      '</li>' +
      '</ul>' +
      '</div>';



    =
//CSTO=E6=A1=88=E4=BE=8B=E5=BA=93=E5=88=97=E8=A1=A8=EF=BC=9AcstoCaseList
    this.cstoCaseListTpl =3D '<div class=3D"contbox tracking-ad" =
data-mod=3D"{0}">' +
      '<h3 =
class=3D"po_csto_caselist_tit"><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=
=E4=B9=88=EF=BC=9F&nbsp;</span><span =
class=3D"po_my_my_tiao">=E8=B7=B3</span><span =
class=3D"po_my_my_ba">=E5=90=A7</span><span =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '<div class=3D"po_caselist_div">' +
      '{2}' +
      '<div class=3D"po_caselist_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_caselist_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_caselist_csdn">CSDN =
JOB</label></a></div>' +
      '</div>' +
      '</div>';
    this.cstoCaseListItem =3D '<div class=3D"po_caselist_item_div">' +
      '<div class=3D"po_caselist_po_div"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_caselist_salary_div"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_caselist_company_div"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_caselist_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';



    =
//CSTO=E6=A1=88=E4=BE=8B=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9AcstoCaseDetai=
l
    this.cstoCaseDetailTpl =3D '<ul class=3D"case_list =
po_case_detail_div tracking-ad" data-mod=3D"{0}">' +
      '<h3 =
class=3D"po_csto_casedetail_tit"><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=
=E4=B9=88=EF=BC=9F&nbsp;</span><span =
class=3D"po_my_my_tiao">=E8=B7=B3</span><span =
class=3D"po_my_my_ba">=E5=90=A7</span><span =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '<div class=3D"po_casedetail_div">' +
      '{2}' +
      '<div class=3D"po_casedetail_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_casedetail_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=
=E5=9C=A8&nbsp;<label class=3D"po_casedetail_csdn">CSDN =
JOB</label></a></div>' +
      '</div>' +
      '</ul>';
    this.cstoCaseDetailItem =3D '<div class=3D"po_casedetail_item_div =
clearfix">' +
      '<div class=3D"po_casedetail_po_div"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_casedetail_company_div"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<div class=3D"po_casedetail_salary_div"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<a class=3D"po_casedetail_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';






    //CSTO=E6=88=91=E7=9A=84T=E5=8F=B0=EF=BC=9AcstoMy
    this.cstoMyTpl =3D '<ul class=3D"menu tracking-ad" =
data-mod=3D"{0}">' +
      '<li class=3D"icon selected po_csto_my_big_div">' +
      '<h3 =
class=3D"po_csto_my_tit"><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=86=E4=B9=
=88=EF=BC=9F&nbsp;</span><span =
class=3D"po_my_my_tiao">=E8=B7=B3</span><span =
class=3D"po_my_my_ba">=E5=90=A7</span><span =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '<div class=3D"po_csto_my_div">' +
      '{2}' +
      '</div>' +
      '<div class=3D"po_csto_my_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_csto_my_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=E5=
=9C=A8&nbsp;<label class=3D"po_csto_my_csdn">CSDN JOB</label></a></div>' =
+
      '</li>' +
      '</ul>';
    this.cstoMyItem =3D '<div class=3D"po_csto_my_item_div">' +
      '<div class=3D"po_csto_my_po_div"><a href=3D"{0}" title=3D"{1}" =
strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_csto_my_salary_div"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_csto_my_company_div"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_csto_my_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';


    =
//CSTO=E9=A1=B9=E7=9B=AE=E5=88=97=E8=A1=A8=E9=A1=B5=EF=BC=9AcstoProjectLi=
st
    this.cstoProjectListTpl =3D '' +
      '' +
      '' +
      '';
    this.cstoProjectListItem =3D '' +
      '' +
      '' +
      '';




    =
//CSTO=E9=A1=B9=E7=9B=AE=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9AcstoProjectDe=
tail
    this.cstoProjectDetailTpl =3D '<div class=3D"bid_scheme tracking-ad" =
data-mod=3D"{0}">' +
      '<h3 =
class=3D"po_csto_proj_detail_tit"><span>=E5=87=86=E5=A4=87=E5=A5=BD=E4=BA=
=86=E4=B9=88=EF=BC=9F&nbsp;</span><span =
class=3D"po_my_my_tiao">=E8=B7=B3</span><span =
class=3D"po_my_my_ba">=E5=90=A7</span><span =
class=3D"po_blg_detail_th">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;=EF=BC=81</span></h3>' +
      '<div class=3D"po_proj_detail_div">' +
      '{2}' +
      '<div class=3D"po_proj_detail_more_div"><a href=3D"{1}" =
target=3D"_blank" =
class=3D"po_proj_detail_more">=E6=9B=B4=E5=A4=9A=E8=81=8C=E4=BD=8D=E5=B0=BD=
=E5=9C=A8&nbsp;<label class=3D"po_proj_detail_csdn">CSDN =
JOB</label></a></div>' +
      '</div>' +
      '</div>';
    this.cstoProjectDetailItem =3D '<div =
class=3D"po_proj_detail_item_div clearfix">' +
      '<div class=3D"po_proj_detail_po_div"><a href=3D"{0}" =
title=3D"{1}" strategy=3D"{8}" target=3D"_blank">{2}</a></div>' +
      '<div class=3D"po_proj_detail_salary_div"><a href=3D"{6}" =
target=3D"_blank">{7}</a></div>' +
      '<div class=3D"po_proj_detail_company_div"><a href=3D"{3}" =
title=3D"{4}" target=3D"_blank">{5}</a></div>' +
      '<a class=3D"po_proj_detail_iwant" href=3D"{9}" =
target=3D"_blank">=E6=88=91=E8=A6=81=E8=B7=B3=E6=A7=BD</a>' +
      '</div>';
      this.getCount =3D 300;
  };

  Position.prototype =3D {
    show: function(conf) {
      var _conf =3D conf;
      var _this =3D this;
      _this.show_inner(_conf);
      /*$(window).load(function() {
        _this.show_inner(_conf);
      });*/
    },
    showEdu: function(conf) {
        var _conf =3D conf;
        var _this =3D this;
        _this.show_edu_mlgb(_conf);
    },
    show_edu_mlgb: function(conf) {
        this.sourceType =3D conf.sourceType;//blog, bbs, downlowd, ask, =
space, hero, edu, csto .....
        this.searchType =3D conf.searchType;
        this.searchKey =3D conf.searchKey;
        this.username =3D conf.username ? conf.username : '';
        this.recordcount =3D conf.recordcount;
        this.containerId =3D conf.containerId;

        this.$container =3D $("#" + this.containerId);
        this.prefix =3D window.location.protocol;
        this.load_edu_reco();
    },
      load_edu_reco: function() {
          var tpl =3D '';
          var itemTpl =3D '';
          var _url =3D '';
          _data =3D {};
          //var urlBase =3D 'http://192.168.5.75:9400';
          //var urlBase =3D 'http://p.search.dm.csdn.net';

          var kk =3D =
this.searchKey.replace(/%/g,"%25").replace(/#/g,"%23").replace(/&/g,"%26"=
).replace(/\+/g, "%2B");
          var urlBase =3D =
'http://internalapi.csdn.net/psearch/psearch/query?x-acl-token=3DkUOm7x6d=
CaKGFa8RxxLQ5Hm75ioK&index_name=3Dpro_course_v2';
          if (this.sourceType =3D=3D 'so') {
              tpl =3D this.search_reco_edu;
              itemTpl =3D this.search_reco_edu_item;
              //url =3D =
'http://p.search.dm.csdn.net/v2/pro_course/csdn/_search?_client_=3Drcomme=
nd_course&fields=3Did,title,stu_count,good_ratio,rc_flag&searchStr=3D=E5=88=
=9D=E7=BA=A7java=E6=95=99=E7=A8=8B&user_id=3Dblogchong';
              _url =3D urlBase + '&search_str=3D' + kk; // + =
'/v2/pro_course_v2/csdn/_search';
              _data =3D {'_client_': 'rcommend_course','fields': =
'id,title,pic,stu_count,good_ratio,rc_flag,source_type', 'user_id': =
this.username, 'size': this.recordcount}; //'search_str': kk,
              if (this.username =3D=3D '')
              _data =3D {'_client_': 'rcommend_course','fields': =
'id,title,pic,stu_count,good_ratio,rc_flag,source_type', 'size': =
this.recordcount}; //'search_str': kk,
          } else if (this.sourceType =3D=3D 'blog') {
              tpl =3D this.blog_reco_edu;
              itemTpl =3D this.blog_reco_edu_item;
              //url =3D =
'http://p.search.dm.csdn.net/v2/pro_course/csdn/_search?_client_=3Drcomme=
nd_course&fields=3Did,title,stu_count,good_ratio,rc_flag&pro_id=3D4552125=
1&pro_type=3Dblog&user_id=3Dblogchong';
              _url =3D urlBase + '&pro_id=3D' + kk;// + =
'/v2/pro_course_v2/csdn/_search';
              _data =3D {'_client_': 'rcommend_course','fields': =
'id,title,pic,stu_count,good_ratio,rc_flag,source_type', 'pro_type': =
'blog', 'user_id': this.username, 'size': this.recordcount}; //'pro_id': =
kk,

              if (this.username =3D=3D '')
                  _data =3D {'_client_': 'rcommend_course','fields': =
'id,title,pic,stu_count,good_ratio,rc_flag,source_type', 'pro_type': =
'blog', 'size': this.recordcount}; //'pro_id': kk,
          } else if (this.sourceType =3D=3D 'down') {
              tpl =3D this.down_reco_edu;
              itemTpl =3D this.down_reco_edu_item;
              //url =3D =
'http://p.search.dm.csdn.net/v2/pro_course/csdn/_search?_client_=3Drcomme=
nd_course&fields=3Did,title,stu_count,good_ratio,rc_flag&pro_id=3D4552125=
1&pro_type=3Dblog&user_id=3Dblogchong';
              _url =3D urlBase + '&pro_id=3D' + kk;// + =
'/v2/pro_course_v2/csdn/_search';
              _data =3D {'_client_': 'rcommend_course','fields': =
'id,title,pic,stu_count,good_ratio,rc_flag,source_type', 'pro_type': =
'download', 'user_id': this.username, 'size': this.recordcount}; =
//'pro_id': kk,
              if (this.username =3D=3D '')
                  _data =3D {'_client_': 'rcommend_course','fields': =
'id,title,pic,stu_count,good_ratio,rc_flag,source_type', 'pro_type': =
'download', 'size': this.recordcount}; //'pro_id': kk,
          }
          if (tpl =3D=3D '') return;
          var _this =3D this;
          $.ajax({
              type: 'get',
              url: _url,
              data: _data,
              dataType: "jsonp",
              jsonp: "callback",
              async: false,
              success: function(result) {
                  if (result.hits && result.hits.length > 0) {
                      var htmlItems =3D '';
                      for (var i =3D 0; i < _this.recordcount; i ++) {
                          var item =3D result.hits[i].object;
                          var htmlItem =3D '';
                          if (_this.sourceType =3D=3D 'so') {
                              var rzx =3D item.stu_count ? =
item.stu_count : 0;
                              var kcurl =3D _this.edu_detail_url_base + =
item.id;
                              htmlItem =3D itemTpl.replace(/\{0\}/, =
kcurl) //=E8=AF=BE=E7=A8=8Burl
                                  .replace(/\{1\}/, item.pic)            =
//=E5=9B=BE=E7=89=87url
                                  .replace(/\{2\}/, kcurl)               =
//=E8=AF=BE=E7=A8=8Burl
                                  .replace(/\{3\}/, item.title)          =
//=E8=AF=BE=E7=A8=8B=E6=A0=87=E9=A2=98
                                  .replace(/\{4\}/, item.title)          =
//=E8=AF=BE=E7=A8=8B=E5=90=8D=E7=A7=B0
                                  .replace(/\{5\}/, item.good_ratio =
=3D=3D 0 ? 100 : item.good_ratio)     //=E5=A5=BD=E8=AF=84=E7=8E=87
                                  .replace(/\{6\}/, rzx)                 =
//=E6=AD=A3=E5=9C=A8=E5=AD=A6=E4=B9=A0=E7=9A=84=E4=BA=BA=E6=95=B0
                                  .replace(/\{7\}/, item.rc_flag)        =
//=E7=AD=96=E7=95=A5
                                  .replace(/\{8\}/, item.rc_flag)        =
//=E7=AD=96=E7=95=A5
                                  .replace(/\{9\}/, kcurl)               =
//=E8=AF=BE=E7=A8=8Burl
                                  .replace(/\{10\}/, kcurl);             =
//=E8=AF=BE=E7=A8=8Burl
                          } else if (_this.sourceType =3D=3D 'blog' || =
_this.sourceType =3D=3D 'down') {
                              htmlItem =3D itemTpl.replace(/\{0\}/, =
_this.edu_detail_url_base + item.id)
                                  .replace(/\{1\}/, item.title)
                                  .replace(/\{2\}/, item.title) =
//'=E3=80=90=E7=B2=BE=E5=93=81=E8=AF=BE=E7=A8=8B=E3=80=91' + item.title
                                  .replace(/\{3\}/, item.rc_flag);
                          }
                          htmlItems +=3D htmlItem;
                      }
                      var jHtml =3D tpl.replace(/\{0\}/, htmlItems);
                      var tdd =3D $(jHtml).appendTo(_this.$container);
                      var tds =3D [];
                      tds.push(tdd[0]);
                      try {
                          window['trackingAd']($(tds));
                      } catch(ee){};
                  }
              },
              error: function(result) {
                  var i =3D 0;
              }
          }); =
//=E9=97=AE=E9=A2=98=EF=BC=9A=E8=AE=B0=E5=BD=95=E6=95=B0=EF=BC=9B=E7=B1=BB=
=E5=9E=8B=E5=8F=AA=E6=9C=89blog=E3=80=81download=E3=80=81bbs=E6=B2=A1=E6=9C=
=89=E6=90=9C=E7=B4=A2=EF=BC=9B

          //todo =
=E6=9A=82=E6=97=B6=E5=A4=84=E7=90=86=E4=B8=80=E4=B8=8B=EF=BC=8C=E5=9B=A0=E4=
=B8=BA=E7=9C=8B=E4=B8=8D=E6=87=82=E5=8E=9F=E6=9D=A5=E7=9A=84=E7=8C=9C=E4=BD=
=A0=E5=9C=A8=E6=89=BE=E4=BB=A3=E7=A0=81=E3=80=82=E5=90=8E=E9=9D=A2=E6=89=BE=
=E6=97=B6=E9=97=B4=E6=8A=8A=E7=8C=9C=E4=BD=A0=E5=9C=A8=E6=89=BE=E8=B0=83=E6=
=95=B4=E4=B8=BA=E5=8F=AA=E6=98=BE=E7=A4=BA5=E6=9D=A1=E6=95=B0=E6=8D=AE=E3=
=80=82
          $(function() {
              var count =3D 0;
              var setFive =3D setInterval(function() {
                  count ++;
                  if (count > _this.getCount) {
                      clearInterval(setFive);
                  }
                  $('#res').hide();
                  var cc =3D $('#res').children();
                  if (cc.length > 5) {
                      for (var i =3D 0; i < cc.length; i++) {
                          clearInterval(setFive);
                          var item =3D cc[i];
                          if (i > 4) {
                              $(item).remove();
                          }
                      }
                      $('#res').show();
                  }
              }, 200);
          });
      },
    show_inner: function(conf) {
      this.sourceType =3D conf.sourceType;//blog=EF=BC=8Cbbs, =
download=EF=BC=8Cask, space, hero, edu, csto .....
      this.tplType =3D conf.tplType;
      =
//=E6=A8=A1=E6=9D=BF=E7=B1=BB=E5=9E=8B=EF=BC=8C=E5=8D=9A=E5=AE=A2=E8=AF=A6=
=E6=83=85=EF=BC=9AblogDetail=EF=BC=8C=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=
=EF=BC=9AblogSpec=EF=BC=8C=E8=AE=BA=E5=9D=9B=E8=AF=A6=E6=83=85=EF=BC=9Abb=
sDetail=EF=BC=8C=E9=97=AE=E7=AD=94=E9=A6=96=E9=A1=B5=EF=BC=9AaskDetail=EF=
=BC=8C=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4--=E6=88=91=E7=9A=84=E7=A9=BA=E9=
=97=B4=EF=BC=9ApersonalSpaceMy=EF=BC=8C=E4=B8=AA=E4=BA=BA=E7=A9=BA=E9=97=B4=
--=E9=A6=96=E9=A1=B5=EF=BC=9ApersonalSpaceHome=EF=BC=8C
      =
//=E8=8B=B1=E9=9B=84=E4=BC=9A--=E9=A6=96=E9=A1=B5=EF=BC=9AheroHome=EF=BC=8C=
=E8=8B=B1=E9=9B=84=E4=BC=9A--=E7=AD=94=E9=A2=98=E4=B8=93=E5=AE=B6=E7=BB=84=
=EF=BC=9AheroExpert=EF=BC=8C=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=8C=91=E6=88=98=
=E9=A2=98=E7=9B=AE=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9AheroFightDetail=EF=BC=
=8C=E8=8B=B1=E9=9B=84=E4=BC=9A--=E6=88=91=E7=9A=84=E8=8B=B1=E9=9B=84=E4=BC=
=9A=EF=BC=9AheroMy=EF=BC=8C
      =
//=E5=9C=A8=E7=BA=BF=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E5=88=86=E7=B1=
=BB=E5=88=97=E8=A1=A8=E9=A1=B5=EF=BC=9AeduList=EF=BC=8C=E5=9C=A8=E7=BA=BF=
=E5=9F=B9=E8=AE=AD--=E8=AF=BE=E7=A8=8B=E8=AF=A6=E6=83=85=E9=A1=B5=EF=BC=9A=
eduDetail=EF=BC=8C.....
      this.searchType =3D =
conf.searchType;//=E9=A1=B5=E9=9D=A2=E7=B1=BB=E5=9E=8B=EF=BC=8C=E7=94=A8=E4=
=BA=8E=E6=90=9C=E7=B4=A2=E5=87=BD=E6=95=B0=EF=BC=8Cdetail(=E8=AF=A6=E6=83=
=85=E9=A1=B5) / list(=E5=88=97=E8=A1=A8=E9=A1=B5)=E3=80=82
      this.searchKey =3D =
conf.searchKey;//=E6=90=9C=E7=B4=A2=E5=85=B3=E9=94=AE=E5=AD=97=EF=BC=8C=E4=
=BE=8B=E5=A6=82=E5=8D=9A=E5=AE=A2=E8=AF=A6=E6=83=85=EF=BC=9A=E5=8D=9A=E6=96=
=87ID=EF=BC=8C=E5=A6=82=E6=9E=9C=E6=98=AF=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=
=8F=EF=BC=9A=E5=88=86=E7=B1=BB=E5=AD=97=E7=AC=A6=E4=B8=B2=E3=80=82
      this.username =3D conf.username;
      this.containerId =3D conf.containerId;

      this.$container =3D $("#" + this.containerId);
      this.prefix =3D window.location.protocol;

      this.load();
    },
    goInPage: function(containerTpl, itemTpl, container, _prefix) {
      var homeUrl =3D _prefix + "//job.csdn.net";
      var jHtml =3D containerTpl.replace(/\{0\}/, "popu_72")
       .replace(/\{1\}/, homeUrl)
       .replace(/\{2\}/, totalHtmlItems);
       //container.html(jHtml);
       container.html("");
       var tdd =3D $(jHtml).appendTo(container);
       var tds =3D [];
       tds.push(tdd[0]);
       try {
       window['trackingAd']($(tds));
       } catch(ee) {};
       return true;
    },
    totalHtmlItems: "",
    load: function() {
      var that =3D this;
      if (that.searchKey =3D=3D=3D "NO" && that.username =3D=3D=3D "") {
        return;
      }

      var _url =3D that.get_url(that.username, that.searchType, =
that.searchKey, that.sourceType, that.tplType);
      var _strategy =3D that.get_strategy(that.username, =
that.searchType);
      var containerTpl =3D that.get_containerTpl(that.tplType);
      var itemTpl =3D that.get_itemTpl(that.tplType);

      //that.username =3D that.getUserName();

      $.ajax({
        type: "get",
        url: _url,
        dataType: "jsonp",
        jsonp: "callback",
        async: false,
        success: function (obj) {
          totalHtmlItems =3D "";
          var htmlItems =3D "";
          var count =3D obj.hits.length;
          if (obj.hits && obj.hits.length > 0) {
            totalHtmlItems =3D that.getData(that.$container, obj.hits, =
containerTpl, itemTpl, that.prefix, _strategy, true);
          }
          if (count < 4 && that.username && that.searchType =3D=3D =
"detail") {
            =
//=E4=BB=A5=E5=86=85=E5=AE=B9=E6=90=9C=E7=B4=A2=E8=81=8C=E4=BD=8D=EF=BC=8C=
=E5=86=8D=E6=AC=A1=E5=8F=91=E9=80=81=E8=AF=B7=E6=B1=82
            var _strategy_detail =3D that.get_strategy("", "detail");
            that.loadByDetail(containerTpl, itemTpl, _strategy_detail, =
count, that.$container, that.prefix);
          } else if (count < 4) {
            =
//=E4=BB=A5=E6=9C=80=E6=96=B0=E8=81=8C=E4=BD=8D=E5=8F=91=E9=80=81=E8=AF=B7=
=E6=B1=82=E3=80=82
            var _strategy_latest =3D that.get_strategy("", "latest");
            htmlItems =3D that.loadByLatest(containerTpl, itemTpl, =
_strategy_latest, count, that.$container, that.prefix);
          }
          if (count >=3D 4) {
            that.goInPage(containerTpl, itemTpl, that.$container, =
that.prefix);
          }
        },
        error: function(err) {
          var i =3D 0;
          //alert('err');
        }
      });
    },
    loadByDetail: function(_containerTpl, _itemTpl, _strategy, _count, =
_containerObj, _prefix) {
      var that =3D this;
      var _url =3D that.get_url("", that.searchType, that.searchKey, =
that.sourceType, that.tplType , 4 - _count);
      $.ajax({
        type: "get",
        url: _url,
        dataType: "jsonp",
        jsonp: "callback",
        async: false,
        success: function (obj) {
          var count =3D obj.hits.length;
          var htmlItems =3D "";
          if (obj.hits && obj.hits.length > 0) {
            totalHtmlItems +=3D that.getData(_containerObj, obj.hits, =
_containerTpl, _itemTpl, _prefix, _strategy, false);
          }
          if (count + _count < 4) {
            =
//=E4=BB=A5=E6=9C=80=E6=96=B0=E8=81=8C=E4=BD=8D=E5=86=8D=E6=AC=A1=E5=8F=91=
=E9=80=81=E8=AF=B7=E6=B1=82=E3=80=82
            var _strategy_latest =3D that.get_strategy("", "latest");
            that.loadByLatest(_containerTpl, _itemTpl, _strategy, count =
+ _count, _containerObj, _prefix);
          }
          if (count + _count >=3D 4) {
            that.goInPage(_containerTpl, _itemTpl, _containerObj, =
_prefix);
          }
        },
        error: function(err) {
          var i =3D 0;
        }
      });
    },
    loadByLatest: function(_containerTpl, _itemTpl, _strategy, _count, =
_containerObj, _prefix) {
      var that =3D this;
      var _url =3D =
"http://job.csdn.net/api/lastJobList";//http://job.csdn.net/api/lastJobLi=
st //http://tmpjob.csdn.net/api/LastJobList

      var homeUrl =3D _prefix + "//job.csdn.net";
      var jobUrl =3D _prefix + "//job.csdn.net/Job/Index?jobID=3D";
      var companyUrl =3D _prefix + =
"//pr.csdn.net/enterprise/ent_home?orgid=3D";

      $.ajax({
        type: "get",
        url: _url,
        dataType: "jsonp",
        jsonp: "callback",
        async: false,
        success: function(obj) {
          var count =3D obj;
          if (obj.Data && obj.Data.paperList && =
obj.Data.paperList.length > 0 && obj.Data.paperList.length >=3D 4 - =
_count) {
            var htmlItems =3D "";
            for (var i =3D 0; i <  4 - _count; i ++) {
              var item =3D obj.Data.paperList[i];
              if (item.JobID && item.JobName && item.OrgID && =
item.OrgName && item.SalaryMax && item.SalaryMin) {
                var salaryText =3D "";
                if (item.SalaryMax =3D=3D 0 && item.SalaryMin =3D=3D 0) =
{
                  salaryText =3D "=E9=9D=A2=E8=AE=AE";
                } else {
                  var mins =3D item.SalaryMin / 1000;
                  var maxs =3D item.SalaryMax / 1000;
                  salaryText =3D mins + "-" + maxs + "K/=E6=9C=88";
                }

                var htmlItem =3D _itemTpl.replace(/\{0\}/, jobUrl + =
item.JobID)
                  .replace(/\{1\}/, item.JobName)
                  .replace(/\{2\}/, item.JobName)
                  .replace(/\{3\}/, companyUrl + item.OrgID)
                  .replace(/\{4\}/, item.OrgName)
                  .replace(/\{5\}/, item.OrgName)
                  .replace(/\{6\}/, jobUrl + item.JobID)
                  .replace(/\{7\}/, salaryText)
                  .replace(/\{8\}/, _strategy)
                  .replace(/\{9\}/, jobUrl + item.JobID);

                htmlItems  +=3D htmlItem;
              }
            }
            totalHtmlItems +=3D htmlItems;
            /*if (htmlItems !=3D "") {
              var jHtml =3D _containerTpl.replace(/\{0\}/, "popu_72")
                .replace(/\{1\}/, homeUrl)
                .replace(/\{2\}/, htmlItems);
              //_containerObj.html("");
              var tdd =3D $(jHtml).appendTo(_containerObj);
              var tds =3D [];
              tds.push(tdd[0]);
              try {
                window['trackingAd']($(tds));
              } catch (ee) {};
            }*/
          }
          that.goInPage(_containerTpl, _itemTpl, _containerObj, =
_prefix);
          return "";
          /*
           obj.Data.paperList[0].JobID
           obj.Data.paperList[0].JobName
           obj.Data.paperList[0].OrgID
           obj.Data.paperList[0].OrgName
           obj.Data.paperList[0].SalaryMax
           obj.Data.paperList[0].SalaryMin
          * */
        },
        error: function(err) {
          var i =3D 0;
        }
      });
    },
    getData: function(container, items, containerTpl, itemTpl, prefix, =
_strategy, isClear) {
      var homeUrl =3D prefix + "//job.csdn.net";
      var jobUrl =3D prefix + =
"//job.csdn.net/Job/Index?jobID=3D";//=E8=81=8C=E4=BD=8D=E9=A1=B5=E9=9D=A2=
url=EF=BC=8C=E6=A0=B7=E4=BE=8B=EF=BC=9Ahttp://job.csdn.net/Job/Index?jobI=
D=3D80500=EF=BC=8Chttp://tmpjob.csdn.net/Job/Index?jobID=3D80500
      var companyUrl =3D prefix + =
"//pr.csdn.net/enterprise/ent_home?orgid=3D";//3=EF=BC=8C=E6=A0=B7=E4=BE=8B=
=EF=BC=9Ahttp://pr.csdn.net/enterprise/ent_home?orgid=3D406854=EF=BC=8Cht=
tp://lpr.csdn.net/enterprise/ent_home?orgid=3D406854

      var htmlItems =3D "";
      for (var i =3D 0; i < items.length; i++) {
        var item =3D items[i];
        var obj =3D item.object;
        if (obj.id && obj.title && obj.org_id && obj.org_name) {
          var salaryText =3D "";
          if (obj.salary_max =3D=3D 0 && obj.salary_min =3D=3D 0) {
            salaryText =3D "=E9=9D=A2=E8=AE=AE";
          } else {
            var mins =3D obj.salary_min / 1000;
            var maxs =3D obj.salary_max / 1000;
            salaryText =3D mins + "-" + maxs + "K/=E6=9C=88";
          }

          var htmlItem =3D itemTpl.replace(/\{0\}/, jobUrl + obj.id)
            .replace(/\{1\}/, obj.title)
            .replace(/\{2\}/, obj.title)
            .replace(/\{3\}/, companyUrl + obj.org_id)
            .replace(/\{4\}/, obj.org_name)
            .replace(/\{5\}/, obj.org_name)
            .replace(/\{6\}/, jobUrl + obj.id)
            .replace(/\{7\}/, salaryText)
            .replace(/\{8\}/, _strategy)
            .replace(/\{9\}/, jobUrl + obj.id);
          //{0}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5  =
//{1}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0  =
//{2}=EF=BC=8C=E8=81=8C=E4=BD=8D=E5=90=8D=E7=A7=B0  =
//{3}=EF=BC=8C=E5=85=AC=E5=8F=B8=E9=93=BE=E6=8E=A5  =
//{4}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0  =
//{5}=EF=BC=8C=E5=85=AC=E5=8F=B8=E5=90=8D=E7=A7=B0  =
//{6}=EF=BC=8C=E8=81=8C=E4=BD=8D=E9=93=BE=E6=8E=A5  =
//{7}=EF=BC=8C=E8=81=8C=E4=BD=8D=E8=96=AA=E6=B0=B4  =
//{8}=EF=BC=8C=E4=B8=8A=E6=8A=A5=E7=AD=96=E7=95=A5
          htmlItems +=3D htmlItem;
        }
      }
      return htmlItems;

      /*var jHtml =3D containerTpl.replace(/\{0\}/, "popu_72")
        .replace(/\{1\}/, homeUrl)
        .replace(/\{2\}/, htmlItems);
      //container.html(jHtml);
      if (isClear) {
        container.html("");
      }
      var tdd =3D $(jHtml).appendTo(container);
      var tds =3D [];
      tds.push(tdd[0]);
      try {
        window['trackingAd']($(tds));
      } catch(ee) {};
      return true; */
    },
    get_strategy: function(un, searcht) {
      var _st =3D "";
      if (un !=3D "") {
        _st =3D "PersonalRecommend";
      } else if (searcht =3D=3D "detail") {
        _st =3D "DetailRecommend";
      } else if (searcht =3D=3D "list") {
        _st =3D "ListRecommend";
      } else if (searcht =3D=3D "latest") {
        _st =3D "LatestRecommend";
      } else {
        _st =3D "unknown";
      }

      return _st;
    },
    get_itemTpl: function(tplType) {
      var c =3D "";
      switch (tplType) {
        case "blogDetail":
          c =3D this.blogItem;
          break;
        case "blogSpec":
          c =3D this.blogSpecItem;
          break;
        case "bbsDetail":
          c =3D this.bbsItem;
          break;
        case "askDetail":
          c =3D this.askItem;
          break;
        case "personalSpaceMy":
          c =3D this.perSpaceMyItem;
          break;
        case "personalSpaceHome":
          c =3D this.perSpaceHomeItem;
          break;
        case "heroHome":
          c =3D this.heroHomeItem;
          break;
        case "heroExpert":
          c =3D this.heroExpertItem;
          break;
        case "heroFightDetail":
          c =3D this.heroFightDetailItem;
          break;
        case "heroMy":
          c =3D this.heroMyItem;
          break;
        case "eduList":
          c =3D this.eduListItem;
          break;
        case "eduDetail":
          c =3D this.eduDetailItem;
          break;
        case "search":
          c =3D this.searchItem;
          break;
        case "downMy":
          c =3D this.downMyItem;
          break;
        case "downDetail":
          c =3D this.downDetailItem;
          break;
        case"cstoCaseList":
          c =3D this.cstoCaseListItem;
          break;
        case"cstoCaseDetail":
          c =3D this.cstoCaseDetailItem;
          break;
        case"cstoMy":
          c =3D this.cstoMyItem;
          break;
        case"cstoProjectList":
          c =3D =
this.cstoCaseListItem;//=E5=90=8C=E6=A1=88=E4=BE=8B=E5=88=97=E8=A1=A8
          break;
        case"cstoProjectDetail":
          c =3D this.cstoProjectDetailItem;
          break;
        default:
          break;
      }
      return c;
    },
    get_containerTpl: function(tplType) {
      var c =3D "";
      switch (tplType) {
        case "blogDetail":
          c =3D this.blogTpl;
          break;
        case "blogSpec":
          c =3D this.blogSpecTpl;
          break;
        case "bbsDetail":
          c =3D this.bbsTpl;
          break;
        case "askDetail":
          c =3D this.askTpl;
          break;
        case "personalSpaceMy":
          c =3D this.perSpaceMyTpl;
          break;
        case "personalSpaceHome":
          c =3D this.perSpaceHomeTpl;
          break;
        case "heroHome":
          c =3D this.heroHomeTpl
          break;
        case "heroExpert":
          c =3D this.heroExpertTpl;
          break;
        case "heroFightDetail":
          c =3D this.heroFightDetailTpl;
          break;
        case "heroMy":
          c =3D this.heroMyTpl;
          break;
        case "eduList":
          c =3D this.eduListTpl;
          break;
        case "eduDetail":
          c =3D this.eduDetailTpl;
          break;
        case "search":
          c =3D this.searchTpl;
          break;
        case "downMy":
          c =3D this.downMyTpl;
          break;
        case "downDetail":
          c =3D this.downDetailTpl;
          break;
        case "cstoCaseList":
          c =3D this.cstoCaseListTpl;
          break;
        case "cstoCaseDetail":
          c =3D this.cstoCaseDetailTpl;
          break;
        case "cstoMy":
          c =3D this.cstoMyTpl;
          break;
        case "cstoProjectList":
          c =3D =
this.cstoCaseListTpl;//=E5=90=8C=E6=A1=88=E4=BE=8B=E5=88=97=E8=A1=A8
          break;
        case "cstoProjectDetail":
          c =3D this.cstoProjectDetailTpl;
          break;
        default:
          break;
      }
      return c;
    },
    get_url: function(un, searcht, key, st, tt, count) {
      var _st =3D st;
      var kk =3D =
key.replace(/%/g,"%25").replace(/#/g,"%23").replace(/&/g,"%26").replace(/=
\+/g, "%2B");
      var u =3D =
"http://internalapi.csdn.net/psearch/psearch/query?x-acl-token=3DkUOm7x6d=
CaKGFa8RxxLQ5Hm75ioK&index_name=3Dtest_b2d_job_141211&_client_=3D";
      //var u =3D =
"http://p.search.dm.csdn.net/v2/test_b2d_job_141211/csdn/_search?_client_=
=3D";
      if (un !=3D "" && un !=3D undefined && un !=3D null) {
        _st =3D "uc_proxy";
        u =3D u + "search_job_by_user";
        u =3D u + "&from=3D1&size=3D4";
        u =3D u + "&id=3D" + un;
      } else if (tt =3D=3D "search") {
        u =3D u + "job_position_query";
        u =3D u + "&like=3Dtitle:" + kk;
        u =3D u + "&shouldNum=3D0&from=3D1&size=3D" + (count ? count : =
4);
      } else if (searcht =3D=3D "detail") {
        u =3D u + "search_job_by_content";
        u =3D u + "&id=3D" + kk;
        u =3D u + "&from=3D1&size=3D" + (count ? count : 4);
      } else if (searcht =3D=3D "list") {
        u =3D u + "search_job_by_content";
        u =3D u + "&content=3D" + kk;
        u =3D u + "&from=3D1&size=3D" + (count ? count : 4);
      }
      u =3D u + "&source_type=3D" + _st;
      u =3D u + =
"&fields=3Did,publish_time,title,org_name,org_id,salary_max,salary_min";
      return u;
    },
    getThisCss: function() {
      $("<link>")
        .attr({ rel: "stylesheet",
          type: "text/css",
          href: csdn.position.prefix + =
"//csdnimg.cn/jobreco/job_reco.css"
        })
        .appendTo("head");
    },
    getUserName: function() {
      return this.getCookie("UserName");
    },
    getCookie: function(objName) {
      var arrStr =3D document.cookie.split("; ");
      for(var i =3D 0;i < arrStr.length;i ++){
        var temp =3D arrStr[i].split("=3D");
        if(temp[0] =3D=3D objName) return decodeURI(temp[1]);
      }
    },
    evil: function() {
    }
  };

  csdn.position =3D new Position();
  window["csdn"] =3D csdn;
})(window);
------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/comment.js

=EF=BB=BFvar list =3D []; //=E8=AF=84=E8=AE=BA=E5=88=97=E8=A1=A8
var editorId =3D "#comment_content";
var verifycodeId =3D "#img_verifycode";
var listId =3D "#comment_list";

$(document).ready(init_comment);

function init_comment() {
    load_comment_form();

    editor =3D $(editorId);

    var editor_inter =3D null;
    if (editor.length > 0) {
       // var v =3D ["html", "objc", "javascript", "css", "php", =
"csharp", "cpp", "java", "python", "ruby", "vb", "delphi", "sql", =
"plain"];
       // var k =3D ["HTML/XML","Objective-C", "JavaScript", "CSS", =
"PHP", "C#", "C++", "Java", "Python", "Ruby", "Visual Basic", "Delphi", =
"SQL", "=E5=85=B6=E5=AE=83"];
       // for (var i =3D 0; i < v.length; i++) {
      //      $("#lang_list").append('<a href=3D"#' + v[i] + '">' + k[i] =
+ '</a>');
        // }
        $("#lang_list").append('<a class=3D"long_name" =
href=3D"#html">HTML/XML</a><a class=3D"long_name" =
href=3D"#objc">objective-c</a><a class=3D"zhong_name" =
href=3D"#delphi">Delphi</a><a  class=3D"zhong_name" =
href=3D"#ruby">Ruby</a><a href=3D"#php">PHP</a><a class=3D"duan_name" =
href=3D"#csharp">C#</a><a style=3D" border-right: none;"  =
class=3D"duan_name" href=3D"#cpp">C++</a><a style=3D" =
border-bottom:none;"class=3D"long_name" =
href=3D"#javascript">JavaScript</a><a style=3D" border-bottom:none;" =
class=3D"long_name" href=3D"#vb">Visual Basic</a><a style=3D" =
border-bottom:none;" class=3D"zhong_name" href=3D"#python">Python</a><a =
style=3D" border-bottom:none;" class=3D"zhong_name" =
href=3D"#java">Java</a><a style=3D"border-bottom:none;" =
class=3D"duan_name" href=3D"#css">CSS</a><a =
style=3D"border-bottom:none;" class=3D"duan_name" =
href=3D"#sql">SQL</a><a style=3D"border:none;"  class=3D"duan_name" =
href=3D"#plain">=E5=85=B6=E5=AE=83</a>');
        editor.focus(function () {
            editor_inter =3D setInterval(function () {
                commentTip("=E8=BF=98=E8=83=BD=E8=BE=93=E5=85=A5" + =
(1000 - editor.val().length) + "=E4=B8=AA=E5=AD=97=E7=AC=A6");
            }, 200);
        }).blur(function () {
            if (editor_inter) clearInterval(editor_inter);
        });
    }

    //=E5=8A=A0=E8=BD=BD=E5=88=97=E8=A1=A8
    loadList(1);
}
function noComments() {
    $(listId).html('<br =
/>&nbsp;&nbsp;=E6=9A=82=E6=97=A0=E8=AF=84=E8=AE=BA<br /><br /><div =
class=3D"clear"></div>');
}
function loadList(pageIndex, isSub) {
    if (commentscount =3D=3D 0) {
        noComments();
        return;
    }
    pageIndex =3D parseInt(pageIndex) || 1;

    =
$("#comments_bar").html("=E6=AD=A3=E5=9C=A8=E5=8A=A0=E8=BD=BD=E8=AF=84=E8=
=AE=BA...");
    //var cmtUrl =3D "../../comment/list/" + fileName + "?page=3D" + =
(pageIndex || 1);
    var url =3D location.href.toString().split('/');
    var cmtUrl =3D "http://"+url[2]+"/"+url[3]+"/comment/list/" + =
fileName + "?page=3D" + (pageIndex || 1);
    if (isSub) cmtUrl +=3D "&_" + Math.random();
    $.get(cmtUrl, function (json) {

        if (!json) {
            noComments();
            return;
        }
        var data =3D (typeof json =3D=3D 'object') ? json : eval("(" + =
json + ")");
        if (isSub) list =3D data.list;
        else list =3D list.concat(data.list);

        var listHtml =3D '';

        //=E6=9E=84=E9=80=A0=E4=B8=BB=E9=A2=98
        var topics =3D getTopics(list);

        var total =3D data.total > 0 ? data.total : topics.length;
        //=E7=BB=84=E8=A3=85HTM
        for (var i =3D 0; i < topics.length; i++) {
            var comment =3D topics[i];
            var layer =3D total - i;

            listHtml +=3D getItemHtml(comment, layer);
        }
        listHtml +=3D '<div class=3D"clear"></div>';
        //=E8=BE=93=E5=87=BA=E5=88=97=E8=A1=A8
        $(listId).html(listHtml);
        =
//=E9=AB=98=E4=BA=AE=E8=AF=84=E8=AE=BA=E4=B8=AD=E7=9A=84=E4=BB=A3=E7=A0=81=
=E6=AE=B5
        dp.SyntaxHighlighter.HighlightAll('code2');
        //=E5=B1=95=E7=A4=BA=E6=98=B5=E7=A7=B0
        new CNick(listId + ' a.username').showNickname();

        //=E5=88=86=E9=A1=B5=E5=A4=84=E7=90=86
        if (data.page.PageIndex >=3D data.page.PageCount) {
            $("#comment_bar").hide();
        } else {
            $("#comment_bar").html('<div id=3D"load_comments" page=3D"' =
+ (pageIndex + 1) + =
'">=E6=9F=A5=E7=9C=8B=E6=9B=B4=E5=A4=9A=E8=AF=84=E8=AE=BA</div>');
        }
        //=E6=B7=BB=E5=8A=A0=E6=8C=89=E9=92=AE=E4=BA=8B=E4=BB=B6
        setBtnEvent();
    });
};

//=E8=8E=B7=E5=8F=96=E8=AF=84=E8=AE=BA=E4=B8=BB=E9=A2=98
function getTopics(list) {
    var topics =3D [];
    for (var i =3D 0; i < list.length; i++) {
        var t =3D list[i];
        if (t.ParentId =3D=3D 0) {
            t.Replies =3D getReplies(t, list);
            topics.push(t);
        }
    }
    return topics;
}
//=E8=8E=B7=E5=8F=96=E8=AF=84=E8=AE=BA=E5=9B=9E=E5=A4=8D
function getReplies(item, list) {
    var replies =3D [];
    for (var i =3D 0; i < list.length; i++) {
        var r =3D list[i];
        if (r.ParentId =3D=3D item.CommentId) {
            r.Replies =3D getReplies(r, list);
            replies.push(r);
        }
    }
    return replies;
}
//=E8=8E=B7=E5=8F=96=E8=AF=84=E8=AE=BA=E7=9A=84HTML
function getItemHtml(comment, index, floor, deep) {
    if (!deep) deep =3D 0;
    var sty =3D deep > 3 ? ' style=3D"margin-left:0;"' : '';
    var html =3D '<dl class=3D"comment_item comment_' + =
(comment.ParentId > 0 ? "reply" : "topic") + '" =
id=3D"comment_item_{id}"' + sty + '>' +
		'<dt class=3D"comment_head" floor=3D' + (floor || index) + '>' + =
(comment.ParentId > 0 ? "Re:" : index + '=E6=A5=BC') + ' <span =
class=3D"user">';

    if (comment.UserName !=3D null && comment.UserName !=3D '')
        html +=3D '<a class=3D"username" href=3D"/' + comment.UserName + =
'" target=3D"_blank">' + comment.UserName + '</a>';
    else
        html +=3D '[=E6=B8=B8=E5=AE=A2]';

    html +=3D " <span class=3D'ptime'>" + comment.PostTime + =
"=E5=8F=91=E8=A1=A8</span> ";
    html +=3D ' <a href=3D"#reply" class=3D"cmt_btn reply" =
title=3D"=E5=9B=9E=E5=A4=8D">[=E5=9B=9E=E5=A4=8D]</a> <span =
class=3D"comment_manage" style=3D"display:none;" commentid=3D{id} =
username=3D{username}> <a href=3D"#quote" class=3D"cmt_btn quote" =
title=3D"=E5=BC=95=E7=94=A8">[=E5=BC=95=E7=94=A8]</a> <a =
href=3D"#report" class=3D"cmt_btn report" =
title=3D"=E4=B8=BE=E6=8A=A5">[=E4=B8=BE=E6=8A=A5]</a>';
    if (username =3D=3D currentUserName || comment.UserName =3D=3D =
currentUserName) html +=3D ' <a href=3D"#delete" class=3D"cmt_btn =
delete" title=3D"=E5=88=A0=E9=99=A4">[=E5=88=A0=E9=99=A4]</a>';
    html +=3D '</span></dt>';
    html +=3D '<dd class=3D"comment_userface"><a href=3D"/' + =
comment.UserName + '" target=3D"_blank"><img src=3D"' + comment.Userface =
+ '" width=3D"40" height=3D"40" /></a></dd>';
    html +=3D '<dd class=3D"comment_body">' + replaceUBBToHTML(comment) =
+ '</dd>';
    html =3D html.replace(/\{id\}/g, =
comment.CommentId).replace(/\{username\}/g, comment.UserName);

    if (comment.Replies !=3D null) {
        for (var j =3D 0; j < comment.Replies.length; j++) {
            html +=3D getItemHtml(comment.Replies[j], j + 1, index, deep =
+ 1);
        }
    }
    html +=3D "</dl>";

    return html;
}
//=E8=8E=B7=E5=8F=96=E8=AF=84=E8=AE=BA=E5=AF=B9=E8=B1=A1
function getComment(commentId, list) {
    for (var i =3D 0; i < list.length; i++) {
        var comment =3D list[i];
        if (comment.CommentId =3D=3D commentId)
            return comment;
    }
    return null;
}
function setBtnEvent() {

    $("#load_comments").click(function () {
        var page =3D $(this).attr("page");
        loadList(page);
    });

    //=E8=AF=84=E8=AE=BA=E6=8C=89=E9=92=AE=E7=82=B9=E5=87=BB
    $(".comment_head a").click(function () {
        var action =3D $(this).attr("href");

        action =3D action.substring(action.lastIndexOf('#'));

        var commentId =3D $(this).parent().attr("commentid");
        switch (action) {
            case "#reply":
                if (currentUserName) {
                    commentId =3D $(".comment_manage", =
$(this).parent()).attr("commentid");
                    replyComment(commentId, list);
                    setEditorFocus();
                }
                return true;
            case "#quote":
                if (currentUserName) {
                    quoteComment(commentId, list);
                    setEditorFocus();
                }
                return true;
            case "#report":
                reportComment(commentId, this);
                break;
            case "#delete":
                deleteComment(commentId);
                break;
            default:
                return true;
        }
        return false;
    });

    $(".comment_item").mouseover(function () {
        $(".comment_manage", $(this)).eq(0).show();
    }).mouseout(function () {
        $(".comment_manage", $(this)).eq(0).hide();
    });
}
/*=E4=BD=BF=E8=AF=84=E8=AE=BA=E6=A1=86=E8=8E=B7=E5=BE=97=E7=84=A6=E7=82=B9=
*/
function setEditorFocus() {
    var val =3D editor.val();
    editor.val('');
    editor.focus();
    editor.val(val);
}
//=E5=BC=95=E7=94=A8=E8=AF=84=E8=AE=BA
function quoteComment(commentId, list) {
    var comment =3D getComment(commentId, list);
    var content =3D comment.Content;
    if (comment.Content.length > 50) {
        content =3D comment.Content.substring(0, 50) + "...";
    }
    editor.val("[quote=3D" + (comment.UserName =3D=3D null ? =
"=E6=B8=B8=E5=AE=A2" : comment.UserName) + "]" + content + =
"[/quote]\r\n");
}
//=E5=9B=9E=E5=A4=8D=E8=AF=84=E8=AE=BA
function replyComment(commentId, list) {
    var comment =3D getComment(commentId, list);
    editor.val('[reply]' + comment.UserName + "[/reply]\r\n");
    $("#comment_replyId").val(commentId);
}
//=E4=B8=BE=E6=8A=A5=E8=AF=84=E8=AE=BA
function reportComment(commentId, e) {
    report(commentId, 3, e);
}
//=E5=88=A0=E9=99=A4=E8=AF=84=E8=AE=BA
function deleteComment(commentId) {
    if =
(!confirm("=E4=BD=A0=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=88=A0=E9=99=A4=E8=BF=99=
=E7=AF=87=E8=AF=84=E8=AE=BA=E5=90=97=EF=BC=9F")) return;

    var delUrl =3D blog_address + "/comment/delete?commentid=3D" + =
commentId + "&filename=3D" + fileName;
    $.get(delUrl, function (data) {
        if (data.result =3D=3D 1) {
            $("#comment_item_" + commentId).hide().remove();
        } else {
            =
alert("=E4=BD=A0=E6=B2=A1=E6=9C=89=E5=88=A0=E9=99=A4=E8=AF=A5=E8=AF=84=E8=
=AE=BA=E7=9A=84=E6=9D=83=E9=99=90=EF=BC=81");
        }
    });
}
//=E6=9B=BF=E6=8D=A2=E8=AF=84=E8=AE=BA=E7=9A=84UBB=E4=BB=A3=E7=A0=81
function replaceUBBToHTML(comment) {
    var content =3D $.trim(comment.Content);

    var re =3D /\[code=3D([\w#\.]+)\]([\s\S]*?)\[\/code\]/ig;

    var codelist =3D [];
    while ((mc =3D re.exec(content)) !=3D null) {
        codelist.push(mc[0]);
        content =3D content.replace(mc[0], "--code--");
    }
    content =3D replaceQuote(content);
    //content =3D content.replace(/\[e(\d+)\]/g, "<img src=3D\"" + =
static_host + "/images/emotions/e$1.gif\"\/>");
    content =3D =
content.replace(/\[reply]([\s\S]*?)\[\/reply\][\r\n]{0,2}/gi, =
"=E5=9B=9E=E5=A4=8D$1=EF=BC=9A");
    content =3D =
content.replace(/\[url=3D([^\]]+)]([\s\S]*?)\[\/url\]/gi, '<a =
href=3D"$1" target=3D"_blank">$2</a>');
    content =3D =
content.replace(/\[img(=3D([^\]]+))?]([\s\S]*?)\[\/img\]/gi, '<img =
src=3D"$3" style=3D"max-width:400px;max-height:200px;" border=3D"0" =
title=3D"$2" />');
    //content =3D content.replace(/\[(\/?)(b|i|u|p)\]/ig, "<$1$2>");
    content =3D content.replace(/\r?\n/ig, "<br />");

    if (codelist.length > 0) {
        var re1 =3D /--code--/ig;
        var i =3D 0;
        while ((mc =3D re1.exec(content)) !=3D null) {
            content =3D content.replace(mc[0], codelist[i]);
            i++;
        }
    }
    content =3D =
content.replace(/\[code=3D([\w#\.]+)\]([\s\S]*?)\[\/code\]/ig, function =
(m0, m1, m2) {
        if ($.trim(m2) =3D=3D "") return '';
        return '<pre name=3D"code2" class=3D"' + m1 + '">' + m2 + =
'</pre>';
    });
    return content;
}
//=E6=9B=BF=E6=8D=A2=E8=AF=84=E8=AE=BA=E7=9A=84=E5=BC=95=E7=94=A8
function replaceQuote(str) {
    var m =3D /\[quote=3D([^\]]+)]([\s\S]*)\[\/quote\]/gi.exec(str);
    if (m) {
        return str.replace(m[0], =
'<fieldset><legend>=E5=BC=95=E7=94=A8=E2=80=9C' + m[1] + =
'=E2=80=9D=E7=9A=84=E8=AF=84=E8=AE=BA=EF=BC=9A</legend>' + =
replaceQuote(m[2]) + '</fieldset>');
    } else {
        return str;
    }
}



function load_comment_form() {
    var un =3D getcookie("UserName").toLowerCase();
    if (islock) {
        $("#comment_form").html("<div =
class=3D'notice'>=E8=AF=A5=E6=96=87=E7=AB=A0=E5=B7=B2=E8=A2=AB=E7=A6=81=E6=
=AD=A2=E8=AF=84=E8=AE=BA=EF=BC=81</div>");
    } else if (currentUserName || (un !=3D =
null&&un!=3D""&&un!=3Dundefined)) {
        var html =3D '<a name=3D"commentbox"></a><a =
name=3D"reply"></a><a name=3D"quote"></a><form action=3D"/' + username + =
'/comment/submit?id=3D' + fileName + '" method=3D"post" =
onsubmit=3D"return subform(this);">' +
		'<div class=3D"commentform"><div =
class=3D"panel_head">=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA</div>' +
		'<ul><li class=3D"left">=E7=94=A8 =E6=88=B7 =E5=90=8D=EF=BC=9A</li><li =
class=3D"right">' + currentUserName + '</li></ul>' +
		'<ul><li =
class=3D"left">=E8=AF=84=E8=AE=BA=E5=86=85=E5=AE=B9=EF=BC=9A</li><li =
class=3D"right" style=3D"position:relative;">' +
		'<div id=3D"ubbtools">' +
		'<a href=3D"#insertcode" code=3D"code"><img src=3D"' + static_host + =
'/images/ubb/code.gif" border=3D"0" =
alt=3D"=E6=8F=92=E5=85=A5=E4=BB=A3=E7=A0=81" =
title=3D"=E6=8F=92=E5=85=A5=E4=BB=A3=E7=A0=81"/></a>' +
		'</div>' +
		'<div id=3D"lang_list" style=3D"position: absolute; top: 28px; left: =
0px; display: none;"></div>' +
		'<textarea class=3D"comment_content" name=3D"comment_content" =
id=3D"comment_content" style=3D"width: 400px; height: =
200px;"></textarea>' +
		'</li></ul>' +
        '<ul><input type=3D"hidden" id=3D"comment_replyId" =
name=3D"comment_replyId" />' +
		'<input type=3D"hidden" id=3D"comment_userId" name=3D"comment_userId" =
value=3D"521203" />' +
		'<input type=3D"hidden" id=3D"commentId" name=3D"commentId" value=3D"" =
/>';	=09

        //if (isBole)
        //{
        //    html +=3D '<input type=3D"checkbox" value=3D"1" =
id=3D"boleattohome" name=3D"boleattohome" =
/>=E6=8E=A8=E8=8D=90=E5=88=B0=E9=A6=96=E9=A1=B5';
        //}
       =20
        html+=3D '<input type=3D"submit" class=3D"comment_btn" =
value=3D"=E6=8F=90=E4=BA=A4" />&nbsp;&nbsp;<span id=3D"tip_comment" =
style=3D"color: Red; display: none;"></span>' +
		'</ul></div></form>';

        $("#comment_form").html(html);
    } else {
        var curl =3D encodeURIComponent(location.href);
        $("#comment_form").html('<div =
class=3D"guest_link">=E6=82=A8=E8=BF=98=E6=B2=A1=E6=9C=89=E7=99=BB=E5=BD=95=
,=E8=AF=B7' +
		//'<a href=3D"javascript:void(0);" =
onclick=3D"javascript:csdn.showLogin(function (dat) =
{js_logined(dat.data.userName);});">[=E7=99=BB=E5=BD=95]</a>=E6=88=96' +
        '<a href=3D"javascript:void(0);" =
onclick=3D"javascript:loginbox();">[=E7=99=BB=E5=BD=95]</a>=E6=88=96' +
		'<a href=3D"http://passport.csdn.net/account/register?from=3D' + curl =
+ '">[=E6=B3=A8=E5=86=8C]</a></div>');
    }
    ubb_event();=20
}

function getcookie(name) {
    var cookie_start =3D document.cookie.indexOf(name);
    var cookie_end =3D document.cookie.indexOf(";", cookie_start);
    return cookie_start =3D=3D -1 ? '' : =
unescape(document.cookie.substring(cookie_start + name.length + 1, =
(cookie_end > cookie_start ? cookie_end : document.cookie.length)));
}

var c_doing =3D false;
function subform(e) {
    if (c_doing) return false;
    var content =3D $.trim($(editorId).val());
    if (content =3D=3D "") {
        =
commentTip("=E8=AF=84=E8=AE=BA=E5=86=85=E5=AE=B9=E6=B2=A1=E6=9C=89=E5=A1=AB=
=E5=86=99!");
        return false;
    } else if (content.length > 1000) {
        =
commentTip("=E8=AF=84=E8=AE=BA=E5=86=85=E5=AE=B9=E5=A4=AA=E9=95=BF=E4=BA=86=
=EF=BC=8C=E4=B8=8D=E8=83=BD=E8=B6=85=E8=BF=871000=E4=B8=AA=E5=AD=97=E7=AC=
=A6=EF=BC=81");
        return false;
    }
    var commentId =3D $("#commentId").val();
    =
commentTip("=E6=AD=A3=E5=9C=A8=E5=8F=91=E8=A1=A8=E8=AF=84=E8=AE=BA...");
    var beginTime =3D new Date();
    $(editorId).attr("disabled", true);
    $("button[type=3Dsubmit]", e).attr("disabled", true);
    c_doing =3D true;
    $.ajax({
        type: "POST",
        url: $(e).attr("action"),
        data: {
            "commentid": commentId,
            "content": content,
            "replyId": $("#comment_replyId").val(),
            "boleattohome": $("#boleattohome").val()
        },
        success: function (data) {
            c_doing =3D false;
            commentTip(data.content);
            if (data.result) {
                var rcommentid=3D$("#comment_replyId").val()
                $(editorId).val('');
                $("#comment_replyId,#comment_verifycode").val('');

                commentscount++;
                loadList(1, true);
                $(editorId).attr("disabled", false);
                $("button[type=3Dsubmit]", e).attr("disabled", false);

                =
commentTip("=E5=8F=91=E8=A1=A8=E6=88=90=E5=8A=9F=EF=BC=81=E8=AF=84=E8=AE=BA=
=E8=80=97=E6=97=B6:" + (new Date() - beginTime) + "=E6=AF=AB=E7=A7=92")

                if (rcommentid!=3Dundefined && rcommentid !=3D "")
                {
                    $("html,body").animate({ scrollTop: =
$("#comment_item_" + rcommentid).offset().top }, 1000);
                }
               =20
            }
        }
    });
    return false;
}

//=E6=93=8D=E4=BD=9C=E6=8F=90=E7=A4=BA
var _c_t;
function commentTip(message) {
    $("#tip_comment").html(message).show();
    clearTimeout(_c_t);
    _c_t =3D setTimeout(function () {
        $("#tip_comment").hide();
    }, 10000);
}

function ubb_event() {
    //ubb=E6=8C=89=E9=92=AE=E4=BA=8B=E4=BB=B6
    $("#ubbtools").children().click(function () {
        var selectedValue =3D editor.selection();
        editor.focus();
        var code =3D $(this).attr("code");
        switch (code) {
            case "code":
                var lang_list =3D $("#lang_list");
                lang_list.show();
                lang_list.children().each(function () {
                    $(this).unbind("click").click(function () {
                        editor.val("[code=3D" + =
$.trim(this.href.split('#')[1]) + "]\n" + selectedValue + "\n[/code]");
                        lang_list.hide();
                    });
                });
                editor.click(function (e) {
                    lang_list.hide();
                });
                break;
            default:
                editor.val("[" + code + "]" + selectedValue + "[/" + =
code + "]");
                break;
        }
        return false;
    });
}
------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://ads.csdn.net/js/async_new.js

(function (d, c) {=0A=
    var host_info =3D document.domain;=0A=
    var prefix_domain =3D '';=0A=
    if (host_info.match(/^beta*/)) {=0A=
        prefix_domain =3D 'beta';=0A=
    } else if (host_info.match(/^l[a-z]*/)) {=0A=
        prefix_domain =3D 'l';=0A=
    }=0A=
    var host_http =3D 'http://' + prefix_domain + 'ads.csdn.net/';=0A=
=0A=
    var a =3D "8c38e720de1c90a6f6ff52f3f89c4d57";=0A=
    c.reviveAsync =3D c.reviveAsync || {};=0A=
    if (!c.reviveAsync.hasOwnProperty(a)) {=0A=
        f =3D c.reviveAsync[a] =3D {=0A=
            id: Object.keys(c.reviveAsync).length,=0A=
            name: "revive",=0A=
            start: function () {=0A=
                var e =3D function () {=0A=
                    try {=0A=
                        if (!f.done) {=0A=
                            d.removeEventListener("DOMContentLoaded", e, =
false);=0A=
                            c.removeEventListener("load", e, false);=0A=
                            f.done =3D true;=0A=
                            f.apply(f.detect())=0A=
                        }=0A=
                    } catch (g) {=0A=
                        console.log(g)=0A=
                    }=0A=
                };=0A=
                if (d.readyState =3D=3D=3D "complete") {=0A=
                    setTimeout(e)=0A=
                } else {=0A=
                    d.addEventListener("DOMContentLoaded", e, false);=0A=
                    c.addEventListener("load", e, false)=0A=
                }=0A=
            },=0A=
            ajax: function (e, g) {=0A=
                /*=0A=
                 var h =3D new XMLHttpRequest();=0A=
                 h.onreadystatechange =3D function() {=0A=
                 if (this.readyState =3D=3D 4) {=0A=
                 if (this.status =3D=3D 200) {=0A=
                 //f.spc(JSON.parse(this.responseText))=0A=
                 }=0A=
                 }=0A=
                 };=0A=
                 h.open("GET", e + "?" + f.encode(g).join("&"), true);=0A=
                 h.withCredentials =3D true;=0A=
                 h.send()=0A=
                 */=0A=
                /*=0A=
                 var oHead =3D =
document.getElementsByTagName('HEAD').item(0);=0A=
                 var oScript=3D document.createElement("script");=0A=
                 oScript.type =3D "text/javascript";=0A=
                 oScript.src=3De + "?" + f.encode(g).join("&");=0A=
                 oHead.appendChild(oScript);=0A=
                 */=0A=
                //alert(1);=0A=
=0A=
            },=0A=
            encode: function (m, n) {=0A=
                var e =3D [], h, i;=0A=
                for (h in m) {=0A=
                    if (m.hasOwnProperty(h)) {=0A=
                        var l =3D n ? n + "[" + h + "]" : h;=0A=
                        if ((/string|number|boolean/).test(typeof m[h])) =
{=0A=
                            e.push(encodeURIComponent(l) + "=3D"=0A=
                            + encodeURIComponent(m[h]))=0A=
                        } else {=0A=
                            var g =3D f.encode(m[h], l);=0A=
                            for (i in g) {=0A=
                                e.push(g[i])=0A=
                            }=0A=
                        }=0A=
                    }=0A=
                }=0A=
                return e=0A=
            },=0A=
            apply: function (g_m) {=0A=
                var g =3D g_m[0];=0A=
                if (g.zones.length) {=0A=
                    var e =3D host_http + "get_ads.php";=0A=
                    g.zones =3D g.zones.join("|");=0A=
                    g.loc =3D d.location.href;=0A=
                    g.ip =3D d.ip;=0A=
                    g.iframe =3D g.iframe.join("|");=0A=
                    if (d.referrer) {=0A=
                        g.referer =3D d.referrer=0A=
                    }=0A=
                    //var aaa=3D document.getElementById("test1");=0A=
                    //alert(aaa.innerHTML);=0A=
                    //g_m[1].innerHTML =3D "aaa<script =
type=3D'text/javascript' src=3D'"+e + "?" + =
f.encode(g).join("&")+"'><\/script>";=0A=
=0A=
                    //f.ajax(e, g)=0A=
                    var span =3D document.createElement("span");=0A=
                    g_m[1] =3D g_m[1].appendChild(span);=0A=
                    if (g_m[1]) g_m[1].parentNode.removeChild(g_m[1]);=0A=
                    var scriptObj =3D document.createElement("script");=0A=
                    scriptObj.src =3D e + "?ip=3D" + =
f.GetQueryString("ip") + "&" + f.encode(g).join("&");=0A=
                    scriptObj.type =3D "text/javascript";=0A=
                    =
document.getElementsByTagName("head")[0].appendChild(scriptObj);=0A=
=0A=
                    //var sinfo =3D '{"revive-0-0":{"html":"<table =
width=3D\'150\' height=3D\'300\' border=3D\'0\' cellspacing=3D\'0\' =
cellpadding=3D\'0\' align=3D\'center\' bgcolor=3D\'#fff\' =
style=3D\'background-color:#fff;border-left:1px solid =
#e8e8e8;border-right:1px solid #e8e8e8;\'>    <tbody>     <tr =
style=3D\'vertical-align:top;\'>      <td width=3D\'150\'>&nbsp;<\/td>   =
   <td style=3D\'text-align:center;\'><img =
src=3D\'http:\/\/img.bss.csdn.net\/201511241004259379.png\' \/>       <p =
style=3D\'height:14px\'><\/p><p =
style=3D\'font-size:16px;font-family:\'\u5fae\u8f6f\u96c5\u9ed1\',\u5b8b\=
u4f53,Arial,sans-serif;line-height:22px;color:#ff9900;text-align:center;\=
'>\u56fe\u6587\u6df7\u6392\u5e7f\u544a\u6d4b\u8bd5<p> <p =
style=3D\'font-size:14px;font-family:\'\u5fae\u8f6f\u96c5\u9ed1\',\u5b8b\=
u4f53,Arial,sans-serif;line-height:22px;color:#666;text-align:left;\'>\u8=
fd9\u662f\u7b80\u5355\u7684\u56fe\u6587\u6df7\u6392\u6d4b\u8bd5<p><\/td> =
 <td width=3D\'90\'>&nbsp;<\/td>     <td width=3D\'150\' =
style=3D\'border-right:1px solid #e8e8e8;\'>&nbsp;<\/td>     <\/tr>    =
<\/tbody>  <\/table> ","width":"150","height":"300"}}';=0A=
                    //var kinfo =3D =
'{"revive-0-0":{"html":"aaabbb","width":"150","height":"300"}}';=0A=
                    //alert(sinfo);=0A=
                    //f.spc(JSON.parse(sinfo));=0A=
                }=0A=
            },=0A=
            detect: function () {=0A=
                var o =3D d.querySelectorAll("ins[data-" + f.name + =
"-id=3D'" + a=0A=
                + "']");=0A=
                var n =3D {=0A=
                    zones: [],=0A=
                    iframe: [],=0A=
                    prefix: f.name + "-" + f.id + "-"=0A=
                };=0A=
                for (var g =3D 0; g < o.length; g++) {=0A=
                    var k =3D o[g];=0A=
                    var ak =3D k;=0A=
                    if (k.hasAttribute("data-" + f.name + "-zoneid")) {=0A=
                        var l =3D new RegExp("^data-" + f.name + =
"-(.*)$"), e;=0A=
                        for (var h =3D 0; h < k.attributes.length; h++) {=0A=
                            if (e =3D k.attributes[h].name.match(l)) {=0A=
                                if (e[1] =3D=3D "zoneid") {=0A=
                                    n.zones[g] =3D k.attributes[h].value;=0A=
                                    k.id =3D n.prefix + g=0A=
                                } else {=0A=
                                    if (e[1] !=3D "id") {=0A=
                                        n[e[1]] =3D k.attributes[h].value=0A=
                                    }=0A=
                                }=0A=
                            }=0A=
                        }=0A=
                    }=0A=
                    if (ak.hasAttribute("iframe")) {=0A=
                        var al =3D new RegExp("iframe"), e;=0A=
                        for (var h =3D 0; h < ak.attributes.length; h++) =
{=0A=
                            if (e =3D ak.attributes[h].name.match(al)) {=0A=
                                if (e =3D=3D "iframe") {=0A=
                                    n.iframe[g] =3D =
ak.attributes[h].value;=0A=
                                }=0A=
                            }=0A=
                        }=0A=
                    } else {=0A=
                        n.iframe[g] =3D 'false';=0A=
                    }=0A=
                }=0A=
                var n_m =3D new Array();=0A=
                n_m[0] =3D n;=0A=
                n_m[1] =3D k;=0A=
                return n_m;=0A=
            },=0A=
            createFrame: function (h) {=0A=
                var e =3D d.createElement("IFRAME"), g =3D e.style;=0A=
                e.scrolling =3D "no";=0A=
                e.frameBorder =3D 0;=0A=
                e.width =3D h.width > 0 ? h.width : 0;=0A=
                e.height =3D h.height > 0 ? h.height : 0;=0A=
                g.border =3D 0;=0A=
                g.overflow =3D "hidden";=0A=
                return e=0A=
            },=0A=
            loadFrame: function (g, e) {=0A=
                var h =3D g.contentDocument || g.contentWindow.document;=0A=
                h.open();=0A=
                h.writeln("<!DOCTYPE html>");=0A=
                h.writeln("<html>");=0A=
                h.writeln('<head><base target=3D"_top"></head>');=0A=
                h.writeln('<body border=3D"0" margin=3D"0" =
style=3D"margin: 0; padding: 0">');=0A=
                h.writeln(e);=0A=
                h.writeln("</body>");=0A=
                h.writeln("</html>");=0A=
                h.close()=0A=
            },=0A=
            spc: function (k) {=0A=
                for (var e in k) {=0A=
                    if (k.hasOwnProperty(e)) {=0A=
                        var o =3D k[e];=0A=
                        var n =3D d.getElementById(e);=0A=
                        if (o.html) {=0A=
                            if (n) {=0A=
                                var m =3D d.createElement("div");=0A=
                                var w=3Do.width;=0A=
                                var h=3Do.height;=0A=
								m.style.width=3Dw+"px";=0A=
								m.style.height=3Dh+"px";=0A=
                                //m.style =3D "padding: 0px; margin: =
0px; border: 0px none;width:"+o.width+"px;height:"+o.height+"px";=0A=
                                //m.class =3D "J_adv";=0A=
                                m.setAttribute('class','J_adv'); =0A=
                                m.setAttribute("data-view", o.data_view);=0A=
                                m.setAttribute("data-mod", 'ad_popu_' + =
o.data_aid);//=E5=B9=BF=E5=91=8A=E4=BD=8Did=0A=
                                m.setAttribute("data-mtp", =
o.data_mod);//=E5=B9=BF=E5=91=8A=E4=BD=8D=E7=B1=BB=E5=9E=8B=0A=
                                m.setAttribute("data-order", =
o.data_order);//=E5=B9=BF=E5=91=8A=E4=BD=8D=E7=B1=BB=E5=9E=8B=0A=
                                if (o.hasOwnProperty('data_swapimg')) {=0A=
                                    m.setAttribute('data-swapimg', =
o.data_swapimg);=0A=
                                }=0A=
                                //var img =3Dnew Image();=0A=
                    			=
//img.src=3D"http://ads.csdn.net/add_num.php?mod=3Dad_popu_"+o.data_aid+"=
&ck=3D-";=0A=
                    			=0A=
                    			var adv=3D{};=0A=
                    			adv.data=3D{};=0A=
                    			var preAdr=3Dd.referrer || "-";   // =
=E5=89=8D=E4=B8=80=E4=B8=AA=E6=96=87=E6=A1=A3=E5=9C=B0=E5=9D=80=0A=
                    			adv.data.ref =3D preAdr;=0A=
                    			adv.data.mtp =3D o.data_mod;=0A=
                    			adv.data.mod =3D 'ad_popu_'+o.data_aid;=0A=
                    			adv.data.con =3D =
'ad_content_'+o.data_ideaid+',ad_order_'+o.data_order;=0A=
                    			//f.sendData(adv,"//ads.csdn.net/add_num.php?");=0A=
                    			f.sendData(adv,"//dc.csdn.net/re?");=0A=
                    			=0A=
                                m.setAttribute("data-con", 'ad_content_' =
+ o.data_ideaid);=0A=
                                m.setAttribute("class", "J_adv");=0A=
                                if (o.iframeFriendly) {=0A=
                                    var l =3D f.createFrame(o);=0A=
                                    m.appendChild(l);=0A=
                                    n.parentNode.replaceChild(m, n);=0A=
                                    f.loadFrame(l, o.html);=0A=
                                } else {=0A=
                                    m.innerHTML =3D o.html;=0A=
                                    var g =3D =
m.getElementsByTagName("SCRIPT");=0A=
                                    for (var l =3D 0; l < g.length; l++) =
{=0A=
                                        var q =3D =
document.createElement("SCRIPT");=0A=
                                        var p =3D g[l].attributes;=0A=
                                        for (var h =3D 0; h < p.length; =
h++) {=0A=
                                            q[p[h].nodeName] =3D =
p[h].value=0A=
                                        }=0A=
                                        if (g[l].innerHTML) {=0A=
                                            q.text =3D g[l].innerHTML;=0A=
                                        }=0A=
                                        m.replaceChild(q, g[l])=0A=
                                    }=0A=
                                    n.parentNode.replaceChild(m, n)=0A=
                                }=0A=
                            }=0A=
                        }=0A=
                    }=0A=
                }=0A=
=0A=
                //CSDN.track.addAdvs();=0A=
                =0A=
                 if(f.isExitsFunction('CSDN.track.addAdvs')){=0A=
                	 CSDN.track.addAdvs();=0A=
                 }=0A=
                 =0A=
            },=0A=
            =
//=E6=98=AF=E5=90=A6=E5=AD=98=E5=9C=A8=E6=8C=87=E5=AE=9A=E5=87=BD=E6=95=B0=0A=
            isExitsFunction: function (funcName) {=0A=
                try {=0A=
                    if (typeof(eval(funcName)) =3D=3D "function") {=0A=
                        return true;=0A=
                    }=0A=
                } catch (e) {=0A=
                }=0A=
                return false;=0A=
            },=0A=
            GetQueryString: function (name) {=0A=
                var reg =3D new RegExp("(^|&)" + name + =
"=3D([^&]*)(&|$)");=0A=
                var r =3D window.location.search.substr(1).match(reg);=0A=
                if (r !=3D null) return unescape(r[2]);=0A=
                else return null;=0A=
            },=0A=
            //=E8=8E=B7=E5=8F=96=E7=94=A8=E6=88=B7ID=0A=
    		getUserId:function(){=0A=
    			var result=3D/(; =
)?(UserName|_javaeye_cookie_id_)=3D([^;]+)/.exec(d.cookie);=0A=
    			var uid=3D (result !=3D null ? result[3] : void 0) || '-';=0A=
    			return uid;=0A=
    		},=0A=
    		//=E6=8F=90=E4=BA=A4=E6=95=B0=E6=8D=AE=0A=
    		sendData:function(adv,url){=0A=
    			adv.data.uid=3Df.getUserId();=0A=
    			protocol=3D"http:";=0A=
    			adv.data.ck=3D'-';=0A=
    			var dataStr=3Dthis.paramData(adv.data);=0A=
    			var img =3Dnew Image();=0A=
    			img.onload=3Dimg.onerror=3Dfunction(){=0A=
    				img.onload=3Dimg.onerror=3Dnull;=0A=
    				img=3Dnull;=0A=
    			}=0A=
				img.src=3Dprotocol+url+dataStr;=0A=
    		},=0A=
    		=
//=E6=95=B0=E6=8D=AE=E8=BD=AC=E6=8D=A2=E4=B8=BA=E5=AD=97=E7=AC=A6=E4=B8=B2=
=E5=BD=A2=E5=BC=8F=0A=
    		paramData:function(data){=0A=
    			var dataArr=3D[];=0A=
    			for(var key in data){=0A=
    				var text=3Dkey+"=3D"+data[key];=0A=
    				text.replace(/^\s+|\s+$/g,"");=0A=
    				dataArr.push(text);=0A=
    			}=0A=
    			return dataArr.join("&")=0A=
    		}=0A=
        };=0A=
        try {=0A=
            f.start()=0A=
        } catch (b) {=0A=
            console.log(b)=0A=
        }=0A=
    }=0A=
})(document, window);=0A=

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/rabbit/cnick/cnick.js

var __hasProp=3D{}.hasOwnProperty;!function(a){var =
b,c,d,e;d=3Dthis,b=3Dd.jQuery,c=3D{},a(d,c,b),void =
0=3D=3D=3Dd.csdn&&(d.csdn=3Dc);for(e in =
c)__hasProp.call(c,e)&&(d[e]=3Dd.csdn[e]=3Dc[e])}(function(a,b,c){var =
d,e,f,g,h;if(!(a.CNick instanceof Function&&a.cnick instanceof =
Function&&(null!=3D(h=3Da.csdn)?h.cnick:void 0)instanceof =
Function))return void =
0=3D=3D=3DString.prototype.trim&&(String.prototype.trim=3Dfunction(){retu=
rn this.replace(/^\s+|\s+$/g,"")}),g=3D{},e=3Dfunction(b,c){var =
d,e;return =
arguments.length>1?(g[b]=3Dc,null!=3D(d=3Da.localStorage)?d["cnick_"+b]=3D=
+new Date+","+c:void 0):null!=3Db?g[b]||function(a){var =
b,c,d,e;if(null!=3Da)return =
d=3Da.split(","),b=3Dd[0],c=3Dd[1],0<(e=3Dnew Date-new =
Date(parseInt(b,10)))&&1728e5>e?c:void =
0}(null!=3D(e=3Da.localStorage)?e["cnick_"+b]:void 0):void =
0},b.cnick=3Df=3Dfunction(b,d,f){var =
g,h,i,j,k,l,m,n,o,p;for(null=3D=3Db&&(b=3D"a.user_name"),null=3D=3Dd&&(d=3D=
a.document),null=3D=3Df&&(f=3D!1),h=3Dc(b,d).filter(function(){return =
f||null=3D=3Dc(this).data("orig_username")}).data("orig_username",""),k=3D=
{},o=3D0,p=3Dh.length;p>o;o++)g=3Dh[o],m=3Dg.innerHTML.trim(),null!=3D(l=3D=
e(m))?c(g).data("orig_username",m).text(l):(j=3Dk.hasOwnProperty(m)?k[m]:=
k[m]=3D[],j.push(g));for(n=3Dfunction(){var a;a=3D[];for(i in =
k)__hasProp.call(k,i)&&a.push(i);return =
a}();n.length>0;)c.getJSON("https://passport.csdn.net/get/nick?callback=3D=
?",{users:n.splice(0,100).join()},function(a){var =
b,d,f,g,h;if(d=3Da.status,b=3Da.data,d&&b)for(f=3D0,g=3Db.length;g>f;f++)=
h=3Db[f],m=3Dh.u,i=3Dh.n,"null"=3D=3D=3Di&&(i=3Dm),c(k[m]).data("orig_use=
rname",m).text(function(a,b){return i||b}),e(m,i)})},c(function(){return =
f()}),a.CNick=3Dd=3Dfunction(){function a(a){this.selector=3Da}return =
a.prototype.showNickname=3Dfunction(){return f(this.selector)},a}()});
------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/newblog.min.js

/*plugins.js*/
;
(function($) {
    $.fn.extend({selection: function() {
        var selectedValue =3D '';
        var me =3D this[0];
        if (document.selection) {
            var range =3D document.selection.createRange();
            selectedValue =3D range.text;
        }
        else if (typeof (me.selectionStart) =3D=3D 'number') {
            var start =3D me.selectionStart;
            var end =3D me.selectionEnd;
            if (start !=3D end) {
                selectedValue =3D me.value.substring(start, end);
            }
        }
        return $.trim(selectedValue);
    },parseHtml: function(val) {
        var me =3D this[0];
        var value =3D $(this).val();
        if (document.selection) {
            var range =3D document.selection.createRange();
            if (range.text) {
                range.text =3D val;
            } else {
                $(this).val(value + val);
            }
        } else if (typeof (me.selectionStart) =3D=3D 'number') {
            var start =3D me.selectionStart;
            var end =3D me.selectionEnd;
            var startVal =3D value.substring(0, start);
            var endVal =3D value.substring(end);
            $(this).val(startVal + val + endVal);
        }
        else
            $(this).val(value + val);
        me.selectionStart =3D me.selectionEnd =3D $(this).val().length;
        me.focus();
    }});
})(jQuery);
jQuery.cookie =3D function(name, value, options) {
    if (typeof value !=3D 'undefined') {
        options =3D options || {};
        if (value =3D=3D=3D null) {
            value =3D '';
            options.expires =3D -1;
        }
        var expires =3D '';
        if (options.expires && (typeof options.expires =3D=3D 'number' =
|| options.expires.toUTCString)) {
            var date;
            if (typeof options.expires =3D=3D 'number') {
                date =3D new Date();
                date.setTime(date.getTime() + (options.expires * 24 * 60 =
* 60 * 1000));
            } else {
                date =3D options.expires;
            }
            expires =3D '; expires=3D' + date.toUTCString();
        }
        var path =3D options.path ? '; path=3D' + (options.path) : '';
        var domain =3D options.domain ? '; domain=3D' + (options.domain) =
: '';
        var secure =3D options.secure ? '; secure' : '';
        document.cookie =3D [name, '=3D', encodeURIComponent(value), =
expires, path, domain, secure].join('');
    } else {
        var cookieValue =3D null;
        if (document.cookie && document.cookie !=3D '') {
            var cookies =3D document.cookie.split(';');
            for (var i =3D 0; i < cookies.length; i++) {
                var cookie =3D jQuery.trim(cookies[i]);
                if (cookie.substring(0, name.length + 1) =3D=3D (name + =
'=3D')) {
                    cookieValue =3D =
decodeURIComponent(cookie.substring(name.length + 1));
                    break;
                }
            }
        }
        return cookieValue;
    }
};
jQuery.createMask =3D function() {
    var height =3D document.documentElement.clientHeight;
    var width =3D document.documentElement.clientWidth;
    var bodyHeight =3D $("body").height();
    if (bodyHeight > height) {
        height =3D bodyHeight;
    }
    var mask =3D {};
    if ($("#mask_div").length =3D=3D 0) {
        $("body").append('<div id=3D"mask_div" =
style=3D"position:absolute;top:0;left:0;filter:alpha(opacity=3D20);-moz-o=
pacity:0.2;opacity:.2;"></div>')
    }
    mask =3D $("#mask_div");
    mask.css({"width": width,"height": height,"background": "#000"});
};
jQuery.removeMask =3D function() {
    $("#mask_div").remove();
};
Array.prototype.contain =3D function(val) {
    for (var i =3D 0; i < this.length; i++) {
        if (this[i] =3D=3D=3D val) {
            return true;
        }
    }
    return false;
}
/*common.js*/
$(document).ready(function() {
  =20
    $("#btnSubmit").click(function () {
        var key =3D $("#inputSearch").val();
        if (key =3D=3D "") {
            =
alert("=E8=AF=B7=E8=BE=93=E5=85=A5=E6=90=9C=E7=B4=A2=E5=85=B3=E9=94=AE=E5=
=AD=97");
            $("#inputSearch").focus();
            return false;
        }
        $("#inputQ").val('blog:' + username + ' ' + key);
        return true;
    });
   =20
    initArchives();
   =20
  =20
    initDigg();
    buildCTable();
    initShareButtons();
  =20
});
function initArchives() {
    var shortlist =3D '';
    var hidelist =3D '';
    var list =3D $("#archive_list");
    list.children().each(function(i) {
        if (i < 5)
            shortlist +=3D "<li>" + $(this).html() + "</li>";
        else
            hidelist +=3D "<li>" + $(this).html() + "</li>";
    });
    if (hidelist =3D=3D '')
        return;
    hidelist =3D '<span class=3D"hidelist" style=3D"display:none;">' + =
hidelist + '</span>';
    list.html(shortlist + hidelist + '<div id=3D"archive_list_button" =
class=3D"list_closed">=E5=B1=95=E5=BC=80</div>');   =20
    $("#archive_list_button").click(function () {
        if ($(this).html() =3D=3D "=E5=B1=95=E5=BC=80"){
            $(this).html("=E6=94=B6=E8=B5=B7");
            $(this).removeClass("list_closed").addClass("list_opended");
            $(".hidelist", list).show();
        }else{
            $(this).html("=E5=B1=95=E5=BC=80");
            $(this).removeClass("list_opended").addClass("list_closed");
            $(".hidelist", list).hide();
        }
    });


}
function initShareButtons() {
    var panel =3D $("#sharePanel");
    if (panel.length =3D=3D 0)
        return;
    var url =3D encodeURIComponent(document.location);
    var title =3D encodeURIComponent(document.title);
    var shareto =3D {"sina": function() {
        var _u =3D 'http://v.t.sina.com.cn/share/share.php?url=3D' + url =
+ '&title=3D' + title;
        var imgs =3D $(".article_content img");
        if (imgs.length > 0) {
            _u +=3D "&pic=3D" + encodeURIComponent(imgs[0].src);
        }
        openWindow(_u);
    },"qq": function() {
        var _site =3D 'http://blog.csdn.net';
        var _u =3D 'http://v.t.qq.com/share/share.php?url=3D' + url + =
'&site=3D' + _site + '&title=3D' + title;
        var imgs =3D $(".article_content img");
        if (imgs.length > 0) {
            _u +=3D "&pic=3D" + encodeURIComponent(imgs[0].src);
        }
        openWindow(_u);
    }};
    =
$("#sharePanel").html('<span>=E5=88=86=E4=BA=AB=E5=88=B0=EF=BC=9A</span> =
<a name=3D"sina" class=3D"share_sina" =
title=3D"=E5=88=86=E4=BA=AB=E5=88=B0=E6=96=B0=E6=B5=AA=E5=BE=AE=E5=8D=9A"=
></a><a name=3D"qq" class=3D"share_qq" =
title=3D"=E5=88=86=E4=BA=AB=E5=88=B0=E8=85=BE=E8=AE=AF=E5=BE=AE=E5=8D=9A"=
></a>');
    $("#sharePanel a").each(function() {
        var name =3D $(this).attr("name");
        if (!name)
            return;
        $(this).click(function() {
            shareto[name]();
            return false;
        });
    });
}
function initDigg() {
    var diggdiv =3D $("#digg");
    if (diggdiv.length > 0) {
        var articleId =3D diggdiv.attr("ArticleId");
        $("#btnDigg,#btnBury").click(function () {
                if ($(this).attr("class") =3D=3D "digg digg_disable")
                {
                    return;
                }
                var id =3D $(this).attr("id");
                var action =3D id =3D=3D "btnDigg" ? "digg" : "bury";
                //blog_address =3D =
"http://dev.blog.csdn.net:5391/csdntest01";
                $.get(blog_address + "/article/" + action + =
"?ArticleId=3D" + articleId, function (data) {
                    $("#btnDigg dd").html(data.digg);
                    $("#btnBury dd").html(data.bury);                    =

                });         =20
        });
    }
}
function initBodyHeight() {
    var siderHeight =3D $("#sider").height();
    var mainHeight =3D $("#main").height();
    if (siderHeight > mainHeight) {
        $("#body").height(siderHeight);
    }
    else {
        $("#body").height(mainHeight + 100);
    }
}
function collectArticle(title, fileName) {
    openWindow("http://wz.csdn.net/storeit.aspx?t=3D" + =
encodeURIComponent(title) + "&u=3D" + blog_address + "/article/details/" =
+ fileName, title);
}
function untopArticle(articleId) {
    if =
(!confirm("=E4=BD=A0=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=8F=96=E6=B6=88=E7=BD=AE=
=E9=A1=B6=E8=BF=99=E7=AF=87=E6=96=87=E7=AB=A0=E5=90=97=EF=BC=9F"))
        return;
    $.get(blog_address + "/article/untop?articleId=3D" + articleId, =
function(txt) {
        var data =3D eval("(" + txt + ")");
        if (data.result) {
            =
alert("=E6=96=87=E7=AB=A0=E5=B7=B2=E5=8F=96=E6=B6=88=E7=BD=AE=E9=A1=B6=EF=
=BC=81");
            location.reload();
        } else {
            if (data.content)
                alert(data.content);
            else
                =
alert("=E6=97=A0=E6=B3=95=E5=8F=96=E6=B6=88=E7=BD=AE=E9=A1=B6=EF=BC=8C=E8=
=AF=B7=E5=88=B0=E5=90=8E=E5=8F=B0=E6=93=8D=E4=BD=9C=EF=BC=81");
        }
    });
}
function deleteArticle(articleId) {
    if =
(!confirm("=E4=BD=A0=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=88=A0=E9=99=A4=E8=BF=99=
=E7=AF=87=E6=96=87=E7=AB=A0=E5=90=97=EF=BC=9F"))
        return;
    $.get(blog_address + "/article/delete?articleId=3D" + articleId, =
function(txt) {
        var data =3D eval("(" + txt + ")");
        if (data.result) {
            =
alert("=E6=96=87=E7=AB=A0=E5=B7=B2=E5=88=A0=E9=99=A4=EF=BC=81");
            location.reload();
        } else {
            if (data.content)
                alert(data.content);
            else
                =
alert("=E6=97=A0=E6=B3=95=E5=88=A0=E9=99=A4=EF=BC=8C=E8=AF=B7=E5=88=B0=E5=
=90=8E=E5=8F=B0=E5=88=A0=E9=99=A4=EF=BC=81");
        }
    });
}
function openWindow(url, title) {
    var _t =3D title || encodeURI(document.title);
    var _u =3D url || encodeURIComponent(document.location);
    var f =3D function() {
        var left =3D (screen.width - 600) / 2;
        var top =3D (screen.height - 450) / 2;
        if (!window.open(url, '', =
'toolbar=3D0,resizable=3D1,scrollbars=3Dyes,status=3D1,width=3D600,height=
=3D400'))
            location.href =3D url;
    }
    if (/Firefox/.test(navigator.userAgent))
        setTimeout(f, 0);
    else
        f();
}
function report(id, t, e) {
    $.createMask();
    var url =3D blog_address + "/common/report?id=3D" + id + "&t=3D" + =
t;
    if (t =3D=3D 3) {
        var floor =3D =
e.parentNode.parentNode.parentNode.getAttribute('floor');
        url +=3D "&floor=3D" + floor;
    }
    var top =3D (document.documentElement.clientHeight - 400) / 2 + =
(document.documentElement.scrollTop || document.body.scrollTop);
    var left =3D (document.documentElement.clientWidth - 400) / 2;
    $("#report_dialog").load(url).css({"top": top + "px","left": =
left}).show();
}
function getCalendar(time) {
    $("#calendar").load(blog_address + "/Article/Calendar?time=3D" + =
time + "&.calendar");
    return false;
}
;
function buildCTable() {
    var hs =3D $('#article_content').find('h1,h2,h3,h4,h5,h6');
    if (hs.length < 2)
        return;
    var s =3D '';
    s +=3D '<div style=3D"clear:both"></div>';
    s +=3D '<div style=3D"border:solid 1px #ccc; background:#eee; =
float:left; min-width:200px;padding:4px 10px;">';
    s +=3D '<p style=3D"text-align:right;margin:0;"><span =
style=3D"float:left;">=E7=9B=AE=E5=BD=95<a href=3D"#" =
title=3D"=E7=B3=BB=E7=BB=9F=E6=A0=B9=E6=8D=AE=E6=96=87=E7=AB=A0=E4=B8=ADH=
1=E5=88=B0H6=E6=A0=87=E7=AD=BE=E8=87=AA=E5=8A=A8=E7=94=9F=E6=88=90=E6=96=87=
=E7=AB=A0=E7=9B=AE=E5=BD=95">(?)</a></span><a href=3D"#" =
onclick=3D"javascript:return openct(this);" =
title=3D"=E5=B1=95=E5=BC=80">[+]</a></p>';
    s +=3D '<ol =
style=3D"display:none;margin-left:14px;padding-left:14px;line-height:160%=
;">';
    var old_h =3D 0, ol_cnt =3D 0;
    for (var i =3D 0; i < hs.length; i++) {
        var h =3D parseInt(hs[i].tagName.substr(1), 10);
        if (!old_h)
            old_h =3D h;
        if (h > old_h) {
            s +=3D '<ol>';
            ol_cnt++;
        }
        else if (h < old_h && ol_cnt > 0) {
            s +=3D '</ol>';
            ol_cnt--;
        }
        if (h =3D=3D 1) {
            while (ol_cnt > 0) {
                s +=3D '</ol>';
                ol_cnt--;
            }
        }
        old_h =3D h;
        var tit =3D hs.eq(i).text().replace(/^\d+[.=E3=80=81\s]+/g, '');
        tit =3D tit.replace(/[^a-zA-Z0-9_\-\s\u4e00-\u9fa5]+/g, '');

        if (tit.length < 100) {
            s +=3D '<li><a href=3D"#t' + i + '">' + tit + '</a></li>';
            hs.eq(i).html('<a name=3D"t' + i + '"></a>' + =
hs.eq(i).html());
        }
    }
    while (ol_cnt > 0) {
        s +=3D '</ol>';
        ol_cnt--;
    }
    s +=3D '</ol></div>';
    s +=3D '<div style=3D"clear:both"></div>';
    $(s).insertBefore($('#article_content'));
}
function openct(e) {
    if (e.innerHTML =3D=3D '[+]') {
        $(e).attr('title', =
'=E6=94=B6=E8=B5=B7').html('[-]').parent().next().show();
    } else {
        $(e).attr('title', =
'=E5=B1=95=E5=BC=80').html('[+]').parent().next().hide();
    }
    e.blur();
    return false;
}
/*blogger.js*/
$(document).ready(function () {
   =20
    var un =3D getUN().toLowerCase();
    if (un =3D=3D _blogger.toLowerCase()) {
        $('.interact').hide();
    } else if (un) {
        set_guanzhu_status(un);
    } else {
        if (un !=3D "") {
            $('#span_add_follow')[0].onclick =3D (function() {
                loginto(0);
            });
        }
    }
   =20
});
function set_guanzhu_status(un) {
    var url =3D "http://my.csdn.net/index.php/follow/check_is_followed/" =
+ encodeURIComponent(un) + "/" + encodeURIComponent(_blogger) + =
"?jsonpcallback=3D?";
    $.getJSON(url, {}, function(data) {
        if (data.succ =3D=3D 1 && data.info =3D=3D 1) {
            $('#span_add_follow').attr('class', 'attented')[0].onclick =
=3D (function() {
                return false;
            });
        } else {
            $('#span_add_follow')[0].onclick =3D guanzhu;
        }
    }, 'json');
}
function guanzhu() {
    var url =3D =
"http://my.csdn.net/index.php/follow/do_follow?jsonpcallback=3D?";
    $.getJSON(url, {"username": _blogger}, function(data) {
        if (data.succ =3D=3D 1) {
            alert('=E5=85=B3=E6=B3=A8=E6=88=90=E5=8A=9F=EF=BC=81');
            $('#span_add_follow').attr('class', 'attented')[0].onclick =
=3D (function() {
                return false;
            });
        } else {
            alert(data.msg);
        }
    });
    return false;
}
function getUN() {
    var m =3D document.cookie.match(new RegExp("(^| =
)UserName=3D([^;]*)(;|$)"));
    if (m)
        return m[2];
    else
        return '';
}
function loginto(n) {
    if (!n) {
        csdn.showLogin(function(data) {
            js_logined(data.data.userName);
        });
    } else {
        if (!getUN()) {
            csdn.showLogin(function(data) {
                js_logined(data.data.userName);
            });
        } else {
            location =3D 'http://my.csdn.net/my/letter/send/' + =
_blogger;
        }
    }
}
function js_logined(un) {
    location =3D '?reload';
}
/*SyntaxHighlighter/shCore-src.js*/
var a, dp =3D {sh: {Toolbar: {},Utils: {},RegexLib: {},Brushes: =
{},Strings: {AboutDialog: =
'<html><head><title>About...</title></head><body =
class=3D"dp-about"><table cellspacing=3D"0"><tr><td class=3D"copy"><p =
class=3D"title">dp.SyntaxHighlighter</div><div class=3D"para">Version: =
{V}</p><p><a =
href=3D"http://www.dreamprojections.com/syntaxhighlighter/?ref=3Dabout" =
target=3D"_blank">http://www.dreamprojections.com/syntaxhighlighter</a></=
p>&copy;2004-2007 Alex Gorbatchev.</td></tr><tr><td =
class=3D"footer"><input type=3D"button" class=3D"close" value=3D"OK" =
onClick=3D"window.close()"/></td></tr></table></body></html>'},ClipboardS=
wf: =
'http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf',Ver=
sion: "1.5.1"}};
dp.SyntaxHighlighter =3D dp.sh;
dp.sh.Toolbar.Commands =3D {
    ExpandSource: {label: "+ expand source",check: function(b) {
            return b.collapse
        },func: function(b, c) {
                b.parentNode.removeChild(b);
                c.div.className =3D c.div.className.replace("collapsed", =
"");
            }
    },
    ViewSource: {label: "view plain",func: function(b, c) {
        b =3D dp.sh.Utils.FixForBlogger(c.originalCode).replace(/</g, =
"&lt;");
        c =3D window.open("", "_blank", "width=3D750, height=3D400, =
location=3D0, resizable=3D1, menubar=3D0, scrollbars=3D0");
        c.document.write('<textarea style=3D"width:99%;height:99%">' + b =
+ "</textarea>");
        c.document.close();
    }},
    CopyToClipboard: {
        label: "copy",check: function() {
            return window.clipboardData !=3D null || dp.sh.ClipboardSwf =
!=3D null
        },
        func: function(b, c) {
            //b =3D =
dp.sh.Utils.FixForBlogger(c.originalCode).replace(/</g, "&lt;");
            b =3D =
dp.sh.Utils.FixForBlogger(c.originalCode).replace(/&lt;/g, =
"<").replace(/&gt;/g, ">").replace(/&amp;/g, "&");
            if (window.clipboardData)
                window.clipboardData.setData("text", b);
            else if (dp.sh.ClipboardSwf !=3D null) {
                var d =3D c.flashCopier;
                if (d =3D=3D null) {
                    d =3D document.createElement("div");
                    c.flashCopier =3D d;
                    c.div.appendChild(d);
                }
                d.innerHTML =3D '<embed src=3D"' + dp.sh.ClipboardSwf + =
'" FlashVars=3D"clipboard=3D' + encodeURIComponent(b) + '" width=3D"0" =
height=3D"0" type=3D"application/x-shockwave-flash"></embed>';
            }
            alert("The code is in your clipboard now");
        }
    },
    PrintSource:{
        label: "print",func: function(b, c) {
            b =3D document.createElement("IFRAME");
            var d =3D null;
            b.style.cssText =3D =
"position:absolute;width:0px;height:0px;left:-500px;top:-500px;";
            document.body.appendChild(b);
            d =3D b.contentWindow.document;
            dp.sh.Utils.CopyStyles(d, window.document);
            d.write('<div class=3D"' + =
c.div.className.replace("collapsed", "") + ' printing">' + =
c.div.innerHTML + "</div>");
            d.close();
            b.contentWindow.focus();
            b.contentWindow.print();
            alert("Printing...");
            document.body.removeChild(b);
        }
    },
    About: {label: "?",func: function() {
        var b =3D window.open("", "_blank", =
"dialog,width=3D300,height=3D150,scrollbars=3D0"), c =3D b.document;
        dp.sh.Utils.CopyStyles(c, window.document);
        c.write(dp.sh.Strings.AboutDialog.replace("{V}", =
dp.sh.Version));
        c.close();
        b.focus()
    }}
};
dp.sh.Toolbar.Create =3D function(b) {
    var _code =3D b.source.className;
    var c =3D document.createElement("DIV");
    c.className =3D "tools";
    c.innerHTML =3D '<b>[' + _code + ']</b> ';
    for (var d in dp.sh.Toolbar.Commands) {
        var f =3D dp.sh.Toolbar.Commands[d];
        //   f.check !=3D null && !f.check(b) || (c.innerHTML +=3D '<a =
href=3D"#" class=3D"' + d + '" title=3D"' + f.label + '" =
onclick=3D"dp.sh.Toolbar.Command(\'' + d + "',this);return false;\">" + =
f.label + "</a>")
        if (f.label =3D=3D "print") {
            f.check !=3D null && !f.check(b) || (c.innerHTML +=3D '<span =
data-mod=3D"popu_169"> <a href=3D"#" class=3D"' + d + '" title=3D"' + =
f.label + '" onclick=3D"dp.sh.Toolbar.Command(\'' + d + "',this);return =
false;\">" + f.label + "</a></span>")
        }
        else if (f.label =3D=3D "copy") {
            f.check !=3D null && !f.check(b) || (c.innerHTML +=3D '<span =
data-mod=3D"popu_168"> <a href=3D"#" class=3D"' + d + '" title=3D"' + =
f.label + '" onclick=3D"dp.sh.Toolbar.Command(\'' + d + "',this);return =
false;\">" + f.label + "</a></span>")
        }
        else {
            f.check !=3D null && !f.check(b) || (c.innerHTML +=3D '<a =
href=3D"#" class=3D"' + d + '" title=3D"' + f.label + '" =
onclick=3D"dp.sh.Toolbar.Command(\'' + d + "',this);return false;\">" + =
f.label + "</a>")
        }
    }
    return c;
};
dp.sh.Toolbar.Command =3D function(b, c) {
    for (var d =3D c; d !=3D null && =
d.className.indexOf("dp-highlighter") =3D=3D -1; )
        d =3D d.parentNode;
    d !=3D null && dp.sh.Toolbar.Commands[b].func(c, d.highlighter)
    //console.log(dp.sh.Toolbar.Commands[b]);
};
//dp.sh.Toolbar.Command('CopyToClipboard','');
dp.sh.Utils.CopyStyles =3D function(b, c) {
    c =3D c.getElementsByTagName("link");
    for (var d =3D 0; d < c.length; d++)
        c[d].rel.toLowerCase() =3D=3D "stylesheet" && b.write('<link =
type=3D"text/css" rel=3D"stylesheet" href=3D"' + c[d].href + =
'"></link>')
};
dp.sh.Utils.FixForBlogger =3D function(b) {
    return dp.sh.isBloggerMode =3D=3D true ? =
b.replace(/<br\s*\/?>|&lt;br\s*\/?&gt;/gi, "\n") : b
};
dp.sh.RegexLib =3D {MultiLineCComments: new RegExp("/\\*[\\s\\S]*?\\*/", =
"gm"),SingleLineCComments: new RegExp("//.*$", =
"gm"),SingleLinePerlComments: new RegExp("#.*$", =
"gm"),DoubleQuotedString: new RegExp('"(?:\\.|(\\\\\\")|[^\\""\\n])*"', =
"g"),SingleQuotedString: new RegExp("'(?:\\.|(\\\\\\')|[^\\''\\n])*'", =
"g")};
dp.sh.Match =3D function(b, c, d) {
    this.value =3D b;
    this.index =3D c;
    this.length =3D b.length;
    this.css =3D d
};
dp.sh.Highlighter =3D function() {
    this.noGutter =3D false;
    this.addControls =3D true;
    this.collapse =3D false;
    this.tabsToSpaces =3D true;
    this.wrapColumn =3D 80;
    this.showColumns =3D true
};
dp.sh.Highlighter.SortCallback =3D function(b, c) {
    if (b.index < c.index)
        return -1;
    else if (b.index > c.index)
        return 1;
    else if (b.length < c.length)
        return -1;
    else if (b.length > c.length)
        return 1;
    return 0
};
a =3D dp.sh.Highlighter.prototype;
a.CreateElement =3D function(b) {
    b =3D document.createElement(b);
    b.highlighter =3D this;
    return b
};
a.GetMatches =3D function(b, c) {
    for (var d =3D null; (d =3D b.exec(this.code)) !=3D null; )
        this.matches[this.matches.length] =3D new dp.sh.Match(d[0], =
d.index, c)
};
a.AddBit =3D function(b, c) {
    if (!(b =3D=3D null || b.length =3D=3D 0)) {
        var d =3D this.CreateElement("SPAN");
        b =3D b.replace(/ /g, "&nbsp;");
        b =3D b.replace(/</g, "&lt;");
        b =3D b.replace(/(\r?\n)|(\[BR\])/gm, "&nbsp;<br>");
        if (c !=3D null)
            if (/br/gi.test(b)) {
                b =3D b.split("&nbsp;<br>");
                for (var f =3D 0; f < b.length; f++) {
                    d =3D this.CreateElement("SPAN");
                    d.className =3D c;
                    d.innerHTML =3D b[f];
                    this.div.appendChild(d);
                    f + 1 < b.length && =
this.div.appendChild(this.CreateElement("BR"))
                }
            } else {
                d.className =3D c;
                d.innerHTML =3D b;
                this.div.appendChild(d)
            }
        else {
            d.innerHTML =3D b;
            this.div.appendChild(d)
        }
    }
};
a.IsInside =3D function(b) {
    if (b =3D=3D null || b.length =3D=3D 0)
        return false;
    for (var c =3D 0; c < this.matches.length; c++) {
        var d =3D this.matches[c];
        if (d !=3D null)
            if (b.index > d.index && b.index < d.index + d.length)
                return true
    }
    return false
};
a.ProcessRegexList =3D function() {
    for (var b =3D 0; b < this.regexList.length; b++)
        this.GetMatches(this.regexList[b].regex, this.regexList[b].css)
};
a.ProcessSmartTabs =3D function(b) {
    function c(h, e, l) {
        var m =3D h.substr(0, e);
        h =3D h.substr(e + 1, h.length);
        e =3D "";
        for (var i =3D 0; i < l; i++)
            e +=3D " ";
        return m + e + h
    }
    function d(h, e) {
        if (h.indexOf(p) =3D=3D -1)
            return h;
        for (var l =3D 0; (l =3D h.indexOf(p)) !=3D -1; )
            h =3D c(h, l, e - l % e);
        return h
    }
    b =3D b.split("\n");
    for (var f =3D "", p =3D "\t", q =3D 0; q < b.length; q++)
        f +=3D d(b[q], 4) + "\n";
    return f
};
a.SwitchToList =3D function() {
    var b =3D this.div.innerHTML.replace(/<(br)\/?>/gi, =
"\n").split("\n");
    this.addControls =3D=3D true && =
this.bar.appendChild(dp.sh.Toolbar.Create(this));
    if (this.showColumns) {
        for (var c =3D this.CreateElement("div"), d =3D =
this.CreateElement("div"), f =3D 1; f <=3D 150; )
            if (f % 10 =3D=3D 0) {
                c.innerHTML +=3D f;
                f +=3D (f + "").length
            } else {
                c.innerHTML +=3D "&middot;";
                f++
            }
        d.className =3D "columns";
        d.appendChild(c);
        this.bar.appendChild(d)
    }
    f =3D 0;
    for (c =3D this.firstLine; f < b.length - 1; f++, c++) {
        d =3D this.CreateElement("LI");
        var p =3D this.CreateElement("SPAN");
        d.className =3D f % 2 =3D=3D 0 ? "alt" : "";
        p.innerHTML =3D b[f] + "&nbsp;";
        d.appendChild(p);
        this.ol.appendChild(d)
    }
    this.div.innerHTML =3D "";
};
a.Highlight =3D function(b) {
    function c(e) {
        return e.replace(/^\s*(.*?)[\s\n]*$/g, "$1")
    }
    function d(e) {
        return e.replace(/\n*$/, "").replace(/^\n*/, "")
    }
    function f(e) {
        e =3D dp.sh.Utils.FixForBlogger(e).split("\n");
        for (var l =3D new RegExp("^\\s*", "g"), m =3D 1E3, i =3D 0; i < =
e.length && m > 0; i++)
            if (c(e[i]).length !=3D 0) {
                var g =3D l.exec(e[i]);
                if (g !=3D null && g.length > 0)
                    m =3D Math.min(g[0].length, m)
            }
        if (m > 0)
            for (i =3D 0; i < e.length; i++)
                e[i] =3D e[i].substr(m);
        return e.join("\n");
    }
    function p(e, l, m) {
        return e.substr(l, m - l)
    }
    var q =3D 0;
    if (b =3D=3D null)
        b =3D "";
    this.originalCode =3D b;
    this.code =3D d(f(b));
    this.div =3D this.CreateElement("DIV");
    this.bar =3D this.CreateElement("DIV");
    this.ol =3D this.CreateElement("OL");
    this.matches =3D [];
    this.div.className =3D "dp-highlighter";
    this.div.highlighter =3D this;
    this.bar.className =3D "bar";
    this.ol.start =3D this.firstLine;
    if (this.CssClass !=3D null)
        this.ol.className =3D this.CssClass;
    if (this.collapse)
        this.div.className +=3D " collapsed";
    if (this.noGutter)
        this.div.className +=3D " nogutter";
    if (this.tabsToSpaces =3D=3D true)
        this.code =3D this.ProcessSmartTabs(this.code);
    this.ProcessRegexList();
    if (this.matches.length =3D=3D 0)
        this.AddBit(this.code, null);
    else {
        this.matches =3D =
this.matches.sort(dp.sh.Highlighter.SortCallback);
        for (b =3D 0; b < this.matches.length; b++)
            if (this.IsInside(this.matches[b]))
                this.matches[b] =3D null;
        for (b =3D 0; b < this.matches.length; b++) {
            var h =3D this.matches[b];
            if (!(h =3D=3D null || h.length =3D=3D 0)) {
                this.AddBit(p(this.code, q, h.index), null);
                this.AddBit(h.value, h.css);
                q =3D h.index + h.length
            }
        }
        this.AddBit(this.code.substr(q), null)
    }
    this.SwitchToList();
    this.div.appendChild(this.bar);
    this.div.appendChild(this.ol)
};
a.GetKeywords =3D function(b) {
    return "\\b" + b.replace(/ /g, "\\b|\\b") + "\\b"
};
dp.sh.BloggerMode =3D function() {
    dp.sh.isBloggerMode =3D true
};
dp.sh.HighlightAll =3D function(b, c, d, f, p, q) {
    function h() {
        for (var k =3D arguments, j =3D 0; j < k.length; j++)
            if (k[j] !=3D null) {
                if (typeof k[j] =3D=3D "string" && k[j] !=3D "")
                    return k[j] + "";
                if (typeof k[j] =3D=3D "object" && k[j].value !=3D "")
                    return k[j].value + ""
            }
        return null
    }
    function e(k, j) {
        for (var o =3D 0; o < j.length; o++)
            if (j[o] =3D=3D k)
                return true;
        return false
    }
    function l(k, j, o) {
        k =3D new RegExp("^" + k + "\\[(\\w+)\\]$", "gi");
        for (var s =3D null, u =3D 0; u < j.length; u++)
            if ((s =3D k.exec(j[u])) !=3D null)
                return s[1];
        return o
    }
    function m(k, j, o) {
        o =3D document.getElementsByTagName(o);
        for (var s =3D 0; s < o.length; s++) {
            o[s].getAttribute("name") =3D=3D j && k.push(o[s]);
        }
    }
    var i =3D [], g =3D null, v =3D {};
    m(i, b, "pre");
    m(i, b, "textarea");
    if (i.length !=3D 0) {
        for (var n in dp.sh.Brushes) {
            g =3D dp.sh.Brushes[n].Aliases;
            if (g !=3D null)
                for (b =3D 0; b < g.length; b++)
                    v[g[b]] =3D n
        }
        for (b =3D 0; b < i.length; b++) {
            n =3D i[b];
            var r =3D h(n.attributes["class"], n.className, =
n.attributes.language, n.language);
            g =3D "";
            if (r !=3D null) {
                r =3D r.split(":");
                g =3D r[0].toLowerCase();
                if (v[g] !=3D null) {
                    g =3D new dp.sh.Brushes[v[g]];
                    n.style.display =3D "none";
                    g.noGutter =3D c =3D=3D null ? e("nogutter", r) : =
!c;
                    g.addControls =3D d =3D=3D null ? !e("nocontrols", =
r) : d;
                    g.collapse =3D f =3D=3D null ? e("collapse", r) : f;
                    g.showColumns =3D q =3D=3D null ? e("showcolumns", =
r) : q;
                    var w =3D document.getElementsByTagName("head")[0];
                    if (g.Style && w) {
                        var t =3D document.createElement("style");
                        t.setAttribute("type", "text/css");
                        if (t.styleSheet)
                            t.styleSheet.cssText =3D g.Style;
                        else {
                            var x =3D document.createTextNode(g.Style);
                            t.appendChild(x)
                        }
                        w.appendChild(t);
                    }
                    g.firstLine =3D p =3D=3D null ? =
parseInt(l("firstline", r, 1)) : p;
                    g.source =3D n;
                    g.Highlight(n.innerHTML);
                    g.div.className +=3D " bg_" + n.className;
                    n.parentNode.insertBefore(g.div, n);
                }
            }
        }
    }
};
dp.sh.Brushes.Xml =3D function() {
    this.CssClass =3D "dp-xml";
    this.Style =3D ""
};
dp.sh.Brushes.Xml.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Xml.Aliases =3D ["xml", "xhtml", "xslt", "html", "xhtml"];
dp.sh.Brushes.Xml.prototype.ProcessRegexList =3D function() {
    function c(d, e) {
        d[d.length] =3D e
    }
    var a =3D null, b =3D null;
    this.GetMatches(new =
RegExp("(&lt;|<)\\!\\[[\\w\\s]*?\\[(.|\\s)*?\\]\\](&gt;|>)", "gm"), =
"cdata");
    this.GetMatches(new RegExp("(&lt;|<)!--\\s*.*?\\s*--(&gt;|>)", =
"gm"), "comments");
    for (b =3D new =
RegExp("([:\\w-.]+)\\s*=3D\\s*(\".*?\"|'.*?'|\\w+)*|(\\w+)", "gm"); (a =
=3D b.exec(this.code)) !=3D null; )
        if (a[1] !=3D null) {
            c(this.matches, new dp.sh.Match(a[1], a.index, =
"attribute"));
            a[2] !=3D undefined && c(this.matches, new dp.sh.Match(a[2], =
a.index + a[1].length + a[0].substr(a[1].length).indexOf(a[2]), =
"attribute-value"))
        }
    this.GetMatches(new RegExp("(&lt;|<)/*\\?*(?!\\!)|/*\\?*(&gt;|>)", =
"gm"), "tag");
    for (b =3D new RegExp("(?:&lt;|<)/*\\?*\\s*([:\\w-.]+)", "gm"); (a =
=3D b.exec(this.code)) !=3D null; )
        c(this.matches, new dp.sh.Match(a[1], a.index + =
a[0].indexOf(a[1]), "tag-name"))
};
dp.sh.Brushes.Vb =3D function() {
    this.regexList =3D [{regex: new RegExp("'.*$", "gm"),css: =
"comment"}, {regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, =
{regex: new RegExp("^\\s*#.*", "gm"),css: "preprocessor"}, {regex: new =
RegExp(this.GetKeywords("AddHandler AddressOf AndAlso Alias And Ansi As =
Assembly Auto Boolean ByRef Byte ByVal Call Case Catch CBool CByte CChar =
CDate CDec CDbl Char CInt Class CLng CObj Const CShort CSng CStr CType =
Date Decimal Declare Default Delegate Dim DirectCast Do Double Each Else =
ElseIf End Enum Erase Error Event Exit False Finally For Friend Function =
Get GetType GoSub GoTo Handles If Implements Imports In Inherits Integer =
Interface Is Let Lib Like Long Loop Me Mod Module MustInherit =
MustOverride MyBase MyClass Namespace New Next Not Nothing =
NotInheritable NotOverridable Object On Option Optional Or OrElse =
Overloads Overridable Overrides ParamArray Preserve Private Property =
Protected Public RaiseEvent ReadOnly ReDim REM RemoveHandler Resume =
Return Select Set Shadows Shared Short Single Static Step Stop String =
Structure Sub SyncLock Then Throw To True Try TypeOf Unicode Until =
Variant When While With WithEvents WriteOnly Xor"), "gm"),css: =
"keyword"}];
    this.CssClass =3D "dp-vb"
};
dp.sh.Brushes.Vb.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Vb.Aliases =3D ["vb", "vb.net"];
dp.sh.Brushes.Sql =3D function() {
    this.regexList =3D [{regex: new RegExp("--(.*)$", "gm"),css: =
"comment"}, {regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, =
{regex: dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp(this.GetKeywords("abs avg case cast coalesce convert count =
current_timestamp current_user day isnull left lower month nullif =
replace right session_user space substring sum system_user upper user =
year"), "gmi"),css: "func"}, {regex: new RegExp(this.GetKeywords("all =
and any between cross in join like not null or outer some"), "gmi"),css: =
"op"}, {regex: new RegExp(this.GetKeywords("absolute action add after =
alter as asc at authorization begin bigint binary bit by cascade char =
character check checkpoint close collate column commit committed connect =
connection constraint contains continue create cube current current_date =
current_time cursor database date deallocate dec decimal declare default =
delete desc distinct double drop dynamic else end end-exec escape except =
exec execute false fetch first float for force foreign forward free from =
full function global goto grant group grouping having hour ignore index =
inner insensitive insert instead int integer intersect into is isolation =
key last level load local max min minute modify move name national nchar =
next no numeric of off on only open option order out output partial =
password precision prepare primary prior privileges procedure public =
read real references relative repeatable restrict return returns revoke =
rollback rollup rows rule schema scroll second section select sequence =
serializable set size smallint static statistics table temp temporary =
then time timestamp to top transaction translation trigger true truncate =
uncommitted union unique update values varchar varying view when where =
with work"), "gmi"),css: "keyword"}];
    this.CssClass =3D "dp-sql";
    this.Style =3D ""
};
dp.sh.Brushes.Sql.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Sql.Aliases =3D ["sql"];
dp.sh.Brushes.Ruby =3D function() {
    this.regexList =3D [{regex: =
dp.sh.RegexLib.SingleLinePerlComments,css: "comment"}, {regex: =
dp.sh.RegexLib.DoubleQuotedString,css: "string"}, {regex: =
dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp(":[a-z][A-Za-z0-9_]*", "g"),css: "symbol"}, {regex: new =
RegExp("(\\$|@@|@)\\w+", "g"),css: "variable"}, {regex: new =
RegExp(this.GetKeywords("alias and BEGIN begin break case class def =
define_method defined do each else elsif END end ensure false for if in =
module new next nil not or raise redo rescue retry return self super =
then throw true undef unless until when while yield"), "gm"),css: =
"keyword"}, {regex: new RegExp(this.GetKeywords("Array Bignum Binding =
Class Continuation Dir Exception FalseClass File::Stat File Fixnum Fload =
Hash Integer IO MatchData Method Module NilClass Numeric Object Proc =
Range Regexp String Struct::TMS Symbol ThreadGroup Thread Time =
TrueClass"), "gm"),css: "builtin"}];
    this.CssClass =3D "dp-rb";
    this.Style =3D ""
};
dp.sh.Brushes.Ruby.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Ruby.Aliases =3D ["ruby", "rails", "ror"];
dp.sh.Brushes.Python =3D function() {
    this.regexList =3D [{regex: =
dp.sh.RegexLib.SingleLinePerlComments,css: "comment"}, {regex: new =
RegExp("^\\s*@\\w+", "gm"),css: "decorator"}, {regex: new =
RegExp("(['\"]{3})([^\\1])*?\\1", "gm"),css: "comment"}, {regex: new =
RegExp('"(?!")(?:\\.|\\\\\\"|[^\\""\\n\\r])*"', "gm"),css: "string"}, =
{regex: new RegExp("'(?!')*(?:\\.|(\\\\\\')|[^\\''\\n\\r])*'", =
"gm"),css: "string"}, {regex: new RegExp("\\b\\d+\\.?\\w*", "g"),css: =
"number"}, {regex: new RegExp(this.GetKeywords("and assert break class =
continue def del elif else except exec finally for from global if import =
in is lambda not or pass print raise return try yield while"), =
"gm"),css: "keyword"}, {regex: new RegExp(this.GetKeywords("None True =
False self cls class_"), "gm"),css: "special"}];
    this.CssClass =3D "dp-py";
    this.Style =3D ""
};
dp.sh.Brushes.Python.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Python.Aliases =3D ["py", "python"];
dp.sh.Brushes.Plain =3D function() {
    this.regexList =3D []
};
dp.sh.Brushes.Plain.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Plain.Aliases =3D ["plain", "text", "txt"];
dp.sh.Brushes.Php =3D function() {
    this.regexList =3D [{regex: dp.sh.RegexLib.SingleLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.MultiLineCComments,css: "comment"}, =
{regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, {regex: =
dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp("\\$\\w+", "g"),css: "vars"}, {regex: new =
RegExp(this.GetKeywords("abs acos acosh addcslashes addslashes =
array_change_key_case array_chunk array_combine array_count_values =
array_diff array_diff_assoc array_diff_key array_diff_uassoc =
array_diff_ukey array_fill array_filter array_flip array_intersect =
array_intersect_assoc array_intersect_key array_intersect_uassoc =
array_intersect_ukey array_key_exists array_keys array_map array_merge =
array_merge_recursive array_multisort array_pad array_pop array_product =
array_push array_rand array_reduce array_reverse array_search =
array_shift array_slice array_splice array_sum array_udiff =
array_udiff_assoc array_udiff_uassoc array_uintersect =
array_uintersect_assoc array_uintersect_uassoc array_unique =
array_unshift array_values array_walk array_walk_recursive atan atan2 =
atanh base64_decode base64_encode base_convert basename bcadd bccomp =
bcdiv bcmod bcmul bindec bindtextdomain bzclose bzcompress bzdecompress =
bzerrno bzerror bzerrstr bzflush bzopen bzread bzwrite ceil chdir =
checkdate checkdnsrr chgrp chmod chop chown chr chroot chunk_split =
class_exists closedir closelog copy cos cosh count count_chars date =
decbin dechex decoct deg2rad delete ebcdic2ascii echo empty end ereg =
ereg_replace eregi eregi_replace error_log error_reporting =
escapeshellarg escapeshellcmd eval exec exit exp explode =
extension_loaded feof fflush fgetc fgetcsv fgets fgetss file_exists =
file_get_contents file_put_contents fileatime filectime filegroup =
fileinode filemtime fileowner fileperms filesize filetype floatval flock =
floor flush fmod fnmatch fopen fpassthru fprintf fputcsv fputs fread =
fscanf fseek fsockopen fstat ftell ftok getallheaders getcwd getdate =
getenv gethostbyaddr gethostbyname gethostbynamel getimagesize =
getlastmod getmxrr getmygid getmyinode getmypid getmyuid getopt =
getprotobyname getprotobynumber getrandmax getrusage getservbyname =
getservbyport gettext gettimeofday gettype glob gmdate gmmktime =
ini_alter ini_get ini_get_all ini_restore ini_set interface_exists =
intval ip2long is_a is_array is_bool is_callable is_dir is_double =
is_executable is_file is_finite is_float is_infinite is_int is_integer =
is_link is_long is_nan is_null is_numeric is_object is_readable is_real =
is_resource is_scalar is_soap_fault is_string is_subclass_of =
is_uploaded_file is_writable is_writeable mkdir mktime nl2br =
parse_ini_file parse_str parse_url passthru pathinfo readlink realpath =
rewind rewinddir rmdir round str_ireplace str_pad str_repeat str_replace =
str_rot13 str_shuffle str_split str_word_count strcasecmp strchr strcmp =
strcoll strcspn strftime strip_tags stripcslashes stripos stripslashes =
stristr strlen strnatcasecmp strnatcmp strncasecmp strncmp strpbrk =
strpos strptime strrchr strrev strripos strrpos strspn strstr strtok =
strtolower strtotime strtoupper strtr strval substr substr_compare"), =
"gmi"),css: "func"}, {regex: new RegExp(this.GetKeywords("and or xor =
__FILE__ __LINE__ array as break case cfunction class const continue =
declare default die do else elseif enddeclare endfor endforeach endif =
endswitch endwhile extends for foreach function include include_once =
global if new old_function return static switch use require require_once =
var while __FUNCTION__ __CLASS__ __METHOD__ abstract interface public =
implements extends private protected throw"), "gm"),css: "keyword"}];
    this.CssClass =3D "dp-c"
};
dp.sh.Brushes.Php.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Php.Aliases =3D ["php"];
dp.sh.Brushes.JScript =3D function() {
    this.regexList =3D [{regex: dp.sh.RegexLib.SingleLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.MultiLineCComments,css: "comment"}, =
{regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, {regex: =
dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp("^\\s*#.*", "gm"),css: "preprocessor"}, {regex: new =
RegExp(this.GetKeywords("abstract boolean break byte case catch char =
class const continue debugger default delete do double else enum export =
extends false final finally float for function goto if implements import =
in instanceof int interface long native new null package private =
protected public return short static super switch synchronized this =
throw throws transient true try typeof var void volatile while with"), =
"gm"),css: "keyword"}];
    this.CssClass =3D "dp-c"
};
dp.sh.Brushes.JScript.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.JScript.Aliases =3D ["js", "jscript", "javascript"];
dp.sh.Brushes.Java =3D function() {
    this.regexList =3D [{regex: dp.sh.RegexLib.SingleLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.MultiLineCComments,css: "comment"}, =
{regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, {regex: =
dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp("\\b([\\d]+(\\.[\\d]+)?|0x[a-f0-9]+)\\b", "gi"),css: "number"}, =
{regex: new RegExp("(?!\\@interface\\b)\\@[\\$\\w]+\\b", "g"),css: =
"annotation"}, {regex: new RegExp("\\@interface\\b", "g"),css: =
"keyword"}, {regex: new RegExp(this.GetKeywords("abstract assert boolean =
break byte case catch char class const continue default do double else =
enum extends false final finally float for goto if implements import =
instanceof int interface long native new null package private protected =
public return short static strictfp super switch synchronized this throw =
throws true transient try void volatile while"), "gm"),css: "keyword"}];
    this.CssClass =3D "dp-j";
    this.Style =3D ""
};
dp.sh.Brushes.Java.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Java.Aliases =3D ["java"];
dp.sh.Brushes.Delphi =3D function() {
    this.regexList =3D [{regex: new RegExp("\\(\\*[\\s\\S]*?\\*\\)", =
"gm"),css: "comment"}, {regex: new RegExp("{(?!\\$)[\\s\\S]*?}", =
"gm"),css: "comment"}, {regex: dp.sh.RegexLib.SingleLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.SingleQuotedString,css: "string"}, =
{regex: new RegExp("\\{\\$[a-zA-Z]+ .+\\}", "g"),css: "directive"}, =
{regex: new RegExp("\\b[\\d\\.]+\\b", "g"),css: "number"}, {regex: new =
RegExp("\\$[a-zA-Z0-9]+\\b", "g"),css: "number"}, {regex: new =
RegExp(this.GetKeywords("abs addr and ansichar ansistring array as asm =
begin boolean byte cardinal case char class comp const constructor =
currency destructor div do double downto else end except exports =
extended false file finalization finally for function goto if =
implementation in inherited int64 initialization integer interface is =
label library longint longword mod nil not object of on or packed =
pansichar pansistring pchar pcurrency pdatetime pextended pint64 pointer =
private procedure program property pshortstring pstring pvariant =
pwidechar pwidestring protected public published raise real real48 =
record repeat set shl shortint shortstring shr single smallint string =
then threadvar to true try type unit until uses val var varirnt while =
widechar widestring with word write writeln xor"), "gm"),css: =
"keyword"}];
    this.CssClass =3D "dp-delphi";
    this.Style =3D ""
};
dp.sh.Brushes.Delphi.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Delphi.Aliases =3D ["delphi", "pascal"];
dp.sh.Brushes.CSS =3D function() {
    this.regexList =3D [{regex: dp.sh.RegexLib.MultiLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, =
{regex: dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp("\\#[a-zA-Z0-9]{3,6}", "g"),css: "value"}, {regex: new =
RegExp("(-?\\d+)(.\\d+)?(px|em|pt|:|%|)", "g"),css: "value"}, {regex: =
new RegExp("!important", "g"),css: "important"}, {regex: new =
RegExp(this.GetKeywordsCSS("ascent azimuth background-attachment =
background-color background-image background-position background-repeat =
background baseline bbox border-collapse border-color border-spacing =
border-style border-top border-right border-bottom border-left =
border-top-color border-right-color border-bottom-color =
border-left-color border-top-style border-right-style =
border-bottom-style border-left-style border-top-width =
border-right-width border-bottom-width border-left-width border-width =
border cap-height caption-side centerline clear clip color content =
counter-increment counter-reset cue-after cue-before cue cursor =
definition-src descent direction display elevation empty-cells float =
font-size-adjust font-family font-size font-stretch font-style =
font-variant font-weight font height letter-spacing line-height =
list-style-image list-style-position list-style-type list-style =
margin-top margin-right margin-bottom margin-left margin marker-offset =
marks mathline max-height max-width min-height min-width orphans =
outline-color outline-style outline-width outline overflow padding-top =
padding-right padding-bottom padding-left padding page page-break-after =
page-break-before page-break-inside pause pause-after pause-before pitch =
pitch-range play-during position quotes richness size slope src =
speak-header speak-numeral speak-punctuation speak speech-rate stemh =
stemv stress table-layout text-align text-decoration text-indent =
text-shadow text-transform unicode-bidi unicode-range units-per-em =
vertical-align visibility voice-family volume white-space widows width =
widths word-spacing x-height z-index"), "gm"),css: "keyword"}, {regex: =
new RegExp(this.GetValuesCSS("above absolute all always aqua armenian =
attr aural auto avoid baseline behind below bidi-override black blink =
block blue bold bolder both bottom braille capitalize caption center =
center-left center-right circle close-quote code collapse compact =
condensed continuous counter counters crop cross crosshair cursive =
dashed decimal decimal-leading-zero default digits disc dotted double =
embed embossed e-resize expanded extra-condensed extra-expanded fantasy =
far-left far-right fast faster fixed format fuchsia gray green groove =
handheld hebrew help hidden hide high higher icon inline-table inline =
inset inside invert italic justify landscape large larger left-side left =
leftwards level lighter lime line-through list-item local loud =
lower-alpha lowercase lower-greek lower-latin lower-roman lower low ltr =
marker maroon medium message-box middle mix move narrower navy ne-resize =
no-close-quote none no-open-quote no-repeat normal nowrap n-resize =
nw-resize oblique olive once open-quote outset outside overline pointer =
portrait pre print projection purple red relative repeat repeat-x =
repeat-y rgb ridge right right-side rightwards rtl run-in screen scroll =
semi-condensed semi-expanded separate se-resize show silent silver =
slower slow small small-caps small-caption smaller soft solid speech =
spell-out square s-resize static status-bar sub super sw-resize =
table-caption table-cell table-column table-column-group =
table-footer-group table-header-group table-row table-row-group teal =
text-bottom text-top thick thin top transparent tty tv ultra-condensed =
ultra-expanded underline upper-alpha uppercase upper-latin upper-roman =
url visible wait white wider w-resize x-fast x-high x-large x-loud x-low =
x-slow x-small x-soft xx-large xx-small yellow"), "g"),css: "value"}, =
{regex: new RegExp(this.GetValuesCSS("[mM]onospace [tT]ahoma [vV]erdana =
[aA]rial [hH]elvetica [sS]ans-serif [sS]erif"), "g"),css: "value"}];
    this.CssClass =3D "dp-css";
    this.Style =3D ""
};
dp.sh.Highlighter.prototype.GetKeywordsCSS =3D function(a) {
    return "\\b([a-z_]|)" + a.replace(/ /g, =
"(?=3D:)\\b|\\b([a-z_\\*]|\\*|)") + "(?=3D:)\\b"
};
dp.sh.Highlighter.prototype.GetValuesCSS =3D function(a) {
    return "\\b" + a.replace(/ /g, "(?!-)(?!:)\\b|\\b()") + ":\\b"
};
dp.sh.Brushes.CSS.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.CSS.Aliases =3D ["css"];
dp.sh.Brushes.CSharp =3D function() {
    this.regexList =3D [{regex: dp.sh.RegexLib.SingleLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.MultiLineCComments,css: "comment"}, =
{regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, {regex: =
dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new =
RegExp("^\\s*#.*", "gm"),css: "preprocessor"}, {regex: new =
RegExp(this.GetKeywords("abstract as base bool break byte case catch =
char checked class const continue decimal default delegate do double =
else enum event explicit extern false finally fixed float for foreach =
get goto if implicit in int interface internal is lock long namespace =
new null object operator out override params private protected public =
readonly ref return sbyte sealed set short sizeof stackalloc static =
string struct switch this throw true try typeof uint ulong unchecked =
unsafe ushort using virtual void while"), "gm"),css: "keyword"}];
    this.CssClass =3D "dp-c";
    this.Style =3D ""
};
dp.sh.Brushes.CSharp.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.CSharp.Aliases =3D ["c#", "c-sharp", "csharp"];
dp.sh.Brushes.Cpp =3D function() {
    this.regexList =3D [{regex: dp.sh.RegexLib.SingleLineCComments,css: =
"comment"}, {regex: dp.sh.RegexLib.MultiLineCComments,css: "comment"}, =
{regex: dp.sh.RegexLib.DoubleQuotedString,css: "string"}, {regex: =
dp.sh.RegexLib.SingleQuotedString,css: "string"}, {regex: new RegExp("^ =
*#.*", "gm"),css: "preprocessor"}, {regex: new =
RegExp(this.GetKeywords("ATOM BOOL BOOLEAN BYTE CHAR COLORREF DWORD =
DWORDLONG DWORD_PTR DWORD32 DWORD64 FLOAT HACCEL HALF_PTR HANDLE HBITMAP =
HBRUSH HCOLORSPACE HCONV HCONVLIST HCURSOR HDC HDDEDATA HDESK HDROP HDWP =
HENHMETAFILE HFILE HFONT HGDIOBJ HGLOBAL HHOOK HICON HINSTANCE HKEY HKL =
HLOCAL HMENU HMETAFILE HMODULE HMONITOR HPALETTE HPEN HRESULT HRGN HRSRC =
HSZ HWINSTA HWND INT INT_PTR INT32 INT64 LANGID LCID LCTYPE LGRPID LONG =
LONGLONG LONG_PTR LONG32 LONG64 LPARAM LPBOOL LPBYTE LPCOLORREF LPCSTR =
LPCTSTR LPCVOID LPCWSTR LPDWORD LPHANDLE LPINT LPLONG LPSTR LPTSTR =
LPVOID LPWORD LPWSTR LRESULT PBOOL PBOOLEAN PBYTE PCHAR PCSTR PCTSTR =
PCWSTR PDWORDLONG PDWORD_PTR PDWORD32 PDWORD64 PFLOAT PHALF_PTR PHANDLE =
PHKEY PINT PINT_PTR PINT32 PINT64 PLCID PLONG PLONGLONG PLONG_PTR =
PLONG32 PLONG64 POINTER_32 POINTER_64 PSHORT PSIZE_T PSSIZE_T PSTR =
PTBYTE PTCHAR PTSTR PUCHAR PUHALF_PTR PUINT PUINT_PTR PUINT32 PUINT64 =
PULONG PULONGLONG PULONG_PTR PULONG32 PULONG64 PUSHORT PVOID PWCHAR =
PWORD PWSTR SC_HANDLE SC_LOCK SERVICE_STATUS_HANDLE SHORT SIZE_T SSIZE_T =
TBYTE TCHAR UCHAR UHALF_PTR UINT UINT_PTR UINT32 UINT64 ULONG ULONGLONG =
ULONG_PTR ULONG32 ULONG64 USHORT USN VOID WCHAR WORD WPARAM WPARAM =
WPARAM char bool short int __int32 __int64 __int8 __int16 long float =
double __wchar_t clock_t _complex _dev_t _diskfree_t div_t ldiv_t =
_exception _EXCEPTION_POINTERS FILE _finddata_t _finddatai64_t =
_wfinddata_t _wfinddatai64_t __finddata64_t __wfinddata64_t =
_FPIEEE_RECORD fpos_t _HEAPINFO _HFILE lconv intptr_t jmp_buf mbstate_t =
_off_t _onexit_t _PNH ptrdiff_t _purecall_handler sig_atomic_t size_t =
_stat __stat64 _stati64 terminate_function time_t __time64_t _timeb =
__timeb64 tm uintptr_t _utimbuf va_list wchar_t wctrans_t wctype_t =
wint_t signed"), "gm"),css: "datatypes"}, {regex: new =
RegExp(this.GetKeywords("break case catch class const __finally =
__exception __try const_cast continue private public protected =
__declspec default delete deprecated dllexport dllimport do dynamic_cast =
else enum explicit extern if for friend goto inline mutable naked =
namespace new noinline noreturn nothrow register reinterpret_cast return =
selectany sizeof static static_cast struct switch template this thread =
throw true false try typedef typeid typename union using uuid virtual =
void volatile whcar_t while"), "gm"),css: "keyword"}];
    this.CssClass =3D "dp-cpp";
    this.Style =3D ""
};
dp.sh.Brushes.Cpp.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Cpp.Aliases =3D ["cpp", "c", "c++"];
dp.sh.Brushes.Objc =3D function() {
    var datatypes =3D 'ATOM BOOL BOOLEAN BYTE CHAR COLORREF DWORD =
DWORDLONG DWORD_PTR ' +
        'DWORD32 DWORD64 FLOAT HACCEL HALF_PTR HANDLE HBITMAP HBRUSH ' +
        'HCOLORSPACE HCONV HCONVLIST HCURSOR HDC HDDEDATA HDESK HDROP =
HDWP ' +
        'HENHMETAFILE HFILE HFONT HGDIOBJ HGLOBAL HHOOK HICON HINSTANCE =
HKEY ' +
        'HKL HLOCAL HMENU HMETAFILE HMODULE HMONITOR HPALETTE HPEN =
HRESULT ' +
        'HRGN HRSRC HSZ HWINSTA HWND INT INT_PTR INT32 INT64 LANGID LCID =
LCTYPE ' +
        'LGRPID LONG LONGLONG LONG_PTR LONG32 LONG64 LPARAM LPBOOL =
LPBYTE LPCOLORREF ' +
        'LPCSTR LPCTSTR LPCVOID LPCWSTR LPDWORD LPHANDLE LPINT LPLONG =
LPSTR LPTSTR ' +
        'LPVOID LPWORD LPWSTR LRESULT PBOOL PBOOLEAN PBYTE PCHAR PCSTR =
PCTSTR PCWSTR ' +
        'PDWORDLONG PDWORD_PTR PDWORD32 PDWORD64 PFLOAT PHALF_PTR =
PHANDLE PHKEY PINT ' +
        'PINT_PTR PINT32 PINT64 PLCID PLONG PLONGLONG PLONG_PTR PLONG32 =
PLONG64 POINTER_32 ' +
        'POINTER_64 PSHORT PSIZE_T PSSIZE_T PSTR PTBYTE PTCHAR PTSTR =
PUCHAR PUHALF_PTR ' +
        'PUINT PUINT_PTR PUINT32 PUINT64 PULONG PULONGLONG PULONG_PTR =
PULONG32 PULONG64 ' +
        'PUSHORT PVOID PWCHAR PWORD PWSTR SC_HANDLE SC_LOCK =
SERVICE_STATUS_HANDLE SHORT ' +
        'SIZE_T SSIZE_T TBYTE TCHAR UCHAR UHALF_PTR UINT UINT_PTR UINT32 =
UINT64 ULONG ' +
        'ULONGLONG ULONG_PTR ULONG32 ULONG64 USHORT USN VOID WCHAR WORD =
WPARAM WPARAM WPARAM ' +
        'char bool short int __int32 __int64 __int8 __int16 long float =
double __wchar_t ' +
        'clock_t _complex _dev_t _diskfree_t div_t ldiv_t _exception =
_EXCEPTION_POINTERS ' +
        'FILE _finddata_t _finddatai64_t _wfinddata_t _wfinddatai64_t =
__finddata64_t ' +
        '__wfinddata64_t _FPIEEE_RECORD fpos_t _HEAPINFO _HFILE lconv =
intptr_t id ' +
        'jmp_buf mbstate_t _off_t _onexit_t _PNH ptrdiff_t =
_purecall_handler ' +
        'sig_atomic_t size_t _stat __stat64 _stati64 terminate_function =
' +
        'time_t __time64_t _timeb __timeb64 tm uintptr_t _utimbuf ' +
        'va_list wchar_t wctrans_t wctype_t wint_t signed';
    var keywords =3D 'break case catch class copy const __finally =
__exception __try ' +
        'const_cast continue private public protected __declspec ' +
        'default delete deprecated dllexport dllimport do dynamic_cast ' =
+
        'else enum explicit extern if for friend getter goto inline ' +
        'mutable naked namespace new nil NO noinline nonatomic noreturn =
nothrow NULL ' +
        'readonly readwrite register reinterpret_cast retain strong =
return SEL selectany self ' +
        'setter sizeof static static_cast struct super switch template ' =
+
        'thread throw true false try typedef typeid typename union ' +
        'using uuid virtual void volatile whcar_t while YES';
    //=E9=A1=BA=E5=BA=8F=E5=BE=88=E9=87=8D=E8=A6=81
    this.regexList =3D [
        {regex: new RegExp(this.GetKeywords(datatypes), 'gm'),css: =
'keyword'},  // primitive data types
        {regex: new RegExp(this.GetKeywords(keywords), 'gm'),css: =
'keyword'},  // keywords
        {regex: new RegExp('@\\w+\\b', 'g'),css: 'keyword'},  // =
@-keywords
        {regex: new RegExp('[: ]nil', 'g'),css: 'keyword'},  // =
nil-workaround
        {regex: new RegExp('\\.\\w+', 'g'),css: 'xcodeconstants'},  // =
accessors
        {regex: new RegExp(' \\w+(?=3D[:\\]])', 'g'),css: 'vars'},  // =
messages
        {regex: dp.sh.RegexLib.SingleLineCComments,css: 'comment'},  // =
comments
        {regex: dp.sh.RegexLib.MultiLineCComments,css: 'comment'},  // =
comments
        {regex: dp.sh.RegexLib.DoubleQuotedString,css: 'string'},  // =
strings
        {regex: dp.sh.RegexLib.SingleQuotedString,css: 'string'},  // =
strings
        {regex: new RegExp('@"[^"]*"', 'gm'),css: 'string'},  // strings
        {regex: new RegExp('\\d', 'gm'),css: 'xcodenumber'},  // numeric =
values
        {regex: new RegExp('^ *#.*', 'gm'),css: 'xcodepreprocessor'},  =
// preprocessor
        {regex: new RegExp('\\w+(?=3D \\*)', 'g'),css: 'keyword'} // =
object types - variable declaration
        /*{ regex: new RegExp('\\b[A-Z]\\w+\\b(?=3D[ ,;])', 'gm'),  css: =
'xcodekeyword' },*/ // object types - protocol
    ];
    this.CssClass =3D 'dp-objc';
    this.Style =3D '.dp-objc .vars { color: #d00; }';
}
dp.sh.Brushes.Objc.prototype =3D new dp.sh.Highlighter;
dp.sh.Brushes.Objc.Aliases =3D ['objc'];
/*ZeroClipboard/ZeroClipboard.js*/
var ZeroClipboard =3D {version: "1.0.7",clients: {},moviePath: =
'http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf',nex=
tId: 1,$: function(thingy) {
    if (typeof (thingy) =3D=3D 'string')
        thingy =3D document.getElementById(thingy);
    if (true || !thingy.addClass) {
        thingy.hide =3D function() {
            this.style.display =3D 'none';
        };
        thingy.show =3D function() {
            this.style.display =3D 'block';
        };
        thingy.addClass =3D function(name) {
            this.removeClass(name);
            this.className +=3D ' ' + name;
        };
        thingy.removeClass =3D function(name) {
            var classes =3D this.className.split(/\s+/);
            var idx =3D -1;
            for (var k =3D 0; k < classes.length; k++) {
                if (classes[k] =3D=3D name) {
                    idx =3D k;
                    k =3D classes.length;
                }
            }
            if (idx > -1) {
                classes.splice(idx, 1);
                this.className =3D classes.join(' ');
            }
            return this;
        };
        thingy.hasClass =3D function(name) {
            return !!this.className.match(new RegExp("\\s*" + name + =
"\\s*"));
        };
    }
    return thingy;
},setMoviePath: function(path) {
    this.moviePath =3D path;
},dispatch: function(id, eventName, args) {
    var client =3D this.clients[id];
    if (client) {
        client.receiveEvent(eventName, args);
    }
},register: function(id, client) {
    this.clients[id] =3D client;
},getDOMObjectPosition: function(obj, stopObj) {
    var info =3D {left: 0,top: 0,width: obj.width ? obj.width : =
obj.offsetWidth,height: obj.height ? obj.height : obj.offsetHeight};
    while (obj && (obj !=3D stopObj)) {
        info.left +=3D obj.offsetLeft;
        info.top +=3D obj.offsetTop;
        obj =3D obj.offsetParent;
    }
    return info;
},Client: function(elem) {
    this.handlers =3D {};
    this.id =3D ZeroClipboard.nextId++;
    this.movieId =3D 'ZeroClipboardMovie_' + this.id;
    ZeroClipboard.register(this.id, this);
    if (elem)
        this.glue(elem);
}};
ZeroClipboard.Client.prototype =3D {id: 0,ready: false,movie: =
null,clipText: '',handCursorEnabled: true,cssEffects: true,handlers: =
null,glue: function(elem, appendElem, stylesToAdd) {
    this.domElement =3D ZeroClipboard.$(elem);
    var zIndex =3D 99;
    if (this.domElement.style.zIndex) {
        zIndex =3D parseInt(this.domElement.style.zIndex, 10) + 1;
    }
    if (typeof (appendElem) =3D=3D 'string') {
        appendElem =3D ZeroClipboard.$(appendElem);
    }
    else if (typeof (appendElem) =3D=3D 'undefined') {
        appendElem =3D document.getElementsByTagName('body')[0];
    }
    var box =3D ZeroClipboard.getDOMObjectPosition(this.domElement, =
appendElem);
    this.div =3D document.createElement('div');
    var style =3D this.div.style;
    style.position =3D 'absolute';
    style.left =3D '' + box.left + 'px';
    style.top =3D '' + box.top + 'px';
    style.width =3D '' + box.width + 'px';
    style.height =3D '' + box.height + 'px';
    style.zIndex =3D zIndex;
    if (typeof (stylesToAdd) =3D=3D 'object') {
        for (addedStyle in stylesToAdd) {
            style[addedStyle] =3D stylesToAdd[addedStyle];
        }
    }
    appendElem.appendChild(this.div);
    this.div.innerHTML =3D this.getHTML(box.width, box.height);
},getHTML: function(width, height) {
    var html =3D '';
    var flashvars =3D 'id=3D' + this.id + '&width=3D' + width + =
'&height=3D' + height;
    if (navigator.userAgent.match(/MSIE/)) {
        var protocol =3D location.href.match(/^https/i) ? 'https://' : =
'http://';
        html +=3D '<object =
classid=3D"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase=3D"' + =
protocol + =
'download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=3D9=
,0,0,0" width=3D"' + width + '" height=3D"' + height + '" id=3D"' + =
this.movieId + '" align=3D"middle"><param name=3D"allowScriptAccess" =
value=3D"always" /><param name=3D"allowFullScreen" value=3D"false" =
/><param name=3D"movie" value=3D"' + ZeroClipboard.moviePath + '" =
/><param name=3D"loop" value=3D"false" /><param name=3D"menu" =
value=3D"false" /><param name=3D"quality" value=3D"best" /><param =
name=3D"bgcolor" value=3D"#ffffff" /><param name=3D"flashvars" =
value=3D"' + flashvars + '"/><param name=3D"wmode" =
value=3D"transparent"/></object>';
    }
    else {
        html +=3D '<embed id=3D"' + this.movieId + '" src=3D"' + =
ZeroClipboard.moviePath + '" loop=3D"false" menu=3D"false" =
quality=3D"best" bgcolor=3D"#ffffff" width=3D"' + width + '" height=3D"' =
+ height + '" name=3D"' + this.movieId + '" align=3D"middle" =
allowScriptAccess=3D"always" allowFullScreen=3D"false" =
type=3D"application/x-shockwave-flash" =
pluginspage=3D"http://www.macromedia.com/go/getflashplayer" =
flashvars=3D"' + flashvars + '" wmode=3D"transparent" />';
    }
    return html;
},hide: function() {
    if (this.div) {
        this.div.style.left =3D '-2000px';
    }
},show: function() {
    this.reposition();
},destroy: function() {
    if (this.domElement && this.div) {
        this.hide();
        this.div.innerHTML =3D '';
        var body =3D document.getElementsByTagName('body')[0];
        try {
            body.removeChild(this.div);
        } catch (e) {
            ;
        }
        this.domElement =3D null;
        this.div =3D null;
    }
},reposition: function(elem) {
    if (elem) {
        this.domElement =3D ZeroClipboard.$(elem);
        if (!this.domElement)
            this.hide();
    }
    if (this.domElement && this.div) {
        var box =3D ZeroClipboard.getDOMObjectPosition(this.domElement);
        var style =3D this.div.style;
        style.left =3D '' + box.left + 'px';
        style.top =3D '' + box.top + 'px';
    }
},setText: function(newText) {
    this.clipText =3D newText;
    if (this.ready)
        this.movie.setText(newText);
},addEventListener: function(eventName, func) {
    eventName =3D eventName.toString().toLowerCase().replace(/^on/, '');
    if (!this.handlers[eventName])
        this.handlers[eventName] =3D [];
    this.handlers[eventName].push(func);
},setHandCursor: function(enabled) {
    this.handCursorEnabled =3D enabled;
    if (this.ready)
        this.movie.setHandCursor(enabled);
},setCSSEffects: function(enabled) {
    this.cssEffects =3D !!enabled;
},receiveEvent: function(eventName, args) {
    eventName =3D eventName.toString().toLowerCase().replace(/^on/, '');
    switch (eventName) {
        case 'load':
            this.movie =3D document.getElementById(this.movieId);
            if (!this.movie) {
                var self =3D this;
                setTimeout(function() {
                    self.receiveEvent('load', null);
                }, 1);
                return;
            }
            if (!this.ready && navigator.userAgent.match(/Firefox/) && =
navigator.userAgent.match(/Windows/)) {
                var self =3D this;
                setTimeout(function() {
                    self.receiveEvent('load', null);
                }, 100);
                this.ready =3D true;
                return;
            }
            this.ready =3D true;
            this.movie.setText(this.clipText);
            this.movie.setHandCursor(this.handCursorEnabled);
            break;
        case 'mouseover':
            if (this.domElement && this.cssEffects) {
                this.domElement.addClass('hover');
                if (this.recoverActive)
                    this.domElement.addClass('active');
            }
            break;
        case 'mouseout':
            if (this.domElement && this.cssEffects) {
                this.recoverActive =3D false;
                if (this.domElement.hasClass('active')) {
                    this.domElement.removeClass('active');
                    this.recoverActive =3D true;
                }
                this.domElement.removeClass('hover');
            }
            break;
        case 'mousedown':
            if (this.domElement && this.cssEffects) {
                this.domElement.addClass('active');
            }
            break;
        case 'mouseup':
            if (this.domElement && this.cssEffects) {
                this.domElement.removeClass('active');
                this.recoverActive =3D false;
            }
            break;
    }
    if (this.handlers[eventName]) {
        for (var idx =3D 0, len =3D this.handlers[eventName].length; idx =
< len; idx++) {
            var func =3D this.handlers[eventName][idx];
            if (typeof (func) =3D=3D 'function') {
                func(this, args);
            }
            else if ((typeof (func) =3D=3D 'object') && (func.length =
=3D=3D 2)) {
                func[0][func[1]](this, args);
            }
            else if (typeof (func) =3D=3D 'string') {
                window[func](this, args);
            }
        }
    }
}};
/*article_code.js*/
$(document).ready(function() {
    $(".article_content pre").each(function() {
        var $this =3D $(this);
        if ($this.attr("class") !=3D undefined) {
            if ($this.attr("class").indexOf("brush:") !=3D -1) {
                var lang =3D =
$this.attr("class").split(';')[0].split(':')[1];
                $this.attr('name', 'code');
                $this.attr('class', lang);
            }
            if ($this.attr("class")) {
                $this.attr('name', 'code');
            }
        }
    });
    $('.article_content textarea[name=3Dcode]').each(function() {
        var $this =3D $(this);
        if ($this.attr("class").indexOf(":") !=3D -1) {
            $this.attr("class", $this.attr("class").split(':')[0]);
        }
    });
    dp.SyntaxHighlighter.HighlightAll('code');
    $('.highlighter').addClass('dp-highlighter');
    if (!window.clipboardData) {
        setTimeout("setCopyBtn()", 500);
    }
});
function setCopyBtn() {
    $('.CopyToClipboard').each(function() {
        var clip =3D new ZeroClipboard.Client();
        clip.setHandCursor(true);
        clip.addEventListener('load', function(client) {
        });
        clip.addEventListener('mouseOver', function(client) {
            //var _c_ode =3D =
client.movie.parentNode.parentNode.parentNode.parentNode.nextSibling.inne=
rHTML;
            var _c_ode =3D =
client.movie.parentNode.parentNode.parentNode.parentNode.parentNode.nextS=
ibling.innerHTML;
            _c_ode =3D _c_ode.replace(/&lt;/g, "<").replace(/&gt;/g, =
">").replace(/&amp;/g, "&");
            client.setText(_c_ode);
        });
        clip.addEventListener('complete', function(client, text) {
            =
alert("=E4=BB=A3=E7=A0=81=E5=B7=B2=E7=BB=8F=E5=A4=8D=E5=88=B6=E5=88=B0=E4=
=BD=A0=E7=9A=84=E5=89=AA=E8=B4=B4=E6=9D=BF=E3=80=82");
        });
        clip.glue(this, this.parentNode);
    });
}

jQuery(function() {
    new CNick().showNickname();
});
/*medal...show.js*/
var __mm_arr =3D null;
function printMedal(m_arr) {
    //__mm_arr =3D m_arr;
    //var s =3D "<div id=3D'bms_box'>";
    //for (var i =3D 0; i < m_arr.length; i++) {
    //    s +=3D "<a href=3D'http://medal.blog.csdn.net/allmedal.aspx' =
target=3D_blank>";
    //    s +=3D "<img src=3D'" + m_arr[i].src + "'";
    //    s +=3D " onmouseover=3D'm_over_m(this," + i + ")'";
    //    s +=3D " onmouseout=3D'm_out_m()'";
    //    s +=3D " alt=3D'' />";
    //    s +=3D "</a>";
    //}
    //s +=3D "</div>";
    //$('#blog_medal').append($(s));
}
var __mm_over =3D false;
function m_over_m(e, i) {
    __mm_over =3D true;
    showMedalInfo(e, i);
}
function m_out_m() {
    __mm_over =3D false;
    hideMedalInfo();
}
var __mm_intro =3D null;
function showMedalInfo(e, i) {
    if (__mm_intro) {
        document.body.removeChild(__mm_intro);
        __mm_intro =3D null;
    }
    //var m =3D __mm_arr[i];
    var s =3D "";

    var img =3D $("#bms_box a img[onmouseover$=3D'" + i + =
")']").attr("src");
    var title =3D "";
    var desc =3D "";
    if (img.indexOf("zhuanlandaren")>-1)
    {
        title =3D "=E4=B8=93=E6=A0=8F=E8=BE=BE=E4=BA=BA"; desc =3D =
"=E6=8E=88=E4=BA=88=E6=88=90=E5=8A=9F=E5=88=9B=E5=BB=BA=E4=B8=AA=E4=BA=BA=
=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=E7=9A=84=E7=94=A8=E6=88=B7=E3=80=82=E4=
=B8=93=E6=A0=8F=E4=B8=AD=E6=B7=BB=E5=8A=A0=E4=BA=94=E7=AF=87=E4=BB=A5=E4=B8=
=8A=E5=8D=9A=E6=96=87=E5=8D=B3=E5=8F=AF=E7=82=B9=E4=BA=AE=EF=BC=81=E6=92=B0=
=E5=86=99=E5=8D=9A=E5=AE=A2=E4=B8=93=E6=A0=8F=E6=B5=93=E7=BC=A9=E6=8A=80=E6=
=9C=AF=E7=B2=BE=E5=8D=8E=EF=BC=8C=E4=B8=93=E6=A0=8F=E8=BE=BE=E4=BA=BA=E5=B0=
=B1=E6=98=AF=E4=BD=A0=EF=BC=81";
    }
    else if (img.indexOf("chizhiyiheng")>-1)
    {
        title =3D "=E6=8C=81=E4=B9=8B=E4=BB=A5=E6=81=92"; desc =3D =
"=E6=8E=88=E4=BA=88=E6=AF=8F=E4=B8=AA=E8=87=AA=E7=84=B6=E6=9C=88=E5=86=85=
=E5=8F=91=E5=B8=834=E7=AF=87=E6=88=964=E7=AF=87=E4=BB=A5=E4=B8=8A=E5=8E=9F=
=E5=88=9B=E6=88=96=E7=BF=BB=E8=AF=91IT=E5=8D=9A=E6=96=87=E7=9A=84=E7=94=A8=
=E6=88=B7=E3=80=82=E4=B8=8D=E7=A7=AF=E8=B7=AC=E6=AD=A5=E6=97=A0=E4=BB=A5=E8=
=87=B3=E5=8D=83=E9=87=8C=EF=BC=8C=E4=B8=8D=E7=A7=AF=E5=B0=8F=E6=B5=81=E6=97=
=A0=E4=BB=A5=E6=88=90=E6=B1=9F=E6=B5=B7=EF=BC=8C=E7=A8=8B=E5=BA=8F=E4=BA=BA=
=E7=94=9F=E7=9A=84=E7=B2=BE=E5=BD=A9=E9=9C=80=E8=A6=81=E5=9D=9A=E6=8C=81=E4=
=B8=8D=E6=87=88=E5=9C=B0=E7=A7=AF=E7=B4=AF=EF=BC=81";
    }
    else if (img.indexOf("weiruanmvp")>-1) {
        title =3D "=E5=BE=AE=E8=BD=AFMVP"; desc =3D =
"=E6=8E=88=E4=BA=88=E9=80=9A=E8=BF=87CSDN=E5=8D=9A=E5=AE=A2=E5=B9=B3=E5=8F=
=B0=E7=A7=AF=E6=9E=81=E5=88=86=E4=BA=AB=E5=BE=AE=E8=BD=AF=E7=9B=B8=E5=85=B3=
=E6=8A=80=E6=9C=AF=E7=9F=A5=E8=AF=86=E5=92=8C=E4=B8=93=E4=B8=9A=E6=8A=80=E8=
=83=BD=EF=BC=8C=E5=B9=B6=E5=81=9A=E5=87=BA=E7=AA=81=E5=87=BA=E8=B4=A1=E7=8C=
=AE=E7=9A=84=E7=94=A8=E6=88=B7=E3=80=82";
    }
    else if (img.indexOf("bokezhixing")>-1) {
        title =3D "=E5=8D=9A=E5=AE=A2=E4=B9=8B=E6=98=9F"; desc =3D =
"=E6=8E=88=E4=BA=88=E9=80=9A=E8=BF=87\"CSDN=E5=8D=9A=E5=AE=A2=E4=B9=8B=E6=
=98=9F=E8=AF=84=E9=80=89\"=E4=B8=AD=E8=84=B1=E9=A2=96=E8=80=8C=E5=87=BA=E7=
=9A=84=E5=8D=81=E5=A4=A7=E5=8D=9A=E5=AE=A2=E4=B9=8B=E6=98=9F=E7=A7=B0=E5=8F=
=B7=E7=9A=84=E7=94=A8=E6=88=B7=E3=80=82";
    }

    s +=3D "<div  style=3D'  z-index:99999 ; left: 15%;  top: -9px;  =
position: absolute;  width: 0;  height: 0;  border-left: 10px solid =
transparent;  border-right: 10px solid transparent;  border-bottom: 8px =
solid #EAEAEA; '></div>";
    s +=3D "<dl onmouseover=3D'__mm_over=3Dtrue;' =
onmouseout=3D'm_out_m();'>";
    s +=3D "<dt><img src=3D'" + img.replace(".png", "") + "middle.png" + =
"' /></dt>";
    s +=3D "<dd><strong>" + title + "</strong>" + desc + "</dd>";
    s +=3D "</dl>";
    __mm_intro =3D document.createElement("div");
    __mm_intro.className =3D "medal_intro";
    var pos =3D $(e).position();
    var left =3D pos.left - 39;
    if (left < 0)
        left =3D 0;
    __mm_intro.style.left =3D left + 'px';
    __mm_intro.style.top =3D pos.top + 32 + 4 + 'px';
    __mm_intro.innerHTML =3D s;
    document.body.appendChild(__mm_intro);
}
function hideMedalInfo() {
    setTimeout(function() {
        if (!__mm_over && __mm_intro) {
            document.body.removeChild(__mm_intro);
            __mm_intro =3D null;
        }
    }, 500);
}

$("#leveImg").hover(
    function () {
        $("#smallTittle")[0].style.display=3D"inline-block";
    },
    function () {
        $("#smallTittle")[0].style.display=3D"none";
    }
);

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://medal.blog.csdn.net/showblogmedal.ashx?blogid=2798943

cHJpbnRNZWRhbChbeydzcmMnOidodHRwOi8vc3RhdGljLmJsb2cuY3Nkbi5uZXQvaW1hZ2VzL21l
ZGFsL2hvbGRvbl9zMi5naWYnLCd0aXRsZSc6J+aMgeS5i+S7peaBkicsJ2Rlc2MnOifmjojkuojm
r4/kuKroh6rnhLbmnIjlhoXlj5HluIM056+H5oiWNOevh+S7peS4iuWOn+WIm+aIlue/u+ivkUlU
5Y2a5paH55qE55So5oi344CC5LiN56ev6Les5q2l5peg5Lul6Iez5Y2D6YeM77yM5LiN56ev5bCP
5rWB5peg5Lul5oiQ5rGf5rW377yM56iL5bqP5Lq655Sf55qE57K+5b2p6ZyA6KaB5Z2a5oyB5LiN
5oeI5Zyw56ev57Sv77yBJywnZGVzYzInOic55pyI5Lu95Y+R6KGoNOevh+WOn+WImy/nv7vor5Hm
lofnq6AnLCdjb3VudCc6MX0seydzcmMnOidodHRwOi8vc3RhdGljLmJsb2cuY3Nkbi5uZXQvaW1h
Z2VzL21lZGFsL2NvbHVtbnN0YXJfcy5naWYnLCd0aXRsZSc6J+S4k+agj+i+vuS6uicsJ2Rlc2Mn
OifmjojkuojmiJDlip/liJvlu7rkuKrkurrljZrlrqLkuJPmoI/nmoTnlKjmiLfjgILkuJPmoI/k
uK3mt7vliqDkupTnr4fku6XkuIrljZrmlofljbPlj6/ngrnkuq7vvIHmkrDlhpnljZrlrqLkuJPm
oI/mtZPnvKnmioDmnK/nsr7ljY7vvIzkuJPmoI/ovr7kurrlsLHmmK/kvaDvvIEnLCdkZXNjMic6
J+WIm+W7uuS4k+agj++8jOS4lOa3u+WKoDXnr4fku6XkuIrmlofnq6DjgIInLCdjb3VudCc6MX1d
KTs=

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/JavaScript1.js

=EF=BB=BF; (function () {
    protocol =3D location.protocol.substr(0, 4) =3D=3D=3D 'http' ? '' : =
'http:';
    document.write("<link rel=3D'stylesheet' type=3D'text/css' href=3D'" =
+ protocol + "//csdnimg.cn/pubfooter/css/pub_footer_2014.css' />");
    document.write("<div class=3D'pub_fo'>");
    document.write("<div id=3D'pub_footerall' =
class=3D'pub_footer_new'>");
    document.write("<dl>");
    document.write("<dt></dt>");
    document.write(" <dd class=3D'foot_sub_menu'><a =
href=3D'http://www.csdn.net/company/about.html' =
target=3D'_blank'>=E5=85=AC=E5=8F=B8=E7=AE=80=E4=BB=8B</a><span>|</span><=
a href=3D'http://www.csdn.net/company/recruit.html' =
target=3D'_blank'>=E6=8B=9B=E8=B4=A4=E7=BA=B3=E5=A3=AB</a><span>|</span><=
a href=3D'http://www.csdn.net/company/marketing.html' =
target=3D'_blank'>=E5=B9=BF=E5=91=8A=E6=9C=8D=E5=8A=A1</a><span>|</span><=
a href=3D'http://www.csdn.net/company/contact.html' =
target=3D'_blank'>=E8=81=94=E7=B3=BB=E6=96=B9=E5=BC=8F</a><span>|</span><=
a href=3D'http://www.csdn.net/company/statement.html' =
target=3D'_blank'>=E7=89=88=E6=9D=83=E5=A3=B0=E6=98=8E</a><span>|</span><=
a href=3D'http://www.csdn.net/company/layer.html' =
target=3D'_blank'>=E6=B3=95=E5=BE=8B=E9=A1=BE=E9=97=AE</a><span>|</span><=
a =
href=3D'mailto:webmaster@csdn.net'>=E9=97=AE=E9=A2=98=E6=8A=A5=E5=91=8A</=
a><span>|</span><a target=3D'_blank' =
href=3D'http://www.csdn.net/friendlink.html'>=E5=90=88=E4=BD=9C=E4=BC=99=E4=
=BC=B4</a><span>|</span><a href=3D'http://bbs.csdn.net/forums/Service' =
target=3D'_blank'>=E8=AE=BA=E5=9D=9B=E5=8F=8D=E9=A6=88</a></dd>");
    document.write("<dd class=3D'foot_contact'><a =
href=3D'javascript:void(0);' target=3D'_blank' =
class=3D'qq'>=E7=BD=91=E7=AB=99=E5=AE=A2=E6=9C=8D</a><a =
href=3D'http://wpa.qq.com/msgrd?v=3D3&uin=3D2251809102&site=3Dqq&menu=3Dy=
es' target=3D'_blank' =
class=3D'qq'>=E6=9D=82=E5=BF=97=E5=AE=A2=E6=9C=8D</a><a =
href=3D'http://e.weibo.com/csdnsupport/profile' target=3D'_blank' =
class=3D'weibo'>=E5=BE=AE=E5=8D=9A=E5=AE=A2=E6=9C=8D</a><a =
href=3D'mailto:webmaster@csdn.net' class=3D'email' =
title=3D'=E8=81=94=E7=B3=BB=E9=82=AE=E7=AE=B1'>webmaster@csdn.net</a><spa=
n class=3D'phone' =
title=3D'=E6=9C=8D=E5=8A=A1=E7=83=AD=E7=BA=BF'>400-600-2320</span><span =
class=3D'interval'>|</span><span>=E5=8C=97=E4=BA=AC=E5=88=9B=E6=96=B0=E4=B9=
=90=E7=9F=A5=E4=BF=A1=E6=81=AF=E6=8A=80=E6=9C=AF=E6=9C=89=E9=99=90=E5=85=AC=
=E5=8F=B8 =E7=89=88=E6=9D=83=E6=89=80=E6=9C=89</span><span =
class=3D'interval'>|</span><span>=E6=B1=9F=E8=8B=8F=E7=9F=A5=E4=B9=8B=E4=B8=
=BA=E8=AE=A1=E7=AE=97=E6=9C=BA=E6=9C=89=E9=99=90=E5=85=AC=E5=8F=B8</span>=
<span =
class=3D'interval'>|</span><span>=E6=B1=9F=E8=8B=8F=E4=B9=90=E7=9F=A5=E7=BD=
=91=E7=BB=9C=E6=8A=80=E6=9C=AF=E6=9C=89=E9=99=90=E5=85=AC=E5=8F=B8</span>=
</dd>");
    document.write("<dd  =
class=3D'foot_copyright'><span>=E4=BA=AC&nbsp;ICP&nbsp;=E8=AF=81&nbsp;090=
02463&nbsp;=E5=8F=B7</span><span =
class=3D'interval'>|</span><span>Copyright &copy; 1999-2016, CSDN.NET, =
All Rights Reserved&nbsp;</span><a =
href=3D'http://www.hd315.gov.cn/beian/view.asp?bianhao=3D0102020010321000=
10' target=3D'_blank'><img =
src=3D'http://c.csdnimg.cn/pubfooter/images/gongshang_logos.gif' =
alt=3D'GongshangLogo' alt=3D'' title=3D'' /></a></dd>");
    document.write("</dl>");
    document.write("</div>");
    document.write("</div>");
    document.write('<script id=3D"noticeScript" type=3D"text/javascript" =
 btnId=3D"header_notice_num" wrapId=3D"note1" count=3D"5" subcount=3D"5" =
src=3D"' + protocol + =
'//csdnimg.cn/rabbit/notev2/js/notify.js?9d86d94"></script>');

    /*
    var head =3D document.getElementsByTagName('head')[0]
        , s, ss =3D [
            protocol + '//csdnimg.cn/rabbit/tracking-ad/main.js?75eacd8'
        ]
    ;

    for (var i =3D 0; i < ss.length; i++) {
        s =3D document.createElement('script')
        s.type =3D 'text/javascript';
        s.charset =3D 'utf-8';
        s.src =3D ss[i];
        head.insertBefore(s, null);
    }
    */
    $(".qq:first").click(function (event) {
        var qqs =3D [2431299880, 3456678348, 3455921142];
        var qq =3D (new Date().getDay() =3D=3D 0 || new Date().getDay() =
=3D=3D 6) ? qqs[0] : qqs[Math.floor(Math.random() * qqs.length)];;
        $(this).attr('href', 'http://wpa.qq.com/msgrd?v=3D3&uin=3D' + qq =
+ '&site=3Dqq&menu=3Dyes');
    });

}());
------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://passport.csdn.net/content/loginbox/login.js

/*
* CSDN =E7=99=BB=E5=BD=95=E6=A1=86
* Copyright 2012, zhuhz@csdn.net
* Date: 2012-6-6
*=20
* =E8=B0=83=E7=94=A8=EF=BC=9Acsdn.showLogin(callback);
*
* =
=E8=8E=B7=E5=8F=96=E5=BD=93=E5=89=8D=E7=99=BB=E5=BD=95=E7=94=A8=E6=88=B7=E5=
=90=8D=EF=BC=88=E5=8F=AF=E7=94=A8=E4=BA=8E=E5=88=A4=E6=96=AD=E7=94=A8=E6=88=
=B7=E6=98=AF=E5=90=A6=E5=A4=84=E4=BA=8E=E7=99=BB=E5=BD=95=E7=8A=B6=E6=80=81=
=EF=BC=89=EF=BC=9Acsdn.getCookie('UserName')
*/
var csdn =3D window.csdn || function () { };

csdn.domain =3D "passport.csdn.net";
csdn.doing =3D false;
csdn.$ =3D function (id) {
    return document.getElementById(id);
};
csdn.loginBack =3D null;
csdn.showLogin =3D function (callback) {

    var div =3D document.createElement("DIV");
    div.id =3D "csdn_divh";
    //div.style.marginLeft =3D "-200px";
    div.style.marginTop =3D -75 + (document.documentElement.scrollTop || =
document.body.scrollTop) + "px";

    // var title =3D '=E7=99=BB=E5=BD=95<a class=3D"close" =
href=3D"javascript:void(0);" =
onclick=3D"javascript:csdn.closeLogin();return false;" =
title=3D"=E5=85=B3=E9=97=AD=E7=AA=97=E5=8F=A3">[X]</a>';
    var title =3D '';
    var body =3D csdn.loginForm();
    var bottom =3D '';
    var s =3D csdn.openBox().replace('#title#', title).replace('#body#', =
body);
    div.innerHTML =3D s;

    csdn.shieldBody();
    document.body.appendChild(div);

    var un =3D csdn.getCookie("UN");
    if (un) {
        csdn.$('u').value =3D un;
        csdn.$('p').focus();
    }
    else {
        csdn.$('u').focus();
    }
    csdn.$('u').onkeypress =3D
    csdn.$('p').onkeypress =3D function (ev) {
        if (csdn.isEnter(ev)) {
            csdn.login();
        }
    };
    csdn.loginBack =3D callback;
};
csdn.closeLogin =3D function () {
    document.body.removeChild(csdn.$('csdn_divh'));
    document.body.removeChild(csdn.$('csdn_shield'));
};
csdn.shieldBody =3D function () {
    var shield =3D document.createElement("DIV");
    shield.id =3D "csdn_shield";
    var h1 =3D document.documentElement.clientHeight;
    var h2 =3D document.documentElement.scrollHeight;
    shield.style.height =3D Math.max(h1, h2) + "px";
    shield.style.filter =3D "alpha(opacity=3D0)";
    shield.style.opacity =3D 0;
    document.body.appendChild(shield);

    csdn.setOpacity =3D function (obj, opacity) {
        if (opacity >=3D 1) opacity =3D opacity / 100;
        try { obj.style.opacity =3D opacity; } catch (err) { }
        try {
            if (obj.filters.length > 0 && obj.filters("alpha")) {
                obj.filters("alpha").opacity =3D opacity * 150;
            } else {
                obj.style.filter =3D "alpha(opacity=3D\"" + (opacity * =
150) + "\")";
            }
        } catch (err) { }
    };
    var c =3D 0;
    csdn.doAlpha =3D function () {
        c +=3D 2;
        if (c > 20) { clearInterval(ad); return 0; }
        csdn.setOpacity(shield, c);
    };
    var ad =3D setInterval("csdn.doAlpha()", 1);
};
csdn.setStyle =3D function () {
    var lk =3D document.createElement("LINK");
    lk.type =3D "text/css";
    lk.rel =3D "stylesheet";
    lk.href =3D location.protocol + "//" + csdn.domain + =
"/content/loginbox/style.css?r=3D" + (new Date().getTime());
    var head =3D document.getElementsByTagName("head")[0];
    head.appendChild(lk);
};
csdn.isEnter =3D function (ev) {
    ev =3D ev || window.event;
    var code =3D (ev.keyCode || ev.which);
    return (code =3D=3D 10 || code =3D=3D 13);
};
csdn.getCookie =3D function (name) {
    var ck =3D document.cookie.match(new RegExp("(^| )" + name + =
"=3D([^;]*)(;|$)"));
    if (ck) return ck[2];
    else return null;
};
csdn.setCookie =3D function (name, value, expires) {
    if (expires) expires =3D '; expires=3D' + new =
Date(expires).toUTCString();
    else expires =3D '';
    var path =3D '; path=3D/';
    var domain =3D '; domain=3D' + document.domain.replace('www.', '');

    document.cookie =3D [name, '=3D', encodeURIComponent(value), =
expires, path, domain].join('');
}

csdn.openBox =3D function () {
    var text =3D
         "<div class=3D'boxbody'>#body#</div>"

    return text;
};
csdn.loginForm =3D function () {
    var fromurl =3D encodeURIComponent(location.href);
    var text =3D "<div class=3D'csdn_loginbox' style=3D'z-index: 100'>"
+ "<div class=3D'login_content'>"

+ "<input name=3D'close' type=3D'button' class=3D'close'  =
onclick=3D'javascript:csdn.closeLogin();return false;'  />"
+ "<p class=3D'point' id=3D'sperr'></p>"
+ "<input name=3D'user_id'  id=3D'u'  type=3D'text' class=3D'user_id' =
placeholder=3D'=E7=94=A8=E6=88=B7ID/=E6=B3=A8=E5=86=8C=E9=82=AE=E7=AE=B1'=
 />"
+ "<input name=3D'password' id=3D'p' type=3D'password' =
class=3D'password' placeholder=3D'=E5=AF=86=E7=A0=81'/ >"
+ "<label><p class=3D'remember clearfix'><input name=3D'checkbox'  =
id=3D'chkre' type=3D'checkbox' value=3D'checkbox' =
/>=E8=AE=B0=E4=BD=8F=E6=88=91=E4=B8=80=E5=91=A8</p></label>"
+ "<div class=3D'pw_lg'>"
+ "<a href=3D'https://" + csdn.domain + "/account/forgotpassword' =
target=3D'_blank' >=E5=BF=98=E8=AE=B0=E5=AF=86=E7=A0=81</a>|<a =
href=3D'https://" + csdn.domain + "/account/register' target=3D'_blank' =
class=3D'pw_a'>=E6=B3=A8=E5=86=8C</a>"
+ "</div>"
+ "<input name=3D'button' type=3D'button' =
onclick=3D'javascript:csdn.login();return false;' value=3D'=E7=99=BB  =
=E5=BD=95' class=3D'login_bt'/>"
+ "<div class=3D'lg_3 clearfix'>"
+ "<a href=3D'https://" + csdn.domain + "/auth/baidu?from=3D" + fromurl =
+ "' target=3D'_blank' class=3D'baidu'></a>"
+ "<a href=3D'https://" + csdn.domain + "/auth/Github?from=3D" + fromurl =
+ "' target=3D'_blank' class=3D'github'></a>"
+ "<a href=3D'https://" + csdn.domain + "/auth/qq?from=3D" + fromurl + =
"' target=3D'_blank' class=3D'qq'></a>"
+ "<a href=3D'https://" + csdn.domain + "/auth/sinat?from=3D" + fromurl =
+ "' target=3D'_blank' class=3D'weibo'></a>"
+ "=E7=AC=AC=E4=B8=89=E6=96=B9=E7=99=BB=E5=BD=95=EF=BC=9A"
+ "</div></div>"
+ "<iframe frameborder=3D'no' allowtransparency=3D'yes' =
style=3D'position: absolute; width:100%; height: 311px; left: 0; top: =
100px; border: 0; z-index: -1;'>"
+ "</div>";


    return text;
};

csdn.login =3D function () {
    if (csdn.doing) return;
    var u =3D csdn.$('u');
    var p =3D csdn.$('p');
    var er =3D csdn.$('sperr');
    if (!u.value) {
        er.innerHTML =3D '* =
=E8=AF=B7=E8=BE=93=E5=85=A5=E7=94=A8=E6=88=B7=E5=90=8D/=E9=82=AE=E7=AE=B1=
=E3=80=82';
        return;
    }
    if (!p.value) {
        er.innerHTML =3D '* =
=E8=AF=B7=E8=BE=93=E5=85=A5=E5=AF=86=E7=A0=81=E3=80=82';
        return;
    }
    csdn.doing =3D true;
    er.innerHTML =3D '=E6=AD=A3=E5=9C=A8=E7=99=BB=E5=BD=95...';
    var url =3D location.protocol + '//' + csdn.domain + =
'/ajax/accounthandler.ashx';
    var data =3D 't=3Dlog&u=3D' + encodeURIComponent(u.value)
        + '&p=3D' + encodeURIComponent(p.value)
        + '&remember=3D' + (csdn.$('chkre').checked ? 1 : 0)
        + '&callback=3Dcsdn.login_back'
        + '&r=3D' + (new Date().getTime());

    csdn.post(url + '?' + data);
};
csdn.login_back =3D function (data) {
    if (data.status) {
        var userName =3D data.data.userName;
        var userInfo =3D data.data.encryptUserInfo;
        var exp =3D csdn.$('chkre').checked ? 7 : 0;
        var url =3D location.protocol + '//' + csdn.domain + =
'/home/ssoindex'
            + '?userName=3D' + encodeURIComponent(userName)
            + '&userInfo=3D' + encodeURIComponent(userInfo)
            + '&exp=3D' + exp;

        csdn.load_frm(url, csdn.login_ok(data));
    } else {
        if (data.error.indexOf("=E6=BF=80=E6=B4=BB") > -1) {
            csdn.$('sperr').innerHTML =3D '* =
=E8=B4=A6=E6=88=B7=E6=9C=AA=E6=BF=80=E6=B4=BB=EF=BC=8C=E8=AF=B7=E5=85=88<=
a href=3D"https://' + csdn.domain + '/account/active?from=3D' + =
encodeURIComponent(location + '') + '" =
target=3D_blank>=E6=BF=80=E6=B4=BB</a>=E3=80=82';
        } else {
            csdn.$('sperr').innerHTML =3D '* ' + data.error;
        }
        csdn.doing =3D false;
    }
};
csdn.login_ok =3D function (data) {
    csdn.doing =3D false;
    csdn.$('sperr').innerHTML =3D '<span =
style=3D"color:green;">=E7=99=BB=E5=BD=95=E6=88=90=E5=8A=9F=EF=BC=81</spa=
n>';
    if (csdn.loginBack) csdn.loginBack(data);
    csdn.closeLogin();
};
csdn.post =3D function (url, callback) {
    var sc =3D document.createElement("script");
    sc.type =3D 'text/javascript';
    sc.async =3D true;
    sc.src =3D url;
    if (callback) {
        if (sc.onload) sc.onload =3D callback;
        else sc.onreadystatechange =3D callback;
    }
    document.body.appendChild(sc);
};
csdn.arr_isloaded =3D [];
csdn.load_frm =3D function (url, loaded) {
    var idx =3D csdn.arr_isloaded.length;
    csdn.arr_isloaded[idx] =3D false;
    var frm =3D document.createElement("iframe");
    frm.style.width =3D '1px';
    frm.style.height =3D '1px';
    frm.style.visibility =3D 'hidden';
    frm.src =3D url;
    if (loaded) {
        var call =3D function () {
            if (!csdn.arr_isloaded[idx]) {
                csdn.arr_isloaded[idx] =3D true;
                loaded();
            }
        };
        if (frm.onreadystatechange) {
            frm.onreadystatechange =3D call;
        } else {
            frm.onload =3D call;
        }
        setTimeout(call, 5000);
    }
    document.body.appendChild(frm);
};
/*=E5=8A=A0=E8=BD=BD=E6=A0=B7=E5=BC=8F=E8=A1=A8=E5=8D=95*/
(function () {
    if (typeof jQuery !=3D 'undefined') {
        jQuery(csdn.setStyle);
    } else {
        var ld =3D window.onload;
        window.onload =3D function () {
            if (ld) ld();
            csdn.setStyle();
        };
    }
})();



------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.csdn.net/ui/scripts/Csdn/counter.js

document.write('<script type=3D"text/javascript" charset=3D"UTF-8" =
src=3D"http://message.csdn.net/msg.popup.js"><'+'/script>');
------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: 7bit
Content-Location: http://ad.csdn.net/scripts/ad-blog.js

var ad_type = 'js1616';
var ad_sc = '<script type="text/javascript" '
    + 'src="http://ad.csdn.net/scripts/ad-' + ad_type + '.js"'
    + '></'
    + 'script>';
//document.writeln(ad_sc);

ad_type = 'js1617_2';
ad_sc = '<script type="text/javascript" '
    + 'src="http://ad.csdn.net/scripts/ad-' + ad_type + '.js"'
    + '></'
    + 'script>';
//document.writeln(ad_sc);

ad_type = 'js1618_3';
ad_sc = '<script type="text/javascript" '
    + 'src="http://ad.csdn.net/scripts/ad-' + ad_type + '.js"'
    + '></'
    + 'script>';

//document.writeln(ad_sc);
/*
ad_type = 'ms1585_4';
ad_sc = '<script type="text/javascript" '
    + 'src="http://ad.csdn.net/scripts/ad-' + ad_type + '.js"'
    + '></'
    + 'script>';

document.writeln(ad_sc);

ad_type = 'ms1573_5';
ad_sc = '<script type="text/javascript" '
    + 'src="http://ad.csdn.net/scripts/ad-' + ad_type + '.js"'
    + '></'
    + 'script>';

document.writeln(ad_sc);

ad_type = 'ms1548_6';
ad_sc = '<script type="text/javascript" '
    + 'src="http://ad.csdn.net/scripts/ad-' + ad_type + '.js"'
    + '></'
    + 'script>';

document.writeln(ad_sc);
*/
------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/public/common/toolbar/js/toolbar.js

// Generated by CoffeeScript 1.6.3=0A=
(function () {=0A=
  !(function (window) {=0A=
    var Toolbar;=0A=
    var currUser =3D {=0A=
      //use to join avator=0A=
      AU: ""=0A=
    };=0A=
    var isNotifyShowed =3D false;=0A=
    var AUtoAvatar =3D function (AU) {=0A=
      _AUPath =3D AU.split("").join("/");=0A=
      return "http://avatar.csdn.net/" + _AUPath + "/2_" + =
currUser.userName + ".jpg";=0A=
    }=0A=
    var getActive =3D function () {=0A=
      return document.activeElement;=0A=
    }=0A=
    Toolbar =3D function (opts) {=0A=
      this.opts =3D opts;=0A=
      this.Doms =3D {};=0A=
      this.Curr =3D null;=0A=
      this.init.apply(this, [opts]);=0A=
    };=0A=
    Toolbar.prototype =3D {=0A=
      init: function (opts) {=0A=
        opts =3D opts || this.opts;=0A=
        this.getDoms(opts).bindEvent();=0A=
        this.initFavor();=0A=
        this.initNotify();=0A=
        this.initProfile();=0A=
      },=0A=
=0A=
      /*=0A=
       * =
=E9=91=B1=E6=B0=AC=E6=82=8E=E9=8E=B5=E2=82=AC=E9=8F=88=E5=A1=AAom=E9=8E=B6=
=E6=92=B3=E5=BD=87=0A=
       */=0A=
      getDoms: function (opts) {=0A=
        opts =3D opts || this.opts;=0A=
        this.Doms.wraper =3D opts.wraper;=0A=
        this.folded =3D true;=0A=
        this.Doms.listBtns =3D $(opts.wraper + " ul.btns>li");=0A=
        this.Doms.profile =3D $(opts.wraper + " .profile");=0A=
        return this;=0A=
      },=0A=
      bindEvent: function (opts) {=0A=
        var _this =3D this;=0A=
        var $loginWrap =3D $(this.Doms.wraper + " .login-wrap");=0A=
        opts =3D opts || this.opts;=0A=
=0A=
        this.Doms.listBtns.bind('mouseover', function (event) {=0A=
          _this.Curr =3D $(this).parent().children().filter(".on")[0];=0A=
=0A=
          if ($(event.target).hasClass("notify") || =
$(event.target).parents().filter(".notify").length) {=0A=
=0A=
            if (!isNotifyShowed || opts.notifyInst.isHasNewMsg()) {=0A=
              $("#header_notice_num").trigger("click");=0A=
              isNotifyShowed =3D true;=0A=
            }=0A=
          }=0A=
          if (_this.Curr =3D=3D this) {=0A=
            return;=0A=
          }=0A=
          $(_this.Curr).removeClass("on");=0A=
          $(this).addClass("on");=0A=
          _this.folded =3D false;=0A=
        });=0A=
        $(this.Doms.wraper).bind('mouseout',function(e){=0A=
            =
if($(getActive()).parents().filter(_this.Doms.wraper).length>0){=0A=
              return;=0A=
            }=0A=
            $(document.body).trigger("toolbar-fold");=0A=
            $(_this.Doms.wraper).find(".on").removeClass("on");// hotfix =
geek.csdn.net firfox can't removeclass "on"=0A=
        });=0A=
=0A=
        $(document).bind("click", function (e) {=0A=
          if ($(e.target).parents().filter(_this.Doms.wraper).length =
<=3D 0) {=0A=
            $(document.body).trigger("toolbar-fold");=0A=
            $(_this.Doms.wraper).find(".on").removeClass("on");// hotfix =
geek.csdn.net webkit click can't removeclass "on"=0A=
          }=0A=
        });=0A=
=0A=
        $(document.body).bind("toolbar-fold", function (e) {=0A=
          _this.Doms.listBtns.filter(".on").removeClass("on");=0A=
        });=0A=
        $(this.Doms.wraper + " .search form").bind("keyup", function (e) =
{=0A=
          if (e.keycode =3D=3D 13) {=0A=
            this.submit();=0A=
          }=0A=
        });=0A=
        // $(document).bind("userLogined",function(e,userData){=0A=
        //   $loginWrap.removeClass("unlogin");=0A=
        //   userData.userName&&$loginWrap.show();=0A=
        // });=0A=
=0A=
        // $(document).bind("userLoginOut",function(e,username){=0A=
        //   $loginWrap.addClass("unlogin").removeClass("hide").show();=0A=
        // });=0A=
=0A=
=0A=
        return this;=0A=
      },=0A=
      initLogo: function (opts) {},=0A=
      initFavor: function () {=0A=
        var _wraper =3D this.Doms.wraper + " .favor"=0A=
        var _title =3D document.title;=0A=
        var _url =3D document.location.href;=0A=
        var $title =3D $(_wraper + " .title");=0A=
        var $url =3D $(_wraper + " .url");=0A=
        // var $tag =3D $(_wraper + " .tag");=0A=
        // var $description =3D $(_wraper + " .description");=0A=
        var $tag =3D $(_wraper + " #input-tag");=0A=
        var $description =3D $(_wraper + " #input-description");=0A=
        var $share =3D $(_wraper + " .share");=0A=
        var $cancel =3D $(_wraper + " .cancel");=0A=
        var $submit =3D $(_wraper + " .submit");=0A=
        var $ok =3D $(_wraper + " .ok");=0A=
=0A=
=0A=
        //set value=0A=
        $title.val(_title);=0A=
        $url.val(_url);=0A=
        $share.attr("checked", true);=0A=
=0A=
        //bind event=0A=
        $cancel.bind("click", function (e) {=0A=
          $(document.body).trigger("toolbar-fold");=0A=
          $(this).closest(".on").removeClass("on");// hotfix =
geek.csdn.net webkit and firfox click can't removeclass "on"=0A=
        });=0A=
=0A=
        $ok.bind("click", function (e) {=0A=
          $(_wraper + " .favor-failed").hide();=0A=
          $(_wraper + " .favor-success").hide();=0A=
          $(_wraper + " .favor-form").show();=0A=
          $(document.body).trigger("toolbar-fold");=0A=
        });=0A=
=0A=
=0A=
        $submit.bind("click", function (e) {=0A=
          var _data =3D {=0A=
            title: $title.val(),=0A=
            //url:encodeURIComponent($url.val()),=0A=
            url: $url.val(),=0A=
            description: $description.val(),=0A=
            tag: $tag.val(),=0A=
            share: $share[0].checked ? 1 : 0=0A=
          }=0A=
=0A=
            function resetForm() {=0A=
              $(_wraper + " .title").val($title.val());=0A=
              $(_wraper + " .url").val(window.location.href);=0A=
              $(_wraper + " .tag").val("");=0A=
              $(_wraper + " .description").val("");=0A=
            }=0A=
=0A=
            function cbSuccess() {=0A=
              $(_wraper + " .favor-failed").show();=0A=
              $(_wraper + " .favor-success").hide();=0A=
              $(_wraper + " .favor-form").hide();=0A=
            }=0A=
=0A=
            function cbError() {=0A=
              $(_wraper + " .favor-failed").hide();=0A=
              $(_wraper + " .favor-success").show();=0A=
              $(_wraper + " .favor-form").hide();=0A=
            }=0A=
          $.ajax({=0A=
            data: _data,=0A=
            jsonp: "jsonpcallback",=0A=
            dataType: "jsonp",=0A=
            url: "http://my.csdn.net/service/favorite/add_favorite",=0A=
            success: function (data) {=0A=
              if (data.success =3D=3D "-1") {=0A=
                cbSuccess();=0A=
                resetForm();=0A=
              }=0A=
              if (data.success =3D=3D "1") {=0A=
                cbError();=0A=
                resetForm();=0A=
              }=0A=
            }=0A=
          });=0A=
=0A=
          return false;=0A=
        });=0A=
=0A=
      },=0A=
      initNotify: function (opts) {=0A=
        var _this =3D this;=0A=
        var opts =3D opts || this.opts;=0A=
        if (!opts.notifyInst) {=0A=
          $(opts.wraper + " .notify").hide();=0A=
          throw "notify.js not loaded!";=0A=
        }=0A=
        $(document).bind("toolbar-setNotesNum", function (e, num) {=0A=
          var $number =3D $(_this.Doms.wraper + " .number");=0A=
          var $hasnotes =3D $(_this.Doms.wraper + " .icon-hasnotes-sm");=0A=
          if (num <=3D 0) {=0A=
            $hasnotes.hide();=0A=
            return;=0A=
          } else if (num > 0) {=0A=
            $hasnotes.show();=0A=
          }=0A=
        });=0A=
        if (opts.notifyInst) {=0A=
          opts.notifyInst.on("receive_unreads", function (e, data) {=0A=
            var num =3D opts.notifyInst.getlocalUnread().length;=0A=
            $(document).trigger("toolbar-setNotesNum", num);=0A=
          });=0A=
          opts.notifyInst.on("receive_setreaded", function (e, data) {=0A=
            var num =3D opts.notifyInst.getlocalUnread().length;=0A=
            $(document).trigger("toolbar-setNotesNum", num);=0A=
          });=0A=
        }=0A=
      },=0A=
      initProfile: function (userData) {=0A=
        var _this =3D this;=0A=
      }=0A=
    };=0A=
    return window["Toolbar"] =3D Toolbar;=0A=
  })(window);=0A=
=0A=
  var $oScriptTag =3D $("#csdn-toolbar-id");=0A=
  var inst =3D typeof csdn_note =3D=3D 'undefined' ? null : csdn_note;=0A=
  new Toolbar({=0A=
    wraper: ".csdn-toolbar",=0A=
    notifyInst: inst=0A=
  });=0A=
}).call(this);
------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/comm_ask/js/libs/wmd.js

/**
 * marked - a markdown parser
 * Copyright (c) 2011-2013, Christopher Jeffrey. (MIT Licensed)
 * https://github.com/chjj/marked
 */

;(function() {

/**
 * Block-Level Grammar
 */

var block =3D {
  newline: /^\n+/,
  code: /^( {4}[^\n]+\n*)+/,
  fences: noop,
  hr: /^( *[-*_]){3,} *(?:\n+|$)/,
  heading: /^ *(#{1,6}) *([^\n]+?) *#* *(?:\n+|$)/,
  nptable: noop,
  lheading: /^([^\n]+)\n *(=3D|-){2,} *(?:\n+|$)/,
  blockquote: /^( *>[^\n]+(\n[^\n]+)*\n*)+/,
  list: /^( *)(bull) [\s\S]+?(?:hr|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,
  html: /^ *(?:comment|closed|closing) *(?:\n{2,}|\s*$)/,
  def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +["(]([^\n]+)[")])? =
*(?:\n+|$)/,
  table: noop,
  paragraph: =
/^((?:[^\n]+\n?(?!hr|heading|lheading|blockquote|tag|def))+)\n*/,
  text: /^[^\n]+/
};

block.bullet =3D /(?:[*+-]|\d+\.)/;
block.item =3D /^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/;
block.item =3D replace(block.item, 'gm')
  (/bull/g, block.bullet)
  ();

block.list =3D replace(block.list)
  (/bull/g, block.bullet)
  ('hr', /\n+(?=3D(?: *[-*_]){3,} *(?:\n+|$))/)
  ();

block._tag =3D '(?!(?:'
  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'
  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'
  + '|span|br|wbr|ins|del|img)\\b)\\w+(?!:/|@)\\b';

block.html =3D replace(block.html)
  ('comment', /<!--[\s\S]*?-->/)
  ('closed', /<(tag)[\s\S]+?<\/\1>/)
  ('closing', /<tag(?:"[^"]*"|'[^']*'|[^'">])*?>/)
  (/tag/g, block._tag)
  ();

block.paragraph =3D replace(block.paragraph)
  ('hr', block.hr)
  ('heading', block.heading)
  ('lheading', block.lheading)
  ('blockquote', block.blockquote)
  ('tag', '<' + block._tag)
  ('def', block.def)
  ();

/**
 * Normal Block Grammar
 */

block.normal =3D merge({}, block);

/**
 * GFM Block Grammar
 */

block.gfm =3D merge({}, block.normal, {
  fences: /^ *(`{3,}|~{3,}) *(\S+)? *\n([\s\S]+?)\s*\1 *(?:\n+|$)/,
  paragraph: /^/
});

block.gfm.paragraph =3D replace(block.paragraph)
  ('(?!', '(?!'
    + block.gfm.fences.source.replace('\\1', '\\2') + '|'
    + block.list.source.replace('\\1', '\\3') + '|')
  ();

/**
 * GFM + Tables Block Grammar
 */

block.tables =3D merge({}, block.gfm, {
  nptable: /^ *(\S.*\|.*)\n *([-:]+ *\|[-| =
:]*)\n((?:.*\|.*(?:\n|$))*)\n*/,
  table: /^ *\|(.+)\n *\|( *[-:]+[-| :]*)\n((?: *\|.*(?:\n|$))*)\n*/
});

/**
 * Block Lexer
 */

function Lexer(options) {
  this.tokens =3D [];
  this.tokens.links =3D {};
  this.options =3D options || marked.defaults;
  this.rules =3D block.normal;

  if (this.options.gfm) {
    if (this.options.tables) {
      this.rules =3D block.tables;
    } else {
      this.rules =3D block.gfm;
    }
  }
}

/**
 * Expose Block Rules
 */

Lexer.rules =3D block;

/**
 * Static Lex Method
 */

Lexer.lex =3D function(src, options) {
  var lexer =3D new Lexer(options);
  return lexer.lex(src);
};

/**
 * Preprocessing
 */

Lexer.prototype.lex =3D function(src) {
  src =3D src
    .replace(/\r\n|\r/g, '\n')
    .replace(/\t/g, '    ')
    .replace(/\u00a0/g, ' ')
    .replace(/\u2424/g, '\n');

  return this.token(src, true);
};

/**
 * Lexing
 */

Lexer.prototype.token =3D function(src, top) {
  var src =3D src.replace(/^ +$/gm, '')
    , next
    , loose
    , cap
    , bull
    , b
    , item
    , space
    , i
    , l;

  while (src) {
    // newline
    if (cap =3D this.rules.newline.exec(src)) {
      src =3D src.substring(cap[0].length);
      if (cap[0].length > 1) {
        this.tokens.push({
          type: 'space'
        });
      }
    }

    // code
    if (cap =3D this.rules.code.exec(src)) {
      src =3D src.substring(cap[0].length);
      cap =3D cap[0].replace(/^ {4}/gm, '');
      this.tokens.push({
        type: 'code',
        text: !this.options.pedantic
          ? cap.replace(/\n+$/, '')
          : cap
      });
      continue;
    }

    // fences (gfm)
    if (cap =3D this.rules.fences.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'code',
        lang: cap[2],
        text: cap[3]
      });
      continue;
    }

    // heading
    if (cap =3D this.rules.heading.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'heading',
        depth: cap[1].length,
        text: cap[2]
      });
      continue;
    }

    // table no leading pipe (gfm)
    if (top && (cap =3D this.rules.nptable.exec(src))) {
      src =3D src.substring(cap[0].length);

      item =3D {
        type: 'table',
        header: cap[1].replace(/^ *| *\| *$/g, '').split(/ *\| */),
        align: cap[2].replace(/^ *|\| *$/g, '').split(/ *\| */),
        cells: cap[3].replace(/\n$/, '').split('\n')
      };

      for (i =3D 0; i < item.align.length; i++) {
        if (/^ *-+: *$/.test(item.align[i])) {
          item.align[i] =3D 'right';
        } else if (/^ *:-+: *$/.test(item.align[i])) {
          item.align[i] =3D 'center';
        } else if (/^ *:-+ *$/.test(item.align[i])) {
          item.align[i] =3D 'left';
        } else {
          item.align[i] =3D null;
        }
      }

      for (i =3D 0; i < item.cells.length; i++) {
        item.cells[i] =3D item.cells[i].split(/ *\| */);
      }

      this.tokens.push(item);

      continue;
    }

    // lheading
    if (cap =3D this.rules.lheading.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'heading',
        depth: cap[2] =3D=3D=3D '=3D' ? 1 : 2,
        text: cap[1]
      });
      continue;
    }

    // hr
    if (cap =3D this.rules.hr.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'hr'
      });
      continue;
    }

    // blockquote
    if (cap =3D this.rules.blockquote.exec(src)) {
      src =3D src.substring(cap[0].length);

      this.tokens.push({
        type: 'blockquote_start'
      });

      cap =3D cap[0].replace(/^ *> ?/gm, '');

      // Pass `top` to keep the current
      // "toplevel" state. This is exactly
      // how markdown.pl works.
      this.token(cap, top);

      this.tokens.push({
        type: 'blockquote_end'
      });

      continue;
    }

    // list
    if (cap =3D this.rules.list.exec(src)) {
      src =3D src.substring(cap[0].length);
      bull =3D cap[2];

      this.tokens.push({
        type: 'list_start',
        ordered: bull.length > 1
      });

      // Get each top-level item.
      cap =3D cap[0].match(this.rules.item);

      next =3D false;
      l =3D cap.length;
      i =3D 0;

      for (; i < l; i++) {
        item =3D cap[i];

        // Remove the list item's bullet
        // so it is seen as the next token.
        space =3D item.length;
        item =3D item.replace(/^ *([*+-]|\d+\.) +/, '');

        // Outdent whatever the
        // list item contains. Hacky.
        if (~item.indexOf('\n ')) {
          space -=3D item.length;
          item =3D !this.options.pedantic
            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')
            : item.replace(/^ {1,4}/gm, '');
        }

        // Determine whether the next list item belongs here.
        // Backpedal if it does not belong in this list.
        if (this.options.smartLists && i !=3D=3D l - 1) {
          b =3D block.bullet.exec(cap[i + 1])[0];
          if (bull !=3D=3D b && !(bull.length > 1 && b.length > 1)) {
            src =3D cap.slice(i + 1).join('\n') + src;
            i =3D l - 1;
          }
        }

        // Determine whether item is loose or not.
        // Use: /(^|\n)(?! )[^\n]+\n\n(?!\s*$)/
        // for discount behavior.
        loose =3D next || /\n\n(?!\s*$)/.test(item);
        if (i !=3D=3D l - 1) {
          next =3D item.charAt(item.length - 1) =3D=3D=3D '\n';
          if (!loose) loose =3D next;
        }

        this.tokens.push({
          type: loose
            ? 'loose_item_start'
            : 'list_item_start'
        });

        // Recurse.
        this.token(item, false);

        this.tokens.push({
          type: 'list_item_end'
        });
      }

      this.tokens.push({
        type: 'list_end'
      });

      continue;
    }

    // html
    if (cap =3D this.rules.html.exec(src)) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: this.options.sanitize
          ? 'paragraph'
          : 'html',
        pre: cap[1] =3D=3D=3D 'pre' || cap[1] =3D=3D=3D 'script' || =
cap[1] =3D=3D=3D 'style',
        text: cap[0]
      });
      continue;
    }

    // def
    if (top && (cap =3D this.rules.def.exec(src))) {
      src =3D src.substring(cap[0].length);
      this.tokens.links[cap[1].toLowerCase()] =3D {
        href: cap[2],
        title: cap[3]
      };
      continue;
    }

    // table (gfm)
    if (top && (cap =3D this.rules.table.exec(src))) {
      src =3D src.substring(cap[0].length);

      item =3D {
        type: 'table',
        header: cap[1].replace(/^ *| *\| *$/g, '').split(/ *\| */),
        align: cap[2].replace(/^ *|\| *$/g, '').split(/ *\| */),
        cells: cap[3].replace(/(?: *\| *)?\n$/, '').split('\n')
      };

      for (i =3D 0; i < item.align.length; i++) {
        if (/^ *-+: *$/.test(item.align[i])) {
          item.align[i] =3D 'right';
        } else if (/^ *:-+: *$/.test(item.align[i])) {
          item.align[i] =3D 'center';
        } else if (/^ *:-+ *$/.test(item.align[i])) {
          item.align[i] =3D 'left';
        } else {
          item.align[i] =3D null;
        }
      }

      for (i =3D 0; i < item.cells.length; i++) {
        item.cells[i] =3D item.cells[i]
          .replace(/^ *\| *| *\| *$/g, '')
          .split(/ *\| */);
      }

      this.tokens.push(item);

      continue;
    }

    // top-level paragraph
    if (top && (cap =3D this.rules.paragraph.exec(src))) {
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'paragraph',
        text: cap[1].charAt(cap[1].length - 1) =3D=3D=3D '\n'
          ? cap[1].slice(0, -1)
          : cap[1]
      });
      continue;
    }

    // text
    if (cap =3D this.rules.text.exec(src)) {
      // Top-level should never reach here.
      src =3D src.substring(cap[0].length);
      this.tokens.push({
        type: 'text',
        text: cap[0]
      });
      continue;
    }

    if (src) {
      throw new
        Error('Infinite loop on byte: ' + src.charCodeAt(0));
    }
  }

  return this.tokens;
};

/**
 * Inline-Level Grammar
 */

var inline =3D {
  escape: /^\\([\\`*{}\[\]()#+\-.!_>])/,
  autolink: /^<([^ >]+(@|:\/)[^ >]+)>/,
  url: noop,
  tag: /^<!--[\s\S]*?-->|^<\/?\w+(?:"[^"]*"|'[^']*'|[^'">])*?>/,
  link: /^!?\[(inside)\]\(href\)/,
  reflink: /^!?\[(inside)\]\s*\[([^\]]*)\]/,
  nolink: /^!?\[((?:\[[^\]]*\]|[^\[\]])*)\]/,
  strong: /^__([\s\S]+?)__(?!_)|^\*\*([\s\S]+?)\*\*(?!\*)/,
  em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,
  code: /^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/,
  br: /^ {2,}\n(?!\s*$)/,
  del: noop,
  text: /^[\s\S]+?(?=3D[\\<!\[_*`]| {2,}\n|$)/
};

inline._inside =3D /(?:\[[^\]]*\]|[^\[\]]|\](?=3D[^\[]*\]))*/;
inline._href =3D /\s*<?([\s\S]*?)>?(?:\s+['"]([\s\S]*?)['"])?\s*/;

inline.link =3D replace(inline.link)
  ('inside', inline._inside)
  ('href', inline._href)
  ();

inline.reflink =3D replace(inline.reflink)
  ('inside', inline._inside)
  ();

/**
 * Normal Inline Grammar
 */

inline.normal =3D merge({}, inline);

/**
 * Pedantic Inline Grammar
 */

inline.pedantic =3D merge({}, inline.normal, {
  strong: =
/^__(?=3D\S)([\s\S]*?\S)__(?!_)|^\*\*(?=3D\S)([\s\S]*?\S)\*\*(?!\*)/,
  em: /^_(?=3D\S)([\s\S]*?\S)_(?!_)|^\*(?=3D\S)([\s\S]*?\S)\*(?!\*)/
});

/**
 * GFM Inline Grammar
 */

inline.gfm =3D merge({}, inline.normal, {
  escape: replace(inline.escape)('])', '~|])')(),
  url: /^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/,
  del: /^~~(?=3D\S)([\s\S]*?\S)~~/,
  text: replace(inline.text)
    (']|', '~]|')
    ('|', '|https?://|')
    ()
});

/**
 * GFM + Line Breaks Inline Grammar
 */

inline.breaks =3D merge({}, inline.gfm, {
  br: replace(inline.br)('{2,}', '*')(),
  text: replace(inline.gfm.text)('{2,}', '*')()
});

/**
 * Inline Lexer & Compiler
 */

function InlineLexer(links, options) {
  this.options =3D options || marked.defaults;
  this.links =3D links;
  this.rules =3D inline.normal;

  if (!this.links) {
    throw new
      Error('Tokens array requires a `links` property.');
  }

  if (this.options.gfm) {
    if (this.options.breaks) {
      this.rules =3D inline.breaks;
    } else {
      this.rules =3D inline.gfm;
    }
  } else if (this.options.pedantic) {
    this.rules =3D inline.pedantic;
  }
}

/**
 * Expose Inline Rules
 */

InlineLexer.rules =3D inline;

/**
 * Static Lexing/Compiling Method
 */

InlineLexer.output =3D function(src, links, options) {
  var inline =3D new InlineLexer(links, options);
  return inline.output(src);
};

/**
 * Lexing/Compiling
 */

InlineLexer.prototype.output =3D function(src) {
  var out =3D ''
    , link
    , text
    , href
    , cap;

  while (src) {
    // escape
    if (cap =3D this.rules.escape.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D cap[1];
      continue;
    }

    // autolink
    if (cap =3D this.rules.autolink.exec(src)) {
      src =3D src.substring(cap[0].length);
      if (cap[2] =3D=3D=3D '@') {
        text =3D cap[1].charAt(6) =3D=3D=3D ':'
          ? this.mangle(cap[1].substring(7))
          : this.mangle(cap[1]);
        href =3D this.mangle('mailto:') + text;
      } else {
        text =3D escape(cap[1]);
        href =3D text;
      }
      out +=3D '<a href=3D"'
        + href
        + '">'
        + text
        + '</a>';
      continue;
    }

    // url (gfm)
    if (cap =3D this.rules.url.exec(src)) {
      src =3D src.substring(cap[0].length);
      text =3D escape(cap[1]);
      href =3D text;
      out +=3D '<a href=3D"'
        + href
        + '">'
        + text
        + '</a>';
      continue;
    }

    // tag
    if (cap =3D this.rules.tag.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D this.options.sanitize
        ? escape(cap[0])
        : cap[0];
      continue;
    }

    // link
    if (cap =3D this.rules.link.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D this.outputLink(cap, {
        href: cap[2],
        title: cap[3]
      });
      continue;
    }

    // reflink, nolink
    if ((cap =3D this.rules.reflink.exec(src))
        || (cap =3D this.rules.nolink.exec(src))) {
      src =3D src.substring(cap[0].length);
      link =3D (cap[2] || cap[1]).replace(/\s+/g, ' ');
      link =3D this.links[link.toLowerCase()];
      if (!link || !link.href) {
        out +=3D cap[0].charAt(0);
        src =3D cap[0].substring(1) + src;
        continue;
      }
      out +=3D this.outputLink(cap, link);
      continue;
    }

    // strong
    if (cap =3D this.rules.strong.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<strong>'
        + this.output(cap[2] || cap[1])
        + '</strong>';
      continue;
    }

    // em
    if (cap =3D this.rules.em.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<em>'
        + this.output(cap[2] || cap[1])
        + '</em>';
      continue;
    }

    // code
    if (cap =3D this.rules.code.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<code>'
        + escape(cap[2], true)
        + '</code>';
      continue;
    }

    // br
    if (cap =3D this.rules.br.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<br>';
      continue;
    }

    // del (gfm)
    if (cap =3D this.rules.del.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D '<del>'
        + this.output(cap[1])
        + '</del>';
      continue;
    }

    // text
    if (cap =3D this.rules.text.exec(src)) {
      src =3D src.substring(cap[0].length);
      out +=3D escape(this.smartypants(cap[0]));
      continue;
    }

    if (src) {
      throw new
        Error('Infinite loop on byte: ' + src.charCodeAt(0));
    }
  }

  return out;
};

/**
 * Compile Link
 */

InlineLexer.prototype.outputLink =3D function(cap, link) {
  if (cap[0].charAt(0) !=3D=3D '!') {
    return '<a href=3D"'
      + escape(link.href)
      + '"'
      + (link.title
      ? ' title=3D"'
      + escape(link.title)
      + '"'
      : '')
      + '>'
      + this.output(cap[1])
      + '</a>';
  } else {
    return '<img src=3D"'
      + escape(link.href)
      + '" alt=3D"'
      + escape(cap[1])
      + '"'
      + (link.title
      ? ' title=3D"'
      + escape(link.title)
      + '"'
      : '')
      + '>';
  }
};

/**
 * Smartypants Transformations
 */

InlineLexer.prototype.smartypants =3D function(text) {
  if (!this.options.smartypants) return text;
  return text
    // em-dashes
    .replace(/--/g, '\u2014')
    // opening singles
    .replace(/(^|[-\u2014/(\[{"\s])'/g, '$1\u2018')
    // closing singles & apostrophes
    .replace(/'/g, '\u2019')
    // opening doubles
    .replace(/(^|[-\u2014/(\[{\u2018\s])"/g, '$1\u201c')
    // closing doubles
    .replace(/"/g, '\u201d')
    // ellipses
    .replace(/\.{3}/g, '\u2026');
};

/**
 * Mangle Links
 */

InlineLexer.prototype.mangle =3D function(text) {
  var out =3D ''
    , l =3D text.length
    , i =3D 0
    , ch;

  for (; i < l; i++) {
    ch =3D text.charCodeAt(i);
    if (Math.random() > 0.5) {
      ch =3D 'x' + ch.toString(16);
    }
    out +=3D '&#' + ch + ';';
  }

  return out;
};

/**
 * Parsing & Compiling
 */

function Parser(options) {
  this.tokens =3D [];
  this.token =3D null;
  this.options =3D options || marked.defaults;
}

/**
 * Static Parse Method
 */

Parser.parse =3D function(src, options) {
  var parser =3D new Parser(options);
  return parser.parse(src);
};

/**
 * Parse Loop
 */

Parser.prototype.parse =3D function(src) {
  this.inline =3D new InlineLexer(src.links, this.options);
  this.tokens =3D src.reverse();

  var out =3D '';
  while (this.next()) {
    out +=3D this.tok();
  }

  return out;
};

/**
 * Next Token
 */

Parser.prototype.next =3D function() {
  return this.token =3D this.tokens.pop();
};

/**
 * Preview Next Token
 */

Parser.prototype.peek =3D function() {
  return this.tokens[this.tokens.length - 1] || 0;
};

/**
 * Parse Text Tokens
 */

Parser.prototype.parseText =3D function() {
  var body =3D this.token.text;

  while (this.peek().type =3D=3D=3D 'text') {
    body +=3D '\n' + this.next().text;
  }

  return this.inline.output(body);
};

/**
 * Parse Current Token
 */

Parser.prototype.tok =3D function() {
  switch (this.token.type) {
    case 'space': {
      return '';
    }
    case 'hr': {
      return '<hr>\n';
    }
    case 'heading': {
      return '<h'
        + this.token.depth
        + ' id=3D"'
        + this.token.text.toLowerCase().replace(/[^\w]+/g, '-')
        + '">'
        + this.inline.output(this.token.text)
        + '</h'
        + this.token.depth
        + '>\n';
    }
    case 'code': {
      if (this.options.highlight) {
        var code =3D this.options.highlight(this.token.text, =
this.token.lang);
        if (code !=3D null && code !=3D=3D this.token.text) {
          this.token.escaped =3D true;
          this.token.text =3D code;
        }
      }

      if (!this.token.escaped) {
        this.token.text =3D escape(this.token.text, true);
      }

      return '<pre><code'
        + (this.token.lang
        ? ' class=3D"'
        + this.options.langPrefix
        + this.token.lang
        + '"'
        : '')
        + '>'
        + this.token.text
        + '</code></pre>\n';
    }
    case 'table': {
      var body =3D ''
        , heading
        , i
        , row
        , cell
        , j;

      // header
      body +=3D '<thead>\n<tr>\n';
      for (i =3D 0; i < this.token.header.length; i++) {
        heading =3D this.inline.output(this.token.header[i]);
        body +=3D '<th';
        if (this.token.align[i]) {
          body +=3D ' style=3D"text-align:' + this.token.align[i] + '"';
        }
        body +=3D '>' + heading + '</th>\n';
      }
      body +=3D '</tr>\n</thead>\n';

      // body
      body +=3D '<tbody>\n'
      for (i =3D 0; i < this.token.cells.length; i++) {
        row =3D this.token.cells[i];
        body +=3D '<tr>\n';
        for (j =3D 0; j < row.length; j++) {
          cell =3D this.inline.output(row[j]);
          body +=3D '<td';
          if (this.token.align[j]) {
            body +=3D ' style=3D"text-align:' + this.token.align[j] + =
'"';
          }
          body +=3D '>' + cell + '</td>\n';
        }
        body +=3D '</tr>\n';
      }
      body +=3D '</tbody>\n';

      return '<table>\n'
        + body
        + '</table>\n';
    }
    case 'blockquote_start': {
      var body =3D '';

      while (this.next().type !=3D=3D 'blockquote_end') {
        body +=3D this.tok();
      }

      return '<blockquote>\n'
        + body
        + '</blockquote>\n';
    }
    case 'list_start': {
      var type =3D this.token.ordered ? 'ol' : 'ul'
        , body =3D '';

      while (this.next().type !=3D=3D 'list_end') {
        body +=3D this.tok();
      }

      return '<'
        + type
        + '>\n'
        + body
        + '</'
        + type
        + '>\n';
    }
    case 'list_item_start': {
      var body =3D '';

      while (this.next().type !=3D=3D 'list_item_end') {
        body +=3D this.token.type =3D=3D=3D 'text'
          ? this.parseText()
          : this.tok();
      }

      return '<li>'
        + body
        + '</li>\n';
    }
    case 'loose_item_start': {
      var body =3D '';

      while (this.next().type !=3D=3D 'list_item_end') {
        body +=3D this.tok();
      }

      return '<li>'
        + body
        + '</li>\n';
    }
    case 'html': {
      return !this.token.pre && !this.options.pedantic
        ? this.inline.output(this.token.text)
        : this.token.text;
    }
    case 'paragraph': {
      return '<p>'
        + this.inline.output(this.token.text)
        + '</p>\n';
    }
    case 'text': {
      return '<p>'
        + this.parseText()
        + '</p>\n';
    }
  }
};

/**
 * Helpers
 */

function escape(html, encode) {
  return html
    .replace(!encode ? /&(?!#?\w+;)/g : /&/g, '&amp;')
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;')
    .replace(/"/g, '&quot;')
    .replace(/'/g, '&#39;');
}

function replace(regex, opt) {
  regex =3D regex.source;
  opt =3D opt || '';
  return function self(name, val) {
    if (!name) return new RegExp(regex, opt);
    val =3D val.source || val;
    val =3D val.replace(/(^|[^\[])\^/g, '$1');
    regex =3D regex.replace(name, val);
    return self;
  };
}

function noop() {}
noop.exec =3D noop;

function merge(obj) {
  var i =3D 1
    , target
    , key;

  for (; i < arguments.length; i++) {
    target =3D arguments[i];
    for (key in target) {
      if (Object.prototype.hasOwnProperty.call(target, key)) {
        obj[key] =3D target[key];
      }
    }
  }

  return obj;
}

/**
 * Marked
 */

function marked(src, opt, callback) {
  if (callback || typeof opt =3D=3D=3D 'function') {
    if (!callback) {
      callback =3D opt;
      opt =3D null;
    }

    opt =3D merge({}, marked.defaults, opt || {});

    var highlight =3D opt.highlight
      , tokens
      , pending
      , i =3D 0;

    try {
      tokens =3D Lexer.lex(src, opt)
    } catch (e) {
      return callback(e);
    }

    pending =3D tokens.length;

    var done =3D function() {
      var out, err;

      try {
        out =3D Parser.parse(tokens, opt);
      } catch (e) {
        err =3D e;
      }

      opt.highlight =3D highlight;

      return err
        ? callback(err)
        : callback(null, out);
    };

    if (!highlight || highlight.length < 3) {
      return done();
    }

    delete opt.highlight;

    if (!pending) return done();

    for (; i < tokens.length; i++) {
      (function(token) {
        if (token.type !=3D=3D 'code') {
          return --pending || done();
        }
        return highlight(token.text, token.lang, function(err, code) {
          if (code =3D=3D null || code =3D=3D=3D token.text) {
            return --pending || done();
          }
          token.text =3D code;
          token.escaped =3D true;
          --pending || done();
        });
      })(tokens[i]);
    }

    return;
  }
  try {
    if (opt) opt =3D merge({}, marked.defaults, opt);
    return Parser.parse(Lexer.lex(src, opt), opt);
  } catch (e) {
    e.message +=3D '\nPlease report this to =
https://github.com/chjj/marked.';
    if ((opt || marked.defaults).silent) {
      return '<p>An error occured:</p><pre>'
        + escape(e.message + '', true)
        + '</pre>';
    }
    throw e;
  }
}

/**
 * Options
 */

marked.options =3D
marked.setOptions =3D function(opt) {
  merge(marked.defaults, opt);
  return marked;
};

marked.defaults =3D {
  gfm: true,
  tables: true,
  breaks: false,
  pedantic: false,
  sanitize: false,
  smartLists: false,
  silent: false,
  highlight: null,
  langPrefix: 'lang-',
  smartypants: false
};

/**
 * Expose
 */

marked.Parser =3D Parser;
marked.parser =3D Parser.parse;

marked.Lexer =3D Lexer;
marked.lexer =3D Lexer.lex;

marked.InlineLexer =3D InlineLexer;
marked.inlineLexer =3D InlineLexer.output;

marked.parse =3D marked;

if (typeof exports =3D=3D=3D 'object') {
  module.exports =3D marked;
} else if (typeof define =3D=3D=3D 'function' && define.amd) {
  define(function() { return marked; });
} else {
  this.marked =3D marked;
}

}).call(function() {
  return this || (typeof window !=3D=3D 'undefined' ? window : global);
}());

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/comm_ask/js/libs/showdown.js

(function(global) {
// CodeMirror version 3.15
//
// CodeMirror is the only global var we claim
    var CodeMirror =3D (function() {
        "use strict";

        // BROWSER SNIFFING

        // Crude, but necessary to handle a number of =
hard-to-feature-detect
        // bugs and behavior differences.
        var gecko =3D /gecko\/\d/i.test(navigator.userAgent);
        var ie =3D /MSIE \d/.test(navigator.userAgent);
        var ie_lt8 =3D ie && (document.documentMode =3D=3D null || =
document.documentMode < 8);
        var ie_lt9 =3D ie && (document.documentMode =3D=3D null || =
document.documentMode < 9);
        var webkit =3D /WebKit\//.test(navigator.userAgent);
        var qtwebkit =3D webkit && =
/Qt\/\d+\.\d+/.test(navigator.userAgent);
        var chrome =3D /Chrome\//.test(navigator.userAgent);
        var opera =3D /Opera\//.test(navigator.userAgent);
        var safari =3D /Apple Computer/.test(navigator.vendor);
        var khtml =3D /KHTML\//.test(navigator.userAgent);
        var mac_geLion =3D /Mac OS X =
1\d\D([7-9]|\d\d)\D/.test(navigator.userAgent);
        var mac_geMountainLion =3D /Mac OS X =
1\d\D([8-9]|\d\d)\D/.test(navigator.userAgent);
        var phantom =3D /PhantomJS/.test(navigator.userAgent);

        var ios =3D /AppleWebKit/.test(navigator.userAgent) && =
/Mobile\/\w+/.test(navigator.userAgent);
        // This is woefully incomplete. Suggestions for alternative =
methods welcome.
        var mobile =3D ios || /Android|webOS|BlackBerry|Opera Mini|Opera =
Mobi|IEMobile/i.test(navigator.userAgent);
        var mac =3D ios || /Mac/.test(navigator.platform);
        var windows =3D /windows/i.test(navigator.platform);

        var opera_version =3D opera && =
navigator.userAgent.match(/Version\/(\d*\.\d*)/);
        if (opera_version) opera_version =3D Number(opera_version[1]);
        if (opera_version && opera_version >=3D 15) { opera =3D false; =
webkit =3D true; }
        // Some browsers use the wrong event properties to signal =
cmd/ctrl on OS X
        var flipCtrlCmd =3D mac && (qtwebkit || opera && (opera_version =
=3D=3D null || opera_version < 12.11));
        var captureMiddleClick =3D gecko || (ie && !ie_lt9);

        // Optimize some code when these features are not used
        var sawReadOnlySpans =3D false, sawCollapsedSpans =3D false;

        // CONSTRUCTOR

        function CodeMirror(place, options) {
            if (!(this instanceof CodeMirror)) return new =
CodeMirror(place, options);

            this.options =3D options =3D options || {};
            // Determine effective options based on given values and =
defaults.
            for (var opt in defaults) if (!options.hasOwnProperty(opt) =
&& defaults.hasOwnProperty(opt))
                options[opt] =3D defaults[opt];
            setGuttersForLineNumbers(options);

            var docStart =3D typeof options.value =3D=3D "string" ? 0 : =
options.value.first;
            var display =3D this.display =3D makeDisplay(place, =
docStart);
            display.wrapper.CodeMirror =3D this;
            updateGutters(this);
            if (options.autofocus && !mobile) focusInput(this);

            this.state =3D {keyMaps: [],
                overlays: [],
                modeGen: 0,
                overwrite: false, focused: false,
                suppressEdits: false, pasteIncoming: false,
                draggingText: false,
                highlight: new Delayed()};

            themeChanged(this);
            if (options.lineWrapping)
                this.display.wrapper.className +=3D " CodeMirror-wrap";

            var doc =3D options.value;
            if (typeof doc =3D=3D "string") doc =3D new =
Doc(options.value, options.mode);
            operation(this, attachDoc)(this, doc);

            // Override magic textarea content restore that IE sometimes =
does
            // on our hidden textarea on reload
            if (ie) setTimeout(bind(resetInput, this, true), 20);

            registerEventHandlers(this);
            // IE throws unspecified error in certain cases, when
            // trying to access activeElement before onload
            var hasFocus; try { hasFocus =3D (document.activeElement =
=3D=3D display.input); } catch(e) { }
            if (hasFocus || (options.autofocus && !mobile)) =
setTimeout(bind(onFocus, this), 20);
            else onBlur(this);

            operation(this, function() {
                for (var opt in optionHandlers)
                    if (optionHandlers.propertyIsEnumerable(opt))
                        optionHandlers[opt](this, options[opt], Init);
                for (var i =3D 0; i < initHooks.length; ++i) =
initHooks[i](this);
            })();
        }

        // DISPLAY CONSTRUCTOR

        function makeDisplay(place, docStart) {
            var d =3D {};

            var input =3D d.input =3D elt("textarea", null, null, =
"position: absolute; padding: 0; width: 1px; height: 1em; outline: none; =
font-size: 4px;");
            if (webkit) input.style.width =3D "1000px";
            else input.setAttribute("wrap", "off");
            // if border: 0; -- iOS fails to open keyboard (issue #1287)
            if (ios) input.style.border =3D "1px solid black";
            input.setAttribute("autocorrect", "off"); =
input.setAttribute("autocapitalize", "off"); =
input.setAttribute("spellcheck", "false");

            // Wraps and hides input textarea
            d.inputDiv =3D elt("div", [input], null, "overflow: hidden; =
position: relative; width: 3px; height: 0px;");
            // The actual fake scrollbars.
            d.scrollbarH =3D elt("div", [elt("div", null, null, "height: =
1px")], "CodeMirror-hscrollbar");
            d.scrollbarV =3D elt("div", [elt("div", null, null, "width: =
1px")], "CodeMirror-vscrollbar");
            d.scrollbarFiller =3D elt("div", null, =
"CodeMirror-scrollbar-filler");
            d.gutterFiller =3D elt("div", null, =
"CodeMirror-gutter-filler");
            // DIVs containing the selection and the actual code
            d.lineDiv =3D elt("div", null, "CodeMirror-code");
            d.selectionDiv =3D elt("div", null, null, "position: =
relative; z-index: 1");
            // Blinky cursor, and element used to ensure cursor fits at =
the end of a line
            d.cursor =3D elt("div", "\u00a0", "CodeMirror-cursor");
            // Secondary cursor, shown when on a 'jump' in =
bi-directional text
            d.otherCursor =3D elt("div", "\u00a0", "CodeMirror-cursor =
CodeMirror-secondarycursor");
            // Used to measure text size
            d.measure =3D elt("div", null, "CodeMirror-measure");
            // Wraps everything that needs to exist inside the =
vertically-padded coordinate system
            d.lineSpace =3D elt("div", [d.measure, d.selectionDiv, =
d.lineDiv, d.cursor, d.otherCursor],
                null, "position: relative; outline: none");
            // Moved around its parent to cover visible view
            d.mover =3D elt("div", [elt("div", [d.lineSpace], =
"CodeMirror-lines")], null, "position: relative");
            // Set to the height of the text, causes scrolling
            d.sizer =3D elt("div", [d.mover], "CodeMirror-sizer");
            // D is needed because behavior of elts with overflow: auto =
and padding is inconsistent across browsers
            d.heightForcer =3D elt("div", null, null, "position: =
absolute; height: " + scrollerCutOff + "px; width: 1px;");
            // Will contain the gutters, if any
            d.gutters =3D elt("div", null, "CodeMirror-gutters");
            d.lineGutter =3D null;
            // Provides scrolling
            d.scroller =3D elt("div", [d.sizer, d.heightForcer, =
d.gutters], "CodeMirror-scroll");
            d.scroller.setAttribute("tabIndex", "-1");
            // The element in which the editor lives.
            d.wrapper =3D elt("div", [d.inputDiv, d.scrollbarH, =
d.scrollbarV,
                d.scrollbarFiller, d.gutterFiller, d.scroller], =
"CodeMirror");
            // Work around IE7 z-index bug
            if (ie_lt8) { d.gutters.style.zIndex =3D -1; =
d.scroller.style.paddingRight =3D 0; }
            if (place.appendChild) place.appendChild(d.wrapper); else =
place(d.wrapper);

            // Needed to hide big blue blinking cursor on Mobile Safari
            if (ios) input.style.width =3D "0px";
            if (!webkit) d.scroller.draggable =3D true;
            // Needed to handle Tab key in KHTML
            if (khtml) { d.inputDiv.style.height =3D "1px"; =
d.inputDiv.style.position =3D "absolute"; }
            // Need to set a minimum width to see the scrollbar on IE7 =
(but must not set it on IE8).
            else if (ie_lt8) d.scrollbarH.style.minWidth =3D =
d.scrollbarV.style.minWidth =3D "18px";

            // Current visible range (may be bigger than the view =
window).
            d.viewOffset =3D d.lastSizeC =3D 0;
            d.showingFrom =3D d.showingTo =3D docStart;

            // Used to only resize the line number gutter when necessary =
(when
            // the amount of lines crosses a boundary that makes its =
width change)
            d.lineNumWidth =3D d.lineNumInnerWidth =3D d.lineNumChars =
=3D null;
            // See readInput and resetInput
            d.prevInput =3D "";
            // Set to true when a non-horizontal-scrolling widget is =
added. As
            // an optimization, widget aligning is skipped when d is =
false.
            d.alignWidgets =3D false;
            // Flag that indicates whether we currently expect input to =
appear
            // (after some event like 'keypress' or 'input') and are =
polling
            // intensively.
            d.pollingFast =3D false;
            // Self-resetting timeout for the poller
            d.poll =3D new Delayed();

            d.cachedCharWidth =3D d.cachedTextHeight =3D null;
            d.measureLineCache =3D [];
            d.measureLineCachePos =3D 0;

            // Tracks when resetInput has punted to just putting a short
            // string instead of the (large) selection.
            d.inaccurateSelection =3D false;

            // Tracks the maximum line length so that the horizontal =
scrollbar
            // can be kept static when scrolling.
            d.maxLine =3D null;
            d.maxLineLength =3D 0;
            d.maxLineChanged =3D false;

            // Used for measuring wheel scrolling granularity
            d.wheelDX =3D d.wheelDY =3D d.wheelStartX =3D d.wheelStartY =
=3D null;

            return d;
        }

        // STATE UPDATES

        // Used to get the editor into a consistent state again when =
options change.

        function loadMode(cm) {
            cm.doc.mode =3D CodeMirror.getMode(cm.options, =
cm.doc.modeOption);
            cm.doc.iter(function(line) {
                if (line.stateAfter) line.stateAfter =3D null;
                if (line.styles) line.styles =3D null;
            });
            cm.doc.frontier =3D cm.doc.first;
            startWorker(cm, 100);
            cm.state.modeGen++;
            if (cm.curOp) regChange(cm);
        }

        function wrappingChanged(cm) {
            if (cm.options.lineWrapping) {
                cm.display.wrapper.className +=3D " CodeMirror-wrap";
                cm.display.sizer.style.minWidth =3D "";
            } else {
                cm.display.wrapper.className =3D =
cm.display.wrapper.className.replace(" CodeMirror-wrap", "");
                computeMaxLength(cm);
            }
            estimateLineHeights(cm);
            regChange(cm);
            clearCaches(cm);
            setTimeout(function(){updateScrollbars(cm);}, 100);
        }

        function estimateHeight(cm) {
            var th =3D textHeight(cm.display), wrapping =3D =
cm.options.lineWrapping;
            var perLine =3D wrapping && Math.max(5, =
cm.display.scroller.clientWidth / charWidth(cm.display) - 3);
            return function(line) {
                if (lineIsHidden(cm.doc, line))
                    return 0;
                else if (wrapping)
                    return (Math.ceil(line.text.length / perLine) || 1) =
* th;
                else
                    return th;
            };
        }

        function estimateLineHeights(cm) {
            var doc =3D cm.doc, est =3D estimateHeight(cm);
            doc.iter(function(line) {
                var estHeight =3D est(line);
                if (estHeight !=3D line.height) updateLineHeight(line, =
estHeight);
            });
        }

        function keyMapChanged(cm) {
            var map =3D keyMap[cm.options.keyMap], style =3D map.style;
            cm.display.wrapper.className =3D =
cm.display.wrapper.className.replace(/\s*cm-keymap-\S+/g, "") +
                (style ? " cm-keymap-" + style : "");
            cm.state.disableInput =3D map.disableInput;
        }

        function themeChanged(cm) {
            cm.display.wrapper.className =3D =
cm.display.wrapper.className.replace(/\s*cm-s-\S+/g, "") +
                cm.options.theme.replace(/(^|\s)\s*/g, " cm-s-");
            clearCaches(cm);
        }

        function guttersChanged(cm) {
            updateGutters(cm);
            regChange(cm);
            setTimeout(function(){alignHorizontally(cm);}, 20);
        }

        function updateGutters(cm) {
            var gutters =3D cm.display.gutters, specs =3D =
cm.options.gutters;
            removeChildren(gutters);
            for (var i =3D 0; i < specs.length; ++i) {
                var gutterClass =3D specs[i];
                var gElt =3D gutters.appendChild(elt("div", null, =
"CodeMirror-gutter " + gutterClass));
                if (gutterClass =3D=3D "CodeMirror-linenumbers") {
                    cm.display.lineGutter =3D gElt;
                    gElt.style.width =3D (cm.display.lineNumWidth || 1) =
+ "px";
                }
            }
            gutters.style.display =3D i ? "" : "none";
        }

        function lineLength(doc, line) {
            if (line.height =3D=3D 0) return 0;
            var len =3D line.text.length, merged, cur =3D line;
            while (merged =3D collapsedSpanAtStart(cur)) {
                var found =3D merged.find();
                cur =3D getLine(doc, found.from.line);
                len +=3D found.from.ch - found.to.ch;
            }
            cur =3D line;
            while (merged =3D collapsedSpanAtEnd(cur)) {
                var found =3D merged.find();
                len -=3D cur.text.length - found.from.ch;
                cur =3D getLine(doc, found.to.line);
                len +=3D cur.text.length - found.to.ch;
            }
            return len;
        }

        function computeMaxLength(cm) {
            var d =3D cm.display, doc =3D cm.doc;
            d.maxLine =3D getLine(doc, doc.first);
            d.maxLineLength =3D lineLength(doc, d.maxLine);
            d.maxLineChanged =3D true;
            doc.iter(function(line) {
                var len =3D lineLength(doc, line);
                if (len > d.maxLineLength) {
                    d.maxLineLength =3D len;
                    d.maxLine =3D line;
                }
            });
        }

        // Make sure the gutters options contains the element
        // "CodeMirror-linenumbers" when the lineNumbers option is true.
        function setGuttersForLineNumbers(options) {
            var found =3D false;
            for (var i =3D 0; i < options.gutters.length; ++i) {
                if (options.gutters[i] =3D=3D "CodeMirror-linenumbers") =
{
                    if (options.lineNumbers) found =3D true;
                    else options.gutters.splice(i--, 1);
                }
            }
            if (!found && options.lineNumbers)
                options.gutters.push("CodeMirror-linenumbers");
        }

        // SCROLLBARS

        // Re-synchronize the fake scrollbars with the actual size of =
the
        // content. Optionally force a scrollTop.
        function updateScrollbars(cm) {
            var d =3D cm.display, docHeight =3D cm.doc.height;
            var totalHeight =3D docHeight + paddingVert(d);
            d.sizer.style.minHeight =3D d.heightForcer.style.top =3D =
totalHeight + "px";
            d.gutters.style.height =3D Math.max(totalHeight, =
d.scroller.clientHeight - scrollerCutOff) + "px";
            var scrollHeight =3D Math.max(totalHeight, =
d.scroller.scrollHeight);
            var needsH =3D d.scroller.scrollWidth > =
(d.scroller.clientWidth + 1);
            var needsV =3D scrollHeight > (d.scroller.clientHeight + 1);
            if (needsV) {
                d.scrollbarV.style.display =3D "block";
                d.scrollbarV.style.bottom =3D needsH ? =
scrollbarWidth(d.measure) + "px" : "0";
                d.scrollbarV.firstChild.style.height =3D
                    (scrollHeight - d.scroller.clientHeight + =
d.scrollbarV.clientHeight) + "px";
            } else d.scrollbarV.style.display =3D "";
            if (needsH) {
                d.scrollbarH.style.display =3D "block";
                d.scrollbarH.style.right =3D needsV ? =
scrollbarWidth(d.measure) + "px" : "0";
                d.scrollbarH.firstChild.style.width =3D
                    (d.scroller.scrollWidth - d.scroller.clientWidth + =
d.scrollbarH.clientWidth) + "px";
            } else d.scrollbarH.style.display =3D "";
            if (needsH && needsV) {
                d.scrollbarFiller.style.display =3D "block";
                d.scrollbarFiller.style.height =3D =
d.scrollbarFiller.style.width =3D scrollbarWidth(d.measure) + "px";
            } else d.scrollbarFiller.style.display =3D "";
            if (needsH && cm.options.coverGutterNextToScrollbar && =
cm.options.fixedGutter) {
                d.gutterFiller.style.display =3D "block";
                d.gutterFiller.style.height =3D =
scrollbarWidth(d.measure) + "px";
                d.gutterFiller.style.width =3D d.gutters.offsetWidth + =
"px";
            } else d.gutterFiller.style.display =3D "";

            if (mac_geLion && scrollbarWidth(d.measure) =3D=3D=3D 0)
                d.scrollbarV.style.minWidth =3D =
d.scrollbarH.style.minHeight =3D mac_geMountainLion ? "18px" : "12px";
        }

        function visibleLines(display, doc, viewPort) {
            var top =3D display.scroller.scrollTop, height =3D =
display.wrapper.clientHeight;
            if (typeof viewPort =3D=3D "number") top =3D viewPort;
            else if (viewPort) {top =3D viewPort.top; height =3D =
viewPort.bottom - viewPort.top;}
            top =3D Math.floor(top - paddingTop(display));
            var bottom =3D Math.ceil(top + height);
            return {from: lineAtHeight(doc, top), to: lineAtHeight(doc, =
bottom)};
        }

        // LINE NUMBERS

        function alignHorizontally(cm) {
            var display =3D cm.display;
            if (!display.alignWidgets && (!display.gutters.firstChild || =
!cm.options.fixedGutter)) return;
            var comp =3D compensateForHScroll(display) - =
display.scroller.scrollLeft + cm.doc.scrollLeft;
            var gutterW =3D display.gutters.offsetWidth, l =3D comp + =
"px";
            for (var n =3D display.lineDiv.firstChild; n; n =3D =
n.nextSibling) if (n.alignable) {
                for (var i =3D 0, a =3D n.alignable; i < a.length; ++i) =
a[i].style.left =3D l;
            }
            if (cm.options.fixedGutter)
                display.gutters.style.left =3D (comp + gutterW) + "px";
        }

        function maybeUpdateLineNumberWidth(cm) {
            if (!cm.options.lineNumbers) return false;
            var doc =3D cm.doc, last =3D lineNumberFor(cm.options, =
doc.first + doc.size - 1), display =3D cm.display;
            if (last.length !=3D display.lineNumChars) {
                var test =3D display.measure.appendChild(elt("div", =
[elt("div", last)],
                    "CodeMirror-linenumber CodeMirror-gutter-elt"));
                var innerW =3D test.firstChild.offsetWidth, padding =3D =
test.offsetWidth - innerW;
                display.lineGutter.style.width =3D "";
                display.lineNumInnerWidth =3D Math.max(innerW, =
display.lineGutter.offsetWidth - padding);
                display.lineNumWidth =3D display.lineNumInnerWidth + =
padding;
                display.lineNumChars =3D display.lineNumInnerWidth ? =
last.length : -1;
                display.lineGutter.style.width =3D display.lineNumWidth =
+ "px";
                return true;
            }
            return false;
        }

        function lineNumberFor(options, i) {
            return String(options.lineNumberFormatter(i + =
options.firstLineNumber));
        }
        function compensateForHScroll(display) {
            return getRect(display.scroller).left - =
getRect(display.sizer).left;
        }

        // DISPLAY DRAWING

        function updateDisplay(cm, changes, viewPort, forced) {
            var oldFrom =3D cm.display.showingFrom, oldTo =3D =
cm.display.showingTo, updated;
            var visible =3D visibleLines(cm.display, cm.doc, viewPort);
            for (;;) {
                if (!updateDisplayInner(cm, changes, visible, forced)) =
break;
                forced =3D false;
                updated =3D true;
                updateSelection(cm);
                updateScrollbars(cm);

                // Clip forced viewport to actual scrollable area
                if (viewPort)
                    viewPort =3D =
Math.min(cm.display.scroller.scrollHeight - =
cm.display.scroller.clientHeight,
                            typeof viewPort =3D=3D "number" ? viewPort : =
viewPort.top);
                visible =3D visibleLines(cm.display, cm.doc, viewPort);
                if (visible.from >=3D cm.display.showingFrom && =
visible.to <=3D cm.display.showingTo)
                    break;
                changes =3D [];
            }

            if (updated) {
                signalLater(cm, "update", cm);
                if (cm.display.showingFrom !=3D oldFrom || =
cm.display.showingTo !=3D oldTo)
                    signalLater(cm, "viewportChange", cm, =
cm.display.showingFrom, cm.display.showingTo);
            }
            return updated;
        }

        // Uses a set of changes plus the current scroll position to
        // determine which DOM updates have to be made, and makes the
        // updates.
        function updateDisplayInner(cm, changes, visible, forced) {
            var display =3D cm.display, doc =3D cm.doc;
            if (!display.wrapper.clientWidth) {
                display.showingFrom =3D display.showingTo =3D doc.first;
                display.viewOffset =3D 0;
                return;
            }

            // Bail out if the visible area is already rendered and =
nothing changed.
            if (!forced && changes.length =3D=3D 0 &&
                visible.from > display.showingFrom && visible.to < =
display.showingTo)
                return;

            if (maybeUpdateLineNumberWidth(cm))
                changes =3D [{from: doc.first, to: doc.first + =
doc.size}];
            var gutterW =3D display.sizer.style.marginLeft =3D =
display.gutters.offsetWidth + "px";
            display.scrollbarH.style.left =3D cm.options.fixedGutter ? =
gutterW : "0";

            // Used to determine which lines need their line numbers =
updated
            var positionsChangedFrom =3D Infinity;
            if (cm.options.lineNumbers)
                for (var i =3D 0; i < changes.length; ++i)
                    if (changes[i].diff) { positionsChangedFrom =3D =
changes[i].from; break; }

            var end =3D doc.first + doc.size;
            var from =3D Math.max(visible.from - =
cm.options.viewportMargin, doc.first);
            var to =3D Math.min(end, visible.to + =
cm.options.viewportMargin);
            if (display.showingFrom < from && from - display.showingFrom =
< 20) from =3D Math.max(doc.first, display.showingFrom);
            if (display.showingTo > to && display.showingTo - to < 20) =
to =3D Math.min(end, display.showingTo);
            if (sawCollapsedSpans) {
                from =3D lineNo(visualLine(doc, getLine(doc, from)));
                while (to < end && lineIsHidden(doc, getLine(doc, to))) =
++to;
            }

            // Create a range of theoretically intact lines, and punch =
holes
            // in that using the change info.
            var intact =3D [{from: Math.max(display.showingFrom, =
doc.first),
                to: Math.min(display.showingTo, end)}];
            if (intact[0].from >=3D intact[0].to) intact =3D [];
            else intact =3D computeIntact(intact, changes);
            // When merged lines are present, we might have to reduce =
the
            // intact ranges because changes in continued fragments of =
the
            // intact lines do require the lines to be redrawn.
            if (sawCollapsedSpans)
                for (var i =3D 0; i < intact.length; ++i) {
                    var range =3D intact[i], merged;
                    while (merged =3D collapsedSpanAtEnd(getLine(doc, =
range.to - 1))) {
                        var newTo =3D merged.find().from.line;
                        if (newTo > range.from) range.to =3D newTo;
                        else { intact.splice(i--, 1); break; }
                    }
                }

            // Clip off the parts that won't be visible
            var intactLines =3D 0;
            for (var i =3D 0; i < intact.length; ++i) {
                var range =3D intact[i];
                if (range.from < from) range.from =3D from;
                if (range.to > to) range.to =3D to;
                if (range.from >=3D range.to) intact.splice(i--, 1);
                else intactLines +=3D range.to - range.from;
            }
            if (!forced && intactLines =3D=3D to - from && from =3D=3D =
display.showingFrom && to =3D=3D display.showingTo) {
                updateViewOffset(cm);
                return;
            }
            intact.sort(function(a, b) {return a.from - b.from;});

            // Avoid crashing on IE's "unspecified error" when in =
iframes
            try {
                var focused =3D document.activeElement;
            } catch(e) {}
            if (intactLines < (to - from) * .7) =
display.lineDiv.style.display =3D "none";
            patchDisplay(cm, from, to, intact, positionsChangedFrom);
            display.lineDiv.style.display =3D "";
            if (focused && document.activeElement !=3D focused && =
focused.offsetHeight) focused.focus();

            var different =3D from !=3D display.showingFrom || to !=3D =
display.showingTo ||
                display.lastSizeC !=3D display.wrapper.clientHeight;
            // This is just a bogus formula that detects when the editor =
is
            // resized or the font size changes.
            if (different) {
                display.lastSizeC =3D display.wrapper.clientHeight;
                startWorker(cm, 400);
            }
            display.showingFrom =3D from; display.showingTo =3D to;

            updateHeightsInViewport(cm);
            updateViewOffset(cm);

            return true;
        }

        function updateHeightsInViewport(cm) {
            var display =3D cm.display;
            var prevBottom =3D display.lineDiv.offsetTop;
            for (var node =3D display.lineDiv.firstChild, height; node; =
node =3D node.nextSibling) if (node.lineObj) {
                if (ie_lt8) {
                    var bot =3D node.offsetTop + node.offsetHeight;
                    height =3D bot - prevBottom;
                    prevBottom =3D bot;
                } else {
                    var box =3D getRect(node);
                    height =3D box.bottom - box.top;
                }
                var diff =3D node.lineObj.height - height;
                if (height < 2) height =3D textHeight(display);
                if (diff > .001 || diff < -.001) {
                    updateLineHeight(node.lineObj, height);
                    var widgets =3D node.lineObj.widgets;
                    if (widgets) for (var i =3D 0; i < widgets.length; =
++i)
                        widgets[i].height =3D =
widgets[i].node.offsetHeight;
                }
            }
        }

        function updateViewOffset(cm) {
            var off =3D cm.display.viewOffset =3D heightAtLine(cm, =
getLine(cm.doc, cm.display.showingFrom));
            // Position the mover div to align with the current virtual =
scroll position
            cm.display.mover.style.top =3D off + "px";
        }

        function computeIntact(intact, changes) {
            for (var i =3D 0, l =3D changes.length || 0; i < l; ++i) {
                var change =3D changes[i], intact2 =3D [], diff =3D =
change.diff || 0;
                for (var j =3D 0, l2 =3D intact.length; j < l2; ++j) {
                    var range =3D intact[j];
                    if (change.to <=3D range.from && change.diff) {
                        intact2.push({from: range.from + diff, to: =
range.to + diff});
                    } else if (change.to <=3D range.from || change.from =
>=3D range.to) {
                        intact2.push(range);
                    } else {
                        if (change.from > range.from)
                            intact2.push({from: range.from, to: =
change.from});
                        if (change.to < range.to)
                            intact2.push({from: change.to + diff, to: =
range.to + diff});
                    }
                }
                intact =3D intact2;
            }
            return intact;
        }

        function getDimensions(cm) {
            var d =3D cm.display, left =3D {}, width =3D {};
            for (var n =3D d.gutters.firstChild, i =3D 0; n; n =3D =
n.nextSibling, ++i) {
                left[cm.options.gutters[i]] =3D n.offsetLeft;
                width[cm.options.gutters[i]] =3D n.offsetWidth;
            }
            return {fixedPos: compensateForHScroll(d),
                gutterTotalWidth: d.gutters.offsetWidth,
                gutterLeft: left,
                gutterWidth: width,
                wrapperWidth: d.wrapper.clientWidth};
        }

        function patchDisplay(cm, from, to, intact, updateNumbersFrom) {
            var dims =3D getDimensions(cm);
            var display =3D cm.display, lineNumbers =3D =
cm.options.lineNumbers;
            if (!intact.length && (!webkit || =
!cm.display.currentWheelTarget))
                removeChildren(display.lineDiv);
            var container =3D display.lineDiv, cur =3D =
container.firstChild;

            function rm(node) {
                var next =3D node.nextSibling;
                if (webkit && mac && cm.display.currentWheelTarget =
=3D=3D node) {
                    node.style.display =3D "none";
                    node.lineObj =3D null;
                } else {
                    node.parentNode.removeChild(node);
                }
                return next;
            }

            var nextIntact =3D intact.shift(), lineN =3D from;
            cm.doc.iter(from, to, function(line) {
                if (nextIntact && nextIntact.to =3D=3D lineN) nextIntact =
=3D intact.shift();
                if (lineIsHidden(cm.doc, line)) {
                    if (line.height !=3D 0) updateLineHeight(line, 0);
                    if (line.widgets && cur.previousSibling) for (var i =
=3D 0; i < line.widgets.length; ++i) {
                        var w =3D line.widgets[i];
                        if (w.showIfHidden) {
                            var prev =3D cur.previousSibling;
                            if (/pre/i.test(prev.nodeName)) {
                                var wrap =3D elt("div", null, null, =
"position: relative");
                                prev.parentNode.replaceChild(wrap, =
prev);
                                wrap.appendChild(prev);
                                prev =3D wrap;
                            }
                            var wnode =3D prev.appendChild(elt("div", =
[w.node], "CodeMirror-linewidget"));
                            if (!w.handleMouseEvents) wnode.ignoreEvents =
=3D true;
                            positionLineWidget(w, wnode, prev, dims);
                        }
                    }
                } else if (nextIntact && nextIntact.from <=3D lineN && =
nextIntact.to > lineN) {
                    // This line is intact. Skip to the actual node. =
Update its
                    // line number if needed.
                    while (cur.lineObj !=3D line) cur =3D rm(cur);
                    if (lineNumbers && updateNumbersFrom <=3D lineN && =
cur.lineNumber)
                        setTextContent(cur.lineNumber, =
lineNumberFor(cm.options, lineN));
                    cur =3D cur.nextSibling;
                } else {
                    // For lines with widgets, make an attempt to find =
and reuse
                    // the existing element, so that widgets aren't =
needlessly
                    // removed and re-inserted into the dom
                    if (line.widgets) for (var j =3D 0, search =3D cur, =
reuse; search && j < 20; ++j, search =3D search.nextSibling)
                        if (search.lineObj =3D=3D line && =
/div/i.test(search.nodeName)) { reuse =3D search; break; }
                    // This line needs to be generated.
                    var lineNode =3D buildLineElement(cm, line, lineN, =
dims, reuse);
                    if (lineNode !=3D reuse) {
                        container.insertBefore(lineNode, cur);
                    } else {
                        while (cur !=3D reuse) cur =3D rm(cur);
                        cur =3D cur.nextSibling;
                    }

                    lineNode.lineObj =3D line;
                }
                ++lineN;
            });
            while (cur) cur =3D rm(cur);
        }

        function buildLineElement(cm, line, lineNo, dims, reuse) {
            var lineElement =3D lineContent(cm, line);
            var markers =3D line.gutterMarkers, display =3D cm.display, =
wrap;

            if (!cm.options.lineNumbers && !markers && !line.bgClass && =
!line.wrapClass && !line.widgets)
                return lineElement;

            // Lines with gutter elements, widgets or a background class =
need
            // to be wrapped again, and have the extra elements added to =
the
            // wrapper div

            if (reuse) {
                reuse.alignable =3D null;
                var isOk =3D true, widgetsSeen =3D 0, insertBefore =3D =
null;
                for (var n =3D reuse.firstChild, next; n; n =3D next) {
                    next =3D n.nextSibling;
                    if (!/\bCodeMirror-linewidget\b/.test(n.className)) =
{
                        reuse.removeChild(n);
                    } else {
                        for (var i =3D 0; i < line.widgets.length; ++i) =
{
                            var widget =3D line.widgets[i];
                            if (widget.node =3D=3D n.firstChild) {
                                if (!widget.above && !insertBefore) =
insertBefore =3D n;
                                positionLineWidget(widget, n, reuse, =
dims);
                                ++widgetsSeen;
                                break;
                            }
                        }
                        if (i =3D=3D line.widgets.length) { isOk =3D =
false; break; }
                    }
                }
                reuse.insertBefore(lineElement, insertBefore);
                if (isOk && widgetsSeen =3D=3D line.widgets.length) {
                    wrap =3D reuse;
                    reuse.className =3D line.wrapClass || "";
                }
            }
            if (!wrap) {
                wrap =3D elt("div", null, line.wrapClass, "position: =
relative");
                wrap.appendChild(lineElement);
            }
            // Kludge to make sure the styled element lies behind the =
selection (by z-index)
            if (line.bgClass)
                wrap.insertBefore(elt("div", null, line.bgClass + " =
CodeMirror-linebackground"), wrap.firstChild);
            if (cm.options.lineNumbers || markers) {
                var gutterWrap =3D wrap.insertBefore(elt("div", null, =
null, "position: absolute; left: " +
                        (cm.options.fixedGutter ? dims.fixedPos : =
-dims.gutterTotalWidth) + "px"),
                    wrap.firstChild);
                if (cm.options.fixedGutter) (wrap.alignable || =
(wrap.alignable =3D [])).push(gutterWrap);
                if (cm.options.lineNumbers && (!markers || =
!markers["CodeMirror-linenumbers"]))
                    wrap.lineNumber =3D gutterWrap.appendChild(
                        elt("div", lineNumberFor(cm.options, lineNo),
                            "CodeMirror-linenumber =
CodeMirror-gutter-elt",
                                "left: " + =
dims.gutterLeft["CodeMirror-linenumbers"] + "px; width: "
                                + display.lineNumInnerWidth + "px"));
                if (markers)
                    for (var k =3D 0; k < cm.options.gutters.length; =
++k) {
                        var id =3D cm.options.gutters[k], found =3D =
markers.hasOwnProperty(id) && markers[id];
                        if (found)
                            gutterWrap.appendChild(elt("div", [found], =
"CodeMirror-gutter-elt", "left: " +
                                dims.gutterLeft[id] + "px; width: " + =
dims.gutterWidth[id] + "px"));
                    }
            }
            if (ie_lt8) wrap.style.zIndex =3D 2;
            if (line.widgets && wrap !=3D reuse) for (var i =3D 0, ws =
=3D line.widgets; i < ws.length; ++i) {
                var widget =3D ws[i], node =3D elt("div", [widget.node], =
"CodeMirror-linewidget");
                if (!widget.handleMouseEvents) node.ignoreEvents =3D =
true;
                positionLineWidget(widget, node, wrap, dims);
                if (widget.above)
                    wrap.insertBefore(node, cm.options.lineNumbers && =
line.height !=3D 0 ? gutterWrap : lineElement);
                else
                    wrap.appendChild(node);
                signalLater(widget, "redraw");
            }
            return wrap;
        }

        function positionLineWidget(widget, node, wrap, dims) {
            if (widget.noHScroll) {
                (wrap.alignable || (wrap.alignable =3D [])).push(node);
                var width =3D dims.wrapperWidth;
                node.style.left =3D dims.fixedPos + "px";
                if (!widget.coverGutter) {
                    width -=3D dims.gutterTotalWidth;
                    node.style.paddingLeft =3D dims.gutterTotalWidth + =
"px";
                }
                node.style.width =3D width + "px";
            }
            if (widget.coverGutter) {
                node.style.zIndex =3D 5;
                node.style.position =3D "relative";
                if (!widget.noHScroll) node.style.marginLeft =3D =
-dims.gutterTotalWidth + "px";
            }
        }

        // SELECTION / CURSOR

        function updateSelection(cm) {
            var display =3D cm.display;
            var collapsed =3D posEq(cm.doc.sel.from, cm.doc.sel.to);
            if (collapsed || cm.options.showCursorWhenSelecting)
                updateSelectionCursor(cm);
            else
                display.cursor.style.display =3D =
display.otherCursor.style.display =3D "none";
            if (!collapsed)
                updateSelectionRange(cm);
            else
                display.selectionDiv.style.display =3D "none";

            // Move the hidden textarea near the cursor to prevent =
scrolling artifacts
            if (cm.options.moveInputWithCursor) {
                var headPos =3D cursorCoords(cm, cm.doc.sel.head, =
"div");
                var wrapOff =3D getRect(display.wrapper), lineOff =3D =
getRect(display.lineDiv);
                display.inputDiv.style.top =3D Math.max(0, =
Math.min(display.wrapper.clientHeight - 10,
                        headPos.top + lineOff.top - wrapOff.top)) + =
"px";
                display.inputDiv.style.left =3D Math.max(0, =
Math.min(display.wrapper.clientWidth - 10,
                        headPos.left + lineOff.left - wrapOff.left)) + =
"px";
            }
        }

        // No selection, plain cursor
        function updateSelectionCursor(cm) {
            var display =3D cm.display, pos =3D cursorCoords(cm, =
cm.doc.sel.head, "div");
            display.cursor.style.left =3D pos.left + "px";
            display.cursor.style.top =3D pos.top + "px";
            display.cursor.style.height =3D Math.max(0, pos.bottom - =
pos.top) * cm.options.cursorHeight + "px";
            display.cursor.style.display =3D "";

            if (pos.other) {
                display.otherCursor.style.display =3D "";
                display.otherCursor.style.left =3D pos.other.left + =
"px";
                display.otherCursor.style.top =3D pos.other.top + "px";
                display.otherCursor.style.height =3D (pos.other.bottom - =
pos.other.top) * .85 + "px";
            } else { display.otherCursor.style.display =3D "none"; }
        }

        // Highlight selection
        function updateSelectionRange(cm) {
            var display =3D cm.display, doc =3D cm.doc, sel =3D =
cm.doc.sel;
            var fragment =3D document.createDocumentFragment();
            var clientWidth =3D display.lineSpace.offsetWidth, pl =3D =
paddingLeft(cm.display);

            function add(left, top, width, bottom) {
                if (top < 0) top =3D 0;
                fragment.appendChild(elt("div", null, =
"CodeMirror-selected", "position: absolute; left: " + left +
                    "px; top: " + top + "px; width: " + (width =3D=3D =
null ? clientWidth - left : width) +
                    "px; height: " + (bottom - top) + "px"));
            }

            function drawForLine(line, fromArg, toArg) {
                var lineObj =3D getLine(doc, line);
                var lineLen =3D lineObj.text.length;
                var start, end;
                function coords(ch, bias) {
                    return charCoords(cm, Pos(line, ch), "div", lineObj, =
bias);
                }

                iterateBidiSections(getOrder(lineObj), fromArg || 0, =
toArg =3D=3D null ? lineLen : toArg, function(from, to, dir) {
                    var leftPos =3D coords(from, "left"), rightPos, =
left, right;
                    if (from =3D=3D to) {
                        rightPos =3D leftPos;
                        left =3D right =3D leftPos.left;
                    } else {
                        rightPos =3D coords(to - 1, "right");
                        if (dir =3D=3D "rtl") { var tmp =3D leftPos; =
leftPos =3D rightPos; rightPos =3D tmp; }
                        left =3D leftPos.left;
                        right =3D rightPos.right;
                    }
                    if (fromArg =3D=3D null && from =3D=3D 0) left =3D =
pl;
                    if (rightPos.top - leftPos.top > 3) { // Different =
lines, draw top part
                        add(left, leftPos.top, null, leftPos.bottom);
                        left =3D pl;
                        if (leftPos.bottom < rightPos.top) add(left, =
leftPos.bottom, null, rightPos.top);
                    }
                    if (toArg =3D=3D null && to =3D=3D lineLen) right =
=3D clientWidth;
                    if (!start || leftPos.top < start.top || leftPos.top =
=3D=3D start.top && leftPos.left < start.left)
                        start =3D leftPos;
                    if (!end || rightPos.bottom > end.bottom || =
rightPos.bottom =3D=3D end.bottom && rightPos.right > end.right)
                        end =3D rightPos;
                    if (left < pl + 1) left =3D pl;
                    add(left, rightPos.top, right - left, =
rightPos.bottom);
                });
                return {start: start, end: end};
            }

            if (sel.from.line =3D=3D sel.to.line) {
                drawForLine(sel.from.line, sel.from.ch, sel.to.ch);
            } else {
                var fromLine =3D getLine(doc, sel.from.line), toLine =3D =
getLine(doc, sel.to.line);
                var singleVLine =3D visualLine(doc, fromLine) =3D=3D =
visualLine(doc, toLine);
                var leftEnd =3D drawForLine(sel.from.line, sel.from.ch, =
singleVLine ? fromLine.text.length : null).end;
                var rightStart =3D drawForLine(sel.to.line, singleVLine =
? 0 : null, sel.to.ch).start;
                if (singleVLine) {
                    if (leftEnd.top < rightStart.top - 2) {
                        add(leftEnd.right, leftEnd.top, null, =
leftEnd.bottom);
                        add(pl, rightStart.top, rightStart.left, =
rightStart.bottom);
                    } else {
                        add(leftEnd.right, leftEnd.top, rightStart.left =
- leftEnd.right, leftEnd.bottom);
                    }
                }
                if (leftEnd.bottom < rightStart.top)
                    add(pl, leftEnd.bottom, null, rightStart.top);
            }

            removeChildrenAndAdd(display.selectionDiv, fragment);
            display.selectionDiv.style.display =3D "";
        }

        // Cursor-blinking
        function restartBlink(cm) {
            if (!cm.state.focused) return;
            var display =3D cm.display;
            clearInterval(display.blinker);
            var on =3D true;
            display.cursor.style.visibility =3D =
display.otherCursor.style.visibility =3D "";
            display.blinker =3D setInterval(function() {
                display.cursor.style.visibility =3D =
display.otherCursor.style.visibility =3D (on =3D !on) ? "" : "hidden";
            }, cm.options.cursorBlinkRate);
        }

        // HIGHLIGHT WORKER

        function startWorker(cm, time) {
            if (cm.doc.mode.startState && cm.doc.frontier < =
cm.display.showingTo)
                cm.state.highlight.set(time, bind(highlightWorker, cm));
        }

        function highlightWorker(cm) {
            var doc =3D cm.doc;
            if (doc.frontier < doc.first) doc.frontier =3D doc.first;
            if (doc.frontier >=3D cm.display.showingTo) return;
            var end =3D +new Date + cm.options.workTime;
            var state =3D copyState(doc.mode, getStateBefore(cm, =
doc.frontier));
            var changed =3D [], prevChange;
            doc.iter(doc.frontier, Math.min(doc.first + doc.size, =
cm.display.showingTo + 500), function(line) {
                if (doc.frontier >=3D cm.display.showingFrom) { // =
Visible
                    var oldStyles =3D line.styles;
                    line.styles =3D highlightLine(cm, line, state);
                    var ischange =3D !oldStyles || oldStyles.length !=3D =
line.styles.length;
                    for (var i =3D 0; !ischange && i < oldStyles.length; =
++i) ischange =3D oldStyles[i] !=3D line.styles[i];
                    if (ischange) {
                        if (prevChange && prevChange.end =3D=3D =
doc.frontier) prevChange.end++;
                        else changed.push(prevChange =3D {start: =
doc.frontier, end: doc.frontier + 1});
                    }
                    line.stateAfter =3D copyState(doc.mode, state);
                } else {
                    processLine(cm, line, state);
                    line.stateAfter =3D doc.frontier % 5 =3D=3D 0 ? =
copyState(doc.mode, state) : null;
                }
                ++doc.frontier;
                if (+new Date > end) {
                    startWorker(cm, cm.options.workDelay);
                    return true;
                }
            });
            if (changed.length)
                operation(cm, function() {
                    for (var i =3D 0; i < changed.length; ++i)
                        regChange(this, changed[i].start, =
changed[i].end);
                })();
        }

        // Finds the line to start with when starting a parse. Tries to
        // find a line with a stateAfter, so that it can start with a
        // valid state. If that fails, it returns the line with the
        // smallest indentation, which tends to need the least context =
to
        // parse correctly.
        function findStartLine(cm, n, precise) {
            var minindent, minline, doc =3D cm.doc;
            for (var search =3D n, lim =3D n - 100; search > lim; =
--search) {
                if (search <=3D doc.first) return doc.first;
                var line =3D getLine(doc, search - 1);
                if (line.stateAfter && (!precise || search <=3D =
doc.frontier)) return search;
                var indented =3D countColumn(line.text, null, =
cm.options.tabSize);
                if (minline =3D=3D null || minindent > indented) {
                    minline =3D search - 1;
                    minindent =3D indented;
                }
            }
            return minline;
        }

        function getStateBefore(cm, n, precise) {
            var doc =3D cm.doc, display =3D cm.display;
            if (!doc.mode.startState) return true;
            var pos =3D findStartLine(cm, n, precise), state =3D pos > =
doc.first && getLine(doc, pos-1).stateAfter;
            if (!state) state =3D startState(doc.mode);
            else state =3D copyState(doc.mode, state);
            doc.iter(pos, n, function(line) {
                processLine(cm, line, state);
                var save =3D pos =3D=3D n - 1 || pos % 5 =3D=3D 0 || pos =
>=3D display.showingFrom && pos < display.showingTo;
                line.stateAfter =3D save ? copyState(doc.mode, state) : =
null;
                ++pos;
            });
            return state;
        }

        // POSITION MEASUREMENT

        function paddingTop(display) {return =
display.lineSpace.offsetTop;}
        function paddingVert(display) {return display.mover.offsetHeight =
- display.lineSpace.offsetHeight;}
        function paddingLeft(display) {
            var e =3D removeChildrenAndAdd(display.measure, elt("pre", =
null, null, "text-align: left")).appendChild(elt("span", "x"));
            return e.offsetLeft;
        }

        function measureChar(cm, line, ch, data, bias) {
            var dir =3D -1;
            data =3D data || measureLine(cm, line);

            for (var pos =3D ch;; pos +=3D dir) {
                var r =3D data[pos];
                if (r) break;
                if (dir < 0 && pos =3D=3D 0) dir =3D 1;
            }
            bias =3D pos > ch ? "left" : pos < ch ? "right" : bias;
            if (bias =3D=3D "left" && r.leftSide) r =3D r.leftSide;
            else if (bias =3D=3D "right" && r.rightSide) r =3D =
r.rightSide;
            return {left: pos < ch ? r.right : r.left,
                right: pos > ch ? r.left : r.right,
                top: r.top,
                bottom: r.bottom};
        }

        function findCachedMeasurement(cm, line) {
            var cache =3D cm.display.measureLineCache;
            for (var i =3D 0; i < cache.length; ++i) {
                var memo =3D cache[i];
                if (memo.text =3D=3D line.text && memo.markedSpans =
=3D=3D line.markedSpans &&
                    cm.display.scroller.clientWidth =3D=3D memo.width &&
                    memo.classes =3D=3D line.textClass + "|" + =
line.bgClass + "|" + line.wrapClass)
                    return memo;
            }
        }

        function clearCachedMeasurement(cm, line) {
            var exists =3D findCachedMeasurement(cm, line);
            if (exists) exists.text =3D exists.measure =3D =
exists.markedSpans =3D null;
        }

        function measureLine(cm, line) {
            // First look in the cache
            var cached =3D findCachedMeasurement(cm, line);
            if (cached) return cached.measure;

            // Failing that, recompute and store result in cache
            var measure =3D measureLineInner(cm, line);
            var cache =3D cm.display.measureLineCache;
            var memo =3D {text: line.text, width: =
cm.display.scroller.clientWidth,
                markedSpans: line.markedSpans, measure: measure,
                classes: line.textClass + "|" + line.bgClass + "|" + =
line.wrapClass};
            if (cache.length =3D=3D 16) =
cache[++cm.display.measureLineCachePos % 16] =3D memo;
            else cache.push(memo);
            return measure;
        }

        function measureLineInner(cm, line) {
            var display =3D cm.display, measure =3D =
emptyArray(line.text.length);
            var pre =3D lineContent(cm, line, measure, true);

            // IE does not cache element positions of inline elements =
between
            // calls to getBoundingClientRect. This makes the loop =
below,
            // which gathers the positions of all the characters on the =
line,
            // do an amount of layout work quadratic to the number of
            // characters. When line wrapping is off, we try to improve =
things
            // by first subdividing the line into a bunch of inline =
blocks, so
            // that IE can reuse most of the layout information from =
caches
            // for those blocks. This does interfere with line wrapping, =
so it
            // doesn't work when wrapping is on, but in that case the
            // situation is slightly better, since IE does cache =
line-wrapping
            // information and only recomputes per-line.
            if (ie && !ie_lt8 && !cm.options.lineWrapping && =
pre.childNodes.length > 100) {
                var fragment =3D document.createDocumentFragment();
                var chunk =3D 10, n =3D pre.childNodes.length;
                for (var i =3D 0, chunks =3D Math.ceil(n / chunk); i < =
chunks; ++i) {
                    var wrap =3D elt("div", null, null, "display: =
inline-block");
                    for (var j =3D 0; j < chunk && n; ++j) {
                        wrap.appendChild(pre.firstChild);
                        --n;
                    }
                    fragment.appendChild(wrap);
                }
                pre.appendChild(fragment);
            }

            removeChildrenAndAdd(display.measure, pre);

            var outer =3D getRect(display.lineDiv);
            var vranges =3D [], data =3D emptyArray(line.text.length), =
maxBot =3D pre.offsetHeight;
            // Work around an IE7/8 bug where it will sometimes have =
randomly
            // replaced our pre with a clone at this point.
            if (ie_lt9 && display.measure.first !=3D pre)
                removeChildrenAndAdd(display.measure, pre);

            function measureRect(rect) {
                var top =3D rect.top - outer.top, bot =3D rect.bottom - =
outer.top;
                if (bot > maxBot) bot =3D maxBot;
                if (top < 0) top =3D 0;
                for (var i =3D vranges.length - 2; i >=3D 0; i -=3D 2) {
                    var rtop =3D vranges[i], rbot =3D vranges[i+1];
                    if (rtop > bot || rbot < top) continue;
                    if (rtop <=3D top && rbot >=3D bot ||
                        top <=3D rtop && bot >=3D rbot ||
                        Math.min(bot, rbot) - Math.max(top, rtop) >=3D =
(bot - top) >> 1) {
                        vranges[i] =3D Math.min(top, rtop);
                        vranges[i+1] =3D Math.max(bot, rbot);
                        break;
                    }
                }
                if (i < 0) { i =3D vranges.length; vranges.push(top, =
bot); }
                return {left: rect.left - outer.left,
                    right: rect.right - outer.left,
                    top: i, bottom: null};
            }
            function finishRect(rect) {
                rect.bottom =3D vranges[rect.top+1];
                rect.top =3D vranges[rect.top];
            }

            for (var i =3D 0, cur; i < measure.length; ++i) if (cur =3D =
measure[i]) {
                var node =3D cur, rect =3D null;
                // A widget might wrap, needs special care
                if (/\bCodeMirror-widget\b/.test(cur.className) && =
cur.getClientRects) {
                    if (cur.firstChild.nodeType =3D=3D 1) node =3D =
cur.firstChild;
                    var rects =3D node.getClientRects();
                    if (rects.length > 1) {
                        rect =3D data[i] =3D measureRect(rects[0]);
                        rect.rightSide =3D =
measureRect(rects[rects.length - 1]);
                    }
                }
                if (!rect) rect =3D data[i] =3D =
measureRect(getRect(node));
                if (cur.measureRight) rect.right =3D =
getRect(cur.measureRight).left;
                if (cur.leftSide) rect.leftSide =3D =
measureRect(getRect(cur.leftSide));
            }
            for (var i =3D 0, cur; i < data.length; ++i) if (cur =3D =
data[i]) {
                finishRect(cur);
                if (cur.leftSide) finishRect(cur.leftSide);
                if (cur.rightSide) finishRect(cur.rightSide);
            }
            return data;
        }

        function measureLineWidth(cm, line) {
            var hasBadSpan =3D false;
            if (line.markedSpans) for (var i =3D 0; i < =
line.markedSpans; ++i) {
                var sp =3D line.markedSpans[i];
                if (sp.collapsed && (sp.to =3D=3D null || sp.to =3D=3D =
line.text.length)) hasBadSpan =3D true;
            }
            var cached =3D !hasBadSpan && findCachedMeasurement(cm, =
line);
            if (cached) return measureChar(cm, line, line.text.length, =
cached.measure, "right").right;

            var pre =3D lineContent(cm, line, null, true);
            var end =3D =
pre.appendChild(zeroWidthElement(cm.display.measure));
            removeChildrenAndAdd(cm.display.measure, pre);
            return getRect(end).right - =
getRect(cm.display.lineDiv).left;
        }

        function clearCaches(cm) {
            cm.display.measureLineCache.length =3D =
cm.display.measureLineCachePos =3D 0;
            cm.display.cachedCharWidth =3D cm.display.cachedTextHeight =
=3D null;
            if (!cm.options.lineWrapping) cm.display.maxLineChanged =3D =
true;
            cm.display.lineNumChars =3D null;
        }

        function pageScrollX() { return window.pageXOffset || =
(document.documentElement || document.body).scrollLeft; }
        function pageScrollY() { return window.pageYOffset || =
(document.documentElement || document.body).scrollTop; }

        // Context is one of "line", "div" (display.lineDiv), =
"local"/null (editor), or "page"
        function intoCoordSystem(cm, lineObj, rect, context) {
            if (lineObj.widgets) for (var i =3D 0; i < =
lineObj.widgets.length; ++i) if (lineObj.widgets[i].above) {
                var size =3D widgetHeight(lineObj.widgets[i]);
                rect.top +=3D size; rect.bottom +=3D size;
            }
            if (context =3D=3D "line") return rect;
            if (!context) context =3D "local";
            var yOff =3D heightAtLine(cm, lineObj);
            if (context =3D=3D "local") yOff +=3D =
paddingTop(cm.display);
            else yOff -=3D cm.display.viewOffset;
            if (context =3D=3D "page" || context =3D=3D "window") {
                var lOff =3D getRect(cm.display.lineSpace);
                yOff +=3D lOff.top + (context =3D=3D "window" ? 0 : =
pageScrollY());
                var xOff =3D lOff.left + (context =3D=3D "window" ? 0 : =
pageScrollX());
                rect.left +=3D xOff; rect.right +=3D xOff;
            }
            rect.top +=3D yOff; rect.bottom +=3D yOff;
            return rect;
        }

        // Context may be "window", "page", "div", or "local"/null
        // Result is in "div" coords
        function fromCoordSystem(cm, coords, context) {
            if (context =3D=3D "div") return coords;
            var left =3D coords.left, top =3D coords.top;
            // First move into "page" coordinate system
            if (context =3D=3D "page") {
                left -=3D pageScrollX();
                top -=3D pageScrollY();
            } else if (context =3D=3D "local" || !context) {
                var localBox =3D getRect(cm.display.sizer);
                left +=3D localBox.left;
                top +=3D localBox.top;
            }

            var lineSpaceBox =3D getRect(cm.display.lineSpace);
            return {left: left - lineSpaceBox.left, top: top - =
lineSpaceBox.top};
        }

        function charCoords(cm, pos, context, lineObj, bias) {
            if (!lineObj) lineObj =3D getLine(cm.doc, pos.line);
            return intoCoordSystem(cm, lineObj, measureChar(cm, lineObj, =
pos.ch, null, bias), context);
        }

        function cursorCoords(cm, pos, context, lineObj, measurement) {
            lineObj =3D lineObj || getLine(cm.doc, pos.line);
            if (!measurement) measurement =3D measureLine(cm, lineObj);
            function get(ch, right) {
                var m =3D measureChar(cm, lineObj, ch, measurement, =
right ? "right" : "left");
                if (right) m.left =3D m.right; else m.right =3D m.left;
                return intoCoordSystem(cm, lineObj, m, context);
            }
            function getBidi(ch, partPos) {
                var part =3D order[partPos], right =3D part.level % 2;
                if (ch =3D=3D bidiLeft(part) && partPos && part.level < =
order[partPos - 1].level) {
                    part =3D order[--partPos];
                    ch =3D bidiRight(part) - (part.level % 2 ? 0 : 1);
                    right =3D true;
                } else if (ch =3D=3D bidiRight(part) && partPos < =
order.length - 1 && part.level < order[partPos + 1].level) {
                    part =3D order[++partPos];
                    ch =3D bidiLeft(part) - part.level % 2;
                    right =3D false;
                }
                if (right && ch =3D=3D part.to && ch > part.from) return =
get(ch - 1);
                return get(ch, right);
            }
            var order =3D getOrder(lineObj), ch =3D pos.ch;
            if (!order) return get(ch);
            var partPos =3D getBidiPartAt(order, ch);
            var val =3D getBidi(ch, partPos);
            if (bidiOther !=3D null) val.other =3D getBidi(ch, =
bidiOther);
            return val;
        }

        function PosWithInfo(line, ch, outside, xRel) {
            var pos =3D new Pos(line, ch);
            pos.xRel =3D xRel;
            if (outside) pos.outside =3D true;
            return pos;
        }

        // Coords must be lineSpace-local
        function coordsChar(cm, x, y) {
            var doc =3D cm.doc;
            y +=3D cm.display.viewOffset;
            if (y < 0) return PosWithInfo(doc.first, 0, true, -1);
            var lineNo =3D lineAtHeight(doc, y), last =3D doc.first + =
doc.size - 1;
            if (lineNo > last)
                return PosWithInfo(doc.first + doc.size - 1, =
getLine(doc, last).text.length, true, 1);
            if (x < 0) x =3D 0;

            for (;;) {
                var lineObj =3D getLine(doc, lineNo);
                var found =3D coordsCharInner(cm, lineObj, lineNo, x, =
y);
                var merged =3D collapsedSpanAtEnd(lineObj);
                var mergedPos =3D merged && merged.find();
                if (merged && (found.ch > mergedPos.from.ch || found.ch =
=3D=3D mergedPos.from.ch && found.xRel > 0))
                    lineNo =3D mergedPos.to.line;
                else
                    return found;
            }
        }

        function coordsCharInner(cm, lineObj, lineNo, x, y) {
            var innerOff =3D y - heightAtLine(cm, lineObj);
            var wrongLine =3D false, adjust =3D 2 * =
cm.display.wrapper.clientWidth;
            var measurement =3D measureLine(cm, lineObj);

            function getX(ch) {
                var sp =3D cursorCoords(cm, Pos(lineNo, ch), "line",
                    lineObj, measurement);
                wrongLine =3D true;
                if (innerOff > sp.bottom) return sp.left - adjust;
                else if (innerOff < sp.top) return sp.left + adjust;
                else wrongLine =3D false;
                return sp.left;
            }

            var bidi =3D getOrder(lineObj), dist =3D =
lineObj.text.length;
            var from =3D lineLeft(lineObj), to =3D lineRight(lineObj);
            var fromX =3D getX(from), fromOutside =3D wrongLine, toX =3D =
getX(to), toOutside =3D wrongLine;

            if (x > toX) return PosWithInfo(lineNo, to, toOutside, 1);
            // Do a binary search between these bounds.
            for (;;) {
                if (bidi ? to =3D=3D from || to =3D=3D =
moveVisually(lineObj, from, 1) : to - from <=3D 1) {
                    var ch =3D x < fromX || x - fromX <=3D toX - x ? =
from : to;
                    var xDiff =3D x - (ch =3D=3D from ? fromX : toX);
                    while =
(isExtendingChar.test(lineObj.text.charAt(ch))) ++ch;
                    var pos =3D PosWithInfo(lineNo, ch, ch =3D=3D from ? =
fromOutside : toOutside,
                            xDiff < 0 ? -1 : xDiff ? 1 : 0);
                    return pos;
                }
                var step =3D Math.ceil(dist / 2), middle =3D from + =
step;
                if (bidi) {
                    middle =3D from;
                    for (var i =3D 0; i < step; ++i) middle =3D =
moveVisually(lineObj, middle, 1);
                }
                var middleX =3D getX(middle);
                if (middleX > x) {to =3D middle; toX =3D middleX; if =
(toOutside =3D wrongLine) toX +=3D 1000; dist =3D step;}
                else {from =3D middle; fromX =3D middleX; fromOutside =
=3D wrongLine; dist -=3D step;}
            }
        }

        var measureText;
        function textHeight(display) {
            if (display.cachedTextHeight !=3D null) return =
display.cachedTextHeight;
            if (measureText =3D=3D null) {
                measureText =3D elt("pre");
                // Measure a bunch of lines, for browsers that compute
                // fractional heights.
                for (var i =3D 0; i < 49; ++i) {
                    =
measureText.appendChild(document.createTextNode("x"));
                    measureText.appendChild(elt("br"));
                }
                measureText.appendChild(document.createTextNode("x"));
            }
            removeChildrenAndAdd(display.measure, measureText);
            var height =3D measureText.offsetHeight / 50;
            if (height > 3) display.cachedTextHeight =3D height;
            removeChildren(display.measure);
            return height || 1;
        }

        function charWidth(display) {
            if (display.cachedCharWidth !=3D null) return =
display.cachedCharWidth;
            var anchor =3D elt("span", "x");
            var pre =3D elt("pre", [anchor]);
            removeChildrenAndAdd(display.measure, pre);
            var width =3D anchor.offsetWidth;
            if (width > 2) display.cachedCharWidth =3D width;
            return width || 10;
        }

        // OPERATIONS

        // Operations are used to wrap changes in such a way that each
        // change won't have to update the cursor and display (which =
would
        // be awkward, slow, and error-prone), but instead updates are
        // batched and then all combined and executed at once.

        var nextOpId =3D 0;
        function startOperation(cm) {
            cm.curOp =3D {
                // An array of ranges of lines that have to be updated. =
See
                // updateDisplay.
                changes: [],
                forceUpdate: false,
                updateInput: null,
                userSelChange: null,
                textChanged: null,
                selectionChanged: false,
                cursorActivity: false,
                updateMaxLine: false,
                updateScrollPos: false,
                id: ++nextOpId
            };
            if (!delayedCallbackDepth++) delayedCallbacks =3D [];
        }

        function endOperation(cm) {
            var op =3D cm.curOp, doc =3D cm.doc, display =3D cm.display;
            cm.curOp =3D null;

            if (op.updateMaxLine) computeMaxLength(cm);
            if (display.maxLineChanged && !cm.options.lineWrapping && =
display.maxLine) {
                var width =3D measureLineWidth(cm, display.maxLine);
                display.sizer.style.minWidth =3D Math.max(0, width + 3 + =
scrollerCutOff) + "px";
                display.maxLineChanged =3D false;
                var maxScrollLeft =3D Math.max(0, =
display.sizer.offsetLeft + display.sizer.offsetWidth - =
display.scroller.clientWidth);
                if (maxScrollLeft < doc.scrollLeft && =
!op.updateScrollPos)
                    setScrollLeft(cm, =
Math.min(display.scroller.scrollLeft, maxScrollLeft), true);
            }
            var newScrollPos, updated;
            if (op.updateScrollPos) {
                newScrollPos =3D op.updateScrollPos;
            } else if (op.selectionChanged && =
display.scroller.clientHeight) { // don't rescroll if not visible
                var coords =3D cursorCoords(cm, doc.sel.head);
                newScrollPos =3D calculateScrollPos(cm, coords.left, =
coords.top, coords.left, coords.bottom);
            }
            if (op.changes.length || op.forceUpdate || newScrollPos && =
newScrollPos.scrollTop !=3D null) {
                updated =3D updateDisplay(cm, op.changes, newScrollPos =
&& newScrollPos.scrollTop, op.forceUpdate);
                if (cm.display.scroller.offsetHeight) cm.doc.scrollTop =
=3D cm.display.scroller.scrollTop;
            }
            if (!updated && op.selectionChanged) updateSelection(cm);
            if (op.updateScrollPos) {
                display.scroller.scrollTop =3D =
display.scrollbarV.scrollTop =3D doc.scrollTop =3D =
newScrollPos.scrollTop;
                display.scroller.scrollLeft =3D =
display.scrollbarH.scrollLeft =3D doc.scrollLeft =3D =
newScrollPos.scrollLeft;
                alignHorizontally(cm);
                if (op.scrollToPos)
                    scrollPosIntoView(cm, clipPos(cm.doc, =
op.scrollToPos), op.scrollToPosMargin);
            } else if (newScrollPos) {
                scrollCursorIntoView(cm);
            }
            if (op.selectionChanged) restartBlink(cm);

            if (cm.state.focused && op.updateInput)
                resetInput(cm, op.userSelChange);

            var hidden =3D op.maybeHiddenMarkers, unhidden =3D =
op.maybeUnhiddenMarkers;
            if (hidden) for (var i =3D 0; i < hidden.length; ++i)
                if (!hidden[i].lines.length) signal(hidden[i], "hide");
            if (unhidden) for (var i =3D 0; i < unhidden.length; ++i)
                if (unhidden[i].lines.length) signal(unhidden[i], =
"unhide");

            var delayed;
            if (!--delayedCallbackDepth) {
                delayed =3D delayedCallbacks;
                delayedCallbacks =3D null;
            }
            if (op.textChanged)
                signal(cm, "change", cm, op.textChanged);
            if (op.cursorActivity) signal(cm, "cursorActivity", cm);
            if (delayed) for (var i =3D 0; i < delayed.length; ++i) =
delayed[i]();
        }

        // Wraps a function in an operation. Returns the wrapped =
function.
        function operation(cm1, f) {
            return function() {
                var cm =3D cm1 || this, withOp =3D !cm.curOp;
                if (withOp) startOperation(cm);
                try { var result =3D f.apply(cm, arguments); }
                finally { if (withOp) endOperation(cm); }
                return result;
            };
        }
        function docOperation(f) {
            return function() {
                var withOp =3D this.cm && !this.cm.curOp, result;
                if (withOp) startOperation(this.cm);
                try { result =3D f.apply(this, arguments); }
                finally { if (withOp) endOperation(this.cm); }
                return result;
            };
        }
        function runInOp(cm, f) {
            var withOp =3D !cm.curOp, result;
            if (withOp) startOperation(cm);
            try { result =3D f(); }
            finally { if (withOp) endOperation(cm); }
            return result;
        }

        function regChange(cm, from, to, lendiff) {
            if (from =3D=3D null) from =3D cm.doc.first;
            if (to =3D=3D null) to =3D cm.doc.first + cm.doc.size;
            cm.curOp.changes.push({from: from, to: to, diff: lendiff});
        }

        // INPUT HANDLING

        function slowPoll(cm) {
            if (cm.display.pollingFast) return;
            cm.display.poll.set(cm.options.pollInterval, function() {
                readInput(cm);
                if (cm.state.focused) slowPoll(cm);
            });
        }

        function fastPoll(cm) {
            var missed =3D false;
            cm.display.pollingFast =3D true;
            function p() {
                var changed =3D readInput(cm);
                if (!changed && !missed) {missed =3D true; =
cm.display.poll.set(60, p);}
                else {cm.display.pollingFast =3D false; slowPoll(cm);}
            }
            cm.display.poll.set(20, p);
        }

        // prevInput is a hack to work with IME. If we reset the =
textarea
        // on every change, that breaks IME. So we look for changes
        // compared to the previous content instead. (Modern browsers =
have
        // events that indicate IME taking place, but these are not =
widely
        // supported or compatible enough yet to rely on.)
        function readInput(cm) {
            var input =3D cm.display.input, prevInput =3D =
cm.display.prevInput, doc =3D cm.doc, sel =3D doc.sel;
            if (!cm.state.focused || hasSelection(input) || =
isReadOnly(cm) || cm.state.disableInput) return false;
            var text =3D input.value;
            if (text =3D=3D prevInput && posEq(sel.from, sel.to)) return =
false;
            if (ie && !ie_lt9 && cm.display.inputHasSelection =3D=3D=3D =
text) {
                resetInput(cm, true);
                return false;
            }

            var withOp =3D !cm.curOp;
            if (withOp) startOperation(cm);
            sel.shift =3D false;
            var same =3D 0, l =3D Math.min(prevInput.length, =
text.length);
            while (same < l && prevInput.charCodeAt(same) =3D=3D =
text.charCodeAt(same)) ++same;
            var from =3D sel.from, to =3D sel.to;
            if (same < prevInput.length)
                from =3D Pos(from.line, from.ch - (prevInput.length - =
same));
            else if (cm.state.overwrite && posEq(from, to) && =
!cm.state.pasteIncoming)
                to =3D Pos(to.line, Math.min(getLine(doc, =
to.line).text.length, to.ch + (text.length - same)));

            var updateInput =3D cm.curOp.updateInput;
            var changeEvent =3D {from: from, to: to, text: =
splitLines(text.slice(same)),
                origin: cm.state.pasteIncoming ? "paste" : "+input"};
            makeChange(cm.doc, changeEvent, "end");
            cm.curOp.updateInput =3D updateInput;
            signalLater(cm, "inputRead", cm, changeEvent);

            if (text.length > 1000 || text.indexOf("\n") > -1) =
input.value =3D cm.display.prevInput =3D "";
            else cm.display.prevInput =3D text;
            if (withOp) endOperation(cm);
            cm.state.pasteIncoming =3D false;
            return true;
        }

        function resetInput(cm, user) {
            var minimal, selected, doc =3D cm.doc;
            if (!posEq(doc.sel.from, doc.sel.to)) {
                cm.display.prevInput =3D "";
                minimal =3D hasCopyEvent &&
                    (doc.sel.to.line - doc.sel.from.line > 100 || =
(selected =3D cm.getSelection()).length > 1000);
                var content =3D minimal ? "-" : selected || =
cm.getSelection();
                cm.display.input.value =3D content;
                if (cm.state.focused) selectInput(cm.display.input);
                if (ie && !ie_lt9) cm.display.inputHasSelection =3D =
content;
            } else if (user) {
                cm.display.prevInput =3D cm.display.input.value =3D "";
                if (ie && !ie_lt9) cm.display.inputHasSelection =3D =
null;
            }
            cm.display.inaccurateSelection =3D minimal;
        }

        function focusInput(cm) {
            if (cm.options.readOnly !=3D "nocursor" && (!mobile || =
document.activeElement !=3D cm.display.input))
                try {cm.display.input.focus();} catch(e) {}
        }

        function isReadOnly(cm) {
            return cm.options.readOnly || cm.doc.cantEdit;
        }

        // EVENT HANDLERS

        function registerEventHandlers(cm) {
            var d =3D cm.display;
            on(d.scroller, "mousedown", operation(cm, onMouseDown));
            if (ie)
                on(d.scroller, "dblclick", operation(cm, function(e) {
                    if (signalDOMEvent(cm, e)) return;
                    var pos =3D posFromMouse(cm, e);
                    if (!pos || clickInGutter(cm, e) || =
eventInWidget(cm.display, e)) return;
                    e_preventDefault(e);
                    var word =3D findWordAt(getLine(cm.doc, =
pos.line).text, pos);
                    extendSelection(cm.doc, word.from, word.to);
                }));
            else
                on(d.scroller, "dblclick", function(e) { =
signalDOMEvent(cm, e) || e_preventDefault(e); });
            on(d.lineSpace, "selectstart", function(e) {
                if (!eventInWidget(d, e)) e_preventDefault(e);
            });
            // Gecko browsers fire contextmenu *after* opening the menu, =
at
            // which point we can't mess with it anymore. Context menu =
is
            // handled in onMouseDown for Gecko.
            if (!captureMiddleClick) on(d.scroller, "contextmenu", =
function(e) {onContextMenu(cm, e);});

            on(d.scroller, "scroll", function() {
                if (d.scroller.clientHeight) {
                    setScrollTop(cm, d.scroller.scrollTop);
                    setScrollLeft(cm, d.scroller.scrollLeft, true);
                    signal(cm, "scroll", cm);
                }
            });
            on(d.scrollbarV, "scroll", function() {
                if (d.scroller.clientHeight) setScrollTop(cm, =
d.scrollbarV.scrollTop);
            });
            on(d.scrollbarH, "scroll", function() {
                if (d.scroller.clientHeight) setScrollLeft(cm, =
d.scrollbarH.scrollLeft);
            });

            on(d.scroller, "mousewheel", function(e){onScrollWheel(cm, =
e);});
            on(d.scroller, "DOMMouseScroll", =
function(e){onScrollWheel(cm, e);});

            function reFocus() { if (cm.state.focused) =
setTimeout(bind(focusInput, cm), 0); }
            on(d.scrollbarH, "mousedown", reFocus);
            on(d.scrollbarV, "mousedown", reFocus);
            // Prevent wrapper from ever scrolling
            on(d.wrapper, "scroll", function() { d.wrapper.scrollTop =3D =
d.wrapper.scrollLeft =3D 0; });

            var resizeTimer;
            function onResize() {
                if (resizeTimer =3D=3D null) resizeTimer =3D =
setTimeout(function() {
                    resizeTimer =3D null;
                    // Might be a text scaling operation, clear size =
caches.
                    d.cachedCharWidth =3D d.cachedTextHeight =3D =
knownScrollbarWidth =3D null;
                    clearCaches(cm);
                    runInOp(cm, bind(regChange, cm));
                }, 100);
            }
            on(window, "resize", onResize);
            // Above handler holds on to the editor and its data =
structures.
            // Here we poll to unregister it when the editor is no =
longer in
            // the document, so that it can be garbage-collected.
            function unregister() {
                for (var p =3D d.wrapper.parentNode; p && p !=3D =
document.body; p =3D p.parentNode) {}
                if (p) setTimeout(unregister, 5000);
                else off(window, "resize", onResize);
            }
            setTimeout(unregister, 5000);

            on(d.input, "keyup", operation(cm, function(e) {
                if (signalDOMEvent(cm, e) || cm.options.onKeyEvent && =
cm.options.onKeyEvent(cm, addStop(e))) return;
                if (e.keyCode =3D=3D 16) cm.doc.sel.shift =3D false;
            }));
            on(d.input, "input", bind(fastPoll, cm));
            on(d.input, "keydown", operation(cm, onKeyDown));
            on(d.input, "keypress", operation(cm, onKeyPress));
            on(d.input, "focus", bind(onFocus, cm));
            on(d.input, "blur", bind(onBlur, cm));

            function drag_(e) {
                if (signalDOMEvent(cm, e) || cm.options.onDragEvent && =
cm.options.onDragEvent(cm, addStop(e))) return;
                e_stop(e);
            }
            if (cm.options.dragDrop) {
                on(d.scroller, "dragstart", function(e){onDragStart(cm, =
e);});
                on(d.scroller, "dragenter", drag_);
                on(d.scroller, "dragover", drag_);
                on(d.scroller, "drop", operation(cm, onDrop));
            }
            on(d.scroller, "paste", function(e){
                if (eventInWidget(d, e)) return;
                focusInput(cm);
                fastPoll(cm);
            });
            on(d.input, "paste", function() {
                cm.state.pasteIncoming =3D true;
                fastPoll(cm);
            });

            function prepareCopy() {
                if (d.inaccurateSelection) {
                    d.prevInput =3D "";
                    d.inaccurateSelection =3D false;
                    d.input.value =3D cm.getSelection();
                    selectInput(d.input);
                }
            }
            on(d.input, "cut", prepareCopy);
            on(d.input, "copy", prepareCopy);

            // Needed to handle Tab key in KHTML
            if (khtml) on(d.sizer, "mouseup", function() {
                if (document.activeElement =3D=3D d.input) =
d.input.blur();
                focusInput(cm);
            });
        }

        function eventInWidget(display, e) {
            for (var n =3D e_target(e); n !=3D display.wrapper; n =3D =
n.parentNode) {
                if (!n || n.ignoreEvents || n.parentNode =3D=3D =
display.sizer && n !=3D display.mover) return true;
            }
        }

        function posFromMouse(cm, e, liberal) {
            var display =3D cm.display;
            if (!liberal) {
                var target =3D e_target(e);
                if (target =3D=3D display.scrollbarH || target =3D=3D =
display.scrollbarH.firstChild ||
                    target =3D=3D display.scrollbarV || target =3D=3D =
display.scrollbarV.firstChild ||
                    target =3D=3D display.scrollbarFiller || target =
=3D=3D display.gutterFiller) return null;
            }
            var x, y, space =3D getRect(display.lineSpace);
            // Fails unpredictably on IE[67] when mouse is dragged =
around quickly.
            try { x =3D e.clientX; y =3D e.clientY; } catch (e) { return =
null; }
            return coordsChar(cm, x - space.left, y - space.top);
        }

        var lastClick, lastDoubleClick;
        function onMouseDown(e) {
            if (signalDOMEvent(this, e)) return;
            var cm =3D this, display =3D cm.display, doc =3D cm.doc, sel =
=3D doc.sel;
            sel.shift =3D e.shiftKey;

            if (eventInWidget(display, e)) {
                if (!webkit) {
                    display.scroller.draggable =3D false;
                    setTimeout(function(){display.scroller.draggable =3D =
true;}, 100);
                }
                return;
            }
            if (clickInGutter(cm, e)) return;
            var start =3D posFromMouse(cm, e);

            switch (e_button(e)) {
                case 3:
                    if (captureMiddleClick) onContextMenu.call(cm, cm, =
e);
                    return;
                case 2:
                    if (start) extendSelection(cm.doc, start);
                    setTimeout(bind(focusInput, cm), 20);
                    e_preventDefault(e);
                    return;
            }
            // For button 1, if it was clicked inside the editor
            // (posFromMouse returning non-null), we have to adjust the
            // selection.
            if (!start) {if (e_target(e) =3D=3D display.scroller) =
e_preventDefault(e); return;}

            if (!cm.state.focused) onFocus(cm);

            var now =3D +new Date, type =3D "single";
            if (lastDoubleClick && lastDoubleClick.time > now - 400 && =
posEq(lastDoubleClick.pos, start)) {
                type =3D "triple";
                e_preventDefault(e);
                setTimeout(bind(focusInput, cm), 20);
                selectLine(cm, start.line);
            } else if (lastClick && lastClick.time > now - 400 && =
posEq(lastClick.pos, start)) {
                type =3D "double";
                lastDoubleClick =3D {time: now, pos: start};
                e_preventDefault(e);
                var word =3D findWordAt(getLine(doc, start.line).text, =
start);
                extendSelection(cm.doc, word.from, word.to);
            } else { lastClick =3D {time: now, pos: start}; }

            var last =3D start;
            if (cm.options.dragDrop && dragAndDrop && !isReadOnly(cm) && =
!posEq(sel.from, sel.to) &&
                !posLess(start, sel.from) && !posLess(sel.to, start) && =
type =3D=3D "single") {
                var dragEnd =3D operation(cm, function(e2) {
                    if (webkit) display.scroller.draggable =3D false;
                    cm.state.draggingText =3D false;
                    off(document, "mouseup", dragEnd);
                    off(display.scroller, "drop", dragEnd);
                    if (Math.abs(e.clientX - e2.clientX) + =
Math.abs(e.clientY - e2.clientY) < 10) {
                        e_preventDefault(e2);
                        extendSelection(cm.doc, start);
                        focusInput(cm);
                    }
                });
                // Let the drag handler handle this.
                if (webkit) display.scroller.draggable =3D true;
                cm.state.draggingText =3D dragEnd;
                // IE's approach to draggable
                if (display.scroller.dragDrop) =
display.scroller.dragDrop();
                on(document, "mouseup", dragEnd);
                on(display.scroller, "drop", dragEnd);
                return;
            }
            e_preventDefault(e);
            if (type =3D=3D "single") extendSelection(cm.doc, =
clipPos(doc, start));

            var startstart =3D sel.from, startend =3D sel.to, lastPos =
=3D start;

            function doSelect(cur) {
                if (posEq(lastPos, cur)) return;
                lastPos =3D cur;

                if (type =3D=3D "single") {
                    extendSelection(cm.doc, clipPos(doc, start), cur);
                    return;
                }

                startstart =3D clipPos(doc, startstart);
                startend =3D clipPos(doc, startend);
                if (type =3D=3D "double") {
                    var word =3D findWordAt(getLine(doc, cur.line).text, =
cur);
                    if (posLess(cur, startstart)) =
extendSelection(cm.doc, word.from, startend);
                    else extendSelection(cm.doc, startstart, word.to);
                } else if (type =3D=3D "triple") {
                    if (posLess(cur, startstart)) =
extendSelection(cm.doc, startend, clipPos(doc, Pos(cur.line, 0)));
                    else extendSelection(cm.doc, startstart, =
clipPos(doc, Pos(cur.line + 1, 0)));
                }
            }

            var editorSize =3D getRect(display.wrapper);
            // Used to ensure timeout re-tries don't fire when another =
extend
            // happened in the meantime (clearTimeout isn't reliable -- =
at
            // least on Chrome, the timeouts still happen even when =
cleared,
            // if the clear happens after their scheduled firing time).
            var counter =3D 0;

            function extend(e) {
                var curCount =3D ++counter;
                var cur =3D posFromMouse(cm, e, true);
                if (!cur) return;
                if (!posEq(cur, last)) {
                    if (!cm.state.focused) onFocus(cm);
                    last =3D cur;
                    doSelect(cur);
                    var visible =3D visibleLines(display, doc);
                    if (cur.line >=3D visible.to || cur.line < =
visible.from)
                        setTimeout(operation(cm, function(){if (counter =
=3D=3D curCount) extend(e);}), 150);
                } else {
                    var outside =3D e.clientY < editorSize.top ? -20 : =
e.clientY > editorSize.bottom ? 20 : 0;
                    if (outside) setTimeout(operation(cm, function() {
                        if (counter !=3D curCount) return;
                        display.scroller.scrollTop +=3D outside;
                        extend(e);
                    }), 50);
                }
            }

            function done(e) {
                counter =3D Infinity;
                e_preventDefault(e);
                focusInput(cm);
                off(document, "mousemove", move);
                off(document, "mouseup", up);
            }

            var move =3D operation(cm, function(e) {
                if (!ie && !e_button(e)) done(e);
                else extend(e);
            });
            var up =3D operation(cm, done);
            on(document, "mousemove", move);
            on(document, "mouseup", up);
        }

        function clickInGutter(cm, e) {
            var display =3D cm.display;
            try { var mX =3D e.clientX, mY =3D e.clientY; }
            catch(e) { return false; }

            if (mX >=3D Math.floor(getRect(display.gutters).right)) =
return false;
            e_preventDefault(e);
            if (!hasHandler(cm, "gutterClick")) return true;

            var lineBox =3D getRect(display.lineDiv);
            if (mY > lineBox.bottom) return true;
            mY -=3D lineBox.top - display.viewOffset;

            for (var i =3D 0; i < cm.options.gutters.length; ++i) {
                var g =3D display.gutters.childNodes[i];
                if (g && getRect(g).right >=3D mX) {
                    var line =3D lineAtHeight(cm.doc, mY);
                    var gutter =3D cm.options.gutters[i];
                    signalLater(cm, "gutterClick", cm, line, gutter, e);
                    break;
                }
            }
            return true;
        }

        // Kludge to work around strange IE behavior where it'll =
sometimes
        // re-fire a series of drag-related events right after the drop =
(#1551)
        var lastDrop =3D 0;

        function onDrop(e) {
            var cm =3D this;
            if (signalDOMEvent(cm, e) || eventInWidget(cm.display, e) || =
(cm.options.onDragEvent && cm.options.onDragEvent(cm, addStop(e))))
                return;
            e_preventDefault(e);
            if (ie) lastDrop =3D +new Date;
            var pos =3D posFromMouse(cm, e, true), files =3D =
e.dataTransfer.files;
            if (!pos || isReadOnly(cm)) return;
            if (files && files.length && window.FileReader && =
window.File) {
                var n =3D files.length, text =3D Array(n), read =3D 0;
                var loadFile =3D function(file, i) {
                    var reader =3D new FileReader;
                    reader.onload =3D function() {
                        text[i] =3D reader.result;
                        if (++read =3D=3D n) {
                            pos =3D clipPos(cm.doc, pos);
                            makeChange(cm.doc, {from: pos, to: pos, =
text: splitLines(text.join("\n")), origin: "paste"}, "around");
                        }
                    };
                    reader.readAsText(file);
                };
                for (var i =3D 0; i < n; ++i) loadFile(files[i], i);
            } else {
                // Don't do a replace if the drop happened inside of the =
selected text.
                if (cm.state.draggingText && !(posLess(pos, =
cm.doc.sel.from) || posLess(cm.doc.sel.to, pos))) {
                    cm.state.draggingText(e);
                    // Ensure the editor is re-focused
                    setTimeout(bind(focusInput, cm), 20);
                    return;
                }
                try {
                    var text =3D e.dataTransfer.getData("Text");
                    if (text) {
                        var curFrom =3D cm.doc.sel.from, curTo =3D =
cm.doc.sel.to;
                        setSelection(cm.doc, pos, pos);
                        if (cm.state.draggingText) replaceRange(cm.doc, =
"", curFrom, curTo, "paste");
                        cm.replaceSelection(text, null, "paste");
                        focusInput(cm);
                        onFocus(cm);
                    }
                }
                catch(e){}
            }
        }

        function onDragStart(cm, e) {
            if (ie && (!cm.state.draggingText || +new Date - lastDrop < =
100)) { e_stop(e); return; }
            if (signalDOMEvent(cm, e) || eventInWidget(cm.display, e)) =
return;

            var txt =3D cm.getSelection();
            e.dataTransfer.setData("Text", txt);

            // Use dummy image instead of default browsers image.
            // Recent Safari (~6.0.2) have a tendency to segfault when =
this happens, so we don't do it there.
            if (e.dataTransfer.setDragImage && !safari) {
                var img =3D elt("img", null, null, "position: fixed; =
left: 0; top: 0;");
                if (opera) {
                    img.width =3D img.height =3D 1;
                    cm.display.wrapper.appendChild(img);
                    // Force a relayout, or Opera won't use our image =
for some obscure reason
                    img._top =3D img.offsetTop;
                }
                e.dataTransfer.setDragImage(img, 0, 0);
                if (opera) img.parentNode.removeChild(img);
            }
        }

        function setScrollTop(cm, val) {
            if (Math.abs(cm.doc.scrollTop - val) < 2) return;
            cm.doc.scrollTop =3D val;
            if (!gecko) updateDisplay(cm, [], val);
            if (cm.display.scroller.scrollTop !=3D val) =
cm.display.scroller.scrollTop =3D val;
            if (cm.display.scrollbarV.scrollTop !=3D val) =
cm.display.scrollbarV.scrollTop =3D val;
            if (gecko) updateDisplay(cm, []);
            startWorker(cm, 100);
        }
        function setScrollLeft(cm, val, isScroller) {
            if (isScroller ? val =3D=3D cm.doc.scrollLeft : =
Math.abs(cm.doc.scrollLeft - val) < 2) return;
            val =3D Math.min(val, cm.display.scroller.scrollWidth - =
cm.display.scroller.clientWidth);
            cm.doc.scrollLeft =3D val;
            alignHorizontally(cm);
            if (cm.display.scroller.scrollLeft !=3D val) =
cm.display.scroller.scrollLeft =3D val;
            if (cm.display.scrollbarH.scrollLeft !=3D val) =
cm.display.scrollbarH.scrollLeft =3D val;
        }

        // Since the delta values reported on mouse wheel events are
        // unstandardized between browsers and even browser versions, =
and
        // generally horribly unpredictable, this code starts by =
measuring
        // the scroll effect that the first few mouse wheel events have,
        // and, from that, detects the way it can convert deltas to =
pixel
        // offsets afterwards.
        //
        // The reason we want to know the amount a wheel event will =
scroll
        // is that it gives us a chance to update the display before the
        // actual scrolling happens, reducing flickering.

        var wheelSamples =3D 0, wheelPixelsPerUnit =3D null;
        // Fill in a browser-detected starting value on browsers where =
we
        // know one. These don't have to be accurate -- the result of =
them
        // being wrong would just be a slight flicker on the first wheel
        // scroll (if it is large enough).
        if (ie) wheelPixelsPerUnit =3D -.53;
        else if (gecko) wheelPixelsPerUnit =3D 15;
        else if (chrome) wheelPixelsPerUnit =3D -.7;
        else if (safari) wheelPixelsPerUnit =3D -1/3;

        function onScrollWheel(cm, e) {
            var dx =3D e.wheelDeltaX, dy =3D e.wheelDeltaY;
            if (dx =3D=3D null && e.detail && e.axis =3D=3D =
e.HORIZONTAL_AXIS) dx =3D e.detail;
            if (dy =3D=3D null && e.detail && e.axis =3D=3D =
e.VERTICAL_AXIS) dy =3D e.detail;
            else if (dy =3D=3D null) dy =3D e.wheelDelta;

            var display =3D cm.display, scroll =3D display.scroller;
            // Quit if there's nothing to scroll here
            if (!(dx && scroll.scrollWidth > scroll.clientWidth ||
                dy && scroll.scrollHeight > scroll.clientHeight)) =
return;

            // Webkit browsers on OS X abort momentum scrolls when the =
target
            // of the scroll event is removed from the scrollable =
element.
            // This hack (see related code in patchDisplay) makes sure =
the
            // element is kept around.
            if (dy && mac && webkit) {
                for (var cur =3D e.target; cur !=3D scroll; cur =3D =
cur.parentNode) {
                    if (cur.lineObj) {
                        cm.display.currentWheelTarget =3D cur;
                        break;
                    }
                }
            }

            // On some browsers, horizontal scrolling will cause redraws =
to
            // happen before the gutter has been realigned, causing it =
to
            // wriggle around in a most unseemly way. When we have an
            // estimated pixels/delta value, we just handle horizontal
            // scrolling entirely here. It'll be slightly off from =
native, but
            // better than glitching out.
            if (dx && !gecko && !opera && wheelPixelsPerUnit !=3D null) =
{
                if (dy)
                    setScrollTop(cm, Math.max(0, =
Math.min(scroll.scrollTop + dy * wheelPixelsPerUnit, scroll.scrollHeight =
- scroll.clientHeight)));
                setScrollLeft(cm, Math.max(0, Math.min(scroll.scrollLeft =
+ dx * wheelPixelsPerUnit, scroll.scrollWidth - scroll.clientWidth)));
                e_preventDefault(e);
                display.wheelStartX =3D null; // Abort measurement, if =
in progress
                return;
            }

            if (dy && wheelPixelsPerUnit !=3D null) {
                var pixels =3D dy * wheelPixelsPerUnit;
                var top =3D cm.doc.scrollTop, bot =3D top + =
display.wrapper.clientHeight;
                if (pixels < 0) top =3D Math.max(0, top + pixels - 50);
                else bot =3D Math.min(cm.doc.height, bot + pixels + 50);
                updateDisplay(cm, [], {top: top, bottom: bot});
            }

            if (wheelSamples < 20) {
                if (display.wheelStartX =3D=3D null) {
                    display.wheelStartX =3D scroll.scrollLeft; =
display.wheelStartY =3D scroll.scrollTop;
                    display.wheelDX =3D dx; display.wheelDY =3D dy;
                    setTimeout(function() {
                        if (display.wheelStartX =3D=3D null) return;
                        var movedX =3D scroll.scrollLeft - =
display.wheelStartX;
                        var movedY =3D scroll.scrollTop - =
display.wheelStartY;
                        var sample =3D (movedY && display.wheelDY && =
movedY / display.wheelDY) ||
                            (movedX && display.wheelDX && movedX / =
display.wheelDX);
                        display.wheelStartX =3D display.wheelStartY =3D =
null;
                        if (!sample) return;
                        wheelPixelsPerUnit =3D (wheelPixelsPerUnit * =
wheelSamples + sample) / (wheelSamples + 1);
                        ++wheelSamples;
                    }, 200);
                } else {
                    display.wheelDX +=3D dx; display.wheelDY +=3D dy;
                }
            }
        }

        function doHandleBinding(cm, bound, dropShift) {
            if (typeof bound =3D=3D "string") {
                bound =3D commands[bound];
                if (!bound) return false;
            }
            // Ensure previous input has been read, so that the handler =
sees a
            // consistent view of the document
            if (cm.display.pollingFast && readInput(cm)) =
cm.display.pollingFast =3D false;
            var doc =3D cm.doc, prevShift =3D doc.sel.shift, done =3D =
false;
            try {
                if (isReadOnly(cm)) cm.state.suppressEdits =3D true;
                if (dropShift) doc.sel.shift =3D false;
                done =3D bound(cm) !=3D Pass;
            } finally {
                doc.sel.shift =3D prevShift;
                cm.state.suppressEdits =3D false;
            }
            return done;
        }

        function allKeyMaps(cm) {
            var maps =3D cm.state.keyMaps.slice(0);
            if (cm.options.extraKeys) maps.push(cm.options.extraKeys);
            maps.push(cm.options.keyMap);
            return maps;
        }

        var maybeTransition;
        function handleKeyBinding(cm, e) {
            // Handle auto keymap transitions
            var startMap =3D getKeyMap(cm.options.keyMap), next =3D =
startMap.auto;
            clearTimeout(maybeTransition);
            if (next && !isModifierKey(e)) maybeTransition =3D =
setTimeout(function() {
                if (getKeyMap(cm.options.keyMap) =3D=3D startMap) {
                    cm.options.keyMap =3D (next.call ? next.call(null, =
cm) : next);
                    keyMapChanged(cm);
                }
            }, 50);

            var name =3D keyName(e, true), handled =3D false;
            if (!name) return false;
            var keymaps =3D allKeyMaps(cm);

            if (e.shiftKey) {
                // First try to resolve full name (including 'Shift-'). =
Failing
                // that, see if there is a cursor-motion command =
(starting with
                // 'go') bound to the keyname without 'Shift-'.
                handled =3D lookupKey("Shift-" + name, keymaps, =
function(b) {return doHandleBinding(cm, b, true);})
                    || lookupKey(name, keymaps, function(b) {
                        if (typeof b =3D=3D "string" ? =
/^go[A-Z]/.test(b) : b.motion)
                            return doHandleBinding(cm, b);
                    });
            } else {
                handled =3D lookupKey(name, keymaps, function(b) { =
return doHandleBinding(cm, b); });
            }

            if (handled) {
                e_preventDefault(e);
                restartBlink(cm);
                if (ie_lt9) { e.oldKeyCode =3D e.keyCode; e.keyCode =3D =
0; }
                signalLater(cm, "keyHandled", cm, name, e);
            }
            return handled;
        }

        function handleCharBinding(cm, e, ch) {
            var handled =3D lookupKey("'" + ch + "'", allKeyMaps(cm),
                function(b) { return doHandleBinding(cm, b, true); });
            if (handled) {
                e_preventDefault(e);
                restartBlink(cm);
                signalLater(cm, "keyHandled", cm, "'" + ch + "'", e);
            }
            return handled;
        }

        var lastStoppedKey =3D null;
        function onKeyDown(e) {
            var cm =3D this;
            if (!cm.state.focused) onFocus(cm);
            if (ie && e.keyCode =3D=3D 27) { e.returnValue =3D false; }
            if (signalDOMEvent(cm, e) || cm.options.onKeyEvent && =
cm.options.onKeyEvent(cm, addStop(e))) return;
            var code =3D e.keyCode;
            // IE does strange things with escape.
            cm.doc.sel.shift =3D code =3D=3D 16 || e.shiftKey;
            // First give onKeyEvent option a chance to handle this.
            var handled =3D handleKeyBinding(cm, e);
            if (opera) {
                lastStoppedKey =3D handled ? code : null;
                // Opera has no cut event... we try to at least catch =
the key combo
                if (!handled && code =3D=3D 88 && !hasCopyEvent && (mac =
? e.metaKey : e.ctrlKey))
                    cm.replaceSelection("");
            }
        }

        function onKeyPress(e) {
            var cm =3D this;
            if (signalDOMEvent(cm, e) || cm.options.onKeyEvent && =
cm.options.onKeyEvent(cm, addStop(e))) return;
            var keyCode =3D e.keyCode, charCode =3D e.charCode;
            if (opera && keyCode =3D=3D lastStoppedKey) {lastStoppedKey =
=3D null; e_preventDefault(e); return;}
            if (((opera && (!e.which || e.which < 10)) || khtml) && =
handleKeyBinding(cm, e)) return;
            var ch =3D String.fromCharCode(charCode =3D=3D null ? =
keyCode : charCode);
            if (this.options.electricChars && =
this.doc.mode.electricChars &&
                this.options.smartIndent && !isReadOnly(this) &&
                this.doc.mode.electricChars.indexOf(ch) > -1)
                setTimeout(operation(cm, function() {indentLine(cm, =
cm.doc.sel.to.line, "smart");}), 75);
            if (handleCharBinding(cm, e, ch)) return;
            if (ie && !ie_lt9) cm.display.inputHasSelection =3D null;
            fastPoll(cm);
        }

        function onFocus(cm) {
            if (cm.options.readOnly =3D=3D "nocursor") return;
            if (!cm.state.focused) {
                signal(cm, "focus", cm);
                cm.state.focused =3D true;
                if =
(cm.display.wrapper.className.search(/\bCodeMirror-focused\b/) =3D=3D =
-1)
                    cm.display.wrapper.className +=3D " =
CodeMirror-focused";
                resetInput(cm, true);
            }
            slowPoll(cm);
            restartBlink(cm);
        }
        function onBlur(cm) {
            if (cm.state.focused) {
                signal(cm, "blur", cm);
                cm.state.focused =3D false;
                cm.display.wrapper.className =3D =
cm.display.wrapper.className.replace(" CodeMirror-focused", "");
            }
            clearInterval(cm.display.blinker);
            setTimeout(function() {if (!cm.state.focused) =
cm.doc.sel.shift =3D false;}, 150);
        }

        var detectingSelectAll;
        function onContextMenu(cm, e) {
            if (signalDOMEvent(cm, e, "contextmenu")) return;
            var display =3D cm.display, sel =3D cm.doc.sel;
            if (eventInWidget(display, e)) return;

            var pos =3D posFromMouse(cm, e), scrollPos =3D =
display.scroller.scrollTop;
            if (!pos || opera) return; // Opera is difficult.
            if (posEq(sel.from, sel.to) || posLess(pos, sel.from) || =
!posLess(pos, sel.to))
                operation(cm, setSelection)(cm.doc, pos, pos);

            var oldCSS =3D display.input.style.cssText;
            display.inputDiv.style.position =3D "absolute";
            display.input.style.cssText =3D "position: fixed; width: =
30px; height: 30px; top: " + (e.clientY - 5) +
                "px; left: " + (e.clientX - 5) + "px; z-index: 1000; =
background: white; outline: none;" +
                "border-width: 0; outline: none; overflow: hidden; =
opacity: .05; -ms-opacity: .05; filter: alpha(opacity=3D5);";
            focusInput(cm);
            resetInput(cm, true);
            // Adds "Select all" to context menu in FF
            if (posEq(sel.from, sel.to)) display.input.value =3D =
display.prevInput =3D " ";

            function prepareSelectAllHack() {
                if (display.input.selectionStart !=3D null) {
                    var extval =3D display.input.value =3D " " + =
(posEq(sel.from, sel.to) ? "" : display.input.value);
                    display.prevInput =3D " ";
                    display.input.selectionStart =3D 1; =
display.input.selectionEnd =3D extval.length;
                }
            }
            function rehide() {
                display.inputDiv.style.position =3D "relative";
                display.input.style.cssText =3D oldCSS;
                if (ie_lt9) display.scrollbarV.scrollTop =3D =
display.scroller.scrollTop =3D scrollPos;
                slowPoll(cm);

                // Try to detect the user choosing select-all
                if (display.input.selectionStart !=3D null) {
                    if (!ie || ie_lt9) prepareSelectAllHack();
                    clearTimeout(detectingSelectAll);
                    var i =3D 0, poll =3D function(){
                        if (display.prevInput =3D=3D " " && =
display.input.selectionStart =3D=3D 0)
                            operation(cm, commands.selectAll)(cm);
                        else if (i++ < 10) detectingSelectAll =3D =
setTimeout(poll, 500);
                        else resetInput(cm);
                    };
                    detectingSelectAll =3D setTimeout(poll, 200);
                }
            }

            if (ie && !ie_lt9) prepareSelectAllHack();
            if (captureMiddleClick) {
                e_stop(e);
                var mouseup =3D function() {
                    off(window, "mouseup", mouseup);
                    setTimeout(rehide, 20);
                };
                on(window, "mouseup", mouseup);
            } else {
                setTimeout(rehide, 50);
            }
        }

        // UPDATING

        var changeEnd =3D CodeMirror.changeEnd =3D function(change) {
            if (!change.text) return change.to;
            return Pos(change.from.line + change.text.length - 1,
                    lst(change.text).length + (change.text.length =3D=3D =
1 ? change.from.ch : 0));
        };

        // Make sure a position will be valid after the given change.
        function clipPostChange(doc, change, pos) {
            if (!posLess(change.from, pos)) return clipPos(doc, pos);
            var diff =3D (change.text.length - 1) - (change.to.line - =
change.from.line);
            if (pos.line > change.to.line + diff) {
                var preLine =3D pos.line - diff, lastLine =3D doc.first =
+ doc.size - 1;
                if (preLine > lastLine) return Pos(lastLine, =
getLine(doc, lastLine).text.length);
                return clipToLen(pos, getLine(doc, =
preLine).text.length);
            }
            if (pos.line =3D=3D change.to.line + diff)
                return clipToLen(pos, lst(change.text).length + =
(change.text.length =3D=3D 1 ? change.from.ch : 0) +
                    getLine(doc, change.to.line).text.length - =
change.to.ch);
            var inside =3D pos.line - change.from.line;
            return clipToLen(pos, change.text[inside].length + (inside ? =
0 : change.from.ch));
        }

        // Hint can be null|"end"|"start"|"around"|{anchor,head}
        function computeSelAfterChange(doc, change, hint) {
            if (hint && typeof hint =3D=3D "object") // Assumed to be =
{anchor, head} object
                return {anchor: clipPostChange(doc, change, =
hint.anchor),
                    head: clipPostChange(doc, change, hint.head)};

            if (hint =3D=3D "start") return {anchor: change.from, head: =
change.from};

            var end =3D changeEnd(change);
            if (hint =3D=3D "around") return {anchor: change.from, head: =
end};
            if (hint =3D=3D "end") return {anchor: end, head: end};

            // hint is null, leave the selection alone as much as =
possible
            var adjustPos =3D function(pos) {
                if (posLess(pos, change.from)) return pos;
                if (!posLess(change.to, pos)) return end;

                var line =3D pos.line + change.text.length - =
(change.to.line - change.from.line) - 1, ch =3D pos.ch;
                if (pos.line =3D=3D change.to.line) ch +=3D end.ch - =
change.to.ch;
                return Pos(line, ch);
            };
            return {anchor: adjustPos(doc.sel.anchor), head: =
adjustPos(doc.sel.head)};
        }

        function filterChange(doc, change, update) {
            var obj =3D {
                canceled: false,
                from: change.from,
                to: change.to,
                text: change.text,
                origin: change.origin,
                cancel: function() { this.canceled =3D true; }
            };
            if (update) obj.update =3D function(from, to, text, origin) =
{
                if (from) this.from =3D clipPos(doc, from);
                if (to) this.to =3D clipPos(doc, to);
                if (text) this.text =3D text;
                if (origin !=3D=3D undefined) this.origin =3D origin;
            };
            signal(doc, "beforeChange", doc, obj);
            if (doc.cm) signal(doc.cm, "beforeChange", doc.cm, obj);

            if (obj.canceled) return null;
            return {from: obj.from, to: obj.to, text: obj.text, origin: =
obj.origin};
        }

        // Replace the range from from to to by the strings in =
replacement.
        // change is a {from, to, text [, origin]} object
        function makeChange(doc, change, selUpdate, ignoreReadOnly) {
            if (doc.cm) {
                if (!doc.cm.curOp) return operation(doc.cm, =
makeChange)(doc, change, selUpdate, ignoreReadOnly);
                if (doc.cm.state.suppressEdits) return;
            }

            if (hasHandler(doc, "beforeChange") || doc.cm && =
hasHandler(doc.cm, "beforeChange")) {
                change =3D filterChange(doc, change, true);
                if (!change) return;
            }

            // Possibly split or suppress the update based on the =
presence
            // of read-only spans in its range.
            var split =3D sawReadOnlySpans && !ignoreReadOnly && =
removeReadOnlyRanges(doc, change.from, change.to);
            if (split) {
                for (var i =3D split.length - 1; i >=3D 1; --i)
                    makeChangeNoReadonly(doc, {from: split[i].from, to: =
split[i].to, text: [""]});
                if (split.length)
                    makeChangeNoReadonly(doc, {from: split[0].from, to: =
split[0].to, text: change.text}, selUpdate);
            } else {
                makeChangeNoReadonly(doc, change, selUpdate);
            }
        }

        function makeChangeNoReadonly(doc, change, selUpdate) {
            var selAfter =3D computeSelAfterChange(doc, change, =
selUpdate);
            addToHistory(doc, change, selAfter, doc.cm ? doc.cm.curOp.id =
: NaN);

            makeChangeSingleDoc(doc, change, selAfter, =
stretchSpansOverChange(doc, change));
            var rebased =3D [];

            linkedDocs(doc, function(doc, sharedHist) {
                if (!sharedHist && indexOf(rebased, doc.history) =3D=3D =
-1) {
                    rebaseHist(doc.history, change);
                    rebased.push(doc.history);
                }
                makeChangeSingleDoc(doc, change, null, =
stretchSpansOverChange(doc, change));
            });
        }

        function makeChangeFromHistory(doc, type) {
            if (doc.cm && doc.cm.state.suppressEdits) return;

            var hist =3D doc.history;
            var event =3D (type =3D=3D "undo" ? hist.done : =
hist.undone).pop();
            if (!event) return;

            var anti =3D {changes: [], anchorBefore: event.anchorAfter, =
headBefore: event.headAfter,
                anchorAfter: event.anchorBefore, headAfter: =
event.headBefore,
                generation: hist.generation};
            (type =3D=3D "undo" ? hist.undone : hist.done).push(anti);
            hist.generation =3D event.generation || =
++hist.maxGeneration;

            var filter =3D hasHandler(doc, "beforeChange") || doc.cm && =
hasHandler(doc.cm, "beforeChange");

            for (var i =3D event.changes.length - 1; i >=3D 0; --i) {
                var change =3D event.changes[i];
                change.origin =3D type;
                if (filter && !filterChange(doc, change, false)) {
                    (type =3D=3D "undo" ? hist.done : =
hist.undone).length =3D 0;
                    return;
                }

                anti.changes.push(historyChangeFromChange(doc, change));

                var after =3D i ? computeSelAfterChange(doc, change, =
null)
                    : {anchor: event.anchorBefore, head: =
event.headBefore};
                makeChangeSingleDoc(doc, change, after, =
mergeOldSpans(doc, change));
                var rebased =3D [];

                linkedDocs(doc, function(doc, sharedHist) {
                    if (!sharedHist && indexOf(rebased, doc.history) =
=3D=3D -1) {
                        rebaseHist(doc.history, change);
                        rebased.push(doc.history);
                    }
                    makeChangeSingleDoc(doc, change, null, =
mergeOldSpans(doc, change));
                });
            }
        }

        function shiftDoc(doc, distance) {
            function shiftPos(pos) {return Pos(pos.line + distance, =
pos.ch);}
            doc.first +=3D distance;
            if (doc.cm) regChange(doc.cm, doc.first, doc.first, =
distance);
            doc.sel.head =3D shiftPos(doc.sel.head); doc.sel.anchor =3D =
shiftPos(doc.sel.anchor);
            doc.sel.from =3D shiftPos(doc.sel.from); doc.sel.to =3D =
shiftPos(doc.sel.to);
        }

        function makeChangeSingleDoc(doc, change, selAfter, spans) {
            if (doc.cm && !doc.cm.curOp)
                return operation(doc.cm, makeChangeSingleDoc)(doc, =
change, selAfter, spans);

            if (change.to.line < doc.first) {
                shiftDoc(doc, change.text.length - 1 - (change.to.line - =
change.from.line));
                return;
            }
            if (change.from.line > doc.lastLine()) return;

            // Clip the change to the size of this doc
            if (change.from.line < doc.first) {
                var shift =3D change.text.length - 1 - (doc.first - =
change.from.line);
                shiftDoc(doc, shift);
                change =3D {from: Pos(doc.first, 0), to: =
Pos(change.to.line + shift, change.to.ch),
                    text: [lst(change.text)], origin: change.origin};
            }
            var last =3D doc.lastLine();
            if (change.to.line > last) {
                change =3D {from: change.from, to: Pos(last, =
getLine(doc, last).text.length),
                    text: [change.text[0]], origin: change.origin};
            }

            change.removed =3D getBetween(doc, change.from, change.to);

            if (!selAfter) selAfter =3D computeSelAfterChange(doc, =
change, null);
            if (doc.cm) makeChangeSingleDocInEditor(doc.cm, change, =
spans, selAfter);
            else updateDoc(doc, change, spans, selAfter);
        }

        function makeChangeSingleDocInEditor(cm, change, spans, =
selAfter) {
            var doc =3D cm.doc, display =3D cm.display, from =3D =
change.from, to =3D change.to;

            var recomputeMaxLength =3D false, checkWidthStart =3D =
from.line;
            if (!cm.options.lineWrapping) {
                checkWidthStart =3D lineNo(visualLine(doc, getLine(doc, =
from.line)));
                doc.iter(checkWidthStart, to.line + 1, function(line) {
                    if (line =3D=3D display.maxLine) {
                        recomputeMaxLength =3D true;
                        return true;
                    }
                });
            }

            if (!posLess(doc.sel.head, change.from) && =
!posLess(change.to, doc.sel.head))
                cm.curOp.cursorActivity =3D true;

            updateDoc(doc, change, spans, selAfter, estimateHeight(cm));

            if (!cm.options.lineWrapping) {
                doc.iter(checkWidthStart, from.line + =
change.text.length, function(line) {
                    var len =3D lineLength(doc, line);
                    if (len > display.maxLineLength) {
                        display.maxLine =3D line;
                        display.maxLineLength =3D len;
                        display.maxLineChanged =3D true;
                        recomputeMaxLength =3D false;
                    }
                });
                if (recomputeMaxLength) cm.curOp.updateMaxLine =3D true;
            }

            // Adjust frontier, schedule worker
            doc.frontier =3D Math.min(doc.frontier, from.line);
            startWorker(cm, 400);

            var lendiff =3D change.text.length - (to.line - from.line) - =
1;
            // Remember that these lines changed, for updating the =
display
            regChange(cm, from.line, to.line + 1, lendiff);

            if (hasHandler(cm, "change")) {
                var changeObj =3D {from: from, to: to,
                    text: change.text,
                    removed: change.removed,
                    origin: change.origin};
                if (cm.curOp.textChanged) {
                    for (var cur =3D cm.curOp.textChanged; cur.next; cur =
=3D cur.next) {}
                    cur.next =3D changeObj;
                } else cm.curOp.textChanged =3D changeObj;
            }
        }

        function replaceRange(doc, code, from, to, origin) {
            if (!to) to =3D from;
            if (posLess(to, from)) { var tmp =3D to; to =3D from; from =
=3D tmp; }
            if (typeof code =3D=3D "string") code =3D splitLines(code);
            makeChange(doc, {from: from, to: to, text: code, origin: =
origin}, null);
        }

        // POSITION OBJECT

        function Pos(line, ch) {
            if (!(this instanceof Pos)) return new Pos(line, ch);
            this.line =3D line; this.ch =3D ch;
        }
        CodeMirror.Pos =3D Pos;

        function posEq(a, b) {return a.line =3D=3D b.line && a.ch =3D=3D =
b.ch;}
        function posLess(a, b) {return a.line < b.line || (a.line =3D=3D =
b.line && a.ch < b.ch);}
        function copyPos(x) {return Pos(x.line, x.ch);}

        // SELECTION

        function clipLine(doc, n) {return Math.max(doc.first, =
Math.min(n, doc.first + doc.size - 1));}
        function clipPos(doc, pos) {
            if (pos.line < doc.first) return Pos(doc.first, 0);
            var last =3D doc.first + doc.size - 1;
            if (pos.line > last) return Pos(last, getLine(doc, =
last).text.length);
            return clipToLen(pos, getLine(doc, pos.line).text.length);
        }
        function clipToLen(pos, linelen) {
            var ch =3D pos.ch;
            if (ch =3D=3D null || ch > linelen) return Pos(pos.line, =
linelen);
            else if (ch < 0) return Pos(pos.line, 0);
            else return pos;
        }
        function isLine(doc, l) {return l >=3D doc.first && l < =
doc.first + doc.size;}

        // If shift is held, this will move the selection anchor. =
Otherwise,
        // it'll set the whole selection.
        function extendSelection(doc, pos, other, bias) {
            if (doc.sel.shift || doc.sel.extend) {
                var anchor =3D doc.sel.anchor;
                if (other) {
                    var posBefore =3D posLess(pos, anchor);
                    if (posBefore !=3D posLess(other, anchor)) {
                        anchor =3D pos;
                        pos =3D other;
                    } else if (posBefore !=3D posLess(pos, other)) {
                        pos =3D other;
                    }
                }
                setSelection(doc, anchor, pos, bias);
            } else {
                setSelection(doc, pos, other || pos, bias);
            }
            if (doc.cm) doc.cm.curOp.userSelChange =3D true;
        }

        function filterSelectionChange(doc, anchor, head) {
            var obj =3D {anchor: anchor, head: head};
            signal(doc, "beforeSelectionChange", doc, obj);
            if (doc.cm) signal(doc.cm, "beforeSelectionChange", doc.cm, =
obj);
            obj.anchor =3D clipPos(doc, obj.anchor); obj.head =3D =
clipPos(doc, obj.head);
            return obj;
        }

        // Update the selection. Last two args are only used by
        // updateDoc, since they have to be expressed in the line
        // numbers before the update.
        function setSelection(doc, anchor, head, bias, checkAtomic) {
            if (!checkAtomic && hasHandler(doc, "beforeSelectionChange") =
|| doc.cm && hasHandler(doc.cm, "beforeSelectionChange")) {
                var filtered =3D filterSelectionChange(doc, anchor, =
head);
                head =3D filtered.head;
                anchor =3D filtered.anchor;
            }

            var sel =3D doc.sel;
            sel.goalColumn =3D null;
            // Skip over atomic spans.
            if (checkAtomic || !posEq(anchor, sel.anchor))
                anchor =3D skipAtomic(doc, anchor, bias, checkAtomic =
!=3D "push");
            if (checkAtomic || !posEq(head, sel.head))
                head =3D skipAtomic(doc, head, bias, checkAtomic !=3D =
"push");

            if (posEq(sel.anchor, anchor) && posEq(sel.head, head)) =
return;

            sel.anchor =3D anchor; sel.head =3D head;
            var inv =3D posLess(head, anchor);
            sel.from =3D inv ? head : anchor;
            sel.to =3D inv ? anchor : head;

            if (doc.cm)
                doc.cm.curOp.updateInput =3D =
doc.cm.curOp.selectionChanged =3D
                    doc.cm.curOp.cursorActivity =3D true;

            signalLater(doc, "cursorActivity", doc);
        }

        function reCheckSelection(cm) {
            setSelection(cm.doc, cm.doc.sel.from, cm.doc.sel.to, null, =
"push");
        }

        function skipAtomic(doc, pos, bias, mayClear) {
            var flipped =3D false, curPos =3D pos;
            var dir =3D bias || 1;
            doc.cantEdit =3D false;
            search: for (;;) {
                var line =3D getLine(doc, curPos.line);
                if (line.markedSpans) {
                    for (var i =3D 0; i < line.markedSpans.length; ++i) =
{
                        var sp =3D line.markedSpans[i], m =3D sp.marker;
                        if ((sp.from =3D=3D null || (m.inclusiveLeft ? =
sp.from <=3D curPos.ch : sp.from < curPos.ch)) &&
                            (sp.to =3D=3D null || (m.inclusiveRight ? =
sp.to >=3D curPos.ch : sp.to > curPos.ch))) {
                            if (mayClear) {
                                signal(m, "beforeCursorEnter");
                                if (m.explicitlyCleared) {
                                    if (!line.markedSpans) break;
                                    else {--i; continue;}
                                }
                            }
                            if (!m.atomic) continue;
                            var newPos =3D m.find()[dir < 0 ? "from" : =
"to"];
                            if (posEq(newPos, curPos)) {
                                newPos.ch +=3D dir;
                                if (newPos.ch < 0) {
                                    if (newPos.line > doc.first) newPos =
=3D clipPos(doc, Pos(newPos.line - 1));
                                    else newPos =3D null;
                                } else if (newPos.ch > line.text.length) =
{
                                    if (newPos.line < doc.first + =
doc.size - 1) newPos =3D Pos(newPos.line + 1, 0);
                                    else newPos =3D null;
                                }
                                if (!newPos) {
                                    if (flipped) {
                                        // Driven in a corner -- no =
valid cursor position found at all
                                        // -- try again *with* clearing, =
if we didn't already
                                        if (!mayClear) return =
skipAtomic(doc, pos, bias, true);
                                        // Otherwise, turn off editing =
until further notice, and return the start of the doc
                                        doc.cantEdit =3D true;
                                        return Pos(doc.first, 0);
                                    }
                                    flipped =3D true; newPos =3D pos; =
dir =3D -dir;
                                }
                            }
                            curPos =3D newPos;
                            continue search;
                        }
                    }
                }
                return curPos;
            }
        }

        // SCROLLING

        function scrollCursorIntoView(cm) {
            var coords =3D scrollPosIntoView(cm, cm.doc.sel.head, =
cm.options.cursorScrollMargin);
            if (!cm.state.focused) return;
            var display =3D cm.display, box =3D getRect(display.sizer), =
doScroll =3D null;
            if (coords.top + box.top < 0) doScroll =3D true;
            else if (coords.bottom + box.top > (window.innerHeight || =
document.documentElement.clientHeight)) doScroll =3D false;
            if (doScroll !=3D null && !phantom) {
                var hidden =3D display.cursor.style.display =3D=3D =
"none";
                if (hidden) {
                    display.cursor.style.display =3D "";
                    display.cursor.style.left =3D coords.left + "px";
                    display.cursor.style.top =3D (coords.top - =
display.viewOffset) + "px";
                }
                display.cursor.scrollIntoView(doScroll);
                if (hidden) display.cursor.style.display =3D "none";
            }
        }

        function scrollPosIntoView(cm, pos, margin) {
            if (margin =3D=3D null) margin =3D 0;
            for (;;) {
                var changed =3D false, coords =3D cursorCoords(cm, pos);
                var scrollPos =3D calculateScrollPos(cm, coords.left, =
coords.top - margin, coords.left, coords.bottom + margin);
                var startTop =3D cm.doc.scrollTop, startLeft =3D =
cm.doc.scrollLeft;
                if (scrollPos.scrollTop !=3D null) {
                    setScrollTop(cm, scrollPos.scrollTop);
                    if (Math.abs(cm.doc.scrollTop - startTop) > 1) =
changed =3D true;
                }
                if (scrollPos.scrollLeft !=3D null) {
                    setScrollLeft(cm, scrollPos.scrollLeft);
                    if (Math.abs(cm.doc.scrollLeft - startLeft) > 1) =
changed =3D true;
                }
                if (!changed) return coords;
            }
        }

        function scrollIntoView(cm, x1, y1, x2, y2) {
            var scrollPos =3D calculateScrollPos(cm, x1, y1, x2, y2);
            if (scrollPos.scrollTop !=3D null) setScrollTop(cm, =
scrollPos.scrollTop);
            if (scrollPos.scrollLeft !=3D null) setScrollLeft(cm, =
scrollPos.scrollLeft);
        }

        function calculateScrollPos(cm, x1, y1, x2, y2) {
            var display =3D cm.display, snapMargin =3D =
textHeight(cm.display);
            if (y1 < 0) y1 =3D 0;
            var screen =3D display.scroller.clientHeight - =
scrollerCutOff, screentop =3D display.scroller.scrollTop, result =3D {};
            var docBottom =3D cm.doc.height + paddingVert(display);
            var atTop =3D y1 < snapMargin, atBottom =3D y2 > docBottom - =
snapMargin;
            if (y1 < screentop) {
                result.scrollTop =3D atTop ? 0 : y1;
            } else if (y2 > screentop + screen) {
                var newTop =3D Math.min(y1, (atBottom ? docBottom : y2) =
- screen);
                if (newTop !=3D screentop) result.scrollTop =3D newTop;
            }

            var screenw =3D display.scroller.clientWidth - =
scrollerCutOff, screenleft =3D display.scroller.scrollLeft;
            x1 +=3D display.gutters.offsetWidth; x2 +=3D =
display.gutters.offsetWidth;
            var gutterw =3D display.gutters.offsetWidth;
            var atLeft =3D x1 < gutterw + 10;
            if (x1 < screenleft + gutterw || atLeft) {
                if (atLeft) x1 =3D 0;
                result.scrollLeft =3D Math.max(0, x1 - 10 - gutterw);
            } else if (x2 > screenw + screenleft - 3) {
                result.scrollLeft =3D x2 + 10 - screenw;
            }
            return result;
        }

        function updateScrollPos(cm, left, top) {
            cm.curOp.updateScrollPos =3D {scrollLeft: left =3D=3D null ? =
cm.doc.scrollLeft : left,
                scrollTop: top =3D=3D null ? cm.doc.scrollTop : top};
        }

        function addToScrollPos(cm, left, top) {
            var pos =3D cm.curOp.updateScrollPos || =
(cm.curOp.updateScrollPos =3D {scrollLeft: cm.doc.scrollLeft, scrollTop: =
cm.doc.scrollTop});
            var scroll =3D cm.display.scroller;
            pos.scrollTop =3D Math.max(0, Math.min(scroll.scrollHeight - =
scroll.clientHeight, pos.scrollTop + top));
            pos.scrollLeft =3D Math.max(0, Math.min(scroll.scrollWidth - =
scroll.clientWidth, pos.scrollLeft + left));
        }

        // API UTILITIES

        function indentLine(cm, n, how, aggressive) {
            var doc =3D cm.doc;
            if (how =3D=3D null) how =3D "add";
            if (how =3D=3D "smart") {
                if (!cm.doc.mode.indent) how =3D "prev";
                else var state =3D getStateBefore(cm, n);
            }

            var tabSize =3D cm.options.tabSize;
            var line =3D getLine(doc, n), curSpace =3D =
countColumn(line.text, null, tabSize);
            var curSpaceString =3D line.text.match(/^\s*/)[0], =
indentation;
            if (how =3D=3D "smart") {
                indentation =3D cm.doc.mode.indent(state, =
line.text.slice(curSpaceString.length), line.text);
                if (indentation =3D=3D Pass) {
                    if (!aggressive) return;
                    how =3D "prev";
                }
            }
            if (how =3D=3D "prev") {
                if (n > doc.first) indentation =3D =
countColumn(getLine(doc, n-1).text, null, tabSize);
                else indentation =3D 0;
            } else if (how =3D=3D "add") {
                indentation =3D curSpace + cm.options.indentUnit;
            } else if (how =3D=3D "subtract") {
                indentation =3D curSpace - cm.options.indentUnit;
            } else if (typeof how =3D=3D "number") {
                indentation =3D curSpace + how;
            }
            indentation =3D Math.max(0, indentation);

            var indentString =3D "", pos =3D 0;
            if (cm.options.indentWithTabs)
                for (var i =3D Math.floor(indentation / tabSize); i; =
--i) {pos +=3D tabSize; indentString +=3D "\t";}
            if (pos < indentation) indentString +=3D =
spaceStr(indentation - pos);

            if (indentString !=3D curSpaceString)
                replaceRange(cm.doc, indentString, Pos(n, 0), Pos(n, =
curSpaceString.length), "+input");
            line.stateAfter =3D null;
        }

        function changeLine(cm, handle, op) {
            var no =3D handle, line =3D handle, doc =3D cm.doc;
            if (typeof handle =3D=3D "number") line =3D getLine(doc, =
clipLine(doc, handle));
            else no =3D lineNo(handle);
            if (no =3D=3D null) return null;
            if (op(line, no)) regChange(cm, no, no + 1);
            else return null;
            return line;
        }

        function findPosH(doc, pos, dir, unit, visually) {
            var line =3D pos.line, ch =3D pos.ch, origDir =3D dir;
            var lineObj =3D getLine(doc, line);
            var possible =3D true;
            function findNextLine() {
                var l =3D line + dir;
                if (l < doc.first || l >=3D doc.first + doc.size) return =
(possible =3D false);
                line =3D l;
                return lineObj =3D getLine(doc, l);
            }
            function moveOnce(boundToLine) {
                var next =3D (visually ? moveVisually : =
moveLogically)(lineObj, ch, dir, true);
                if (next =3D=3D null) {
                    if (!boundToLine && findNextLine()) {
                        if (visually) ch =3D (dir < 0 ? lineRight : =
lineLeft)(lineObj);
                        else ch =3D dir < 0 ? lineObj.text.length : 0;
                    } else return (possible =3D false);
                } else ch =3D next;
                return true;
            }

            if (unit =3D=3D "char") moveOnce();
            else if (unit =3D=3D "column") moveOnce(true);
            else if (unit =3D=3D "word" || unit =3D=3D "group") {
                var sawType =3D null, group =3D unit =3D=3D "group";
                for (var first =3D true;; first =3D false) {
                    if (dir < 0 && !moveOnce(!first)) break;
                    var cur =3D lineObj.text.charAt(ch) || "\n";
                    var type =3D isWordChar(cur) ? "w"
                        : !group ? null
                        : /\s/.test(cur) ? null
                        : "p";
                    if (sawType && sawType !=3D type) {
                        if (dir < 0) {dir =3D 1; moveOnce();}
                        break;
                    }
                    if (type) sawType =3D type;
                    if (dir > 0 && !moveOnce(!first)) break;
                }
            }
            var result =3D skipAtomic(doc, Pos(line, ch), origDir, =
true);
            if (!possible) result.hitSide =3D true;
            return result;
        }

        function findPosV(cm, pos, dir, unit) {
            var doc =3D cm.doc, x =3D pos.left, y;
            if (unit =3D=3D "page") {
                var pageSize =3D =
Math.min(cm.display.wrapper.clientHeight, window.innerHeight || =
document.documentElement.clientHeight);
                y =3D pos.top + dir * (pageSize - (dir < 0 ? 1.5 : .5) * =
textHeight(cm.display));
            } else if (unit =3D=3D "line") {
                y =3D dir > 0 ? pos.bottom + 3 : pos.top - 3;
            }
            for (;;) {
                var target =3D coordsChar(cm, x, y);
                if (!target.outside) break;
                if (dir < 0 ? y <=3D 0 : y >=3D doc.height) { =
target.hitSide =3D true; break; }
                y +=3D dir * 5;
            }
            return target;
        }

        function findWordAt(line, pos) {
            var start =3D pos.ch, end =3D pos.ch;
            if (line) {
                if ((pos.xRel < 0 || end =3D=3D line.length) && start) =
--start; else ++end;
                var startChar =3D line.charAt(start);
                var check =3D isWordChar(startChar) ? isWordChar
                    : /\s/.test(startChar) ? function(ch) {return =
/\s/.test(ch);}
                    : function(ch) {return !/\s/.test(ch) && =
!isWordChar(ch);};
                while (start > 0 && check(line.charAt(start - 1))) =
--start;
                while (end < line.length && check(line.charAt(end))) =
++end;
            }
            return {from: Pos(pos.line, start), to: Pos(pos.line, end)};
        }

        function selectLine(cm, line) {
            extendSelection(cm.doc, Pos(line, 0), clipPos(cm.doc, =
Pos(line + 1, 0)));
        }

        // PROTOTYPE

        // The publicly visible API. Note that operation(null, f) means
        // 'wrap f in an operation, performed on its `this` parameter'

        CodeMirror.prototype =3D {
            constructor: CodeMirror,
            focus: function(){window.focus(); focusInput(this); =
onFocus(this); fastPoll(this);},

            setOption: function(option, value) {
                var options =3D this.options, old =3D options[option];
                if (options[option] =3D=3D value && option !=3D "mode") =
return;
                options[option] =3D value;
                if (optionHandlers.hasOwnProperty(option))
                    operation(this, optionHandlers[option])(this, value, =
old);
            },

            getOption: function(option) {return this.options[option];},
            getDoc: function() {return this.doc;},

            addKeyMap: function(map, bottom) {
                this.state.keyMaps[bottom ? "push" : "unshift"](map);
            },
            removeKeyMap: function(map) {
                var maps =3D this.state.keyMaps;
                for (var i =3D 0; i < maps.length; ++i)
                    if (maps[i] =3D=3D map || (typeof maps[i] !=3D =
"string" && maps[i].name =3D=3D map)) {
                        maps.splice(i, 1);
                        return true;
                    }
            },

            addOverlay: operation(null, function(spec, options) {
                var mode =3D spec.token ? spec : =
CodeMirror.getMode(this.options, spec);
                if (mode.startState) throw new Error("Overlays may not =
be stateful.");
                this.state.overlays.push({mode: mode, modeSpec: spec, =
opaque: options && options.opaque});
                this.state.modeGen++;
                regChange(this);
            }),
            removeOverlay: operation(null, function(spec) {
                var overlays =3D this.state.overlays;
                for (var i =3D 0; i < overlays.length; ++i) {
                    var cur =3D overlays[i].modeSpec;
                    if (cur =3D=3D spec || typeof spec =3D=3D "string" =
&& cur.name =3D=3D spec) {
                        overlays.splice(i, 1);
                        this.state.modeGen++;
                        regChange(this);
                        return;
                    }
                }
            }),

            indentLine: operation(null, function(n, dir, aggressive) {
                if (typeof dir !=3D "string" && typeof dir !=3D =
"number") {
                    if (dir =3D=3D null) dir =3D =
this.options.smartIndent ? "smart" : "prev";
                    else dir =3D dir ? "add" : "subtract";
                }
                if (isLine(this.doc, n)) indentLine(this, n, dir, =
aggressive);
            }),
            indentSelection: operation(null, function(how) {
                var sel =3D this.doc.sel;
                if (posEq(sel.from, sel.to)) return indentLine(this, =
sel.from.line, how);
                var e =3D sel.to.line - (sel.to.ch ? 0 : 1);
                for (var i =3D sel.from.line; i <=3D e; ++i) =
indentLine(this, i, how);
            }),

            // Fetch the parser token for a given character. Useful for =
hacks
            // that want to inspect the mode state (say, for =
completion).
            getTokenAt: function(pos, precise) {
                var doc =3D this.doc;
                pos =3D clipPos(doc, pos);
                var state =3D getStateBefore(this, pos.line, precise), =
mode =3D this.doc.mode;
                var line =3D getLine(doc, pos.line);
                var stream =3D new StringStream(line.text, =
this.options.tabSize);
                while (stream.pos < pos.ch && !stream.eol()) {
                    stream.start =3D stream.pos;
                    var style =3D mode.token(stream, state);
                }
                return {start: stream.start,
                    end: stream.pos,
                    string: stream.current(),
                    className: style || null, // Deprecated, use 'type' =
instead
                    type: style || null,
                    state: state};
            },

            getTokenTypeAt: function(pos) {
                pos =3D clipPos(this.doc, pos);
                var styles =3D getLineStyles(this, getLine(this.doc, =
pos.line));
                var before =3D 0, after =3D (styles.length - 1) / 2, ch =
=3D pos.ch;
                if (ch =3D=3D 0) return styles[2];
                for (;;) {
                    var mid =3D (before + after) >> 1;
                    if ((mid ? styles[mid * 2 - 1] : 0) >=3D ch) after =
=3D mid;
                    else if (styles[mid * 2 + 1] < ch) before =3D mid + =
1;
                    else return styles[mid * 2 + 2];
                }
            },

            getModeAt: function(pos) {
                var mode =3D this.doc.mode;
                if (!mode.innerMode) return mode;
                return CodeMirror.innerMode(mode, =
this.getTokenAt(pos).state).mode;
            },

            getHelper: function(pos, type) {
                if (!helpers.hasOwnProperty(type)) return;
                var help =3D helpers[type], mode =3D =
this.getModeAt(pos);
                return mode[type] && help[mode[type]] ||
                    mode.helperType && help[mode.helperType] ||
                    help[mode.name];
            },

            getStateAfter: function(line, precise) {
                var doc =3D this.doc;
                line =3D clipLine(doc, line =3D=3D null ? doc.first + =
doc.size - 1: line);
                return getStateBefore(this, line + 1, precise);
            },

            cursorCoords: function(start, mode) {
                var pos, sel =3D this.doc.sel;
                if (start =3D=3D null) pos =3D sel.head;
                else if (typeof start =3D=3D "object") pos =3D =
clipPos(this.doc, start);
                else pos =3D start ? sel.from : sel.to;
                return cursorCoords(this, pos, mode || "page");
            },

            charCoords: function(pos, mode) {
                return charCoords(this, clipPos(this.doc, pos), mode || =
"page");
            },

            coordsChar: function(coords, mode) {
                coords =3D fromCoordSystem(this, coords, mode || =
"page");
                return coordsChar(this, coords.left, coords.top);
            },

            lineAtHeight: function(height, mode) {
                height =3D fromCoordSystem(this, {top: height, left: 0}, =
mode || "page").top;
                return lineAtHeight(this.doc, height + =
this.display.viewOffset);
            },
            heightAtLine: function(line, mode) {
                var end =3D false, last =3D this.doc.first + =
this.doc.size - 1;
                if (line < this.doc.first) line =3D this.doc.first;
                else if (line > last) { line =3D last; end =3D true; }
                var lineObj =3D getLine(this.doc, line);
                return intoCoordSystem(this, getLine(this.doc, line), =
{top: 0, left: 0}, mode || "page").top +
                    (end ? lineObj.height : 0);
            },

            defaultTextHeight: function() { return =
textHeight(this.display); },
            defaultCharWidth: function() { return =
charWidth(this.display); },

            setGutterMarker: operation(null, function(line, gutterID, =
value) {
                return changeLine(this, line, function(line) {
                    var markers =3D line.gutterMarkers || =
(line.gutterMarkers =3D {});
                    markers[gutterID] =3D value;
                    if (!value && isEmpty(markers)) line.gutterMarkers =
=3D null;
                    return true;
                });
            }),

            clearGutter: operation(null, function(gutterID) {
                var cm =3D this, doc =3D cm.doc, i =3D doc.first;
                doc.iter(function(line) {
                    if (line.gutterMarkers && =
line.gutterMarkers[gutterID]) {
                        line.gutterMarkers[gutterID] =3D null;
                        regChange(cm, i, i + 1);
                        if (isEmpty(line.gutterMarkers)) =
line.gutterMarkers =3D null;
                    }
                    ++i;
                });
            }),

            addLineClass: operation(null, function(handle, where, cls) {
                return changeLine(this, handle, function(line) {
                    var prop =3D where =3D=3D "text" ? "textClass" : =
where =3D=3D "background" ? "bgClass" : "wrapClass";
                    if (!line[prop]) line[prop] =3D cls;
                    else if (new RegExp("(?:^|\\s)" + cls + =
"(?:$|\\s)").test(line[prop])) return false;
                    else line[prop] +=3D " " + cls;
                    return true;
                });
            }),

            removeLineClass: operation(null, function(handle, where, =
cls) {
                return changeLine(this, handle, function(line) {
                    var prop =3D where =3D=3D "text" ? "textClass" : =
where =3D=3D "background" ? "bgClass" : "wrapClass";
                    var cur =3D line[prop];
                    if (!cur) return false;
                    else if (cls =3D=3D null) line[prop] =3D null;
                    else {
                        var found =3D cur.match(new RegExp("(?:^|\\s+)" =
+ cls + "(?:$|\\s+)"));
                        if (!found) return false;
                        var end =3D found.index + found[0].length;
                        line[prop] =3D cur.slice(0, found.index) + =
(!found.index || end =3D=3D cur.length ? "" : " ") + cur.slice(end) || =
null;
                    }
                    return true;
                });
            }),

            addLineWidget: operation(null, function(handle, node, =
options) {
                return addLineWidget(this, handle, node, options);
            }),

            removeLineWidget: function(widget) { widget.clear(); },

            lineInfo: function(line) {
                if (typeof line =3D=3D "number") {
                    if (!isLine(this.doc, line)) return null;
                    var n =3D line;
                    line =3D getLine(this.doc, line);
                    if (!line) return null;
                } else {
                    var n =3D lineNo(line);
                    if (n =3D=3D null) return null;
                }
                return {line: n, handle: line, text: line.text, =
gutterMarkers: line.gutterMarkers,
                    textClass: line.textClass, bgClass: line.bgClass, =
wrapClass: line.wrapClass,
                    widgets: line.widgets};
            },

            getViewport: function() { return {from: =
this.display.showingFrom, to: this.display.showingTo};},

            addWidget: function(pos, node, scroll, vert, horiz) {
                var display =3D this.display;
                pos =3D cursorCoords(this, clipPos(this.doc, pos));
                var top =3D pos.bottom, left =3D pos.left;
                node.style.position =3D "absolute";
                display.sizer.appendChild(node);
                if (vert =3D=3D "over") {
                    top =3D pos.top;
                } else if (vert =3D=3D "above" || vert =3D=3D "near") {
                    var vspace =3D =
Math.max(display.wrapper.clientHeight, this.doc.height),
                        hspace =3D Math.max(display.sizer.clientWidth, =
display.lineSpace.clientWidth);
                    // Default to positioning above (if specified and =
possible); otherwise default to positioning below
                    if ((vert =3D=3D 'above' || pos.bottom + =
node.offsetHeight > vspace) && pos.top > node.offsetHeight)
                        top =3D pos.top - node.offsetHeight;
                    else if (pos.bottom + node.offsetHeight <=3D vspace)
                        top =3D pos.bottom;
                    if (left + node.offsetWidth > hspace)
                        left =3D hspace - node.offsetWidth;
                }
                node.style.top =3D top + "px";
                node.style.left =3D node.style.right =3D "";
                if (horiz =3D=3D "right") {
                    left =3D display.sizer.clientWidth - =
node.offsetWidth;
                    node.style.right =3D "0px";
                } else {
                    if (horiz =3D=3D "left") left =3D 0;
                    else if (horiz =3D=3D "middle") left =3D =
(display.sizer.clientWidth - node.offsetWidth) / 2;
                    node.style.left =3D left + "px";
                }
                if (scroll)
                    scrollIntoView(this, left, top, left + =
node.offsetWidth, top + node.offsetHeight);
            },

            triggerOnKeyDown: operation(null, onKeyDown),

            execCommand: function(cmd) {return commands[cmd](this);},

            findPosH: function(from, amount, unit, visually) {
                var dir =3D 1;
                if (amount < 0) { dir =3D -1; amount =3D -amount; }
                for (var i =3D 0, cur =3D clipPos(this.doc, from); i < =
amount; ++i) {
                    cur =3D findPosH(this.doc, cur, dir, unit, =
visually);
                    if (cur.hitSide) break;
                }
                return cur;
            },

            moveH: operation(null, function(dir, unit) {
                var sel =3D this.doc.sel, pos;
                if (sel.shift || sel.extend || posEq(sel.from, sel.to))
                    pos =3D findPosH(this.doc, sel.head, dir, unit, =
this.options.rtlMoveVisually);
                else
                    pos =3D dir < 0 ? sel.from : sel.to;
                extendSelection(this.doc, pos, pos, dir);
            }),

            deleteH: operation(null, function(dir, unit) {
                var sel =3D this.doc.sel;
                if (!posEq(sel.from, sel.to)) replaceRange(this.doc, "", =
sel.from, sel.to, "+delete");
                else replaceRange(this.doc, "", sel.from, =
findPosH(this.doc, sel.head, dir, unit, false), "+delete");
                this.curOp.userSelChange =3D true;
            }),

            findPosV: function(from, amount, unit, goalColumn) {
                var dir =3D 1, x =3D goalColumn;
                if (amount < 0) { dir =3D -1; amount =3D -amount; }
                for (var i =3D 0, cur =3D clipPos(this.doc, from); i < =
amount; ++i) {
                    var coords =3D cursorCoords(this, cur, "div");
                    if (x =3D=3D null) x =3D coords.left;
                    else coords.left =3D x;
                    cur =3D findPosV(this, coords, dir, unit);
                    if (cur.hitSide) break;
                }
                return cur;
            },

            moveV: operation(null, function(dir, unit) {
                var sel =3D this.doc.sel;
                var pos =3D cursorCoords(this, sel.head, "div");
                if (sel.goalColumn !=3D null) pos.left =3D =
sel.goalColumn;
                var target =3D findPosV(this, pos, dir, unit);

                if (unit =3D=3D "page") addToScrollPos(this, 0, =
charCoords(this, target, "div").top - pos.top);
                extendSelection(this.doc, target, target, dir);
                sel.goalColumn =3D pos.left;
            }),

            toggleOverwrite: function(value) {
                if (value !=3D null && value =3D=3D =
this.state.overwrite) return;
                if (this.state.overwrite =3D !this.state.overwrite)
                    this.display.cursor.className +=3D " =
CodeMirror-overwrite";
                else
                    this.display.cursor.className =3D =
this.display.cursor.className.replace(" CodeMirror-overwrite", "");
            },
            hasFocus: function() { return this.state.focused; },

            scrollTo: operation(null, function(x, y) {
                updateScrollPos(this, x, y);
            }),
            getScrollInfo: function() {
                var scroller =3D this.display.scroller, co =3D =
scrollerCutOff;
                return {left: scroller.scrollLeft, top: =
scroller.scrollTop,
                    height: scroller.scrollHeight - co, width: =
scroller.scrollWidth - co,
                    clientHeight: scroller.clientHeight - co, =
clientWidth: scroller.clientWidth - co};
            },

            scrollIntoView: operation(null, function(pos, margin) {
                if (typeof pos =3D=3D "number") pos =3D Pos(pos, 0);
                if (!margin) margin =3D 0;
                var coords =3D pos;

                if (!pos || pos.line !=3D null) {
                    this.curOp.scrollToPos =3D pos ? clipPos(this.doc, =
pos) : this.doc.sel.head;
                    this.curOp.scrollToPosMargin =3D margin;
                    coords =3D cursorCoords(this, =
this.curOp.scrollToPos);
                }
                var sPos =3D calculateScrollPos(this, coords.left, =
coords.top - margin, coords.right, coords.bottom + margin);
                updateScrollPos(this, sPos.scrollLeft, sPos.scrollTop);
            }),

            setSize: operation(null, function(width, height) {
                function interpret(val) {
                    return typeof val =3D=3D "number" || =
/^\d+$/.test(String(val)) ? val + "px" : val;
                }
                if (width !=3D null) this.display.wrapper.style.width =
=3D interpret(width);
                if (height !=3D null) this.display.wrapper.style.height =
=3D interpret(height);
                if (this.options.lineWrapping)
                    this.display.measureLineCache.length =3D =
this.display.measureLineCachePos =3D 0;
                this.curOp.forceUpdate =3D true;
            }),

            operation: function(f){return runInOp(this, f);},

            refresh: operation(null, function() {
                clearCaches(this);
                updateScrollPos(this, this.doc.scrollLeft, =
this.doc.scrollTop);
                regChange(this);
            }),

            swapDoc: operation(null, function(doc) {
                var old =3D this.doc;
                old.cm =3D null;
                attachDoc(this, doc);
                clearCaches(this);
                resetInput(this, true);
                updateScrollPos(this, doc.scrollLeft, doc.scrollTop);
                return old;
            }),

            getInputField: function(){return this.display.input;},
            getWrapperElement: function(){return this.display.wrapper;},
            getScrollerElement: function(){return =
this.display.scroller;},
            getGutterElement: function(){return this.display.gutters;}
        };
        eventMixin(CodeMirror);

        // OPTION DEFAULTS

        var optionHandlers =3D CodeMirror.optionHandlers =3D {};

        // The default configuration options.
        var defaults =3D CodeMirror.defaults =3D {};

        function option(name, deflt, handle, notOnInit) {
            CodeMirror.defaults[name] =3D deflt;
            if (handle) optionHandlers[name] =3D
                notOnInit ? function(cm, val, old) {if (old !=3D Init) =
handle(cm, val, old);} : handle;
        }

        var Init =3D CodeMirror.Init =3D {toString: function(){return =
"CodeMirror.Init";}};

        // These two are, on init, called from the constructor because =
they
        // have to be initialized before the editor can start at all.
        option("value", "", function(cm, val) {
            cm.setValue(val);
        }, true);
        option("mode", null, function(cm, val) {
            cm.doc.modeOption =3D val;
            loadMode(cm);
        }, true);

        option("indentUnit", 2, loadMode, true);
        option("indentWithTabs", false);
        option("smartIndent", true);
        option("tabSize", 4, function(cm) {
            loadMode(cm);
            clearCaches(cm);
            regChange(cm);
        }, true);
        option("electricChars", true);
        option("rtlMoveVisually", !windows);

        option("theme", "default", function(cm) {
            themeChanged(cm);
            guttersChanged(cm);
        }, true);
        option("keyMap", "default", keyMapChanged);
        option("extraKeys", null);

        option("onKeyEvent", null);
        option("onDragEvent", null);

        option("lineWrapping", false, wrappingChanged, true);
        option("gutters", [], function(cm) {
            setGuttersForLineNumbers(cm.options);
            guttersChanged(cm);
        }, true);
        option("fixedGutter", true, function(cm, val) {
            cm.display.gutters.style.left =3D val ? =
compensateForHScroll(cm.display) + "px" : "0";
            cm.refresh();
        }, true);
        option("coverGutterNextToScrollbar", false, updateScrollbars, =
true);
        option("lineNumbers", false, function(cm) {
            setGuttersForLineNumbers(cm.options);
            guttersChanged(cm);
        }, true);
        option("firstLineNumber", 1, guttersChanged, true);
        option("lineNumberFormatter", function(integer) {return =
integer;}, guttersChanged, true);
        option("showCursorWhenSelecting", false, updateSelection, true);

        option("readOnly", false, function(cm, val) {
            if (val =3D=3D "nocursor") {onBlur(cm); =
cm.display.input.blur();}
            else if (!val) resetInput(cm, true);
        });
        option("dragDrop", true);

        option("cursorBlinkRate", 530);
        option("cursorScrollMargin", 0);
        option("cursorHeight", 1);
        option("workTime", 100);
        option("workDelay", 100);
        option("flattenSpans", true);
        option("pollInterval", 100);
        option("undoDepth", 40, function(cm, =
val){cm.doc.history.undoDepth =3D val;});
        option("historyEventDelay", 500);
        option("viewportMargin", 10, function(cm){cm.refresh();}, true);
        option("maxHighlightLength", 10000, function(cm){loadMode(cm); =
cm.refresh();}, true);
        option("moveInputWithCursor", true, function(cm, val) {
            if (!val) cm.display.inputDiv.style.top =3D =
cm.display.inputDiv.style.left =3D 0;
        });

        option("tabindex", null, function(cm, val) {
            cm.display.input.tabIndex =3D val || "";
        });
        option("autofocus", null);

        // MODE DEFINITION AND QUERYING

        // Known modes, by name and by MIME
        var modes =3D CodeMirror.modes =3D {}, mimeModes =3D =
CodeMirror.mimeModes =3D {};

        CodeMirror.defineMode =3D function(name, mode) {
            if (!CodeMirror.defaults.mode && name !=3D "null") =
CodeMirror.defaults.mode =3D name;
            if (arguments.length > 2) {
                mode.dependencies =3D [];
                for (var i =3D 2; i < arguments.length; ++i) =
mode.dependencies.push(arguments[i]);
            }
            modes[name] =3D mode;
        };

        CodeMirror.defineMIME =3D function(mime, spec) {
            mimeModes[mime] =3D spec;
        };

        CodeMirror.resolveMode =3D function(spec) {
            if (typeof spec =3D=3D "string" && =
mimeModes.hasOwnProperty(spec)) {
                spec =3D mimeModes[spec];
            } else if (spec && typeof spec.name =3D=3D "string" && =
mimeModes.hasOwnProperty(spec.name)) {
                var found =3D mimeModes[spec.name];
                spec =3D createObj(found, spec);
                spec.name =3D found.name;
            } else if (typeof spec =3D=3D "string" && =
/^[\w\-]+\/[\w\-]+\+xml$/.test(spec)) {
                return CodeMirror.resolveMode("application/xml");
            }
            if (typeof spec =3D=3D "string") return {name: spec};
            else return spec || {name: "null"};
        };

        CodeMirror.getMode =3D function(options, spec) {
            var spec =3D CodeMirror.resolveMode(spec);
            var mfactory =3D modes[spec.name];
            if (!mfactory) return CodeMirror.getMode(options, =
"text/plain");
            var modeObj =3D mfactory(options, spec);
            if (modeExtensions.hasOwnProperty(spec.name)) {
                var exts =3D modeExtensions[spec.name];
                for (var prop in exts) {
                    if (!exts.hasOwnProperty(prop)) continue;
                    if (modeObj.hasOwnProperty(prop)) modeObj["_" + =
prop] =3D modeObj[prop];
                    modeObj[prop] =3D exts[prop];
                }
            }
            modeObj.name =3D spec.name;

            return modeObj;
        };

        CodeMirror.defineMode("null", function() {
            return {token: function(stream) {stream.skipToEnd();}};
        });
        CodeMirror.defineMIME("text/plain", "null");

        var modeExtensions =3D CodeMirror.modeExtensions =3D {};
        CodeMirror.extendMode =3D function(mode, properties) {
            var exts =3D modeExtensions.hasOwnProperty(mode) ? =
modeExtensions[mode] : (modeExtensions[mode] =3D {});
            copyObj(properties, exts);
        };

        // EXTENSIONS

        CodeMirror.defineExtension =3D function(name, func) {
            CodeMirror.prototype[name] =3D func;
        };
        CodeMirror.defineDocExtension =3D function(name, func) {
            Doc.prototype[name] =3D func;
        };
        CodeMirror.defineOption =3D option;

        var initHooks =3D [];
        CodeMirror.defineInitHook =3D function(f) {initHooks.push(f);};

        var helpers =3D CodeMirror.helpers =3D {};
        CodeMirror.registerHelper =3D function(type, name, value) {
            if (!helpers.hasOwnProperty(type)) helpers[type] =3D =
CodeMirror[type] =3D {};
            helpers[type][name] =3D value;
        };

        // UTILITIES

        CodeMirror.isWordChar =3D isWordChar;

        // MODE STATE HANDLING

        // Utility functions for working with state. Exported because =
modes
        // sometimes need to do this.
        function copyState(mode, state) {
            if (state =3D=3D=3D true) return state;
            if (mode.copyState) return mode.copyState(state);
            var nstate =3D {};
            for (var n in state) {
                var val =3D state[n];
                if (val instanceof Array) val =3D val.concat([]);
                nstate[n] =3D val;
            }
            return nstate;
        }
        CodeMirror.copyState =3D copyState;

        function startState(mode, a1, a2) {
            return mode.startState ? mode.startState(a1, a2) : true;
        }
        CodeMirror.startState =3D startState;

        CodeMirror.innerMode =3D function(mode, state) {
            while (mode.innerMode) {
                var info =3D mode.innerMode(state);
                if (!info || info.mode =3D=3D mode) break;
                state =3D info.state;
                mode =3D info.mode;
            }
            return info || {mode: mode, state: state};
        };

        // STANDARD COMMANDS

        var commands =3D CodeMirror.commands =3D {
            selectAll: function(cm) {cm.setSelection(Pos(cm.firstLine(), =
0), Pos(cm.lastLine()));},
            killLine: function(cm) {
                var from =3D cm.getCursor(true), to =3D =
cm.getCursor(false), sel =3D !posEq(from, to);
                if (!sel && cm.getLine(from.line).length =3D=3D from.ch)
                    cm.replaceRange("", from, Pos(from.line + 1, 0), =
"+delete");
                else cm.replaceRange("", from, sel ? to : =
Pos(from.line), "+delete");
            },
            deleteLine: function(cm) {
                var l =3D cm.getCursor().line;
                cm.replaceRange("", Pos(l, 0), Pos(l), "+delete");
            },
            delLineLeft: function(cm) {
                var cur =3D cm.getCursor();
                cm.replaceRange("", Pos(cur.line, 0), cur, "+delete");
            },
            undo: function(cm) {cm.undo();},
            redo: function(cm) {cm.redo();},
            goDocStart: function(cm) =
{cm.extendSelection(Pos(cm.firstLine(), 0));},
            goDocEnd: function(cm) =
{cm.extendSelection(Pos(cm.lastLine()));},
            goLineStart: function(cm) {
                cm.extendSelection(lineStart(cm, cm.getCursor().line));
            },
            goLineStartSmart: function(cm) {
                var cur =3D cm.getCursor(), start =3D lineStart(cm, =
cur.line);
                var line =3D cm.getLineHandle(start.line);
                var order =3D getOrder(line);
                if (!order || order[0].level =3D=3D 0) {
                    var firstNonWS =3D Math.max(0, =
line.text.search(/\S/));
                    var inWS =3D cur.line =3D=3D start.line && cur.ch =
<=3D firstNonWS && cur.ch;
                    cm.extendSelection(Pos(start.line, inWS ? 0 : =
firstNonWS));
                } else cm.extendSelection(start);
            },
            goLineEnd: function(cm) {
                cm.extendSelection(lineEnd(cm, cm.getCursor().line));
            },
            goLineRight: function(cm) {
                var top =3D cm.charCoords(cm.getCursor(), "div").top + =
5;
                cm.extendSelection(cm.coordsChar({left: =
cm.display.lineDiv.offsetWidth + 100, top: top}, "div"));
            },
            goLineLeft: function(cm) {
                var top =3D cm.charCoords(cm.getCursor(), "div").top + =
5;
                cm.extendSelection(cm.coordsChar({left: 0, top: top}, =
"div"));
            },
            goLineUp: function(cm) {cm.moveV(-1, "line");},
            goLineDown: function(cm) {cm.moveV(1, "line");},
            goPageUp: function(cm) {cm.moveV(-1, "page");},
            goPageDown: function(cm) {cm.moveV(1, "page");},
            goCharLeft: function(cm) {cm.moveH(-1, "char");},
            goCharRight: function(cm) {cm.moveH(1, "char");},
            goColumnLeft: function(cm) {cm.moveH(-1, "column");},
            goColumnRight: function(cm) {cm.moveH(1, "column");},
            goWordLeft: function(cm) {cm.moveH(-1, "word");},
            goGroupRight: function(cm) {cm.moveH(1, "group");},
            goGroupLeft: function(cm) {cm.moveH(-1, "group");},
            goWordRight: function(cm) {cm.moveH(1, "word");},
            delCharBefore: function(cm) {cm.deleteH(-1, "char");},
            delCharAfter: function(cm) {cm.deleteH(1, "char");},
            delWordBefore: function(cm) {cm.deleteH(-1, "word");},
            delWordAfter: function(cm) {cm.deleteH(1, "word");},
            delGroupBefore: function(cm) {cm.deleteH(-1, "group");},
            delGroupAfter: function(cm) {cm.deleteH(1, "group");},
            indentAuto: function(cm) {cm.indentSelection("smart");},
            indentMore: function(cm) {cm.indentSelection("add");},
            indentLess: function(cm) {cm.indentSelection("subtract");},
            insertTab: function(cm) {cm.replaceSelection("\t", "end", =
"+input");},
            defaultTab: function(cm) {
                if (cm.somethingSelected()) cm.indentSelection("add");
                else cm.replaceSelection("\t", "end", "+input");
            },
            transposeChars: function(cm) {
                var cur =3D cm.getCursor(), line =3D =
cm.getLine(cur.line);
                if (cur.ch > 0 && cur.ch < line.length - 1)
                    cm.replaceRange(line.charAt(cur.ch) + =
line.charAt(cur.ch - 1),
                        Pos(cur.line, cur.ch - 1), Pos(cur.line, cur.ch =
+ 1));
            },
            newlineAndIndent: function(cm) {
                operation(cm, function() {
                    cm.replaceSelection("\n", "end", "+input");
                    cm.indentLine(cm.getCursor().line, null, true);
                })();
            },
            toggleOverwrite: function(cm) {cm.toggleOverwrite();}
        };

        // STANDARD KEYMAPS

        var keyMap =3D CodeMirror.keyMap =3D {};
        keyMap.basic =3D {
            "Left": "goCharLeft", "Right": "goCharRight", "Up": =
"goLineUp", "Down": "goLineDown",
            "End": "goLineEnd", "Home": "goLineStartSmart", "PageUp": =
"goPageUp", "PageDown": "goPageDown",
            "Delete": "delCharAfter", "Backspace": "delCharBefore", =
"Tab": "defaultTab", "Shift-Tab": "indentAuto",
            "Enter": "newlineAndIndent", "Insert": "toggleOverwrite"
        };
        // Note that the save and find-related commands aren't defined =
by
        // default. Unknown commands are simply ignored.
        keyMap.pcDefault =3D {
            "Ctrl-A": "selectAll", "Ctrl-D": "deleteLine", "Ctrl-Z": =
"undo", "Shift-Ctrl-Z": "redo", "Ctrl-Y": "redo",
            "Ctrl-Home": "goDocStart", "Alt-Up": "goDocStart", =
"Ctrl-End": "goDocEnd", "Ctrl-Down": "goDocEnd",
            "Ctrl-Left": "goGroupLeft", "Ctrl-Right": "goGroupRight", =
"Alt-Left": "goLineStart", "Alt-Right": "goLineEnd",
            "Ctrl-Backspace": "delGroupBefore", "Ctrl-Delete": =
"delGroupAfter", "Ctrl-S": "save", "Ctrl-F": "find",
            "Ctrl-G": "findNext", "Shift-Ctrl-G": "findPrev", =
"Shift-Ctrl-F": "replace", "Shift-Ctrl-R": "replaceAll",
            "Ctrl-[": "indentLess", "Ctrl-]": "indentMore",
            fallthrough: "basic"
        };
        keyMap.macDefault =3D {
            "Cmd-A": "selectAll", "Cmd-D": "deleteLine", "Cmd-Z": =
"undo", "Shift-Cmd-Z": "redo", "Cmd-Y": "redo",
            "Cmd-Up": "goDocStart", "Cmd-End": "goDocEnd", "Cmd-Down": =
"goDocEnd", "Alt-Left": "goGroupLeft",
            "Alt-Right": "goGroupRight", "Cmd-Left": "goLineStart", =
"Cmd-Right": "goLineEnd", "Alt-Backspace": "delGroupBefore",
            "Ctrl-Alt-Backspace": "delGroupAfter", "Alt-Delete": =
"delGroupAfter", "Cmd-S": "save", "Cmd-F": "find",
            "Cmd-G": "findNext", "Shift-Cmd-G": "findPrev", "Cmd-Alt-F": =
"replace", "Shift-Cmd-Alt-F": "replaceAll",
            "Cmd-[": "indentLess", "Cmd-]": "indentMore", =
"Cmd-Backspace": "delLineLeft",
            fallthrough: ["basic", "emacsy"]
        };
        keyMap["default"] =3D mac ? keyMap.macDefault : =
keyMap.pcDefault;
        keyMap.emacsy =3D {
            "Ctrl-F": "goCharRight", "Ctrl-B": "goCharLeft", "Ctrl-P": =
"goLineUp", "Ctrl-N": "goLineDown",
            "Alt-F": "goWordRight", "Alt-B": "goWordLeft", "Ctrl-A": =
"goLineStart", "Ctrl-E": "goLineEnd",
            "Ctrl-V": "goPageDown", "Shift-Ctrl-V": "goPageUp", =
"Ctrl-D": "delCharAfter", "Ctrl-H": "delCharBefore",
            "Alt-D": "delWordAfter", "Alt-Backspace": "delWordBefore", =
"Ctrl-K": "killLine", "Ctrl-T": "transposeChars"
        };

        // KEYMAP DISPATCH

        function getKeyMap(val) {
            if (typeof val =3D=3D "string") return keyMap[val];
            else return val;
        }

        function lookupKey(name, maps, handle) {
            function lookup(map) {
                map =3D getKeyMap(map);
                var found =3D map[name];
                if (found =3D=3D=3D false) return "stop";
                if (found !=3D null && handle(found)) return true;
                if (map.nofallthrough) return "stop";

                var fallthrough =3D map.fallthrough;
                if (fallthrough =3D=3D null) return false;
                if (Object.prototype.toString.call(fallthrough) !=3D =
"[object Array]")
                    return lookup(fallthrough);
                for (var i =3D 0, e =3D fallthrough.length; i < e; ++i) =
{
                    var done =3D lookup(fallthrough[i]);
                    if (done) return done;
                }
                return false;
            }

            for (var i =3D 0; i < maps.length; ++i) {
                var done =3D lookup(maps[i]);
                if (done) return done !=3D "stop";
            }
        }
        function isModifierKey(event) {
            var name =3D keyNames[event.keyCode];
            return name =3D=3D "Ctrl" || name =3D=3D "Alt" || name =
=3D=3D "Shift" || name =3D=3D "Mod";
        }
        function keyName(event, noShift) {
            if (opera && event.keyCode =3D=3D 34 && event["char"]) =
return false;
            var name =3D keyNames[event.keyCode];
            if (name =3D=3D null || event.altGraphKey) return false;
            if (event.altKey) name =3D "Alt-" + name;
            if (flipCtrlCmd ? event.metaKey : event.ctrlKey) name =3D =
"Ctrl-" + name;
            if (flipCtrlCmd ? event.ctrlKey : event.metaKey) name =3D =
"Cmd-" + name;
            if (!noShift && event.shiftKey) name =3D "Shift-" + name;
            return name;
        }
        CodeMirror.lookupKey =3D lookupKey;
        CodeMirror.isModifierKey =3D isModifierKey;
        CodeMirror.keyName =3D keyName;

        // FROMTEXTAREA

        CodeMirror.fromTextArea =3D function(textarea, options) {
            if (!options) options =3D {};
            options.value =3D textarea.value;
            if (!options.tabindex && textarea.tabindex)
                options.tabindex =3D textarea.tabindex;
            if (!options.placeholder && textarea.placeholder)
                options.placeholder =3D textarea.placeholder;
            // Set autofocus to true if this textarea is focused, or if =
it has
            // autofocus and no other element is focused.
            if (options.autofocus =3D=3D null) {
                var hasFocus =3D document.body;
                // doc.activeElement occasionally throws on IE
                try { hasFocus =3D document.activeElement; } catch(e) {}
                options.autofocus =3D hasFocus =3D=3D textarea ||
                    textarea.getAttribute("autofocus") !=3D null && =
hasFocus =3D=3D document.body;
            }

            function save() {textarea.value =3D cm.getValue();}
            if (textarea.form) {
                on(textarea.form, "submit", save);
                // Deplorable hack to make the submit method do the =
right thing.
                if (!options.leaveSubmitMethodAlone) {
                    var form =3D textarea.form, realSubmit =3D =
form.submit;
                    try {
                        var wrappedSubmit =3D form.submit =3D function() =
{
                            save();
                            form.submit =3D realSubmit;
                            form.submit();
                            form.submit =3D wrappedSubmit;
                        };
                    } catch(e) {}
                }
            }

            textarea.style.display =3D "none";
            var cm =3D CodeMirror(function(node) {
                textarea.parentNode.insertBefore(node, =
textarea.nextSibling);
            }, options);
            cm.save =3D save;
            cm.getTextArea =3D function() { return textarea; };
            cm.toTextArea =3D function() {
                save();
                textarea.parentNode.removeChild(cm.getWrapperElement());
                textarea.style.display =3D "";
                if (textarea.form) {
                    off(textarea.form, "submit", save);
                    if (typeof textarea.form.submit =3D=3D "function")
                        textarea.form.submit =3D realSubmit;
                }
            };
            return cm;
        };

        // STRING STREAM

        // Fed to the mode parsers, provides helper functions to make
        // parsers more succinct.

        // The character stream used by a mode's parser.
        function StringStream(string, tabSize) {
            this.pos =3D this.start =3D 0;
            this.string =3D string;
            this.tabSize =3D tabSize || 8;
            this.lastColumnPos =3D this.lastColumnValue =3D 0;
        }

        StringStream.prototype =3D {
            eol: function() {return this.pos >=3D this.string.length;},
            sol: function() {return this.pos =3D=3D 0;},
            peek: function() {return this.string.charAt(this.pos) || =
undefined;},
            next: function() {
                if (this.pos < this.string.length)
                    return this.string.charAt(this.pos++);
            },
            eat: function(match) {
                var ch =3D this.string.charAt(this.pos);
                if (typeof match =3D=3D "string") var ok =3D ch =3D=3D =
match;
                else var ok =3D ch && (match.test ? match.test(ch) : =
match(ch));
                if (ok) {++this.pos; return ch;}
            },
            eatWhile: function(match) {
                var start =3D this.pos;
                while (this.eat(match)){}
                return this.pos > start;
            },
            eatSpace: function() {
                var start =3D this.pos;
                while (/[\s\u00a0]/.test(this.string.charAt(this.pos))) =
++this.pos;
                return this.pos > start;
            },
            skipToEnd: function() {this.pos =3D this.string.length;},
            skipTo: function(ch) {
                var found =3D this.string.indexOf(ch, this.pos);
                if (found > -1) {this.pos =3D found; return true;}
            },
            backUp: function(n) {this.pos -=3D n;},
            column: function() {
                if (this.lastColumnPos < this.start) {
                    this.lastColumnValue =3D countColumn(this.string, =
this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue);
                    this.lastColumnPos =3D this.start;
                }
                return this.lastColumnValue;
            },
            indentation: function() {return countColumn(this.string, =
null, this.tabSize);},
            match: function(pattern, consume, caseInsensitive) {
                if (typeof pattern =3D=3D "string") {
                    var cased =3D function(str) {return caseInsensitive =
? str.toLowerCase() : str;};
                    var substr =3D this.string.substr(this.pos, =
pattern.length);
                    if (cased(substr) =3D=3D cased(pattern)) {
                        if (consume !=3D=3D false) this.pos +=3D =
pattern.length;
                        return true;
                    }
                } else {
                    var match =3D =
this.string.slice(this.pos).match(pattern);
                    if (match && match.index > 0) return null;
                    if (match && consume !=3D=3D false) this.pos +=3D =
match[0].length;
                    return match;
                }
            },
            current: function(){return this.string.slice(this.start, =
this.pos);}
        };
        CodeMirror.StringStream =3D StringStream;

        // TEXTMARKERS

        function TextMarker(doc, type) {
            this.lines =3D [];
            this.type =3D type;
            this.doc =3D doc;
        }
        CodeMirror.TextMarker =3D TextMarker;
        eventMixin(TextMarker);

        TextMarker.prototype.clear =3D function() {
            if (this.explicitlyCleared) return;
            var cm =3D this.doc.cm, withOp =3D cm && !cm.curOp;
            if (withOp) startOperation(cm);
            if (hasHandler(this, "clear")) {
                var found =3D this.find();
                if (found) signalLater(this, "clear", found.from, =
found.to);
            }
            var min =3D null, max =3D null;
            for (var i =3D 0; i < this.lines.length; ++i) {
                var line =3D this.lines[i];
                var span =3D getMarkedSpanFor(line.markedSpans, this);
                if (span.to !=3D null) max =3D lineNo(line);
                line.markedSpans =3D removeMarkedSpan(line.markedSpans, =
span);
                if (span.from !=3D null)
                    min =3D lineNo(line);
                else if (this.collapsed && !lineIsHidden(this.doc, line) =
&& cm)
                    updateLineHeight(line, textHeight(cm.display));
            }
            if (cm && this.collapsed && !cm.options.lineWrapping) for =
(var i =3D 0; i < this.lines.length; ++i) {
                var visual =3D visualLine(cm.doc, this.lines[i]), len =
=3D lineLength(cm.doc, visual);
                if (len > cm.display.maxLineLength) {
                    cm.display.maxLine =3D visual;
                    cm.display.maxLineLength =3D len;
                    cm.display.maxLineChanged =3D true;
                }
            }

            if (min !=3D null && cm) regChange(cm, min, max + 1);
            this.lines.length =3D 0;
            this.explicitlyCleared =3D true;
            if (this.atomic && this.doc.cantEdit) {
                this.doc.cantEdit =3D false;
                if (cm) reCheckSelection(cm);
            }
            if (withOp) endOperation(cm);
        };

        TextMarker.prototype.find =3D function() {
            var from, to;
            for (var i =3D 0; i < this.lines.length; ++i) {
                var line =3D this.lines[i];
                var span =3D getMarkedSpanFor(line.markedSpans, this);
                if (span.from !=3D null || span.to !=3D null) {
                    var found =3D lineNo(line);
                    if (span.from !=3D null) from =3D Pos(found, =
span.from);
                    if (span.to !=3D null) to =3D Pos(found, span.to);
                }
            }
            if (this.type =3D=3D "bookmark") return from;
            return from && {from: from, to: to};
        };

        TextMarker.prototype.changed =3D function() {
            var pos =3D this.find(), cm =3D this.doc.cm;
            if (!pos || !cm) return;
            var line =3D getLine(this.doc, pos.from.line);
            clearCachedMeasurement(cm, line);
            if (pos.from.line >=3D cm.display.showingFrom && =
pos.from.line < cm.display.showingTo) {
                for (var node =3D cm.display.lineDiv.firstChild; node; =
node =3D node.nextSibling) if (node.lineObj =3D=3D line) {
                    if (node.offsetHeight !=3D line.height) =
updateLineHeight(line, node.offsetHeight);
                    break;
                }
                runInOp(cm, function() {
                    cm.curOp.selectionChanged =3D cm.curOp.forceUpdate =
=3D cm.curOp.updateMaxLine =3D true;
                });
            }
        };

        TextMarker.prototype.attachLine =3D function(line) {
            if (!this.lines.length && this.doc.cm) {
                var op =3D this.doc.cm.curOp;
                if (!op.maybeHiddenMarkers || =
indexOf(op.maybeHiddenMarkers, this) =3D=3D -1)
                    (op.maybeUnhiddenMarkers || (op.maybeUnhiddenMarkers =
=3D [])).push(this);
            }
            this.lines.push(line);
        };
        TextMarker.prototype.detachLine =3D function(line) {
            this.lines.splice(indexOf(this.lines, line), 1);
            if (!this.lines.length && this.doc.cm) {
                var op =3D this.doc.cm.curOp;
                (op.maybeHiddenMarkers || (op.maybeHiddenMarkers =3D =
[])).push(this);
            }
        };

        function markText(doc, from, to, options, type) {
            if (options && options.shared) return markTextShared(doc, =
from, to, options, type);
            if (doc.cm && !doc.cm.curOp) return operation(doc.cm, =
markText)(doc, from, to, options, type);

            var marker =3D new TextMarker(doc, type);
            if (type =3D=3D "range" && !posLess(from, to)) return =
marker;
            if (options) copyObj(options, marker);
            if (marker.replacedWith) {
                marker.collapsed =3D true;
                marker.replacedWith =3D elt("span", =
[marker.replacedWith], "CodeMirror-widget");
                if (!options.handleMouseEvents) =
marker.replacedWith.ignoreEvents =3D true;
            }
            if (marker.collapsed) sawCollapsedSpans =3D true;

            if (marker.addToHistory)
                addToHistory(doc, {from: from, to: to, origin: =
"markText"},
                    {head: doc.sel.head, anchor: doc.sel.anchor}, NaN);

            var curLine =3D from.line, size =3D 0, collapsedAtStart, =
collapsedAtEnd, cm =3D doc.cm, updateMaxLine;
            doc.iter(curLine, to.line + 1, function(line) {
                if (cm && marker.collapsed && !cm.options.lineWrapping =
&& visualLine(doc, line) =3D=3D cm.display.maxLine)
                    updateMaxLine =3D true;
                var span =3D {from: null, to: null, marker: marker};
                size +=3D line.text.length;
                if (curLine =3D=3D from.line) {span.from =3D from.ch; =
size -=3D from.ch;}
                if (curLine =3D=3D to.line) {span.to =3D to.ch; size =
-=3D line.text.length - to.ch;}
                if (marker.collapsed) {
                    if (curLine =3D=3D to.line) collapsedAtEnd =3D =
collapsedSpanAt(line, to.ch);
                    if (curLine =3D=3D from.line) collapsedAtStart =3D =
collapsedSpanAt(line, from.ch);
                    else updateLineHeight(line, 0);
                }
                addMarkedSpan(line, span);
                ++curLine;
            });
            if (marker.collapsed) doc.iter(from.line, to.line + 1, =
function(line) {
                if (lineIsHidden(doc, line)) updateLineHeight(line, 0);
            });

            if (marker.clearOnEnter) on(marker, "beforeCursorEnter", =
function() { marker.clear(); });

            if (marker.readOnly) {
                sawReadOnlySpans =3D true;
                if (doc.history.done.length || =
doc.history.undone.length)
                    doc.clearHistory();
            }
            if (marker.collapsed) {
                if (collapsedAtStart !=3D collapsedAtEnd)
                    throw new Error("Inserting collapsed marker =
overlapping an existing one");
                marker.size =3D size;
                marker.atomic =3D true;
            }
            if (cm) {
                if (updateMaxLine) cm.curOp.updateMaxLine =3D true;
                if (marker.className || marker.title || =
marker.startStyle || marker.endStyle || marker.collapsed)
                    regChange(cm, from.line, to.line + 1);
                if (marker.atomic) reCheckSelection(cm);
            }
            return marker;
        }

        // SHARED TEXTMARKERS

        function SharedTextMarker(markers, primary) {
            this.markers =3D markers;
            this.primary =3D primary;
            for (var i =3D 0, me =3D this; i < markers.length; ++i) {
                markers[i].parent =3D this;
                on(markers[i], "clear", function(){me.clear();});
            }
        }
        CodeMirror.SharedTextMarker =3D SharedTextMarker;
        eventMixin(SharedTextMarker);

        SharedTextMarker.prototype.clear =3D function() {
            if (this.explicitlyCleared) return;
            this.explicitlyCleared =3D true;
            for (var i =3D 0; i < this.markers.length; ++i)
                this.markers[i].clear();
            signalLater(this, "clear");
        };
        SharedTextMarker.prototype.find =3D function() {
            return this.primary.find();
        };

        function markTextShared(doc, from, to, options, type) {
            options =3D copyObj(options);
            options.shared =3D false;
            var markers =3D [markText(doc, from, to, options, type)], =
primary =3D markers[0];
            var widget =3D options.replacedWith;
            linkedDocs(doc, function(doc) {
                if (widget) options.replacedWith =3D =
widget.cloneNode(true);
                markers.push(markText(doc, clipPos(doc, from), =
clipPos(doc, to), options, type));
                for (var i =3D 0; i < doc.linked.length; ++i)
                    if (doc.linked[i].isParent) return;
                primary =3D lst(markers);
            });
            return new SharedTextMarker(markers, primary);
        }

        // TEXTMARKER SPANS

        function getMarkedSpanFor(spans, marker) {
            if (spans) for (var i =3D 0; i < spans.length; ++i) {
                var span =3D spans[i];
                if (span.marker =3D=3D marker) return span;
            }
        }
        function removeMarkedSpan(spans, span) {
            for (var r, i =3D 0; i < spans.length; ++i)
                if (spans[i] !=3D span) (r || (r =3D =
[])).push(spans[i]);
            return r;
        }
        function addMarkedSpan(line, span) {
            line.markedSpans =3D line.markedSpans ? =
line.markedSpans.concat([span]) : [span];
            span.marker.attachLine(line);
        }

        function markedSpansBefore(old, startCh, isInsert) {
            if (old) for (var i =3D 0, nw; i < old.length; ++i) {
                var span =3D old[i], marker =3D span.marker;
                var startsBefore =3D span.from =3D=3D null || =
(marker.inclusiveLeft ? span.from <=3D startCh : span.from < startCh);
                if (startsBefore || marker.type =3D=3D "bookmark" && =
span.from =3D=3D startCh && (!isInsert || !span.marker.insertLeft)) {
                    var endsAfter =3D span.to =3D=3D null || =
(marker.inclusiveRight ? span.to >=3D startCh : span.to > startCh);
                    (nw || (nw =3D [])).push({from: span.from,
                        to: endsAfter ? null : span.to,
                        marker: marker});
                }
            }
            return nw;
        }

        function markedSpansAfter(old, endCh, isInsert) {
            if (old) for (var i =3D 0, nw; i < old.length; ++i) {
                var span =3D old[i], marker =3D span.marker;
                var endsAfter =3D span.to =3D=3D null || =
(marker.inclusiveRight ? span.to >=3D endCh : span.to > endCh);
                if (endsAfter || marker.type =3D=3D "bookmark" && =
span.from =3D=3D endCh && (!isInsert || span.marker.insertLeft)) {
                    var startsBefore =3D span.from =3D=3D null || =
(marker.inclusiveLeft ? span.from <=3D endCh : span.from < endCh);
                    (nw || (nw =3D [])).push({from: startsBefore ? null =
: span.from - endCh,
                        to: span.to =3D=3D null ? null : span.to - =
endCh,
                        marker: marker});
                }
            }
            return nw;
        }

        function stretchSpansOverChange(doc, change) {
            var oldFirst =3D isLine(doc, change.from.line) && =
getLine(doc, change.from.line).markedSpans;
            var oldLast =3D isLine(doc, change.to.line) && getLine(doc, =
change.to.line).markedSpans;
            if (!oldFirst && !oldLast) return null;

            var startCh =3D change.from.ch, endCh =3D change.to.ch, =
isInsert =3D posEq(change.from, change.to);
            // Get the spans that 'stick out' on both sides
            var first =3D markedSpansBefore(oldFirst, startCh, =
isInsert);
            var last =3D markedSpansAfter(oldLast, endCh, isInsert);

            // Next, merge those two ends
            var sameLine =3D change.text.length =3D=3D 1, offset =3D =
lst(change.text).length + (sameLine ? startCh : 0);
            if (first) {
                // Fix up .to properties of first
                for (var i =3D 0; i < first.length; ++i) {
                    var span =3D first[i];
                    if (span.to =3D=3D null) {
                        var found =3D getMarkedSpanFor(last, =
span.marker);
                        if (!found) span.to =3D startCh;
                        else if (sameLine) span.to =3D found.to =3D=3D =
null ? null : found.to + offset;
                    }
                }
            }
            if (last) {
                // Fix up .from in last (or move them into first in case =
of sameLine)
                for (var i =3D 0; i < last.length; ++i) {
                    var span =3D last[i];
                    if (span.to !=3D null) span.to +=3D offset;
                    if (span.from =3D=3D null) {
                        var found =3D getMarkedSpanFor(first, =
span.marker);
                        if (!found) {
                            span.from =3D offset;
                            if (sameLine) (first || (first =3D =
[])).push(span);
                        }
                    } else {
                        span.from +=3D offset;
                        if (sameLine) (first || (first =3D =
[])).push(span);
                    }
                }
            }
            if (sameLine && first) {
                // Make sure we didn't create any zero-length spans
                for (var i =3D 0; i < first.length; ++i)
                    if (first[i].from !=3D null && first[i].from =3D=3D =
first[i].to && first[i].marker.type !=3D "bookmark")
                        first.splice(i--, 1);
                if (!first.length) first =3D null;
            }

            var newMarkers =3D [first];
            if (!sameLine) {
                // Fill gap with whole-line-spans
                var gap =3D change.text.length - 2, gapMarkers;
                if (gap > 0 && first)
                    for (var i =3D 0; i < first.length; ++i)
                        if (first[i].to =3D=3D null)
                            (gapMarkers || (gapMarkers =3D =
[])).push({from: null, to: null, marker: first[i].marker});
                for (var i =3D 0; i < gap; ++i)
                    newMarkers.push(gapMarkers);
                newMarkers.push(last);
            }
            return newMarkers;
        }

        function mergeOldSpans(doc, change) {
            var old =3D getOldSpans(doc, change);
            var stretched =3D stretchSpansOverChange(doc, change);
            if (!old) return stretched;
            if (!stretched) return old;

            for (var i =3D 0; i < old.length; ++i) {
                var oldCur =3D old[i], stretchCur =3D stretched[i];
                if (oldCur && stretchCur) {
                    spans: for (var j =3D 0; j < stretchCur.length; ++j) =
{
                        var span =3D stretchCur[j];
                        for (var k =3D 0; k < oldCur.length; ++k)
                            if (oldCur[k].marker =3D=3D span.marker) =
continue spans;
                        oldCur.push(span);
                    }
                } else if (stretchCur) {
                    old[i] =3D stretchCur;
                }
            }
            return old;
        }

        function removeReadOnlyRanges(doc, from, to) {
            var markers =3D null;
            doc.iter(from.line, to.line + 1, function(line) {
                if (line.markedSpans) for (var i =3D 0; i < =
line.markedSpans.length; ++i) {
                    var mark =3D line.markedSpans[i].marker;
                    if (mark.readOnly && (!markers || indexOf(markers, =
mark) =3D=3D -1))
                        (markers || (markers =3D [])).push(mark);
                }
            });
            if (!markers) return null;
            var parts =3D [{from: from, to: to}];
            for (var i =3D 0; i < markers.length; ++i) {
                var mk =3D markers[i], m =3D mk.find();
                for (var j =3D 0; j < parts.length; ++j) {
                    var p =3D parts[j];
                    if (posLess(p.to, m.from) || posLess(m.to, p.from)) =
continue;
                    var newParts =3D [j, 1];
                    if (posLess(p.from, m.from) || !mk.inclusiveLeft && =
posEq(p.from, m.from))
                        newParts.push({from: p.from, to: m.from});
                    if (posLess(m.to, p.to) || !mk.inclusiveRight && =
posEq(p.to, m.to))
                        newParts.push({from: m.to, to: p.to});
                    parts.splice.apply(parts, newParts);
                    j +=3D newParts.length - 1;
                }
            }
            return parts;
        }

        function collapsedSpanAt(line, ch) {
            var sps =3D sawCollapsedSpans && line.markedSpans, found;
            if (sps) for (var sp, i =3D 0; i < sps.length; ++i) {
                sp =3D sps[i];
                if (!sp.marker.collapsed) continue;
                if ((sp.from =3D=3D null || sp.from < ch) &&
                    (sp.to =3D=3D null || sp.to > ch) &&
                    (!found || found.width < sp.marker.width))
                    found =3D sp.marker;
            }
            return found;
        }
        function collapsedSpanAtStart(line) { return =
collapsedSpanAt(line, -1); }
        function collapsedSpanAtEnd(line) { return collapsedSpanAt(line, =
line.text.length + 1); }

        function visualLine(doc, line) {
            var merged;
            while (merged =3D collapsedSpanAtStart(line))
                line =3D getLine(doc, merged.find().from.line);
            return line;
        }

        function lineIsHidden(doc, line) {
            var sps =3D sawCollapsedSpans && line.markedSpans;
            if (sps) for (var sp, i =3D 0; i < sps.length; ++i) {
                sp =3D sps[i];
                if (!sp.marker.collapsed) continue;
                if (sp.from =3D=3D null) return true;
                if (sp.marker.replacedWith) continue;
                if (sp.from =3D=3D 0 && sp.marker.inclusiveLeft && =
lineIsHiddenInner(doc, line, sp))
                    return true;
            }
        }
        function lineIsHiddenInner(doc, line, span) {
            if (span.to =3D=3D null) {
                var end =3D span.marker.find().to, endLine =3D =
getLine(doc, end.line);
                return lineIsHiddenInner(doc, endLine, =
getMarkedSpanFor(endLine.markedSpans, span.marker));
            }
            if (span.marker.inclusiveRight && span.to =3D=3D =
line.text.length)
                return true;
            for (var sp, i =3D 0; i < line.markedSpans.length; ++i) {
                sp =3D line.markedSpans[i];
                if (sp.marker.collapsed && !sp.marker.replacedWith && =
sp.from =3D=3D span.to &&
                    (sp.marker.inclusiveLeft || =
span.marker.inclusiveRight) &&
                    lineIsHiddenInner(doc, line, sp)) return true;
            }
        }

        function detachMarkedSpans(line) {
            var spans =3D line.markedSpans;
            if (!spans) return;
            for (var i =3D 0; i < spans.length; ++i)
                spans[i].marker.detachLine(line);
            line.markedSpans =3D null;
        }

        function attachMarkedSpans(line, spans) {
            if (!spans) return;
            for (var i =3D 0; i < spans.length; ++i)
                spans[i].marker.attachLine(line);
            line.markedSpans =3D spans;
        }

        // LINE WIDGETS

        var LineWidget =3D CodeMirror.LineWidget =3D function(cm, node, =
options) {
            if (options) for (var opt in options) if =
(options.hasOwnProperty(opt))
                this[opt] =3D options[opt];
            this.cm =3D cm;
            this.node =3D node;
        };
        eventMixin(LineWidget);
        function widgetOperation(f) {
            return function() {
                var withOp =3D !this.cm.curOp;
                if (withOp) startOperation(this.cm);
                try {var result =3D f.apply(this, arguments);}
                finally {if (withOp) endOperation(this.cm);}
                return result;
            };
        }
        LineWidget.prototype.clear =3D widgetOperation(function() {
            var ws =3D this.line.widgets, no =3D lineNo(this.line);
            if (no =3D=3D null || !ws) return;
            for (var i =3D 0; i < ws.length; ++i) if (ws[i] =3D=3D this) =
ws.splice(i--, 1);
            if (!ws.length) this.line.widgets =3D null;
            var aboveVisible =3D heightAtLine(this.cm, this.line) < =
this.cm.doc.scrollTop;
            updateLineHeight(this.line, Math.max(0, this.line.height - =
widgetHeight(this)));
            if (aboveVisible) addToScrollPos(this.cm, 0, -this.height);
            regChange(this.cm, no, no + 1);
        });
        LineWidget.prototype.changed =3D widgetOperation(function() {
            var oldH =3D this.height;
            this.height =3D null;
            var diff =3D widgetHeight(this) - oldH;
            if (!diff) return;
            updateLineHeight(this.line, this.line.height + diff);
            var no =3D lineNo(this.line);
            regChange(this.cm, no, no + 1);
        });

        function widgetHeight(widget) {
            if (widget.height !=3D null) return widget.height;
            if (!widget.node.parentNode || =
widget.node.parentNode.nodeType !=3D 1)
                removeChildrenAndAdd(widget.cm.display.measure, =
elt("div", [widget.node], null, "position: relative"));
            return widget.height =3D widget.node.offsetHeight;
        }

        function addLineWidget(cm, handle, node, options) {
            var widget =3D new LineWidget(cm, node, options);
            if (widget.noHScroll) cm.display.alignWidgets =3D true;
            changeLine(cm, handle, function(line) {
                var widgets =3D line.widgets || (line.widgets =3D []);
                if (widget.insertAt =3D=3D null) widgets.push(widget);
                else widgets.splice(Math.min(widgets.length - 1, =
Math.max(0, widget.insertAt)), 0, widget);
                widget.line =3D line;
                if (!lineIsHidden(cm.doc, line) || widget.showIfHidden) =
{
                    var aboveVisible =3D heightAtLine(cm, line) < =
cm.doc.scrollTop;
                    updateLineHeight(line, line.height + =
widgetHeight(widget));
                    if (aboveVisible) addToScrollPos(cm, 0, =
widget.height);
                }
                return true;
            });
            return widget;
        }

        // LINE DATA STRUCTURE

        // Line objects. These hold state related to a line, including
        // highlighting info (the styles array).
        var Line =3D CodeMirror.Line =3D function(text, markedSpans, =
estimateHeight) {
            this.text =3D text;
            attachMarkedSpans(this, markedSpans);
            this.height =3D estimateHeight ? estimateHeight(this) : 1;
        };
        eventMixin(Line);

        function updateLine(line, text, markedSpans, estimateHeight) {
            line.text =3D text;
            if (line.stateAfter) line.stateAfter =3D null;
            if (line.styles) line.styles =3D null;
            if (line.order !=3D null) line.order =3D null;
            detachMarkedSpans(line);
            attachMarkedSpans(line, markedSpans);
            var estHeight =3D estimateHeight ? estimateHeight(line) : 1;
            if (estHeight !=3D line.height) updateLineHeight(line, =
estHeight);
        }

        function cleanUpLine(line) {
            line.parent =3D null;
            detachMarkedSpans(line);
        }

        // Run the given mode's parser over a line, update the styles
        // array, which contains alternating fragments of text and CSS
        // classes.
        function runMode(cm, text, mode, state, f) {
            var flattenSpans =3D mode.flattenSpans;
            if (flattenSpans =3D=3D null) flattenSpans =3D =
cm.options.flattenSpans;
            var curStart =3D 0, curStyle =3D null;
            var stream =3D new StringStream(text, cm.options.tabSize), =
style;
            if (text =3D=3D "" && mode.blankLine) mode.blankLine(state);
            while (!stream.eol()) {
                if (stream.pos > cm.options.maxHighlightLength) {
                    flattenSpans =3D false;
                    // Webkit seems to refuse to render text nodes =
longer than 57444 characters
                    stream.pos =3D Math.min(text.length, stream.start + =
50000);
                    style =3D null;
                } else {
                    style =3D mode.token(stream, state);
                }
                if (!flattenSpans || curStyle !=3D style) {
                    if (curStart < stream.start) f(stream.start, =
curStyle);
                    curStart =3D stream.start; curStyle =3D style;
                }
                stream.start =3D stream.pos;
            }
            if (curStart < stream.pos) f(stream.pos, curStyle);
        }

        function highlightLine(cm, line, state) {
            // A styles array always starts with a number identifying =
the
            // mode/overlays that it is based on (for easy =
invalidation).
            var st =3D [cm.state.modeGen];
            // Compute the base array of styles
            runMode(cm, line.text, cm.doc.mode, state, function(end, =
style) {st.push(end, style);});

            // Run overlays, adjust style array.
            for (var o =3D 0; o < cm.state.overlays.length; ++o) {
                var overlay =3D cm.state.overlays[o], i =3D 1, at =3D 0;
                runMode(cm, line.text, overlay.mode, true, function(end, =
style) {
                    var start =3D i;
                    // Ensure there's a token end at the current =
position, and that i points at it
                    while (at < end) {
                        var i_end =3D st[i];
                        if (i_end > end)
                            st.splice(i, 1, end, st[i+1], i_end);
                        i +=3D 2;
                        at =3D Math.min(end, i_end);
                    }
                    if (!style) return;
                    if (overlay.opaque) {
                        st.splice(start, i - start, end, style);
                        i =3D start + 2;
                    } else {
                        for (; start < i; start +=3D 2) {
                            var cur =3D st[start+1];
                            st[start+1] =3D cur ? cur + " " + style : =
style;
                        }
                    }
                });
            }

            return st;
        }

        function getLineStyles(cm, line) {
            if (!line.styles || line.styles[0] !=3D cm.state.modeGen)
                line.styles =3D highlightLine(cm, line, line.stateAfter =
=3D getStateBefore(cm, lineNo(line)));
            return line.styles;
        }

        // Lightweight form of highlight -- proceed over this line and
        // update state, but don't save a style array.
        function processLine(cm, line, state) {
            var mode =3D cm.doc.mode;
            var stream =3D new StringStream(line.text, =
cm.options.tabSize);
            if (line.text =3D=3D "" && mode.blankLine) =
mode.blankLine(state);
            while (!stream.eol() && stream.pos <=3D =
cm.options.maxHighlightLength) {
                mode.token(stream, state);
                stream.start =3D stream.pos;
            }
        }

        var styleToClassCache =3D {};
        function styleToClass(style) {
            if (!style) return null;
            return styleToClassCache[style] ||
                (styleToClassCache[style] =3D "cm-" + style.replace(/ =
+/g, " cm-"));
        }

        function lineContent(cm, realLine, measure, copyWidgets) {
            var merged, line =3D realLine, empty =3D true;
            while (merged =3D collapsedSpanAtStart(line))
                line =3D getLine(cm.doc, merged.find().from.line);

            var builder =3D {pre: elt("pre"), col: 0, pos: 0,
                measure: null, measuredSomething: false, cm: cm,
                copyWidgets: copyWidgets};
            if (line.textClass) builder.pre.className =3D =
line.textClass;

            do {
                if (line.text) empty =3D false;
                builder.measure =3D line =3D=3D realLine && measure;
                builder.pos =3D 0;
                builder.addToken =3D builder.measure ? buildTokenMeasure =
: buildToken;
                if ((ie || webkit) && cm.getOption("lineWrapping"))
                    builder.addToken =3D =
buildTokenSplitSpaces(builder.addToken);
                var next =3D insertLineContent(line, builder, =
getLineStyles(cm, line));
                if (measure && line =3D=3D realLine && =
!builder.measuredSomething) {
                    measure[0] =3D =
builder.pre.appendChild(zeroWidthElement(cm.display.measure));
                    builder.measuredSomething =3D true;
                }
                if (next) line =3D getLine(cm.doc, next.to.line);
            } while (next);

            if (measure && !builder.measuredSomething && !measure[0])
                measure[0] =3D builder.pre.appendChild(empty ? =
elt("span", "\u00a0") : zeroWidthElement(cm.display.measure));
            if (!builder.pre.firstChild && !lineIsHidden(cm.doc, =
realLine))
                =
builder.pre.appendChild(document.createTextNode("\u00a0"));

            var order;
            // Work around problem with the reported dimensions of =
single-char
            // direction spans on IE (issue #1129). See also the comment =
in
            // cursorCoords.
            if (measure && ie && (order =3D getOrder(line))) {
                var l =3D order.length - 1;
                if (order[l].from =3D=3D order[l].to) --l;
                var last =3D order[l], prev =3D order[l - 1];
                if (last.from + 1 =3D=3D last.to && prev && last.level < =
prev.level) {
                    var span =3D measure[builder.pos - 1];
                    if (span) =
span.parentNode.insertBefore(span.measureRight =3D =
zeroWidthElement(cm.display.measure),
                        span.nextSibling);
                }
            }

            signal(cm, "renderLine", cm, realLine, builder.pre);
            return builder.pre;
        }

        var tokenSpecialChars =3D =
/[\t\u0000-\u0019\u00ad\u200b\u2028\u2029\uFEFF]/g;
        function buildToken(builder, text, style, startStyle, endStyle, =
title) {
            if (!text) return;
            if (!tokenSpecialChars.test(text)) {
                builder.col +=3D text.length;
                var content =3D document.createTextNode(text);
            } else {
                var content =3D document.createDocumentFragment(), pos =
=3D 0;
                while (true) {
                    tokenSpecialChars.lastIndex =3D pos;
                    var m =3D tokenSpecialChars.exec(text);
                    var skipped =3D m ? m.index - pos : text.length - =
pos;
                    if (skipped) {
                        =
content.appendChild(document.createTextNode(text.slice(pos, pos + =
skipped)));
                        builder.col +=3D skipped;
                    }
                    if (!m) break;
                    pos +=3D skipped + 1;
                    if (m[0] =3D=3D "\t") {
                        var tabSize =3D builder.cm.options.tabSize, =
tabWidth =3D tabSize - builder.col % tabSize;
                        content.appendChild(elt("span", =
spaceStr(tabWidth), "cm-tab"));
                        builder.col +=3D tabWidth;
                    } else {
                        var token =3D elt("span", "\u2022", =
"cm-invalidchar");
                        token.title =3D "\\u" + =
m[0].charCodeAt(0).toString(16);
                        content.appendChild(token);
                        builder.col +=3D 1;
                    }
                }
            }
            if (style || startStyle || endStyle || builder.measure) {
                var fullStyle =3D style || "";
                if (startStyle) fullStyle +=3D startStyle;
                if (endStyle) fullStyle +=3D endStyle;
                var token =3D elt("span", [content], fullStyle);
                if (title) token.title =3D title;
                return builder.pre.appendChild(token);
            }
            builder.pre.appendChild(content);
        }

        function buildTokenMeasure(builder, text, style, startStyle, =
endStyle) {
            var wrapping =3D builder.cm.options.lineWrapping;
            for (var i =3D 0; i < text.length; ++i) {
                var ch =3D text.charAt(i), start =3D i =3D=3D 0;
                if (ch >=3D "\ud800" && ch < "\udbff" && i < text.length =
- 1) {
                    ch =3D text.slice(i, i + 2);
                    ++i;
                } else if (i && wrapping && spanAffectsWrapping(text, =
i)) {
                    builder.pre.appendChild(elt("wbr"));
                }
                var old =3D builder.measure[builder.pos];
                var span =3D builder.measure[builder.pos] =3D
                    buildToken(builder, ch, style,
                            start && startStyle, i =3D=3D text.length - =
1 && endStyle);
                if (old) span.leftSide =3D old.leftSide || old;
                // In IE single-space nodes wrap differently than spaces
                // embedded in larger text nodes, except when set to
                // white-space: normal (issue #1268).
                if (ie && wrapping && ch =3D=3D " " && i && =
!/\s/.test(text.charAt(i - 1)) &&
                    i < text.length - 1 && !/\s/.test(text.charAt(i + =
1)))
                    span.style.whiteSpace =3D "normal";
                builder.pos +=3D ch.length;
            }
            if (text.length) builder.measuredSomething =3D true;
        }

        function buildTokenSplitSpaces(inner) {
            function split(old) {
                var out =3D " ";
                for (var i =3D 0; i < old.length - 2; ++i) out +=3D i % =
2 ? " " : "\u00a0";
                out +=3D " ";
                return out;
            }
            return function(builder, text, style, startStyle, endStyle, =
title) {
                return inner(builder, text.replace(/ {3,}/, split), =
style, startStyle, endStyle, title);
            };
        }

        function buildCollapsedSpan(builder, size, marker, ignoreWidget) =
{
            var widget =3D !ignoreWidget && marker.replacedWith;
            if (widget) {
                if (builder.copyWidgets) widget =3D =
widget.cloneNode(true);
                builder.pre.appendChild(widget);
                if (builder.measure) {
                    if (size) {
                        builder.measure[builder.pos] =3D widget;
                    } else {
                        var elt =3D builder.measure[builder.pos] =3D =
zeroWidthElement(builder.cm.display.measure);
                        if (marker.type !=3D "bookmark" || =
marker.insertLeft)
                            builder.pre.insertBefore(elt, widget);
                        else
                            builder.pre.appendChild(elt);
                    }
                    builder.measuredSomething =3D true;
                }
            }
            builder.pos +=3D size;
        }

        // Outputs a number of spans to make up a line, taking =
highlighting
        // and marked text into account.
        function insertLineContent(line, builder, styles) {
            var spans =3D line.markedSpans, allText =3D line.text, at =
=3D 0;
            if (!spans) {
                for (var i =3D 1; i < styles.length; i+=3D2)
                    builder.addToken(builder, allText.slice(at, at =3D =
styles[i]), styleToClass(styles[i+1]));
                return;
            }

            var len =3D allText.length, pos =3D 0, i =3D 1, text =3D "", =
style;
            var nextChange =3D 0, spanStyle, spanEndStyle, =
spanStartStyle, title, collapsed;
            for (;;) {
                if (nextChange =3D=3D pos) { // Update current marker =
set
                    spanStyle =3D spanEndStyle =3D spanStartStyle =3D =
title =3D "";
                    collapsed =3D null; nextChange =3D Infinity;
                    var foundBookmark =3D null;
                    for (var j =3D 0; j < spans.length; ++j) {
                        var sp =3D spans[j], m =3D sp.marker;
                        if (sp.from <=3D pos && (sp.to =3D=3D null || =
sp.to > pos)) {
                            if (sp.to !=3D null && nextChange > sp.to) { =
nextChange =3D sp.to; spanEndStyle =3D ""; }
                            if (m.className) spanStyle +=3D " " + =
m.className;
                            if (m.startStyle && sp.from =3D=3D pos) =
spanStartStyle +=3D " " + m.startStyle;
                            if (m.endStyle && sp.to =3D=3D nextChange) =
spanEndStyle +=3D " " + m.endStyle;
                            if (m.title && !title) title =3D m.title;
                            if (m.collapsed && (!collapsed || =
collapsed.marker.size < m.size))
                                collapsed =3D sp;
                        } else if (sp.from > pos && nextChange > =
sp.from) {
                            nextChange =3D sp.from;
                        }
                        if (m.type =3D=3D "bookmark" && sp.from =3D=3D =
pos && m.replacedWith) foundBookmark =3D m;
                    }
                    if (collapsed && (collapsed.from || 0) =3D=3D pos) {
                        buildCollapsedSpan(builder, (collapsed.to =3D=3D =
null ? len : collapsed.to) - pos,
                            collapsed.marker, collapsed.from =3D=3D =
null);
                        if (collapsed.to =3D=3D null) return =
collapsed.marker.find();
                    }
                    if (foundBookmark && !collapsed) =
buildCollapsedSpan(builder, 0, foundBookmark);
                }
                if (pos >=3D len) break;

                var upto =3D Math.min(len, nextChange);
                while (true) {
                    if (text) {
                        var end =3D pos + text.length;
                        if (!collapsed) {
                            var tokenText =3D end > upto ? text.slice(0, =
upto - pos) : text;
                            builder.addToken(builder, tokenText, style ? =
style + spanStyle : spanStyle,
                                spanStartStyle, pos + tokenText.length =
=3D=3D nextChange ? spanEndStyle : "", title);
                        }
                        if (end >=3D upto) {text =3D text.slice(upto - =
pos); pos =3D upto; break;}
                        pos =3D end;
                        spanStartStyle =3D "";
                    }
                    text =3D allText.slice(at, at =3D styles[i++]);
                    style =3D styleToClass(styles[i++]);
                }
            }
        }

        // DOCUMENT DATA STRUCTURE

        function updateDoc(doc, change, markedSpans, selAfter, =
estimateHeight) {
            function spansFor(n) {return markedSpans ? markedSpans[n] : =
null;}
            function update(line, text, spans) {
                updateLine(line, text, spans, estimateHeight);
                signalLater(line, "change", line, change);
            }

            var from =3D change.from, to =3D change.to, text =3D =
change.text;
            var firstLine =3D getLine(doc, from.line), lastLine =3D =
getLine(doc, to.line);
            var lastText =3D lst(text), lastSpans =3D =
spansFor(text.length - 1), nlines =3D to.line - from.line;

            // First adjust the line structure
            if (from.ch =3D=3D 0 && to.ch =3D=3D 0 && lastText =3D=3D =
"") {
                // This is a whole-line replace. Treated specially to =
make
                // sure line objects move the way they are supposed to.
                for (var i =3D 0, e =3D text.length - 1, added =3D []; i =
< e; ++i)
                    added.push(new Line(text[i], spansFor(i), =
estimateHeight));
                update(lastLine, lastLine.text, lastSpans);
                if (nlines) doc.remove(from.line, nlines);
                if (added.length) doc.insert(from.line, added);
            } else if (firstLine =3D=3D lastLine) {
                if (text.length =3D=3D 1) {
                    update(firstLine, firstLine.text.slice(0, from.ch) + =
lastText + firstLine.text.slice(to.ch), lastSpans);
                } else {
                    for (var added =3D [], i =3D 1, e =3D text.length - =
1; i < e; ++i)
                        added.push(new Line(text[i], spansFor(i), =
estimateHeight));
                    added.push(new Line(lastText + =
firstLine.text.slice(to.ch), lastSpans, estimateHeight));
                    update(firstLine, firstLine.text.slice(0, from.ch) + =
text[0], spansFor(0));
                    doc.insert(from.line + 1, added);
                }
            } else if (text.length =3D=3D 1) {
                update(firstLine, firstLine.text.slice(0, from.ch) + =
text[0] + lastLine.text.slice(to.ch), spansFor(0));
                doc.remove(from.line + 1, nlines);
            } else {
                update(firstLine, firstLine.text.slice(0, from.ch) + =
text[0], spansFor(0));
                update(lastLine, lastText + lastLine.text.slice(to.ch), =
lastSpans);
                for (var i =3D 1, e =3D text.length - 1, added =3D []; i =
< e; ++i)
                    added.push(new Line(text[i], spansFor(i), =
estimateHeight));
                if (nlines > 1) doc.remove(from.line + 1, nlines - 1);
                doc.insert(from.line + 1, added);
            }

            signalLater(doc, "change", doc, change);
            setSelection(doc, selAfter.anchor, selAfter.head, null, =
true);
        }

        function LeafChunk(lines) {
            this.lines =3D lines;
            this.parent =3D null;
            for (var i =3D 0, e =3D lines.length, height =3D 0; i < e; =
++i) {
                lines[i].parent =3D this;
                height +=3D lines[i].height;
            }
            this.height =3D height;
        }

        LeafChunk.prototype =3D {
            chunkSize: function() { return this.lines.length; },
            removeInner: function(at, n) {
                for (var i =3D at, e =3D at + n; i < e; ++i) {
                    var line =3D this.lines[i];
                    this.height -=3D line.height;
                    cleanUpLine(line);
                    signalLater(line, "delete");
                }
                this.lines.splice(at, n);
            },
            collapse: function(lines) {
                lines.splice.apply(lines, [lines.length, =
0].concat(this.lines));
            },
            insertInner: function(at, lines, height) {
                this.height +=3D height;
                this.lines =3D this.lines.slice(0, =
at).concat(lines).concat(this.lines.slice(at));
                for (var i =3D 0, e =3D lines.length; i < e; ++i) =
lines[i].parent =3D this;
            },
            iterN: function(at, n, op) {
                for (var e =3D at + n; at < e; ++at)
                    if (op(this.lines[at])) return true;
            }
        };

        function BranchChunk(children) {
            this.children =3D children;
            var size =3D 0, height =3D 0;
            for (var i =3D 0, e =3D children.length; i < e; ++i) {
                var ch =3D children[i];
                size +=3D ch.chunkSize(); height +=3D ch.height;
                ch.parent =3D this;
            }
            this.size =3D size;
            this.height =3D height;
            this.parent =3D null;
        }

        BranchChunk.prototype =3D {
            chunkSize: function() { return this.size; },
            removeInner: function(at, n) {
                this.size -=3D n;
                for (var i =3D 0; i < this.children.length; ++i) {
                    var child =3D this.children[i], sz =3D =
child.chunkSize();
                    if (at < sz) {
                        var rm =3D Math.min(n, sz - at), oldHeight =3D =
child.height;
                        child.removeInner(at, rm);
                        this.height -=3D oldHeight - child.height;
                        if (sz =3D=3D rm) { this.children.splice(i--, =
1); child.parent =3D null; }
                        if ((n -=3D rm) =3D=3D 0) break;
                        at =3D 0;
                    } else at -=3D sz;
                }
                if (this.size - n < 25) {
                    var lines =3D [];
                    this.collapse(lines);
                    this.children =3D [new LeafChunk(lines)];
                    this.children[0].parent =3D this;
                }
            },
            collapse: function(lines) {
                for (var i =3D 0, e =3D this.children.length; i < e; =
++i) this.children[i].collapse(lines);
            },
            insertInner: function(at, lines, height) {
                this.size +=3D lines.length;
                this.height +=3D height;
                for (var i =3D 0, e =3D this.children.length; i < e; =
++i) {
                    var child =3D this.children[i], sz =3D =
child.chunkSize();
                    if (at <=3D sz) {
                        child.insertInner(at, lines, height);
                        if (child.lines && child.lines.length > 50) {
                            while (child.lines.length > 50) {
                                var spilled =3D =
child.lines.splice(child.lines.length - 25, 25);
                                var newleaf =3D new LeafChunk(spilled);
                                child.height -=3D newleaf.height;
                                this.children.splice(i + 1, 0, newleaf);
                                newleaf.parent =3D this;
                            }
                            this.maybeSpill();
                        }
                        break;
                    }
                    at -=3D sz;
                }
            },
            maybeSpill: function() {
                if (this.children.length <=3D 10) return;
                var me =3D this;
                do {
                    var spilled =3D =
me.children.splice(me.children.length - 5, 5);
                    var sibling =3D new BranchChunk(spilled);
                    if (!me.parent) { // Become the parent node
                        var copy =3D new BranchChunk(me.children);
                        copy.parent =3D me;
                        me.children =3D [copy, sibling];
                        me =3D copy;
                    } else {
                        me.size -=3D sibling.size;
                        me.height -=3D sibling.height;
                        var myIndex =3D indexOf(me.parent.children, me);
                        me.parent.children.splice(myIndex + 1, 0, =
sibling);
                    }
                    sibling.parent =3D me.parent;
                } while (me.children.length > 10);
                me.parent.maybeSpill();
            },
            iterN: function(at, n, op) {
                for (var i =3D 0, e =3D this.children.length; i < e; =
++i) {
                    var child =3D this.children[i], sz =3D =
child.chunkSize();
                    if (at < sz) {
                        var used =3D Math.min(n, sz - at);
                        if (child.iterN(at, used, op)) return true;
                        if ((n -=3D used) =3D=3D 0) break;
                        at =3D 0;
                    } else at -=3D sz;
                }
            }
        };

        var nextDocId =3D 0;
        var Doc =3D CodeMirror.Doc =3D function(text, mode, firstLine) {
            if (!(this instanceof Doc)) return new Doc(text, mode, =
firstLine);
            if (firstLine =3D=3D null) firstLine =3D 0;

            BranchChunk.call(this, [new LeafChunk([new Line("", =
null)])]);
            this.first =3D firstLine;
            this.scrollTop =3D this.scrollLeft =3D 0;
            this.cantEdit =3D false;
            this.history =3D makeHistory();
            this.cleanGeneration =3D 1;
            this.frontier =3D firstLine;
            var start =3D Pos(firstLine, 0);
            this.sel =3D {from: start, to: start, head: start, anchor: =
start, shift: false, extend: false, goalColumn: null};
            this.id =3D ++nextDocId;
            this.modeOption =3D mode;

            if (typeof text =3D=3D "string") text =3D splitLines(text);
            updateDoc(this, {from: start, to: start, text: text}, null, =
{head: start, anchor: start});
        };

        Doc.prototype =3D createObj(BranchChunk.prototype, {
            constructor: Doc,
            iter: function(from, to, op) {
                if (op) this.iterN(from - this.first, to - from, op);
                else this.iterN(this.first, this.first + this.size, =
from);
            },

            insert: function(at, lines) {
                var height =3D 0;
                for (var i =3D 0, e =3D lines.length; i < e; ++i) height =
+=3D lines[i].height;
                this.insertInner(at - this.first, lines, height);
            },
            remove: function(at, n) { this.removeInner(at - this.first, =
n); },

            getValue: function(lineSep) {
                var lines =3D getLines(this, this.first, this.first + =
this.size);
                if (lineSep =3D=3D=3D false) return lines;
                return lines.join(lineSep || "\n");
            },
            setValue: function(code) {
                var top =3D Pos(this.first, 0), last =3D this.first + =
this.size - 1;
                makeChange(this, {from: top, to: Pos(last, getLine(this, =
last).text.length),
                        text: splitLines(code), origin: "setValue"},
                    {head: top, anchor: top}, true);
            },
            replaceRange: function(code, from, to, origin) {
                from =3D clipPos(this, from);
                to =3D to ? clipPos(this, to) : from;
                replaceRange(this, code, from, to, origin);
            },
            getRange: function(from, to, lineSep) {
                var lines =3D getBetween(this, clipPos(this, from), =
clipPos(this, to));
                if (lineSep =3D=3D=3D false) return lines;
                return lines.join(lineSep || "\n");
            },

            getLine: function(line) {var l =3D this.getLineHandle(line); =
return l && l.text;},
            setLine: function(line, text) {
                if (isLine(this, line))
                    replaceRange(this, text, Pos(line, 0), clipPos(this, =
Pos(line)));
            },
            removeLine: function(line) {
                if (line) replaceRange(this, "", clipPos(this, Pos(line =
- 1)), clipPos(this, Pos(line)));
                else replaceRange(this, "", Pos(0, 0), clipPos(this, =
Pos(1, 0)));
            },

            getLineHandle: function(line) {if (isLine(this, line)) =
return getLine(this, line);},
            getLineNumber: function(line) {return lineNo(line);},

            getLineHandleVisualStart: function(line) {
                if (typeof line =3D=3D "number") line =3D getLine(this, =
line);
                return visualLine(this, line);
            },

            lineCount: function() {return this.size;},
            firstLine: function() {return this.first;},
            lastLine: function() {return this.first + this.size - 1;},

            clipPos: function(pos) {return clipPos(this, pos);},

            getCursor: function(start) {
                var sel =3D this.sel, pos;
                if (start =3D=3D null || start =3D=3D "head") pos =3D =
sel.head;
                else if (start =3D=3D "anchor") pos =3D sel.anchor;
                else if (start =3D=3D "end" || start =3D=3D=3D false) =
pos =3D sel.to;
                else pos =3D sel.from;
                return copyPos(pos);
            },
            somethingSelected: function() {return !posEq(this.sel.head, =
this.sel.anchor);},

            setCursor: docOperation(function(line, ch, extend) {
                var pos =3D clipPos(this, typeof line =3D=3D "number" ? =
Pos(line, ch || 0) : line);
                if (extend) extendSelection(this, pos);
                else setSelection(this, pos, pos);
            }),
            setSelection: docOperation(function(anchor, head) {
                setSelection(this, clipPos(this, anchor), clipPos(this, =
head || anchor));
            }),
            extendSelection: docOperation(function(from, to) {
                extendSelection(this, clipPos(this, from), to && =
clipPos(this, to));
            }),

            getSelection: function(lineSep) {return =
this.getRange(this.sel.from, this.sel.to, lineSep);},
            replaceSelection: function(code, collapse, origin) {
                makeChange(this, {from: this.sel.from, to: this.sel.to, =
text: splitLines(code), origin: origin}, collapse || "around");
            },
            undo: docOperation(function() {makeChangeFromHistory(this, =
"undo");}),
            redo: docOperation(function() {makeChangeFromHistory(this, =
"redo");}),

            setExtending: function(val) {this.sel.extend =3D val;},

            historySize: function() {
                var hist =3D this.history;
                return {undo: hist.done.length, redo: =
hist.undone.length};
            },
            clearHistory: function() {this.history =3D =
makeHistory(this.history.maxGeneration);},

            markClean: function() {
                this.cleanGeneration =3D this.changeGeneration();
            },
            changeGeneration: function() {
                this.history.lastOp =3D this.history.lastOrigin =3D =
null;
                return this.history.generation;
            },
            isClean: function (gen) {
                return this.history.generation =3D=3D (gen || =
this.cleanGeneration);
            },

            getHistory: function() {
                return {done: copyHistoryArray(this.history.done),
                    undone: copyHistoryArray(this.history.undone)};
            },
            setHistory: function(histData) {
                var hist =3D this.history =3D =
makeHistory(this.history.maxGeneration);
                hist.done =3D histData.done.slice(0);
                hist.undone =3D histData.undone.slice(0);
            },

            markText: function(from, to, options) {
                return markText(this, clipPos(this, from), clipPos(this, =
to), options, "range");
            },
            setBookmark: function(pos, options) {
                var realOpts =3D {replacedWith: options && =
(options.nodeType =3D=3D null ? options.widget : options),
                    insertLeft: options && options.insertLeft};
                pos =3D clipPos(this, pos);
                return markText(this, pos, pos, realOpts, "bookmark");
            },
            findMarksAt: function(pos) {
                pos =3D clipPos(this, pos);
                var markers =3D [], spans =3D getLine(this, =
pos.line).markedSpans;
                if (spans) for (var i =3D 0; i < spans.length; ++i) {
                    var span =3D spans[i];
                    if ((span.from =3D=3D null || span.from <=3D pos.ch) =
&&
                        (span.to =3D=3D null || span.to >=3D pos.ch))
                        markers.push(span.marker.parent || span.marker);
                }
                return markers;
            },
            getAllMarks: function() {
                var markers =3D [];
                this.iter(function(line) {
                    var sps =3D line.markedSpans;
                    if (sps) for (var i =3D 0; i < sps.length; ++i)
                        if (sps[i].from !=3D null) =
markers.push(sps[i].marker);
                });
                return markers;
            },

            posFromIndex: function(off) {
                var ch, lineNo =3D this.first;
                this.iter(function(line) {
                    var sz =3D line.text.length + 1;
                    if (sz > off) { ch =3D off; return true; }
                    off -=3D sz;
                    ++lineNo;
                });
                return clipPos(this, Pos(lineNo, ch));
            },
            indexFromPos: function (coords) {
                coords =3D clipPos(this, coords);
                var index =3D coords.ch;
                if (coords.line < this.first || coords.ch < 0) return 0;
                this.iter(this.first, coords.line, function (line) {
                    index +=3D line.text.length + 1;
                });
                return index;
            },

            copy: function(copyHistory) {
                var doc =3D new Doc(getLines(this, this.first, =
this.first + this.size), this.modeOption, this.first);
                doc.scrollTop =3D this.scrollTop; doc.scrollLeft =3D =
this.scrollLeft;
                doc.sel =3D {from: this.sel.from, to: this.sel.to, head: =
this.sel.head, anchor: this.sel.anchor,
                    shift: this.sel.shift, extend: false, goalColumn: =
this.sel.goalColumn};
                if (copyHistory) {
                    doc.history.undoDepth =3D this.history.undoDepth;
                    doc.setHistory(this.getHistory());
                }
                return doc;
            },

            linkedDoc: function(options) {
                if (!options) options =3D {};
                var from =3D this.first, to =3D this.first + this.size;
                if (options.from !=3D null && options.from > from) from =
=3D options.from;
                if (options.to !=3D null && options.to < to) to =3D =
options.to;
                var copy =3D new Doc(getLines(this, from, to), =
options.mode || this.modeOption, from);
                if (options.sharedHist) copy.history =3D this.history;
                (this.linked || (this.linked =3D [])).push({doc: copy, =
sharedHist: options.sharedHist});
                copy.linked =3D [{doc: this, isParent: true, sharedHist: =
options.sharedHist}];
                return copy;
            },
            unlinkDoc: function(other) {
                if (other instanceof CodeMirror) other =3D other.doc;
                if (this.linked) for (var i =3D 0; i < =
this.linked.length; ++i) {
                    var link =3D this.linked[i];
                    if (link.doc !=3D other) continue;
                    this.linked.splice(i, 1);
                    other.unlinkDoc(this);
                    break;
                }
                // If the histories were shared, split them again
                if (other.history =3D=3D this.history) {
                    var splitIds =3D [other.id];
                    linkedDocs(other, function(doc) =
{splitIds.push(doc.id);}, true);
                    other.history =3D makeHistory();
                    other.history.done =3D =
copyHistoryArray(this.history.done, splitIds);
                    other.history.undone =3D =
copyHistoryArray(this.history.undone, splitIds);
                }
            },
            iterLinkedDocs: function(f) {linkedDocs(this, f);},

            getMode: function() {return this.mode;},
            getEditor: function() {return this.cm;}
        });

        Doc.prototype.eachLine =3D Doc.prototype.iter;

        // The Doc methods that should be available on CodeMirror =
instances
        var dontDelegate =3D "iter insert remove copy getEditor".split(" =
");
        for (var prop in Doc.prototype) if =
(Doc.prototype.hasOwnProperty(prop) && indexOf(dontDelegate, prop) < 0)
            CodeMirror.prototype[prop] =3D (function(method) {
                return function() {return method.apply(this.doc, =
arguments);};
            })(Doc.prototype[prop]);

        eventMixin(Doc);

        function linkedDocs(doc, f, sharedHistOnly) {
            function propagate(doc, skip, sharedHist) {
                if (doc.linked) for (var i =3D 0; i < doc.linked.length; =
++i) {
                    var rel =3D doc.linked[i];
                    if (rel.doc =3D=3D skip) continue;
                    var shared =3D sharedHist && rel.sharedHist;
                    if (sharedHistOnly && !shared) continue;
                    f(rel.doc, shared);
                    propagate(rel.doc, doc, shared);
                }
            }
            propagate(doc, null, true);
        }

        function attachDoc(cm, doc) {
            if (doc.cm) throw new Error("This document is already in =
use.");
            cm.doc =3D doc;
            doc.cm =3D cm;
            estimateLineHeights(cm);
            loadMode(cm);
            if (!cm.options.lineWrapping) computeMaxLength(cm);
            cm.options.mode =3D doc.modeOption;
            regChange(cm);
        }

        // LINE UTILITIES

        function getLine(chunk, n) {
            n -=3D chunk.first;
            while (!chunk.lines) {
                for (var i =3D 0;; ++i) {
                    var child =3D chunk.children[i], sz =3D =
child.chunkSize();
                    if (n < sz) { chunk =3D child; break; }
                    n -=3D sz;
                }
            }
            return chunk.lines[n];
        }

        function getBetween(doc, start, end) {
            var out =3D [], n =3D start.line;
            doc.iter(start.line, end.line + 1, function(line) {
                var text =3D line.text;
                if (n =3D=3D end.line) text =3D text.slice(0, end.ch);
                if (n =3D=3D start.line) text =3D text.slice(start.ch);
                out.push(text);
                ++n;
            });
            return out;
        }
        function getLines(doc, from, to) {
            var out =3D [];
            doc.iter(from, to, function(line) { out.push(line.text); });
            return out;
        }

        function updateLineHeight(line, height) {
            var diff =3D height - line.height;
            for (var n =3D line; n; n =3D n.parent) n.height +=3D diff;
        }

        function lineNo(line) {
            if (line.parent =3D=3D null) return null;
            var cur =3D line.parent, no =3D indexOf(cur.lines, line);
            for (var chunk =3D cur.parent; chunk; cur =3D chunk, chunk =
=3D chunk.parent) {
                for (var i =3D 0;; ++i) {
                    if (chunk.children[i] =3D=3D cur) break;
                    no +=3D chunk.children[i].chunkSize();
                }
            }
            return no + cur.first;
        }

        function lineAtHeight(chunk, h) {
            var n =3D chunk.first;
            outer: do {
                for (var i =3D 0, e =3D chunk.children.length; i < e; =
++i) {
                    var child =3D chunk.children[i], ch =3D =
child.height;
                    if (h < ch) { chunk =3D child; continue outer; }
                    h -=3D ch;
                    n +=3D child.chunkSize();
                }
                return n;
            } while (!chunk.lines);
            for (var i =3D 0, e =3D chunk.lines.length; i < e; ++i) {
                var line =3D chunk.lines[i], lh =3D line.height;
                if (h < lh) break;
                h -=3D lh;
            }
            return n + i;
        }

        function heightAtLine(cm, lineObj) {
            lineObj =3D visualLine(cm.doc, lineObj);

            var h =3D 0, chunk =3D lineObj.parent;
            for (var i =3D 0; i < chunk.lines.length; ++i) {
                var line =3D chunk.lines[i];
                if (line =3D=3D lineObj) break;
                else h +=3D line.height;
            }
            for (var p =3D chunk.parent; p; chunk =3D p, p =3D =
chunk.parent) {
                for (var i =3D 0; i < p.children.length; ++i) {
                    var cur =3D p.children[i];
                    if (cur =3D=3D chunk) break;
                    else h +=3D cur.height;
                }
            }
            return h;
        }

        function getOrder(line) {
            var order =3D line.order;
            if (order =3D=3D null) order =3D line.order =3D =
bidiOrdering(line.text);
            return order;
        }

        // HISTORY

        function makeHistory(startGen) {
            return {
                // Arrays of history events. Doing something adds an =
event to
                // done and clears undo. Undoing moves events from done =
to
                // undone, redoing moves them in the other direction.
                done: [], undone: [], undoDepth: Infinity,
                // Used to track when changes can be merged into a =
single undo
                // event
                lastTime: 0, lastOp: null, lastOrigin: null,
                // Used by the isClean() method
                generation: startGen || 1, maxGeneration: startGen || 1
            };
        }

        function attachLocalSpans(doc, change, from, to) {
            var existing =3D change["spans_" + doc.id], n =3D 0;
            doc.iter(Math.max(doc.first, from), Math.min(doc.first + =
doc.size, to), function(line) {
                if (line.markedSpans)
                    (existing || (existing =3D change["spans_" + doc.id] =
=3D {}))[n] =3D line.markedSpans;
                ++n;
            });
        }

        function historyChangeFromChange(doc, change) {
            var from =3D { line: change.from.line, ch: change.from.ch };
            var histChange =3D {from: from, to: changeEnd(change), text: =
getBetween(doc, change.from, change.to)};
            attachLocalSpans(doc, histChange, change.from.line, =
change.to.line + 1);
            linkedDocs(doc, function(doc) {attachLocalSpans(doc, =
histChange, change.from.line, change.to.line + 1);}, true);
            return histChange;
        }

        function addToHistory(doc, change, selAfter, opId) {
            var hist =3D doc.history;
            hist.undone.length =3D 0;
            var time =3D +new Date, cur =3D lst(hist.done);

            if (cur &&
                (hist.lastOp =3D=3D opId ||
                    hist.lastOrigin =3D=3D change.origin && =
change.origin &&
                    ((change.origin.charAt(0) =3D=3D "+" && doc.cm && =
hist.lastTime > time - doc.cm.options.historyEventDelay) ||
                        change.origin.charAt(0) =3D=3D "*"))) {
                // Merge this change into the last event
                var last =3D lst(cur.changes);
                if (posEq(change.from, change.to) && posEq(change.from, =
last.to)) {
                    // Optimized case for simple insertion -- don't want =
to add
                    // new changesets for every character typed
                    last.to =3D changeEnd(change);
                } else {
                    // Add new sub-event
                    cur.changes.push(historyChangeFromChange(doc, =
change));
                }
                cur.anchorAfter =3D selAfter.anchor; cur.headAfter =3D =
selAfter.head;
            } else {
                // Can not be merged, start a new event.
                cur =3D {changes: [historyChangeFromChange(doc, =
change)],
                    generation: hist.generation,
                    anchorBefore: doc.sel.anchor, headBefore: =
doc.sel.head,
                    anchorAfter: selAfter.anchor, headAfter: =
selAfter.head};
                hist.done.push(cur);
                hist.generation =3D ++hist.maxGeneration;
                while (hist.done.length > hist.undoDepth)
                    hist.done.shift();
            }
            hist.lastTime =3D time;
            hist.lastOp =3D opId;
            hist.lastOrigin =3D change.origin;
        }

        function removeClearedSpans(spans) {
            if (!spans) return null;
            for (var i =3D 0, out; i < spans.length; ++i) {
                if (spans[i].marker.explicitlyCleared) { if (!out) out =
=3D spans.slice(0, i); }
                else if (out) out.push(spans[i]);
            }
            return !out ? spans : out.length ? out : null;
        }

        function getOldSpans(doc, change) {
            var found =3D change["spans_" + doc.id];
            if (!found) return null;
            for (var i =3D 0, nw =3D []; i < change.text.length; ++i)
                nw.push(removeClearedSpans(found[i]));
            return nw;
        }

        // Used both to provide a JSON-safe object in .getHistory, and, =
when
        // detaching a document, to split the history in two
        function copyHistoryArray(events, newGroup) {
            for (var i =3D 0, copy =3D []; i < events.length; ++i) {
                var event =3D events[i], changes =3D event.changes, =
newChanges =3D [];
                copy.push({changes: newChanges, anchorBefore: =
event.anchorBefore, headBefore: event.headBefore,
                    anchorAfter: event.anchorAfter, headAfter: =
event.headAfter});
                for (var j =3D 0; j < changes.length; ++j) {
                    var change =3D changes[j], m;
                    newChanges.push({from: change.from, to: change.to, =
text: change.text});
                    if (newGroup) for (var prop in change) if (m =3D =
prop.match(/^spans_(\d+)$/)) {
                        if (indexOf(newGroup, Number(m[1])) > -1) {
                            lst(newChanges)[prop] =3D change[prop];
                            delete change[prop];
                        }
                    }
                }
            }
            return copy;
        }

        // Rebasing/resetting history to deal with externally-sourced =
changes

        function rebaseHistSel(pos, from, to, diff) {
            if (to < pos.line) {
                pos.line +=3D diff;
            } else if (from < pos.line) {
                pos.line =3D from;
                pos.ch =3D 0;
            }
        }

        // Tries to rebase an array of history events given a change in =
the
        // document. If the change touches the same lines as the event, =
the
        // event, and everything 'behind' it, is discarded. If the =
change is
        // before the event, the event's positions are updated. Uses a
        // copy-on-write scheme for the positions, to avoid having to
        // reallocate them all on every rebase, but also avoid problems =
with
        // shared position objects being unsafely updated.
        function rebaseHistArray(array, from, to, diff) {
            for (var i =3D 0; i < array.length; ++i) {
                var sub =3D array[i], ok =3D true;
                for (var j =3D 0; j < sub.changes.length; ++j) {
                    var cur =3D sub.changes[j];
                    if (!sub.copied) { cur.from =3D copyPos(cur.from); =
cur.to =3D copyPos(cur.to); }
                    if (to < cur.from.line) {
                        cur.from.line +=3D diff;
                        cur.to.line +=3D diff;
                    } else if (from <=3D cur.to.line) {
                        ok =3D false;
                        break;
                    }
                }
                if (!sub.copied) {
                    sub.anchorBefore =3D copyPos(sub.anchorBefore); =
sub.headBefore =3D copyPos(sub.headBefore);
                    sub.anchorAfter =3D copyPos(sub.anchorAfter); =
sub.readAfter =3D copyPos(sub.headAfter);
                    sub.copied =3D true;
                }
                if (!ok) {
                    array.splice(0, i + 1);
                    i =3D 0;
                } else {
                    rebaseHistSel(sub.anchorBefore); =
rebaseHistSel(sub.headBefore);
                    rebaseHistSel(sub.anchorAfter); =
rebaseHistSel(sub.headAfter);
                }
            }
        }

        function rebaseHist(hist, change) {
            var from =3D change.from.line, to =3D change.to.line, diff =
=3D change.text.length - (to - from) - 1;
            rebaseHistArray(hist.done, from, to, diff);
            rebaseHistArray(hist.undone, from, to, diff);
        }

        // EVENT OPERATORS

        function stopMethod() {e_stop(this);}
        // Ensure an event has a stop method.
        function addStop(event) {
            if (!event.stop) event.stop =3D stopMethod;
            return event;
        }

        function e_preventDefault(e) {
            if (e.preventDefault) e.preventDefault();
            else e.returnValue =3D false;
        }
        function e_stopPropagation(e) {
            if (e.stopPropagation) e.stopPropagation();
            else e.cancelBubble =3D true;
        }
        function e_defaultPrevented(e) {
            return e.defaultPrevented !=3D null ? e.defaultPrevented : =
e.returnValue =3D=3D false;
        }
        function e_stop(e) {e_preventDefault(e); e_stopPropagation(e);}
        CodeMirror.e_stop =3D e_stop;
        CodeMirror.e_preventDefault =3D e_preventDefault;
        CodeMirror.e_stopPropagation =3D e_stopPropagation;

        function e_target(e) {return e.target || e.srcElement;}
        function e_button(e) {
            var b =3D e.which;
            if (b =3D=3D null) {
                if (e.button & 1) b =3D 1;
                else if (e.button & 2) b =3D 3;
                else if (e.button & 4) b =3D 2;
            }
            if (mac && e.ctrlKey && b =3D=3D 1) b =3D 3;
            return b;
        }

        // EVENT HANDLING

        function on(emitter, type, f) {
            if (emitter.addEventListener)
                emitter.addEventListener(type, f, false);
            else if (emitter.attachEvent)
                emitter.attachEvent("on" + type, f);
            else {
                var map =3D emitter._handlers || (emitter._handlers =3D =
{});
                var arr =3D map[type] || (map[type] =3D []);
                arr.push(f);
            }
        }

        function off(emitter, type, f) {
            if (emitter.removeEventListener)
                emitter.removeEventListener(type, f, false);
            else if (emitter.detachEvent)
                emitter.detachEvent("on" + type, f);
            else {
                var arr =3D emitter._handlers && =
emitter._handlers[type];
                if (!arr) return;
                for (var i =3D 0; i < arr.length; ++i)
                    if (arr[i] =3D=3D f) { arr.splice(i, 1); break; }
            }
        }

        function signal(emitter, type /*, values...*/) {
            var arr =3D emitter._handlers && emitter._handlers[type];
            if (!arr) return;
            var args =3D Array.prototype.slice.call(arguments, 2);
            for (var i =3D 0; i < arr.length; ++i) arr[i].apply(null, =
args);
        }

        var delayedCallbacks, delayedCallbackDepth =3D 0;
        function signalLater(emitter, type /*, values...*/) {
            var arr =3D emitter._handlers && emitter._handlers[type];
            if (!arr) return;
            var args =3D Array.prototype.slice.call(arguments, 2);
            if (!delayedCallbacks) {
                ++delayedCallbackDepth;
                delayedCallbacks =3D [];
                setTimeout(fireDelayed, 0);
            }
            function bnd(f) {return function(){f.apply(null, args);};};
            for (var i =3D 0; i < arr.length; ++i)
                delayedCallbacks.push(bnd(arr[i]));
        }

        function signalDOMEvent(cm, e, override) {
            signal(cm, override || e.type, cm, e);
            return e_defaultPrevented(e) || e.codemirrorIgnore;
        }

        function fireDelayed() {
            --delayedCallbackDepth;
            var delayed =3D delayedCallbacks;
            delayedCallbacks =3D null;
            for (var i =3D 0; i < delayed.length; ++i) delayed[i]();
        }

        function hasHandler(emitter, type) {
            var arr =3D emitter._handlers && emitter._handlers[type];
            return arr && arr.length > 0;
        }

        CodeMirror.on =3D on; CodeMirror.off =3D off; CodeMirror.signal =
=3D signal;

        function eventMixin(ctor) {
            ctor.prototype.on =3D function(type, f) {on(this, type, =
f);};
            ctor.prototype.off =3D function(type, f) {off(this, type, =
f);};
        }

        // MISC UTILITIES

        // Number of pixels added to scroller and sizer to hide =
scrollbar
        var scrollerCutOff =3D 30;

        // Returned or thrown by various protocols to signal 'I'm not
        // handling this'.
        var Pass =3D CodeMirror.Pass =3D {toString: function(){return =
"CodeMirror.Pass";}};

        function Delayed() {this.id =3D null;}
        Delayed.prototype =3D {set: function(ms, f) =
{clearTimeout(this.id); this.id =3D setTimeout(f, ms);}};

        // Counts the column offset in a string, taking tabs into =
account.
        // Used mostly to find indentation.
        function countColumn(string, end, tabSize, startIndex, =
startValue) {
            if (end =3D=3D null) {
                end =3D string.search(/[^\s\u00a0]/);
                if (end =3D=3D -1) end =3D string.length;
            }
            for (var i =3D startIndex || 0, n =3D startValue || 0; i < =
end; ++i) {
                if (string.charAt(i) =3D=3D "\t") n +=3D tabSize - (n % =
tabSize);
                else ++n;
            }
            return n;
        }
        CodeMirror.countColumn =3D countColumn;

        var spaceStrs =3D [""];
        function spaceStr(n) {
            while (spaceStrs.length <=3D n)
                spaceStrs.push(lst(spaceStrs) + " ");
            return spaceStrs[n];
        }

        function lst(arr) { return arr[arr.length-1]; }

        function selectInput(node) {
            if (ios) { // Mobile Safari apparently has a bug where =
select() is broken.
                node.selectionStart =3D 0;
                node.selectionEnd =3D node.value.length;
            } else {
                // Suppress mysterious IE10 errors
                try { node.select(); }
                catch(_e) {}
            }
        }

        function indexOf(collection, elt) {
            if (collection.indexOf) return collection.indexOf(elt);
            for (var i =3D 0, e =3D collection.length; i < e; ++i)
                if (collection[i] =3D=3D elt) return i;
            return -1;
        }

        function createObj(base, props) {
            function Obj() {}
            Obj.prototype =3D base;
            var inst =3D new Obj();
            if (props) copyObj(props, inst);
            return inst;
        }

        function copyObj(obj, target) {
            if (!target) target =3D {};
            for (var prop in obj) if (obj.hasOwnProperty(prop)) =
target[prop] =3D obj[prop];
            return target;
        }

        function emptyArray(size) {
            for (var a =3D [], i =3D 0; i < size; ++i) =
a.push(undefined);
            return a;
        }

        function bind(f) {
            var args =3D Array.prototype.slice.call(arguments, 1);
            return function(){return f.apply(null, args);};
        }

        var nonASCIISingleCaseWordChar =3D =
/[\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;
        function isWordChar(ch) {
            return /\w/.test(ch) || ch > "\x80" &&
                (ch.toUpperCase() !=3D ch.toLowerCase() || =
nonASCIISingleCaseWordChar.test(ch));
        }

        function isEmpty(obj) {
            for (var n in obj) if (obj.hasOwnProperty(n) && obj[n]) =
return false;
            return true;
        }

        var isExtendingChar =3D =
/[\u0300-\u036F\u0483-\u0487\u0488-\u0489\u0591-\u05BD\u05BF\u05C1-\u05C2=
\u05C4-\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u=
06E4\u06E7-\u06E8\u06EA-\u06ED\uA66F\uA670-\uA672\uA674-\uA67D\uA69F\udc0=
0-\udfff]/;

        // DOM UTILITIES

        function elt(tag, content, className, style) {
            var e =3D document.createElement(tag);
            if (className) e.className =3D className;
            if (style) e.style.cssText =3D style;
            if (typeof content =3D=3D "string") setTextContent(e, =
content);
            else if (content) for (var i =3D 0; i < content.length; ++i) =
e.appendChild(content[i]);
            return e;
        }

        function removeChildren(e) {
            for (var count =3D e.childNodes.length; count > 0; --count)
                e.removeChild(e.firstChild);
            return e;
        }

        function removeChildrenAndAdd(parent, e) {
            return removeChildren(parent).appendChild(e);
        }

        function setTextContent(e, str) {
            if (ie_lt9) {
                e.innerHTML =3D "";
                e.appendChild(document.createTextNode(str));
            } else e.textContent =3D str;
        }

        function getRect(node) {
            return node.getBoundingClientRect();
        }
        CodeMirror.replaceGetRect =3D function(f) { getRect =3D f; };

        // FEATURE DETECTION

        // Detect drag-and-drop
        var dragAndDrop =3D function() {
            // There is *some* kind of drag-and-drop support in IE6-8, =
but I
            // couldn't get it to work yet.
            if (ie_lt9) return false;
            var div =3D elt('div');
            return "draggable" in div || "dragDrop" in div;
        }();

        // For a reason I have yet to figure out, some browsers disallow
        // word wrapping between certain characters *only* if a new =
inline
        // element is started between them. This makes it hard to =
reliably
        // measure the position of things, since that requires inserting =
an
        // extra span. This terribly fragile set of tests matches the
        // character combinations that suffer from this phenomenon on =
the
        // various browsers.
        function spanAffectsWrapping() { return false; }
        if (gecko) // Only for "$'"
            spanAffectsWrapping =3D function(str, i) {
                return str.charCodeAt(i - 1) =3D=3D 36 && =
str.charCodeAt(i) =3D=3D 39;
            };
        else if (safari && =
!/Version\/([6-9]|\d\d)\b/.test(navigator.userAgent))
            spanAffectsWrapping =3D function(str, i) {
                return /\-[^ \-?]|\?[^ =
!\'\"\),.\-\/:;\?\]\}]/.test(str.slice(i - 1, i + 1));
            };
        else if (webkit && =
!/Chrome\/(?:29|[3-9]\d|\d\d\d)\./.test(navigator.userAgent))
            spanAffectsWrapping =3D function(str, i) {
                if (i > 1 && str.charCodeAt(i - 1) =3D=3D 45) {
                    if (/\w/.test(str.charAt(i - 2)) && =
/[^\-?\.]/.test(str.charAt(i))) return true;
                    if (i > 2 && /[\d\.,]/.test(str.charAt(i - 2)) && =
/[\d\.,]/.test(str.charAt(i))) return false;
                }
                return =
/[~!#%&*)=3D+}\]|\"\.>,:;][({[<]|-[^\-?\.\u2010-\u201f\u2026]|\?[\w~`@#$%=
\^&*(_=3D+{[|><]|=E2=80=A6[\w~`@#$%\^&*(_=3D+{[><]/.test(str.slice(i - =
1, i + 1));
            };

        var knownScrollbarWidth;
        function scrollbarWidth(measure) {
            if (knownScrollbarWidth !=3D null) return =
knownScrollbarWidth;
            var test =3D elt("div", null, null, "width: 50px; height: =
50px; overflow-x: scroll");
            removeChildrenAndAdd(measure, test);
            if (test.offsetWidth)
                knownScrollbarWidth =3D test.offsetHeight - =
test.clientHeight;
            return knownScrollbarWidth || 0;
        }

        var zwspSupported;
        function zeroWidthElement(measure) {
            if (zwspSupported =3D=3D null) {
                var test =3D elt("span", "\u200b");
                removeChildrenAndAdd(measure, elt("span", [test, =
document.createTextNode("x")]));
                if (measure.firstChild.offsetHeight !=3D 0)
                    zwspSupported =3D test.offsetWidth <=3D 1 && =
test.offsetHeight > 2 && !ie_lt8;
            }
            if (zwspSupported) return elt("span", "\u200b");
            else return elt("span", "\u00a0", null, "display: =
inline-block; width: 1px; margin-right: -1px");
        }

        // See if "".split is the broken IE version, if so, provide an
        // alternative way to split lines.
        var splitLines =3D "\n\nb".split(/\n/).length !=3D 3 ? =
function(string) {
            var pos =3D 0, result =3D [], l =3D string.length;
            while (pos <=3D l) {
                var nl =3D string.indexOf("\n", pos);
                if (nl =3D=3D -1) nl =3D string.length;
                var line =3D string.slice(pos, string.charAt(nl - 1) =
=3D=3D "\r" ? nl - 1 : nl);
                var rt =3D line.indexOf("\r");
                if (rt !=3D -1) {
                    result.push(line.slice(0, rt));
                    pos +=3D rt + 1;
                } else {
                    result.push(line);
                    pos =3D nl + 1;
                }
            }
            return result;
        } : function(string){return string.split(/\r\n?|\n/);};
        CodeMirror.splitLines =3D splitLines;

        var hasSelection =3D window.getSelection ? function(te) {
            try { return te.selectionStart !=3D te.selectionEnd; }
            catch(e) { return false; }
        } : function(te) {
            try {var range =3D =
te.ownerDocument.selection.createRange();}
            catch(e) {}
            if (!range || range.parentElement() !=3D te) return false;
            return range.compareEndPoints("StartToEnd", range) !=3D 0;
        };

        var hasCopyEvent =3D (function() {
            var e =3D elt("div");
            if ("oncopy" in e) return true;
            e.setAttribute("oncopy", "return;");
            return typeof e.oncopy =3D=3D 'function';
        })();

        // KEY NAMING

        var keyNames =3D {3: "Enter", 8: "Backspace", 9: "Tab", 13: =
"Enter", 16: "Shift", 17: "Ctrl", 18: "Alt",
            19: "Pause", 20: "CapsLock", 27: "Esc", 32: "Space", 33: =
"PageUp", 34: "PageDown", 35: "End",
            36: "Home", 37: "Left", 38: "Up", 39: "Right", 40: "Down", =
44: "PrintScrn", 45: "Insert",
            46: "Delete", 59: ";", 91: "Mod", 92: "Mod", 93: "Mod", 109: =
"-", 107: "=3D", 127: "Delete",
            186: ";", 187: "=3D", 188: ",", 189: "-", 190: ".", 191: =
"/", 192: "`", 219: "[", 220: "\\",
            221: "]", 222: "'", 63276: "PageUp", 63277: "PageDown", =
63275: "End", 63273: "Home",
            63234: "Left", 63232: "Up", 63235: "Right", 63233: "Down", =
63302: "Insert", 63272: "Delete"};
        CodeMirror.keyNames =3D keyNames;
        (function() {
            // Number keys
            for (var i =3D 0; i < 10; i++) keyNames[i + 48] =3D =
String(i);
            // Alphabetic keys
            for (var i =3D 65; i <=3D 90; i++) keyNames[i] =3D =
String.fromCharCode(i);
            // Function keys
            for (var i =3D 1; i <=3D 12; i++) keyNames[i + 111] =3D =
keyNames[i + 63235] =3D "F" + i;
        })();

        // BIDI HELPERS

        function iterateBidiSections(order, from, to, f) {
            if (!order) return f(from, to, "ltr");
            var found =3D false;
            for (var i =3D 0; i < order.length; ++i) {
                var part =3D order[i];
                if (part.from < to && part.to > from || from =3D=3D to =
&& part.to =3D=3D from) {
                    f(Math.max(part.from, from), Math.min(part.to, to), =
part.level =3D=3D 1 ? "rtl" : "ltr");
                    found =3D true;
                }
            }
            if (!found) f(from, to, "ltr");
        }

        function bidiLeft(part) { return part.level % 2 ? part.to : =
part.from; }
        function bidiRight(part) { return part.level % 2 ? part.from : =
part.to; }

        function lineLeft(line) { var order =3D getOrder(line); return =
order ? bidiLeft(order[0]) : 0; }
        function lineRight(line) {
            var order =3D getOrder(line);
            if (!order) return line.text.length;
            return bidiRight(lst(order));
        }

        function lineStart(cm, lineN) {
            var line =3D getLine(cm.doc, lineN);
            var visual =3D visualLine(cm.doc, line);
            if (visual !=3D line) lineN =3D lineNo(visual);
            var order =3D getOrder(visual);
            var ch =3D !order ? 0 : order[0].level % 2 ? =
lineRight(visual) : lineLeft(visual);
            return Pos(lineN, ch);
        }
        function lineEnd(cm, lineN) {
            var merged, line;
            while (merged =3D collapsedSpanAtEnd(line =3D =
getLine(cm.doc, lineN)))
                lineN =3D merged.find().to.line;
            var order =3D getOrder(line);
            var ch =3D !order ? line.text.length : order[0].level % 2 ? =
lineLeft(line) : lineRight(line);
            return Pos(lineN, ch);
        }

        function compareBidiLevel(order, a, b) {
            var linedir =3D order[0].level;
            if (a =3D=3D linedir) return true;
            if (b =3D=3D linedir) return false;
            return a < b;
        }
        var bidiOther;
        function getBidiPartAt(order, pos) {
            for (var i =3D 0, found; i < order.length; ++i) {
                var cur =3D order[i];
                if (cur.from < pos && cur.to > pos) { bidiOther =3D =
null; return i; }
                if (cur.from =3D=3D pos || cur.to =3D=3D pos) {
                    if (found =3D=3D null) {
                        found =3D i;
                    } else if (compareBidiLevel(order, cur.level, =
order[found].level)) {
                        bidiOther =3D found;
                        return i;
                    } else {
                        bidiOther =3D i;
                        return found;
                    }
                }
            }
            bidiOther =3D null;
            return found;
        }

        function moveInLine(line, pos, dir, byUnit) {
            if (!byUnit) return pos + dir;
            do pos +=3D dir;
            while (pos > 0 && =
isExtendingChar.test(line.text.charAt(pos)));
            return pos;
        }

        // This is somewhat involved. It is needed in order to move
        // 'visually' through bi-directional text -- i.e., pressing left
        // should make the cursor go left, even when in RTL text. The
        // tricky part is the 'jumps', where RTL and LTR text touch each
        // other. This often requires the cursor offset to move more =
than
        // one unit, in order to visually move one unit.
        function moveVisually(line, start, dir, byUnit) {
            var bidi =3D getOrder(line);
            if (!bidi) return moveLogically(line, start, dir, byUnit);
            var pos =3D getBidiPartAt(bidi, start), part =3D bidi[pos];
            var target =3D moveInLine(line, start, part.level % 2 ? -dir =
: dir, byUnit);

            for (;;) {
                if (target > part.from && target < part.to) return =
target;
                if (target =3D=3D part.from || target =3D=3D part.to) {
                    if (getBidiPartAt(bidi, target) =3D=3D pos) return =
target;
                    part =3D bidi[pos +=3D dir];
                    return (dir > 0) =3D=3D part.level % 2 ? part.to : =
part.from;
                } else {
                    part =3D bidi[pos +=3D dir];
                    if (!part) return null;
                    if ((dir > 0) =3D=3D part.level % 2)
                        target =3D moveInLine(line, part.to, -1, =
byUnit);
                    else
                        target =3D moveInLine(line, part.from, 1, =
byUnit);
                }
            }
        }

        function moveLogically(line, start, dir, byUnit) {
            var target =3D start + dir;
            if (byUnit) while (target > 0 && =
isExtendingChar.test(line.text.charAt(target))) target +=3D dir;
            return target < 0 || target > line.text.length ? null : =
target;
        }

        // Bidirectional ordering algorithm
        // See http://unicode.org/reports/tr9/tr9-13.html for the =
algorithm
        // that this (partially) implements.

        // One-char codes used for character types:
        // L (L):   Left-to-Right
        // R (R):   Right-to-Left
        // r (AL):  Right-to-Left Arabic
        // 1 (EN):  European Number
        // + (ES):  European Number Separator
        // % (ET):  European Number Terminator
        // n (AN):  Arabic Number
        // , (CS):  Common Number Separator
        // m (NSM): Non-Spacing Mark
        // b (BN):  Boundary Neutral
        // s (B):   Paragraph Separator
        // t (S):   Segment Separator
        // w (WS):  Whitespace
        // N (ON):  Other Neutrals

        // Returns null if characters are ordered as they appear
        // (left-to-right), or an array of sections ({from, to, level}
        // objects) in the order in which they occur visually.
        var bidiOrdering =3D (function() {
            // Character types for codepoints 0 to 0xff
            var lowTypes =3D =
"bbbbbbbbbtstwsbbbbbbbbbbbbbbssstwNN%%%NNNNNN,N,N1111111111NNNNNNNLLLLLLL=
LLLLLLLLLLLLLLLLLLLNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNbbbbbbsbbbbbbbbbbb=
bbbbbbbbbbbbbbb,N%%%%NNNNLNNNNN%%11NLNNN1LNNNNNLLLLLLLLLLLLLLLLLLLLLLLNLL=
LLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLL";
            // Character types for codepoints 0x600 to 0x6ff
            var arabicTypes =3D =
"rrrrrrrrrrrr,rNNmmmmmmrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr=
rrrmmmmmmmmmmmmmmrrrrrrrnnnnnnnnnn%nnrrrmrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr=
rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrmmmm=
mmmmmmmmmmmmmmmNmmmmrrrrrrrrrrrrrrrrrr";
            function charType(code) {
                if (code <=3D 0xff) return lowTypes.charAt(code);
                else if (0x590 <=3D code && code <=3D 0x5f4) return "R";
                else if (0x600 <=3D code && code <=3D 0x6ff) return =
arabicTypes.charAt(code - 0x600);
                else if (0x700 <=3D code && code <=3D 0x8ac) return "r";
                else return "L";
            }

            var bidiRE =3D /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac]/;
            var isNeutral =3D /[stwN]/, isStrong =3D /[LRr]/, =
countsAsLeft =3D /[Lb1n]/, countsAsNum =3D /[1n]/;
            // Browsers seem to always treat the boundaries of block =
elements as being L.
            var outerType =3D "L";

            return function(str) {
                if (!bidiRE.test(str)) return false;
                var len =3D str.length, types =3D [];
                for (var i =3D 0, type; i < len; ++i)
                    types.push(type =3D charType(str.charCodeAt(i)));

                // W1. Examine each non-spacing mark (NSM) in the level =
run, and
                // change the type of the NSM to the type of the =
previous
                // character. If the NSM is at the start of the level =
run, it will
                // get the type of sor.
                for (var i =3D 0, prev =3D outerType; i < len; ++i) {
                    var type =3D types[i];
                    if (type =3D=3D "m") types[i] =3D prev;
                    else prev =3D type;
                }

                // W2. Search backwards from each instance of a European =
number
                // until the first strong type (R, L, AL, or sor) is =
found. If an
                // AL is found, change the type of the European number =
to Arabic
                // number.
                // W3. Change all ALs to R.
                for (var i =3D 0, cur =3D outerType; i < len; ++i) {
                    var type =3D types[i];
                    if (type =3D=3D "1" && cur =3D=3D "r") types[i] =3D =
"n";
                    else if (isStrong.test(type)) { cur =3D type; if =
(type =3D=3D "r") types[i] =3D "R"; }
                }

                // W4. A single European separator between two European =
numbers
                // changes to a European number. A single common =
separator between
                // two numbers of the same type changes to that type.
                for (var i =3D 1, prev =3D types[0]; i < len - 1; ++i) {
                    var type =3D types[i];
                    if (type =3D=3D "+" && prev =3D=3D "1" && types[i+1] =
=3D=3D "1") types[i] =3D "1";
                    else if (type =3D=3D "," && prev =3D=3D types[i+1] =
&&
                        (prev =3D=3D "1" || prev =3D=3D "n")) types[i] =
=3D prev;
                    prev =3D type;
                }

                // W5. A sequence of European terminators adjacent to =
European
                // numbers changes to all European numbers.
                // W6. Otherwise, separators and terminators change to =
Other
                // Neutral.
                for (var i =3D 0; i < len; ++i) {
                    var type =3D types[i];
                    if (type =3D=3D ",") types[i] =3D "N";
                    else if (type =3D=3D "%") {
                        for (var end =3D i + 1; end < len && types[end] =
=3D=3D "%"; ++end) {}
                        var replace =3D (i && types[i-1] =3D=3D "!") || =
(end < len - 1 && types[end] =3D=3D "1") ? "1" : "N";
                        for (var j =3D i; j < end; ++j) types[j] =3D =
replace;
                        i =3D end - 1;
                    }
                }

                // W7. Search backwards from each instance of a European =
number
                // until the first strong type (R, L, or sor) is found. =
If an L is
                // found, then change the type of the European number to =
L.
                for (var i =3D 0, cur =3D outerType; i < len; ++i) {
                    var type =3D types[i];
                    if (cur =3D=3D "L" && type =3D=3D "1") types[i] =3D =
"L";
                    else if (isStrong.test(type)) cur =3D type;
                }

                // N1. A sequence of neutrals takes the direction of the
                // surrounding strong text if the text on both sides has =
the same
                // direction. European and Arabic numbers act as if they =
were R in
                // terms of their influence on neutrals. =
Start-of-level-run (sor)
                // and end-of-level-run (eor) are used at level run =
boundaries.
                // N2. Any remaining neutrals take the embedding =
direction.
                for (var i =3D 0; i < len; ++i) {
                    if (isNeutral.test(types[i])) {
                        for (var end =3D i + 1; end < len && =
isNeutral.test(types[end]); ++end) {}
                        var before =3D (i ? types[i-1] : outerType) =
=3D=3D "L";
                        var after =3D (end < len - 1 ? types[end] : =
outerType) =3D=3D "L";
                        var replace =3D before || after ? "L" : "R";
                        for (var j =3D i; j < end; ++j) types[j] =3D =
replace;
                        i =3D end - 1;
                    }
                }

                // Here we depart from the documented algorithm, in =
order to avoid
                // building up an actual levels array. Since there are =
only three
                // levels (0, 1, 2) in an implementation that doesn't =
take
                // explicit embedding into account, we can build up the =
order on
                // the fly, without following the level-based algorithm.
                var order =3D [], m;
                for (var i =3D 0; i < len;) {
                    if (countsAsLeft.test(types[i])) {
                        var start =3D i;
                        for (++i; i < len && =
countsAsLeft.test(types[i]); ++i) {}
                        order.push({from: start, to: i, level: 0});
                    } else {
                        var pos =3D i, at =3D order.length;
                        for (++i; i < len && types[i] !=3D "L"; ++i) {}
                        for (var j =3D pos; j < i;) {
                            if (countsAsNum.test(types[j])) {
                                if (pos < j) order.splice(at, 0, {from: =
pos, to: j, level: 1});
                                var nstart =3D j;
                                for (++j; j < i && =
countsAsNum.test(types[j]); ++j) {}
                                order.splice(at, 0, {from: nstart, to: =
j, level: 2});
                                pos =3D j;
                            } else ++j;
                        }
                        if (pos < i) order.splice(at, 0, {from: pos, to: =
i, level: 1});
                    }
                }
                if (order[0].level =3D=3D 1 && (m =3D =
str.match(/^\s+/))) {
                    order[0].from =3D m[0].length;
                    order.unshift({from: 0, to: m[0].length, level: 0});
                }
                if (lst(order).level =3D=3D 1 && (m =3D =
str.match(/\s+$/))) {
                    lst(order).to -=3D m[0].length;
                    order.push({from: len - m[0].length, to: len, level: =
0});
                }
                if (order[0].level !=3D lst(order).level)
                    order.push({from: len, to: len, level: =
order[0].level});

                return order;
            };
        })();

        // THE END

        CodeMirror.version =3D "3.15.0";

        return CodeMirror;
    })();

    var listRE =3D /^(\s*)([*+-]|(\d+)\.)([\w+(\s+\w+)]|[\s*])/,
        emptyListRE =3D /^(\s*)([*+-]|(\d+)\.)(\s*)$/,
        unorderedBullets =3D '*+-';

    var inListState =3D function(cm, pos){
        return cm.getStateAfter(pos.line).list || null;
    };

    var inListOrNot =3D function(cm){
        var pos =3D cm.getCursor();
        return inListState(cm, pos);
    };

    CodeMirror.commands.shiftTabAndIndentContinueMarkdownList =3D =
function(cm){
        var inList =3D inListOrNot(cm);

        if(inList !=3D=3D null){
            cm.execCommand('insertTab');
            return;
        }

        cm.execCommand('indentLess');
    };

    CodeMirror.commands.tabAndIndentContinueMarkdownList =3D =
function(cm){
        var inList =3D inListOrNot(cm);

        if(inList !=3D=3D null){
            cm.execCommand('insertTab');
            return;
        }

        cm.execCommand('indentMore');
    };

    CodeMirror.commands.newlineAndIndentContinueMarkdownList =3D =
function(cm){
        var pos, tok, match, emptyMatch, inList;

        pos =3D cm.getCursor();
        tok =3D cm.getTokenAt(pos);
        emptyMatch =3D cm.getLine(pos.line).match(emptyListRE);
        inList =3D inListState(cm, pos);

        if (!inList && emptyMatch){
            cm.replaceRange("", {line: pos.line , ch:tok.start}, =
{line:pos.line , ch:tok.end});
            cm.execCommand('delLineLeft');
            cm.execCommand('newlineAndIndent');
            return;
        }

        if (!inList || !(match =3D cm.getLine(pos.line).match(listRE))) =
{
            cm.execCommand('newlineAndIndent');
            return;
        }

        var indent =3D match[1], after =3D " ";
        var bullet =3D unorderedBullets.indexOf(match[2]) >=3D 0
            ? match[2]
            : (parseInt(match[3], 10) + 1) + '.';

        cm.replaceSelection('\n' + indent + bullet + after, 'end');
    };

    CodeMirror.defineMode("xml", function(config, parserConfig) {
        var indentUnit =3D config.indentUnit;
        var multilineTagIndentFactor =3D =
parserConfig.multilineTagIndentFactor || 1;
        var multilineTagIndentPastTag =3D =
parserConfig.multilineTagIndentPastTag || true;

        var Kludges =3D parserConfig.htmlMode ? {
            autoSelfClosers: {'area': true, 'base': true, 'br': true, =
'col': true, 'command': true,
                'embed': true, 'frame': true, 'hr': true, 'img': true, =
'input': true,
                'keygen': true, 'link': true, 'meta': true, 'param': =
true, 'source': true,
                'track': true, 'wbr': true},
            implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, =
'option': true, 'p': true,
                'rp': true, 'rt': true, 'tbody': true, 'td': true, =
'tfoot': true,
                'th': true, 'tr': true},
            contextGrabbers: {
                'dd': {'dd': true, 'dt': true},
                'dt': {'dd': true, 'dt': true},
                'li': {'li': true},
                'option': {'option': true, 'optgroup': true},
                'optgroup': {'optgroup': true},
                'p': {'address': true, 'article': true, 'aside': true, =
'blockquote': true, 'dir': true,
                    'div': true, 'dl': true, 'fieldset': true, 'footer': =
true, 'form': true,
                    'h1': true, 'h2': true, 'h3': true, 'h4': true, =
'h5': true, 'h6': true,
                    'header': true, 'hgroup': true, 'hr': true, 'menu': =
true, 'nav': true, 'ol': true,
                    'p': true, 'pre': true, 'section': true, 'table': =
true, 'ul': true},
                'rp': {'rp': true, 'rt': true},
                'rt': {'rp': true, 'rt': true},
                'tbody': {'tbody': true, 'tfoot': true},
                'td': {'td': true, 'th': true},
                'tfoot': {'tbody': true},
                'th': {'td': true, 'th': true},
                'thead': {'tbody': true, 'tfoot': true},
                'tr': {'tr': true}
            },
            doNotIndent: {"pre": true},
            allowUnquoted: true,
            allowMissing: true
        } : {
            autoSelfClosers: {},
            implicitlyClosed: {},
            contextGrabbers: {},
            doNotIndent: {},
            allowUnquoted: false,
            allowMissing: false
        };
        var alignCDATA =3D parserConfig.alignCDATA;

        // Return variables for tokenizers
        var tagName, type;

        function inText(stream, state) {
            function chain(parser) {
                state.tokenize =3D parser;
                return parser(stream, state);
            }

            var ch =3D stream.next();
            if (ch =3D=3D "<") {
                if (stream.eat("!")) {
                    if (stream.eat("[")) {
                        if (stream.match("CDATA[")) return =
chain(inBlock("atom", "]]>"));
                        else return null;
                    } else if (stream.match("--")) {
                        return chain(inBlock("comment", "-->"));
                    } else if (stream.match("DOCTYPE", true, true)) {
                        stream.eatWhile(/[\w\._\-]/);
                        return chain(doctype(1));
                    } else {
                        return null;
                    }
                } else if (stream.eat("?")) {
                    stream.eatWhile(/[\w\._\-]/);
                    state.tokenize =3D inBlock("meta", "?>");
                    return "meta";
                } else {
                    var isClose =3D stream.eat("/");
                    tagName =3D "";
                    var c;
                    while ((c =3D =
stream.eat(/[^\s\u00a0=3D<>\"\'\/?]/))) tagName +=3D c;
                    if (!tagName) return "error";
                    type =3D isClose ? "closeTag" : "openTag";
                    state.tokenize =3D inTag;
                    return "tag";
                }
            } else if (ch =3D=3D "&") {
                var ok;
                if (stream.eat("#")) {
                    if (stream.eat("x")) {
                        ok =3D stream.eatWhile(/[a-fA-F\d]/) && =
stream.eat(";");
                    } else {
                        ok =3D stream.eatWhile(/[\d]/) && =
stream.eat(";");
                    }
                } else {
                    ok =3D stream.eatWhile(/[\w\.\-:]/) && =
stream.eat(";");
                }
                return ok ? "atom" : "error";
            } else {
                stream.eatWhile(/[^&<]/);
                return null;
            }
        }

        function inTag(stream, state) {
            var ch =3D stream.next();
            if (ch =3D=3D ">" || (ch =3D=3D "/" && stream.eat(">"))) {
                state.tokenize =3D inText;
                type =3D ch =3D=3D ">" ? "endTag" : "selfcloseTag";
                return "tag";
            } else if (ch =3D=3D "=3D") {
                type =3D "equals";
                return null;
            } else if (ch =3D=3D "<") {
                return "error";
            } else if (/[\'\"]/.test(ch)) {
                state.tokenize =3D inAttribute(ch);
                state.stringStartCol =3D stream.column();
                return state.tokenize(stream, state);
            } else {
                stream.eatWhile(/[^\s\u00a0=3D<>\"\']/);
                return "word";
            }
        }

        function inAttribute(quote) {
            var closure =3D function(stream, state) {
                while (!stream.eol()) {
                    if (stream.next() =3D=3D quote) {
                        state.tokenize =3D inTag;
                        break;
                    }
                }
                return "string";
            };
            closure.isInAttribute =3D true;
            return closure;
        }

        function inBlock(style, terminator) {
            return function(stream, state) {
                while (!stream.eol()) {
                    if (stream.match(terminator)) {
                        state.tokenize =3D inText;
                        break;
                    }
                    stream.next();
                }
                return style;
            };
        }
        function doctype(depth) {
            return function(stream, state) {
                var ch;
                while ((ch =3D stream.next()) !=3D null) {
                    if (ch =3D=3D "<") {
                        state.tokenize =3D doctype(depth + 1);
                        return state.tokenize(stream, state);
                    } else if (ch =3D=3D ">") {
                        if (depth =3D=3D 1) {
                            state.tokenize =3D inText;
                            break;
                        } else {
                            state.tokenize =3D doctype(depth - 1);
                            return state.tokenize(stream, state);
                        }
                    }
                }
                return "meta";
            };
        }

        var curState, curStream, setStyle;
        function pass() {
            for (var i =3D arguments.length - 1; i >=3D 0; i--) =
curState.cc.push(arguments[i]);
        }
        function cont() {
            pass.apply(null, arguments);
            return true;
        }

        function pushContext(tagName, startOfLine) {
            var noIndent =3D Kludges.doNotIndent.hasOwnProperty(tagName) =
|| (curState.context && curState.context.noIndent);
            curState.context =3D {
                prev: curState.context,
                tagName: tagName,
                indent: curState.indented,
                startOfLine: startOfLine,
                noIndent: noIndent
            };
        }
        function popContext() {
            if (curState.context) curState.context =3D =
curState.context.prev;
        }

        function element(type) {
            if (type =3D=3D "openTag") {
                curState.tagName =3D tagName;
                curState.tagStart =3D curStream.column();
                return cont(attributes, endtag(curState.startOfLine));
            } else if (type =3D=3D "closeTag") {
                var err =3D false;
                if (curState.context) {
                    if (curState.context.tagName !=3D tagName) {
                        if =
(Kludges.implicitlyClosed.hasOwnProperty(curState.context.tagName.toLower=
Case())) {
                            popContext();
                        }
                        err =3D !curState.context || =
curState.context.tagName !=3D tagName;
                    }
                } else {
                    err =3D true;
                }
                if (err) setStyle =3D "error";
                return cont(endclosetag(err));
            }
            return cont();
        }
        function endtag(startOfLine) {
            return function(type) {
                var tagName =3D curState.tagName;
                curState.tagName =3D curState.tagStart =3D null;
                if (type =3D=3D "selfcloseTag" ||
                    (type =3D=3D "endTag" && =
Kludges.autoSelfClosers.hasOwnProperty(tagName.toLowerCase()))) {
                    maybePopContext(tagName.toLowerCase());
                    return cont();
                }
                if (type =3D=3D "endTag") {
                    maybePopContext(tagName.toLowerCase());
                    pushContext(tagName, startOfLine);
                    return cont();
                }
                return cont();
            };
        }
        function endclosetag(err) {
            return function(type) {
                if (err) setStyle =3D "error";
                if (type =3D=3D "endTag") { popContext(); return cont(); =
}
                setStyle =3D "error";
                return cont(arguments.callee);
            };
        }
        function maybePopContext(nextTagName) {
            var parentTagName;
            while (true) {
                if (!curState.context) {
                    return;
                }
                parentTagName =3D =
curState.context.tagName.toLowerCase();
                if =
(!Kludges.contextGrabbers.hasOwnProperty(parentTagName) ||
                    =
!Kludges.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {
                    return;
                }
                popContext();
            }
        }

        function attributes(type) {
            if (type =3D=3D "word") {setStyle =3D "attribute"; return =
cont(attribute, attributes);}
            if (type =3D=3D "endTag" || type =3D=3D "selfcloseTag") =
return pass();
            setStyle =3D "error";
            return cont(attributes);
        }
        function attribute(type) {
            if (type =3D=3D "equals") return cont(attvalue, attributes);
            if (!Kludges.allowMissing) setStyle =3D "error";
            else if (type =3D=3D "word") setStyle =3D "attribute";
            return (type =3D=3D "endTag" || type =3D=3D "selfcloseTag") =
? pass() : cont();
        }
        function attvalue(type) {
            if (type =3D=3D "string") return cont(attvaluemaybe);
            if (type =3D=3D "word" && Kludges.allowUnquoted) {setStyle =
=3D "string"; return cont();}
            setStyle =3D "error";
            return (type =3D=3D "endTag" || type =3D=3D "selfCloseTag") =
? pass() : cont();
        }
        function attvaluemaybe(type) {
            if (type =3D=3D "string") return cont(attvaluemaybe);
            else return pass();
        }

        return {
            startState: function() {
                return {tokenize: inText, cc: [], indented: 0, =
startOfLine: true, tagName: null, tagStart: null, context: null};
            },

            token: function(stream, state) {
                if (!state.tagName && stream.sol()) {
                    state.startOfLine =3D true;
                    state.indented =3D stream.indentation();
                }
                if (stream.eatSpace()) return null;

                setStyle =3D type =3D tagName =3D null;
                var style =3D state.tokenize(stream, state);
                state.type =3D type;
                if ((style || type) && style !=3D "comment") {
                    curState =3D state; curStream =3D stream;
                    while (true) {
                        var comb =3D state.cc.pop() || element;
                        if (comb(type || style)) break;
                    }
                }
                state.startOfLine =3D false;
                return setStyle || style;
            },

            indent: function(state, textAfter, fullLine) {
                var context =3D state.context;
                // Indent multi-line strings (e.g. css).
                if (state.tokenize.isInAttribute) {
                    return state.stringStartCol + 1;
                }
                if ((state.tokenize !=3D inTag && state.tokenize !=3D =
inText) ||
                    context && context.noIndent)
                    return fullLine ? fullLine.match(/^(\s*)/)[0].length =
: 0;
                // Indent the starts of attribute names.
                if (state.tagName) {
                    if (multilineTagIndentPastTag)
                        return state.tagStart + state.tagName.length + =
2;
                    else
                        return state.tagStart + indentUnit * =
multilineTagIndentFactor;
                }
                if (alignCDATA && /<!\[CDATA\[/.test(textAfter)) return =
0;
                if (context && /^<\//.test(textAfter))
                    context =3D context.prev;
                while (context && !context.startOfLine)
                    context =3D context.prev;
                if (context) return context.indent + indentUnit;
                else return 0;
            },

            electricChars: "/",
            blockCommentStart: "<!--",
            blockCommentEnd: "-->",

            configuration: parserConfig.htmlMode ? "html" : "xml",
            helperType: parserConfig.htmlMode ? "html" : "xml"
        };
    });

    CodeMirror.defineMIME("text/xml", "xml");
    CodeMirror.defineMIME("application/xml", "xml");
    if (!CodeMirror.mimeModes.hasOwnProperty("text/html"))
        CodeMirror.defineMIME("text/html", {name: "xml", htmlMode: =
true});

    CodeMirror.defineMode("markdown", function(cmCfg, modeCfg) {

        var htmlFound =3D CodeMirror.modes.hasOwnProperty("xml");
        var htmlMode =3D CodeMirror.getMode(cmCfg, htmlFound ? {name: =
"xml", htmlMode: true} : "text/plain");
        var aliases =3D {
            html: "htmlmixed",
            js: "javascript",
            json: "application/json",
            c: "text/x-csrc",
            "c++": "text/x-c++src",
            java: "text/x-java",
            csharp: "text/x-csharp",
            "c#": "text/x-csharp",
            scala: "text/x-scala"
        };

        var getMode =3D (function () {
            var i, modes =3D {}, mimes =3D {}, mime;

            var list =3D [];
            for (var m in CodeMirror.modes)
                if (CodeMirror.modes.propertyIsEnumerable(m)) =
list.push(m);
            for (i =3D 0; i < list.length; i++) {
                modes[list[i]] =3D list[i];
            }
            var mimesList =3D [];
            for (var m in CodeMirror.mimeModes)
                if (CodeMirror.mimeModes.propertyIsEnumerable(m))
                    mimesList.push({mime: m, mode: =
CodeMirror.mimeModes[m]});
            for (i =3D 0; i < mimesList.length; i++) {
                mime =3D mimesList[i].mime;
                mimes[mime] =3D mimesList[i].mime;
            }

            for (var a in aliases) {
                if (aliases[a] in modes || aliases[a] in mimes)
                    modes[a] =3D aliases[a];
            }

            return function (lang) {
                return modes[lang] ? CodeMirror.getMode(cmCfg, =
modes[lang]) : null;
            };
        }());

        // Should underscores in words open/close em/strong?
        if (modeCfg.underscoresBreakWords =3D=3D=3D undefined)
            modeCfg.underscoresBreakWords =3D true;

        // Turn on fenced code blocks? ("```" to start/end)
        if (modeCfg.fencedCodeBlocks =3D=3D=3D undefined) =
modeCfg.fencedCodeBlocks =3D false;

        // Turn on task lists? ("- [ ] " and "- [x] ")
        if (modeCfg.taskLists =3D=3D=3D undefined) modeCfg.taskLists =3D =
false;

        var codeDepth =3D 0;

        var header   =3D 'header'
            ,   code     =3D 'comment'
            ,   quote1   =3D 'atom'
            ,   quote2   =3D 'number'
            ,   list1    =3D 'variable-2'
            ,   list2    =3D 'variable-3'
            ,   list3    =3D 'keyword'
            ,   hr       =3D 'hr'
            ,   image    =3D 'tag'
            ,   linkinline =3D 'link'
            ,   linkemail =3D 'link'
            ,   linktext =3D 'link'
            ,   linkhref =3D 'string'
            ,   em       =3D 'em'
            ,   strong   =3D 'strong'
            ,   strike   =3D 'strike';

        var hrRE =3D /^([*\-=3D_])(?:\s*\1){4,}\s*$/
            ,   ulRE =3D /^[*\-+]\s+/
            ,   olRE =3D /^[0-9]+\.\s+/
            ,   taskListRE =3D /^\[(x| )\](?=3D\s)/ // Must follow ulRE =
or olRE
            ,   headerRE =3D /^(?:\=3D{1,}|-{1,})$/
            ,   textRE =3D /^[^!\[\]*_~\\<>` "'(]+/;

        function switchInline(stream, state, f) {
            state.f =3D state.inline =3D f;
            return f(stream, state);
        }

        function switchBlock(stream, state, f) {
            state.f =3D state.block =3D f;
            return f(stream, state);
        }


        // Blocks

        function blankLine(state) {
            // Reset linkTitle state
            state.linkTitle =3D false;
            // Reset EM state
            state.em =3D false;
            // Reset STRONG state
            state.strong =3D false;
            // Reset STRIKE state
            state.strike =3D false;

            // Reset state.quote
            state.quote =3D 0;
            if (!htmlFound && state.f =3D=3D htmlBlock) {
                state.f =3D inlineNormal;
                state.block =3D blockNormal;
            }
            // Reset state.trailingSpace
            state.trailingSpace =3D 0;
            state.trailingSpaceNewLine =3D false;
            // Mark this line as blank
            state.thisLineHasContent =3D false;
            return null;
        }

        function blockNormal(stream, state) {

            var prevLineIsList =3D (state.list !=3D=3D false);
            if (state.list !=3D=3D false && state.indentationDiff >=3D =
0) { // Continued list
                if (state.indentationDiff < 4) { // Only adjust =
indentation if *not* a code block
                    state.indentation -=3D state.indentationDiff;
                }
                state.list =3D null;
            } else if (state.list !=3D=3D false && state.indentation > =
0) {
                state.list =3D null;
                state.listDepth =3D Math.floor(state.indentation / 4);
            } else if (state.list !=3D=3D false) { // No longer a list
                state.list =3D false;
                state.listDepth =3D 0;
            }

            if (state.indentationDiff >=3D 4) {
                state.indentation -=3D 4;
                stream.skipToEnd();
                return code;
            } else if (stream.eatSpace()) {
                return null;
            } else if (stream.peek() =3D=3D=3D '#' || =
(state.prevLineHasContent && stream.match(headerRE)) ) {
                state.header =3D true;
            } else if (stream.eat('>')) {
                state.indentation++;
                state.quote =3D 1;
                stream.eatSpace();
                while (stream.eat('>')) {
                    stream.eatSpace();
                    state.quote++;
                }
            } else if (stream.peek() =3D=3D=3D '[') {
                return switchInline(stream, state, footnoteLink);
            } else if (stream.match(hrRE, true)) {
                return hr;
            } else if ((!state.prevLineHasContent || prevLineIsList) && =
(stream.match(ulRE, true) || stream.match(olRE, true))) {
                state.indentation +=3D 4;
                state.list =3D true;
                state.listDepth++;
                if (modeCfg.taskLists && stream.match(taskListRE, =
false)) {
                    state.taskList =3D true;
                }
            } else if (modeCfg.fencedCodeBlocks && =
stream.match(/^```([\w+#]*)/, true)) {
                // try switching mode
                state.localMode =3D getMode(RegExp.$1);
                if (state.localMode) state.localState =3D =
state.localMode.startState();
                switchBlock(stream, state, local);
                return code;
            }

            return switchInline(stream, state, state.inline);
        }

        function htmlBlock(stream, state) {
            var style =3D htmlMode.token(stream, state.htmlState);
            if (htmlFound && style =3D=3D=3D 'tag' && =
state.htmlState.type !=3D=3D 'openTag' && !state.htmlState.context) {
                state.f =3D inlineNormal;
                state.block =3D blockNormal;
            }
            if (state.md_inside && stream.current().indexOf(">")!=3D-1) =
{
                state.f =3D inlineNormal;
                state.block =3D blockNormal;
                state.htmlState.context =3D undefined;
            }
            return style;
        }

        function local(stream, state) {
            if (stream.sol() && stream.match(/^```/, true)) {
                state.localMode =3D state.localState =3D null;
                state.f =3D inlineNormal;
                state.block =3D blockNormal;
                return code;
            } else if (state.localMode) {
                return state.localMode.token(stream, state.localState);
            } else {
                stream.skipToEnd();
                return code;
            }
        }

        // Inline
        function getType(state) {
            var styles =3D [];

            if (state.taskOpen) { return "meta"; }
            if (state.taskClosed) { return "property"; }

            if (state.strong) { styles.push(strong); }
            if (state.strike) { styles.push(strike); }
            if (state.em) { styles.push(em); }

            if (state.linkText) { styles.push(linktext); }

            if (state.code) { styles.push(code); }

            if (state.header) { styles.push(header); }
            if (state.quote) { styles.push(state.quote % 2 ? quote1 : =
quote2); }
            if (state.list !=3D=3D false) {
                var listMod =3D (state.listDepth - 1) % 3;
                if (!listMod) {
                    styles.push(list1);
                } else if (listMod =3D=3D=3D 1) {
                    styles.push(list2);
                } else {
                    styles.push(list3);
                }
            }

            if (state.trailingSpaceNewLine) {
                styles.push("trailing-space-new-line");
            } else if (state.trailingSpace) {
                styles.push("trailing-space-" + (state.trailingSpace % 2 =
? "a" : "b"));
            }

            return styles.length ? styles.join(' ') : null;
        }

        function handleText(stream, state) {
            if (stream.match(textRE, true)) {
                return getType(state);
            }
            return undefined;
        }

        function inlineNormal(stream, state) {
            var style =3D state.text(stream, state);
            if (typeof style !=3D=3D 'undefined')
                return style;

            if (state.list) { // List marker (*, +, -, 1., etc)
                state.list =3D null;
                return getType(state);
            }

            if (state.taskList) {
                var taskOpen =3D stream.match(taskListRE, true)[1] =
!=3D=3D "x";
                if (taskOpen) state.taskOpen =3D true;
                else state.taskClosed =3D true;
                state.taskList =3D false;
                return getType(state);
            }

            state.taskOpen =3D false;
            state.taskClosed =3D false;

            var ch =3D stream.next();

            if (ch =3D=3D=3D '\\') {
                stream.next();
                return getType(state);
            }

            // Matches link titles present on next line
            if (state.linkTitle) {
                state.linkTitle =3D false;
                var matchCh =3D ch;
                if (ch =3D=3D=3D '(') {
                    matchCh =3D ')';
                }
                matchCh =3D =
(matchCh+'').replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1");
                var regex =3D '^\\s*(?:[^' + matchCh + =
'\\\\]+|\\\\\\\\|\\\\.)' + matchCh;
                if (stream.match(new RegExp(regex), true)) {
                    return linkhref;
                }
            }

            // If this block is changed, it may need to be updated in =
GFM mode
            if (ch =3D=3D=3D '`') {
                var t =3D getType(state);
                var before =3D stream.pos;
                stream.eatWhile('`');
                var difference =3D 1 + stream.pos - before;
                if (!state.code) {
                    codeDepth =3D difference;
                    state.code =3D true;
                    return getType(state);
                } else {
                    if (difference =3D=3D=3D codeDepth) { // Must be =
exact
                        state.code =3D false;
                        return t;
                    }
                    return getType(state);
                }
            } else if (state.code) {
                return getType(state);
            }

            if (ch =3D=3D=3D '!' && stream.match(/\[[^\]]*\] =
?(?:\(|\[)/, false)) {
                stream.match(/\[[^\]]*\]/);
                state.inline =3D state.f =3D linkHref;
                return image;
            }

            if (ch =3D=3D=3D '[' && stream.match(/.*\](\(| ?\[)/, =
false)) {
                state.linkText =3D true;
                return getType(state);
            }

            if (ch =3D=3D=3D ']' && state.linkText) {
                var type =3D getType(state);
                state.linkText =3D false;
                state.inline =3D state.f =3D linkHref;
                return type;
            }

            if (ch =3D=3D=3D '<' && =
stream.match(/^(https?|ftps?):\/\/(?:[^\\>]|\\.)+>/, false)) {
                return switchInline(stream, state, =
inlineElement(linkinline, '>'));
            }

            if (ch =3D=3D=3D '<' && stream.match(/^[^> =
\\]+@(?:[^\\>]|\\.)+>/, false)) {
                return switchInline(stream, state, =
inlineElement(linkemail, '>'));
            }

            if (ch =3D=3D=3D '<' && stream.match(/^\w/, false)) {
                if (stream.string.indexOf(">")!=3D-1) {
                    var atts =3D =
stream.string.substring(1,stream.string.indexOf(">"));
                    if =
(/markdown\s*=3D\s*('|"){0,1}1('|"){0,1}/.test(atts)) {
                        state.md_inside =3D true;
                    }
                }
                stream.backUp(1);
                return switchBlock(stream, state, htmlBlock);
            }

            if (ch =3D=3D=3D '<' && stream.match(/^\/\w*?>/)) {
                state.md_inside =3D false;
                return "tag";
            }

            var ignoreUnderscore =3D false;
            if (!modeCfg.underscoresBreakWords) {
                if (ch =3D=3D=3D '_' && stream.peek() !=3D=3D '_' && =
stream.match(/(\w)/, false)) {
                    var prevPos =3D stream.pos - 2;
                    if (prevPos >=3D 0) {
                        var prevCh =3D stream.string.charAt(prevPos);
                        if (prevCh !=3D=3D '_' && prevCh.match(/(\w)/, =
false)) {
                            ignoreUnderscore =3D true;
                        }
                    }
                }
            }
            var t =3D getType(state);
            if (ch =3D=3D=3D '*' || (ch =3D=3D=3D '_' && =
!ignoreUnderscore)) {
                if (state.strong =3D=3D=3D ch && stream.eat(ch) && =
stream.peek(ch)) { // Remove STRONG
                    state.strong =3D false;
                    return t;
                } else if (!state.strong && stream.eat(ch) && =
stream.peek(ch)) { // Add STRONG
                    state.strong =3D ch;
                    return getType(state);
                } else if (state.em =3D=3D=3D ch) { // Remove EM
                    state.em =3D false;
                    return t;
                } else if (!state.em) { // Add EM
                    state.em =3D ch;
                    return getType(state);
                }
            } else if (ch =3D=3D=3D '~'){
                if (state.strike =3D=3D=3D ch && stream.eat(ch)) { // =
Remove SRTIKE
                    state.strike =3D false;
                    return t;
                } else if (!state.strike && stream.eat(ch)) { // Add =
STRIKE
                    state.strike =3D ch;
                    return getType(state);
                }
            } else if (ch =3D=3D=3D ' ') {
                if (stream.eat('*') || stream.eat('_')) { // Probably =
surrounded by spaces
                    if (stream.peek() =3D=3D=3D ' ') { // Surrounded by =
spaces, ignore
                        return getType(state);
                    } else { // Not surrounded by spaces, back up =
pointer
                        stream.backUp(1);
                    }
                }
            }

            if (ch =3D=3D=3D ' ') {
                if (stream.match(/ +$/, false)) {
                    state.trailingSpace++;
                } else if (state.trailingSpace) {
                    state.trailingSpaceNewLine =3D true;
                }
            }

            return getType(state);
        }

        function linkHref(stream, state) {
            // Check if space, and return NULL if so (to avoid marking =
the space)
            if(stream.eatSpace()){
                return null;
            }
            var ch =3D stream.next();
            if (ch =3D=3D=3D '(' || ch =3D=3D=3D '[') {
                return switchInline(stream, state, =
inlineElement(linkhref, ch =3D=3D=3D '(' ? ')' : ']'));
            }
            return 'error';
        }

        function footnoteLink(stream, state) {
            if (stream.match(/^[^\]]*\]:/, true)) {
                state.f =3D footnoteUrl;
                return linktext;
            }
            return switchInline(stream, state, inlineNormal);
        }

        function footnoteUrl(stream, state) {
            // Check if space, and return NULL if so (to avoid marking =
the space)
            if(stream.eatSpace()){
                return null;
            }
            // Match URL
            stream.match(/^[^\s]+/, true);
            // Check for link title
            if (stream.peek() =3D=3D=3D undefined) { // End of line, set =
flag to check next line
                state.linkTitle =3D true;
            } else { // More content on line, check if link title
                =
stream.match(/^(?:\s+(?:"(?:[^"\\]|\\\\|\\.)+"|'(?:[^'\\]|\\\\|\\.)+'|\((=
?:[^)\\]|\\\\|\\.)+\)))?/, true);
            }
            state.f =3D state.inline =3D inlineNormal;
            return linkhref;
        }

        var savedInlineRE =3D [];
        function inlineRE(endChar) {
            if (!savedInlineRE[endChar]) {
                // Escape endChar for RegExp (taken from =
http://stackoverflow.com/a/494122/526741)
                endChar =3D =
(endChar+'').replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1");
                // Match any non-endChar, escaped character, as well as =
the closing
                // endChar.
                savedInlineRE[endChar] =3D new =
RegExp('^(?:[^\\\\]|\\\\.)*?(' + endChar + ')');
            }
            return savedInlineRE[endChar];
        }

        function inlineElement(type, endChar, next) {
            next =3D next || inlineNormal;
            return function(stream, state) {
                stream.match(inlineRE(endChar));
                state.inline =3D state.f =3D next;
                return type;
            };
        }

        return {
            startState: function() {
                return {
                    f: blockNormal,

                    prevLineHasContent: false,
                    thisLineHasContent: false,

                    block: blockNormal,
                    htmlState: CodeMirror.startState(htmlMode),
                    indentation: 0,

                    inline: inlineNormal,
                    text: handleText,

                    linkText: false,
                    linkTitle: false,
                    em: false,
                    strong: false,
                    strike: false,
                    header: false,
                    taskList: false,
                    list: false,
                    listDepth: 0,
                    quote: 0,
                    trailingSpace: 0,
                    trailingSpaceNewLine: false
                };
            },

            copyState: function(s) {
                return {
                    f: s.f,

                    prevLineHasContent: s.prevLineHasContent,
                    thisLineHasContent: s.thisLineHasContent,

                    block: s.block,
                    htmlState: CodeMirror.copyState(htmlMode, =
s.htmlState),
                    indentation: s.indentation,

                    localMode: s.localMode,
                    localState: s.localMode ? =
CodeMirror.copyState(s.localMode, s.localState) : null,

                    inline: s.inline,
                    text: s.text,
                    linkTitle: s.linkTitle,
                    em: s.em,
                    strong: s.strong,
                    strike: s.strike,
                    header: s.header,
                    taskList: s.taskList,
                    list: s.list,
                    listDepth: s.listDepth,
                    quote: s.quote,
                    trailingSpace: s.trailingSpace,
                    trailingSpaceNewLine: s.trailingSpaceNewLine,
                    md_inside: s.md_inside
                };
            },

            token: function(stream, state) {
                if (stream.sol()) {
                    if (stream.match(/^\s*$/, true)) {
                        state.prevLineHasContent =3D false;
                        return blankLine(state);
                    } else {
                        state.prevLineHasContent =3D =
state.thisLineHasContent;
                        state.thisLineHasContent =3D true;
                    }

                    // Reset state.header
                    state.header =3D false;

                    // Reset state.taskList
                    state.taskList =3D false;

                    // Reset state.code
                    state.code =3D false;

                    // Reset state.trailingSpace
                    state.trailingSpace =3D 0;
                    state.trailingSpaceNewLine =3D false;

                    state.f =3D state.block;
                    var indentation =3D stream.match(/^\s*/, =
true)[0].replace(/\t/g, '    ').length;
                    var difference =3D Math.floor((indentation - =
state.indentation) / 4) * 4;
                    if (difference > 4) difference =3D 4;
                    var adjustedIndentation =3D state.indentation + =
difference;
                    state.indentationDiff =3D adjustedIndentation - =
state.indentation;
                    state.indentation =3D adjustedIndentation;
                    if (indentation > 0) return null;
                }
                return state.f(stream, state);
            },

            blankLine: blankLine,

            getType: getType
        };

    }, "xml");

    CodeMirror.defineMIME("text/x-markdown", "markdown");


    var isMac =3D /Mac/.test(navigator.platform);

    var shortcuts =3D {
        'Cmd-Alt-1': toggleHeadline,
        'Cmd-Alt-2': toggleHeading,
        'Cmd-B': toggleBold,
        'Cmd-I': toggleItalic,
        'Cmd-K': drawLink,
        'Cmd-Alt-I': drawImage,
        "Cmd-'": toggleBlockquote,
        "Cmd-,": drawCode,
        'Cmd-Alt-L': toggleOrderedList,
        'Cmd-L': toggleUnOrderedList,
        'Cmd-Z': undo,
        'Cmd-Shift-Z': redo
    };


    /**
     * Fix shortcut. Mac use Command, others use Ctrl.
     */
    function fixShortcut(name) {
        if (isMac) {
            name =3D name.replace('Ctrl', 'Cmd');
        } else {
            name =3D name.replace('Cmd', 'Ctrl');
        }
        return name;
    }


    /**
     * Create icon element for toolbar.
     */
    function createIcon(name, options) {
        options =3D options || {};
        var el =3D document.createElement('a');

        var shortcut =3D options.shortcut || shortcuts[name];
        if (shortcut) {
            shortcut =3D fixShortcut(shortcut);
            el.title =3D shortcut;
            el.title =3D el.title.replace('Cmd', '=E2=8C=98');
            if (isMac) {
                el.title =3D el.title.replace('Alt', '=E2=8C=A5');
            }
        }

        el.className =3D options.className || 'icon-' + name;
        return el;
    }

    function createSep() {
        var el =3D document.createElement('i');
        el.className =3D 'separator';
        el.innerHTML =3D '|';
        return el;
    }


    /**
     * The state of CodeMirror at the given position.
     */
    function getState(cm, pos) {
        pos =3D pos || cm.getCursor('start');
        var stat =3D cm.getTokenAt(pos);
        if (!stat.type) return {};

        var types =3D stat.type.split(' ');

        var ret =3D {}, data, text;
        for (var i =3D 0; i < types.length; i++) {
            data =3D types[i];
            if (data =3D=3D=3D 'strong') {
                ret.bold =3D true;
            } else if (data =3D=3D=3D 'variable-2') {
                text =3D cm.getLine(pos.line);
                if (/^\s*\d+\.\s/.test(text)) {
                    ret['list-ol'] =3D true;
                } else {
                    ret['list-ul'] =3D true;
                }
            } else if (data =3D=3D=3D 'atom') {
                ret.quote =3D true;
            } else if (data =3D=3D=3D 'em') {
                ret.italic =3D true;
            } else if (data =3D=3D=3D 'header') {
                text =3D cm.getLine(pos.line);
                if (/^\s*\##\s/.test(text)) {
                    ret['heading'] =3D true;
                }else {
                    ret['headline'] =3D true;
                }
            }
        }
        return ret;
    }


    /**
     * Toggle full screen of the editor.
     */
    function toggleFullScreen(editor) {
        var el =3D editor.codemirror.getWrapperElement();

        // =
https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode
        var doc =3D document;
        var isFull =3D doc.fullScreen || doc.mozFullScreen || =
doc.webkitFullScreen;
        var request =3D function() {
            if (el.requestFullScreen) {
                el.requestFullScreen();
            } else if (el.mozRequestFullScreen) {
                el.mozRequestFullScreen();
            } else if (el.webkitRequestFullScreen) {
                =
el.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);
            }
        };
        var cancel =3D function() {
            if (doc.cancelFullScreen) {
                doc.cancelFullScreen();
            } else if (doc.mozCancelFullScreen) {
                doc.mozCancelFullScreen();
            } else if (doc.webkitCancelFullScreen) {
                doc.webkitCancelFullScreen();
            }
        };
        if (!isFull) {
            request();
        } else if (cancel) {
            cancel();
        }
    }

    /**
     * Action for toggling heading.
     */
    function toggleHeadline(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'headline');
    }

    function toggleHeading(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'heading');
    }


    /**
     * Action for toggling bold.
     */
    function toggleBold(editor) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);

        var text;
        var start =3D '**';
        var end =3D '**';

        var startPoint =3D cm.getCursor('start');
        var endPoint =3D cm.getCursor('end');
        if (stat.bold) {
            text =3D cm.getLine(startPoint.line);
            start =3D text.slice(0, startPoint.ch);
            end =3D text.slice(startPoint.ch);

            start =3D start.replace(/^(.*)?(\*|\_){2}(\S+.*)?$/, =
'$1$3');
            end =3D end.replace(/^(.*\S+)?(\*|\_){2}(\s+.*)?$/, '$1$3');
            startPoint.ch -=3D 2;
            endPoint.ch -=3D 2;
            cm.setLine(startPoint.line, start + end);
        } else {
            text =3D cm.getSelection();
            cm.replaceSelection(start + text + end);

            startPoint.ch +=3D 2;
            endPoint.ch +=3D 2;
        }
        cm.setSelection(startPoint, endPoint);
        cm.focus();
    }


    /**
     * Action for toggling italic.
     */
    function toggleItalic(editor) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);

        var text;
        var start =3D '_';
        var end =3D '_';

        var startPoint =3D cm.getCursor('start');
        var endPoint =3D cm.getCursor('end');
        if (stat.italic) {
            text =3D cm.getLine(startPoint.line);
            start =3D text.slice(0, startPoint.ch);
            end =3D text.slice(startPoint.ch);

            start =3D start.replace(/^(._)?(\*|\_)(\S+._)?$/, '$1$3');
            end =3D end.replace(/^(._\S+)?(\*|\_)(\s+._)?$/, '$1$3');
            startPoint.ch -=3D 1;
            endPoint.ch -=3D 1;
            cm.setLine(startPoint.line, start + end);
        } else {
            text =3D cm.getSelection();
            cm.replaceSelection(start + text + end);

            startPoint.ch +=3D 1;
            endPoint.ch +=3D 1;
        }
        cm.setSelection(startPoint, endPoint);
        cm.focus();
    }


    /**
     * Action for toggling blockquote.
     */
    function toggleBlockquote(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'quote');
    }

    function drawCode(editor) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);
        _replaceSelection(cm, stat.code, '\n\n```\n ', =
'=E5=9C=A8=E8=BF=99=E9=87=8C=E4=B9=A6=E5=86=99=E4=BB=A3=E7=A0=81=E7=89=87=
  \n```\n\n');
    }


    /**
     * Action for toggling ul.
     */
    function toggleUnOrderedList(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'list-ul');
    }


    /**
     * Action for toggling ol.
     */
    function toggleOrderedList(editor) {
        var cm =3D editor.codemirror;
        _toggleLine(cm, 'list-ol');
    }


    /**
     * Action for drawing a link.
     */
    function drawLink(editor) {
        $('.cm_dialog').fadeIn(300);
        $('.cm_add_link').slideDown(300);
        $('.cm_add_img').slideUp(300);
    }
    function cmDrawLink(editor, prefix_str) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);
        var cm_link_txt =3D $('#'+prefix_str+'cm_link_txt').val();
        var cm_link_url =3D $('#'+prefix_str+'cm_link_url').val();
        var cm_link_tit =3D $('#'+prefix_str+'cm_link_tit').val();
        if(cm_link_txt!=3D"" || cm_link_url!=3D"" || cm_link_tit!=3D""){
           _replaceSelection(cm, stat.link, '[',cm_link_txt =
+']('+cm_link_url+' "'+cm_link_tit+'")');
        }
        $('.cm_add_link').slideUp(300);
        $('.cm_dialog').fadeOut(300);
    }


    /**
     * Action for drawing an img.
     */
    function drawImage(editor) {
        $('.cm_dialog').fadeIn(300);
        $('.cm_add_link').slideUp(300);
        $('.cm_add_img').slideDown(300);
    }
    function cmDrawImage(editor, prefix_str) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);
        var cm_img_url =3D $('#'+prefix_str+'cm_img_url').val();
        var cm_img_alt =3D $('#'+prefix_str+'cm_img_alt').val();
        if(cm_img_url!=3D"" || cm_img_alt!=3D""){
            _replaceSelection(cm, stat.image, '![', =
cm_img_alt+']('+cm_img_url+')');
        }
        $('.cm_add_img').slideUp(300);
        $('.cm_dialog').fadeOut(300);
    }

    function cmDrawImageUp(editor, url) {
        var cm =3D editor.codemirror;
        var stat =3D getState(cm);
        _replaceSelection(cm, stat.image, '![', =
'=E5=9B=BE=E7=89=87=E8=AF=B4=E6=98=8E]('+ url +')');
        $('.cm_add_img').slideUp(300);
        $('.cm_dialog').fadeOut(300);
    }

    window.cmDrawLink =3D cmDrawLink;
    window.cmDrawImage =3D cmDrawImage;
    window.cmDrawImageUp =3D cmDrawImageUp;

    /**
     * Undo action.
     */
    function undo(editor) {
        var cm =3D editor.codemirror;
        cm.undo();
        cm.focus();
    }


    /**
     * Redo action.
     */
    function redo(editor) {
        var cm =3D editor.codemirror;
        cm.redo();
        cm.focus();
    }

    /**
     * Preview action.
     */
    function togglePreview(editor) {
        var toolbar =3D editor.toolbar.preview;
        var parse =3D editor.constructor.markdown;
        var cm =3D editor.codemirror;
        var wrapper =3D cm.getWrapperElement();
        var preview =3D wrapper.lastChild;
        if (!/editor-preview/.test(preview.className)) {
            preview =3D document.createElement('div');
            preview.className =3D 'editor-preview';
            wrapper.appendChild(preview);
        }
        if (/editor-preview-active/.test(preview.className)) {
            preview.className =3D preview.className.replace(
                /\s*editor-preview-active\s*/g, ''
            );
            toolbar.className =3D =
toolbar.className.replace(/\s*active\s*/g, '');
        } else {
            /* When the preview button is clicked for the first time,
             * give some time for the transition from editor.css to fire =
and the view to slide from right to left,
             * instead of just appearing.
             */
            setTimeout(function() {preview.className +=3D ' =
editor-preview-active'}, 1);
            toolbar.className +=3D ' active';
        }
        var text =3D cm.getValue();
        preview.innerHTML =3D parse(text);
    }

    function _replaceSelection(cm, active, start, end) {
        var text;
        var startPoint =3D cm.getCursor('start');
        var endPoint =3D cm.getCursor('end');
        if (active) {
            text =3D cm.getLine(startPoint.line);
            start =3D text.slice(0, startPoint.ch);
            end =3D text.slice(startPoint.ch);
            cm.setLine(startPoint.line, start + end);
        } else {
            text =3D cm.getSelection();
            cm.replaceSelection(start + text + end);

            startPoint.ch +=3D start.length;
            endPoint.ch +=3D start.length;
        }
        cm.setSelection(startPoint, endPoint);
        cm.focus();
    }


    function _toggleLine(cm, name) {
        var stat =3D getState(cm);
        var startPoint =3D cm.getCursor('start');
        var endPoint =3D cm.getCursor('end');
        var repl =3D {
            headline: /^(\s*)\#\s+/,
            heading: /^(\s*)\##\s+/,
            quote: /^(\s*)\>\s+/,
            'list-ul': /^(\s*)(\*|\-|\+)\s+/,
            'list-ol': /^(\s*)\d+\.\s+/
        };
        var map =3D {
            headline: '# ',
            heading: '## ',
            quote: '> ',
            'list-ul': '* ',
            'list-ol': '1. '
        };
        for (var i =3D startPoint.line; i <=3D endPoint.line; i++) {
            (function(i) {
                var text =3D cm.getLine(i);
                if (stat[name]) {
                    text =3D text.replace(repl[name], '$1');
                } else {
                    text =3D map[name] + text;
                }
                cm.setLine(i, text);
            })(i);
        }
        cm.focus();
    }


    /* The right word count in respect for CJK. */
    function wordCount(data) {
        var pattern =3D =
/[a-zA-Z0-9_\u0392-\u03c9]+|[\u4E00-\u9FFF\u3400-\u4dbf\uf900-\ufaff\u304=
0-\u309f\uac00-\ud7af]+/g;
        var m =3D data.match(pattern);
        var count =3D 0;
        if( m =3D=3D=3D null ) return count;
        for (var i =3D 0; i < m.length; i++) {
            if (m[i].charCodeAt(0) >=3D 0x4E00) {
                count +=3D m[i].length;
            } else {
                count +=3D 1;
            }
        }
        return count;
    }

    var toolbar =3D [
        '|',
        {name: 'headline', action: =
toggleHeadline,title:'=E6=A0=87=E9=A2=98=E4=B8=80=EF=BC=88Ctrl+Alt+1=EF=BC=
=89'},
        {name: 'heading', action: =
toggleHeading,title:'=E6=A0=87=E9=A2=98=E4=BA=8C=EF=BC=88Ctrl+Alt+2=EF=BC=
=89'},
        {name: 'bold', action: =
toggleBold,title:'=E7=B2=97=E4=BD=93=EF=BC=88Ctrl+B=EF=BC=89'},
        {name: 'italic', action: =
toggleItalic,title:'=E6=96=9C=E4=BD=93=EF=BC=88Ctrl+I=EF=BC=89'},
        '|',

        {name: 'quote-left', action: =
toggleBlockquote,title:'=E5=BC=95=E7=94=A8=EF=BC=88Ctrl+=E2=80=99=EF=BC=89=
'},
        {name: 'code', action: =
drawCode,title:'=E6=8F=92=E5=85=A5=E4=BB=A3=E7=A0=81=E7=89=87=EF=BC=88Ctr=
l+,=EF=BC=89'},
        {name: 'list-ul', action: =
toggleUnOrderedList,title:'=E6=97=A0=E5=BA=8F=E5=88=97=E8=A1=A8=EF=BC=88C=
trl+L=EF=BC=89'},
        {name: 'list-ol', action: =
toggleOrderedList,title:'=E6=9C=89=E5=BA=8F=E5=88=97=E8=A1=A8=EF=BC=88Ctr=
l+Alt+L=EF=BC=89'},
        '|',

        {name: 'link', =
title:'=E6=B7=BB=E5=8A=A0=E9=93=BE=E6=8E=A5=EF=BC=88Ctrl+K=EF=BC=89'},   =
 //action: drawLink,
        {name: 'picture', =
title:'=E6=B7=BB=E5=8A=A0=E5=9B=BE=E7=89=87=EF=BC=88Ctrl+Alt+I=EF=BC=89'}=
,   //action: drawImage,
        '|',

        {name: 'reply', action: =
undo,title:'=E6=92=A4=E9=80=80=EF=BC=88Ctrl+Z=EF=BC=89'},
        {name: 'share-alt', action: =
redo,title:'=E5=89=8D=E8=BF=9B=EF=BC=88Ctrl+Shift+Z=EF=BC=89'},
        '|',
        {name: 'info', action: =
'http://ask.csdn.net/pages/markdown',title:'markdown=E8=AF=AD=E6=B3=95=E5=
=8F=82=E8=80=83'},
        {name: 'preview', action: =
togglePreview,title:'=E9=A2=84=E8=A7=88'},
        //{name: 'fullscreen', action: toggleFullScreen},
        '|'
    ];

    /**
     * Interface of Editor.
     */
    function Editor(options) {
        options =3D options || {};

        if (options.element) {
            this.element =3D options.element;
        }

        options.toolbar =3D options.toolbar || Editor.toolbar;
        // you can customize toolbar with object
        // [{name: 'bold', shortcut: 'Ctrl-B', className: 'icon-bold'}]

        if (!options.hasOwnProperty('status')) {
            options.status =3D ['lines', 'words', 'cursor'];
        }

        this.options =3D options;

        // If user has passed an element, it should auto rendered
        if (this.element) {
            this.render();
        }
    }

    /**
     * Default toolbar elements.
     */
    Editor.toolbar =3D toolbar;

    /**
     * Default markdown render.
     */
    Editor.markdown =3D function(text) {
        if (window.marked) {
            // use marked as markdown parser
            return marked(text);
        }
    };

    /**
     * Render editor to the given element.
     */
    Editor.prototype.render =3D function(el) {
        if (!el) {
            el =3D this.element || =
document.getElementsByTagName('textarea')[0];
        }

        if (this._rendered && this._rendered =3D=3D=3D el) {
            // Already rendered.
            return;
        }

        this.element =3D el;
        var options =3D this.options;

        var self =3D this;
        var keyMaps =3D {};

        for (var key in shortcuts) {
            (function(key) {
                keyMaps[fixShortcut(key)] =3D function(cm) {
                    shortcuts[key](self);
                };
            })(key);
        }

        keyMaps["Enter"] =3D "newlineAndIndentContinueMarkdownList";
        keyMaps['Tab'] =3D 'tabAndIndentContinueMarkdownList';
        keyMaps['Shift-Tab'] =3D =
'shiftTabAndIndentContinueMarkdownList';

        this.codemirror =3D CodeMirror.fromTextArea(el, {
            mode: 'markdown',
            theme: 'paper',
            tabSize: '2',
            indentWithTabs: true,
            lineNumbers: false,
            autofocus: true,
            extraKeys: keyMaps
        });

        if (options.toolbar !=3D=3D false) {
            this.createToolbar();
        }
        if (options.status !=3D=3D false) {
            this.createStatusbar();
        }

        this._rendered =3D this.element;
    };

    Editor.prototype.createToolbar =3D function(items) {
        items =3D items || this.options.toolbar;

        if (!items || items.length =3D=3D=3D 0) {
            return;
        }

        var bar =3D document.createElement('div');
        bar.className =3D 'editor-toolbar';

        var self =3D this;

        var el;
        self.toolbar =3D {};

        for (var i =3D 0; i < items.length; i++) {
            (function(item) {
                var el;
                if (item.name) {
                    el =3D createIcon(item.name, item);
                } else if (item =3D=3D=3D '|') {
                    el =3D createSep();
                } else {
                    el =3D createIcon(item);
                }

                // bind events, special for info
                if (item.action) {
                    if (typeof item.action =3D=3D=3D 'function') {
                        el.onclick =3D function(e) {
                            item.action(self);
                        };
                    } else if (typeof item.action =3D=3D=3D 'string') {
                        el.href =3D item.action;
                        el.target =3D '_blank';
                    }
                }
                if(item.title){
                    el.title =3D item.title;
                }
                self.toolbar[item.name || item] =3D el;
                bar.appendChild(el);
            })(items[i]);
        }

        var cm =3D this.codemirror;
        cm.on('cursorActivity', function() {
            var stat =3D getState(cm);

            for (var key in self.toolbar) {
                (function(key) {
                    var el =3D self.toolbar[key];
                    if (stat[key]) {
                        el.className +=3D ' active';
                    } else {
                        el.className =3D =
el.className.replace(/\s*active\s*/g, '');
                    }
                })(key);
            }
        });

        var cmWrapper =3D cm.getWrapperElement();
        cmWrapper.parentNode.insertBefore(bar, cmWrapper);
        return bar;
    };

    Editor.prototype.createStatusbar =3D function(status) {
        status =3D status || this.options.status;

        if (!status || status.length =3D=3D=3D 0) return;

        var bar =3D document.createElement('div');
        bar.className =3D 'editor-statusbar';

        var pos, cm =3D this.codemirror;
        for (var i =3D 0; i < status.length; i++) {
            (function(name) {
                var el =3D document.createElement('span');
                el.className =3D name;
                if (name =3D=3D=3D 'words') {
                    el.innerHTML =3D '0';
                    cm.on('update', function() {
                        el.innerHTML =3D wordCount(cm.getValue());
                    });
                } else if (name =3D=3D=3D 'lines') {
                    el.innerHTML =3D '0';
                    cm.on('update', function() {
                        el.innerHTML =3D cm.lineCount();
                    });
                } else if (name =3D=3D=3D 'cursor') {
                    el.innerHTML =3D '0:0';
                    cm.on('cursorActivity', function() {
                        pos =3D cm.getCursor();
                        el.innerHTML =3D pos.line + ':' + pos.ch;
                    });
                }
                bar.appendChild(el);
            })(status[i]);
        }
        var cmWrapper =3D this.codemirror.getWrapperElement();
        cmWrapper.parentNode.insertBefore(bar, cmWrapper.nextSibling);
        return bar;
    };

    /**
     * Get or set the text content.
     */
    Editor.prototype.value =3D function(val) {
        if (val) {
            this.codemirror.getDoc().setValue(val);
            return this;
        } else {
            return this.codemirror.getValue();
        }
    };


    /**
     * Bind static methods for exports.
     */
    Editor.toggleHeadline =3D toggleHeadline;
    Editor.toggleHeading =3D toggleHeading;
    Editor.toggleBold =3D toggleBold;
    Editor.toggleItalic =3D toggleItalic;
    Editor.toggleBlockquote =3D toggleBlockquote;
    Editor.drawCode =3D drawCode;
    Editor.toggleUnOrderedList =3D toggleUnOrderedList;
    Editor.toggleOrderedList =3D toggleOrderedList;
    Editor.drawLink =3D drawLink;
    Editor.drawImage =3D drawImage;
    Editor.undo =3D undo;
    Editor.redo =3D redo;
    Editor.togglePreview =3D togglePreview;
    Editor.toggleFullScreen =3D toggleFullScreen;

    /**
     * Bind instance methods for exports.
     */
    Editor.prototype.toggleHeadline =3D function() {
        toggleHeadline(this);
    };
    Editor.prototype.toggleHeading =3D function() {
        toggleHeading(this);
    };
    Editor.prototype.toggleBold =3D function() {
        toggleBold(this);
    };
    Editor.prototype.toggleItalic =3D function() {
        toggleItalic(this);
    };
    Editor.prototype.toggleBlockquote =3D function() {
        toggleBlockquote(this);
    };
    Editor.prototype.drawCode =3D function() {
        drawCode(this);
    };
    Editor.prototype.toggleUnOrderedList =3D function() {
        toggleUnOrderedList(this);
    };
    Editor.prototype.toggleOrderedList =3D function() {
        toggleOrderedList(this);
    };
    Editor.prototype.drawLink =3D function() {
        drawLink(this);
    };
    Editor.prototype.drawImage =3D function() {
        drawImage(this);
    };
    Editor.prototype.undo =3D function() {
        undo(this);
    };
    Editor.prototype.redo =3D function() {
        redo(this);
    };
    Editor.prototype.togglePreview =3D function() {
        togglePreview(this);
    };
    Editor.prototype.toggleFullScreen =3D function() {
        toggleFullScreen(this);
    };

    global.Editor =3D Editor;
})(this);
------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: 7bit
Content-Location: http://c.csdnimg.cn/comm_ask/js/libs/prettify.js

//marked
------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://c.csdnimg.cn/comm_ask/js/apps/ask_float_block.js

var editor_change_ask_o_domain =3D "";
function editor_change_ask_o(str){
    var editor =3D $( document ).data('editor_all');
    //editor.render(document.getElementById('editor_all'));
    window.cmDrawImageUp(editor, str);

    if (editor_change_ask_o_domain !=3D "") {
        document.domain =3D editor_change_ask_o_domain;
        editor_change_ask_o_domain =3D "";
    }
}
(function(){
    $(function(){
        var prot =3D window.location.protocol;
        var afont =3D prot + =
"//ask.csdn.net/assets/ask_float_fonts_css-6b30a53970eb5c3a2a045e3df585b4=
75.css";//=E8=AF=A5=E6=A0=B7=E5=BC=8F=E6=96=87=E4=BB=B6=E5=90=8D=E7=A7=B0=
=E8=A6=81=E6=A0=B9=E6=8D=AE=E6=AF=8F=E6=AC=A1=E5=8F=91=E5=B8=83=E5=90=8E=E7=
=9A=84=E5=8A=A8=E6=80=81=E5=90=8D=E7=A7=B0=E6=9D=A5=E4=BF=AE=E6=94=B9=E3=80=
=82//font-awesome.min-58872ef19fd8eb4c71bc6667c200b0c0.css";
        $('body').append('<link rel=3D"stylesheet" type=3D"text/css" =
media=3D"screen" href=3D"' + afont + '">');

        var first_pop_str=3D"<div class=3D'pop_edit ask_first =
comm_ask_first' style=3D'display: none;'><h3>=E6=8F=90=E9=97=AE</h3><a =
href=3D'#' nodetype=3D'close' class=3D'close'>=C3=97</a>"+
            " <div class=3D'context'>"+
            " <form id=3D'form' nodetype=3D'form-popup' =
class=3D'form'>"+
            "<div class=3D'askFirst_desc'><span class=3D'afd_p'>CSDN =
=E9=97=AE=E7=AD=94=E6=98=AF=E4=B8=80=E4=B8=AA=E7=9C=9F=E8=AF=9A=E3=80=81=E8=
=AE=A4=E7=9C=9F=E3=80=81=E6=9C=89=E6=B4=BB=E5=8A=9B=E7=9A=84=E6=8A=80=E6=9C=
=AF=E7=A4=BE=E5=8C=BA=E3=80=82</span><br><span =
class=3D'afd_p'>=E6=88=91=E4=BB=AC=E5=BE=88=E6=84=BF=E6=84=8F=E5=B8=AE=E5=
=8A=A9=E6=82=A8=EF=BC=8C=E5=B8=8C=E6=9C=9B=E6=82=A8=E6=8F=90=E5=87=BA=E7=9A=
=84=E6=AF=8F=E4=B8=80=E4=B8=AA=E9=97=AE=E9=A2=98=E9=83=BD=E8=83=BD=E5=BE=97=
=E5=88=B0=E8=A7=A3=E7=AD=94=EF=BC=8C=E5=90=8C=E6=97=B6=E4=B9=9F=E5=B8=8C=E6=
=9C=9B=E6=82=A8=E7=9F=A5=E9=81=93=EF=BC=8C=E4=B8=80=E4=B8=AA=E5=A5=BD=E7=9A=
=84=E9=97=AE=E9=A2=98</span><br><span"+
            " =
class=3D'afd_p'>=E6=9B=B4=E5=AE=B9=E6=98=93=E5=BE=97=E5=88=B0=E5=A5=BD=E7=
=9A=84=E7=AD=94=E6=A1=88<span>&nbsp;&nbsp;</span><a =
href=3D'//ask.csdn.net/help?#rule12' =
target=3D'_blank'>=E6=80=8E=E6=A0=B7=E6=8F=90=E5=87=BA=E4=B8=80=E4=B8=AA=E5=
=A5=BD=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=9F</a></span><br>"+
            "<span =
class=3D'afd_p'>=E6=8F=90=E9=97=AE=E6=97=B6=E5=BA=94=E9=81=B5=E5=BE=AA=E8=
=AE=A4=E7=9C=9F=E3=80=81=E7=AE=80=E6=B4=81=E3=80=81=E6=98=8E=E7=A1=AE=E3=80=
=81=E8=A7=84=E8=8C=83=E7=9A=84=E5=8E=9F=E5=88=99</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E9=A6=96=E5=85=88=E7=A1=AE=E5=AE=9A=E6=82=A8=E6=98=AF=E5=90=A6=E9=9C=80=E8=
=A6=81=E4=BD=BF=E7=94=A8=E6=82=AC=E8=B5=8F=E6=8F=90=E9=97=AE=EF=BC=9B</sp=
an><br><span class=3D'afd_p'>=E2=80=A2 =
=E9=97=AE=E9=A2=98=E4=B8=AD=E6=B2=A1=E5=BF=85=E8=A6=81=E5=87=BA=E7=8E=B0=E2=
=80=9C=E5=A4=A7=E7=A5=9E=E5=B8=AE=E5=B8=AE=E5=BF=99=E2=80=9D=E3=80=81=E2=80=
=9C=E6=95=99=E6=8E=88=E6=95=91=E6=95=91=E6=88=91=E2=80=9D=E4=B9=8B=E7=B1=BB=
=E4=B8=8E=E6=8A=80=E6=9C=AF=E9=97=AE=E9=A2=98=E6=97=A0=E5=85=B3=E7=9A=84=E4=
=BF=A1=E6=81=AF=EF=BC=8C=E5=8F=8A=E6=97=B6=E9=87=87=E7=BA=B3=E6=9C=80=E4=BD=
=B3=E7=AD=94=E6=A1=88=E5=B0=B1=E6=98=AF=E5=AF=B9=E5=9B=9E=E7=AD=94=E4=BA=BA=
=E7=9A=84=E6=9C=80=E5=A5=BD=E8=AE=A4=E5=8F=AF=EF=BC=9B</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E9=97=AE=E9=A2=98=E6=A0=87=E9=A2=98=E8=A6=81=E6=9C=89=E6=98=8E=E7=A1=AE=E8=
=80=8C=E6=9C=89=E4=BB=B7=E5=80=BC=E7=9A=84=E4=BF=A1=E6=81=AF=EF=BC=8C=E2=80=
=9C=E6=9C=89=E4=BA=BA=E9=81=87=E5=88=B0=E8=BF=87=E8=BF=99=E7=A7=8D=E6=83=85=
=E5=86=B5=E5=90=97=EF=BC=9F=E5=B8=AE=E5=BF=99=E8=BF=9B=E6=9D=A5=E7=9C=8B=E7=
=9C=8B=E2=80=9D=E8=BF=99=E7=A7=8D=E6=A0=87=E9=A2=98=E5=8F=AA=E4=BC=9A=E9=99=
=8D=E4=BD=8E=E6=82=A8=E7=9A=84=E9=97=AE=E9=A2=98=E8=A2=AB=E5=9B=9E=E7=AD=94=
=E7=9A=84=E6=A6=82=E7=8E=87=EF=BC=9B</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E2=80=9C=E6=B1=82=E4=BB=A3=E7=A0=81=E2=80=9D=E7=B1=BB=E7=9A=84=E9=97=AE=E9=
=A2=98=E8=AF=B7=E6=82=A8=E6=82=AC=E8=B5=8F=E6=8F=90=E9=97=AE=EF=BC=8C=E6=88=
=91=E4=BB=AC=E4=B9=90=E4=BA=8E=E5=B0=86=E5=85=B6=E7=9C=8B=E6=88=90=E4=B8=80=
=E7=A7=8D=E4=BA=A4=E6=98=93=E3=80=82</span><br><br><span"+
            " =
class=3D'afd_p'>=E9=97=AE=E7=AD=94=E9=A2=91=E9=81=93=E5=B9=B6=E4=B8=8D=E6=
=AC=A2=E8=BF=8E=E8=BF=99=E7=A7=8D=E9=97=AE=E9=A2=98</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E5=92=8C=E5=B7=B2=E6=9C=89=E9=97=AE=E9=A2=98=E5=AE=8C=E5=85=A8=E9=87=8D=E5=
=A4=8D=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=8C=E4=B8=BA=E9=81=BF=E5=85=8D=E9=87=
=8D=E5=A4=8D=EF=BC=8C=E6=8F=90=E9=97=AE=E5=89=8D=E8=AF=B7=E5=85=88=E8=BF=9B=
=E8=A1=8C=E6=90=9C=E7=B4=A2=EF=BC=9B</span><br><span =
class=3D'afd_p'>=E2=80=A2 =E6=8B=9B=E8=81=98 / =
=E6=B1=82=E8=81=8C=E3=80=81=E4=BA=A4=E6=98=93 / =
=E5=90=88=E4=BD=9C=E3=80=81=E5=AF=BB=E4=BA=BA / =
=E5=BE=81=E5=8F=8B=EF=BC=9B</span><br><span"+
            " class=3D'afd_p'>=E2=80=A2 =
=E6=97=A0=E6=98=8E=E7=A1=AE=E7=AD=94=E6=A1=88=E7=9A=84=E8=B0=83=E6=9F=A5=E7=
=B1=BB=E9=97=AE=E9=A2=98=E3=80=82=E5=A6=82=E8=8B=B9=E6=9E=9C=E5=92=8C=E8=B0=
=B7=E6=AD=8C=EF=BC=8C=E5=A4=A7=E5=AE=B6=E6=9B=B4=E6=AC=A3=E8=B5=8F=E8=B0=81=
=EF=BC=9F</span><br><span =
class=3D'afd_p'>=E6=83=B3=E5=AD=A6=E4=BC=9A=E6=9B=B4=E5=A5=BD=E7=9A=84=E6=
=8F=90=E9=97=AE=EF=BC=8C=E8=AF=B7=E6=9F=A5=E7=9C=8B<span>&nbsp;</span><a"=
+
            " href=3D'//ask.csdn.net/help' =
target=3D'_blank'>=E9=97=AE=E7=AD=94=E9=A2=91=E9=81=93=E6=8F=90=E9=97=AE=E8=
=A7=84=E8=8C=83</a></span></div>"+
            "<div =
class=3D'askFirst_se'><span>=E6=8F=90=E9=97=AE=E5=89=8D=E8=AF=B7=E6=90=9C=
=E7=B4=A2</span></div>"+
            "<div class=3D'search_div'><input id=3D'askInput' =
type=3D'text' =
placeholder=3D'=E8=BE=93=E5=85=A5=E9=97=AE=E9=A2=98=EF=BC=8C=E6=9F=A5=E7=9C=
=8B=E6=98=AF=E5=90=A6=E5=AD=98=E5=9C=A8=E7=9B=B8=E4=BC=BC=E7=9A=84=E9=97=AE=
=E9=A2=98'></div></form> </div>"+
            " <div class=3D'success'></div></div>";
        var second_pop_str=3D"<div class=3D'pop_edit ask_second =
comm_ask_second'><h3>=E6=8F=90=E9=97=AE</h3><span =
class=3D'ask_float_span'>=E6=82=A8=E7=9A=84=E9=97=AE=E9=A2=98=E5=B0=86=E4=
=BC=9A=E8=A2=AB=E5=8F=91=E5=B8=83=E5=9C=A8=E2=80=9C<a =
class=3D'ask_float_channel' href=3D'//ask.csdn.net' target=3D'_blank' =
style=3D'cursor:pointer'>=E6=8A=80=E6=9C=AF=E9=97=AE=E7=AD=94</a>=E2=80=9D=
=E9=A2=91=E9=81=93</span><a href=3D'#' nodeType=3D'close' =
class=3D'close'>=C3=97</a><div class=3D'context'><div =
class=3D'err_div'><span class=3D'err_ico'></span>"+
            "<span =
class=3D'err_txt'>=E8=AF=A5=E9=97=AE=E9=A2=98=E5=B7=B2=E5=AD=98=E5=9C=A8=EF=
=BC=8C=E8=AF=B7=E5=8B=BF=E9=87=8D=E5=A4=8D=E6=8F=90=E9=97=AE</span></div>=
"+
            "<div class=3D'input_div'><input id=3D'askInputSecond' =
type=3D'text' style=3D'font-size:14px;' =
placeholder=3D'=E9=97=AE=E9=A2=98=E6=A0=87=E9=A2=98'/></div>"+
            "<div class=3D'cm_box'><div class=3D'cm_dialog'></div> <div =
class=3D'pop_cm cm_add_link'><input type=3D'text' =
placeholder=3D'=E9=93=BE=E6=8E=A5=E5=86=85=E5=AE=B9' =
id=3D'af_cm_link_txt'><input type=3D'text' =
placeholder=3D'=E9=93=BE=E6=8E=A5=E5=9C=B0=E5=9D=80' =
id=3D'af_cm_link_url'><input type=3D'text' =
placeholder=3D'=E9=93=BE=E6=8E=A5=E6=8F=90=E7=A4=BA' =
id=3D'af_cm_link_tit'><div class=3D'text-right'><span class=3D'btn =
btn-default btn-sm' =
id=3D'add_link_btn'>=E6=8F=92=E5=85=A5=E9=93=BE=E6=8E=A5</span> </div> =
</div>"+
            "<div class=3D'pop_cm cm_add_img'><div class=3D'nav-tabs'><a =
class=3D'img_tab active' =
href=3D'#tab_upload'>=E6=9C=AC=E5=9C=B0=E4=B8=8A=E4=BC=A0</a><a =
class=3D'img_tab' =
href=3D'#tab_weburl'>=E7=BD=91=E7=BB=9C=E5=9B=BE=E7=89=87</a></div><div =
class=3D'tab_panel active' id=3D'tab_upload'><div =
class=3D'set_img'><iframe =
src=3D'http://ask.csdn.net/upload.html'></iframe></div></div><div =
class=3D'tab_panel' id=3D'tab_weburl'><input type=3D'text' =
placeholder=3D'=E5=9B=BE=E7=89=87=E5=9C=B0=E5=9D=80' =
id=3D'af_cm_img_url'><input type=3D'text' =
placeholder=3D'=E5=9B=BE=E7=89=87=E8=AF=B4=E6=98=8E' =
id=3D'af_cm_img_alt'><div class=3D'text-right'><span class=3D'btn =
btn-default btn-sm' =
id=3D'add_img_btn'>=E6=8F=92=E5=85=A5=E5=9B=BE=E7=89=87</span> =
</div></div> </div></div> "+
            "<textarea id=3D'editor_all' rows=3D'8'></textarea>"+
            "<div class=3D'div_tags clearfix'><div id=3D'divSearchTags' =
class=3D'tags_con'>"+
            "<input type=3D'text'/></div><input type=3D'hidden' =
name=3D'txtSearchTags'/></div>"+
            "<div id=3D'ask2_tagRecomm_div' class=3D'drt_tagRecomm =
tracking-ad' data-mod=3D'popu_73'><span =
class=3D'drt_tit'>=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE=EF=BC=9A</span></d=
iv></div>"+
            "<div class=3D'success'><div class=3D'left_area'><input =
id=3D'chk_cb' type=3D'checkbox'/><span =
class=3D'wyxs'>=E6=88=91=E8=A6=81=E6=82=AC=E8=B5=8F</span><input =
id=3D'cb_num'  class=3D'cb_num' readonly=3D'true'/>"+
            "<span class=3D'phib_rii'><span> =
=E5=B8=81</span></span></div><a href=3D'#' nodeType=3D'cancel' =
class=3D'cancel'>=E5=8F=96=E6=B6=88</a><a href=3D'#' nodeType=3D'ok' =
class=3D'ok'>=E5=8F=91=E5=B8=83</a></div></div>";

        =
//=E8=AF=A5=E5=80=BC=E6=98=AF=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8=E5=88=B0=
=E4=B8=8A=E9=9D=A2=E7=9A=84=E8=B7=9D=E7=A6=BB=EF=BC=8C=E5=A4=A7=E7=BA=A6=E5=
=9C=A8%55=E5=A4=84
        var back_top_value =
=3DMath.ceil(document.documentElement.clientHeight *0.55);
        =
//=E7=8E=B0=E5=9C=A8=E6=88=91=E4=BB=AC=E5=BC=80=E5=A7=8B=E5=8A=A0=E5=85=A5=
=E4=BA=8C=E7=BB=B4=E7=A0=81=E5=8A=9F=E8=83=BD=EF=BC=8C=E7=84=B6=E5=90=8E=E6=
=8A=8A=E6=8F=90=E9=97=AE=E6=94=B9=E4=B8=BAapp=E4=B8=8B=E8=BD=BD
        if(window.quickReplyflag) {
            =
//=E6=B3=A8=E9=87=8A=E7=9A=84=E9=83=A8=E5=88=86=E6=98=AF=E4=BB=A5=E5=89=8D=
=E6=8F=90=E9=97=AE=E7=9A=84=EF=BC=8C=E8=BF=99=E4=B8=AA=E6=97=B6=E5=80=99=E5=
=85=B6=E5=AE=9E=E5=90=8E=E7=BB=AD=E7=9A=84=E5=BE=88=E5=A4=9A=E4=B8=8E=E8=BF=
=99=E4=B8=AA=E6=8C=89=E9=92=AE=E7=9B=B8=E5=85=B3=E7=9A=84=E4=BB=A3=E7=A0=81=
=E6=B2=A1=E7=94=A8=E4=BA=86=EF=BC=8C=E5=B0=B1=E6=98=AF=E9=82=A3=E4=BA=9B=E5=
=BC=B9=E5=87=BA=E7=9A=84=E6=8F=90=E9=97=AE=E6=A1=86=EF=BC=8C=E5=85=88=E4=B8=
=8D=E5=88=A0=E9=99=A4=E5=90=A7=E3=80=82
            /* var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'tracking-ad' chg-blk=3D'0' ><a id=3D'com-ask-float-block'  =
title=3D'=E6=8F=90=E9=97=AE=E6=8C=89=E9=92=AE' =
style=3D'top:"+(back_top_value-82)+"px'></a>"+
             "<a id=3D'com-quick-reply'  =
title=3D'=E5=BF=AB=E9=80=9F=E5=9B=9E=E5=A4=8D' =
style=3D'top:"+(back_top_value-41)+"px'></a><a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' ></a> =
</div>";*/
            /*var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'tracking-ad' chg-blk=3D'0' ><a id=3D'com-appcode-float-block' =
href=3D'http://www.csdn.net/app/' target=3D'_blank' =
title=3D'APP=E4=BA=8C=E7=BB=B4=E7=A0=81' =
style=3D'top:"+(back_top_value-160)+"px'><span =
id=3D'appcode-close'></span></a><a id=3D'com-app-float-block' =
href=3D'http://www.csdn.net/app/' title=3D'APP=E4=B8=8B=E8=BD=BD' =
style=3D'top:"+(back_top_value-76)+"px'></a>"+
                "<a id=3D'com-quick-reply'  =
title=3D'=E5=BF=AB=E9=80=9F=E5=9B=9E=E5=A4=8D' =
style=3D'top:"+(back_top_value-38)+"px'></a><a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' ></a> =
</div>";*/
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'csdn-tracking-statistics' chg-blk=3D'0' ><a =
id=3D'com-quick-reply'  title=3D'=E5=BF=AB=E9=80=9F=E5=9B=9E=E5=A4=8D' =
style=3D'top:"+(back_top_value-38)+"px'></a><a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' ></a> =
</div>";
        } else if (window.eduCallCenter) {
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'csdn-tracking-statistics' chg-blk=3D'0' >" +
                /*"<a id=3D'com-appcode-float-block' =
href=3D'http://edu.csdn.net/app/' target=3D'_blank' =
title=3D'APP=E4=BA=8C=E7=BB=B4=E7=A0=81' =
style=3D'display:none;top:"+(back_top_value-135)+"px; background: =
url(http://edu.csdn.net/images/weix.png) no-repeat top =
left;background-size:100% auto; '><span id=3D'appcode-close' =
style=3D''></span></a> <a id=3D'com-app-float-block'  =
title=3D'APP=E4=B8=8B=E8=BD=BD' =
style=3D'top:"+(back_top_value-76)+"px'></a>"+
*/                "<a id=3D'com-edu-call-center'  =
title=3D'=E5=AD=A6=E9=99=A2=E5=AE=A2=E6=9C=8D' =
style=3D'top:"+(back_top_value-38)+"px' target=3D'_blank' =
href=3D'http://wpa.qq.com/msgrd?v=3D3&amp;uin=3D3390397209&amp;site=3Dqq&=
amp;menu=3Dyes'></a>"+
                "<a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' =
></a></div>";
        } else if (window.bbsInfoflag) {=20
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'csdn-tracking-statistics' chg-blk=3D'0' >"+
                "<a id=3D'com-quick-reply-bbs' =
title=3D'=E5=BF=AB=E9=80=9F=E5=9B=9E=E5=A4=8D' =
style=3D'top:"+(back_top_value-114)+"px'></a>" +
                "<a id=3D'com-back-channel' =
title=3D'=E5=9B=9E=E5=88=B0=E9=A2=91=E9=81=93' =
style=3D'top:"+(back_top_value-76)+"px'></a>" +
                "<a id=3D'com-back-home' =
title=3D'=E5=9B=9E=E5=88=B0=E9=A6=96=E9=A1=B5' =
style=3D'top:"+(back_top_value-38)+"px'></a>" +
                "<a id=3D'com-d-top-a' =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' ></a> =
</div>";
        }
        =
//=E5=86=8D=E6=AC=A1=E9=87=8D=E6=96=B0=E5=8A=A0=E5=85=A5ask=E4=BE=9B=E5=95=
=86=E5=8A=A1=E9=A1=B9=E7=9B=AE=E9=82=A3=E8=BE=B9=E4=BD=BF=E7=94=A82015061=
0=20
        else if (window.askForBussenessFlag) {
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'csdn-tracking-statistics' chg-blk=3D'0' >"+
                 "<a id=3D'com-ask-float-block'  =
style=3D'top:"+(back_top_value-38)+"px' =
title=3D'=E6=88=91=E8=A6=81=E6=8F=90=E9=97=AE' onclick=3D'' ></a>"+
                "<a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' =
></a></div>";
        }
        else {
            var float_ask_img=3D"<div data-mod=3D'popu_64' =
class=3D'csdn-tracking-statistics' chg-blk=3D'0' >"+
                "<a id=3D'com-d-top-a'  =
style=3D'top:"+back_top_value+"px' =
title=3D'=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8' onclick=3D'' =
></a></div>";
        }

        //=E6=90=9C=E7=B4=A2=E5=BB=BA=E8=AE=AE=E7=9A=84HTML
        var common_ask_div_sc=3D"<div id=3D\"common_ask_div_sc\" =
class=3D\"searchContainer\"><div =
class=3D\"sTitle\">=E5=8F=AF=E8=83=BD=E5=AD=98=E5=9C=A8=E7=B1=BB=E4=BC=BC=
=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=9A</div><div class=3D\"sFooter\"><a =
class=3D\"sFirstNewAsk\">=E6=88=91=E6=83=B3=E6=8F=90=E4=B8=80=E4=B8=AA=E6=
=96=B0=E9=97=AE=E9=A2=98</a></div></div>"
        var =
total_ask_str=3Dfloat_ask_img+second_pop_str+common_ask_div_sc;//float_as=
k_img+first_pop_str+second_pop_str+common_ask_div_sc
        $("body").append(total_ask_str);

        =
//=E7=82=B9=E5=87=BB=E5=85=B3=E9=97=AD=E4=BA=8C=E7=BB=B4=E7=A0=81

        $("#com-appcode-float-block #appcode-close").click(function(){
            $("#com-appcode-float-block").hide('slow');
			return false;
            //$("#com-appcode-float-block").remove();

        })

        //=E5=AD=A6=E9=99=A2APP=E4=B8=8B=E8=BD=BD

        $("#com-app-float-block").click(function(){
            if (window.eduCallCenter){
                $("#com-appcode-float-block").show();
            }
        });

        $( 'body').bind( 'click', function ( evt ) {
            $target =3D $( evt.target );
            if ( $target.attr( 'id') =3D=3D 'add_img_btn' )
            {
                cmDrawImage(editor, "af_");
                return false;
            }else if( $target.attr( 'class') =3D=3D 'img_tab' ){
                =
$target.addClass('active').siblings('.img_tab').removeClass('active');
                var _target =3D $target.attr('href');
                =
$(_target).addClass('active').siblings('.tab_panel').removeClass('active'=
);
            }else if( $target.attr( 'id') =3D=3D 'add_link_btn' ) {
                cmDrawLink(editor, "af_");
                return false;
            }else if( $target.attr( 'class') =3D=3D 'cm_dialog'){
                $('.pop_cm').hide(300);
                $('.cm_dialog').hide();
                if (editor_change_ask_o_domain !=3D "") {
                    document.domain =3D editor_change_ask_o_domain;
                    editor_change_ask_o_domain =3D "";
                }
            }else if ($target.hasClass('icon-link')){     //icon-link
                var $ft =3D $target.parents()[1];
                //var $ft =3D $tb.parents()[0];
                $(".cm_dialog", $ft).fadeIn(300);
                $(".cm_add_link", $ft).slideDown(300);
                $(".cm_add_img", $ft).slideUp(300);

            }else if ($target.hasClass('icon-picture')){     //icon-link
                var $ft =3D $target.parents()[1];
                //var $ft =3D $tb.parents()[0];
                $(".cm_dialog", $ft).fadeIn(300);
                $(".cm_add_link", $ft).slideUp(300);
                $(".cm_add_img", $ft).slideDown(300);
                editor_change_ask_o_domain =3D document.domain;
                document.domain =3D "csdn.net";
            }
        } )

        =
//=E5=88=A4=E6=96=AD=E6=98=AF=E4=B8=8D=E6=98=AF=E6=9C=89=E5=BF=AB=E9=80=9F=
=E5=9B=9E=E5=A4=8D=EF=BC=8C=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8start
        $("#com-quick-reply").click(function(){
            if($("#comment_content").length>0){
                setEditorFocus();
            }
            else{
                window.location.href =3D "https://passport.csdn.net/";
            }
        });


        var d_top =3D $('#com-d-top-a');

        $(document).scroll(function(){
            var scrTop =3D (document.body.scrollTop || =
document.documentElement.scrollTop);
            if (scrTop > 500)
            {
                d_top.show();
            } else
            {
                d_top.hide();
            }

        })
        $('#com-d-top-a').click(function ()
        {
            scrollTo(0, 0);
            this.blur();
            return false;
        });
        =
//=E5=88=A4=E6=96=AD=E6=98=AF=E4=B8=8D=E6=98=AF=E6=9C=89=E5=BF=AB=E9=80=9F=
=E5=9B=9E=E5=A4=8D=EF=BC=8C=E8=BF=94=E5=9B=9E=E9=A1=B6=E9=83=A8end

        var coin_flag=3Dfalse;
        //var prot =3D window.location.protocol;
        =
//=E5=88=A4=E6=96=AD=E6=98=AF=E5=90=A6=E9=A6=96=E6=AC=A1=E7=82=B9=E5=87=BB=
=E6=8F=90=E9=97=AE=E6=8C=89=E9=92=AE
        var check_accept_rules_url =3D prot + =
"//ask.csdn.net/users/check_accept_rules.js";
        =
//=E6=8F=90=E9=97=AE=E6=97=B6=EF=BC=8C=E6=A0=87=E9=A2=98=E5=BD=95=E5=85=A5=
=E6=A1=86=E7=9A=84=E8=87=AA=E5=8A=A8=E5=AE=8C=E6=88=90
        var ask_topic_autocomplete_url =3D prot + =
"//ask.csdn.net/questions/autocomplete.js";
        =
//=E6=8F=90=E9=97=AE=E6=97=B6=EF=BC=8C=E5=85=89=E6=A0=87=E7=A6=BB=E5=BC=80=
=E6=A0=87=E9=A2=98=E5=90=8E=E7=9A=84=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE
        // var ask_topic_tag_suggest_url =3D " =
http://ask.csdn.net/questions/tag_autocomplete.js";
        var ask_topic_tag_suggest_proxy =3D prot + =
"//internalapi.csdn.net/proxy.html";
        var ask_topic_tag_suggest_url =3D prot + =
"//internalapi.csdn.net/myapi/ask_topic/ask_topic_tag_suggest";//?x-acl-t=
oken=3DYz3GAP4stGOIrLaIrnDed-uThp8K";
        =
//=E6=8F=90=E9=97=AE=E6=97=B6=EF=BC=8C=E5=8F=91=E5=B8=83=E9=97=AE=E9=A2=98=
=E7=9A=84=E5=9C=B0=E5=9D=80
        var create_question_proxy =3D prot + =
"//ask.csdn.net/proxy.html";
        var create_question_url =3D prot + =
"//ask.csdn.net/questions/create_question.json";
        //=E9=AA=8C=E8=AF=81C=E5=B8=81
        var valid_coin=3D   prot + "//ask.csdn.net/users/get_scores.js";
        //=E9=97=AE=E9=A2=98=E9=93=BE=E6=8E=A5=E8=B7=B3=E8=BD=AC
        var ask_detail_url =3D  prot + "//ask.csdn.net/questions/";
        var ajaxProxyCaches =3D {};

        var isSubmitting =3D false;


        var editor =3D new Editor();
        $( document ).data( 'editor_all', editor );
        editor.render(document.getElementById('editor_all'));

        function ajaxProxy(proxyUrl, opts) {
            var c =3D ajaxProxyCaches[proxyUrl];
            if (c =3D=3D=3D undefined) {
                c =3D ajaxProxyCaches[proxyUrl] =3D [];
                var func =3D arguments.callee;
                $('<iframe class=3D"poxy_uc" src=3D"' + proxyUrl + '" =
style=3D"display:none">').load(function () {
                    c.contentWindow =3D this.contentWindow;
                    func(proxyUrl, opts);
                }).prependTo('body');
            } else if (c.contentWindow =3D=3D=3D undefined) {
                c.push(opts);
            } else {
                do {
                    c.contentWindow.jQuery.ajax(opts);
                } while (opts =3D c.shift());
            }
        }

        //json =3D {status:false, error:1, msg: =
'=E8=AF=B7=E5=85=88=E7=99=BB=E5=BD=95'}
        //json =3D {status:false, error:2, msg: =
'=E6=82=A8=E5=B7=B2=E8=A2=ABCSDN=E9=97=AE=E7=AD=94=E7=A6=81=E8=A8=80'}
        //json =3D {status:false, error:3, msg: =
'=E6=82=A8=E5=B7=B2=E8=A2=AB=E5=B0=81=E5=8F=B7'}
        //json =3D {status:true, error:0, msg: =
'=E6=82=A8=E5=B7=B2=E7=BB=8F=E7=99=BB=E5=BD=95'}

        =
//=E6=98=AF=E5=90=A6=E9=A6=96=E6=AC=A1=E7=82=B9=E5=87=BB=E6=8F=90=E9=97=AE=

        $("#com-ask-float-block").bind('click', function(){
            =
//$('.editor-preview.editor-preview-active').removeClass('editor-preview-=
active');
            //$('.icon-preview.active').removeClass('active');
            //document.domain=3D"csdn.net";
            //pop($("body > .ask_second"));
            //editor.codemirror.getValue =3D "";
            $(".ask_second").remove();
            $("body").append(second_pop_str);
            editor =3D new Editor();
            $( document ).data( 'editor_all', editor );
            editor.render(document.getElementById('editor_all'));


            $("#askInputSecond").focus();//
            $(".CodeMirror").removeClass("CodeMirror-focused");
            $(".comm_ask_second .CodeMirror textarea").blur();
            //$(".CodeMirror-code, .CodeMirror-measure").html("");
            $.ajax({
                type: "get",
                url: check_accept_rules_url, =
//"http://ask.csdn.net/users/check_accept_rules",//=E5=88=A4=E6=96=AD=E6=98=
=AF=E5=90=A6=E7=99=BB=E5=BD=95=EF=BC=8C
                dataType: "jsonp",
                jsonp: "callback",
                success: function(obj) {

                    if (obj.error =3D=3D 0) {
                        pop($("body > .ask_second"));

                        =
$(".CodeMirror").removeClass("CodeMirror-focused");
                    } else if (obj.error =3D=3D 1) {
                        window.location.href =3D =
"https://passport.csdn.net/";
                    } else {
                        alert(obj.msg);
                    }
                },
                error: function(err) {
                    var i =3D 0;
                }
            });

        });

        function pop($popup){
            //=E9=81=AE=E7=BD=A9
            var w =3D $( document ).width();
            var h =3D $( document ).height();
            var $marker =3D $( '<div class=3D"marker"></div>' );
            if ( $.browser && $.browser.msie) {
                w =3D w - 18;
            }

            $marker.css( {
                opacity: 0.5,
                width: w + 'px',
                height: h + 'px'
            } );

            $( 'body' ).append( $marker );
            //=E4=BD=8D=E7=BD=AE=E5=8F=8A=E5=BC=B9=E5=87=BA

            //var top =3D $( window ).height() / 2 + $( window =
).scrollTop();
            //var top =3Ddocument.documentElement.clientHeight / 2 + $( =
window ).scrollTop();

            /*$popup.css( {
             top: top + 'px',
             left:"50%"

             } );*/

            setTimeout( function () {
                $popup.show();
                $popup.css( {
                    opacity: 1
                } );
                $(".CodeMirror").removeClass("CodeMirror-focused");
            }, 200 );
            =
//=E5=88=9D=E5=A7=8B=E5=8C=96=E5=9F=BA=E6=9C=AC=E7=9A=84=E4=BA=8B=E4=BB=B6=
=E7=BB=91=E5=AE=9A=E7=AD=89
            //=E5=8F=96=E6=B6=88=E4=BA=8B=E4=BB=B6=E7=BB=91=E5=AE=9A

            var $cancel=3D$popup.find( '[nodetype=3D"cancel"]' );
            var $close =3D $popup.find( '[nodetype=3D"close"]' );
            $cancel.add($close).unbind( 'click' );
            $cancel.add($close).bind( 'click', function () {
                $("#common_ask_div_sc").css("display","none");
                $popup.css( {
                    opacity: 0
                } );
                var $btn_sub =3D $popup.find( '[nodetype=3D"ok"]' );
                $btn_sub.css("background-color", "#be0000");
                isSubmitting =3D false;
                setTimeout( function () {
                    $popup.hide();
                }, 350 );
                $( '.marker' ).remove();
                return false;
            } );
            =
//=E6=8F=90=E4=BA=A4=E4=BA=8B=E4=BB=B6=E7=BB=91=E5=AE=9A=EF=BC=8C=E9=9C=80=
=E8=A6=81=E5=88=A4=E6=96=AD=E6=98=AF=E4=B8=8D=E6=98=AF=E7=AC=AC=E4=BA=8C=E4=
=B8=AA=E5=BC=B9=E7=AA=97

            if($popup.hasClass("ask_first")){

                //=E7=BB=91=E5=AE=9A=E8=87=AA=E5=8A=A8=E6=90=9C=E7=B4=A2
                AskSearch({ $inputBox: $(".comm_ask_first #askInput"),
                    $container: $("body > #common_ask_div_sc"),
                    searchUrl: ask_topic_autocomplete_url, =
//"http://192.168.6.227:9403/ask_topic/autocomplete", =
//=E6=90=9C=E7=B4=A2=E7=9A=84Url
                    isFirst: true

                })
            }

            else{
                //=E8=BF=98=E8=BF=9C=E9=87=8D=E8=AE=BE=E5=80=BC
                $(".err_div").css("display", "none");
                $(" .comm_ask_second #askInputSecond").val("");
                $(" .comm_ask_second #wmd-input").val("");
                $(" .comm_ask_second span.tag").remove();
                //$(" .comm_ask_second  #ask2_tagRecomm_div =
label").remove();
                $(" .comm_ask_second  #ask2_tagRecomm_div a").remove();
                $(".comm_ask_second #chk_cb").attr("checked",false);
                $(".comm_ask_second #cb_num").attr("readonly",true);
                $(" .comm_ask_second #cb_num").val("");
                $(" .comm_ask_second #wmd-preview").empty();
                $(" .comm_ask_second [name=3D'txtSearchTags']").val("");
                /*$(" .comm_ask_second =
#wmd-preview").css("display","none");
                 $(" .comm_ask_second =
#wmd-input").css("display","block");*/


                =
//=E7=BB=99=E6=A0=87=E7=AD=BE=E5=8A=A0=E4=B8=8Afoucs=E6=95=88=E6=9E=9C
                $(" .comm_ask_second #divSearchTags =
input").focus(function(){
                    $(" .comm_ask_second =
#divSearchTags").addClass('focus');
                }).blur(function(){
                    $(" .comm_ask_second =
#divSearchTags").removeClass('focus');
                })
                //=E6=82=AC=E8=B5=8F=E7=9A=84=E5=BC=80=E5=90=AF
                $(".comm_ask_second #chk_cb").click(function(){
                    if ($(".comm_ask_second #chk_cb")[0].checked) {
                        $(".comm_ask_second =
#cb_num").attr("readonly",false)

                    }
                    else{
                        $(".comm_ask_second =
#cb_num").attr("readonly",true);
                        $(".comm_ask_second #cb_num").val("");
                        coin_flag =3D false;
                    }
                })
                var $submit =3D $popup.find( '[nodetype=3D"ok"]' );
                $submit.unbind('click');
                $submit.bind( 'click', function () {
                    var _this =3D this;
                    if (isSubmitting) return;
                    isSubmitting =3D true;
                    $(this).css("background-color", "#999");
                    // data =3D =
_this.getBackData();=E9=9C=80=E8=A6=81=E8=87=AA=E8=A1=8C=E5=BA=8F=E5=88=97=
=E5=8C=96=E5=80=BC
                    var _title =3D $(".comm_ask_second =
#askInputSecond").val();
                    var _content =3D editor.codemirror.getValue();
                    /* if (_content) {
                     _content =3D _content.replace(/\<br\>/g, "\n");
                     _content =3D _content.replace(/\<p\>/g, "");
                     _content =3D _content.replace(/\<\/p\>/g, "");
                     }*/
                    var _tagList =3D $(".comm_ask_second =
[name=3D'txtSearchTags']").val();
                    var _fromType =3D =
window.location.hostname;//"read_index";

                    var _isreward =3D $(" .comm_ask_second =
#chk_cb")[0].checked;

                    var _coin =3D $(" .comm_ask_second #cb_num").val();

                    //=E9=AA=8C=E8=AF=81
                    $(".err_div").css("display", "none");
                    if (!valid($(" .comm_ask_second =
#askInputSecond"),_title,"=E9=97=AE=E9=A2=98=E6=A0=87=E9=A2=98",10,50)){

                        return false;
                    }


                    if( !valid($(" .comm_ask_second =
#wmd-input"),_content,"=E9=97=AE=E9=A2=98=E6=8F=8F=E8=BF=B0",30,10000)){
                        return false;
                    };
                    if( !valid( $(" .comm_ask_second =
#divSearchTags"),_tagList.split(','),"=E9=97=AE=E9=A2=98=E6=A0=87=E7=AD=BE=
",1,5)){
                        $(" .comm_ask_second =
#divSearchTags").addClass('focus');
                        return false;
                    };

                    =
//=E9=82=A3=E4=B8=AAC=E5=B8=81=E9=82=A3=E4=B8=AA=E5=A6=82=E6=9E=9C=E5=8B=BE=
=E9=80=89=E4=BA=86=E6=89=8D=E9=AA=8C=E8=AF=81=E6=98=AF=E4=B8=8D=E6=98=AF=E6=
=95=B0=E5=AD=97,=E8=BF=98=E9=9C=80=E9=AA=8C=E8=AF=81C=E5=B8=81=E7=9A=84=E5=
=80=BC=E5=A4=9F=E4=B8=8D=E5=A4=9F
                    var _cbNum =3D $(".comm_ask_second #cb_num").val();
                    if ($(".comm_ask_second #chk_cb")[0].checked) {
                        if (!/^[1-9]\d*$/.test(_cbNum)) {
                            $(".err_div").css("display", "block");
                            =
$(".err_txt").text("=E6=88=91=E8=A6=81=E6=82=AC=E8=B5=8F=E5=8F=AA=E8=83=BD=
=E5=BD=95=E5=85=A5=E6=95=B0=E5=AD=97=EF=BC=81");
                            $(".comm_ask_second #cb_num").focus();

                            $(_this).css("background-color", "#be0000");
                            isSubmitting =3D false;
                            return false;
                        }
                    }

                    function valid(fild,fild_value,name,minL,maxL){

                        if((fild_value && fild_value[0] =3D=3D "") || =
fild_value.length=3D=3D0){
                            mess =3D '=E8=AF=B7=E8=BE=93=E5=85=A5' + =
name;
                            $(".err_div").css("display", "block");
                            $(".err_txt").text(mess);
                            fild.focus();

                            $(_this).css("background-color", "#be0000");
                            isSubmitting =3D false;

                            return false;
                        }
                        =
if(fild_value.length<minL||fild_value.length>maxL){
                            mess =3D =
'=E8=AF=B7=E8=BE=93=E5=85=A5=E9=95=BF=E5=BA=A6=E4=B8=BA' =
+minL+"-"+maxL+"=E7=9A=84"+name;

                            $(".err_txt").text(mess);
                            $(".err_div").css("display", "block");
                            fild.focus();

                            $(_this).css("background-color", "#be0000");
                            isSubmitting =3D false;

                            return false;
                        }
                        else{
                            return true;
                        }
                    }
                    =
//=E9=AA=8C=E8=AF=81C=E5=B8=81=E4=B8=8D=E5=A4=9F=E4=B8=8D=E8=AE=B8=E6=8F=90=
=E4=BA=A4
                    if(coin_flag){
                        $(".err_div").css("display", "block");
                        $(_this).css("background-color", "#be0000");
                        isSubmitting =3D false;
                        return false;
                    }
                    var tempDomain =3D document.domain;
                    document.domain =3D 'csdn.net';
                    //_fromType =3D "";
                    =
//=E7=95=99=E6=84=8F=E8=AF=A5=E6=8E=A5=E5=8F=A3=E8=AF=B7=E6=B1=82=E7=B1=BB=
=E5=9E=8B,=E5=BC=82=E6=AD=A5=E6=8F=90=E4=BA=A4=E6=95=B0=E6=8D=AE=EF=BC=8C=
=E5=9C=A8=E8=AF=A5=E6=AC=A1=E5=8A=A0=E5=85=A5=E4=BA=86=E9=AA=8C=E8=AF=81=E7=
=9A=84=E8=83=BD=E5=8A=9B=EF=BC=8C
                    //$.ajax({
                    //	type: "get",
                    ajaxProxy(create_question_proxy, {
                        type: "post",
                        data: {
                            "question[title]": _title,
                            "question[body]": _content,
                            "question[tag_list]": _tagList,
                            "question[from_type]": _fromType,
                            "question[is_reward]": _isreward,
                            "question[coin]": _coin
                        },
                        url: create_question_url,
                        dataType: "json",
                        //dataType: "jsonp",
                        //jsonp: "callback",
                        //async: false,
                        success: function(obj) {
                            document.domain =3D tempDomain;
                            if (obj.status) {
                                =
//=E8=B7=B3=E8=BD=AC=E5=88=B0=E6=96=B0=E9=A1=B5=E9=9D=A2,=E5=85=B3=E9=97=AD=
,=E9=87=8D=E8=AE=BE=E8=BF=99=E4=B8=AA=E5=80=BC=E5=BD=93=E5=89=8D=E9=A1=B5=
=E9=9D=A2
                                =
$(".comm_ask_second").css("display","none");
                                $(_this).css("background-color", =
"#be0000");
                                isSubmitting =3D false;
                                $( '.marker' ).remove();
                                var =
href=3D"//ask.csdn.net/questions/"+obj.id;
                                window.open(href, =
"target=3D_blank,location=3D1");
                                =
alert("=E4=BD=A0=E7=9A=84=E9=97=AE=E9=A2=98=E5=B7=B2=E5=8F=91=E5=B8=83=E5=
=88=B0=E6=8A=80=E6=9C=AF=E9=97=AE=E7=AD=94=E9=A2=91=E9=81=93=E3=80=82");
                            } else {
                                $(".err_div").css("display", "block");
                                $(".err_txt").text(obj.msg);
                                $(_this).css("background-color", =
"#be0000");
                                isSubmitting =3D false;
                            }
                        },
                        error: function(err) {
                            document.domain =3D tempDomain;
                            var i =3D 0;
                        }
                    });

                    =
//=E9=9C=80=E8=A6=81=E8=B0=83=E7=94=A8=E5=85=B3=E9=97=AD=E8=BF=99=E4=B8=AA=
=E7=AA=97=E5=8F=A3
                    return false;
                } );
                //=E7=BB=91=E5=AE=9A=E8=87=AA=E5=8A=A8=E6=90=9C=E7=B4=A2
                AskSearch({    $inputBox: $(".comm_ask_second =
#askInputSecond"),
                    $container: $("body > #common_ask_div_sc"),
                    searchUrl: ask_topic_autocomplete_url, =
//"http://192.168.6.227:9403/ask_topic/autocomplete", =
//=E6=90=9C=E7=B4=A2=E7=9A=84Url
                    isFirst: false
                });

                $(".comm_ask_second .CodeMirror textarea").bind("focus", =
function() {
                    $(".CodeMirror").addClass("CodeMirror-focused");
                });

                =
//=E5=8A=A8=E6=80=81=E5=8E=BB=E5=90=8E=E5=8F=B0=E8=8E=B7=E5=8F=96=E6=8E=A8=
=E8=8D=90=E6=A0=87=E7=AD=BEstart
                $(".comm_ask_second #askInputSecond").bind("blur", =
function(){
                    var _title =3D $(".comm_ask_second =
#askInputSecond").val();
                    var _content =3D =
editor.codemirror.getValue();//$(".comm_ask_second #wmd-input").val();
                    /* if (_content) {
                     _content =3D _content.replace(/\<br\>/g, "\n");
                     } else {
                     _content =3D "";
                     }*/
                    setTimeout(function(){$("#div_sc").css("display", =
"none");},400);
                    loadRecommTags( _title, _content);
                });
                $(".comm_ask_second .CodeMirror textarea").bind("blur", =
function(){
                    var _title =3D $(".comm_ask_second =
#askInputSecond").val();
                    var _content =3D =
editor.codemirror.getValue();//$(".comm_ask_second #wmd-input").val();
                    /*if (_content) {
                     _content =3D _content.replace(/\<br\>/g, "\n");
                     } else {
                     _content =3D "";
                     }*/
                    loadRecommTags( _title, _content);
                });
                =
//=E5=8A=A8=E6=80=81=E5=8E=BB=E5=90=8E=E5=8F=B0=E8=8E=B7=E5=8F=96=E6=8E=A8=
=E8=8D=90=E6=A0=87=E7=AD=BEend
                =
//=E5=BC=82=E6=AD=A5=E5=90=8E=E5=8F=B0=E9=AA=8C=E8=AF=81C=E5=B8=81=E8=B6=B3=
=E5=A4=9F=EF=BC=9F
                $(".comm_ask_second #cb_num").bind("blur",function(){

                    if($(".comm_ask_second #chk_cb")[0].checked){
                        $(".err_div").css("display", "none");
                        if (!/^[0-9]\d*$/.test( $(".comm_ask_second =
#cb_num").val())) {
                            $(".err_div").css("display", "block");
                            =
$(".err_txt").text("=E6=88=91=E8=A6=81=E6=82=AC=E8=B5=8F=E5=8F=AA=E8=83=BD=
=E5=BD=95=E5=85=A5=E6=95=B0=E5=AD=97=EF=BC=81");
                            $(".comm_ask_second #cb_num").focus();
                            return false;
                        }
                        $.ajax({
                            type: "get",
                            url: valid_coin,
                            dataType: "jsonp",
                            jsonp: "callback",
                            async: false,
                            success: function(obj) {
                                if (obj.error=3D=3D0) {
                                    =
//=E8=BF=99=E4=B8=AA=E7=8A=B6=E6=80=81=E4=B8=8B=E8=A1=A8=E7=A4=BA=E6=8B=BF=
=E5=88=B0=E4=BA=86C=E5=B8=81
                                    if( $(".comm_ask_second =
#cb_num").val()>obj.score){
                                        $(".err_div").css("display", =
"block");
                                        =
$(".err_txt").text("=E6=82=A8=E7=9A=84C=E5=B8=81=E4=BD=99=E9=A2=9D=E4=B8=8D=
=E8=B6=B3");
                                        =
//=E9=AA=8C=E8=AF=81=E4=B8=8D=E9=80=9A=E8=BF=87=E4=B8=8D=E8=AE=B8=E6=8F=90=
=E4=BA=A4
                                        coin_flag=3Dtrue;
                                    }
                                    else{
                                        coin_flag=3Dfalse;
                                    }
                                } else {
                                    $(".err_div").css("display", =
"block");
                                    $(".err_txt").text(obj.msg);
                                    coin_flag=3Dtrue;
                                }
                            },
                            error: function(err) {
                                // =
alert("=E5=90=8E=E5=8F=B0=E5=87=BA=E9=94=99=E4=BA=86");
                            }
                        });}

                })
                =
//=E6=8F=90=E9=97=AE=E7=9A=84=E8=87=AA=E5=8A=A8TAG,=E9=9C=80=E8=A6=81=E4=BD=
=A0=E8=87=AA=E8=A1=8C=E7=B2=98=E8=B4=B4=E9=82=A3=E4=B8=AAJS=E6=96=87=E4=BB=
=B6
                Creat_Dynamic_Tag(".comm_ask_second #divSearchTags", =
ask_topic_tag_suggest_url, ".comm_ask_second =
input[name=3D'txtSearchTags']");

            }

        }//close pop function

        function ShowSecondPop() {
            // =
askFirst.popup.closeFun();=E9=9A=90=E8=97=8F=E8=B5=B7=E6=9D=A5

            $("body > .ask_first").find( '[nodetype=3D"close"]' =
).click();//=E9=9A=90=E8=97=8F=E8=B5=B7=E6=9D=A5=E7=AC=AC=E4=B8=80=E4=B8=AA=


            pop($("body > .ask_second"));
        }

        //=E8=87=AA=E5=8A=A8=E6=90=9C=E7=B4=A2=E6=8F=90=E7=A4=BA
        function AskSearch(conf) {

            $("body").click(function(e){

                var target=3D  e.target;

                if($(target).closest("#common_ask_div_sc").length<1){
                    conf.$container.css("display","none");
                }

            })

            var $inputBox =3D conf.$inputBox;
            var $container =3D conf.$container;
            var searchUrl =3D conf.searchUrl;
            var isFirst =3D conf.isFirst;  =
//=E8=B0=83=E7=94=A8=E6=90=9C=E7=B4=A2=E7=9A=84=E6=98=AF=E9=A6=96=E6=AC=A1=
=E5=BC=B9=E5=87=BA=E7=AA=97=E8=BF=98=E6=98=AF=E6=8F=90=E9=97=AE=E5=BC=B9=E5=
=87=BA=E7=AA=97
            var nowItem =3D -1;
            var userInput =3D "";
            $container.css("display", "none");
            $inputBox.css("autocomplete", "off");
            $container.css("z-index", "1100");

            //$inputBox.unbind("keyup");
            $inputBox[0].onkeyup=3Dfunction(ev) {//propertychange
                var oEvent =3D ev||event;
                if(oEvent.keyCode =3D=3D 40 || oEvent.keyCode =3D=3D 38 =
|| oEvent.keyCode =3D=3D 27 || (oEvent.keyCode >=3D 113 && =
oEvent.keyCode <=3D 123) ||
                    oEvent.keyCode =3D=3D 16 || oEvent.keyCode =3D=3D 17 =
|| oEvent.keyCode =3D=3D 18 || oEvent.keyCode =3D=3D 9 || oEvent.keyCode =
=3D=3D 20){
                    return;
                }
                $container.css("opacity", 0);
                var rect =3D this.getBoundingClientRect();
                var scrTop =3D (document.body.scrollTop || =
document.documentElement.scrollTop);
                $container.css("left", rect.left);
                $container.css("top", rect.bottom + scrTop);//rect.top + =
rect.height
                //$container.css("top", rect.bottom);
                var inVal =3D this.value;
                if ( this.value.length > 0 ) {
                    showHint(inVal,$container,$inputBox,isFirst);
                } else {
                    $container.css("display", "none");
                }
                userInput =3D inVal;

            };
            //$inputBox.unbind("keydown");
            $inputBox[0].onkeydown=3Dfunction(ev){
                var evt =3D ev||event;
                if (evt.keyCode =3D=3D 27) {
                    $container.css("display", "none");
                    $inputBox.val(userInput);
                }
                if (evt.keyCode =3D=3D 13) {
                    $container.css("display", "none");
                }
                if (evt.keyCode =3D=3D 40) {
                    nowItem ++;
                    var suggItems =3D $(".sItem", $container);
                    var itemCnt =3D suggItems.length;
                    if ( nowItem =3D=3D=3D itemCnt) {
                        nowItem =3D -1;
                    }
                    suggItems.removeClass("sItemHover");
                    if (nowItem !=3D -1) {
                        var nowSugg =3D suggItems.eq(nowItem);
                        nowSugg.addClass("sItemHover");
                        $inputBox.val($(".sfirst", nowSugg).text());
                    } else {
                        $inputBox.val(userInput);
                    }
                }
                if (evt.keyCode =3D=3D 38) {
                    nowItem --;
                    var suggItems =3D $(".sItem", $container);
                    var itemCnt =3D suggItems.length;
                    if (nowItem =3D=3D -2) {
                        nowItem =3D itemCnt - 1;
                    }
                    suggItems.removeClass("sItemHover");
                    if (nowItem !=3D -1) {
                        var nowSugg =3D suggItems.eq(nowItem);
                        nowSugg.addClass("sItemHover");
                        $inputBox.val($(".sfirst", nowSugg).text());
                    } else {
                        $inputBox.val(userInput);
                    }
                }
            };
        }
        =
//=E4=BB=A5=E4=B8=8B=E6=96=B9=E6=B3=95=E6=98=AFAskSerch=E7=9A=84=E5=8E=9F=
=E5=9E=8B=E6=96=B9=E6=B3=95=E6=8B=86=E8=A7=A3
        function showHint(inVal,$container,$inputBox,isFirst) {
            $container.css("display", "block");
            $.ajax( {
                type: "get",
                url: ask_topic_autocomplete_url, =
//"http://192.168.6.210//mcs/problem_solving/10710/1",
                data: {query: inVal, fields:"title,id,comments"},
                dataType: 'jsonp',
                jsonp: "callback",
                async: false,
                success: function (obj) {
                    if (obj !=3D null && obj.contents) {
                        fillSuggestData($container, =
obj.contents,$inputBox,isFirst);
                    }
                },
                error: function(err){
                    var i =3D 0;
                    //alert('err');
                }
            } );
        }

        function fillSuggestData ($container, items,$inputBox,isFirst) {
            if (isFirst) {
                $container.html("<div =
class=3D\"sTitle\">=E5=8F=AF=E8=83=BD=E5=AD=98=E5=9C=A8=E7=B1=BB=E4=BC=BC=
=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=9A</div><div class=3D\"sFooter\"><a =
class=3D\"sFirstNewAsk\">=E6=88=91=E6=83=B3=E6=8F=90=E4=B8=80=E4=B8=AA=E6=
=96=B0=E9=97=AE=E9=A2=98</a></div>");
            } else {
                $container.html("<div =
class=3D\"sTitle\">=E5=8F=AF=E8=83=BD=E5=AD=98=E5=9C=A8=E7=B1=BB=E4=BC=BC=
=E7=9A=84=E9=97=AE=E9=A2=98=EF=BC=9A</div>");
            }
            var tpl =3D '<div class=3D"sItem clearfix"><a href=3D"{2}" =
target=3D"_blank"><span class=3D"sfirst">{0}</span><span =
class=3D"ssecond">{1}</span></a></div>';

            if (items.length > 0) {
                $container.css("opacity", 1);
                //$container.css("display", "none");
            }
            for (var i =3D 0; i < items.length; i++){
                var item =3D items[i];
                var itemHtml =3D tpl.replace(/\{0\}/, item.title)
                    .replace(/\{1\}/, item.comments + =
"=E4=B8=AA=E5=9B=9E=E7=AD=94")
                    .replace(/\{2\}/, ask_detail_url + item.id);

                if (isFirst) {
                    $(".sFooter", $container).before(itemHtml);
                } else {
                    $container.append(itemHtml);
                }
            }
            if (isFirst) {
                $("#common_ask_div_sc .sFirstNewAsk").unbind("click");
                $("#common_ask_div_sc .sFirstNewAsk").bind("click", =
function(){
                    ShowSecondPop();
                });
            }
            $(".sItem", $container).each(function(i, item) {
                    var _i =3D i;
                    var _item =3D $(item);
                    _item.bind("mouseover", function() {
                        $(".sItem", =
$container).removeClass("sItemHover");
                        $(this).addClass("sItemHover");
                        nowItem =3D _i;
                    });
                    _item.bind("click", function() {
                        //$inputBox.val($(".sfirst", $(this)).text());
                        $container.css("display","none");
                    });
                }
            );
        }
        =
//=E8=8E=B7=E5=8F=96=E5=90=8E=E5=8F=B0=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE=

        function  loadRecommTags( _title, _content){
            if (_title =3D=3D "" && _content=3D=3D"") return;
            var dataStr =3D JSON.stringify({title: _title, body: =
_content, size: 4});
            //$.ajax({

            var tempDomain =3D document.domain;
            document.domain =3D 'csdn.net';
            ajaxProxy(ask_topic_tag_suggest_proxy, {
                headers: {
                    'X-acl-token': 'Yz3GAP4stGOIrLaIrnDed-uThp8K'
                },
                type: "POST",
                url: ask_topic_tag_suggest_url + "?dataType=3Djson",
                data: dataStr,//{title: _title, body: _content, size: =
4},
                contentType: "application/json",
                dataType: "json",
                //dataType: "jsonp",
                //jsonp: "callback",
                //contentType:'application/x-www-form-urlencoded; =
charset=3DUTF-8',
                success: function(obj) {
                    document.domain =3D tempDomain;
                    if (obj!=3Dnull && obj.length > 0) {
                        var $dataContainer =3D $( ".comm_ask_second =
#ask2_tagRecomm_div");
                        $dataContainer.html("<span =
class=3D\"drt_tit\">=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE=EF=BC=9A</span>"=
);
                        //var tpl =3D "<label =
class=3D\"se_key\">{0}</label>";
                        var tpl =3D "<a href=3D\"#\" =
class=3D\"se_key\">{0}</a>";

                        var items =3D obj;
                        for (var i =3D 0; i < items.length; i++){
                            var item =3D items[i];
                            if (item.name =3D=3D "") continue;
                            var itemHtml =3D tpl.replace(/\{0\}/, =
item.name + "&nbsp;&nbsp;=EF=BC=8B");
                            $dataContainer.append(itemHtml);
                            if (i =3D=3D 4) {
                                break;
                            }
                        }
                        try {
                            window['trackingAd']($dataContainer);
                        } catch (ex) {}
                        $(".comm_ask_second =
.se_key").each(function(i,item){
                            var _item =3D $(item);
                            _item.bind("click", function(){
                                var cTagsObj =3D $(".comm_ask_second =
input[name=3D'txtSearchTags']");
                                var cTags =3D cTagsObj.val();
                                var tagArr =3D cTags.split(',');

                                var tagText =3D _item.text();
                                var tagName =3D tagText.substring(0, =
tagText.length - 3);

                                for (var i =3D 0; i < tagArr.length; i =
++) {
                                    if (tagArr[i] =3D=3D=3D tagName) {
                                        return;
                                    }
                                }
                                var oTagStr =3D cTags;
                                if (tagArr.length >=3D 5) {
                                    //$(".err_div").css("display", =
"block");
                                    =
//$(".err_txt").text("=E6=A0=87=E7=AD=BE=E6=9C=80=E5=A4=9A=E5=8F=AA=E8=83=
=BD=E5=BD=95=E5=85=A55=E4=B8=AA=EF=BC=81");
                                    =
//setTimeout(function(){$(".err_div").css("display", "none");}, 5000);
                                    return;
                                    //oTagStr =3D "";
                                    //for (var i =3D 0; i < 4; i ++) {
                                    //  oTagStr +=3D tagArr[i] + ",";
                                    //}
                                    //oTagStr =3D oTagStr.substring(0, =
oTagStr.length-1);
                                }
                                var tagCon =3D $(".comm_ask_second =
#divSearchTags");
                                var tagInput =3D tagCon.find("input");

                                var preNode =3D =
tagInput[0].previousSibling;
                                if (tagArr.length >=3D 5 && preNode) {
                                    =
tagInput[0].parentNode.removeChild(preNode);
                                }
                                tagInput.before('<span =
class=3D"tag">'+'<span>'+tagName+'</span>'+'<a =
title=3D"=E5=88=A0=E9=99=A4=E6=A0=87=E7=AD=BE" =
href=3D"javascript:;">'+'=C3=97'+'</a>'+'</span>');

                                var newTags =3D oTagStr =3D=3D "" ? =
tagName : oTagStr + "," + tagName;
                                cTagsObj.val(newTags);
                                return false;
                            });
                        });
                    }
                },
                error: function(err){
                    document.domain =3D tempDomain;
                    var i =3D 0;
                    =
//alert('=E5=88=9D=E5=A7=8B=E5=8C=96=E6=8E=A8=E8=8D=90=E6=A0=87=E7=AD=BE=E9=
=94=99=E8=AF=AF=EF=BC=81');
                }
            });
        }

        //=E8=87=AA=E5=8A=A8Tag
        function Creat_Dynamic_Tag(conid,dataurl,subinput)
        {
            var oTagscon=3D$(conid)[0];
            var tagInput=3D$(conid).find('input')[0];

            var iNow=3D-1;
            var oldValue=3D'';
            var tags_array =3D [];

            var oUl =3D document.createElement('ul');
            oUl.className =3D 'complete_list';
            var oBody=3Ddocument.getElementsByTagName('body')[0];
            oBody.appendChild(oUl);

            tagInput.onkeyup=3Dfunction(ev)
            {
                var oEvent=3Dev || event;

                if(oEvent.keyCode=3D=3D40 || oEvent.keyCode=3D=3D38|| =
oEvent.keyCode=3D=3D13){
                    return false;
                }

                $(this).removeAttr("style");

                if(oEvent.keyCode=3D=3D8&&tagInput.value=3D=3D''){

                    oUl.style.display =3D 'none';
                    return false;
                }

                $.ajax({
                    type: "get",
                    //url:dataurl,
                    url: "https://recommend-api.csdn.net/tag/complete?",
                    //data:{'title': tagInput.value, body: =
tagInput.value, size: 4},
                    data: {'query': tagInput.value},
                    dataType:"jsonp",
                    //jsonp: "callback",
                    success: function(jsonstr){
                        =
//=E8=8E=B7=E5=8F=96input=E8=BE=93=E5=85=A5=E6=A1=86=E7=9A=84=E7=BB=9D=E5=
=AF=B9=E4=BD=8D=E7=BD=AE
                        var tagInput_pos =3D getPos(tagInput);
                        var scrTop =3D (document.body.scrollTop || =
document.documentElement.scrollTop);

                        =
//=E5=BC=B9=E5=87=BA=E4=B8=8B=E6=8B=89=E6=A1=86=E7=9B=B8=E5=AF=B9=E4=BA=8E=
input=E8=BE=93=E5=85=A5=E6=A1=86=E5=90=91=E4=B8=8B=E5=81=8F=E7=A7=BB=E5=80=
=BC
                        var mp =3D242;
                        iNow=3D-1;
                        oldValue=3DtagInput.value;

                        var data =3D jsonstr.suggestions;

                        if(data.length!=3D0)
                        {

                            var bb =3D $( window ).height() - =
tagInput_pos.top;
                            $(oUl).empty();
                            =
//$(oUl).css({left:tagInput_pos.left,top:tagInput_pos.top+mp+scrTop})
                            =
$(oUl).css({left:tagInput_pos.left,bottom:bb});
                            for(var i=3D0;i<data.length;i++)
                            {
                                $(oUl).append('<li>'+data[i]+'</li>');
                            }
                            $(oUl).css('display','block');
                        }

                        var aLi =3D oUl.children;

                        for(var i=3D0; i<aLi.length; i++)
                        {
                            aLi[i].index=3Di;

                            aLi[i].onmouseover=3Dfunction(){

                                tagInput.value =3D this.innerHTML;

                                for(var i=3D0; i<aLi.length; i++){
                                    aLi[i].className=3D'';
                                }
                                this.className =3D 'outborder';
                                iNow=3Dthis.index;
                            }
                        }
                    }

                });
            }

            tagInput.onblur =3D function()
            {
                if(tagInput.value=3D=3D'')
                {
                    return false;
                }
                else
                {
                    if ($(subinput).val() !=3D "") {
                        tags_array =3D $(subinput).val().split(",");
                    }
                    var re=3D/[^0-9a-zA-Z\u4e00-\u9fa5\-+#]+/;
                    var re2 =3D /\-$/;
                    var re3 =3D /^\-/;
                    var str_arr =3D tagInput.value.split(re);
                    var str =3D str_arr.join("-");

                    if(str=3D=3D'-')
                    {
                        $(tagInput).css('background-color','#fbd8db');
                        return false;
                    }

                    if(re2.test(str))
                    {
                        str =3D str.substring(0,str.length-1);
                    }

                    if(re3.test(str))
                    {
                        str =3D str.substr(1);
                    }

                    if(find_in_arr(tags_array,str))
                    {
                        $(tagInput).css('background-color','#fbd8db');
                        return false;
                    }
                    var tags_len =3D tags_array.length;
                    if (tags_len >=3D 5) {
                        //$(".err_div").css("display", "block");
                        =
//$(".err_txt").text("=E6=A0=87=E7=AD=BE=E6=9C=80=E5=A4=9A=E5=8F=AA=E8=83=
=BD=E5=BD=95=E5=85=A55=E4=B8=AA=EF=BC=81");
                        =
//setTimeout(function(){$(".err_div").css("display", "none");}, 5000);
                        return;
                        //tags_array.splice(tags_len - 1, 1);
                        //_remove_last_tag(conid);
                    }

                    _add_tag(conid,str);
                    tagInput.value =3D '';
                    tags_array.push(str);
                    $(subinput).val(tags_array.join(','));
                    oUl.style.display =3D 'none';
                    return false;
                }
            }

            tagInput.onkeydown=3Dfunction(ev){

                var aLi =3D oUl.children;

                var oEvent=3Dev || event;

                if(oEvent.keyCode=3D=3D13||oEvent.keyCode=3D=3D188){

                    if(tagInput.value=3D=3D'')
                    {
                        return false;
                    }
                    else
                    {
                        if ($(subinput).val() !=3D "") {
                            tags_array =3D $(subinput).val().split(",");
                        }
                        var re=3D/[^0-9a-zA-Z\u4e00-\u9fa5\-+#]+/;
                        var re2 =3D /\-$/;
                        var re3 =3D /^\-/;
                        var str_arr =3D tagInput.value.split(re);
                        var str =3D str_arr.join("-");
                        if(str=3D=3D'-')
                        {
                            =
$(tagInput).css('background-color','#fbd8db');
                            return false;
                        }

                        if(re2.test(str))
                        {
                            str =3D str.substring(0,str.length-1);
                        }

                        if(re3.test(str))
                        {
                            str =3D str.substr(1);
                        }

                        if(find_in_arr(tags_array,str))
                        {
                            =
$(tagInput).css('background-color','#fbd8db');
                            return false;
                        }
                        var tags_len =3D tags_array.length;
                        if (tags_len >=3D 5) {
                            //$(".err_div").css("display", "block");
                            =
//$(".err_txt").text("=E6=A0=87=E7=AD=BE=E6=9C=80=E5=A4=9A=E5=8F=AA=E8=83=
=BD=E5=BD=95=E5=85=A55=E4=B8=AA=EF=BC=81");
                            =
//setTimeout(function(){$(".err_div").css("display", "none");}, 5000);
                            return;
                            //tags_array.splice(tags_len - 1, 1);
                            //_remove_last_tag(conid);
                        }

                        _add_tag(conid,str);
                        tagInput.value =3D '';
                        oUl.style.display =3D 'none';
                        tags_array.push(str);
                        $(subinput).val(tags_array.join(','));
                        return false;
                    }
                }

                if(oEvent.keyCode=3D=3D8&&tagInput.value=3D=3D''){

                    _remove_last_tag(conid);
                    oUl.style.display =3D 'none';
                    tags_array.pop();
                    $(subinput).val(tags_array.join(','));
                }

                if(oEvent.keyCode=3D=3D40){
                    iNow++;

                    if(iNow=3D=3DaLi.length){
                        iNow=3D-1;
                    }

                    for(var i=3D0; i<aLi.length; i++){
                        aLi[i].className=3D'';
                    }
                    if(iNow!=3D-1){
                        aLi[iNow].className=3D'outborder';
                        tagInput.value=3DaLi[iNow].innerHTML;
                    }else{
                        tagInput.value=3DoldValue;
                    }
                }

                if(oEvent.keyCode=3D=3D38){
                    iNow--;
                    if(iNow=3D=3D-2){
                        iNow=3DaLi.length-1;
                    }

                    for(var i=3D0; i<aLi.length; i++){
                        aLi[i].className=3D'';
                    }
                    if(iNow!=3D-1){
                        aLi[iNow].className=3D'outborder';
                        tagInput.value=3DaLi[iNow].innerHTML;
                    }else{
                        tagInput.value=3DoldValue;
                    }
                    return false;
                }
            }

            =
//=E7=82=B9=E5=87=BB=E6=AF=8F=E4=B8=AA=E6=A0=87=E7=AD=BE=E5=90=8E=E7=9A=84=
'x'=E5=88=A0=E9=99=A4=E5=BD=93=E5=89=8D=E6=A0=87=E7=AD=BE

            oTagscon.onclick =3D function(e)
            {
                var e =3D e || window.event;
                var target =3D e.srcElement || e.target;

                if (target.title =
=3D=3D"=E5=88=A0=E9=99=A4=E6=A0=87=E7=AD=BE")
                {
                    if ($(subinput).val() !=3D "") {
                        tags_array =3D $(subinput).val().split(",");
                    }
                    var cur_str =3D =
target.parentNode.children[0].innerHTML;
                    tags_array =3D remove_in_arr(tags_array,cur_str);
                    $(subinput).val(tags_array.join(','));
                    _remove_cur_tag($(target));
                    tagInput.focus();
                    $(tagInput).css('background-color','#fbd8db');
                    $(oUl).css('display','none');
                }
            }

            tagInput.onclick=3Dfunction(ev){
                var oEvent=3Dev || event;
                oEvent.cancelBubble=3Dtrue;
            }

            document.onclick =3D function()
            {
                oUl.style.display =3D 'none';
            }

            =
//=E6=9F=A5=E6=89=BE=E6=95=B0=E7=BB=84=E4=B8=AD=E6=8C=87=E5=AE=9A=E7=9A=84=
=E5=85=83=E7=B4=A0,=E5=B9=B6=E4=B8=94=E5=88=A0=E9=99=A4=E8=BF=99=E4=B8=AA=
=E5=85=83=E7=B4=A0
            function remove_in_arr(arr,str)
            {
                for(var i=3D0;i<arr.length;i++)
                {
                    if(arr[i]=3D=3Dstr)
                    {
                        arr.splice(i,1);
                    }
                }
                return arr;
            }
        }


        =
//=E6=9F=A5=E6=89=BE=E6=95=B0=E7=BB=84=E4=B8=AD=E6=8C=87=E5=AE=9A=E7=9A=84=
=E5=85=83=E7=B4=A0,=E5=B9=B6=E4=B8=94=E5=88=A0=E9=99=A4=E8=BF=99=E4=B8=AA=
=E5=85=83=E7=B4=A0
        function remove_in_arr(arr,str)
        {
            for(var i=3D0;i<arr.length;i++)
            {
                if(arr[i]=3D=3Dstr)
                {
                    arr.splice(i,1);
                }
            }
            return arr;
        }


        =
//=E6=9F=A5=E6=89=BE=E6=95=B0=E7=BB=84=E4=B8=AD=E6=9C=89=E6=B2=A1=E6=9C=89=
=E7=9B=B8=E5=90=8C=E7=9A=84=E5=85=83=E7=B4=A0
        function find_in_arr(arr,str)
        {
            var find =3D false;

            for(var i=3D0;i<arr.length;i++)
            {
                if(arr[i]=3D=3Dstr)
                {
                    find =3D true;
                }
            }
            return find;
        }

        //=E5=A2=9E=E5=8A=A0=E6=A0=87=E7=AD=BE =
obj=E4=B8=BA=E5=A2=9E=E5=8A=A0=E6=A0=87=E7=AD=BE=E7=9A=84=E5=AE=B9=E5=99=A8=
=EF=BC=8Cstr=E4=B8=BA=E6=A0=87=E7=AD=BE=E4=B8=AD=E7=9A=84=E6=96=87=E5=AD=97=
=E5=86=85=E5=AE=B9=E3=80=82
        function _add_tag(obj,str)
        {
            var tagCon =3D $(obj);
            var tagInput =3D tagCon.find('input');
            tagInput.before('<span =
class=3D"tag">'+'<span>'+str+'</span>'+'<a =
title=3D"=E5=88=A0=E9=99=A4=E6=A0=87=E7=AD=BE" =
href=3D"javascript:;">'+'=C3=97'+'</a>'+'</span>');
        }

        =
//=E5=88=A0=E9=99=A4=E6=9C=80=E5=90=8E=E4=B8=80=E4=B8=AA=E6=A0=87=E7=AD=BE=

        function _remove_last_tag(obj)
        {
            var tagCon =3D $(obj);
            tagCon.find('.tag').last().remove();
        }

        //=E5=88=A0=E9=99=A4=E5=BD=93=E5=89=8D=E6=A0=87=E7=AD=BE
        function _remove_cur_tag(obj)
        {
            obj.parent().remove();
        }

        function getPos(obj)
        {
            var l=3D0;
            var t=3D0;
            while(obj)
            {
                l+=3Dobj.offsetLeft;
                t+=3Dobj.offsetTop;
                obj=3Dobj.offsetParent;
            };
            return {left:l,top:t}
        };

    });
})();

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://static.blog.csdn.net/scripts/saveToCode.js

/*=0A=
* @file =
=E5=8D=9A=E5=AE=A2=E7=9A=84=E4=BB=A3=E7=A0=81=E7=89=87=E6=AE=B5=E4=BF=9D=E5=
=AD=98=E5=88=B0code=E7=9A=84=E4=BB=A3=E7=A0=81=E7=89=87=0A=
* @author liwz=0A=
* @create Time 2016-5-19=0A=
* */=0A=
=0A=
$(function()=0A=
{=0A=
    (function(){=0A=
        var oBlog_code =3D {},=0A=
            $target,=0A=
            i =3D 0,b =3D false,=0A=
            title =3D $.trim($(".list_c_t a").text() || $(".link_title =
a").text()),=0A=
            code,lang,username,description,tags,=0A=
            newVal =3D'';=0A=
        username =3D currentUserName;=0A=
        =
//=E8=8E=B7=E5=8F=96=E9=A1=B5=E9=9D=A2=E4=B8=AD=E9=BB=98=E8=AE=A4=E7=9A=84=
tag=0A=
        oBlog_code.getTag =3D function (){=0A=
            var pageTags =3D $('.link_categories a');=0A=
            var len =3D pageTags.length,oPageTag=3D'';=0A=
            len =3D len <=3D 5 ? len : 5;=0A=
            pageTags.each(function(){=0A=
                oPageTag +=3D '<span class=3D\"label blog_tag\"><span>' =
+ $(this).text() +=0A=
                        '</span><a title=3D\"Removing tag\" =
href=3D\"javascript:;\">x</a></span>';=0A=
                newVal +=3D  $(this).text() + ',';=0A=
            });=0A=
            i=3Dlen;=0A=
            return oPageTag;=0A=
        };=0A=
        /**=0A=
         * =
=E9=A1=B5=E9=9D=A2=E5=BC=80=E5=A7=8B=E5=8A=A0=E8=BD=BD=E6=97=B6=E6=8A=8A=E6=
=94=B6=E8=97=8F=E4=BB=A3=E7=A0=81=E7=89=87=E7=9A=84=E6=8C=89=E9=92=AE=E5=92=
=8C=E5=BC=B9=E5=B1=82=E9=A2=84=E5=85=88=E5=8A=A0=E8=BD=BD=E5=88=B0=E9=A1=B5=
=E9=9D=A2=E4=B8=AD,=E4=B8=8A=E6=8A=A5=0A=
         * */=0A=
=0A=
        oBlog_code.preLoad =3D function(){=0A=
            var _this =3D this;=0A=
            var oWrap =3D $(".dp-highlighter,.prettyprint"),=0A=
                    oSnippetsBtn =3D '<div class=3D"save_code =
tracking-ad" data-mod=3D"popu_249"><a href=3D"javascript:;"><img =
src=3D"http://static.blog.csdn.net/images/save_snippets.png"/></a></div>'=
,=0A=
                    winHref=3D window.location.href,=0A=
                    oTagHtml;=0A=
            oWrap.each(function(){=0A=
                $(this).append(oSnippetsBtn);=0A=
            });=0A=
            oTagHtml =3D _this.getTag();=0A=
            $('body').append("<div id=3D'mask_code'></div>");=0A=
            var oHtml =3D '<div class=3D"gist_edit" ><div =
class=3D"save_snippets clearfix">'+=0A=
                    '<div =
class=3D"tit"><h3>=E4=BF=9D=E5=AD=98=E4=BB=A3=E7=A0=81=E7=89=87</h3><span=
>=E6=95=B4=E7=90=86=E5=92=8C=E5=88=86=E4=BA=AB=E4=BF=9D=E5=AD=98=E7=9A=84=
=E4=BB=A3=E7=A0=81=E7=89=87=EF=BC=8C=E8=AF=B7=E8=AE=BF=E9=97=AE<a =
href=3D"https://code.csdn.net/snippets_manage" =
target=3D"_blank">=E4=BB=A3=E7=A0=81=E7=AC=94=E8=AE=B0</a></span></div>'+=0A=
                    '<div class=3D"con_form"><ul class=3D"gist_edit_list =
clearfix"><li><span class=3D"red">*</span><span =
class=3D"txt">=E6=A0=87=E9=A2=98</span>'+=0A=
                    '<input id=3D"form_title" class=3D"form-input" =
placeholder=3D"'+decodeURIComponent(title)+'" =
type=3D"text"></li><li><span class=3D"red">*</span><span =
class=3D"txt">=E6=8F=8F=E8=BF=B0</span><textarea id=3D"form-textarea" =
class=3D"form-textarea" placeholder=3D"'+decodeURIComponent(title) + =
'=EF=BC=9A ' + winHref + '"></textarea></li><li><span =
class=3D"red">&nbsp;</span><span =
class=3D"txt">=E6=A0=87=E7=AD=BE</span>'+=0A=
                    '<div id=3D"divSearchTags">';=0A=
            oHtml +=3D oTagHtml;=0A=
            oHtml +=3D'<input id=3D"insertTag" class=3D"insertTag" =
placeholder=3D"=E8=AF=B7=E8=BE=93=E5=85=A5=E6=A0=87=E7=AD=BE=EF=BC=8C=E6=8C=
=89Enter=E7=94=9F=E6=88=90(=E6=9C=80=E5=A4=9A5=E9=A1=B9)" type=3D"text" =
value=3D"" name=3D"insertTag"  maxlength=3D"21" style=3D"color: rgb(51, =
51, 51);">'+=0A=
                    '<input id=3D"OrganTag" class=3D"OrganTag" =
type=3D"hidden" name=3D"OrganTag" value=3D'+newVal+'>'+=0A=
                    '<input id=3D"OldOrganTag" class=3D"OldOrganTag" =
type=3D"hidden" name=3D"OldOrganTag" value=3D""><input type=3D"hidden" =
name=3D"txtSearchTags"></div>'+=0A=
=0A=
                    '</li></ul></div><div class=3D"bottom-bar"><a =
href=3D"javascript:;" class=3D"btn-submit =
btn-cancel">=E5=8F=96=E6=B6=88</a><span class=3D"tracking-ad"  =
data-mod=3D"popu_250"><a class=3D"btn-submit btn-confirm"  =
href=3D"javascript:;">=E7=A1=AE=E5=AE=9A</a></span></div></div></div>';=0A=
=0A=
            $('body').append(oHtml);=0A=
        }=0A=
        oBlog_code.preLoad();=0A=
=0A=
=0A=
         =
//=E9=BC=A0=E6=A0=87=E7=A7=BB=E4=B8=8A=E5=8E=BB=E6=98=BE=E7=A4=BA=E4=BF=9D=
=E5=AD=98=E5=88=B0=E6=88=91=E7=9A=84=E4=BB=A3=E7=A0=81=E7=89=87=E6=8C=89=E9=
=92=AE=0A=
        (function()=0A=
        {=0A=
            =
$(document).delegate('.dp-highlighter,.prettyprint','mouseenter',function=
()=0A=
            {=0A=
                if($(this).height() < 80){=0A=
                    //$(this).addClass("pad_bot");=0A=
                    $(this).find(".save_code =
img").attr("src",'http://static.blog.csdn.net/images/save_snippets_01.png=
');=0A=
                }=0A=
                $(this).find('.save_code').show();=0A=
                return false;=0A=
            });=0A=
            =
$(document).delegate('.dp-highlighter,.prettyprint','mouseleave',function=
()=0A=
            {=0A=
                $(this).find('.save_code').hide();=0A=
                //$(this).removeClass("pad_bot");=0A=
                return false;=0A=
            });=0A=
        })();=0A=
        oBlog_code.getLang =3D function (str,htmlEdit){=0A=
            var _this =3D this;=0A=
            if(str !=3D undefined){=0A=
                str =3D str.split(' ')[0];=0A=
                str =3D str.substring(9,str.length);=0A=
                //lang =3D preLan;=0A=
                _this.handle(str);=0A=
            }else{=0A=
                htmlEdit =3D =
encodeURIComponent(htmlEdit.substring(1,htmlEdit.length-1));=0A=
                _this.handle(htmlEdit);=0A=
            }=0A=
        };=0A=
        =
//=E5=A4=84=E7=90=86=E5=AD=97=E7=AC=A6=E4=B8=B2=E6=88=90code=E5=8F=AF=E8=AF=
=86=E5=88=AB=E7=9A=84=E8=AF=AD=E8=A8=80=E7=B1=BB=E5=9E=8B=0A=
        oBlog_code.handle =3D function (str){=0A=
            var langArr =3D {=0A=
                'cpp':'c++',=0A=
                'csharp':'c#',=0A=
                'obj-c':'objective-c',=0A=
                'objc':'objective-c'=0A=
            };=0A=
            for(var key in langArr){=0A=
                if(str.toLowerCase() =3D=3D key ){=0A=
                    if(str !=3D langArr[str]){=0A=
                        str =3D langArr[str];=0A=
                    }=0A=
                }=0A=
            }=0A=
            lang =3D encodeURIComponent(str);=0A=
        };=0A=
        =
//=E7=82=B9=E5=87=BB=E4=BF=9D=E5=AD=98=E6=8C=89=E9=92=AE=E5=BC=B9=E5=87=BA=
=E5=BC=B9=E5=B1=82=0A=
        oBlog_code.showPop =3D function()=0A=
        {=0A=
            var _this =3D this;=0A=
=0A=
            $(document).delegate('.save_code','click',function(ev)=0A=
            {=0A=
                var event =3D ev || event;=0A=
                title =3D $.trim($(".list_c_t a").text() || =
$(".link_title a").text());=0A=
                $target =3D $(event.target || event.srcElement);=0A=
                code =3D =
$(this).parents('.prettyprint').find('code').text() || =
$(this).parents('.dp-highlighter').next('pre').text();=0A=
                code =3D encodeURIComponent(code);=0A=
                var preLan =3D =
$(this).parents('.prettyprint').find('code').attr('class');=0A=
                var htmlEdit =3D =
$(this).parents('.dp-highlighter').find('.bar').find('strong').text() || =
$(this).parents('.dp-highlighter').find('.bar').find('b').text();=0A=
                //=E8=8E=B7=E5=8F=96=E8=AF=AD=E8=A8=80=E7=B1=BB=E5=9E=8B=0A=
                _this.getLang(preLan,htmlEdit);=0A=
=0A=
                if(currentUserName)=0A=
                {=0A=
                    $('#mask_code').show();=0A=
                    $('.gist_edit').show();=0A=
=0A=
                    var offsetTop =3D $(window).scrollTop() + =
$(window).height()/2;=0A=
                    $(".gist_edit").css({=0A=
                        "top":offsetTop=0A=
                    });=0A=
                }=0A=
                else=0A=
                {=0A=
                    window.location.href =3D =
"https://passport.csdn.net/";=0A=
                }=0A=
            })=0A=
        };=0A=
        oBlog_code.showPop();=0A=
=0A=
        oBlog_code.hidePop =3D function(obj)=0A=
        {=0A=
            var _this =3D this;=0A=
            $(document).delegate('.btn-cancel','click',function()=0A=
            {=0A=
                $("#form-textarea").val('');=0A=
                $("#form_title").val('');=0A=
                _this.resetTag(obj);=0A=
            });=0A=
=0A=
            =
//=E7=82=B9=E5=87=BB=E7=A1=AE=E5=AE=9A=E4=BF=9D=E5=AD=98=E5=88=B0code=E7=9A=
=84=E4=BB=A3=E7=A0=81=E6=AE=B5=0A=
            $(document).delegate('.btn-confirm','click',function()=0A=
            {=0A=
                description =3D =
encodeURIComponent($("#form-textarea").val() || =
$("#form-textarea").attr('placeholder'));=0A=
                title =3D encodeURIComponent($("#form_title").val() || =
title);=0A=
                tags =3D encodeURIComponent($("#OrganTag").val());=0A=
=0A=
                $.ajax({=0A=
                    type: "post",=0A=
                    /*dataType:"jsonp",=0A=
                    jsonp:'callback',*/=0A=
                    url: =
"http://blog.csdn.net/"+currentUserName+"/svc/addpostcode",=0A=
                    data: 'code=3D'+code+'&lang=3D'+lang + =
'&username=3D'+username + '&title=3D'+title + =
'&description=3D'+description + '&tags=3D'+tags,=0A=
                    success: function(msg){=0A=
                        if(msg)=0A=
                        {=0A=
                            =
alert("=E4=BF=9D=E5=AD=98=E6=88=90=E5=8A=9F=EF=BC=81");=0A=
                            _this.resetTag(obj);=0A=
                        }=0A=
                    },=0A=
                    error:function()=0A=
                    {=0A=
                        alert("=E4=BF=9D=E5=AD=98=E5=A4=B1=E8=B4=A5");=0A=
                    }=0A=
                });=0A=
            });=0A=
        };=0A=
        oBlog_code.hidePop('#divSearchTags');=0A=
=0A=
        //=E6=8A=8A=E5=BC=B9=E5=B1=82=E9=9A=90=E8=97=8F=0A=
        oBlog_code.resetTag =3D function ()=0A=
        {=0A=
            $('#mask_code').hide();=0A=
            $('.gist_edit').hide();=0A=
        };=0A=
=0A=
        oBlog_code.enterTag =3D function (Wrap,insert){=0A=
            var _this =3D this;=0A=
            var event =3D arguments.callee.caller.arguments[0] || =
window.event; =
//=E6=B6=88=E9=99=A4=E6=B5=8F=E8=A7=88=E5=99=A8=E5=B7=AE=E5=BC=82=0A=
            if (event.keyCode =3D=3D 13 || event.keyCode =3D=3D 188) {=0A=
                _this.addTag(Wrap,insert);=0A=
            }=0A=
        };=0A=
        oBlog_code.addTag =3D function (Wrap,insert)=0A=
        {=0A=
            var insertval =3D $.trim($(insert).val());=0A=
            if (insertval !=3D "")=0A=
            {=0A=
                //=E6=8E=92=E9=87=8D=0A=
                $(''+Wrap+'>span>span').each(=0A=
                        function ()=0A=
                        {=0A=
                            var spanval =3D$.trim($(this).html());=0A=
                            if (insertval =3D=3D spanval)=0A=
                            {=0A=
                                b =3D true;=0A=
                                =
//=E5=80=BC=E7=9B=B8=E5=90=8C=EF=BC=8C=E6=8A=8Aflg=E7=9A=84=E5=80=BC=E8=AE=
=BE=E4=B8=BAtrue=EF=BC=8C=E5=86=8D=E8=B0=83=E7=94=A8test()=E6=96=B9=E6=B3=
=95=E6=97=B6=E5=BC=B9=E5=87=BA=E2=80=9C=E6=AD=A4=E9=A1=B9=E5=B7=B2=E8=A2=AB=
=E9=80=89=E6=8B=A9=E2=80=9D=0A=
                                $(insert).off('keydown');   =
//=E5=85=88=E6=8A=8Akeydown=E4=BA=8B=E4=BB=B6=E5=85=B3=E9=97=AD=E4=BA=86=EF=
=BC=8C=E5=86=8D=E6=8C=89=E7=A9=BA=E6=A0=BC=E7=9A=84=E6=97=B6=E5=80=99=E8=AE=
=A9test()=E6=96=B9=E6=B3=95=E7=94=9F=E6=95=88=0A=
                                if(i < 5)    =
//=E5=8F=AA=E6=9C=89=E5=9C=A8i<5=E7=9A=84=E6=97=B6=E5=80=99=E6=89=8D=E8=AE=
=A9=E2=80=9C=E6=AD=A4=E9=A1=B9=E5=B7=B2=E9=80=89=E6=8B=A9=E5=BC=B9=E5=87=BA=
=E2=80=9D,=E5=A6=82=E6=9E=9Ci>5=E6=97=B6=E4=B9=9F=E8=BE=93=E5=85=A5=E4=B8=
=80=E4=B8=AA=E5=92=8C=E5=89=8D=E9=9D=A2=E9=87=8D=E5=A4=8D=E7=9A=84=E6=A0=87=
=E7=AD=BE=E7=9A=84=E8=AF=9D=EF=BC=8C=E8=BF=99=E5=8F=A5=E8=AF=9D=E5=B0=B1=E4=
=B8=8D=E5=86=8D=E5=BC=B9=E5=87=BA=0A=
                                {=0A=
                                    test(true);=0A=
                                }=0A=
                                return;=0A=
                            }=0A=
                        }=0A=
                );=0A=
                =
//=E5=A6=82=E6=9E=9C=E6=A0=87=E7=AD=BE=E4=B8=AA=E6=95=B0=E5=A4=A7=E4=BA=8E=
5=EF=BC=8C=E5=B0=B1=E6=8A=8Ab=E7=BD=AE=E4=B8=BAtrue,=E5=8D=B3=E4=B8=8D=E8=
=AE=A9=E5=86=8D=E6=B7=BB=E5=8A=A0=0A=
                if(i>=3D5)=0A=
                {=0A=
                    b =3D true;=0A=
                    test(false);=0A=
                }=0A=
                if(b=3D=3Dfalse)    =
//=E5=8F=AA=E6=9C=89b=3Dfalse=E7=9A=84=E6=97=B6=E5=80=99=E6=89=8D=E6=B7=BB=
=E5=8A=A0=E6=A0=87=E7=AD=BE=0A=
                {=0A=
=0A=
                    $(insert).before('<span class=3D\"label =
blog_tag\"><span>' + insertval +=0A=
                            '</span><a title=3D\"Removing tag\" =
href=3D\"javascript:;\">x</a></span>');=0A=
                    newVal +=3D  insertval + ',';=0A=
                    i++;=0A=
                }=0A=
                if(b =3D=3D true)=0A=
                {=0A=
                    b =3D false;      =
//b=3Dtrue=E6=9C=89=E4=B8=A4=E7=A7=8D=E6=83=85=E5=86=B5=EF=BC=8C=EF=BC=88=
1=EF=BC=89=E6=98=AF=E5=92=8C=E5=89=8D=E9=9D=A2=E6=A0=87=E7=AD=BE=E9=87=8D=
=E5=A4=8D=E4=BA=86  =
=EF=BC=882=EF=BC=89=E5=B7=B2=E7=BB=8F=E5=A4=A7=E4=BA=8E5=E9=A1=B9=EF=BC=8C=
=E5=A6=82=E6=9E=9C=E6=98=AF=E7=AC=AC=E4=B8=80=E7=A7=8D=E6=83=85=E5=86=B5=EF=
=BC=8C=E6=8A=8Ab=E7=BD=AE=EF=BC=8C=E9=82=A3=E5=90=8E=E9=9D=A2=E5=B0=B1=E8=
=A6=81=E5=86=8D=E6=8A=8Ab=E7=BD=AE=E4=B8=BAfalse=EF=BC=8C=E8=AE=A9=E5=90=8E=
=E9=9D=A2=E7=9A=84=E8=BF=98=E5=8F=AF=E4=BB=A5=E5=86=8D=E6=B7=BB=E5=8A=A0=0A=
                    $(insert).val('');=0A=
                }=0A=
            }=0A=
            $(insert).val('');   =
//=E6=B7=BB=E5=8A=A0=E6=88=90=E4=B8=BA=E6=A0=87=E7=AD=BE=E4=BA=86=EF=BC=8C=
=E5=86=8D=E6=8A=8A=E8=BE=93=E5=85=A5=E6=A1=86=E4=B8=AD=E7=9A=84=E5=80=BC=E7=
=BB=99=E6=B8=85=E7=A9=BA=0A=
            $('#OrganTag').val(newVal);=0A=
=0A=
            =
//=E8=BE=93=E5=85=A5=E6=A1=86=E7=9A=84=E6=97=B6=E5=80=99=EF=BC=8C=E5=A6=82=
=E6=9E=9C=E6=9C=89=E7=9B=B8=E5=90=8C=E7=9A=84=E5=B0=B1=E5=BB=B6=E6=97=B63=
00ms=E5=BC=B9=E5=87=BA=E8=AD=A6=E5=91=8A=0A=
            function test(flg)=0A=
            {=0A=
                if(flg)=0A=
                {=0A=
                    setTimeout(function(){=0A=
                        =
alert("=E6=AD=A4=E9=A1=B9=E5=B7=B2=E8=A2=AB=E9=80=89=E6=8B=A9");=0A=
                    },300);=0A=
                }=0A=
                else{=0A=
                    setTimeout(function(){=0A=
                        alert("=E5=B7=B2=E9=80=89=E6=8B=A95=E9=A1=B9");=0A=
                    },300);=0A=
                }=0A=
            }=0A=
        };=0A=
        /**=0A=
         * =E5=88=A0=E9=99=A4=E6=A0=87=E7=AD=BE=0A=
         * */=0A=
        oBlog_code.DelTag =3D function(obj) {=0A=
            $(obj).parent("span").remove();=0A=
            var delVal =3D $(obj).siblings("span").text();=0A=
            newVal =3D newVal.substring(0,newVal.length-1);=0A=
            if(newVal.indexOf(delVal) !=3D -1){=0A=
                var newValArr =3D newVal.split(',');=0A=
                for(var j =3D0;j<newValArr.length; j++){=0A=
                    if(delVal =3D=3D newValArr[j]){=0A=
                        newValArr.splice(j,1);=0A=
                    }=0A=
                }=0A=
                newVal =3D newValArr.join(',') + ',';=0A=
                $('#OrganTag').val(newVal);=0A=
            }=0A=
            i--;=0A=
        };=0A=
=0A=
        oBlog_code.Tag =3D function(Wrap,insert){=0A=
            var _this =3D this;=0A=
            $(document).delegate($(insert),'keydown',function()=0A=
            {=0A=
                _this.enterTag(Wrap,insert);=0A=
            });=0A=
            $(document).delegate(''+Wrap+' span a','click',function()=0A=
            {=0A=
                _this.DelTag(this);=0A=
            });=0A=
        };=0A=
        oBlog_code.Tag('#divSearchTags','#insertTag');=0A=
=0A=
    }).call(this);=0A=
});=0A=

------=_NextPart_000_0000_01D24418.73BB6310
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://csdnimg.cn/rabbit/tracking-ad/main.js?75eacd8

// Generated by CoffeeScript 1.8.0=0A=
=0A=
/*=0A=
 @file =E6=8E=A8=E5=B9=BF=E4=BD=8D=E8=B7=9F=E8=B8=AA=0A=
 @author =E6=9B=B9=E5=AE=87 <caoyu#at#csdn.net>=0A=
 @version 20130902=0A=
 */=0A=
=0A=
(function() {=0A=
  (function(definition, undef) {=0A=
    var $, exports, global, i;=0A=
    global =3D this;=0A=
    $ =3D global.jQuery;=0A=
    exports =3D {};=0A=
    definition(global, exports, $);=0A=
    if (global.csdn =3D=3D=3D undef) {=0A=
      global.csdn =3D exports;=0A=
    }=0A=
    for (i in exports) {=0A=
      global[i] =3D global.csdn[i] =3D exports[i];=0A=
    }=0A=
  })(function(global, exports, $, undef) {=0A=
    var iarr =3D [], _key=3D0;=0A=
    var ads, crossdomainGet, domReadyListener, done, findAllAds, =
linksContent, protocol, ref, s, trackingAd, viewedHeight;=0A=
    protocol =3D global.location.protocol.substr(0, 4) =3D=3D=3D 'http' =
? '' : 'http:';=0A=
    ref =3D global.document.referrer || '-';=0A=
    ads =3D [];=0A=
    viewedHeight =3D 0;=0A=
    domReadyListener =3D function() {=0A=
      var ad, groups, k, n, v, w, _i, _len, _ref, _ref1;=0A=
      n =3D 0;=0A=
      w =3D $(global).scroll(function() {=0A=
        if (!ads[0]) {=0A=
          return;=0A=
        }=0A=
        global.clearTimeout(n);=0A=
        return n =3D global.setTimeout(function() { =0A=
          var ad, top, _i, _len;=0A=
          top =3D w.scrollTop() || document.body.scrollTop || =
document.documentElement.scrollTop  + w.height();  =
//IE=E5=85=BC=E5=AE=B9=E9=97=AE=E9=A2=98=0A=
          if (top > viewedHeight) {=0A=
            viewedHeight =3D top;=0A=
            for (_i =3D 0, _len =3D ads.length; _i < _len; _i++) {=0A=
              ad =3D ads[_i];=0A=
              if (!(!ad.viewed && top >=3D ad.top)) {=0A=
                continue;=0A=
              }=0A=
              ad.viewed =3D true;=0A=
              crossdomainGet(ad.data(), true);=0A=
            }=0A=
          }=0A=
        }, 100);=0A=
      });=0A=
      groups =3D {};=0A=
      _ref =3D $('.tracking-ad,.csdn-tracking-statistics');=0A=
      for (_i =3D 0, _len =3D _ref.length; _i < _len; _i++) {=0A=
        ad =3D _ref[_i];=0A=
        k =3D $(ad).attr('data-mod');=0A=
        ((_ref1 =3D groups[k]) !=3D null ? _ref1.push(ad) : void 0) || =
(groups[k] =3D [ad]);=0A=
      }=0A=
      for (k in groups) {=0A=
        v =3D groups[k];=0A=
        trackingAd($(v));=0A=
      }=0A=
      return w.triggerHandler('scroll');=0A=
    };=0A=
=0A=
    /*=0A=
     =
=E8=B7=9F=E8=B8=AA=E6=8C=87=E5=AE=9A=E7=9A=84=E6=8E=A8=E5=B9=BF=E4=BD=8D=EF=
=BC=8C=E5=8C=85=E6=8B=AC=E6=9B=9D=E5=85=89=E5=92=8C=E7=82=B9=E5=87=BB=0A=
     @param {CSS Selector/jQuery Object/DOMElement/DOMElement[]} ele =
=E5=8C=85=E5=90=AB=E6=8E=A8=E5=B9=BF=E9=93=BE=E6=8E=A5=E7=9A=84=E6=8E=A8=E5=
=B9=BF=E4=BD=8D=E5=AE=B9=E5=99=A8=E6=A0=87=E7=AD=BE=0A=
     @param {Object} opts =E9=80=89=E9=A1=B9=EF=BC=8C=E5=A6=82=E4=B8=8B=0A=
     @param {String} opts.pid =
=E4=BA=A7=E5=93=81=E7=BA=BF=E6=A0=87=E8=AF=86=EF=BC=8C=E5=8F=AF=E9=80=89=EF=
=BC=8C=E9=BB=98=E8=AE=A4=E5=8F=96=E5=BD=93=E5=89=8D=E9=A1=B5=E5=9F=9F=E5=90=
=8D=E4=B8=ADfoo.csdn.net=E4=B8=AD=E7=9A=84foo=EF=BC=8C=E4=B8=8D=E4=BC=9A=E5=
=A4=84=E7=90=86=E4=B8=89=E7=BA=A7=E5=9F=9F=E5=90=8D=E7=9A=84=E6=83=85=E5=86=
=B5=0A=
     @param {String} opts.mod =
=E6=A8=A1=E5=9D=97id=EF=BC=8C=E5=BF=85=E9=A1=BB=0A=
     @param {String} opts.mtp =
=E6=A8=A1=E5=9D=97=E7=B1=BB=E5=9E=8B=EF=BC=8C=E5=8F=AF=E9=80=89=EF=BC=8C=E9=
=BB=98=E8=AE=A4=E4=BC=9A=E6=8E=A2=E6=B5=8B=E6=98=AF=E5=90=A6=E6=9C=89=E5=B8=
=A6=E9=93=BE=E6=8E=A5=E7=9A=84=E5=9B=BE=E7=89=87=EF=BC=8C=E5=A6=82=E6=9E=9C=
=E6=9C=89=E5=88=99=E6=98=AF3=E5=9B=BE=E7=89=87=EF=BC=8C=E5=90=A6=E5=88=99=
2=E6=96=87=E5=AD=97=0A=
     @param {String/RegExp} opts.trim =
=E5=AF=B9=E6=9C=80=E7=BB=88=E5=90=8D=E7=A7=B0=E5=81=9A=E8=BF=9B=E4=B8=80=E6=
=AD=A5=E8=A3=81=E5=89=AA=E7=9A=84=E6=AD=A3=E5=88=99=EF=BC=8C=E5=8F=AF=E9=80=
=89=EF=BC=8C=E5=A7=8B=E7=BB=88=E4=BC=9A=E5=85=88=E8=A3=81=E5=89=AA=E6=8E=89=
=E4=B8=A4=E8=BE=B9=E7=9A=84=E7=A9=BA=E7=99=BD=E5=AD=97=E7=AC=A6=0A=
     @param {CSS Selector} filter =
=E5=8F=AF=E9=80=89=EF=BC=8C=E5=AF=B9=E8=B7=9F=E8=B8=AA=E7=9A=84=E6=8E=A8=E5=
=B9=BF=E9=93=BE=E6=8E=A5=E8=BF=9B=E4=B8=80=E6=AD=A5=E8=BF=87=E6=BB=A4=EF=BC=
=8C=E8=BF=99=E9=87=8C=E5=B0=86=E5=8C=85=E5=90=AB=E9=82=A3=E4=BA=9Bclass=3D=
"foo"=E4=BD=86=E6=98=AF=E4=B8=8D=E5=8C=85=E6=8B=ACclass=3D"foo =
bar"=E7=9A=84=E9=93=BE=E6=8E=A5=0A=
     */=0A=
    trackingAd =3D exports.trackingAd =3D function(ele, opts) { =0A=
      var filter, mod, mtp, pid, trim, _ref,dsm;=0A=
      if (opts =3D=3D null) {=0A=
        opts =3D {};=0A=
      }=0A=
      if (typeof ele =3D=3D=3D 'string' || !ele instanceof $) {=0A=
        ele =3D $(ele);=0A=
      }=0A=
      pid =3D opts.pid || ele.attr('data-pid') || =
global.document.body.getAttribute('data-pid') || ((_ref =3D =
/(\w+)\.\w+\.\w+$/.exec(global.location.host)) !=3D null ? _ref[1] : =
void 0);=0A=
      mod =3D opts.mod || ele.attr('data-mod');=0A=
      blk =3D opts.blk || ele.attr("chg-blk");=0A=
      mtp =3D opts.mtp || ele.attr('data-mtp') || ($('a img', ele)[0] ? =
3 : 2);=0A=
      trim =3D opts.trim || ele.attr('data-trim');=0A=
      //=E6=8F=90=E4=BA=A4=E6=A8=A1=E5=BC=8F =
=E9=BB=98=E8=AE=A4GET=E6=A8=A1=E5=BC=8F=0A=
      dsm =3D typeof (dsm=3Dopts.dsm || ele.attr('data-dsm') || 'get') =
=3D=3D=3D "string" ? (dsm.toLowerCase()) : 'get'; =0A=
      =0A=
      if (typeof trim =3D=3D=3D 'string' && trim.charAt(0) =3D=3D=3D =
'/') {=0A=
        trim =3D trim.split('/');=0A=
        trim =3D new RegExp(trim.slice(1, -1), trim.slice(-1));=0A=
      }=0A=
=0A=
      filter =3D opts.filter || ele.attr('data-filter') || '';=0A=
      return findAllAds(ele, filter, function(links) {=0A=
        var ad, con;=0A=
        con =3D linksContent(mtp, trim, links);=0A=
        ad =3D {=0A=
          top: ele.offset().top,=0A=
          ele: ele,=0A=
          viewed: false,=0A=
          data: function() {=0A=
            var _ref1;=0A=
            return {=0A=
              uid: ((_ref1 =3D /(; =
)?(UserName|_javaeye_cookie_id_)=3D([^;]+)/.exec(global.document.cookie))=
 !=3D null ? _ref1[3] : void 0) || '-',=0A=
              ref: ref,=0A=
              pid: pid,=0A=
              mod: mod,=0A=
              dsm: dsm,=0A=
              mtp: mtp,=0A=
              con: con,=0A=
              ck: '-'=0A=
            };=0A=
          }=0A=
        };=0A=
        ads.push(ad);=0A=
        if (viewedHeight > ad.top) {=0A=
          $(global).triggerHandler('scroll');=0A=
        }=0A=
        links.each(function() {=0A=
          if (blk =3D=3D=3D "0") return;=0A=
          if (this.target =3D=3D=3D '') {=0A=
            return this.target =3D '_blank';=0A=
          }=0A=
        });=0A=
        return links.click(function() {=0A=
          var d;=0A=
          if (this.href && this.innerHTML.replace(/^\s+|\s+$/g, '')) {=0A=
            d =3D ad.data();=0A=
            d.ck =3D linksContent(mtp, trim, $(this));=0A=
            crossdomainGet(d);=0A=
          }=0A=
        });=0A=
      });=0A=
    };=0A=
    findAllAds =3D function(cont, filter, callback) {=0A=
      var count, iframes, links;=0A=
      links =3D $('a' + filter, cont); =0A=
      iframes =3D $('iframe', cont);=0A=
      if (iframes[0]) {=0A=
        count =3D iframes.length;=0A=
        return iframes.each(function() {=0A=
          var ifr, listener;=0A=
          ifr =3D $(this);=0A=
          listener =3D function() {=0A=
            if (ifr =3D=3D=3D null) {=0A=
              return;=0A=
            }=0A=
            links =3D links.add(ifr.contents().find('a' + filter));=0A=
            ifr =3D null;=0A=
            count--;=0A=
            if (count =3D=3D=3D 0) {=0A=
              return callback(links);=0A=
            }=0A=
          };=0A=
          return ifr.load(listener);=0A=
        });=0A=
      } else {=0A=
        return callback(links);=0A=
      }=0A=
    };=0A=
    linksContent =3D function(mtp, trim, ele) {=0A=
      return ele.map(function() {=0A=
        var img, text;=0A=
        if (mtp =3D=3D=3D 3) {=0A=
          img =3D $('img', this)[0];=0A=
          if (img) {=0A=
            text =3D img.title || img.alt || img.src;=0A=
          }=0A=
        }=0A=
        if (!text) {=0A=
          text =3D this.innerHTML.replace(/<[^>]+>/g, =
'').replace(/^\s+|\s+$/g, '') || this.title || this.alt || =
this.innerHTML.replace(/^\s+|\s+$/g, '');=0A=
        }=0A=
          =0A=
        if (trim) {=0A=
          text =3D (text + '').replace(trim, '');=0A=
        }=0A=
        if (this.attributes['strategy'])=0A=
        {=0A=
            return text + ',' + this.href + ',' + =
this.attributes['strategy'].nodeValue;=0A=
        }=0A=
        else=0A=
        {=0A=
            return text + ',' + this.href;=0A=
        }=0A=
=0A=
      }).get().join(';');=0A=
    };=0A=
    crossdomainGet =3D function(data, isA) {=0A=
      =
//=E6=B5=8B=E8=AF=95=E5=9C=B0=E5=9D=80=E5=92=8C=E7=9C=9F=E5=AE=9E=E8=AE=BF=
=E9=97=AE=E5=9C=B0=E5=9D=80=EF=BC=8C=E6=B5=8B=E8=AF=95=E5=86=85=E5=AE=B9=E8=
=87=AA=E5=B7=B1=E6=9C=AC=E5=9C=B0=E6=A8=A1=E4=BB=BF=0A=
      var _url =3D protocol + '//dc.csdn.net/re?dataType=3Dtext',dsm;=0A=
      var str =3D '';=0A=
      if (!data.con) {=0A=
        return;=0A=
      }=0A=
      dsm =3D data['dsm']; =0A=
      data[Math.random() * 10000 | 0] =3D '';=0A=
      data['x-acl-token'] =3D 'status_js_dkuyqthzbajmncbsb_token';=0A=
      //=E5=A4=84=E7=90=86body=E5=AD=97=E7=AC=A6=E6=A0=BC=E5=BC=8F=0A=
      if((data['dsm']).toLowerCase()=3D=3D=3D"post")=0A=
      {=0A=
         str =3D JSON.stringify(data);=0A=
         str =3D ("["+str+"]").toString();=0A=
      }=0A=
      if(dsm=3D=3D=3D"get")=0A=
      {   =0A=
          if (isA) {=0A=
            var ik =3D iarr.push(new Image()) - 1;=0A=
            iarr[ik].onload =3D iarr[ik].onerror =3D function () {=0A=
              var _a =3D ik;=0A=
              iarr[_a].onload =3D iarr[_a].onerror =3D null;=0A=
              iarr[_a].removeAttribute("src");=0A=
              return iarr[_a] =3D null;=0A=
            }=0A=
            return iarr[ik].src =3D protocol + '//dc.csdn.net/re?' + =
$.param(data);=0A=
          } else {=0A=
            var i;=0A=
            i =3D new Image();=0A=
            i.onload =3D i.onerror =3D function() {=0A=
              i.onload =3D i.onerror =3D null;=0A=
              i.removeAttribute('src');=0A=
              return i =3D null;=0A=
            };=0A=
            return i.src =3D protocol + '//dc.csdn.net/re?' + =
$.param(data);=0A=
          }=0A=
      }=0A=
      if(dsm=3D=3D=3D"post")=0A=
      {    =0A=
           $.ajax({=0A=
               url:_url,=0A=
               type:'post',=0A=
               async:true,=0A=
               contentType:'text/plain',=0A=
               dataType:'json',=0A=
               xhrFields:{=0A=
                 withCredentials:true=0A=
               },=0A=
               success:function(reponse){=0A=
               },=0A=
               data:str,=0A=
               error:function(){=0A=
                   =
console.error('=E6=9C=8D=E5=8A=A1=E5=99=A8=E6=9B=9D=E5=85=89=E9=94=99=E8=AF=
=AF=EF=BC=81')=0A=
               }=0A=
           });=0A=
      } =0A=
    };=0A=
    if ($ =3D=3D=3D undef) {=0A=
      done =3D false;=0A=
      s =3D document.createElement('script');=0A=
      s.type =3D 'text/javascript';=0A=
      s.charset =3D 'utf-8';=0A=
      current_protocol =3D location.protocol;=0A=
      s.src =3D =
current_protocol+'//c.csdnimg.cn/public/common/libs/jquery/jquery-1.11.1.=
min.js';=0A=
      s.onload =3D s.onreadystatechange =3D function() {=0A=
        if (!done && (!this.readyState || this.readyState =3D=3D=3D =
'loaded' || this.readyState =3D=3D=3D 'complete')) {=0A=
          done =3D true;=0A=
          global.jQuery.noConflict();=0A=
          $ =3D global.jQuery;=0A=
          //=E8=AE=BE=E7=BD=AEIE=E8=B7=A8=E5=9F=9F=E8=AE=BF=E9=97=AE =
=E5=85=BC=E5=AE=B9=E5=88=B0=E5=8C=85=E5=90=AB9=E4=BB=A5=E4=B8=8B=0A=
          if(window.navigator.appVersion.match(/MSIE =
(\d)*/i)&&Number(window.navigator.appVersion.match(/MSIE =
(\d)*/i)[1],10)<=3D9)=0A=
          {=0A=
            $.support.cors =3D true;=0A=
          }=0A=
          $(domReadyListener);=0A=
          return s.onload =3D s.onreadystatechange =3D null;=0A=
        }=0A=
      };=0A=
      document.getElementsByTagName('head')[0].insertBefore(s, null);=0A=
    } else {=0A=
      $(domReadyListener);=0A=
    }=0A=
  });=0A=
=0A=
}).call(this);=0A=
=0A=
///#//// sourceMappingURL=3Dmain.js.map     ///=0A=

------=_NextPart_000_0000_01D24418.73BB6310--
